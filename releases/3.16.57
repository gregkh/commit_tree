commit e472f29ebd2473739d0e5830641196f19b14637e
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Jun 16 22:22:52 2018 +0100

    Linux 3.16.57

commit 331e9f64467eb56725ad55fcf0043dca2a0339ff
Author: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date:   Thu Mar 29 19:05:29 2018 +0900

    net: Fix untag for vlan packets without ethernet header
    
    commit ae4745730cf8e693d354ccd4dbaf59ea440c09a9 upstream.
    
    In some situation vlan packets do not have ethernet headers. One example
    is packets from tun devices. Users can specify vlan protocol in tun_pi
    field instead of IP protocol, and skb_vlan_untag() attempts to untag such
    packets.
    
    skb_vlan_untag() (more precisely, skb_reorder_vlan_header() called by it)
    however did not expect packets without ethernet headers, so in such a case
    size argument for memmove() underflowed and triggered crash.
    
    ====
    BUG: unable to handle kernel paging request at ffff8801cccb8000
    IP: __memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43
    PGD 9cee067 P4D 9cee067 PUD 1d9401063 PMD 1cccb7063 PTE 2810100028101
    Oops: 000b [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 17663 Comm: syz-executor2 Not tainted 4.16.0-rc7+ #368
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43
    RSP: 0018:ffff8801cc046e28 EFLAGS: 00010287
    RAX: ffff8801ccc244c4 RBX: fffffffffffffffe RCX: fffffffffff6c4c2
    RDX: fffffffffffffffe RSI: ffff8801cccb7ffc RDI: ffff8801cccb8000
    RBP: ffff8801cc046e48 R08: ffff8801ccc244be R09: ffffed0039984899
    R10: 0000000000000001 R11: ffffed0039984898 R12: ffff8801ccc244c4
    R13: ffff8801ccc244c0 R14: ffff8801d96b7c06 R15: ffff8801d96b7b40
    FS:  00007febd562d700(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffff8801cccb8000 CR3: 00000001ccb2f006 CR4: 00000000001606e0
    DR0: 0000000020000000 DR1: 0000000020000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600
    Call Trace:
     memmove include/linux/string.h:360 [inline]
     skb_reorder_vlan_header net/core/skbuff.c:5031 [inline]
     skb_vlan_untag+0x470/0xc40 net/core/skbuff.c:5061
     __netif_receive_skb_core+0x119c/0x3460 net/core/dev.c:4460
     __netif_receive_skb+0x2c/0x1b0 net/core/dev.c:4627
     netif_receive_skb_internal+0x10b/0x670 net/core/dev.c:4701
     netif_receive_skb+0xae/0x390 net/core/dev.c:4725
     tun_rx_batched.isra.50+0x5ee/0x870 drivers/net/tun.c:1555
     tun_get_user+0x299e/0x3c20 drivers/net/tun.c:1962
     tun_chr_write_iter+0xb9/0x160 drivers/net/tun.c:1990
     call_write_iter include/linux/fs.h:1782 [inline]
     new_sync_write fs/read_write.c:469 [inline]
     __vfs_write+0x684/0x970 fs/read_write.c:482
     vfs_write+0x189/0x510 fs/read_write.c:544
     SYSC_write fs/read_write.c:589 [inline]
     SyS_write+0xef/0x220 fs/read_write.c:581
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x454879
    RSP: 002b:00007febd562cc68 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007febd562d6d4 RCX: 0000000000454879
    RDX: 0000000000000157 RSI: 0000000020000180 RDI: 0000000000000014
    RBP: 000000000072bea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 00000000000006b0 R14: 00000000006fc120 R15: 0000000000000000
    Code: 90 90 90 90 90 90 90 48 89 f8 48 83 fa 20 0f 82 03 01 00 00 48 39 fe 7d 0f 49 89 f0 49 01 d0 49 39 f8 0f 8f 9f 00 00 00 48 89 d1 <f3> a4 c3 48 81 fa a8 02 00 00 72 05 40 38 fe 74 3b 48 83 ea 20
    RIP: __memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43 RSP: ffff8801cc046e28
    CR2: ffff8801cccb8000
    ====
    
    We don't need to copy headers for packets which do not have preceding
    headers of vlan headers, so skip memmove() in that case.
    
    Fixes: 4bbb3e0e8239 ("net: Fix vlan untag for bridge and vlan_dev with reorder_hdr off")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ead30c76b8a938a934cf8562a3408ce779706e6a
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sat Mar 3 23:29:03 2018 +0100

    mtd: jedec_probe: Fix crash in jedec_read_mfr()
    
    commit 87a73eb5b56fd6e07c8e499fe8608ef2d8912b82 upstream.
    
    It turns out that the loop where we read manufacturer
    jedec_read_mfd() can under some circumstances get a
    CFI_MFR_CONTINUATION repeatedly, making the loop go
    over all banks and eventually hit the end of the
    map and crash because of an access violation:
    
    Unable to handle kernel paging request at virtual address c4980000
    pgd = (ptrval)
    [c4980000] *pgd=03808811, *pte=00000000, *ppte=00000000
    Internal error: Oops: 7 [#1] PREEMPT ARM
    CPU: 0 PID: 1 Comm: swapper Not tainted 4.16.0-rc1+ #150
    Hardware name: Gemini (Device Tree)
    PC is at jedec_probe_chip+0x6ec/0xcd0
    LR is at 0x4
    pc : [<c03a2bf4>]    lr : [<00000004>]    psr: 60000013
    sp : c382dd18  ip : 0000ffff  fp : 00000000
    r10: c0626388  r9 : 00020000  r8 : c0626340
    r7 : 00000000  r6 : 00000001  r5 : c3a71afc  r4 : c382dd70
    r3 : 00000001  r2 : c4900000  r1 : 00000002  r0 : 00080000
    Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 0000397f  Table: 00004000  DAC: 00000053
    Process swapper (pid: 1, stack limit = 0x(ptrval))
    
    Fix this by breaking the loop with a return 0 if
    the offset exceeds the map size.
    
    Fixes: 5c9c11e1c47c ("[MTD] [NOR] Add support for flash chips with ID in bank other than 0")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6f5569569f8cb7f00dc190528ad7e33414b459ad
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Mar 25 11:39:05 2018 +0300

    RDMA/ucma: Check that device exists prior to accessing it
    
    commit c8d3bcbfc5eab3f01cf373d039af725f3b488813 upstream.
    
    Ensure that device exists prior to accessing its properties.
    
    Reported-by: <syzbot+71655d44855ac3e76366@syzkaller.appspotmail.com>
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c8ca6d9b7d805f3d23e6565efb9ea8b463a91ec8
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Mar 25 11:23:55 2018 +0300

    RDMA/ucma: Check that device is connected prior to access it
    
    commit 4b658d1bbc16605330694bb3ef2570c465ef383d upstream.
    
    Add missing check that device is connected prior to access it.
    
    [   55.358652] BUG: KASAN: null-ptr-deref in rdma_init_qp_attr+0x4a/0x2c0
    [   55.359389] Read of size 8 at addr 00000000000000b0 by task qp/618
    [   55.360255]
    [   55.360432] CPU: 1 PID: 618 Comm: qp Not tainted 4.16.0-rc1-00071-gcaf61b1b8b88 #91
    [   55.361693] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [   55.363264] Call Trace:
    [   55.363833]  dump_stack+0x5c/0x77
    [   55.364215]  kasan_report+0x163/0x380
    [   55.364610]  ? rdma_init_qp_attr+0x4a/0x2c0
    [   55.365238]  rdma_init_qp_attr+0x4a/0x2c0
    [   55.366410]  ucma_init_qp_attr+0x111/0x200
    [   55.366846]  ? ucma_notify+0xf0/0xf0
    [   55.367405]  ? _get_random_bytes+0xea/0x1b0
    [   55.367846]  ? urandom_read+0x2f0/0x2f0
    [   55.368436]  ? kmem_cache_alloc_trace+0xd2/0x1e0
    [   55.369104]  ? refcount_inc_not_zero+0x9/0x60
    [   55.369583]  ? refcount_inc+0x5/0x30
    [   55.370155]  ? rdma_create_id+0x215/0x240
    [   55.370937]  ? _copy_to_user+0x4f/0x60
    [   55.371620]  ? mem_cgroup_commit_charge+0x1f5/0x290
    [   55.372127]  ? _copy_from_user+0x5e/0x90
    [   55.372720]  ucma_write+0x174/0x1f0
    [   55.373090]  ? ucma_close_id+0x40/0x40
    [   55.373805]  ? __lru_cache_add+0xa8/0xd0
    [   55.374403]  __vfs_write+0xc4/0x350
    [   55.374774]  ? kernel_read+0xa0/0xa0
    [   55.375173]  ? fsnotify+0x899/0x8f0
    [   55.375544]  ? fsnotify_unmount_inodes+0x170/0x170
    [   55.376689]  ? __fsnotify_update_child_dentry_flags+0x30/0x30
    [   55.377522]  ? handle_mm_fault+0x174/0x320
    [   55.378169]  vfs_write+0xf7/0x280
    [   55.378864]  SyS_write+0xa1/0x120
    [   55.379270]  ? SyS_read+0x120/0x120
    [   55.379643]  ? mm_fault_error+0x180/0x180
    [   55.380071]  ? task_work_run+0x7d/0xd0
    [   55.380910]  ? __task_pid_nr_ns+0x120/0x140
    [   55.381366]  ? SyS_read+0x120/0x120
    [   55.381739]  do_syscall_64+0xeb/0x250
    [   55.382143]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   55.382841] RIP: 0033:0x7fc2ef803e99
    [   55.383227] RSP: 002b:00007fffcc5f3be8 EFLAGS: 00000217 ORIG_RAX: 0000000000000001
    [   55.384173] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fc2ef803e99
    [   55.386145] RDX: 0000000000000057 RSI: 0000000020000080 RDI: 0000000000000003
    [   55.388418] RBP: 00007fffcc5f3c00 R08: 0000000000000000 R09: 0000000000000000
    [   55.390542] R10: 0000000000000000 R11: 0000000000000217 R12: 0000000000400480
    [   55.392916] R13: 00007fffcc5f3cf0 R14: 0000000000000000 R15: 0000000000000000
    [   55.521088] Code: e5 4d 1e ff 48 89 df 44 0f b6 b3 b8 01 00 00 e8 65 50 1e ff 4c 8b 2b 49
    8d bd b0 00 00 00 e8 56 50 1e ff 41 0f b6 c6 48 c1 e0 04 <49> 03 85 b0 00 00 00 48 8d 78 08
    48 89 04 24 e8 3a 4f 1e ff 48
    [   55.525980] RIP: rdma_init_qp_attr+0x52/0x2c0 RSP: ffff8801e2c2f9d8
    [   55.532648] CR2: 00000000000000b0
    [   55.534396] ---[ end trace 70cee64090251c0b ]---
    
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Fixes: d541e45500bd ("IB/core: Convert ah_attr from OPA to IB when copying to user")
    Reported-by: <syzbot+7b62c837c2516f8f38c8@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f480591cb6a705b8eef7eca60d39e64e1d5d9e8
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Tue Mar 27 14:41:18 2018 +0300

    net/mlx4_en: Fix mixed PFC and Global pause user control requests
    
    commit 6e8814ceb7e8f468659ef9253bd212c07ae19584 upstream.
    
    Global pause and PFC configuration should be mutually exclusive (i.e. only
    one of them at most can be set). However, once PFC was turned off,
    driver automatically turned Global pause on. This is a bug.
    
    Fix the driver behaviour to turn off PFC/Global once the user turned the
    other on.
    
    This also fixed a weird behaviour that at a current time, the profile
    had both PFC and global pause configuration turned on, which is
    Hardware-wise impossible and caused returning false positive indication
    to query tools.
    
    In addition, fix error code when setting global pause or PFC to change
    metadata only upon successful change.
    
    Also, removed useless debug print.
    
    Fixes: af7d51852631 ("net/mlx4_en: Add DCB PFC support through CEE netlink commands")
    Fixes: c27a02cd94d6 ("mlx4_en: Add driver for Mellanox ConnectX 10GbE NIC")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16:
     - Drop changes to mlx4_en_dcbnl_set_all()
     - Don't call mlx4_en_update_pfc_stats_bitmap()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8340856ac8f1c87ed088f55d125141f6f95d6a20
Author: Ivan Vecera <ivecera@redhat.com>
Date:   Mon Sep 8 18:46:53 2014 +0200

    net/mlx4_en: do not ignore autoneg in mlx4_en_set_pauseparam()
    
    commit 278d436a476f69fc95d5c82bf61b6c2d02f4d44e upstream.
    
    The driver does not support pause autonegotiation so it should return
    -EINVAL when the function is called with non-zero autoneg.
    
    Cc: Amir Vadai <amirv@mellanox.com>
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c7fbd6a6f68585fbdfa7171858d49a4ece13a281
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 26 08:08:07 2018 -0700

    net: fix possible out-of-bound read in skb_network_protocol()
    
    commit 1dfe82ebd7d8fd43dba9948fdfb31f145014baa0 upstream.
    
    skb mac header is not necessarily set at the time skb_network_protocol()
    is called. Use skb->data instead.
    
    BUG: KASAN: slab-out-of-bounds in skb_network_protocol+0x46b/0x4b0 net/core/dev.c:2739
    Read of size 2 at addr ffff8801b3097a0b by task syz-executor5/14242
    
    CPU: 1 PID: 14242 Comm: syz-executor5 Not tainted 4.16.0-rc6+ #280
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x24d lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x23c/0x360 mm/kasan/report.c:412
     __asan_report_load_n_noabort+0xf/0x20 mm/kasan/report.c:443
     skb_network_protocol+0x46b/0x4b0 net/core/dev.c:2739
     harmonize_features net/core/dev.c:2924 [inline]
     netif_skb_features+0x509/0x9b0 net/core/dev.c:3011
     validate_xmit_skb+0x81/0xb00 net/core/dev.c:3084
     validate_xmit_skb_list+0xbf/0x120 net/core/dev.c:3142
     packet_direct_xmit+0x117/0x790 net/packet/af_packet.c:256
     packet_snd net/packet/af_packet.c:2944 [inline]
     packet_sendmsg+0x3aed/0x60b0 net/packet/af_packet.c:2969
     sock_sendmsg_nosec net/socket.c:629 [inline]
     sock_sendmsg+0xca/0x110 net/socket.c:639
     ___sys_sendmsg+0x767/0x8b0 net/socket.c:2047
     __sys_sendmsg+0xe5/0x210 net/socket.c:2081
    
    Fixes: 19acc327258a ("gso: Handle Trans-Ether-Bridging protocol in skb_network_protocol()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Pravin B Shelar <pshelar@ovn.org>
    Reported-by: Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 07604df02cc58419e1a7b94282fa283760ddd9d2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 27 16:07:52 2018 +0300

    ALSA: pcm: potential uninitialized return values
    
    commit 5607dddbfca774fb38bffadcb077fe03aa4ac5c6 upstream.
    
    Smatch complains that "tmp" can be uninitialized if we do a zero size
    write.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6d05470a0ef1cebb630c64ce073a20a741616ded
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:47 2018 +0800

    bonding: process the err returned by dev_set_allmulti properly in bond_enslave
    
    commit 9f5a90c107741b864398f4ac0014711a8c1d8474 upstream.
    
    When dev_set_promiscuity(1) succeeds but dev_set_allmulti(1) fails,
    dev_set_promiscuity(-1) should be done before going to the err path.
    Otherwise, dev->promiscuity will leak.
    
    Fixes: 7e1a1ac1fbaa ("bonding: Check return of dev_set_promiscuity/allmulti")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d75d599c634e68f08618d2f4e9c2c13e25c86d71
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:46 2018 +0800

    bonding: move dev_mc_sync after master_upper_dev_link in bond_enslave
    
    commit ae42cc62a9f07f1f6979054ed92606b9c30f4a2e upstream.
    
    Beniamino found a crash when adding vlan as slave of bond which is also
    the parent link:
    
      ip link add bond1 type bond
      ip link set bond1 up
      ip link add link bond1 vlan1 type vlan id 80
      ip link set vlan1 master bond1
    
    The call trace is as below:
    
      [<ffffffffa850842a>] queued_spin_lock_slowpath+0xb/0xf
      [<ffffffffa8515680>] _raw_spin_lock+0x20/0x30
      [<ffffffffa83f6f07>] dev_mc_sync+0x37/0x80
      [<ffffffffc08687dc>] vlan_dev_set_rx_mode+0x1c/0x30 [8021q]
      [<ffffffffa83efd2a>] __dev_set_rx_mode+0x5a/0xa0
      [<ffffffffa83f7138>] dev_mc_sync_multiple+0x78/0x80
      [<ffffffffc084127c>] bond_enslave+0x67c/0x1190 [bonding]
      [<ffffffffa8401909>] do_setlink+0x9c9/0xe50
      [<ffffffffa8403bf2>] rtnl_newlink+0x522/0x880
      [<ffffffffa8403ff7>] rtnetlink_rcv_msg+0xa7/0x260
      [<ffffffffa8424ecb>] netlink_rcv_skb+0xab/0xc0
      [<ffffffffa83fe498>] rtnetlink_rcv+0x28/0x30
      [<ffffffffa8424850>] netlink_unicast+0x170/0x210
      [<ffffffffa8424bf8>] netlink_sendmsg+0x308/0x420
      [<ffffffffa83cc396>] sock_sendmsg+0xb6/0xf0
    
    This is actually a dead lock caused by sync slave hwaddr from master when
    the master is the slave's 'slave'. This dead loop check is actually done
    by netdev_master_upper_dev_link. However, Commit 1f718f0f4f97 ("bonding:
    populate neighbour's private on enslave") moved it after dev_mc_sync.
    
    This patch is to fix it by moving dev_mc_sync after master_upper_dev_link,
    so that this loop check would be earlier than dev_mc_sync. It also moves
    if (mode == BOND_MODE_8023AD) into if (!bond_uses_primary) clause as an
    improvement.
    
    Note team driver also has this issue, I will fix it in another patch.
    
    Fixes: 1f718f0f4f97 ("bonding: populate neighbour's private on enslave")
    Reported-by: Beniamino Galvani <bgalvani@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e370a644c520cddfadc201c0d55c18e9c48cdce7
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:45 2018 +0800

    bonding: fix the err path for dev hwaddr sync in bond_enslave
    
    commit 5c78f6bfae2b10ff70e21d343e64584ea6280c26 upstream.
    
    vlan_vids_add_by_dev is called right after dev hwaddr sync, so on
    the err path it should unsync dev hwaddr. Otherwise, the slave
    dev's hwaddr will never be unsync when this err happens.
    
    Fixes: 1ff412ad7714 ("bonding: change the bond's vlan syncing functions with the standard ones")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6a24283f2b024b374d21f69667eda45f0d632485
Author: Stefan Roese <sr@denx.de>
Date:   Mon Mar 26 16:10:21 2018 +0200

    ALSA: pcm: Use dma_bytes as size parameter in dma_mmap_coherent()
    
    commit 9066ae7ff5d89c0b5daa271e2d573540097a94fa upstream.
    
    When trying to use the driver (e.g. aplay *.wav), the 4MiB DMA buffer
    will get mmapp'ed in 16KiB chunks. But this fails with the 2nd 16KiB
    area, as the page offset is outside of the VMA range (size), which is
    currently used as size parameter in snd_pcm_lib_default_mmap(). By
    using the DMA buffer size (dma_bytes) instead, the complete DMA buffer
    can be mmapp'ed and the issue is fixed.
    
    This issue was detected on an ARM platform (TI AM57xx) using the RME
    HDSP MADI PCIe soundcard.
    
    Fixes: 657b1989dacf ("ALSA: pcm - Use dma_mmap_coherent() if available")
    Signed-off-by: Stefan Roese <sr@denx.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 57c49e06b8e20bc24c808c2cbee609d1267e9626
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Fri Mar 23 14:47:30 2018 +0100

    ipv6: the entire IPv6 header chain must fit the first fragment
    
    commit 10b8a3de603df7b96004179b1b33b1708c76d144 upstream.
    
    While building ipv6 datagram we currently allow arbitrary large
    extheaders, even beyond pmtu size. The syzbot has found a way
    to exploit the above to trigger the following splat:
    
    kernel BUG at ./include/linux/skbuff.h:2073!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 4230 Comm: syzkaller672661 Not tainted 4.16.0-rc2+ #326
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:__skb_pull include/linux/skbuff.h:2073 [inline]
    RIP: 0010:__ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636
    RSP: 0018:ffff8801bc18f0f0 EFLAGS: 00010293
    RAX: ffff8801b17400c0 RBX: 0000000000000738 RCX: ffffffff84f01828
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8801b415ac18
    RBP: ffff8801bc18f360 R08: ffff8801b4576844 R09: 0000000000000000
    R10: ffff8801bc18f380 R11: ffffed00367aee4e R12: 00000000000000d6
    R13: ffff8801b415a740 R14: dffffc0000000000 R15: ffff8801b45767c0
    FS:  0000000001535880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000002000b000 CR3: 00000001b4123001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      ip6_finish_skb include/net/ipv6.h:969 [inline]
      udp_v6_push_pending_frames+0x269/0x3b0 net/ipv6/udp.c:1073
      udpv6_sendmsg+0x2a96/0x3400 net/ipv6/udp.c:1343
      inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:764
      sock_sendmsg_nosec net/socket.c:630 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:640
      ___sys_sendmsg+0x320/0x8b0 net/socket.c:2046
      __sys_sendmmsg+0x1ee/0x620 net/socket.c:2136
      SYSC_sendmmsg net/socket.c:2167 [inline]
      SyS_sendmmsg+0x35/0x60 net/socket.c:2162
      do_syscall_64+0x280/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x4404c9
    RSP: 002b:00007ffdce35f948 EFLAGS: 00000217 ORIG_RAX: 0000000000000133
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004404c9
    RDX: 0000000000000003 RSI: 0000000020001f00 RDI: 0000000000000003
    RBP: 00000000006cb018 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 0000000020000080 R11: 0000000000000217 R12: 0000000000401df0
    R13: 0000000000401e80 R14: 0000000000000000 R15: 0000000000000000
    Code: ff e8 1d 5e b9 fc e9 15 e9 ff ff e8 13 5e b9 fc e9 44 e8 ff ff e8 29
    5e b9 fc e9 c0 e6 ff ff e8 3f f3 80 fc 0f 0b e8 38 f3 80 fc <0f> 0b 49 8d
    87 80 00 00 00 4d 8d 87 84 00 00 00 48 89 85 20 fe
    RIP: __skb_pull include/linux/skbuff.h:2073 [inline] RSP: ffff8801bc18f0f0
    RIP: __ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636 RSP:
    ffff8801bc18f0f0
    
    As stated by RFC 7112 section 5:
    
       When a host fragments an IPv6 datagram, it MUST include the entire
       IPv6 Header Chain in the First Fragment.
    
    So this patch addresses the issue dropping datagrams with excessive
    extheader length. It also updates the error path to report to the
    calling socket nonnegative pmtu values.
    
    The issue apparently predates git history.
    
    v1 -> v2: cleanup error path, as per Eric's suggestion
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+91e6f9932ff122fa4410@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: Adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b0eae35358b5a09ab9ccd1aa2fde1cfec30f2c2e
Author: Alexander Potapenko <glider@google.com>
Date:   Fri Mar 23 13:49:02 2018 +0100

    netlink: make sure nladdr has correct size in netlink_connect()
    
    commit 7880287981b60a6808f39f297bb66936e8bdf57a upstream.
    
    KMSAN reports use of uninitialized memory in the case when |alen| is
    smaller than sizeof(struct sockaddr_nl), and therefore |nladdr| isn't
    fully copied from the userspace.
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Fixes: 1da177e4c3f41524 ("Linux-2.6.12-rc2")
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e01726fb41b9e9c0c5f3f78144ea8b7de0f90244
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Mar 24 10:43:26 2018 +0100

    tty: vt: fix up tabstops properly
    
    commit f1869a890cdedb92a3fab969db5d0fd982850273 upstream.
    
    Tabs on a console with long lines do not wrap properly, so correctly
    account for the line length when computing the tab placement location.
    
    Reported-by: James Holderness <j4_james@hotmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f821c18fcfbb818fd2d682429ceaa202b2cd7e51
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Thu Mar 22 00:21:32 2018 +0100

    batman-adv: fix packet loss for broadcasted DHCP packets to a server
    
    commit a752c0a4524889cdc0765925258fd1fd72344100 upstream.
    
    DHCP connectivity issues can currently occur if the following conditions
    are met:
    
    1) A DHCP packet from a client to a server
    2) This packet has a multicast destination
    3) This destination has a matching entry in the translation table
       (FF:FF:FF:FF:FF:FF for IPv4, 33:33:00:01:00:02/33:33:00:01:00:03
        for IPv6)
    4) The orig-node determined by TT for the multicast destination
       does not match the orig-node determined by best-gateway-selection
    
    In this case the DHCP packet will be dropped.
    
    The "gateway-out-of-range" check is supposed to only be applied to
    unicasted DHCP packets to a specific DHCP server.
    
    In that case dropping the the unicasted frame forces the client to
    retry via a broadcasted one, but now directed to the new best
    gateway.
    
    A DHCP packet with broadcast/multicast destination is already ensured to
    always be delivered to the best gateway. Dropping a multicasted
    DHCP packet here will only prevent completing DHCP as there is no
    other fallback.
    
    So far, it seems the unicast check was implicitly performed by
    expecting the batadv_transtable_search() to return NULL for multicast
    destinations. However, a multicast address could have always ended up in
    the translation table and in fact is now common.
    
    To fix this potential loss of a DHCP client-to-server packet to a
    multicast address this patch adds an explicit multicast destination
    check to reliably bail out of the gateway-out-of-range check for such
    destinations.
    
    The issue and fix were tested in the following three node setup:
    
    - Line topology, A-B-C
    - A: gateway client, DHCP client
    - B: gateway server, hop-penalty increased: 30->60, DHCP server
    - C: gateway server, code modifications to announce FF:FF:FF:FF:FF:FF
    
    Without this patch, A would never transmit its DHCP Discover packet
    due to an always "out-of-range" condition. With this patch,
    a full DHCP handshake between A and B was possible again.
    
    Fixes: be7af5cf9cae ("batman-adv: refactoring gateway handling code")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [bwh: Backported to 3.16: Drop redundant change to initialisation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ef39082c2af22444ab4ee317b9e0f8d1745a97a5
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Tue Mar 20 03:13:27 2018 +0100

    batman-adv: fix multicast-via-unicast transmission with AP isolation
    
    commit f8fb3419ead44f9a3136995acd24e35da4525177 upstream.
    
    For multicast frames AP isolation is only supposed to be checked on
    the receiving nodes and never on the originating one.
    
    Furthermore, the isolation or wifi flag bits should only be intepreted
    as such for unicast and never multicast TT entries.
    
    By injecting flags to the multicast TT entry claimed by a single
    target node it was verified in tests that this multicast address
    becomes unreachable, leading to packet loss.
    
    Omitting the "src" parameter to the batadv_transtable_search() call
    successfully skipped the AP isolation check and made the target
    reachable again.
    
    Fixes: 1d8ab8d3c176 ("batman-adv: Modified forwarding behaviour for multicast packets")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1824475477aaeb6a769bbae34e7403a2652b63f1
Author: Petr Machata <petrm@mellanox.com>
Date:   Thu Mar 22 19:53:33 2018 +0200

    ip_tunnel: Emit events for post-register MTU changes
    
    commit f6cc9c054e77b9a28d4594bcc201697edb21dfd2 upstream.
    
    For tunnels created with IFLA_MTU, MTU of the netdevice is set by
    rtnl_create_link() (called from rtnl_newlink()) before the device is
    registered. However without IFLA_MTU that's not done.
    
    rtnl_newlink() proceeds by calling struct rtnl_link_ops.newlink, which
    via ip_tunnel_newlink() calls register_netdevice(), and that emits
    NETDEV_REGISTER. Thus any listeners that inspect the netdevice get the
    MTU of 0.
    
    After ip_tunnel_newlink() corrects the MTU after registering the
    netdevice, but since there's no event, the listeners don't get to know
    about the MTU until something else happens--such as a NETDEV_UP event.
    That's not ideal.
    
    So instead of setting the MTU directly, go through dev_set_mtu(), which
    takes care of distributing the necessary NETDEV_PRECHANGEMTU and
    NETDEV_CHANGEMTU events.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: Resolve conflict with commit 24fc79798b8d
     "ip_tunnel: Clamp MTU to bounds on new link", referring to commit
     5568cdc368c3 "ip_tunnel: Resolve ipsec merge conflict properly."]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ff3ee9480eb3e47324d96846b71e9fc58b1f7fcc
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Mar 17 21:38:10 2018 +0900

    tracing: probeevent: Fix to support minus offset from symbol
    
    commit c5d343b6b7badd1f5fe0873eff2e8d63a193e732 upstream.
    
    In Documentation/trace/kprobetrace.txt, it says
    
     @SYM[+|-offs] : Fetch memory at SYM +|- offs (SYM should be a data symbol)
    
    However, the parser doesn't parse minus offset correctly, since
    commit 2fba0c8867af ("tracing/kprobes: Fix probe offset to be
    unsigned") drops minus ("-") offset support for kprobe probe
    address usage.
    
    This fixes the traceprobe_split_symbol_offset() to parse minus
    offset again with checking the offset range, and add a minus
    offset check in kprobe probe address usage.
    
    Link: http://lkml.kernel.org/r/152129028983.31874.13419301530285775521.stgit@devbox
    
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Tom Zanussi <tom.zanussi@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Fixes: 2fba0c8867af ("tracing/kprobes: Fix probe offset to be unsigned")
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e16c527966bb513c20899dbe6731993538a7c0bb
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Thu Mar 22 16:17:02 2018 -0700

    mm/mempolicy.c: avoid use uninitialized preferred_node
    
    commit 8970a63e965b43288c4f5f40efbc2bbf80de7f16 upstream.
    
    Alexander reported a use of uninitialized memory in __mpol_equal(),
    which is caused by incorrect use of preferred_node.
    
    When mempolicy in mode MPOL_PREFERRED with flags MPOL_F_LOCAL, it uses
    numa_node_id() instead of preferred_node, however, __mpol_equal() uses
    preferred_node without checking whether it is MPOL_F_LOCAL or not.
    
    [akpm@linux-foundation.org: slight comment tweak]
    Link: http://lkml.kernel.org/r/4ebee1c2-57f6-bcb8-0e2d-1833d1ee0bb7@huawei.com
    Fixes: fc36b8d3d819 ("mempolicy: use MPOL_F_LOCAL to Indicate Preferred Local Policy")
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Reported-by: Alexander Potapenko <glider@google.com>
    Tested-by: Alexander Potapenko <glider@google.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Dmitriy Vyukov <dvyukov@google.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1bd07d327597449a751dc14292ddca29af9adb95
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Tue Mar 20 07:59:12 2018 +0100

    s390/qeth: free netdevice when removing a card
    
    commit 6be687395b3124f002a653c1a50b3260222b3cd7 upstream.
    
    On removal, a qeth card's netdevice is currently not properly freed
    because the call chain looks as follows:
    
    qeth_core_remove_device(card)
            lx_remove_device(card)
                    unregister_netdev(card->dev)
                    card->dev = NULL                        !!!
            qeth_core_free_card(card)
                    if (card->dev)                          !!!
                            free_netdev(card->dev)
    
    Fix it by free'ing the netdev straight after unregistering. This also
    fixes the sysfs-driven layer switch case (qeth_dev_layer2_store()),
    where the need to free the current netdevice was not considered at all.
    
    Note that free_netdev() takes care of the netif_napi_del() for us too.
    
    Fixes: 4a71df50047f ("qeth: new qeth device driver")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Reviewed-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5b0e644de99179961415e84a6c3ec396ce0deab7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Feb 15 17:21:55 2018 +0100

    posix-timers: Protect posix clock array access against speculation
    
    commit 19b558db12f9f4e45a22012bae7b4783e62224da upstream.
    
    The clockid argument of clockid_to_kclock() comes straight from user space
    via various syscalls and is used as index into the posix_clocks array.
    
    Protect it against spectre v1 array out of bounds speculation. Remove the
    redundant check for !posix_clock[id] as this is another source for
    speculation and does not provide any advantage over the return
    posix_clock[id] path which returns NULL in that case anyway.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.21.1802151718320.1296@nanos.tec.linutronix.de
    [bwh: Backported to 3.16:
     - Move the test of the clock_getres field below the lookup using
       array_index_nospec()
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ed221f4c8e7e26b3366d9b5281f94848437b2c65
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 22 10:40:27 2018 +0100

    ALSA: aloop: Fix access to not-yet-ready substream via cable
    
    commit 8e6b1a72a75bb5067ccb6b56d8ca4aa3a300a64e upstream.
    
    In loopback_open() and loopback_close(), we assign and release the
    substream object to the corresponding cable in a racy way.  It's
    neither locked nor done in the right position.  The open callback
    assigns the substream before its preparation finishes, hence the other
    side of the cable may pick it up, which may lead to the invalid memory
    access.
    
    This patch addresses these: move the assignment to the end of the open
    callback, and wrap with cable->lock for avoiding concurrent accesses.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0efdb642d6f78bcaaf44acab2b88157e4f7f49fb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 22 08:56:06 2018 +0100

    ALSA: aloop: Sync stale timer before release
    
    commit 67a01afaf3d34893cf7d2ea19b34555d6abb7cb0 upstream.
    
    The aloop driver tries to stop the pending timer via timer_del() in
    the trigger callback and in the close callback.  The former is
    correct, as it's an atomic operation, while the latter expects that
    the timer gets really removed and proceeds the resource releases after
    that.  But timer_del() doesn't synchronize, hence the running timer
    may still access the released resources.
    
    A similar situation can be also seen in the prepare callback after
    trigger(STOP) where the prepare tries to re-initialize the things
    while a timer is still running.
    
    The problems like the above are seen indirectly in some syzkaller
    reports (although it's not 100% clear whether this is the only cause,
    as the race condition is quite narrow and not always easy to
    trigger).
    
    For addressing these issues, this patch adds the explicit alls of
    timer_del_sync() in some places, so that the pending timer is properly
    killed / synced.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 87deaed7b68b1b17b10275795e13c310efd08c51
Author: NeilBrown <neil@brown.name>
Date:   Tue Mar 20 19:29:51 2018 +1100

    MIPS: ralink: Remove ralink_halt()
    
    commit 891731f6a5dbe508d12443175a7e166a2fba616a upstream.
    
    ralink_halt() does nothing that machine_halt() doesn't already do, so it
    adds no value.
    
    It actually causes incorrect behaviour due to the "unreachable()" at the
    end. This tells the compiler that the end of the function will never be
    reached, which isn't true. The compiler responds by not adding a
    'return' instruction, so control simply moves on to whatever bytes come
    afterwards in memory. In my tested, that was the ralink_restart()
    function. This means that an attempt to 'halt' the machine would
    actually cause a reboot.
    
    So remove ralink_halt() so that a 'halt' really does halt.
    
    Fixes: c06e836ada59 ("MIPS: ralink: adds reset code")
    Signed-off-by: NeilBrown <neil@brown.name>
    Cc: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/18851/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a12d8fa5f7c7b14786b9ef2cea6f175fe8117075
Author: John Crispin <blogic@openwrt.org>
Date:   Wed Nov 4 11:50:12 2015 +0100

    MIPS: ralink: Don't set pm_power_off
    
    commit 81ab9f6c5ff8565e4cba330e340a8979a10521d7 upstream.
    
    Setting pm_power_off is apprently wrong and makes drivers such as
    gpio-poweroff not work.
    
    Signed-off-by: John Crispin <blogic@openwrt.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/11445/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2cdf2a9aa266a276bc73bdcdc3aa50bcc915f979
Author: Chien Tin Tung <chien.tin.tung@intel.com>
Date:   Wed Mar 21 13:09:25 2018 -0500

    RDMA/ucma: Correct option size check using optlen
    
    commit 5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2 upstream.
    
    The option size check is using optval instead of optlen
    causing the set option call to fail. Use the correct
    field, optlen, for size check.
    
    Fixes: 6a21dfc0d0db ("RDMA/ucma: Limit possible option size")
    Signed-off-by: Chien Tin Tung <chien.tin.tung@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2976ace5fe095b5f94727e660b086bbc78234dca
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Mar 20 17:05:13 2018 +0200

    RDMA/ucma: Ensure that CM_ID exists prior to access it
    
    commit e8980d67d6017c8eee8f9c35f782c4bd68e004c9 upstream.
    
    Prior to access UCMA commands, the context should be initialized
    and connected to CM_ID with ucma_create_id(). In case user skips
    this step, he can provide non-valid ctx without CM_ID and cause
    to multiple NULL dereferences.
    
    Also there are situations where the create_id can be raced with
    other user access, ensure that the context is only shared to
    other threads once it is fully initialized to avoid the races.
    
    [  109.088108] BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
    [  109.090315] IP: ucma_connect+0x138/0x1d0
    [  109.092595] PGD 80000001dc02d067 P4D 80000001dc02d067 PUD 1da9ef067 PMD 0
    [  109.095384] Oops: 0000 [#1] SMP KASAN PTI
    [  109.097834] CPU: 0 PID: 663 Comm: uclose Tainted: G    B 4.16.0-rc1-00062-g2975d5de6428 #45
    [  109.100816] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [  109.105943] RIP: 0010:ucma_connect+0x138/0x1d0
    [  109.108850] RSP: 0018:ffff8801c8567a80 EFLAGS: 00010246
    [  109.111484] RAX: 0000000000000000 RBX: 1ffff100390acf50 RCX: ffffffff9d7812e2
    [  109.114496] RDX: 1ffffffff3f507a5 RSI: 0000000000000297 RDI: 0000000000000297
    [  109.117490] RBP: ffff8801daa15600 R08: 0000000000000000 R09: ffffed00390aceeb
    [  109.120429] R10: 0000000000000001 R11: ffffed00390aceea R12: 0000000000000000
    [  109.123318] R13: 0000000000000120 R14: ffff8801de6459c0 R15: 0000000000000118
    [  109.126221] FS:  00007fabb68d6700(0000) GS:ffff8801e5c00000(0000) knlGS:0000000000000000
    [  109.129468] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  109.132523] CR2: 0000000000000020 CR3: 00000001d45d8003 CR4: 00000000003606b0
    [  109.135573] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  109.138716] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  109.142057] Call Trace:
    [  109.144160]  ? ucma_listen+0x110/0x110
    [  109.146386]  ? wake_up_q+0x59/0x90
    [  109.148853]  ? futex_wake+0x10b/0x2a0
    [  109.151297]  ? save_stack+0x89/0xb0
    [  109.153489]  ? _copy_from_user+0x5e/0x90
    [  109.155500]  ucma_write+0x174/0x1f0
    [  109.157933]  ? ucma_resolve_route+0xf0/0xf0
    [  109.160389]  ? __mod_node_page_state+0x1d/0x80
    [  109.162706]  __vfs_write+0xc4/0x350
    [  109.164911]  ? kernel_read+0xa0/0xa0
    [  109.167121]  ? path_openat+0x1b10/0x1b10
    [  109.169355]  ? fsnotify+0x899/0x8f0
    [  109.171567]  ? fsnotify_unmount_inodes+0x170/0x170
    [  109.174145]  ? __fget+0xa8/0xf0
    [  109.177110]  vfs_write+0xf7/0x280
    [  109.179532]  SyS_write+0xa1/0x120
    [  109.181885]  ? SyS_read+0x120/0x120
    [  109.184482]  ? compat_start_thread+0x60/0x60
    [  109.187124]  ? SyS_read+0x120/0x120
    [  109.189548]  do_syscall_64+0xeb/0x250
    [  109.192178]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [  109.194725] RIP: 0033:0x7fabb61ebe99
    [  109.197040] RSP: 002b:00007fabb68d5e98 EFLAGS: 00000202 ORIG_RAX: 0000000000000001
    [  109.200294] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fabb61ebe99
    [  109.203399] RDX: 0000000000000120 RSI: 00000000200001c0 RDI: 0000000000000004
    [  109.206548] RBP: 00007fabb68d5ec0 R08: 0000000000000000 R09: 0000000000000000
    [  109.209902] R10: 0000000000000000 R11: 0000000000000202 R12: 00007fabb68d5fc0
    [  109.213327] R13: 0000000000000000 R14: 00007fff40ab2430 R15: 00007fabb68d69c0
    [  109.216613] Code: 88 44 24 2c 0f b6 84 24 6e 01 00 00 88 44 24 2d 0f
    b6 84 24 69 01 00 00 88 44 24 2e 8b 44 24 60 89 44 24 30 e8 da f6 06 ff
    31 c0 <66> 41 83 7c 24 20 1b 75 04 8b 44 24 64 48 8d 74 24 20 4c 89 e7
    [  109.223602] RIP: ucma_connect+0x138/0x1d0 RSP: ffff8801c8567a80
    [  109.226256] CR2: 0000000000000020
    
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Reported-by: <syzbot+36712f50b0552615bf59@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fbd591e549d859079a89bf9c1c53b7eddff0339a
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Mar 19 14:20:15 2018 +0200

    RDMA/ucma: Fix use-after-free access in ucma_close
    
    commit ed65a4dc22083e73bac599ded6a262318cad7baf upstream.
    
    The error in ucma_create_id() left ctx in the list of contexts belong
    to ucma file descriptor. The attempt to close this file descriptor causes
    to use-after-free accesses while iterating over such list.
    
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Reported-by: <syzbot+dcfd344365a56fbebd0f@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 66124f3b37704e395f306215a14e7a0c1dddb520
Author: Kirill Marinushkin <k.marinushkin@gmail.com>
Date:   Mon Mar 19 07:11:08 2018 +0100

    ALSA: usb-audio: Fix parsing descriptor of UAC2 processing unit
    
    commit a6618f4aedb2b60932d766bd82ae7ce866e842aa upstream.
    
    Currently, the offsets in the UAC2 processing unit descriptor are
    calculated incorrectly. It causes an issue when connecting the device which
    provides such a feature:
    
    ~~~~
    [84126.724420] usb 1-1.3.1: invalid Processing Unit descriptor (id 18)
    ~~~~
    
    After this patch is applied, the UAC2 processing unit inits w/o this error.
    
    Fixes: 23caaf19b11e ("ALSA: usb-mixer: Add support for Audio Class v2.0")
    Signed-off-by: Kirill Marinushkin <k.marinushkin@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ed3caf269992591f58f3ae315941a9398200a802
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Mar 19 16:34:00 2018 +0100

    libata: Modify quirks for MX100 to limit NCQ_TRIM quirk to MU01 version
    
    commit d418ff56b8f2d2b296daafa8da151fe27689b757 upstream.
    
    When commit 9c7be59fc519af ("libata: Apply NOLPM quirk to Crucial MX100
    512GB SSDs") was added it inherited the ATA_HORKAGE_NO_NCQ_TRIM quirk
    from the existing "Crucial_CT*MX100*" entry, but that entry sets model_rev
    to "MU01", where as the entry adding the NOLPM quirk sets it to NULL.
    
    This means that after this commit we no apply the NO_NCQ_TRIM quirk to
    all "Crucial_CT512MX100*" SSDs even if they have the fixed "MU02"
    firmware. This commit splits the "Crucial_CT512MX100*" quirk into 2
    quirks, one for the "MU01" firmware and one for all other firmware
    versions, so that we once again only apply the NO_NCQ_TRIM quirk to the
    "MU01" firmware version.
    
    Fixes: 9c7be59fc519af ("libata: Apply NOLPM quirk to ... MX100 512GB SSDs")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [bwh: Backported to 3.16: There's no ATA_HORKAGE_ZERO_AFTER_TRIM flag]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24fa3fb85b53b8ff0139a0ea895f33c017c73b2b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Mar 19 16:33:59 2018 +0100

    libata: Make Crucial BX100 500GB LPM quirk apply to all firmware versions
    
    commit 3bf7b5d6d017c27e0d3b160aafb35a8e7cfeda1f upstream.
    
    Commit b17e5729a630 ("libata: disable LPM for Crucial BX100 SSD 500GB
    drive"), introduced a ATA_HORKAGE_NOLPM quirk for Crucial BX100 500GB SSDs
    but limited this to the MU02 firmware version, according to:
    http://www.crucial.com/usa/en/support-ssd-firmware
    
    MU02 is the last version, so there are no newer possibly fixed versions
    and if the MU02 version has broken LPM then the MU01 almost certainly
    also has broken LPM, so this commit changes the quirk to apply to all
    firmware versions.
    
    Fixes: b17e5729a630 ("libata: disable LPM for Crucial BX100 SSD 500GB...")
    Cc: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8a2b5cd5dcb29141deec0788f904cc39c5a64c3a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Mar 19 16:33:58 2018 +0100

    libata: Apply NOLPM quirk to Crucial M500 480 and 960GB SSDs
    
    commit 62ac3f7305470e3f52f159de448bc1a771717e88 upstream.
    
    There have been reports of the Crucial M500 480GB model not working
    with LPM set to min_power / med_power_with_dipm level.
    
    It has not been tested with medium_power, but that typically has no
    measurable power-savings.
    
    Note the reporters Crucial_CT480M500SSD3 has a firmware version of MU03
    and there is a MU05 update available, but that update does not mention any
    LPM fixes in its changelog, so the quirk matches all firmware versions.
    
    In my experience the LPM problems with (older) Crucial SSDs seem to be
    limited to higher capacity versions of the SSDs (different firmware?),
    so this commit adds a NOLPM quirk for the 480 and 960GB versions of the
    M500, to avoid LPM causing issues with these SSDs.
    
    Reported-and-tested-by: Martin Steigerwald <martin@lichtvoll.de>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [bwh: Backported to 3.16: There's no ATA_HORKAGE_ZERO_AFTER_TRIM flag]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8430e3426659e969f70a3066c816ba7122e47ac4
Author: Andri Yngvason <andri.yngvason@marel.com>
Date:   Thu Mar 15 18:23:17 2018 +0000

    can: cc770: Fix use after free in cc770_tx_interrupt()
    
    commit 9ffd7503944ec7c0ef41c3245d1306c221aef2be upstream.
    
    This fixes use after free introduced by the last cc770 patch.
    
    Signed-off-by: Andri Yngvason <andri.yngvason@marel.com>
    Fixes: 746201235b3f ("can: cc770: Fix queue stall & dropped RTR reply")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5a79e43ffa5014c020e0d0f4e383205f87b10111
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Thu Mar 15 17:16:29 2018 +0100

    vti4: Don't override MTU passed on link creation via IFLA_MTU
    
    commit 03080e5ec72740c1a62e6730f2a5f3f114f11b19 upstream.
    
    Don't hardcode a MTU value on vti tunnel initialization,
    ip_tunnel_newlink() is able to deal with this already. See also
    commit ffc2b6ee4174 ("ip_gre: fix IFLA_MTU ignored on NEWLINK").
    
    Fixes: 1181412c1a67 ("net/ipv4: VTI support new module for ip_vti.")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Acked-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1b711ef74b98c0ce9b917d541dc5d36c09b059d6
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Thu Mar 15 17:16:28 2018 +0100

    ip_tunnel: Clamp MTU to bounds on new link
    
    commit 24fc79798b8ddfd46f2dd363a8d29072c083b977 upstream.
    
    Otherwise, it's possible to specify invalid MTU values directly
    on creation of a link (via 'ip link add'). This is already
    prevented on subsequent MTU changes by commit b96f9afee4eb
    ("ipv4/6: use core net MTU range checking").
    
    Fixes: c54419321455 ("GRE: Refactor GRE tunneling code.")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Acked-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    [bwh: Backported to 3.16: Add definition of ETH_MIN_MTU]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 989d1837b6e48e2a26612c1be69ba6026669c258
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Thu Mar 15 17:16:27 2018 +0100

    vti4: Don't count header length twice on tunnel setup
    
    commit dd1df24737727e119c263acf1be2a92763938297 upstream.
    
    This re-introduces the effect of commit a32452366b72 ("vti4:
    Don't count header length twice.") which was accidentally
    reverted by merge commit f895f0cfbb77 ("Merge branch 'master' of
    git://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec").
    
    The commit message from Steffen Klassert said:
    
        We currently count the size of LL_MAX_HEADER and struct iphdr
        twice for vti4 devices, this leads to a wrong device mtu.
        The size of LL_MAX_HEADER and struct iphdr is already counted in
        ip_tunnel_bind_dev(), so don't do it again in vti_tunnel_init().
    
    And this is still the case now: ip_tunnel_bind_dev() already
    accounts for the header length of the link layer (not
    necessarily LL_MAX_HEADER, if the output device is found), plus
    one IP header.
    
    For example, with a vti device on top of veth, with MTU of 1500,
    the existing implementation would set the initial vti MTU to
    1332, accounting once for LL_MAX_HEADER (128, included in
    hard_header_len by vti) and twice for the same IP header (once
    from hard_header_len, once from ip_tunnel_bind_dev()).
    
    It should instead be 1480, because ip_tunnel_bind_dev() is able
    to figure out that the output device is veth, so no additional
    link layer header is attached, and will properly count one
    single IP header.
    
    The existing issue had the side effect of avoiding PMTUD for
    most xfrm policies, by arbitrarily lowering the initial MTU.
    However, the only way to get a consistent PMTU value is to let
    the xfrm PMTU discovery do its course, and commit d6af1a31cc72
    ("vti: Add pmtu handling to vti_xmit.") now takes care of local
    delivery cases where the application ignores local socket
    notifications.
    
    Fixes: b9959fd3b0fa ("vti: switch to new ip tunnel code")
    Fixes: f895f0cfbb77 ("Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Acked-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 95917cc978704ba57870bda367afa334ddc00a7e
Author: Sven Eckelmann <sven@narfation.org>
Date:   Fri Mar 16 21:14:32 2018 +0100

    batman-adv: Fix skbuff rcsum on packet reroute
    
    commit fc04fdb2c8a894283259f5621d31d75610701091 upstream.
    
    batadv_check_unicast_ttvn may redirect a packet to itself or another
    originator. This involves rewriting the ttvn and the destination address in
    the batadv unicast header. These field were not yet pulled (with skb rcsum
    update) and thus any change to them also requires a change in the receive
    checksum.
    
    Reported-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Fixes: a73105b8d4c7 ("batman-adv: improved client announcement mechanism")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c0809b34e345209dac623530f276decaa09eea2a
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Tue Jun 5 03:24:01 2018 +0100

    skb: Add skb_postpush_rcsum()
    
    This is based on commit f8ffad69c9f8b8dfb0b633425d4ef4d2493ba61a upstream,
    "bpf: add skb_postpush_rcsum and fix dev_forward_skb occasions".  We don't
    need the bpf fixes here, just the new function.
    
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7421ee7b8e77fbe3f31ba4908c949e52f55139b5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Mar 17 22:40:18 2018 +0100

    ALSA: hda/realtek - Always immediately update mute LED with pin VREF
    
    commit e40bdb03d3cd7da66bd0bc1e40cbcfb49351265c upstream.
    
    Some HP laptops have a mute mute LED controlled by a pin VREF.  The
    Realtek codec driver updates the VREF via vmaster hook by calling
    snd_hda_set_pin_ctl_cache().
    
    This works fine as long as the driver is running in a normal mode.
    However, when the VREF change happens during the codec being in
    runtime PM suspend, the regmap access will skip and postpone the
    actual register change.  This ends up with the unchanged LED status
    until the next runtime PM resume even if you change the Master mute
    switch.  (Interestingly, the machine keeps the LED status even after
    the codec goes into D3 -- but it's another story.)
    
    For improving this usability, let the driver temporarily powering up /
    down only during the pin VREF change.  This can be achieved easily by
    wrapping the call with snd_hda_power_up_pm() / *_down_pm().
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=199073
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.16: Use snd_hda_power{down,up}() (without the _pm
     suffix]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6be944c7ddec99cc9e52e4cdde3123e2db7fa156
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Fri Mar 16 11:29:10 2018 +0100

    batman-adv: fix header size check in batadv_dbg_arp()
    
    commit 6f27d2c2a8c236d296201c19abb8533ec20d212b upstream.
    
    Checking for 0 is insufficient: when an SKB without a batadv header, but
    with a VLAN header is received, hdr_size will be 4, making the following
    code interpret the Ethernet header as a batadv header.
    
    Fixes: be1db4f6615b ("batman-adv: make the Distributed ARP Table vlan aware")
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2cb0c19c38fa7595ea3afb7ec9ea65ce51a45c13
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Fri Mar 16 11:29:09 2018 +0100

    batman-adv: update data pointers after skb_cow()
    
    commit bc44b78157f621ff2a2618fe287a827bcb094ac4 upstream.
    
    batadv_check_unicast_ttvn() calls skb_cow(), so pointers into the SKB data
    must be (re)set after calling it. The ethhdr variable is dropped
    altogether.
    
    Fixes: 7cdcf6dddc42 ("batman-adv: add UNICAST_4ADDR packet type")
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [bwh: Backported to 3.16:
     - There's no ethhdr variable here
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c1bb4c474c52d1330b2bdc85c801ea4d9b079d62
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Wed Mar 14 13:32:09 2018 -0700

    skbuff: Fix not waking applications when errors are enqueued
    
    commit 6e5d58fdc9bedd0255a8781b258f10bbdc63e975 upstream.
    
    When errors are enqueued to the error queue via sock_queue_err_skb()
    function, it is possible that the waiting application is not notified.
    
    Calling 'sk->sk_data_ready()' would not notify applications that
    selected only POLLERR events in poll() (for example).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Randy E. Witt <randy.e.witt@intel.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4381ed5081c8931f3d41f11bbe6294fab60beccb
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Mar 13 14:45:07 2018 -0700

    net: systemport: Rewrite __bcm_sysport_tx_reclaim()
    
    commit 484d802d0f2f29c335563fcac2a8facf174a1bbc upstream.
    
    There is no need for complex checking between the last consumed index
    and current consumed index, a simple subtraction will do.
    
    This also eliminates the possibility of a permanent transmit queue stall
    under the following conditions:
    
    - one CPU bursts ring->size worth of traffic (up to 256 buffers), to the
      point where we run out of free descriptors, so we stop the transmit
      queue at the end of bcm_sysport_xmit()
    
    - because of our locking, we have the transmit process disable
      interrupts which means we can be blocking the TX reclamation process
    
    - when TX reclamation finally runs, we will be computing the difference
      between ring->c_index (last consumed index by SW) and what the HW
      reports through its register
    
    - this register is masked with (ring->size - 1) = 0xff, which will lead
      to stripping the upper bits of the index (register is 16-bits wide)
    
    - we will be computing last_tx_cn as 0, which means there is no work to
      be done, and we never wake-up the transmit queue, leaving it
      permanently disabled
    
    A practical example is e.g: ring->c_index aka last_c_index = 12, we
    pushed 256 entries, HW consumer index = 268, we mask it with 0xff = 12,
    so last_tx_cn == 0, nothing happens.
    
    Fixes: 80105befdb4b ("net: systemport: add Broadcom SYSTEMPORT Ethernet MAC driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit eac8ecaf817cf45a46d65a15618e7ba4f1d26d61
Author: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date:   Tue Mar 13 14:51:27 2018 +0900

    net: Fix vlan untag for bridge and vlan_dev with reorder_hdr off
    
    commit 4bbb3e0e8239f9079bf1fe20b3c0cb598714ae61 upstream.
    
    When we have a bridge with vlan_filtering on and a vlan device on top of
    it, packets would be corrupted in skb_vlan_untag() called from
    br_dev_xmit().
    
    The problem sits in skb_reorder_vlan_header() used in skb_vlan_untag(),
    which makes use of skb->mac_len. In this function mac_len is meant for
    handling rx path with vlan devices with reorder_header disabled, but in
    tx path mac_len is typically 0 and cannot be used, which is the problem
    in this case.
    
    The current code even does not properly handle rx path (skb_vlan_untag()
    called from __netif_receive_skb_core()) with reorder_header off actually.
    
    In rx path single tag case, it works as follows:
    
    - Before skb_reorder_vlan_header()
    
     mac_header                                data
       v                                        v
       +-------------------+-------------+------+----
       |        ETH        |    VLAN     | ETH  |
       |       ADDRS       | TPID | TCI  | TYPE |
       +-------------------+-------------+------+----
       <-------- mac_len --------->
                           <------------->
                            to be removed
    
    - After skb_reorder_vlan_header()
    
                mac_header                     data
                     v                          v
                     +-------------------+------+----
                     |        ETH        | ETH  |
                     |       ADDRS       | TYPE |
                     +-------------------+------+----
                     <-------- mac_len --------->
    
    This is ok, but in rx double tag case, it corrupts packets:
    
    - Before skb_reorder_vlan_header()
    
     mac_header                                              data
       v                                                      v
       +-------------------+-------------+-------------+------+----
       |        ETH        |    VLAN     |    VLAN     | ETH  |
       |       ADDRS       | TPID | TCI  | TPID | TCI  | TYPE |
       +-------------------+-------------+-------------+------+----
       <--------------- mac_len ---------------->
                                         <------------->
                                        should be removed
                           <--------------------------->
                             actually will be removed
    
    - After skb_reorder_vlan_header()
    
                mac_header                                   data
                     v                                        v
                                   +-------------------+------+----
                                   |        ETH        | ETH  |
                                   |       ADDRS       | TYPE |
                                   +-------------------+------+----
                     <--------------- mac_len ---------------->
    
    So, two of vlan tags are both removed while only inner one should be
    removed and mac_header (and mac_len) is broken.
    
    skb_vlan_untag() is meant for removing the vlan header at (skb->data - 2),
    so use skb->data and skb->mac_header to calculate the right offset.
    
    Reported-by: Brandon Carpenter <brandon.carpenter@cypherpath.com>
    Fixes: a6e18ff11170 ("vlan: Fix untag operations of stacked vlans with REORDER_HEADER off")
    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ee3aaeae6bb9304de0d3d1c0eeaaae6e8cd8a33d
Author: Leon Romanovsky <leon@kernel.org>
Date:   Thu Mar 15 15:33:02 2018 +0200

    RDMA/ucma: Check AF family prior resolving address
    
    commit 2975d5de6428ff6d9317e9948f0968f7d42e5d74 upstream.
    
    Garbage supplied by user will cause to UCMA module provide zero
    memory size for memcpy(), because it wasn't checked, it will
    produce unpredictable results in rdma_resolve_addr().
    
    [   42.873814] BUG: KASAN: null-ptr-deref in rdma_resolve_addr+0xc8/0xfb0
    [   42.874816] Write of size 28 at addr 00000000000000a0 by task resaddr/1044
    [   42.876765]
    [   42.876960] CPU: 1 PID: 1044 Comm: resaddr Not tainted 4.16.0-rc1-00057-gaa56a5293d7e #34
    [   42.877840] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [   42.879691] Call Trace:
    [   42.880236]  dump_stack+0x5c/0x77
    [   42.880664]  kasan_report+0x163/0x380
    [   42.881354]  ? rdma_resolve_addr+0xc8/0xfb0
    [   42.881864]  memcpy+0x34/0x50
    [   42.882692]  rdma_resolve_addr+0xc8/0xfb0
    [   42.883366]  ? deref_stack_reg+0x88/0xd0
    [   42.883856]  ? vsnprintf+0x31a/0x770
    [   42.884686]  ? rdma_bind_addr+0xc40/0xc40
    [   42.885327]  ? num_to_str+0x130/0x130
    [   42.885773]  ? deref_stack_reg+0x88/0xd0
    [   42.886217]  ? __read_once_size_nocheck.constprop.6+0x10/0x10
    [   42.887698]  ? unwind_get_return_address_ptr+0x50/0x50
    [   42.888302]  ? replace_slot+0x147/0x170
    [   42.889176]  ? delete_node+0x12c/0x340
    [   42.890223]  ? __radix_tree_lookup+0xa9/0x160
    [   42.891196]  ? ucma_resolve_ip+0xb7/0x110
    [   42.891917]  ucma_resolve_ip+0xb7/0x110
    [   42.893003]  ? ucma_resolve_addr+0x190/0x190
    [   42.893531]  ? _copy_from_user+0x5e/0x90
    [   42.894204]  ucma_write+0x174/0x1f0
    [   42.895162]  ? ucma_resolve_route+0xf0/0xf0
    [   42.896309]  ? dequeue_task_fair+0x67e/0xd90
    [   42.897192]  ? put_prev_entity+0x7d/0x170
    [   42.897870]  ? ring_buffer_record_is_on+0xd/0x20
    [   42.898439]  ? tracing_record_taskinfo_skip+0x20/0x50
    [   42.899686]  __vfs_write+0xc4/0x350
    [   42.900142]  ? kernel_read+0xa0/0xa0
    [   42.900602]  ? firmware_map_remove+0xdf/0xdf
    [   42.901135]  ? do_task_dead+0x5d/0x60
    [   42.901598]  ? do_exit+0xcc6/0x1220
    [   42.902789]  ? __fget+0xa8/0xf0
    [   42.903190]  vfs_write+0xf7/0x280
    [   42.903600]  SyS_write+0xa1/0x120
    [   42.904206]  ? SyS_read+0x120/0x120
    [   42.905710]  ? compat_start_thread+0x60/0x60
    [   42.906423]  ? SyS_read+0x120/0x120
    [   42.908716]  do_syscall_64+0xeb/0x250
    [   42.910760]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   42.912735] RIP: 0033:0x7f138b0afe99
    [   42.914734] RSP: 002b:00007f138b799e98 EFLAGS: 00000287 ORIG_RAX: 0000000000000001
    [   42.917134] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f138b0afe99
    [   42.919487] RDX: 000000000000002e RSI: 0000000020000c40 RDI: 0000000000000004
    [   42.922393] RBP: 00007f138b799ec0 R08: 00007f138b79a700 R09: 0000000000000000
    [   42.925266] R10: 00007f138b79a700 R11: 0000000000000287 R12: 00007f138b799fc0
    [   42.927570] R13: 0000000000000000 R14: 00007ffdbae757c0 R15: 00007f138b79a9c0
    [   42.930047]
    [   42.932681] Disabling lock debugging due to kernel taint
    [   42.934795] BUG: unable to handle kernel NULL pointer dereference at 00000000000000a0
    [   42.936939] IP: memcpy_erms+0x6/0x10
    [   42.938864] PGD 80000001bea92067 P4D 80000001bea92067 PUD 1bea96067 PMD 0
    [   42.941576] Oops: 0002 [#1] SMP KASAN PTI
    [   42.943952] CPU: 1 PID: 1044 Comm: resaddr Tainted: G    B 4.16.0-rc1-00057-gaa56a5293d7e #34
    [   42.946964] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [   42.952336] RIP: 0010:memcpy_erms+0x6/0x10
    [   42.954707] RSP: 0018:ffff8801c8b479c8 EFLAGS: 00010286
    [   42.957227] RAX: 00000000000000a0 RBX: ffff8801c8b47ba0 RCX: 000000000000001c
    [   42.960543] RDX: 000000000000001c RSI: ffff8801c8b47bbc RDI: 00000000000000a0
    [   42.963867] RBP: ffff8801c8b47b60 R08: 0000000000000000 R09: ffffed0039168ed1
    [   42.967303] R10: 0000000000000001 R11: ffffed0039168ed0 R12: ffff8801c8b47bbc
    [   42.970685] R13: 00000000000000a0 R14: 1ffff10039168f4a R15: 0000000000000000
    [   42.973631] FS:  00007f138b79a700(0000) GS:ffff8801e5d00000(0000) knlGS:0000000000000000
    [   42.976831] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   42.979239] CR2: 00000000000000a0 CR3: 00000001be908002 CR4: 00000000003606a0
    [   42.982060] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   42.984877] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   42.988033] Call Trace:
    [   42.990487]  rdma_resolve_addr+0xc8/0xfb0
    [   42.993202]  ? deref_stack_reg+0x88/0xd0
    [   42.996055]  ? vsnprintf+0x31a/0x770
    [   42.998707]  ? rdma_bind_addr+0xc40/0xc40
    [   43.000985]  ? num_to_str+0x130/0x130
    [   43.003410]  ? deref_stack_reg+0x88/0xd0
    [   43.006302]  ? __read_once_size_nocheck.constprop.6+0x10/0x10
    [   43.008780]  ? unwind_get_return_address_ptr+0x50/0x50
    [   43.011178]  ? replace_slot+0x147/0x170
    [   43.013517]  ? delete_node+0x12c/0x340
    [   43.016019]  ? __radix_tree_lookup+0xa9/0x160
    [   43.018755]  ? ucma_resolve_ip+0xb7/0x110
    [   43.021270]  ucma_resolve_ip+0xb7/0x110
    [   43.023968]  ? ucma_resolve_addr+0x190/0x190
    [   43.026312]  ? _copy_from_user+0x5e/0x90
    [   43.029384]  ucma_write+0x174/0x1f0
    [   43.031861]  ? ucma_resolve_route+0xf0/0xf0
    [   43.034782]  ? dequeue_task_fair+0x67e/0xd90
    [   43.037483]  ? put_prev_entity+0x7d/0x170
    [   43.040215]  ? ring_buffer_record_is_on+0xd/0x20
    [   43.042990]  ? tracing_record_taskinfo_skip+0x20/0x50
    [   43.045595]  __vfs_write+0xc4/0x350
    [   43.048624]  ? kernel_read+0xa0/0xa0
    [   43.051604]  ? firmware_map_remove+0xdf/0xdf
    [   43.055379]  ? do_task_dead+0x5d/0x60
    [   43.058000]  ? do_exit+0xcc6/0x1220
    [   43.060783]  ? __fget+0xa8/0xf0
    [   43.063133]  vfs_write+0xf7/0x280
    [   43.065677]  SyS_write+0xa1/0x120
    [   43.068647]  ? SyS_read+0x120/0x120
    [   43.071179]  ? compat_start_thread+0x60/0x60
    [   43.074025]  ? SyS_read+0x120/0x120
    [   43.076705]  do_syscall_64+0xeb/0x250
    [   43.079006]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   43.081606] RIP: 0033:0x7f138b0afe99
    [   43.083679] RSP: 002b:00007f138b799e98 EFLAGS: 00000287 ORIG_RAX: 0000000000000001
    [   43.086802] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f138b0afe99
    [   43.089989] RDX: 000000000000002e RSI: 0000000020000c40 RDI: 0000000000000004
    [   43.092866] RBP: 00007f138b799ec0 R08: 00007f138b79a700 R09: 0000000000000000
    [   43.096233] R10: 00007f138b79a700 R11: 0000000000000287 R12: 00007f138b799fc0
    [   43.098913] R13: 0000000000000000 R14: 00007ffdbae757c0 R15: 00007f138b79a9c0
    [   43.101809] Code: 90 90 90 90 90 eb 1e 0f 1f 00 48 89 f8 48 89 d1 48
    c1 e9 03 83 e2 07 f3 48 a5 89 d1 f3 a4 c3 66 0f 1f 44 00 00 48 89 f8 48
    89 d1 <f3> a4 c3 0f 1f 80 00 00 00 00 48 89 f8 48 83 fa 20 72 7e 40 38
    [   43.107950] RIP: memcpy_erms+0x6/0x10 RSP: ffff8801c8b479c8
    
    Reported-by: <syzbot+1d8c43206853b369d00c@syzkaller.appspotmail.com>
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 854ef66e18324ca2bd7da4b30c9817c0d6b46ad4
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Mar 14 18:20:29 2018 -0500

    fs: Teach path_connected to handle nfs filesystems with multiple roots.
    
    commit 95dd77580ccd66a0da96e6d4696945b8cea39431 upstream.
    
    On nfsv2 and nfsv3 the nfs server can export subsets of the same
    filesystem and report the same filesystem identifier, so that the nfs
    client can know they are the same filesystem.  The subsets can be from
    disjoint directory trees.  The nfsv2 and nfsv3 filesystems provides no
    way to find the common root of all directory trees exported form the
    server with the same filesystem identifier.
    
    The practical result is that in struct super s_root for nfs s_root is
    not necessarily the root of the filesystem.  The nfs mount code sets
    s_root to the root of the first subset of the nfs filesystem that the
    kernel mounts.
    
    This effects the dcache invalidation code in generic_shutdown_super
    currently called shrunk_dcache_for_umount and that code for years
    has gone through an additional list of dentries that might be dentry
    trees that need to be freed to accomodate nfs.
    
    When I wrote path_connected I did not realize nfs was so special, and
    it's hueristic for avoiding calling is_subdir can fail.
    
    The practical case where this fails is when there is a move of a
    directory from the subtree exposed by one nfs mount to the subtree
    exposed by another nfs mount.  This move can happen either locally or
    remotely.  With the remote case requiring that the move directory be cached
    before the move and that after the move someone walks the path
    to where the move directory now exists and in so doing causes the
    already cached directory to be moved in the dcache through the magic
    of d_splice_alias.
    
    If someone whose working directory is in the move directory or a
    subdirectory and now starts calling .. from the initial mount of nfs
    (where s_root == mnt_root), then path_connected as a heuristic will
    not bother with the is_subdir check.  As s_root really is not the root
    of the nfs filesystem this heuristic is wrong, and the path may
    actually not be connected and path_connected can fail.
    
    The is_subdir function might be cheap enough that we can call it
    unconditionally.  Verifying that will take some benchmarking and
    the result may not be the same on all kernels this fix needs
    to be backported to.  So I am avoiding that for now.
    
    Filesystems with snapshots such as nilfs and btrfs do something
    similar.  But as the directory tree of the snapshots are disjoint
    from one another and from the main directory tree rename won't move
    things between them and this problem will not occur.
    
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Fixes: 397d425dc26d ("vfs: Test for and handle paths that are unreachable from their mnt_root")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [bwh: Backported to 3.16:
     - Add the super_block::s_iflags field
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 89e5625bc6655a509bbc8eeffd8fbbbd89f46010
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Wed Mar 14 18:14:04 2018 +0100

    drm/radeon: Don't turn off DP sink when disconnected
    
    commit 2681bc79eeb640562c932007bfebbbdc55bf6a7d upstream.
    
    Turning off the sink in this case causes various issues, because
    userspace expects it to stay on until it turns it off explicitly.
    
    Instead, turn the sink off and back on when a display is connected
    again. This dance seems necessary for link training to work correctly.
    
    Bugzilla: https://bugs.freedesktop.org/105308
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2ee2c8c1ea1dc922003173847ad913642f2b2c1f
Author: Bastian Stender <bst@pengutronix.de>
Date:   Thu Mar 8 15:08:11 2018 +0100

    mmc: block: fix updating ext_csd caches on ioctl call
    
    commit e74ef2194b41ba5e511fab29fe5ff00e72d2f42a upstream.
    
    PARTITION_CONFIG is cached in mmc_card->ext_csd.part_config and the
    currently active partition in mmc_blk_data->part_curr. These caches do
    not always reflect changes if the ioctl call modifies the
    PARTITION_CONFIG registers, e.g. by changing BOOT_PARTITION_ENABLE.
    
    Write the PARTITION_CONFIG value extracted from the ioctl call to the
    cache and update the currently active partition accordingly. This
    ensures that the user space cannot change the values behind the
    kernel's back. The next call to mmc_blk_part_switch() will operate on
    the data set by the ioctl and reflect the changes appropriately.
    
    Signed-off-by: Bastian Stender <bst@pengutronix.de>
    Signed-off-by: Jan Luebbe <jlu@pengutronix.de>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16:
     - Also add the definition of MMC_EXTRACT_INDEX_FROM_ARG()
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c634197fa9a6a991658f26f492c59d5c73384d6e
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Mar 9 14:44:32 2018 +0100

    drm/radeon: fix prime teardown order
    
    commit 0f4f715bc6bed3bf14c5cd7d5fe88d443e756b14 upstream.
    
    We unmapped imported DMA-bufs when the GEM handle was dropped, not when the
    hardware was done with the buffere.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b87f7b526296100de8deaf7656607630f6251c5e
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Mar 13 18:37:27 2018 +0200

    RDMA/ucma: Don't allow join attempts for unsupported AF family
    
    commit 0c81ffc60d5280991773d17e84bda605387148b1 upstream.
    
    Users can provide garbage while calling to ucma_join_ip_multicast(),
    it will indirectly cause to rdma_addr_size() return 0, making the
    call to ucma_process_join(), which had the right checks, but it is
    better to check the input as early as possible.
    
    The following crash from syzkaller revealed it.
    
    kernel BUG at lib/string.c:1052!
    invalid opcode: 0000 [#1] SMP KASAN Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 0 PID: 4113 Comm: syz-executor0 Not tainted 4.16.0-rc5+ #261
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:fortify_panic+0x13/0x20 lib/string.c:1051
    RSP: 0018:ffff8801ca81f8f0 EFLAGS: 00010286
    RAX: 0000000000000022 RBX: 1ffff10039503f23 RCX: 0000000000000000
    RDX: 0000000000000022 RSI: 1ffff10039503ed3 RDI: ffffed0039503f12
    RBP: ffff8801ca81f8f0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000006 R11: 0000000000000000 R12: ffff8801ca81f998
    R13: ffff8801ca81f938 R14: ffff8801ca81fa58 R15: 000000000000fa00
    FS:  0000000000000000(0000) GS:ffff8801db200000(0063) knlGS:000000000a12a900
    CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
    CR2: 0000000008138024 CR3: 00000001cbb58004 CR4: 00000000001606f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     memcpy include/linux/string.h:344 [inline]
     ucma_join_ip_multicast+0x36b/0x3b0 drivers/infiniband/core/ucma.c:1421
     ucma_write+0x2d6/0x3d0 drivers/infiniband/core/ucma.c:1633
     __vfs_write+0xef/0x970 fs/read_write.c:480
     vfs_write+0x189/0x510 fs/read_write.c:544
     SYSC_write fs/read_write.c:589 [inline]
     SyS_write+0xef/0x220 fs/read_write.c:581
     do_syscall_32_irqs_on arch/x86/entry/common.c:330 [inline]
     do_fast_syscall_32+0x3ec/0xf9f arch/x86/entry/common.c:392
     entry_SYSENTER_compat+0x70/0x7f arch/x86/entry/entry_64_compat.S:139
    RIP: 0023:0xf7f9ec99
    RSP: 002b:00000000ff8172cc EFLAGS: 00000282 ORIG_RAX: 0000000000000004
    RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 0000000020000100
    RDX: 0000000000000063 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    Code: 08 5b 41 5c 41 5d 41 5e 41 5f 5d c3 0f 0b 48 89 df e8 42 2c e3 fb eb de
    55 48 89 fe 48 c7 c7 80 75 98 86 48 89 e5 e8 85 95 94 fb <0f> 0b 90 90 90 90
    90 90 90 90 90 90 90 55 48 89 e5 41 57 41 56
    RIP: fortify_panic+0x13/0x20 lib/string.c:1051 RSP: ffff8801ca81f8f0
    
    Fixes: 5bc2b7b397b0 ("RDMA/ucma: Allow user space to specify AF_IB when joining multicast")
    Reported-by: <syzbot+2287ac532caa81900a4e@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4a4584bbcd1ace624e6ed0fd4affc8567b85d696
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Mar 13 11:43:23 2018 +0200

    RDMA/ucma: Fix access to non-initialized CM_ID object
    
    commit 7688f2c3bbf55e52388e37ac5d63ca471a7712e1 upstream.
    
    The attempt to join multicast group without ensuring that CMA device
    exists will lead to the following crash reported by syzkaller.
    
    [   64.076794] BUG: KASAN: null-ptr-deref in rdma_join_multicast+0x26e/0x12c0
    [   64.076797] Read of size 8 at addr 00000000000000b0 by task join/691
    [   64.076797]
    [   64.076800] CPU: 1 PID: 691 Comm: join Not tainted 4.16.0-rc1-00219-gb97853b65b93 #23
    [   64.076802] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-proj4
    [   64.076803] Call Trace:
    [   64.076809]  dump_stack+0x5c/0x77
    [   64.076817]  kasan_report+0x163/0x380
    [   64.085859]  ? rdma_join_multicast+0x26e/0x12c0
    [   64.086634]  rdma_join_multicast+0x26e/0x12c0
    [   64.087370]  ? rdma_disconnect+0xf0/0xf0
    [   64.088579]  ? __radix_tree_replace+0xc3/0x110
    [   64.089132]  ? node_tag_clear+0x81/0xb0
    [   64.089606]  ? idr_alloc_u32+0x12e/0x1a0
    [   64.090517]  ? __fprop_inc_percpu_max+0x150/0x150
    [   64.091768]  ? tracing_record_taskinfo+0x10/0xc0
    [   64.092340]  ? idr_alloc+0x76/0xc0
    [   64.092951]  ? idr_alloc_u32+0x1a0/0x1a0
    [   64.093632]  ? ucma_process_join+0x23d/0x460
    [   64.094510]  ucma_process_join+0x23d/0x460
    [   64.095199]  ? ucma_migrate_id+0x440/0x440
    [   64.095696]  ? futex_wake+0x10b/0x2a0
    [   64.096159]  ucma_join_multicast+0x88/0xe0
    [   64.096660]  ? ucma_process_join+0x460/0x460
    [   64.097540]  ? _copy_from_user+0x5e/0x90
    [   64.098017]  ucma_write+0x174/0x1f0
    [   64.098640]  ? ucma_resolve_route+0xf0/0xf0
    [   64.099343]  ? rb_erase_cached+0x6c7/0x7f0
    [   64.099839]  __vfs_write+0xc4/0x350
    [   64.100622]  ? perf_syscall_enter+0xe4/0x5f0
    [   64.101335]  ? kernel_read+0xa0/0xa0
    [   64.103525]  ? perf_sched_cb_inc+0xc0/0xc0
    [   64.105510]  ? syscall_exit_register+0x2a0/0x2a0
    [   64.107359]  ? __switch_to+0x351/0x640
    [   64.109285]  ? fsnotify+0x899/0x8f0
    [   64.111610]  ? fsnotify_unmount_inodes+0x170/0x170
    [   64.113876]  ? __fsnotify_update_child_dentry_flags+0x30/0x30
    [   64.115813]  ? ring_buffer_record_is_on+0xd/0x20
    [   64.117824]  ? __fget+0xa8/0xf0
    [   64.119869]  vfs_write+0xf7/0x280
    [   64.122001]  SyS_write+0xa1/0x120
    [   64.124213]  ? SyS_read+0x120/0x120
    [   64.126644]  ? SyS_read+0x120/0x120
    [   64.128563]  do_syscall_64+0xeb/0x250
    [   64.130732]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   64.132984] RIP: 0033:0x7f5c994ade99
    [   64.135699] RSP: 002b:00007f5c99b97d98 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    [   64.138740] RAX: ffffffffffffffda RBX: 00000000200001e4 RCX: 00007f5c994ade99
    [   64.141056] RDX: 00000000000000a0 RSI: 00000000200001c0 RDI: 0000000000000015
    [   64.143536] RBP: 00007f5c99b97ec0 R08: 0000000000000000 R09: 0000000000000000
    [   64.146017] R10: 0000000000000000 R11: 0000000000000246 R12: 00007f5c99b97fc0
    [   64.148608] R13: 0000000000000000 R14: 00007fff660e1c40 R15: 00007f5c99b989c0
    [   64.151060]
    [   64.153703] Disabling lock debugging due to kernel taint
    [   64.156032] BUG: unable to handle kernel NULL pointer dereference at 00000000000000b0
    [   64.159066] IP: rdma_join_multicast+0x26e/0x12c0
    [   64.161451] PGD 80000001d0298067 P4D 80000001d0298067 PUD 1dea39067 PMD 0
    [   64.164442] Oops: 0000 [#1] SMP KASAN PTI
    [   64.166817] CPU: 1 PID: 691 Comm: join Tainted: G    B 4.16.0-rc1-00219-gb97853b65b93 #23
    [   64.170004] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-proj4
    [   64.174985] RIP: 0010:rdma_join_multicast+0x26e/0x12c0
    [   64.177246] RSP: 0018:ffff8801c8207860 EFLAGS: 00010282
    [   64.179901] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff94789522
    [   64.183344] RDX: 1ffffffff2d50fa5 RSI: 0000000000000297 RDI: 0000000000000297
    [   64.186237] RBP: ffff8801c8207a50 R08: 0000000000000000 R09: ffffed0039040ea7
    [   64.189328] R10: 0000000000000001 R11: ffffed0039040ea6 R12: 0000000000000000
    [   64.192634] R13: 0000000000000000 R14: ffff8801e2022800 R15: ffff8801d4ac2400
    [   64.196105] FS:  00007f5c99b98700(0000) GS:ffff8801e5d00000(0000) knlGS:0000000000000000
    [   64.199211] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   64.202046] CR2: 00000000000000b0 CR3: 00000001d1c48004 CR4: 00000000003606a0
    [   64.205032] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   64.208221] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   64.211554] Call Trace:
    [   64.213464]  ? rdma_disconnect+0xf0/0xf0
    [   64.216124]  ? __radix_tree_replace+0xc3/0x110
    [   64.219337]  ? node_tag_clear+0x81/0xb0
    [   64.222140]  ? idr_alloc_u32+0x12e/0x1a0
    [   64.224422]  ? __fprop_inc_percpu_max+0x150/0x150
    [   64.226588]  ? tracing_record_taskinfo+0x10/0xc0
    [   64.229763]  ? idr_alloc+0x76/0xc0
    [   64.232186]  ? idr_alloc_u32+0x1a0/0x1a0
    [   64.234505]  ? ucma_process_join+0x23d/0x460
    [   64.237024]  ucma_process_join+0x23d/0x460
    [   64.240076]  ? ucma_migrate_id+0x440/0x440
    [   64.243284]  ? futex_wake+0x10b/0x2a0
    [   64.245302]  ucma_join_multicast+0x88/0xe0
    [   64.247783]  ? ucma_process_join+0x460/0x460
    [   64.250841]  ? _copy_from_user+0x5e/0x90
    [   64.253878]  ucma_write+0x174/0x1f0
    [   64.257008]  ? ucma_resolve_route+0xf0/0xf0
    [   64.259877]  ? rb_erase_cached+0x6c7/0x7f0
    [   64.262746]  __vfs_write+0xc4/0x350
    [   64.265537]  ? perf_syscall_enter+0xe4/0x5f0
    [   64.267792]  ? kernel_read+0xa0/0xa0
    [   64.270358]  ? perf_sched_cb_inc+0xc0/0xc0
    [   64.272575]  ? syscall_exit_register+0x2a0/0x2a0
    [   64.275367]  ? __switch_to+0x351/0x640
    [   64.277700]  ? fsnotify+0x899/0x8f0
    [   64.280530]  ? fsnotify_unmount_inodes+0x170/0x170
    [   64.283156]  ? __fsnotify_update_child_dentry_flags+0x30/0x30
    [   64.286182]  ? ring_buffer_record_is_on+0xd/0x20
    [   64.288749]  ? __fget+0xa8/0xf0
    [   64.291136]  vfs_write+0xf7/0x280
    [   64.292972]  SyS_write+0xa1/0x120
    [   64.294965]  ? SyS_read+0x120/0x120
    [   64.297474]  ? SyS_read+0x120/0x120
    [   64.299751]  do_syscall_64+0xeb/0x250
    [   64.301826]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   64.304352] RIP: 0033:0x7f5c994ade99
    [   64.306711] RSP: 002b:00007f5c99b97d98 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    [   64.309577] RAX: ffffffffffffffda RBX: 00000000200001e4 RCX: 00007f5c994ade99
    [   64.312334] RDX: 00000000000000a0 RSI: 00000000200001c0 RDI: 0000000000000015
    [   64.315783] RBP: 00007f5c99b97ec0 R08: 0000000000000000 R09: 0000000000000000
    [   64.318365] R10: 0000000000000000 R11: 0000000000000246 R12: 00007f5c99b97fc0
    [   64.320980] R13: 0000000000000000 R14: 00007fff660e1c40 R15: 00007f5c99b989c0
    [   64.323515] Code: e8 e8 79 08 ff 4c 89 ff 45 0f b6 a7 b8 01 00 00 e8 68 7c 08 ff 49 8b 1f 4d 89 e5 49 c1 e4 04 48 8
    [   64.330753] RIP: rdma_join_multicast+0x26e/0x12c0 RSP: ffff8801c8207860
    [   64.332979] CR2: 00000000000000b0
    [   64.335550] ---[ end trace 0c00c17a408849c1 ]---
    
    Reported-by: <syzbot+e6aba77967bd72cbc9d6@syzkaller.appspotmail.com>
    Fixes: c8f6a362bf3e ("RDMA/cma: Add multicast communication support")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8be07f20f94200312720660e10a013d788f21c64
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Mar 14 12:10:17 2018 -0700

    fs/aio: Use RCU accessors for kioctx_table->table[]
    
    commit d0264c01e7587001a8c4608a5d1818dba9a4c11a upstream.
    
    While converting ioctx index from a list to a table, db446a08c23d
    ("aio: convert the ioctx list to table lookup v3") missed tagging
    kioctx_table->table[] as an array of RCU pointers and using the
    appropriate RCU accessors.  This introduces a small window in the
    lookup path where init and access may race.
    
    Mark kioctx_table->table[] with __rcu and use the approriate RCU
    accessors when using the field.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: db446a08c23d ("aio: convert the ioctx list to table lookup v3")
    Cc: Benjamin LaHaise <bcrl@kvack.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16:
     - Drop changes to aio_ring_mremap()
     -
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 178eb8239835ba1928443d0f0025f72f8ddb6dba
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Mar 14 12:10:17 2018 -0700

    fs/aio: Add explicit RCU grace period when freeing kioctx
    
    commit a6d7cff472eea87d96899a20fa718d2bab7109f3 upstream.
    
    While fixing refcounting, e34ecee2ae79 ("aio: Fix a trinity splat")
    incorrectly removed explicit RCU grace period before freeing kioctx.
    The intention seems to be depending on the internal RCU grace periods
    of percpu_ref; however, percpu_ref uses a different flavor of RCU,
    sched-RCU.  This can lead to kioctx being freed while RCU read
    protected dereferences are still in progress.
    
    Fix it by updating free_ioctx() to go through call_rcu() explicitly.
    
    v2: Comment added to explain double bouncing.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: e34ecee2ae79 ("aio: Fix a trinity splat")
    Cc: Kent Overstreet <kent.overstreet@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 147c00b31dfeaeb83f917b29a4c05b605b68a8e0
Author: Jens Axboe <axboe@fb.com>
Date:   Wed Apr 15 11:17:23 2015 -0600

    aio: fix serial draining in exit_aio()
    
    commit dc48e56d761610da4ea1088d1bea0a030b8e3e43 upstream.
    
    exit_aio() currently serializes killing io contexts. Each context
    killing ends up having to do percpu_ref_kill(), which in turns has
    to wait for an RCU grace period. This can take a long time, depending
    on the number of contexts. And there's no point in doing them serially,
    when we could be waiting for all of them in one fell swoop.
    
    This patches makes my fio thread offload test case exit 0.2s instead
    of almost 6s.
    
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5bed291a684406393217439f8fd0b05d9c640d99
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Wed Apr 30 16:16:36 2014 +0200

    aio: kill the misleading rcu read locks in ioctx_add_table() and kill_ioctx()
    
    commit 855ef0dec7271ff7be7381feaaf3f4aed80bd503 upstream.
    
    ioctx_add_table() is the writer, it does not need rcu_read_lock() to
    protect ->ioctx_table. It relies on mm->ioctx_lock and rcu locks just
    add the confusion.
    
    And it doesn't need rcu_dereference() by the same reason, it must see
    any updates previously done under the same ->ioctx_lock. We could use
    rcu_dereference_protected() but the patch uses rcu_dereference_raw(),
    the function is simple enough.
    
    The same for kill_ioctx(), although it does not update the pointer.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5014d4d65e2c4d99b3863920afe0c541e9759a82
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Wed Apr 30 19:02:48 2014 +0200

    aio: change exit_aio() to load mm->ioctx_table once and avoid rcu_read_lock()
    
    commit 4b70ac5fd9b58bfaa5f25b4ea48f528aefbf3308 upstream.
    
    On 04/30, Benjamin LaHaise wrote:
    >
    > > -           ctx->mmap_size = 0;
    > > -
    > > -           kill_ioctx(mm, ctx, NULL);
    > > +           if (ctx) {
    > > +                   ctx->mmap_size = 0;
    > > +                   kill_ioctx(mm, ctx, NULL);
    > > +           }
    >
    > Rather than indenting and moving the two lines changing mmap_size and the
    > kill_ioctx() call, why not just do "if (!ctx) ... continue;"?  That reduces
    > the number of lines changed and avoid excessive indentation.
    
    OK. To me the code looks better/simpler with "if (ctx)", but this is subjective
    of course, I won't argue.
    
    The patch still removes the empty line between mmap_size = 0 and kill_ioctx(),
    we reset mmap_size only for kill_ioctx(). But feel free to remove this change.
    
    -------------------------------------------------------------------------------
    Subject: [PATCH v3 1/2] aio: change exit_aio() to load mm->ioctx_table once and avoid rcu_read_lock()
    
    1. We can read ->ioctx_table only once and we do not read rcu_read_lock()
       or even rcu_dereference().
    
       This mm has no users, nobody else can play with ->ioctx_table. Otherwise
       the code is buggy anyway, if we need rcu_read_lock() in a loop because
       ->ioctx_table can be updated then kfree(table) is obviously wrong.
    
    2. Update the comment. "exit_mmap(mm) is coming" is the good reason to avoid
       munmap(), but another reason is that we simply can't do vm_munmap() unless
       current->mm == mm and this is not true in general, the caller is mmput().
    
    3. We do not really need to nullify mm->ioctx_table before return, probably
       the current code does this to catch the potential problems. But in this
       case RCU_INIT_POINTER(NULL) looks better.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>
    [bwh: Backported to 3.16: Adjust context to apply after backport of commit
     6098b45b32e6 "aio: block exit_aio() until all context requests are completed"]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit df9ece1148e2ec242871623dedb004f7a1387125
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Mar 14 10:21:14 2018 +0100

    ipv4: lock mtu in fnhe when received PMTU < net.ipv4.route.min_pmtu
    
    commit d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221 upstream.
    
    Prior to the rework of PMTU information storage in commit
    2c8cec5c10bc ("ipv4: Cache learned PMTU information in inetpeer."),
    when a PMTU event advertising a PMTU smaller than
    net.ipv4.route.min_pmtu was received, we would disable setting the DF
    flag on packets by locking the MTU metric, and set the PMTU to
    net.ipv4.route.min_pmtu.
    
    Since then, we don't disable DF, and set PMTU to
    net.ipv4.route.min_pmtu, so the intermediate router that has this link
    with a small MTU will have to drop the packets.
    
    This patch reestablishes pre-2.6.39 behavior by splitting
    rtable->rt_pmtu into a bitfield with rt_mtu_locked and rt_pmtu.
    rt_mtu_locked indicates that we shouldn't set the DF bit on that path,
    and is checked in ip_dont_fragment().
    
    One possible workaround is to set net.ipv4.route.min_pmtu to a value low
    enough to accommodate the lowest MTU encountered.
    
    Fixes: 2c8cec5c10bc ("ipv4: Cache learned PMTU information in inetpeer.")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc7d5ec532ca5c3ea44b2b488f3342fef3d7a90f
Author: David Ahern <dsa@cumulusnetworks.com>
Date:   Wed Sep 2 13:58:34 2015 -0700

    net: Refactor rtable initialization
    
    commit d08c4f355403840fad98d9918db51a7113f38ee8 upstream.
    
    All callers to rt_dst_alloc have nearly the same initialization following
    a successful allocation. Consolidate it into rt_dst_alloc.
    
    Signed-off-by: David Ahern <dsa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f41c3e6ddce76b958ce2535fed90fd7a3489c4fd
Author: Masatake YAMATO <yamato@redhat.com>
Date:   Thu Jul 9 12:46:35 2015 +0900

    route: remove unsed variable in __mkroute_input
    
    commit cb1c61680d29a054b91a23c7a504cea8a72bdcff upstream.
    
    flags local variable in __mkroute_input is not used as a variable.
    
    Signed-off-by: Masatake YAMATO <yamato@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 985937c7034f80f257c385e5cb7c5e8afb76f00b
Author: Ju Hyung Park <qkrwngud825@gmail.com>
Date:   Sun Mar 11 02:28:35 2018 +0900

    libata: Enable queued TRIM for Samsung SSD 860
    
    commit ca6bfcb2f6d9deab3924bf901e73622a94900473 upstream.
    
    Samsung explicitly states that queued TRIM is supported for Linux with
    860 PRO and 860 EVO.
    
    Make the previous blacklist to cover only 840 and 850 series.
    
    Signed-off-by: Park Ju Hyung <qkrwngud825@gmail.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [bwh: Backported to 3.16: There's no ATA_HORKAGE_ZERO_AFTER_TRIM flag]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c6980bbfdebb3b6635cffb37584400e761044d33
Author: Andri Yngvason <andri.yngvason@marel.com>
Date:   Wed Mar 14 11:52:57 2018 +0000

    can: cc770: Fix queue stall & dropped RTR reply
    
    commit 746201235b3f876792099079f4c6fea941d76183 upstream.
    
    While waiting for the TX object to send an RTR, an external message with a
    matching id can overwrite the TX data. In this case we must call the rx
    routine and then try transmitting the message that was overwritten again.
    
    The queue was being stalled because the RX event did not generate an
    interrupt to wake up the queue again and the TX event did not happen
    because the TXRQST flag is reset by the chip when new data is received.
    
    According to the CC770 datasheet the id of a message object should not be
    changed while the MSGVAL bit is set. This has been fixed by resetting the
    MSGVAL bit before modifying the object in the transmit function and setting
    it after. It is not enough to set & reset CPUUPD.
    
    It is important to keep the MSGVAL bit reset while the message object is
    being modified. Otherwise, during RTR transmission, a frame with matching
    id could trigger an rx-interrupt, which would cause a race condition
    between the interrupt routine and the transmit function.
    
    Signed-off-by: Andri Yngvason <andri.yngvason@marel.com>
    Tested-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ecf5d4ccdeffa2b44de59fafaa6588cfe540b83a
Author: Andri Yngvason <andri.yngvason@marel.com>
Date:   Wed Mar 14 11:52:56 2018 +0000

    can: cc770: Fix stalls on rt-linux, remove redundant IRQ ack
    
    commit f4353daf4905c0099fd25fa742e2ffd4a4bab26a upstream.
    
    This has been reported to cause stalls on rt-linux.
    
    Suggested-by: Richard Weinberger <richard@nod.at>
    Tested-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Andri Yngvason <andri.yngvason@marel.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c2f44905009dee7b7d1ba3baca00266ec8b2b5ad
Author: Boris Pismenny <borisp@mellanox.com>
Date:   Thu Mar 8 15:51:41 2018 +0200

    IB/mlx5: Fix integer overflows in mlx5_ib_create_srq
    
    commit c2b37f76485f073f020e60b5954b6dc4e55f693c upstream.
    
    This patch validates user provided input to prevent integer overflow due
    to integer manipulation in the mlx5_ib_create_srq function.
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Boris Pismenny <borisp@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4921fdd2d1f0100df466e19f2596751a12d81627
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Mon Mar 12 14:54:24 2018 +0100

    l2tp: fix races with ipv4-mapped ipv6 addresses
    
    commit b954f94023dcc61388c8384f0f14eb8e42c863c5 upstream.
    
    The l2tp_tunnel_create() function checks for v4mapped ipv6
    sockets and cache that flag, so that l2tp core code can
    reusing it at xmit time.
    
    If the socket is provided by the userspace, the connection
    status of the tunnel sockets can change between the tunnel
    creation and the xmit call, so that syzbot is able to
    trigger the following splat:
    
    BUG: KASAN: use-after-free in ip6_dst_idev include/net/ip6_fib.h:192
    [inline]
    BUG: KASAN: use-after-free in ip6_xmit+0x1f76/0x2260
    net/ipv6/ip6_output.c:264
    Read of size 8 at addr ffff8801bd949318 by task syz-executor4/23448
    
    CPU: 0 PID: 23448 Comm: syz-executor4 Not tainted 4.16.0-rc4+ #65
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:17 [inline]
      dump_stack+0x194/0x24d lib/dump_stack.c:53
      print_address_description+0x73/0x250 mm/kasan/report.c:256
      kasan_report_error mm/kasan/report.c:354 [inline]
      kasan_report+0x23c/0x360 mm/kasan/report.c:412
      __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:433
      ip6_dst_idev include/net/ip6_fib.h:192 [inline]
      ip6_xmit+0x1f76/0x2260 net/ipv6/ip6_output.c:264
      inet6_csk_xmit+0x2fc/0x580 net/ipv6/inet6_connection_sock.c:139
      l2tp_xmit_core net/l2tp/l2tp_core.c:1053 [inline]
      l2tp_xmit_skb+0x105f/0x1410 net/l2tp/l2tp_core.c:1148
      pppol2tp_sendmsg+0x470/0x670 net/l2tp/l2tp_ppp.c:341
      sock_sendmsg_nosec net/socket.c:630 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:640
      ___sys_sendmsg+0x767/0x8b0 net/socket.c:2046
      __sys_sendmsg+0xe5/0x210 net/socket.c:2080
      SYSC_sendmsg net/socket.c:2091 [inline]
      SyS_sendmsg+0x2d/0x50 net/socket.c:2087
      do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x453e69
    RSP: 002b:00007f819593cc68 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 00007f819593d6d4 RCX: 0000000000453e69
    RDX: 0000000000000081 RSI: 000000002037ffc8 RDI: 0000000000000004
    RBP: 000000000072bea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 00000000000004c3 R14: 00000000006f72e8 R15: 0000000000000000
    
    This change addresses the issues:
    * explicitly checking for TCP_ESTABLISHED for user space provided sockets
    * dropping the v4mapped flag usage - it can become outdated - and
      explicitly invoking ipv6_addr_v4mapped() instead
    
    The issue is apparently there since ancient times.
    
    v1 -> v2: (many thanks to Guillaume)
     - with csum issue introduced in v1
     - replace pr_err with pr_debug
     - fix build issue with IPV6 disabled
     - move l2tp_sk_is_v4mapped in l2tp_core.c
    
    v2 -> v3:
     - don't update inet_daddr for v4mapped address, unneeded
     - drop rendundant check at creation time
    
    Reported-and-tested-by: syzbot+92fa328176eb07e4ac1a@syzkaller.appspotmail.com
    Fixes: 3557baabf280 ("[L2TP]: PPP over L2TP driver core")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: Change an additional test of tunnel->v4mapped to use
     l2tp_sk_is_v6()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 491de848db8e7a3484e03b854d7e27ad5d8d6442
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Mar 9 14:27:31 2018 +0100

    netfilter: bridge: ebt_among: add more missing match size checks
    
    commit c8d70a700a5b486bfa8e5a7d33d805389f6e59f9 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    commit c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    added validation for pool size, but missed fact that the macros
    ebt_among_wh_src/dst can already return out-of-bound result because
    they do not check value of wh_src/dst_ofs (an offset) vs. the size
    of the match that userspace gave to us.
    
    v2:
    check that offset has correct alignment.
    Paolo Abeni points out that we should also check that src/dst
    wormhash arrays do not overlap, and src + length lines up with
    start of dst (or vice versa).
    v3: compact wormhash_sizes_valid() part
    
    NB: Fixes tag is intentionally wrong, this bug exists from day
    one when match was added for 2.6 kernel. Tag is there so stable
    maintainers will notice this one too.
    
    Tested with same rules from the earlier patch.
    
    Fixes: c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    Reported-by: <syzbot+bdabab6f1983a03fc009@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 90ee942faa9d07b3d9b92f92d83948295c390600
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 03:01:45 2018 +0100

    netfilter: bridge: ebt_among: add missing match size checks
    
    commit c4585a2823edf4d1326da44d1524ecbfda26bb37 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    Therefore it must check that the size of the match structure
    provided from userspace is sane by making sure em->match_size
    is at least the minimum size of the expected structure.
    
    The module has such a check, but its only done after accessing
    a structure that might be out of bounds.
    
    tested with: ebtables -A INPUT ... \
    --among-dst fe:fe:fe:fe:fe:fe
    --among-dst fe:fe:fe:fe:fe:fe --among-src fe:fe:fe:fe:ff:f,fe:fe:fe:fe:fe:fb,fe:fe:fe:fe:fc:fd,fe:fe:fe:fe:fe:fd,fe:fe:fe:fe:fe:fe
    --among-src fe:fe:fe:fe:ff:f,fe:fe:fe:fe:fe:fa,fe:fe:fe:fe:fe:fd,fe:fe:fe:fe:fe:fe,fe:fe:fe:fe:fe:fe
    
    Reported-by: <syzbot+fe0b19af568972814355@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3bdc246fac7ac59b962dbd91c4f73c22dc9598db
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 9 22:23:31 2018 +0100

    ALSA: seq: Clear client entry before deleting else at closing
    
    commit a2ff19f7b70118ced291a28d5313469914de451b upstream.
    
    When releasing a client, we need to clear the clienttab[] entry at
    first, then call snd_seq_queue_client_leave().  Otherwise, the
    in-flight cell in the queue might be picked up by the timer interrupt
    via snd_seq_check_queue() before calling snd_seq_queue_client_leave(),
    and it's delivered to another queue while the client is clearing
    queues.  This may eventually result in an uncleared cell remaining in
    a queue, and the later snd_seq_pool_delete() may need to wait for a
    long time until the event gets really processed.
    
    By moving the clienttab[] clearance at the beginning of release, any
    event delivery of a cell belonging to this client will fail at a later
    point, since snd_seq_client_ptr() returns NULL.  Thus the cell that
    was picked up by the timer interrupt will be returned immediately
    without further delivery, and the long stall of snd_seq_delete_pool()
    can be avoided, too.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7880783d9f12817f528c9e1fa587e6bb5371afc2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 9 21:58:28 2018 +0100

    ALSA: seq: Fix possible UAF in snd_seq_check_queue()
    
    commit d0f833065221cbfcbadf19fd4102bcfa9330006a upstream.
    
    Although we've covered the races between concurrent write() and
    ioctl() in the previous patch series, there is still a possible UAF in
    the following scenario:
    
    A: user client closed           B: timer irq
      -> snd_seq_release()            -> snd_seq_timer_interrupt()
        -> snd_seq_free_client()        -> snd_seq_check_queue()
                                          -> cell = snd_seq_prioq_cell_peek()
          -> snd_seq_prioq_leave()
             .... removing all cells
          -> snd_seq_pool_done()
             .... vfree()
                                          -> snd_seq_compare_tick_time(cell)
                                             ... Oops
    
    So the problem is that a cell is peeked and accessed without any
    protection until it's retrieved from the queue again via
    snd_seq_prioq_cell_out().
    
    This patch tries to address it, also cleans up the code by a slight
    refactoring.  snd_seq_prioq_cell_out() now receives an extra pointer
    argument.  When it's non-NULL, the function checks the event timestamp
    with the given pointer.  The caller needs to pass the right reference
    either to snd_seq_tick or snd_seq_realtime depending on the event
    timestamp type.
    
    A good news is that the above change allows us to remove the
    snd_seq_prioq_cell_peek(), too, thus the patch actually reduces the
    code size.
    
    Reviewed-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a9203311e5bd6e8a8121a1df9f8b52c77d691c15
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 15:29:09 2018 +0200

    RDMA/mlx5: Fix integer overflow while resizing CQ
    
    commit 28e9091e3119933c38933cb8fc48d5618eb784c8 upstream.
    
    The user can provide very large cqe_size which will cause to integer
    overflow as it can be seen in the following UBSAN warning:
    
    =======================================================================
    UBSAN: Undefined behaviour in drivers/infiniband/hw/mlx5/cq.c:1192:53
    signed integer overflow:
    64870 * 65536 cannot be represented in type 'int'
    CPU: 0 PID: 267 Comm: syzkaller605279 Not tainted 4.15.0+ #90 Hardware
    name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xde/0x164
     ? dma_virt_map_sg+0x22c/0x22c
     ubsan_epilogue+0xe/0x81
     handle_overflow+0x1f3/0x251
     ? __ubsan_handle_negate_overflow+0x19b/0x19b
     ? lock_acquire+0x440/0x440
     mlx5_ib_resize_cq+0x17e7/0x1e40
     ? cyc2ns_read_end+0x10/0x10
     ? native_read_msr_safe+0x6c/0x9b
     ? cyc2ns_read_end+0x10/0x10
     ? mlx5_ib_modify_cq+0x220/0x220
     ? sched_clock_cpu+0x18/0x200
     ? lookup_get_idr_uobject+0x200/0x200
     ? rdma_lookup_get_uobject+0x145/0x2f0
     ib_uverbs_resize_cq+0x207/0x3e0
     ? ib_uverbs_ex_create_cq+0x250/0x250
     ib_uverbs_write+0x7f9/0xef0
     ? cyc2ns_read_end+0x10/0x10
     ? print_irqtrace_events+0x280/0x280
     ? ib_uverbs_ex_create_cq+0x250/0x250
     ? uverbs_devnode+0x110/0x110
     ? sched_clock_cpu+0x18/0x200
     ? do_raw_spin_trylock+0x100/0x100
     ? __lru_cache_add+0x16e/0x290
     __vfs_write+0x10d/0x700
     ? uverbs_devnode+0x110/0x110
     ? kernel_read+0x170/0x170
     ? sched_clock_cpu+0x18/0x200
     ? security_file_permission+0x93/0x260
     vfs_write+0x1b0/0x550
     SyS_write+0xc7/0x1a0
     ? SyS_read+0x1a0/0x1a0
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    RIP: 0033:0x433549
    RSP: 002b:00007ffe63bd1ea8 EFLAGS: 00000217
    =======================================================================
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Fixes: bde51583f49b ("IB/mlx5: Add support for resize CQ")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b082e424ed520c59ea87737e4fe58506725cdf60
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Mar 8 17:17:17 2018 +0200

    xhci: Fix front USB ports on ASUS PRIME B350M-A
    
    commit 191edc5e2e515aab1075a3f0ef23599e80be5f59 upstream.
    
    When a USB device gets plugged on ASUS PRIME B350M-A's front ports, the
    xHC stops working:
    [  549.114587] xhci_hcd 0000:02:00.0: WARN: xHC CMD_RUN timeout
    [  549.114608] suspend_common(): xhci_pci_suspend+0x0/0xc0 returns -110
    [  549.114638] xhci_hcd 0000:02:00.0: can't suspend (hcd_pci_runtime_suspend returned -110)
    
    Delay before running xHC command CMD_RUN can workaround the issue.
    
    Use a new quirk to make the delay only targets to the affected xHC.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cdbb101ef935de73f430019996045d45a653d1a5
Author: Pete Zaitcev <zaitcev@kotori.zaitcev.us>
Date:   Fri Mar 9 00:21:14 2018 -0600

    usb: usbmon: Read text within supplied buffer size
    
    commit a5f596830e27e15f7a0ecd6be55e433d776986d8 upstream.
    
    This change fixes buffer overflows and silent data corruption with the
    usbmon device driver text file read operations.
    
    Signed-off-by: Fredrik Noring <noring@nocrew.org>
    Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4906c132e58e403ca4f9a5614fba5f1d3340496e
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Sat Dec 26 22:57:44 2015 +0100

    USB: usbmon: remove assignment from IS_ERR argument
    
    commit 46c236dc7d1212d7417e6fb0317f91c44c719322 upstream.
    
    The semantic patch that makes this change is as follows:
    (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @@
    expression e1,e2;
    statement S1,S2;
    @@
    
    +e1 = e2;
    if (IS_ERR(
        e1
    -   = e2
       )) S1 else S2
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 695de4445a5fec48e784e331144d390c8052774d
Author: Teijo Kinnunen <teijo.kinnunen@code-q.fi>
Date:   Thu Mar 1 19:34:29 2018 +0200

    USB: storage: Add JMicron bridge 152d:2567 to unusual_devs.h
    
    commit 5126a504b63d82785eaece3a9c30c660b313785a upstream.
    
    This USB-SATA controller seems to be similar with JMicron bridge
    152d:2566 already on the list. Adding it here fixes "Invalid
    field in cdb" errors.
    
    Signed-off-by: Teijo Kinnunen <teijo.kinnunen@code-q.fi>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fefd86f394315d1fef65326af9abee6f7abe45c1
Author: Arkadi Sharshevsky <arkadis@mellanox.com>
Date:   Thu Mar 8 12:42:10 2018 +0200

    team: Fix double free in error path
    
    commit cbcc607e18422555db569b593608aec26111cb0b upstream.
    
    The __send_and_alloc_skb() receives a skb ptr as a parameter but in
    case it fails the skb is not valid:
    - Send failed and released the skb internally.
    - Allocation failed.
    
    The current code tries to release the skb in case of failure which
    causes redundant freeing.
    
    Fixes: 9b00cf2d1024 ("team: implement multipart netlink messages for options transfers")
    Signed-off-by: Arkadi Sharshevsky <arkadis@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd72423788854c69abb5bc99d3320cd30a14c6f3
Author: Tony Luck <tony.luck@intel.com>
Date:   Tue Mar 6 15:21:41 2018 +0100

    x86/MCE: Save microcode revision in machine check records
    
    commit fa94d0c6e0f3431523f5701084d799c77c7d4a4f upstream.
    
    Updating microcode used to be relatively rare. Now that it has become
    more common we should save the microcode version in a machine check
    record to make sure that those people looking at the error have this
    important information bundled with the rest of the logged information.
    
    [ Borislav: Simplify a bit. ]
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yazen Ghannam <yazen.ghannam@amd.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180301233449.24311-1-tony.luck@intel.com
    [bwh: Backported to 3.2:
     - Add other new fields to struct mce, to match upstream UAPI
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit aba67809aef2b283b275abe4f4dd14a2ca8d9d7d
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 26 09:35:01 2018 -0500

    x86/spectre_v2: Don't check microcode versions when running under hypervisors
    
    commit 36268223c1e9981d6cfc33aff8520b3bde4b8114 upstream.
    
    As:
    
     1) It's known that hypervisors lie about the environment anyhow (host
        mismatch)
    
     2) Even if the hypervisor (Xen, KVM, VMWare, etc) provided a valid
        "correct" value, it all gets to be very murky when migration happens
        (do you provide the "new" microcode of the machine?).
    
    And in reality the cloud vendors are the ones that should make sure that
    the microcode that is running is correct and we should just sing lalalala
    and trust them.
    
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Wanpeng Li <kernellwp@gmail.com>
    Cc: kvm <kvm@vger.kernel.org>
    Cc: Krčmář <rkrcmar@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    Link: https://lkml.kernel.org/r/20180226213019.GE9497@char.us.oracle.com
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a60b0d4cb10fa40240a881c93cde43f9c9bdf4eb
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Mar 1 11:03:27 2018 -0500

    drm/radeon: fix KV harvesting
    
    commit 0b58d90f89545e021d188c289fa142e5ff9e708b upstream.
    
    Always set the graphics values to the max for the
    asic type.  E.g., some 1 RB chips are actually 1 RB chips,
    others are actually harvested 2 RB chips.
    
    Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=99353
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0615a4a0da3ede7530baf55a4a73ca1a09dc5426
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 18:49:16 2018 +0200

    RDMA/ucma: Check that user doesn't overflow QP state
    
    commit a5880b84430316e3e1c1f5d23aa32ec6000cc717 upstream.
    
    The QP state is limited and declared in enum ib_qp_state,
    but ucma user was able to supply any possible (u32) value.
    
    Reported-by: syzbot+0df1ab766f8924b1edba@syzkaller.appspotmail.com
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 633a48721de73d18d3abe3515109b1a77254e171
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 14:49:09 2018 +0200

    RDMA/ucma: Limit possible option size
    
    commit 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c upstream.
    
    Users of ucma are supposed to provide size of option level,
    in most paths it is supposed to be equal to u8 or u16, but
    it is not the case for the IB path record, where it can be
    multiple of struct ib_path_rec_data.
    
    This patch takes simplest possible approach and prevents providing
    values more than possible to allocate.
    
    Reported-by: syzbot+a38b0e9f694c379ca7ce@syzkaller.appspotmail.com
    Fixes: 7ce86409adcd ("RDMA/ucma: Allow user space to set service type")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8e16f75441958445ac75cf044e96145fa6c18035
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Mar 6 07:54:53 2018 -0800

    l2tp: do not accept arbitrary sockets
    
    commit 17cfe79a65f98abe535261856c5aef14f306dff7 upstream.
    
    syzkaller found an issue caused by lack of sufficient checks
    in l2tp_tunnel_create()
    
    RAW sockets can not be considered as UDP ones for instance.
    
    In another patch, we shall replace all pr_err() by less intrusive
    pr_debug() so that syzkaller can find other bugs faster.
    Acked-by: Guillaume Nault <g.nault@alphalink.fr>
    Acked-by: James Chapman <jchapman@katalix.com>
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in setup_udp_tunnel_sock+0x3ee/0x5f0 net/ipv4/udp_tunnel.c:69
    dst_release: dst:00000000d53d0d0f refcnt:-1
    Write of size 1 at addr ffff8801d013b798 by task syz-executor3/6242
    
    CPU: 1 PID: 6242 Comm: syz-executor3 Not tainted 4.16.0-rc2+ #253
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x24d lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x23b/0x360 mm/kasan/report.c:412
     __asan_report_store1_noabort+0x17/0x20 mm/kasan/report.c:435
     setup_udp_tunnel_sock+0x3ee/0x5f0 net/ipv4/udp_tunnel.c:69
     l2tp_tunnel_create+0x1354/0x17f0 net/l2tp/l2tp_core.c:1596
     pppol2tp_connect+0x14b1/0x1dd0 net/l2tp/l2tp_ppp.c:707
     SYSC_connect+0x213/0x4a0 net/socket.c:1640
     SyS_connect+0x24/0x30 net/socket.c:1621
     do_syscall_64+0x280/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: fd558d186df2 ("l2tp: Split pppol2tp patch into separate l2tp and ppp parts")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 10b6b9147da2c19c24d5acd66a7418f1bfc8527a
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Mon Mar 5 20:52:54 2018 +0300

    sch_netem: fix skb leak in netem_enqueue()
    
    commit 35d889d10b649fda66121891ec05eca88150059d upstream.
    
    When we exceed current packets limit and we have more than one
    segment in the list returned by skb_gso_segment(), netem drops
    only the first one, skipping the rest, hence kmemleak reports:
    
    unreferenced object 0xffff880b5d23b600 (size 1024):
      comm "softirq", pid 0, jiffies 4384527763 (age 2770.629s)
      hex dump (first 32 bytes):
        00 80 23 5d 0b 88 ff ff 00 00 00 00 00 00 00 00  ..#]............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000d8a19b9d>] __alloc_skb+0xc9/0x520
        [<000000001709b32f>] skb_segment+0x8c8/0x3710
        [<00000000c7b9bb88>] tcp_gso_segment+0x331/0x1830
        [<00000000c921cba1>] inet_gso_segment+0x476/0x1370
        [<000000008b762dd4>] skb_mac_gso_segment+0x1f9/0x510
        [<000000002182660a>] __skb_gso_segment+0x1dd/0x620
        [<00000000412651b9>] netem_enqueue+0x1536/0x2590 [sch_netem]
        [<0000000005d3b2a9>] __dev_queue_xmit+0x1167/0x2120
        [<00000000fc5f7327>] ip_finish_output2+0x998/0xf00
        [<00000000d309e9d3>] ip_output+0x1aa/0x2c0
        [<000000007ecbd3a4>] tcp_transmit_skb+0x18db/0x3670
        [<0000000042d2a45f>] tcp_write_xmit+0x4d4/0x58c0
        [<0000000056a44199>] tcp_tasklet_func+0x3d9/0x540
        [<0000000013d06d02>] tasklet_action+0x1ca/0x250
        [<00000000fcde0b8b>] __do_softirq+0x1b4/0x5a3
        [<00000000e7ed027c>] irq_exit+0x1e2/0x210
    
    Fix it by adding the rest of the segments, if any, to skb 'to_free'
    list. Add new __qdisc_drop_all() and qdisc_drop_all() functions
    because they can be useful in the future if we need to drop segmented
    GSO packets in other places.
    
    Fixes: 6071bd1aa13e ("netem: Segment GSO packets on enqueue")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16:
     - The reshape_fail operation still exists, so keep calling it here if the
       skb did not require segmentation
     - We don't have a to_free list, so free directly in qdisc_drop_all()
     - Open-code qdisc_qstats_drop()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ae113a12239ddb3f30d134dc34b4586a5c05171a
Author: Arend Van Spriel <arend.vanspriel@broadcom.com>
Date:   Wed Feb 28 21:15:20 2018 +0100

    brcmfmac: fix P2P_DEVICE ethernet address generation
    
    commit 455f3e76cfc0d893585a5f358b9ddbe9c1e1e53b upstream.
    
    The firmware has a requirement that the P2P_DEVICE address should
    be different from the address of the primary interface. When not
    specified by user-space, the driver generates the MAC address for
    the P2P_DEVICE interface using the MAC address of the primary
    interface and setting the locally administered bit. However, the MAC
    address of the primary interface may already have that bit set causing
    the creation of the P2P_DEVICE interface to fail with -EBUSY. Fix this
    by using a random address instead to determine the P2P_DEVICE address.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
    Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
    Reviewed-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 792074e039eec26cd1b9f9652b8668cce25f5bda
Author: Danilo Krummrich <danilokrummrich@dk-develop.de>
Date:   Tue Mar 6 09:38:49 2018 +0100

    usb: quirks: add control message delay for 1b1c:1b20
    
    commit cb88a0588717ba6c756cb5972d75766b273a6817 upstream.
    
    Corsair Strafe RGB keyboard does not respond to usb control messages
    sometimes and hence generates timeouts.
    
    Commit de3af5bf259d ("usb: quirks: add delay init quirk for Corsair
    Strafe RGB keyboard") tried to fix those timeouts by adding
    USB_QUIRK_DELAY_INIT.
    
    Unfortunately, even with this quirk timeouts of usb_control_msg()
    can still be seen, but with a lower frequency (approx. 1 out of 15):
    
    [   29.103520] usb 1-8: string descriptor 0 read error: -110
    [   34.363097] usb 1-8: can't set config #1, error -110
    
    Adding further delays to different locations where usb control
    messages are issued just moves the timeouts to other locations,
    e.g.:
    
    [   35.400533] usbhid 1-8:1.0: can't add hid device: -110
    [   35.401014] usbhid: probe of 1-8:1.0 failed with error -110
    
    The only way to reliably avoid those issues is having a pause after
    each usb control message. In approx. 200 boot cycles no more timeouts
    were seen.
    
    Addionaly, keep USB_QUIRK_DELAY_INIT as it turned out to be necessary
    to have the delay in hub_port_connect() after hub_port_init().
    
    The overall boot time seems not to be influenced by these additional
    delays, even on fast machines and lightweight distributions.
    
    Fixes: de3af5bf259d ("usb: quirks: add delay init quirk for Corsair Strafe RGB keyboard")
    Signed-off-by: Danilo Krummrich <danilokrummrich@dk-develop.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2a3415ade400cfd79f924a2a2d22f8a7e0e4c09a
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Mar 6 15:04:24 2018 +0100

    uas: fix comparison for error code
    
    commit 9a513c905bb95bef79d96feb08621c1ec8d8c4bb upstream.
    
    A typo broke the comparison.
    
    Fixes: cbeef22fd611 ("usb: uas: unconditionally bring back host after reset")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7944067b7e77b4b3c6de4b44e186798e70751557
Author: Justin Chen <justinpopo6@gmail.com>
Date:   Wed Sep 27 17:15:15 2017 -0700

    MIPS: BMIPS: Do not mask IPIs during suspend
    
    commit 06a3f0c9f2725f5d7c63c4203839373c9bd00c28 upstream.
    
    Commit a3e6c1eff548 ("MIPS: IRQ: Fix disable_irq on CPU IRQs") fixes an
    issue where disable_irq did not actually disable the irq. The bug caused
    our IPIs to not be disabled, which actually is the correct behavior.
    
    With the addition of commit a3e6c1eff548 ("MIPS: IRQ: Fix disable_irq on
    CPU IRQs"), the IPIs were getting disabled going into suspend, thus
    schedule_ipi() was not being called. This caused deadlocks where
    schedulable task were not being scheduled and other cpus were waiting
    for them to do something.
    
    Add the IRQF_NO_SUSPEND flag so an irq_disable will not be called on the
    IPIs during suspend.
    
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Fixes: a3e6c1eff548 ("MIPS: IRQ: Fix disabled_irq on CPU IRQs")
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17385/
    [jhogan@kernel.org: checkpatch: wrap long lines and fix commit refs]
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c72aca3619178e23a8c87c058158661c67692b61
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Feb 14 12:19:06 2018 +0000

    ia64: convert unwcheck.py to python3
    
    commit bd5edbe677948d0883f59d9625c444818d5284b1 upstream.
    
    Since my system use python3 as default, arch/ia64/scripts/unwcheck.py no
    longer run.
    
    This patch convert it to the python3 syntax.
    I have ran it with python2/python3 while printing values of
    start/end/rlen_sum which could be impacted by this change and I see no difference.
    
    Fixes: 94a47083522e ("scripts: change scripts to use system python instead of env")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 30def1e8ff413f89fbdbbf2ab799bfbfb8f45c67
Author: Michael Lyle <mlyle@lyle.org>
Date:   Mon Mar 5 13:41:55 2018 -0800

    bcache: don't attach backing with duplicate UUID
    
    commit 86755b7a96faed57f910f9e6b8061e019ac1ec08 upstream.
    
    This can happen e.g. during disk cloning.
    
    This is an incomplete fix: it does not catch duplicate UUIDs earlier
    when things are still unattached.  It does not unregister the device.
    Further changes to cope better with this are planned but conflict with
    Coly's ongoing improvements to handling device errors.  In the meantime,
    one can manually stop the device after this has happened.
    
    Attempts to attach a duplicate device result in:
    
    [  136.372404] loop: module loaded
    [  136.424461] bcache: register_bdev() registered backing device loop0
    [  136.424464] bcache: bch_cached_dev_attach() Tried to attach loop0 but duplicate UUID already attached
    
    My test procedure is:
    
      dd if=/dev/sdb1 of=imgfile bs=1024 count=262144
      losetup -f imgfile
    
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Tang Junhui <tang.junhui@zte.com.cn>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b1073af3b80c100044c6d60979038eb1d7094c01
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Mar 5 13:41:54 2018 -0800

    bcache: fix crashes in duplicate cache device register
    
    commit cc40daf91bdddbba72a4a8cd0860640e06668309 upstream.
    
    Kernel crashed when register a duplicate cache device, the call trace is
    bellow:
    [  417.643790] CPU: 1 PID: 16886 Comm: bcache-register Tainted: G
       W  OE    4.15.5-amd64-preempt-sysrq-20171018 #2
    [  417.643861] Hardware name: LENOVO 20ERCTO1WW/20ERCTO1WW, BIOS
    N1DET41W (1.15 ) 12/31/2015
    [  417.643870] RIP: 0010:bdevname+0x13/0x1e
    [  417.643876] RSP: 0018:ffffa3aa9138fd38 EFLAGS: 00010282
    [  417.643884] RAX: 0000000000000000 RBX: ffff8c8f2f2f8000 RCX: ffffd6701f8
    c7edf
    [  417.643890] RDX: ffffa3aa9138fd88 RSI: ffffa3aa9138fd88 RDI: 00000000000
    00000
    [  417.643895] RBP: ffffa3aa9138fde0 R08: ffffa3aa9138fae8 R09: 00000000000
    1850e
    [  417.643901] R10: ffff8c8eed34b271 R11: ffff8c8eed34b250 R12: 00000000000
    00000
    [  417.643906] R13: ffffd6701f78f940 R14: ffff8c8f38f80000 R15: ffff8c8ea7d
    90000
    [  417.643913] FS:  00007fde7e66f500(0000) GS:ffff8c8f61440000(0000) knlGS:
    0000000000000000
    [  417.643919] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  417.643925] CR2: 0000000000000314 CR3: 00000007e6fa0001 CR4: 00000000003
    606e0
    [  417.643931] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 00000000000
    00000
    [  417.643938] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 00000000000
    00400
    [  417.643946] Call Trace:
    [  417.643978]  register_bcache+0x1117/0x1270 [bcache]
    [  417.643994]  ? slab_pre_alloc_hook+0x15/0x3c
    [  417.644001]  ? slab_post_alloc_hook.isra.44+0xa/0x1a
    [  417.644013]  ? kernfs_fop_write+0xf6/0x138
    [  417.644020]  kernfs_fop_write+0xf6/0x138
    [  417.644031]  __vfs_write+0x31/0xcc
    [  417.644043]  ? current_kernel_time64+0x10/0x36
    [  417.644115]  ? __audit_syscall_entry+0xbf/0xe3
    [  417.644124]  vfs_write+0xa5/0xe2
    [  417.644133]  SyS_write+0x5c/0x9f
    [  417.644144]  do_syscall_64+0x72/0x81
    [  417.644161]  entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    [  417.644169] RIP: 0033:0x7fde7e1c1974
    [  417.644175] RSP: 002b:00007fff13009a38 EFLAGS: 00000246 ORIG_RAX: 0000000
    000000001
    [  417.644183] RAX: ffffffffffffffda RBX: 0000000001658280 RCX: 00007fde7e1c
    1974
    [  417.644188] RDX: 000000000000000a RSI: 0000000001658280 RDI: 000000000000
    0001
    [  417.644193] RBP: 000000000000000a R08: 0000000000000003 R09: 000000000000
    0077
    [  417.644198] R10: 000000000000089e R11: 0000000000000246 R12: 000000000000
    0001
    [  417.644203] R13: 000000000000000a R14: 7fffffffffffffff R15: 000000000000
    0000
    [  417.644213] Code: c7 c2 83 6f ee 98 be 20 00 00 00 48 89 df e8 6c 27 3b 0
    0 48 89 d8 5b c3 0f 1f 44 00 00 48 8b 47 70 48 89 f2 48 8b bf 80 00 00 00 <8
    b> b0 14 03 00 00 e9 73 ff ff ff 0f 1f 44 00 00 48 8b 47 40 39
    [  417.644302] RIP: bdevname+0x13/0x1e RSP: ffffa3aa9138fd38
    [  417.644306] CR2: 0000000000000314
    
    When registering duplicate cache device in register_cache(), after failure
    on calling register_cache_set(), bch_cache_release() will be called, then
    bdev will be freed, so bdevname(bdev, name) caused kernel crash.
    
    Since bch_cache_release() will free bdev, so in this patch we make sure
    bdev being freed if register_cache() fail, and do not free bdev again in
    register_bcache() when register_cache() fail.
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reported-by: Marc MERLIN <marc@merlins.org>
    Tested-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ad1b915b5c28590b7ec2f9e34cd4d12241b0338b
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Tue Feb 20 15:12:00 2018 +0900

    e1000e: Fix check_for_link return value with autoneg off
    
    commit 4e7dc08e57c95673d2edaba8983c3de4dd1f65f5 upstream.
    
    When autoneg is off, the .check_for_link callback functions clear the
    get_link_status flag and systematically return a "pseudo-error". This means
    that the link is not detected as up until the next execution of the
    e1000_watchdog_task() 2 seconds later.
    
    Fixes: 19110cfbb34d ("e1000e: Separate signaling for link check/link up")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Acked-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99ed7887a24e723ec04b9627e9808d407735c9fd
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Mar 2 11:36:33 2018 +0100

    PCI: Add function 1 DMA alias quirk for Highpoint RocketRAID 644L
    
    commit 1903be8222b7c278ca897c129ce477c1dd6403a8 upstream.
    
    The Highpoint RocketRAID 644L uses a Marvel 88SE9235 controller, as with
    other Marvel controllers this needs a function 1 DMA alias quirk.
    
    Note the RocketRAID 642L uses the same Marvel 88SE9235 controller and
    already is listed with a function 1 DMA alias quirk.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1534106
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 94df1082220905af7db0151610e7c8290e5d51d8
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Mar 2 11:36:32 2018 +0100

    ahci: Add PCI-id for the Highpoint Rocketraid 644L card
    
    commit 28b2182dad43f6f8fcbd167539a26714fd12bd64 upstream.
    
    Like the Highpoint Rocketraid 642L and cards using a Marvel 88SE9235
    controller in general, this RAID card also supports AHCI mode and short
    of a custom driver, this is the only way to make it work under Linux.
    
    Note that even though the card is called to 644L, it has a product-id
    of 0x0645.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1534106
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 267e14cfbc8ce2caec67718b7275a7923813ef67
Author: Jason Yan <yanaijie@huawei.com>
Date:   Wed Feb 28 09:11:10 2018 +0800

    ata: do not schedule hot plug if it is a sas host
    
    commit 6f54120e17e311fd7ac42b9ec2a0611caa5b46ad upstream.
    
    We've got a kernel panic when using sata disk with sas controller:
    
    [115946.152283] Unable to handle kernel NULL pointer dereference at virtual address 000007d8
    [115946.223963] CPU: 0 PID: 22175 Comm: kworker/0:1 Tainted: G   W OEL  4.14.0 #1
    [115946.232925] Workqueue: events ata_scsi_hotplug
    [115946.237938] task: ffff8021ee50b180 task.stack: ffff00000d5d0000
    [115946.244717] PC is at sas_find_dev_by_rphy+0x44/0x114
    [115946.250224] LR is at sas_find_dev_by_rphy+0x3c/0x114
    ......
    [115946.355701] Process kworker/0:1 (pid: 22175, stack limit = 0xffff00000d5d0000)
    [115946.363369] Call trace:
    [115946.456356] [<ffff000008878a9c>] sas_find_dev_by_rphy+0x44/0x114
    [115946.462908] [<ffff000008878b8c>] sas_target_alloc+0x20/0x5c
    [115946.469408] [<ffff00000885a31c>] scsi_alloc_target+0x250/0x308
    [115946.475781] [<ffff00000885ba30>] __scsi_add_device+0xb0/0x154
    [115946.481991] [<ffff0000088b520c>] ata_scsi_scan_host+0x180/0x218
    [115946.488367] [<ffff0000088b53d8>] ata_scsi_hotplug+0xb0/0xcc
    [115946.494801] [<ffff0000080ebd70>] process_one_work+0x144/0x390
    [115946.501115] [<ffff0000080ec100>] worker_thread+0x144/0x418
    [115946.507093] [<ffff0000080f2c98>] kthread+0x10c/0x138
    [115946.512792] [<ffff0000080855dc>] ret_from_fork+0x10/0x18
    
    We found that Ding Xiang has reported a similar bug before:
    https://patchwork.kernel.org/patch/9179817/
    
    And this bug still exists in mainline. Since libsas handles hotplug and
    device adding/removing itself, do not need to schedule ata hot plug task
    here if it is a sas host.
    
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    Cc: Ding Xiang <dingxiang@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e36909b37bcb89d57ee81a7aef151b7f02b2a496
Author: Shaohua Li <shli@fb.com>
Date:   Thu Mar 12 10:32:18 2015 -0700

    ata: Add a new flag to destinguish sas controller
    
    commit 5067c0469c643512f24786990e315f9c15cc7d24 upstream.
    
    SAS controller has its own tag allocation, which doesn't directly match to ATA
    tag, so SAS and SATA have different code path for ata tags. Originally we use
    port->scsi_host (98bd4be1) to destinguish SAS controller, but libsas set
    ->scsi_host too, so we can't use it for the destinguish, we add a new flag for
    this purpose.
    
    Without this patch, the following oops can happen because scsi-mq uses
    a host-wide tag map shared among all devices with some integer tag
    values >= ATA_MAX_QUEUE.  These unexpectedly high tag values cause
    __ata_qc_from_tag() to return NULL, which is then dereferenced in
    ata_qc_new_init().
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000058
      IP: [<ffffffff804fd46e>] ata_qc_new_init+0x3e/0x120
      PGD 32adf0067 PUD 32adf1067 PMD 0
      Oops: 0002 [#1] SMP DEBUG_PAGEALLOC
      Modules linked in: iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi igb
      i2c_algo_bit ptp pps_core pm80xx libsas scsi_transport_sas sg coretemp
      eeprom w83795 i2c_i801
      CPU: 4 PID: 1450 Comm: cydiskbench Not tainted 4.0.0-rc3 #1
      Hardware name: Supermicro X8DTH-i/6/iF/6F/X8DTH, BIOS 2.1b       05/04/12
      task: ffff8800ba86d500 ti: ffff88032a064000 task.ti: ffff88032a064000
      RIP: 0010:[<ffffffff804fd46e>]  [<ffffffff804fd46e>] ata_qc_new_init+0x3e/0x120
      RSP: 0018:ffff88032a067858  EFLAGS: 00010046
      RAX: 0000000000000000 RBX: ffff8800ba0d2230 RCX: 000000000000002a
      RDX: ffffffff80505ae0 RSI: 0000000000000020 RDI: ffff8800ba0d2230
      RBP: ffff88032a067868 R08: 0000000000000201 R09: 0000000000000001
      R10: 0000000000000000 R11: 0000000000000000 R12: ffff8800ba0d0000
      R13: ffff8800ba0d2230 R14: ffffffff80505ae0 R15: ffff8800ba0d0000
      FS:  0000000041223950(0063) GS:ffff88033e480000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
      CR2: 0000000000000058 CR3: 000000032a0a3000 CR4: 00000000000006e0
      Stack:
       ffff880329eee758 ffff880329eee758 ffff88032a0678a8 ffffffff80502dad
       ffff8800ba167978 ffff880329eee758 ffff88032bf9c520 ffff8800ba167978
       ffff88032bf9c520 ffff88032bf9a290 ffff88032a0678b8 ffffffff80506909
      Call Trace:
       [<ffffffff80502dad>] ata_scsi_translate+0x3d/0x1b0
       [<ffffffff80506909>] ata_sas_queuecmd+0x149/0x2a0
       [<ffffffffa0046650>] sas_queuecommand+0xa0/0x1f0 [libsas]
       [<ffffffff804ea544>] scsi_dispatch_cmd+0xd4/0x1a0
       [<ffffffff804eb50f>] scsi_queue_rq+0x66f/0x7f0
       [<ffffffff803e5098>] __blk_mq_run_hw_queue+0x208/0x3f0
       [<ffffffff803e54b8>] blk_mq_run_hw_queue+0x88/0xc0
       [<ffffffff803e5c74>] blk_mq_insert_request+0xc4/0x130
       [<ffffffff803e0b63>] blk_execute_rq_nowait+0x73/0x160
       [<ffffffffa0023fca>] sg_common_write+0x3da/0x720 [sg]
       [<ffffffffa0025100>] sg_new_write+0x250/0x360 [sg]
       [<ffffffffa0025feb>] sg_write+0x13b/0x450 [sg]
       [<ffffffff8032ec91>] vfs_write+0xd1/0x1b0
       [<ffffffff8032ee54>] SyS_write+0x54/0xc0
       [<ffffffff80689932>] system_call_fastpath+0x12/0x17
    
    tj: updated description.
    
    Fixes: 12cb5ce101ab ("libata: use blk taging")
    Reported-and-tested-by: Tony Battersby <tonyb@cybernetics.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [bwh: Backported to 3.16: Drop changes to ata_qc_{new_init,free}(); we don't
     actually have the tag allocation bug]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a06d9fa17cf462e5a342b38ac767c5f1711e7a66
Author: Joel Fernandes <joelaf@google.com>
Date:   Fri Feb 16 11:02:01 2018 -0800

    staging: android: ashmem: Fix lockdep issue during llseek
    
    commit cb57469c9573f6018cd1302953dd45d6e05aba7b upstream.
    
    ashmem_mutex create a chain of dependencies like so:
    
    (1)
    mmap syscall ->
      mmap_sem ->  (acquired)
      ashmem_mmap
      ashmem_mutex (try to acquire)
      (block)
    
    (2)
    llseek syscall ->
      ashmem_llseek ->
      ashmem_mutex ->  (acquired)
      inode_lock ->
      inode->i_rwsem (try to acquire)
      (block)
    
    (3)
    getdents ->
      iterate_dir ->
      inode_lock ->
      inode->i_rwsem   (acquired)
      copy_to_user ->
      mmap_sem         (try to acquire)
    
    There is a lock ordering created between mmap_sem and inode->i_rwsem
    causing a lockdep splat [2] during a syzcaller test, this patch fixes
    the issue by unlocking the mutex earlier. Functionally that's Ok since
    we don't need to protect vfs_llseek.
    
    [1] https://patchwork.kernel.org/patch/10185031/
    [2] https://lkml.org/lkml/2018/1/10/48
    
    Acked-by: Todd Kjos <tkjos@google.com>
    Cc: Arve Hjonnevag <arve@android.com>
    Reported-by: syzbot+8ec30bb7bf1a981a2012@syzkaller.appspotmail.com
    Signed-off-by: Joel Fernandes <joelaf@google.com>
    Acked-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f68f46284a199f6837c1d5b94a6ae979a2cc463c
Author: Hans van Kranenburg <hans.van.kranenburg@mendix.com>
Date:   Mon Feb 5 17:45:11 2018 +0100

    btrfs: alloc_chunk: fix DUP stripe size handling
    
    commit 92e222df7b8f05c565009c7383321b593eca488b upstream.
    
    In case of using DUP, we search for enough unallocated disk space on a
    device to hold two stripes.
    
    The devices_info[ndevs-1].max_avail that holds the amount of unallocated
    space found is directly assigned to stripe_size, while it's actually
    twice the stripe size.
    
    Later on in the code, an unconditional division of stripe_size by
    dev_stripes corrects the value, but in the meantime there's a check to
    see if the stripe_size does not exceed max_chunk_size. Since during this
    check stripe_size is twice the amount as intended, the check will reduce
    the stripe_size to max_chunk_size if the actual correct to be used
    stripe_size is more than half the amount of max_chunk_size.
    
    The unconditional division later tries to correct stripe_size, but will
    actually make sure we can't allocate more than half the max_chunk_size.
    
    Fix this by moving the division by dev_stripes before the max chunk size
    check, so it always contains the right value, instead of putting a duct
    tape division in further on to get it fixed again.
    
    Since in all other cases than DUP, dev_stripes is 1, this change only
    affects DUP.
    
    Other attempts in the past were made to fix this:
    * 37db63a400 "Btrfs: fix max chunk size check in chunk allocator" tried
    to fix the same problem, but still resulted in part of the code acting
    on a wrongly doubled stripe_size value.
    * 86db25785a "Btrfs: fix max chunk size on raid5/6" unintentionally
    broke this fix again.
    
    The real problem was already introduced with the rest of the code in
    73c5de0051.
    
    The user visible result however will be that the max chunk size for DUP
    will suddenly double, while it's actually acting according to the limits
    in the code again like it was 5 years ago.
    
    Reported-by: Naohiro Aota <naohiro.aota@wdc.com>
    Link: https://www.spinics.net/lists/linux-btrfs/msg69752.html
    Fixes: 73c5de0051 ("btrfs: quasi-round-robin for chunk allocation")
    Fixes: 86db25785a ("Btrfs: fix max chunk size on raid5/6")
    Signed-off-by: Hans van Kranenburg <hans.van.kranenburg@mendix.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ update comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: We were using do_div() here]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 262f635a95a29923ffcf48c041020ef3089c629e
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Wed Feb 28 18:44:34 2018 +0000

    KVM: s390: provide io interrupt kvm_stat
    
    commit 09a0fb67536a49af19f2bfc632100e9de91fe526 upstream.
    
    We already count io interrupts, but we forgot to print them.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: d8346b7d9b ("KVM: s390: Support for I/O interrupts.")
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 308c157d85743d4ee3a9f01b7282816af699e3ba
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Wed Feb 28 09:19:03 2018 +0000

    xen/pirq: fix error path cleanup when binding MSIs
    
    commit 910f8befdf5bccf25287d9f1743e3e546bcb7ce0 upstream.
    
    Current cleanup in the error path of xen_bind_pirq_msi_to_irq is
    wrong. First of all there's an off-by-one in the cleanup loop, which
    can lead to unbinding wrong IRQs.
    
    Secondly IRQs not bound won't be freed, thus leaking IRQ numbers.
    
    Note that there's no need to differentiate between bound and unbound
    IRQs when freeing them, __unbind_from_irq will deal with both of them
    correctly.
    
    Fixes: 4892c9b4ada9f9 ("xen: add support for MSI message groups")
    Reported-by: Hooman Mirhadi <mirhadih@amazon.com>
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Amit Shah <aams@amazon.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69992a0ace74c52c41e63ff98e49dde44bd2d178
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Feb 26 15:08:18 2018 +0100

    x86/xen: Zero MSR_IA32_SPEC_CTRL before suspend
    
    commit 71c208dd54ab971036d83ff6d9837bae4976e623 upstream.
    
    Older Xen versions (4.5 and before) might have problems migrating pv
    guests with MSR_IA32_SPEC_CTRL having a non-zero value. So before
    suspending zero that MSR and restore it after being resumed.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Cc: xen-devel@lists.xenproject.org
    Cc: boris.ostrovsky@oracle.com
    Link: https://lkml.kernel.org/r/20180226140818.4849-1-jgross@suse.com
    [bwh: Backported to 3.16:
     - Include <asm/cpufeature.h> instead of <asm/cpufeatures.h>
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 68989898005a788045b696264e678af4816868e3
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Thu May 7 12:55:23 2015 -0400

    xen/arm: Define xen_arch_suspend()
    
    commit ffb7dbed47da6ac4460b606a3feee295bbe4d9e2 upstream.
    
    Commit 2b953a5e994c ("xen: Suspend ticks on all CPUs during suspend")
    introduced xen_arch_suspend() routine but did so only for x86, breaking
    ARM builds.
    
    We need to add it to ARM as well.
    
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Reported-by: Michal Suchanek <hramrach@gmail.com>
    Tested-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 72c6776c76325f950a6f5963137febd3907a7720
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Jun 4 01:51:42 2018 +0100

    xen: Add xen_arch_suspend()
    
    This is based on commit 2b953a5e994ce279904ec70220f7d4f31d380a0a
    upstream, "xen: Suspend ticks on all CPUs during suspend", but
    excluding the bug fix in that commit which is not needed in 3.16.
    We only need the xen_arch_suspend() hook for the following fix.
    
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ec88bd138bb46068f6efd99a96b8cf1f6f1e66d2
Author: Ulrich Hecht <ulrich.hecht+renesas@gmail.com>
Date:   Thu Feb 15 13:02:27 2018 +0100

    serial: sh-sci: prevent lockup on full TTY buffers
    
    commit 7842055bfce4bf0170d0f61df8b2add8399697be upstream.
    
    When the TTY buffers fill up to the configured maximum, a system lockup
    occurs:
    
    [  598.820128] INFO: rcu_preempt detected stalls on CPUs/tasks:
    [  598.825796]  0-...!: (1 GPs behind) idle=5a6/2/0 softirq=1974/1974 fqs=1
    [  598.832577]  (detected by 3, t=62517 jiffies, g=296, c=295, q=126)
    [  598.838755] Task dump for CPU 0:
    [  598.841977] swapper/0       R  running task        0     0      0 0x00000022
    [  598.849023] Call trace:
    [  598.851476]  __switch_to+0x98/0xb0
    [  598.854870]            (null)
    
    This can be prevented by doing a dummy read of the RX data register.
    
    This issue affects both HSCIF and SCIF ports. Reported for R-Car H3 ES2.0;
    reproduced and fixed on H3 ES1.1. Probably affects other R-Car platforms
    as well.
    
    Reported-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Ulrich Hecht <ulrich.hecht+renesas@gmail.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Tested-by: Nguyen Viet Dung <dung.nguyen.aj@renesas.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0bb7626bc870116a17d3252f72ee332335f767d3
Author: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
Date:   Tue Feb 13 15:04:46 2018 +0100

    serial: 8250_pci: Add Brainboxes UC-260 4 port serial device
    
    commit 9f2068f35729948bde84d87a40d135015911345d upstream.
    
    Add PCI ids for two variants of Brainboxes UC-260 quad port
    PCI serial cards.
    
    Suggested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6debc92e4c7c84c6380bb063265aed271eb1fd7e
Author: Jonas Danielsson <jonas@orbital-systems.com>
Date:   Mon Jan 29 12:39:15 2018 +0100

    tty/serial: atmel: add new version check for usart
    
    commit fd63a8903a2c40425a9811c3371dd4d0f42c0ad3 upstream.
    
    On our at91sam9260 based board the usart0 and usart1 ports report
    their versions (ATMEL_US_VERSION) as 0x10302. This version is not
    included in the current checks in the driver.
    
    Signed-off-by: Jonas Danielsson <jonas@orbital-systems.com>
    Acked-by: Richard Genoud <richard.genoud@gmail.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 159e2516a5eda02907fd6ea407986f68fa3e7b73
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Feb 13 07:38:08 2018 -0800

    tty: make n_tty_read() always abort if hangup is in progress
    
    commit 28b0f8a6962a24ed21737578f3b1b07424635c9e upstream.
    
    A tty is hung up by __tty_hangup() setting file->f_op to
    hung_up_tty_fops, which is skipped on ttys whose write operation isn't
    tty_write().  This means that, for example, /dev/console whose write
    op is redirected_tty_write() is never actually marked hung up.
    
    Because n_tty_read() uses the hung up status to decide whether to
    abort the waiting readers, the lack of hung-up marking can lead to the
    following scenario.
    
     1. A session contains two processes.  The leader and its child.  The
        child ignores SIGHUP.
    
     2. The leader exits and starts disassociating from the controlling
        terminal (/dev/console).
    
     3. __tty_hangup() skips setting f_op to hung_up_tty_fops.
    
     4. SIGHUP is delivered and ignored.
    
     5. tty_ldisc_hangup() is invoked.  It wakes up the waits which should
        clear the read lockers of tty->ldisc_sem.
    
     6. The reader wakes up but because tty_hung_up_p() is false, it
        doesn't abort and goes back to sleep while read-holding
        tty->ldisc_sem.
    
     7. The leader progresses to tty_ldisc_lock() in tty_ldisc_hangup()
        and is now stuck in D sleep indefinitely waiting for
        tty->ldisc_sem.
    
    The following is Alan's explanation on why some ttys aren't hung up.
    
     http://lkml.kernel.org/r/20171101170908.6ad08580@alans-desktop
    
     1. It broke the serial consoles because they would hang up and close
        down the hardware. With tty_port that *should* be fixable properly
        for any cases remaining.
    
     2. The console layer was (and still is) completely broken and doens't
        refcount properly. So if you turn on console hangups it breaks (as
        indeed does freeing consoles and half a dozen other things).
    
    As neither can be fixed quickly, this patch works around the problem
    by introducing a new flag, TTY_HUPPING, which is used solely to tell
    n_tty_read() that hang-up is in progress for the console and the
    readers should be aborted regardless of the hung-up status of the
    device.
    
    The following is a sample hung task warning caused by this issue.
    
      INFO: task agetty:2662 blocked for more than 120 seconds.
            Not tainted 4.11.3-dbg-tty-lockup-02478-gfd6c7ee-dirty #28
      "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
          0  2662      1 0x00000086
      Call Trace:
       __schedule+0x267/0x890
       schedule+0x36/0x80
       schedule_timeout+0x23c/0x2e0
       ldsem_down_write+0xce/0x1f6
       tty_ldisc_lock+0x16/0x30
       tty_ldisc_hangup+0xb3/0x1b0
       __tty_hangup+0x300/0x410
       disassociate_ctty+0x6c/0x290
       do_exit+0x7ef/0xb00
       do_group_exit+0x3f/0xa0
       get_signal+0x1b3/0x5d0
       do_signal+0x28/0x660
       exit_to_usermode_loop+0x46/0x86
       do_syscall_64+0x9c/0xb0
       entry_SYSCALL64_slow_path+0x25/0x25
    
    The following is the repro.  Run "$PROG /dev/console".  The parent
    process hangs in D state.
    
      #include <sys/types.h>
      #include <sys/stat.h>
      #include <sys/wait.h>
      #include <sys/ioctl.h>
      #include <fcntl.h>
      #include <unistd.h>
      #include <stdio.h>
      #include <stdlib.h>
      #include <errno.h>
      #include <signal.h>
      #include <time.h>
      #include <termios.h>
    
      int main(int argc, char **argv)
      {
              struct sigaction sact = { .sa_handler = SIG_IGN };
              struct timespec ts1s = { .tv_sec = 1 };
              pid_t pid;
              int fd;
    
              if (argc < 2) {
                      fprintf(stderr, "test-hung-tty /dev/$TTY\n");
                      return 1;
              }
    
              /* fork a child to ensure that it isn't already the session leader */
              pid = fork();
              if (pid < 0) {
                      perror("fork");
                      return 1;
              }
    
              if (pid > 0) {
                      /* top parent, wait for everyone */
                      while (waitpid(-1, NULL, 0) >= 0)
                              ;
                      if (errno != ECHILD)
                              perror("waitpid");
                      return 0;
              }
    
              /* new session, start a new session and set the controlling tty */
              if (setsid() < 0) {
                      perror("setsid");
                      return 1;
              }
    
              fd = open(argv[1], O_RDWR);
              if (fd < 0) {
                      perror("open");
                      return 1;
              }
    
              if (ioctl(fd, TIOCSCTTY, 1) < 0) {
                      perror("ioctl");
                      return 1;
              }
    
              /* fork a child, sleep a bit and exit */
              pid = fork();
              if (pid < 0) {
                      perror("fork");
                      return 1;
              }
    
              if (pid > 0) {
                      nanosleep(&ts1s, NULL);
                      printf("Session leader exiting\n");
                      exit(0);
              }
    
              /*
               * The child ignores SIGHUP and keeps reading from the controlling
               * tty.  Because SIGHUP is ignored, the child doesn't get killed on
               * parent exit and the bug in n_tty makes the read(2) block the
               * parent's control terminal hangup attempt.  The parent ends up in
               * D sleep until the child is explicitly killed.
               */
              sigaction(SIGHUP, &sact, NULL);
              printf("Child reading tty\n");
              while (1) {
                      char buf[1024];
    
                      if (read(fd, buf, sizeof(buf)) < 0) {
                              perror("read");
                              return 1;
                      }
              }
    
              return 0;
      }
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Alan Cox <alan@llwyncelyn.cymru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: TTY_HUPPING is not really a new flag; it's an old flag
     that was wrongly removed in 3.19.  Just add the test for it in n_tty_read().]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3ae942e39a5f1d938a2ff0870ebb6f715973f58d
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri Feb 23 09:38:28 2018 +0530

    cpufreq: s3c24xx: Fix broken s3c_cpufreq_init()
    
    commit 0373ca74831b0f93cd4cdbf7ad3aec3c33a479a5 upstream.
    
    commit a307a1e6bc0d "cpufreq: s3c: use cpufreq_generic_init()"
    accidentally broke cpufreq on s3c2410 and s3c2412.
    
    These two platforms don't have a CPU frequency table and used to skip
    calling cpufreq_table_validate_and_show() for them.  But with the
    above commit, we started calling it unconditionally and that will
    eventually fail as the frequency table pointer is NULL.
    
    Fix this by calling cpufreq_table_validate_and_show() conditionally
    again.
    
    Fixes: a307a1e6bc0d "cpufreq: s3c: use cpufreq_generic_init()"
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit db7d431792b31d77d59cb441b588d794330e9541
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Sat Feb 24 14:17:23 2018 +0800

    mmc: dw_mmc: Fix out-of-bounds access for slot's caps
    
    commit 0d84b9e5631d923744767dc6608672df906dd092 upstream.
    
    Add num_caps field for dw_mci_drv_data to validate the controller
    id from DT alias and non-DT ways.
    
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Fixes: 800d78bfccb3 ("mmc: dw_mmc: add support for implementation specific callbacks")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16:
     - Drop changes to dw_mmc-{k3,rockchip,zx}.c
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e7141c0d19bccbcde47d5adb137ec8840035aec1
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Sat Feb 24 14:17:22 2018 +0800

    mmc: dw_mmc: Factor out dw_mci_init_slot_caps
    
    commit a4faa4929ed3be15e2d500d2405f992f6dedc8eb upstream.
    
    Factor out dw_mci_init_slot_caps to consolidate parsing
    all differents types of capabilities from host contrllers.
    No functional change intended.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Fixes: 800d78bfccb3 ("mmc: dw_mmc: add support for implementation specific callbacks")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16:
     - We don't set MMC_CAP_ERASE or MMC_CAP2_SDIO_IRQ_NOTHREAD capabilities
     - Fold in required changes to the exit path from commits 51da2240906c
       "mmc: dw_mmc: use mmc_regulator_get_supply to handle regulators" and
       3cf890fc42b2 "mmc: dw_mmc: Pass back errors from mmc_of_parse()"
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7cefdeacdad81a561770320ca68aea1a065e6f08
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Feb 14 15:57:43 2018 +0200

    mmc: sdhci-pci: Fix S0i3 for Intel BYT-based controllers
    
    commit f8870ae6e2d6be75b1accc2db981169fdfbea7ab upstream.
    
    Tuning can leave the IP in an active state (Buffer Read Enable bit set)
    which prevents the entry to low power states (i.e. S0i3). Data reset will
    clear it.
    
    Generally tuning is followed by a data transfer which will anyway sort out
    the state, so it is rare that S0i3 is actually prevented.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16:
     - Drop chnages in ni_byt_sdio_probe_slot(), byt_sd_probe_slot()
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3cdc0f598bbb455058c230841b7506c26ae9d3a1
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Dec 8 21:50:54 2016 +0900

    mmc: sdhci: export sdhci_execute_tuning()
    
    commit 85a882c2e91d3655927ecdc1db823d1420a65b8f upstream.
    
    Some SDHCI-compat controllers support not only SD, but also eMMC,
    but they use different commands for tuning: CMD19 for SD, CMD21 for
    eMMC.
    
    Due to the difference of the underlying mechanism, some controllers
    (at least, the Cadence IP is the case) provide their own registers
    for the eMMC tuning.
    
    This commit will be useful when we want to override .execute_tuning
    callback (for eMMC HS200 tuning), but still let it fall back to
    sdhci_execute_tuning() for SD timing.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16: Delete an additional prototype]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4ab14428225670bcc4f00bd98919f9ef485b9d1a
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Feb 9 16:12:35 2016 +0200

    mmc: sdhci: Allow override of mmc host operations
    
    commit bf60e592a1af4d6f65dd54593250183f14360eed upstream.
    
    In the past, fixes for specific hardware devices were implemented
    in sdhci using quirks.  That approach is no longer accepted because
    the growing number of quirks was starting to make the code difficult
    to understand and maintain.
    
    One alternative to quirks, is to allow drivers to override the default
    mmc host operations.  This patch makes it easy to do that, and it is
    needed for a subsequent bug fix, for which separate patches are
    provided.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e53bea6bcd65a1bf5925ba6fb9155e587fa45ce7
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:28:08 2018 -0800

    tpm: fix potential buffer overruns caused by bit glitches on the bus
    
    commit 3be23274755ee85771270a23af7691dc9b3a95db upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  If a bit does
    flip it could cause an overrun if it's in one of the size parameters,
    so sanity check that we're not overrunning the provided buffer when
    doing a memcpy().
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    [bwh: Backported to 3.16: Drop the TPM2 bits]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 611e1526f93fa92986dc3bb37bc7f4ad0b7f6f01
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:30:01 2018 -0800

    tpm_i2c_infineon: fix potential buffer overruns caused by bit glitches on the bus
    
    commit 9b8cb28d7c62568a5916bdd7ea1c9176d7f8f2ed upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  In all the
    driver _recv() functions, we need to use a u32 to unmarshal the
    response size, otherwise a bit flip of the 31st bit would cause the
    expected variable to go negative, which would then try to read a huge
    amount of data.  Also sanity check that the expected amount of data is
    large enough for the TPM header.
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit eefc5b494f4ae757cb79ee83d51f0861511b1b8f
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:31:16 2018 -0800

    tpm_i2c_nuvoton: fix potential buffer overruns caused by bit glitches on the bus
    
    commit f9d4d9b5a5ef2f017bc344fb65a58a902517173b upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  In all the
    driver _recv() functions, we need to use a u32 to unmarshal the
    response size, otherwise a bit flip of the 31st bit would cause the
    expected variable to go negative, which would then try to read a huge
    amount of data.  Also sanity check that the expected amount of data is
    large enough for the TPM header.
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c8c45e2bbd7f677ae8689a432a8229f2fd843b48
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:32:06 2018 -0800

    tpm_tis: fix potential buffer overruns caused by bit glitches on the bus
    
    commit 6bb320ca4a4a7b5b3db8c8d7250cc40002046878 upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  In all the
    driver _recv() functions, we need to use a u32 to unmarshal the
    response size, otherwise a bit flip of the 31st bit would cause the
    expected variable to go negative, which would then try to read a huge
    amount of data.  Also sanity check that the expected amount of data is
    large enough for the TPM header.
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dd1642285fba72f7079cfb4e1bd553d7be13ba33
Author: James Chapman <jchapman@katalix.com>
Date:   Fri Feb 23 17:45:47 2018 +0000

    l2tp: fix tunnel lookup use-after-free race
    
    commit 28f5bfb819195ad9c2eb9486babe7b0e4efe925f upstream.
    
    l2tp_tunnel_get walks the tunnel list to find a matching tunnel
    instance and if a match is found, its refcount is increased before
    returning the tunnel pointer. But when tunnel objects are destroyed,
    they are on the tunnel list after their refcount hits zero. Fix this
    by moving the code that removes the tunnel from the tunnel list from
    the tunnel socket destructor into in the l2tp_tunnel_delete path,
    before the tunnel refcount is decremented.
    
    refcount_t: increment on 0; use-after-free.
    WARNING: CPU: 3 PID: 13507 at lib/refcount.c:153 refcount_inc+0x47/0x50
    Modules linked in:
    CPU: 3 PID: 13507 Comm: syzbot_6e6a5ec8 Not tainted 4.16.0-rc2+ #36
    Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    RIP: 0010:refcount_inc+0x47/0x50
    RSP: 0018:ffff8800136ffb20 EFLAGS: 00010286
    RAX: dffffc0000000008 RBX: ffff880017068e68 RCX: ffffffff814d3333
    RDX: 0000000000000000 RSI: ffff88001a59f6d8 RDI: ffff88001a59f6d8
    RBP: ffff8800136ffb28 R08: 0000000000000000 R09: 0000000000000000
    R10: ffff8800136ffab0 R11: 0000000000000000 R12: ffff880017068e50
    R13: 0000000000000000 R14: ffff8800174da800 R15: 0000000000000004
    FS:  00007f403ab1e700(0000) GS:ffff88001a580000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000205fafd2 CR3: 0000000016770000 CR4: 00000000000006e0
    Call Trace:
     l2tp_tunnel_get+0x2dd/0x4e0
     pppol2tp_connect+0x428/0x13c0
     ? pppol2tp_session_create+0x170/0x170
     ? __might_fault+0x115/0x1d0
     ? lock_downgrade+0x860/0x860
     ? __might_fault+0xe5/0x1d0
     ? security_socket_connect+0x8e/0xc0
     SYSC_connect+0x1b6/0x310
     ? SYSC_bind+0x280/0x280
     ? __do_page_fault+0x5d1/0xca0
     ? up_read+0x1f/0x40
     ? __do_page_fault+0x3c8/0xca0
     SyS_connect+0x29/0x30
     ? SyS_accept+0x40/0x40
     do_syscall_64+0x1e0/0x730
     ? trace_hardirqs_off_thunk+0x1a/0x1c
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x7f403a42f259
    RSP: 002b:00007f403ab1dee8 EFLAGS: 00000296 ORIG_RAX: 000000000000002a
    RAX: ffffffffffffffda RBX: 00000000205fafe4 RCX: 00007f403a42f259
    RDX: 000000000000002e RSI: 00000000205fafd2 RDI: 0000000000000004
    RBP: 00007f403ab1df20 R08: 00007f403ab1e700 R09: 0000000000000000
    R10: 00007f403ab1e700 R11: 0000000000000296 R12: 0000000000000000
    R13: 00007ffc81906cbf R14: 0000000000000000 R15: 00007f403ab2b040
    Code: 3b ff 5b 5d c3 e8 ca 5f 3b ff 80 3d 49 8e 66 04 00 75 ea e8 bc 5f 3b ff 48 c7 c7 60 69 64 85 c6 05 34 8e 66 04 01 e8 59 49 15 ff <0f> 0b eb ce 0f 1f 44 00 00 55 48 89 e5 41 56 41 55 41 54 53 49
    
    Fixes: f8ccac0e44934 ("l2tp: put tunnel socket release on a workqueue")
    Reported-and-tested-by: syzbot+19c09769f14b48810113@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+347bd5acde002e353a36@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+6e6a5ec8de31a94cd015@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+9df43faf09bd400f2993@syzkaller.appspotmail.com
    Signed-off-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0a51aa764fc9c64e98104d3382cd431bc8bf292b
Author: James Chapman <jchapman@katalix.com>
Date:   Fri Feb 23 17:45:46 2018 +0000

    l2tp: fix race in pppol2tp_release with session object destroy
    
    commit d02ba2a6110c530a32926af8ad441111774d2893 upstream.
    
    pppol2tp_release uses call_rcu to put the final ref on its socket. But
    the session object doesn't hold a ref on the session socket so may be
    freed while the pppol2tp_put_sk RCU callback is scheduled. Fix this by
    having the session hold a ref on its socket until the session is
    destroyed. It is this ref that is dropped via call_rcu.
    
    Sessions are also deleted via l2tp_tunnel_closeall. This must now also put
    the final ref via call_rcu. So move the call_rcu call site into
    pppol2tp_session_close so that this happens in both destroy paths. A
    common destroy path should really be implemented, perhaps with
    l2tp_tunnel_closeall calling l2tp_session_delete like pppol2tp_release
    does, but this will be looked at later.
    
    ODEBUG: activate active (active state 1) object type: rcu_head hint:           (null)
    WARNING: CPU: 3 PID: 13407 at lib/debugobjects.c:291 debug_print_object+0x166/0x220
    Modules linked in:
    CPU: 3 PID: 13407 Comm: syzbot_19c09769 Not tainted 4.16.0-rc2+ #38
    Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    RIP: 0010:debug_print_object+0x166/0x220
    RSP: 0018:ffff880013647a00 EFLAGS: 00010082
    RAX: dffffc0000000008 RBX: 0000000000000003 RCX: ffffffff814d3333
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff88001a59f6d0
    RBP: ffff880013647a40 R08: 0000000000000000 R09: 0000000000000001
    R10: ffff8800136479a8 R11: 0000000000000000 R12: 0000000000000001
    R13: ffffffff86161420 R14: ffffffff85648b60 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff88001a580000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020e77000 CR3: 0000000006022000 CR4: 00000000000006e0
    Call Trace:
     debug_object_activate+0x38b/0x530
     ? debug_object_assert_init+0x3b0/0x3b0
     ? __mutex_unlock_slowpath+0x85/0x8b0
     ? pppol2tp_session_destruct+0x110/0x110
     __call_rcu.constprop.66+0x39/0x890
     ? __call_rcu.constprop.66+0x39/0x890
     call_rcu_sched+0x17/0x20
     pppol2tp_release+0x2c7/0x440
     ? fcntl_setlk+0xca0/0xca0
     ? sock_alloc_file+0x340/0x340
     sock_release+0x92/0x1e0
     sock_close+0x1b/0x20
     __fput+0x296/0x6e0
     ____fput+0x1a/0x20
     task_work_run+0x127/0x1a0
     do_exit+0x7f9/0x2ce0
     ? SYSC_connect+0x212/0x310
     ? mm_update_next_owner+0x690/0x690
     ? up_read+0x1f/0x40
     ? __do_page_fault+0x3c8/0xca0
     do_group_exit+0x10d/0x330
     ? do_group_exit+0x330/0x330
     SyS_exit_group+0x22/0x30
     do_syscall_64+0x1e0/0x730
     ? trace_hardirqs_off_thunk+0x1a/0x1c
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x7f362e471259
    RSP: 002b:00007ffe389abe08 EFLAGS: 00000202 ORIG_RAX: 00000000000000e7
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f362e471259
    RDX: 00007f362e471259 RSI: 000000000000002e RDI: 0000000000000000
    RBP: 00007ffe389abe30 R08: 0000000000000000 R09: 00007f362e944270
    R10: 0000000000000000 R11: 0000000000000202 R12: 0000000000400b60
    R13: 00007ffe389abf50 R14: 0000000000000000 R15: 0000000000000000
    Code: 8d 3c dd a0 8f 64 85 48 89 fa 48 c1 ea 03 80 3c 02 00 75 7b 48 8b 14 dd a0 8f 64 85 4c 89 f6 48 c7 c7 20 85 64 85 e
    8 2a 55 14 ff <0f> 0b 83 05 ad 2a 68 04 01 48 83 c4 18 5b 41 5c 41 5d 41 5e 41
    
    Fixes: ee40fb2e1eb5b ("l2tp: protect sock pointer of struct pppol2tp_session with RCU")
    Signed-off-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 15df699fdc5af46a9fb15ae2d9326294852de5b5
Author: James Chapman <jchapman@katalix.com>
Date:   Fri Feb 23 17:45:45 2018 +0000

    l2tp: fix races with tunnel socket close
    
    commit d00fa9adc528c1b0e64d532556764852df8bd7b9 upstream.
    
    The tunnel socket tunnel->sock (struct sock) is accessed when
    preparing a new ppp session on a tunnel at pppol2tp_session_init. If
    the socket is closed by a thread while another is creating a new
    session, the threads race. In pppol2tp_connect, the tunnel object may
    be created if the pppol2tp socket is associated with the special
    session_id 0 and the tunnel socket is looked up using the provided
    fd. When handling this, pppol2tp_connect cannot sock_hold the tunnel
    socket to prevent it being destroyed during pppol2tp_connect since
    this may itself may race with the socket being destroyed. Doing
    sockfd_lookup in pppol2tp_connect isn't sufficient to prevent
    tunnel->sock going away either because a given tunnel socket fd may be
    reused between calls to pppol2tp_connect. Instead, have
    l2tp_tunnel_create sock_hold the tunnel socket before it does
    sockfd_put. This ensures that the tunnel's socket is always extant
    while the tunnel object exists. Hold a ref on the socket until the
    tunnel is destroyed and ensure that all tunnel destroy paths go
    through a common function (l2tp_tunnel_delete) since this will do the
    final sock_put to release the tunnel socket.
    
    Since the tunnel's socket is now guaranteed to exist if the tunnel
    exists, we no longer need to use sockfd_lookup via l2tp_sock_to_tunnel
    to derive the tunnel from the socket since this is always
    sk_user_data.
    
    Also, sessions no longer sock_hold the tunnel socket since sessions
    already hold a tunnel ref and the tunnel sock will not be freed until
    the tunnel is freed. Removing these sock_holds in
    l2tp_session_register avoids a possible sock leak in the
    pppol2tp_connect error path if l2tp_session_register succeeds but
    attaching a ppp channel fails. The pppol2tp_connect error path could
    have been fixed instead and have the sock ref dropped when the session
    is freed, but doing a sock_put of the tunnel socket when the session
    is freed would require a new session_free callback. It is simpler to
    just remove the sock_hold of the tunnel socket in
    l2tp_session_register, now that the tunnel socket lifetime is
    guaranteed.
    
    Finally, some init code in l2tp_tunnel_create is reordered to ensure
    that the new tunnel object's refcount is set and the tunnel socket ref
    is taken before the tunnel socket destructor callbacks are set.
    
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    Modules linked in:
    CPU: 0 PID: 4360 Comm: syzbot_19c09769 Not tainted 4.16.0-rc2+ #34
    Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    RIP: 0010:pppol2tp_session_init+0x1d6/0x500
    RSP: 0018:ffff88001377fb40 EFLAGS: 00010212
    RAX: dffffc0000000000 RBX: ffff88001636a940 RCX: ffffffff84836c1d
    RDX: 0000000000000045 RSI: 0000000055976744 RDI: 0000000000000228
    RBP: ffff88001377fb60 R08: ffffffff84836bc8 R09: 0000000000000002
    R10: ffff88001377fab8 R11: 0000000000000001 R12: 0000000000000000
    R13: ffff88001636aac8 R14: ffff8800160f81c0 R15: 1ffff100026eff76
    FS:  00007ffb3ea66700(0000) GS:ffff88001a400000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020e77000 CR3: 0000000016261000 CR4: 00000000000006f0
    Call Trace:
     pppol2tp_connect+0xd18/0x13c0
     ? pppol2tp_session_create+0x170/0x170
     ? __might_fault+0x115/0x1d0
     ? lock_downgrade+0x860/0x860
     ? __might_fault+0xe5/0x1d0
     ? security_socket_connect+0x8e/0xc0
     SYSC_connect+0x1b6/0x310
     ? SYSC_bind+0x280/0x280
     ? __do_page_fault+0x5d1/0xca0
     ? up_read+0x1f/0x40
     ? __do_page_fault+0x3c8/0xca0
     SyS_connect+0x29/0x30
     ? SyS_accept+0x40/0x40
     do_syscall_64+0x1e0/0x730
     ? trace_hardirqs_off_thunk+0x1a/0x1c
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x7ffb3e376259
    RSP: 002b:00007ffeda4f6508 EFLAGS: 00000202 ORIG_RAX: 000000000000002a
    RAX: ffffffffffffffda RBX: 0000000020e77012 RCX: 00007ffb3e376259
    RDX: 000000000000002e RSI: 0000000020e77000 RDI: 0000000000000004
    RBP: 00007ffeda4f6540 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000202 R12: 0000000000400b60
    R13: 00007ffeda4f6660 R14: 0000000000000000 R15: 0000000000000000
    Code: 80 3d b0 ff 06 02 00 0f 84 07 02 00 00 e8 13 d6 db fc 49 8d bc 24 28 02 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 f
    a 48 c1 ea 03 <80> 3c 02 00 0f 85 ed 02 00 00 4d 8b a4 24 28 02 00 00 e8 13 16
    
    Fixes: 80d84ef3ff1dd ("l2tp: prevent l2tp_tunnel_delete racing with userspace close")
    Signed-off-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh; Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f8ff1f1812c2aa5597cc062dba0e7e96a501d1f1
Author: James Chapman <jchapman@katalix.com>
Date:   Fri Feb 23 17:45:44 2018 +0000

    l2tp: don't use inet_shutdown on ppp session destroy
    
    commit 225eb26489d05c679a4c4197ffcb81c81e9dcaf4 upstream.
    
    Previously, if a ppp session was closed, we called inet_shutdown to mark
    the socket as unconnected such that userspace would get errors and
    then close the socket. This could race with userspace closing the
    socket. Instead, leave userspace to close the socket in its own time
    (our session will be detached anyway).
    
    BUG: KASAN: use-after-free in inet_shutdown+0x5d/0x1c0
    Read of size 4 at addr ffff880010ea3ac0 by task syzbot_347bd5ac/8296
    
    CPU: 3 PID: 8296 Comm: syzbot_347bd5ac Not tainted 4.16.0-rc1+ #91
    Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    Call Trace:
     dump_stack+0x101/0x157
     ? inet_shutdown+0x5d/0x1c0
     print_address_description+0x78/0x260
     ? inet_shutdown+0x5d/0x1c0
     kasan_report+0x240/0x360
     __asan_load4+0x78/0x80
     inet_shutdown+0x5d/0x1c0
     ? pppol2tp_show+0x80/0x80
     pppol2tp_session_close+0x68/0xb0
     l2tp_tunnel_closeall+0x199/0x210
     ? udp_v6_flush_pending_frames+0x90/0x90
     l2tp_udp_encap_destroy+0x6b/0xc0
     ? l2tp_tunnel_del_work+0x2e0/0x2e0
     udpv6_destroy_sock+0x8c/0x90
     sk_common_release+0x47/0x190
     udp_lib_close+0x15/0x20
     inet_release+0x85/0xd0
     inet6_release+0x43/0x60
     sock_release+0x53/0x100
     ? sock_alloc_file+0x260/0x260
     sock_close+0x1b/0x20
     __fput+0x19f/0x380
     ____fput+0x1a/0x20
     task_work_run+0xd2/0x110
     exit_to_usermode_loop+0x18d/0x190
     do_syscall_64+0x389/0x3b0
     entry_SYSCALL_64_after_hwframe+0x26/0x9b
    RIP: 0033:0x7fe240a45259
    RSP: 002b:00007fe241132df8 EFLAGS: 00000297 ORIG_RAX: 0000000000000003
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 00007fe240a45259
    RDX: 00007fe240a45259 RSI: 0000000000000000 RDI: 00000000000000a5
    RBP: 00007fe241132e20 R08: 00007fe241133700 R09: 0000000000000000
    R10: 00007fe241133700 R11: 0000000000000297 R12: 0000000000000000
    R13: 00007ffc49aff84f R14: 0000000000000000 R15: 00007fe241141040
    
    Allocated by task 8331:
     save_stack+0x43/0xd0
     kasan_kmalloc+0xad/0xe0
     kasan_slab_alloc+0x12/0x20
     kmem_cache_alloc+0x144/0x3e0
     sock_alloc_inode+0x22/0x130
     alloc_inode+0x3d/0xf0
     new_inode_pseudo+0x1c/0x90
     sock_alloc+0x30/0x110
     __sock_create+0xaa/0x4c0
     SyS_socket+0xbe/0x130
     do_syscall_64+0x128/0x3b0
     entry_SYSCALL_64_after_hwframe+0x26/0x9b
    
    Freed by task 8314:
     save_stack+0x43/0xd0
     __kasan_slab_free+0x11a/0x170
     kasan_slab_free+0xe/0x10
     kmem_cache_free+0x88/0x2b0
     sock_destroy_inode+0x49/0x50
     destroy_inode+0x77/0xb0
     evict+0x285/0x340
     iput+0x429/0x530
     dentry_unlink_inode+0x28c/0x2c0
     __dentry_kill+0x1e3/0x2f0
     dput.part.21+0x500/0x560
     dput+0x24/0x30
     __fput+0x2aa/0x380
     ____fput+0x1a/0x20
     task_work_run+0xd2/0x110
     exit_to_usermode_loop+0x18d/0x190
     do_syscall_64+0x389/0x3b0
     entry_SYSCALL_64_after_hwframe+0x26/0x9b
    
    Fixes: fd558d186df2c ("l2tp: Split pppol2tp patch into separate l2tp and ppp parts")
    Signed-off-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 289f05f28e8eff3bf445c3a250f8022e4457282d
Author: James Chapman <jchapman@katalix.com>
Date:   Fri Feb 23 17:45:43 2018 +0000

    l2tp: don't use inet_shutdown on tunnel destroy
    
    commit 76a6abdb2513ad4ea0ded55d2c66160491f2e848 upstream.
    
    Previously, if a tunnel was closed, we called inet_shutdown to mark
    the socket as unconnected such that userspace would get errors and
    then close the socket. This could race with userspace closing the
    socket. Instead, leave userspace to close the socket in its own time
    (our tunnel will be detached anyway).
    
    BUG: unable to handle kernel NULL pointer dereference at 00000000000000a0
    IP: __lock_acquire+0x263/0x1630
    PGD 0 P4D 0
    Oops: 0000 [#1] SMP KASAN
    Modules linked in:
    CPU: 2 PID: 42 Comm: kworker/u8:2 Not tainted 4.15.0-rc7+ #129
    Workqueue: l2tp l2tp_tunnel_del_work
    RIP: 0010:__lock_acquire+0x263/0x1630
    RSP: 0018:ffff88001a37fc70 EFLAGS: 00010002
    RAX: 0000000000000001 RBX: 0000000000000088 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: ffff88001a37fd18 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000000 R11: 00000000000076fd R12: 00000000000000a0
    R13: ffff88001a3722c0 R14: 0000000000000001 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff88001ad00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000000000a0 CR3: 000000001730b000 CR4: 00000000000006e0
    Call Trace:
     ? __lock_acquire+0xc77/0x1630
     ? console_trylock+0x11/0xa0
     lock_acquire+0x117/0x230
     ? lock_sock_nested+0x3a/0xa0
     _raw_spin_lock_bh+0x3a/0x50
     ? lock_sock_nested+0x3a/0xa0
     lock_sock_nested+0x3a/0xa0
     inet_shutdown+0x33/0xf0
     l2tp_tunnel_del_work+0x60/0xef
     process_one_work+0x1ea/0x5f0
     ? process_one_work+0x162/0x5f0
     worker_thread+0x48/0x3e0
     ? trace_hardirqs_on+0xd/0x10
     kthread+0x108/0x140
     ? process_one_work+0x5f0/0x5f0
     ? kthread_stop+0x2a0/0x2a0
     ret_from_fork+0x24/0x30
    Code: 00 41 81 ff ff 1f 00 00 0f 87 7a 13 00 00 45 85 f6 49 8b 85
    68 08 00 00 0f 84 ae 03 00 00 c7 44 24 18 00 00 00 00 e9 f0 00 00 00 <49> 81 3c
    24 80 93 3f 83 b8 00 00 00 00 44 0f 44 c0 83 fe 01 0f
    RIP: __lock_acquire+0x263/0x1630 RSP: ffff88001a37fc70
    CR2: 00000000000000a0
    
    Fixes: 309795f4bec2d ("l2tp: Add netlink control API for L2TP")
    Signed-off-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 83bbf6831ed7ae65b61df3ac004b9f24f1e9b87f
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Sat Nov 11 06:06:31 2017 +0900

    l2tp: avoid using ->tunnel_sock for getting session's parent tunnel
    
    commit 7198c77aa05560c257ee377ec1f4796812121580 upstream.
    
    Sessions don't need to use l2tp_sock_to_tunnel(xxx->tunnel_sock) for
    accessing their parent tunnel. They have the .tunnel field in the
    l2tp_session structure for that. Furthermore, in all these cases, the
    session is registered, so we're guaranteed that .tunnel isn't NULL and
    that the session properly holds a reference on the tunnel.
    
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6d9cfea8ed2655dbb5e0c5afbc2d4d353e68319f
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Thu Nov 9 08:29:52 2017 +0900

    l2tp: don't close sessions in l2tp_tunnel_destruct()
    
    commit 765924e362d12f87786060b98a49abd91e11ea96 upstream.
    
    Sessions are already removed by the proto ->destroy() handlers, and
    since commit f3c66d4e144a ("l2tp: prevent creation of sessions on terminated tunnels"),
    we're guaranteed that no new session can be created afterwards.
    
    Furthermore, l2tp_tunnel_closeall() can sleep when there are sessions
    left to close. So we really shouldn't call it in a ->sk_destruct()
    handler, as it can be used from atomic context.
    
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit de178a693081c29b4cc8e3293c3dddd26d03b137
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Tue Oct 31 17:36:45 2017 +0100

    l2tp: remove l2tp_tunnel_count and l2tp_session_count
    
    commit c7fa745d988812c4dea7dbc645f025c5bfa4917e upstream.
    
    These variables have never been used.
    
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b9650d87f973390e517ea4d855ea27062a192321
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Feb 26 11:36:14 2018 +0000

    clocksource/drivers/fsl_ftm_timer: Fix error return checking
    
    commit f287eb9013ccf199cbfa4eabd80c36fedfc15a73 upstream.
    
    The error checks on freq for a negative error return always fails because
    freq is unsigned and can never be negative. Fix this by making freq a
    signed long.
    
    Detected with Coccinelle:
    drivers/clocksource/fsl_ftm_timer.c:287:5-9: WARNING: Unsigned expression
    compared with zero: freq <= 0
    drivers/clocksource/fsl_ftm_timer.c:291:5-9: WARNING: Unsigned expression
    compared with zero: freq <= 0
    
    Fixes: 2529c3a33079 ("clocksource: Add Freescale FlexTimer Module (FTM) timer support")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: kernel-janitors@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180226113614.3092-1-colin.king@canonical.com
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0e7a1f2b7ae4bd9551e6f01d11404b6bd0695725
Author: Sven Eckelmann <sven@narfation.org>
Date:   Tue Dec 26 15:14:01 2017 +0100

    batman-adv: Fix internal interface indices types
    
    commit f22e08932c2960f29b5e828e745c9f3fb7c1bb86 upstream.
    
    batman-adv uses internal indices for each enabled and active interface.
    It is currently used by the B.A.T.M.A.N. IV algorithm to identifify the
    correct position in the ogm_cnt bitmaps.
    
    The type for the number of enabled interfaces (which defines the next
    interface index) was set to char. This type can be (depending on the
    architecture) either signed (limiting batman-adv to 127 active slave
    interfaces) or unsigned (limiting batman-adv to 255 active slave
    interfaces).
    
    This limit was not correctly checked when an interface was enabled and thus
    an overflow happened. This was only catched on systems with the signed char
    type when the B.A.T.M.A.N. IV code tried to resize its counter arrays with
    a negative size.
    
    The if_num interface index was only a s16 and therefore significantly
    smaller than the ifindex (int) used by the code net code.
    
    Both &batadv_hard_iface->if_num and &batadv_priv->num_ifaces must be
    (unsigned) int to support the same number of slave interfaces as the net
    core code. And the interface activation code must check the number of
    active slave interfaces to avoid integer overflows.
    
    Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [bwh: Backported to 3.16:
     - Drop changes in batadv_iv_ogm_{drop_bcast_{own,sum}_entry,orig_get}()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9a98d66730b71387c2611c28bf9ceaed17dc2621
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 08:10:17 2018 +0100

    netfilter: ipv6: fix use-after-free Write in nf_nat_ipv6_manip_pkt
    
    commit b078556aecd791b0e5cb3a59f4c3a14273b52121 upstream.
    
    l4proto->manip_pkt() can cause reallocation of skb head so pointer
    to the ipv6 header must be reloaded.
    
    Reported-and-tested-by: <syzbot+10005f4292fc9cc89de7@syzkaller.appspotmail.com>
    Fixes: 58a317f1061c89 ("netfilter: ipv6: add IPv6 NAT support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a315ffb96ea3355dc1188768d8adea367d9f3d94
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Tue Jan 23 10:59:50 2018 +0100

    batman-adv: invalidate checksum on fragment reassembly
    
    commit 3bf2a09da956b43ecfaa630a2ef9a477f991a46a upstream.
    
    A more sophisticated implementation could try to combine fragment checksums
    when all fragments have CHECKSUM_COMPLETE and are split at even offsets.
    For now, we just set ip_summed to CHECKSUM_NONE to avoid "hw csum failure"
    warnings in the kernel log when fragmented frames are received. In
    consequence, skb_pull_rcsum() can be replaced with skb_pull().
    
    Note that in usual setups, packets don't reach batman-adv with
    CHECKSUM_COMPLETE (I assume NICs bail out of checksumming when they see
    batadv's ethtype?), which is why the log messages do not occur on every
    system using batman-adv. I could reproduce this issue by stacking
    batman-adv on top of a VXLAN interface.
    
    Fixes: 610bfc6bc99b ("batman-adv: Receive fragmented packets and merge")
    Tested-by: Maximilian Wilhelm <max@sdn.clinic>
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 98913dbe2c7f567df9e0214bcdec72d53e410613
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Tue Jan 23 10:59:49 2018 +0100

    batman-adv: fix packet checksum in receive path
    
    commit abd6360591d3f8259f41c34e31ac4826dfe621b8 upstream.
    
    eth_type_trans() internally calls skb_pull(), which does not adjust the
    skb checksum; skb_postpull_rcsum() is necessary to avoid log spam of the
    form "bat0: hw csum failure" when packets with CHECKSUM_COMPLETE are
    received.
    
    Note that in usual setups, packets don't reach batman-adv with
    CHECKSUM_COMPLETE (I assume NICs bail out of checksumming when they see
    batadv's ethtype?), which is why the log messages do not occur on every
    system using batman-adv. I could reproduce this issue by stacking
    batman-adv on top of a VXLAN interface.
    
    Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")
    Tested-by: Maximilian Wilhelm <max@sdn.clinic>
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fdc69db2dee287e6a8eebc6990f48b3b2b5b8564
Author: Erik Veijola <erik.veijola@gmail.com>
Date:   Fri Feb 23 14:06:52 2018 +0200

    ALSA: usb-audio: Add a quirck for B&W PX headphones
    
    commit 240a8af929c7c57dcde28682725b29cf8474e8e5 upstream.
    
    The capture interface doesn't work and the playback interface only
    supports 48 kHz sampling rate even though it advertises more rates.
    
    Signed-off-by: Erik Veijola <erik.veijola@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 80279158472a5e10191c8f16a32af884dd16e803
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Feb 23 20:47:17 2018 -0500

    lock_parent() needs to recheck if dentry got __dentry_kill'ed under it
    
    commit 3b821409632ab778d46e807516b457dfa72736ed upstream.
    
    In case when dentry passed to lock_parent() is protected from freeing only
    by the fact that it's on a shrink list and trylock of parent fails, we
    could get hit by __dentry_kill() (and subsequent dentry_kill(parent))
    between unlocking dentry and locking presumed parent.  We need to recheck
    that dentry is alive once we lock both it and parent *and* postpone
    rcu_read_unlock() until after that point.  Otherwise we could return
    a pointer to struct dentry that already is rcu-scheduled for freeing, with
    ->d_lock held on it; caller's subsequent attempt to unlock it can end
    up with memory corruption.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4eb6a29b257208ddb93dd80133c3fc72529849d9
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Tue Feb 13 15:36:00 2018 +0100

    KVM: mmu: Fix overlap between public and private memslots
    
    commit b28676bb8ae4569cced423dc2a88f7cb319d5379 upstream.
    
    Reported by syzkaller:
    
        pte_list_remove: ffff9714eb1f8078 0->BUG
        ------------[ cut here ]------------
        kernel BUG at arch/x86/kvm/mmu.c:1157!
        invalid opcode: 0000 [#1] SMP
        RIP: 0010:pte_list_remove+0x11b/0x120 [kvm]
        Call Trace:
         drop_spte+0x83/0xb0 [kvm]
         mmu_page_zap_pte+0xcc/0xe0 [kvm]
         kvm_mmu_prepare_zap_page+0x81/0x4a0 [kvm]
         kvm_mmu_invalidate_zap_all_pages+0x159/0x220 [kvm]
         kvm_arch_flush_shadow_all+0xe/0x10 [kvm]
         kvm_mmu_notifier_release+0x6c/0xa0 [kvm]
         ? kvm_mmu_notifier_release+0x5/0xa0 [kvm]
         __mmu_notifier_release+0x79/0x110
         ? __mmu_notifier_release+0x5/0x110
         exit_mmap+0x15a/0x170
         ? do_exit+0x281/0xcb0
         mmput+0x66/0x160
         do_exit+0x2c9/0xcb0
         ? __context_tracking_exit.part.5+0x4a/0x150
         do_group_exit+0x50/0xd0
         SyS_exit_group+0x14/0x20
         do_syscall_64+0x73/0x1f0
         entry_SYSCALL64_slow_path+0x25/0x25
    
    The reason is that when creates new memslot, there is no guarantee for new
    memslot not overlap with private memslots. This can be triggered by the
    following program:
    
       #include <fcntl.h>
       #include <pthread.h>
       #include <setjmp.h>
       #include <signal.h>
       #include <stddef.h>
       #include <stdint.h>
       #include <stdio.h>
       #include <stdlib.h>
       #include <string.h>
       #include <sys/ioctl.h>
       #include <sys/stat.h>
       #include <sys/syscall.h>
       #include <sys/types.h>
       #include <unistd.h>
       #include <linux/kvm.h>
    
       long r[16];
    
       int main()
       {
            void *p = valloc(0x4000);
    
            r[2] = open("/dev/kvm", 0);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0x0ul);
    
            uint64_t addr = 0xf000;
            ioctl(r[3], KVM_SET_IDENTITY_MAP_ADDR, &addr);
            r[6] = ioctl(r[3], KVM_CREATE_VCPU, 0x0ul);
            ioctl(r[3], KVM_SET_TSS_ADDR, 0x0ul);
            ioctl(r[6], KVM_RUN, 0);
            ioctl(r[6], KVM_RUN, 0);
    
            struct kvm_userspace_memory_region mr = {
                    .slot = 0,
                    .flags = KVM_MEM_LOG_DIRTY_PAGES,
                    .guest_phys_addr = 0xf000,
                    .memory_size = 0x4000,
                    .userspace_addr = (uintptr_t) p
            };
            ioctl(r[3], KVM_SET_USER_MEMORY_REGION, &mr);
            return 0;
       }
    
    This patch fixes the bug by not adding a new memslot even if it
    overlaps with private memslots.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 67ce6544a6eb9ea751b2f669b8c30199cb5db6e2
Author: Ben Crocker <bcrocker@redhat.com>
Date:   Thu Feb 22 17:52:19 2018 -0500

    drm/radeon: insist on 32-bit DMA for Cedar on PPC64/PPC64LE
    
    commit 2c83029cda55a5e7665c7c6326909427d6a01350 upstream.
    
    In radeon_device_init, set the need_dma32 flag for Cedar chips
    (e.g. FirePro 2270).  This fixes, or at least works around, a bug
    on PowerPC exposed by last year's commits
    
    8e3f1b1d8255105f31556aacf8aeb6071b00d469 (Russell Currey)
    
    and
    
    253fd51e2f533552ae35a0c661705da6c4842c1b (Alistair Popple)
    
    which enabled the 64-bit DMA iommu bypass.
    
    This caused the device to freeze, in some cases unrecoverably, and is
    the subject of several bug reports internal to Red Hat.
    
    Signed-off-by: Ben Crocker <bcrocker@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a4e704f61640a97ddbf7b380d32b14329323bdb0
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Feb 22 20:55:28 2018 +0100

    regulatory: add NUL to request alpha2
    
    commit 657308f73e674e86b60509a430a46e569bf02846 upstream.
    
    Similar to the ancient commit a5fe8e7695dc ("regulatory: add NUL
    to alpha2"), add another byte to alpha2 in the request struct so
    that when we use nla_put_string(), we don't overrun anything.
    
    Fixes: 73d54c9e74c4 ("cfg80211: add regulatory netlink multicast group")
    Reported-by: Kees Cook <keescook@google.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ef943f334b6226a491b85952a8b497edfbccf9c8
Author: David Rientjes <rientjes@google.com>
Date:   Wed Feb 21 14:45:32 2018 -0800

    kernel/relay.c: limit kmalloc size to KMALLOC_MAX_SIZE
    
    commit 88913bd8ea2a75d7e460a4bed5f75e1c32660d7e upstream.
    
    chan->n_subbufs is set by the user and relay_create_buf() does a kmalloc()
    of chan->n_subbufs * sizeof(size_t *).
    
    kmalloc_slab() will generate a warning when this fails if
    chan->subbufs * sizeof(size_t *) > KMALLOC_MAX_SIZE.
    
    Limit chan->n_subbufs to the maximum allowed kmalloc() size.
    
    Link: http://lkml.kernel.org/r/alpine.DEB.2.10.1802061216100.122576@chino.kir.corp.google.com
    Fixes: f6302f1bcd75 ("relay: prevent integer overflow in relay_open()")
    Signed-off-by: David Rientjes <rientjes@google.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6f5f8df829307d23506d552ac28f78b9868e3bcd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 20 21:58:21 2018 +0100

    x86/oprofile: Fix bogus GCC-8 warning in nmi_setup()
    
    commit 85c615eb52222bc5fab6c7190d146bc59fac289e upstream.
    
    GCC-8 shows a warning for the x86 oprofile code that copies per-CPU
    data from CPU 0 to all other CPUs, which when building a non-SMP
    kernel turns into a memcpy() with identical source and destination
    pointers:
    
     arch/x86/oprofile/nmi_int.c: In function 'mux_clone':
     arch/x86/oprofile/nmi_int.c:285:2: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
       memcpy(per_cpu(cpu_msrs, cpu).multiplex,
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              per_cpu(cpu_msrs, 0).multiplex,
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              sizeof(struct op_msr) * model->num_virt_counters);
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     arch/x86/oprofile/nmi_int.c: In function 'nmi_setup':
     arch/x86/oprofile/nmi_int.c:466:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
     arch/x86/oprofile/nmi_int.c:470:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
    
    I have analyzed a number of such warnings now: some are valid and the
    GCC warning is welcome. Others turned out to be false-positives, and
    GCC was changed to not warn about those any more. This is a corner case
    that is a false-positive but the GCC developers feel it's better to keep
    warning about it.
    
    In this case, it seems best to work around it by telling GCC
    a little more clearly that this code path is never hit with
    an IS_ENABLED() configuration check.
    
    Cc:stable as we also want old kernels to build cleanly with GCC-8.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Jessica Yu <jeyu@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Martin Sebor <msebor@gcc.gnu.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Robert Richter <rric@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: oprofile-list@lists.sf.net
    Link: http://lkml.kernel.org/r/20180220205826.2008875-1-arnd@arndb.de
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=84095
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f43567deed30f39eec0cd774606be61a341ceaaa
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sun Feb 18 22:17:09 2018 +0800

    libata: disable LPM for Crucial BX100 SSD 500GB drive
    
    commit b17e5729a630d8326a48ec34ef02e6b4464a6aef upstream.
    
    After Laptop Mode Tools starts to use min_power for LPM, a user found
    out Crucial BX100 SSD can't get mounted.
    
    Crucial BX100 SSD 500GB drive don't work well with min_power. This also
    happens to med_power_with_dipm.
    
    So let's disable LPM for Crucial BX100 SSD 500GB drive.
    
    BugLink: https://bugs.launchpad.net/bugs/1726930
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 024480279a53ced02ced4c838a5ee9638916317d
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Feb 19 07:48:11 2018 -0700

    x86/mm: Fix {pmd,pud}_{set,clear}_flags()
    
    commit 842cef9113c2120f74f645111ded1e020193d84c upstream.
    
    Just like pte_{set,clear}_flags() their PMD and PUD counterparts should
    not do any address translation. This was outright wrong under Xen
    (causing a dead boot with no useful output on "suitable" systems), and
    produced needlessly more complicated code (even if just slightly) when
    paravirt was enabled.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/5A8AF1BB02000078001A91C3@prv-mh.provo.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16:
     - There aren't any pud_{set,clear}_flags() functions
     - There's no p4d level]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 014186b3d349ea2205debf0ecd9cbd5faf23da37
Author: Yufen Yu <yuyufen@huawei.com>
Date:   Tue Feb 6 17:39:15 2018 +0800

    md raid10: fix NULL deference in handle_write_completed()
    
    commit 01a69cab01c184d3786af09e9339311123d63d22 upstream.
    
    In the case of 'recover', an r10bio with R10BIO_WriteError &
    R10BIO_IsRecover will be progressed by handle_write_completed().
    This function traverses all r10bio->devs[copies].
    If devs[m].repl_bio != NULL, it thinks conf->mirrors[dev].replacement
    is also not NULL. However, this is not always true.
    
    When there is an rdev of raid10 has replacement, then each r10bio
    ->devs[m].repl_bio != NULL in conf->r10buf_pool. However, in 'recover',
    even if corresponded replacement is NULL, it doesn't clear r10bio
    ->devs[m].repl_bio, resulting in replacement NULL deference.
    
    This bug was introduced when replacement support for raid10 was
    added in Linux 3.3.
    
    As NeilBrown suggested:
            Elsewhere the determination of "is this device part of the
            resync/recovery" is made by resting bio->bi_end_io.
            If this is end_sync_write, then we tried to write here.
            If it is NULL, then we didn't try to write.
    
    Fixes: 9ad1aefc8ae8 ("md/raid10:  Handle replacement devices during resync.")
    Cc: stable (V3.3+)
    Suggested-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Yufen Yu <yuyufen@huawei.com>
    Signed-off-by: Shaohua Li <sh.li@alibaba-inc.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 70608cefb833e4ee550a88e3ece4082730f6cfe3
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 16 19:36:28 2018 -0800

    netfilter: IDLETIMER: be syzkaller friendly
    
    commit cfc2c740533368b96e2be5e0a4e8c3cace7d9814 upstream.
    
    We had one report from syzkaller [1]
    
    First issue is that INIT_WORK() should be done before mod_timer()
    or we risk timer being fired too soon, even with a 1 second timer.
    
    Second issue is that we need to reject too big info->timeout
    to avoid overflows in msecs_to_jiffies(info->timeout * 1000), or
    risk looping, if result after overflow is 0.
    
    [1]
    WARNING: CPU: 1 PID: 5129 at kernel/workqueue.c:1444 __queue_work+0xdf4/0x1230 kernel/workqueue.c:1444
    Kernel panic - not syncing: panic_on_warn set ...
    
    CPU: 1 PID: 5129 Comm: syzkaller159866 Not tainted 4.16.0-rc1+ #230
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     panic+0x1e4/0x41c kernel/panic.c:183
     __warn+0x1dc/0x200 kernel/panic.c:547
     report_bug+0x211/0x2d0 lib/bug.c:184
     fixup_bug.part.11+0x37/0x80 arch/x86/kernel/traps.c:178
     fixup_bug arch/x86/kernel/traps.c:247 [inline]
     do_error_trap+0x2d7/0x3e0 arch/x86/kernel/traps.c:296
     do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:315
     invalid_op+0x22/0x40 arch/x86/entry/entry_64.S:988
    RIP: 0010:__queue_work+0xdf4/0x1230 kernel/workqueue.c:1444
    RSP: 0018:ffff8801db507538 EFLAGS: 00010006
    RAX: ffff8801aeb46080 RBX: ffff8801db530200 RCX: ffffffff81481404
    RDX: 0000000000000100 RSI: ffffffff86b42640 RDI: 0000000000000082
    RBP: ffff8801db507758 R08: 1ffff1003b6a0de5 R09: 000000000000000c
    R10: ffff8801db5073f0 R11: 0000000000000020 R12: 1ffff1003b6a0eb6
    R13: ffff8801b1067ae0 R14: 00000000000001f8 R15: dffffc0000000000
     queue_work_on+0x16a/0x1c0 kernel/workqueue.c:1488
     queue_work include/linux/workqueue.h:488 [inline]
     schedule_work include/linux/workqueue.h:546 [inline]
     idletimer_tg_expired+0x44/0x60 net/netfilter/xt_IDLETIMER.c:116
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:829
     </IRQ>
    RIP: 0010:arch_local_irq_restore arch/x86/include/asm/paravirt.h:777 [inline]
    RIP: 0010:__raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
    RIP: 0010:_raw_spin_unlock_irqrestore+0x5e/0xba kernel/locking/spinlock.c:184
    RSP: 0018:ffff8801c20173c8 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff12
    RAX: dffffc0000000000 RBX: 0000000000000282 RCX: 0000000000000006
    RDX: 1ffffffff0d592cd RSI: 1ffff10035d68d23 RDI: 0000000000000282
    RBP: ffff8801c20173d8 R08: 1ffff10038402e47 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff8820e5c8
    R13: ffff8801b1067ad8 R14: ffff8801aea7c268 R15: ffff8801aea7c278
     __debug_object_init+0x235/0x1040 lib/debugobjects.c:378
     debug_object_init+0x17/0x20 lib/debugobjects.c:391
     __init_work+0x2b/0x60 kernel/workqueue.c:506
     idletimer_tg_create net/netfilter/xt_IDLETIMER.c:152 [inline]
     idletimer_tg_checkentry+0x691/0xb00 net/netfilter/xt_IDLETIMER.c:213
     xt_check_target+0x22c/0x7d0 net/netfilter/x_tables.c:850
     check_target net/ipv6/netfilter/ip6_tables.c:533 [inline]
     find_check_entry.isra.7+0x935/0xcf0 net/ipv6/netfilter/ip6_tables.c:575
     translate_table+0xf52/0x1690 net/ipv6/netfilter/ip6_tables.c:744
     do_replace net/ipv6/netfilter/ip6_tables.c:1160 [inline]
     do_ip6t_set_ctl+0x370/0x5f0 net/ipv6/netfilter/ip6_tables.c:1686
     nf_sockopt net/netfilter/nf_sockopt.c:106 [inline]
     nf_setsockopt+0x67/0xc0 net/netfilter/nf_sockopt.c:115
     ipv6_setsockopt+0x10b/0x130 net/ipv6/ipv6_sockglue.c:927
     udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
     sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2976
     SYSC_setsockopt net/socket.c:1850 [inline]
     SyS_setsockopt+0x189/0x360 net/socket.c:1829
     do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
    
    Fixes: 0902b469bd25 ("netfilter: xtables: idletimer target implementation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 18ba80533558af0cb186ccb71022fabfa9604ffe
Author: Will Deacon <will@kernel.org>
Date:   Mon Feb 19 16:46:57 2018 +0000

    arm64: __show_regs: Only resolve kernel symbols when running at EL1
    
    commit a06f818a70de21b4b3b4186816094208fc7accf9 upstream.
    
    __show_regs pretty prints PC and LR by attempting to map them to kernel
    function names to improve the utility of crash reports. Unfortunately,
    this mapping is applied even when the pt_regs corresponds to user mode,
    resulting in a KASLR oracle.
    
    Avoid this issue by only looking up the function symbols when the register
    state indicates that we're actually running at EL1.
    
    Reported-by: NCSC Security <security@ncsc.gov.uk>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit db95024d392a6b65962b4f68c3fcca6bb67299b0
Author: Michael Weiser <michael.weiser@gmx.de>
Date:   Thu Feb 1 23:13:36 2018 +0100

    arm64: Remove unimplemented syscall log message
    
    commit 1962682d2b2fbe6cfa995a85c53c069fadda473e upstream.
    
    Stop printing a (ratelimited) kernel message for each instance of an
    unimplemented syscall being called. Userland making an unimplemented
    syscall is not necessarily misbehaviour and to be expected with a
    current userland running on an older kernel. Also, the current message
    looks scary to users but does not actually indicate a real problem nor
    help them narrow down the cause. Just rely on sys_ni_syscall() to return
    -ENOSYS.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Michael Weiser <michael.weiser@gmx.de>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [bwh: Backported to 3.16: Deleted code was slightly different]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 92ead7477a728c5bdf9f5ae6e9b58530bd984e1e
Author: Michael Weiser <michael.weiser@gmx.de>
Date:   Thu Feb 1 23:13:38 2018 +0100

    arm64: Disable unhandled signal log messages by default
    
    commit 5ee39a71fd89ab7240c5339d04161c44a8e03269 upstream.
    
    aarch64 unhandled signal kernel messages are very verbose, suggesting
    them to be more of a debugging aid:
    
    sigsegv[33]: unhandled level 2 translation fault (11) at 0x00000000, esr
    0x92000046, in sigsegv[400000+71000]
    CPU: 1 PID: 33 Comm: sigsegv Tainted: G        W        4.15.0-rc3+ #3
    Hardware name: linux,dummy-virt (DT)
    pstate: 60000000 (nZCv daif -PAN -UAO)
    pc : 0x4003f4
    lr : 0x4006bc
    sp : 0000fffffe94a060
    x29: 0000fffffe94a070 x28: 0000000000000000
    x27: 0000000000000000 x26: 0000000000000000
    x25: 0000000000000000 x24: 00000000004001b0
    x23: 0000000000486ac8 x22: 00000000004001c8
    x21: 0000000000000000 x20: 0000000000400be8
    x19: 0000000000400b30 x18: 0000000000484728
    x17: 000000000865ffc8 x16: 000000000000270f
    x15: 00000000000000b0 x14: 0000000000000002
    x13: 0000000000000001 x12: 0000000000000000
    x11: 0000000000000000 x10: 0008000020008008
    x9 : 000000000000000f x8 : ffffffffffffffff
    x7 : 0004000000000000 x6 : ffffffffffffffff
    x5 : 0000000000000000 x4 : 0000000000000000
    x3 : 00000000004003e4 x2 : 0000fffffe94a1e8
    x1 : 000000000000000a x0 : 0000000000000000
    
    Disable them by default, so they can be enabled using
    /proc/sys/debug/exception-trace.
    
    Signed-off-by: Michael Weiser <michael.weiser@gmx.de>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0f61d6c3992a46f9b7eb52ec6c493bfebe342dcd
Author: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
Date:   Mon Dec 11 21:50:14 2017 +0900

    arm64: do not use print_symbol()
    
    commit 4ef7963843d3243260aa335dfb9cb2fede06aacf upstream.
    
    print_symbol() is a very old API that has been obsoleted by %pS format
    specifier in a normal printk() call.
    
    Replace print_symbol() with a direct printk("%pS") call.
    
    Link: http://lkml.kernel.org/r/20171211125025.2270-3-sergey.senozhatsky@gmail.com
    To: Andrew Morton <akpm@linux-foundation.org>
    To: Russell King <linux@armlinux.org.uk>
    To: Catalin Marinas <catalin.marinas@arm.com>
    To: Mark Salter <msalter@redhat.com>
    To: Tony Luck <tony.luck@intel.com>
    To: David Howells <dhowells@redhat.com>
    To: Yoshinori Sato <ysato@users.sourceforge.jp>
    To: Guan Xuetao <gxt@mprc.pku.edu.cn>
    To: Borislav Petkov <bp@alien8.de>
    To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    To: Thomas Gleixner <tglx@linutronix.de>
    To: Peter Zijlstra <peterz@infradead.org>
    To: Vineet Gupta <vgupta@synopsys.com>
    To: Fengguang Wu <fengguang.wu@intel.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: LKML <linux-kernel@vger.kernel.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-c6x-dev@linux-c6x.org
    Cc: linux-ia64@vger.kernel.org
    Cc: linux-am33-list@redhat.com
    Cc: linux-sh@vger.kernel.org
    Cc: linux-edac@vger.kernel.org
    Cc: x86@kernel.org
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    [pmladek@suse.com: updated commit message]
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 83f292cbc8c1374e93fecaefbcdf5f5ba7dee245
Author: Will Deacon <will@kernel.org>
Date:   Thu Oct 19 13:19:20 2017 +0100

    arm64: traps: Don't print stack or raw PC/LR values in backtraces
    
    commit a25ffd3a6302a67814280274d8f1aa4ae2ea4b59 upstream.
    
    Printing raw pointer values in backtraces has potential security
    implications and are of questionable value anyway.
    
    This patch follows x86's lead and removes the "Exception stack:" dump
    from kernel backtraces, as well as converting PC/LR values to symbols
    such as "sysrq_handle_crash+0x20/0x30".
    
    Tested-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [bwh: Backported to 3.16:
     - Deleted code in dump_mem() and dump_backtrace_entry() is a bit different
     - Leave dump_backtrace() unchanged, since it doesn't use dump_mem()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ddaf61f3b8858e09fa85c689cceb48b8e5aeda69
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Aug 7 12:10:51 2017 +0100

    arm64: remove __die()'s stack dump
    
    commit c5bc503cbeee8586395aa541d2b53c69c3dd6930 upstream.
    
    Our __die() implementation tries to dump the stack memory, in addition
    to a backtrace, which is problematic.
    
    For contemporary 16K stacks, this can be a lot of data, which can take a
    long time to dump, and can push other useful context out of the kernel's
    printk ringbuffer (and/or a user's scrollback buffer on an attached
    console).
    
    Additionally, the code implicitly assumes that the SP is on the task's
    stack, and tries to dump everything between the SP and the highest task
    stack address. When the SP points at an IRQ stack (or is corrupted),
    this makes the kernel attempt to dump vast amounts of VA space. With
    vmap'd stacks, this may result in erroneous accesses to peripherals.
    
    This patch removes the memory dump, leaving us to rely on the backtrace,
    and other means of dumping stack memory such as kdump.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: James Morse <james.morse@arm.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f4b4a14dc3afc7748f3316c540bc5fcd46ae5fd7
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sun Feb 18 16:53:59 2018 +0800

    drm/edid: Add 6 bpc quirk for CPT panel in Asus UX303LA
    
    commit 06998a756a3865817b87a129a7e5d5bb66dc1ec3 upstream.
    
    Similar to commit e10aec652f31 ("drm/edid: Add 6 bpc quirk for display
    AEO model 0."), the EDID reports "DFP 1.x compliant TMDS" but it support
    6bpc instead of 8 bpc.
    
    Hence, use 6 bpc quirk for this panel.
    
    Fixes: 196f954e2509 ("drm/i915/dp: Revert "drm/i915/dp: fall back to 18 bpp when sink capability is unknown"")
    BugLink: https://bugs.launchpad.net/bugs/1749420
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Reviewed-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180218085359.7817-1-kai.heng.feng@canonical.com
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4ed8140eb8a36f42aac9659192fbe90040addd17
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 2 16:31:23 2018 +0100

    cfg80211: fix cfg80211_beacon_dup
    
    commit bee92d06157fc39d5d7836a061c7d41289a55797 upstream.
    
    gcc-8 warns about some obviously incorrect code:
    
    net/mac80211/cfg.c: In function 'cfg80211_beacon_dup':
    net/mac80211/cfg.c:2896:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
    
    From the context, I conclude that we want to copy from beacon into
    new_beacon, as we do in the rest of the function.
    
    Fixes: 73da7d5bab79 ("mac80211: add channel switch command and beacon callbacks")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 57b60ea00db754dd5478577c369d09c1cdbb2870
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Feb 18 23:01:44 2018 +0100

    ASoC: rt5651: Fix regcache sync errors on resume
    
    commit 2d30e9494f1ea320aaaad0cff9ddd92c87eac355 upstream.
    
    The ALC5651 does not like multi-write accesses, avoid them. This fixes:
    
    rt5651 i2c-10EC5651:00: Unable to sync registers 0x27-0x28. -121
    
    Errors on resume (and all registers after the registers in the error not
    being synced).
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cd5306140bfca65d472002efe535c28a6ff07bdc
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Feb 16 10:48:20 2018 +0100

    libata: Apply NOLPM quirk to Crucial MX100 512GB SSDs
    
    commit 9c7be59fc519af9081c46c48f06f2b8fadf55ad8 upstream.
    
    Various people have reported the Crucial MX100 512GB model not working
    with LPM set to min_power. I've now received a report that it also does
    not work with the new med_power_with_dipm level.
    
    It does work with medium_power, but that has no measurable power-savings
    and given the amount of people being bitten by the other levels not
    working, this commit just disables LPM altogether.
    
    Note all reporters of this have either the 512GB model (max capacity), or
    are not specifying their SSD's size. So for now this quirk assumes this is
    a problem with the 512GB model only.
    
    Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=89261
    Buglink: https://github.com/linrunner/TLP/issues/84
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [bwh: Backported to 3.16: There's no ATA_HORKAGE_ZERO_AFTER_TRIM flag]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 11c45a46ca9640158d1090c9805ccfa0a30d539f
Author: Stefan Windfeldt-Prytz <stefan.windfeldt@axis.com>
Date:   Thu Feb 15 15:02:53 2018 +0100

    iio: buffer: check if a buffer has been set up when poll is called
    
    commit 4cd140bda6494543f1c1b0ccceceaa44b676eef6 upstream.
    
    If no iio buffer has been set up and poll is called return 0.
    Without this check there will be a null pointer dereference when
    calling poll on a iio driver without an iio buffer.
    
    Signed-off-by: Stefan Windfeldt-Prytz <stefan.windfeldt@axis.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1de843c0ed1a9f381b793cc1a91103c07c42f05d
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Feb 14 15:43:00 2018 +0100

    iio: adis_lib: Initialize trigger before requesting interrupt
    
    commit f027e0b3a774e10302207e91d304bbf99e3a8b36 upstream.
    
    The adis_probe_trigger() creates a new IIO trigger and requests an
    interrupt associated with the trigger. The interrupt uses the generic
    iio_trigger_generic_data_rdy_poll() function as its interrupt handler.
    
    Currently the driver initializes some fields of the trigger structure after
    the interrupt has been requested. But an interrupt can fire as soon as it
    has been requested. This opens up a race condition.
    
    iio_trigger_generic_data_rdy_poll() will access the trigger data structure
    and dereference the ops field. If the ops field is not yet initialized this
    will result in a NULL pointer deref.
    
    It is not expected that the device generates an interrupt at this point, so
    typically this issue did not surface unless e.g. due to a hardware
    misconfiguration (wrong interrupt number, wrong polarity, etc.).
    
    But some newer devices from the ADIS family start to generate periodic
    interrupts in their power-on reset configuration and unfortunately the
    interrupt can not be masked in the device.  This makes the race condition
    much more visible and the following crash has been observed occasionally
    when booting a system using the ADIS16460.
    
            Unable to handle kernel NULL pointer dereference at virtual address 00000008
            pgd = c0004000
            [00000008] *pgd=00000000
            Internal error: Oops: 5 [#1] PREEMPT SMP ARM
            Modules linked in:
            CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.9.0-04126-gf9739f0-dirty #257
            Hardware name: Xilinx Zynq Platform
            task: ef04f640 task.stack: ef050000
            PC is at iio_trigger_notify_done+0x30/0x68
            LR is at iio_trigger_generic_data_rdy_poll+0x18/0x20
            pc : [<c042d868>]    lr : [<c042d924>]    psr: 60000193
            sp : ef051bb8  ip : 00000000  fp : ef106400
            r10: c081d80a  r9 : ef3bfa00  r8 : 00000087
            r7 : ef051bec  r6 : 00000000  r5 : ef3bfa00  r4 : ee92ab00
            r3 : 00000000  r2 : 00000000  r1 : 00000000  r0 : ee97e400
            Flags: nZCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment none
            Control: 18c5387d  Table: 0000404a  DAC: 00000051
            Process swapper/0 (pid: 1, stack limit = 0xef050210)
            [<c042d868>] (iio_trigger_notify_done) from [<c0065b10>] (__handle_irq_event_percpu+0x88/0x118)
            [<c0065b10>] (__handle_irq_event_percpu) from [<c0065bbc>] (handle_irq_event_percpu+0x1c/0x58)
            [<c0065bbc>] (handle_irq_event_percpu) from [<c0065c30>] (handle_irq_event+0x38/0x5c)
            [<c0065c30>] (handle_irq_event) from [<c0068e28>] (handle_level_irq+0xa4/0x130)
            [<c0068e28>] (handle_level_irq) from [<c0064e74>] (generic_handle_irq+0x24/0x34)
            [<c0064e74>] (generic_handle_irq) from [<c021ab7c>] (zynq_gpio_irqhandler+0xb8/0x13c)
            [<c021ab7c>] (zynq_gpio_irqhandler) from [<c0064e74>] (generic_handle_irq+0x24/0x34)
            [<c0064e74>] (generic_handle_irq) from [<c0065370>] (__handle_domain_irq+0x5c/0xb4)
            [<c0065370>] (__handle_domain_irq) from [<c000940c>] (gic_handle_irq+0x48/0x8c)
            [<c000940c>] (gic_handle_irq) from [<c0013e8c>] (__irq_svc+0x6c/0xa8)
    
    To fix this make sure that the trigger is fully initialized before
    requesting the interrupt.
    
    Fixes: ccd2b52f4ac6 ("staging:iio: Add common ADIS library")
    Reported-by: Robin Getz <Robin.Getz@analog.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 34df5ba68bcb73c011991d348c4defcf8569eff3
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Fri Feb 16 13:20:48 2018 -0800

    nospec: Allow index argument to have const-qualified type
    
    commit b98c6a160a057d5686a8c54c79cc6c8c94a7d0c8 upstream.
    
    The last expression in a statement expression need not be a bare
    variable, quoting gcc docs
    
      The last thing in the compound statement should be an expression
      followed by a semicolon; the value of this subexpression serves as the
      value of the entire construct.
    
    and we already use that in e.g. the min/max macros which end with a
    ternary expression.
    
    This way, we can allow index to have const-qualified type, which will in
    some cases avoid the need for introducing a local copy of index of
    non-const qualified type. That, in turn, can prevent readers not
    familiar with the internals of array_index_nospec from wondering about
    the seemingly redundant extra variable, and I think that's worthwhile
    considering how confusing the whole _nospec business is.
    
    The expression _i&_mask has type unsigned long (since that is the type
    of _mask, and the BUILD_BUG_ONs guarantee that _i will get promoted to
    that), so in order not to change the type of the whole expression, add
    a cast back to typeof(_i).
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arch@vger.kernel.org
    Link: http://lkml.kernel.org/r/151881604837.17395.10812767547837568328.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 37988bf8e56fcef562c054c3675de7241d1eda9a
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/radeon: Fix deadlock on runtime suspend
    
    commit 15734feff2bdac24aa3266c437cffa42851990e3 upstream.
    
    radeon's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    radeon's ->detect hooks, which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if the ->detect hooks are called
    in the output poll worker's context.  This is safe because the poll
    worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Stack trace for posterity:
    
      INFO: task kworker/0:3:31847 blocked for more than 120 seconds
      Workqueue: events output_poll_execute [drm_kms_helper]
      Call Trace:
       schedule+0x3c/0x90
       rpm_resume+0x1e2/0x690
       __pm_runtime_resume+0x3f/0x60
       radeon_lvds_detect+0x39/0xf0 [radeon]
       output_poll_execute+0xda/0x1e0 [drm_kms_helper]
       process_one_work+0x14b/0x440
       worker_thread+0x48/0x4a0
    
      INFO: task kworker/2:0:10493 blocked for more than 120 seconds.
      Workqueue: pm pm_runtime_work
      Call Trace:
       schedule+0x3c/0x90
       schedule_timeout+0x1b3/0x240
       wait_for_common+0xc2/0x180
       wait_for_completion+0x1d/0x20
       flush_work+0xfc/0x1a0
       __cancel_work_timer+0xa5/0x1d0
       cancel_delayed_work_sync+0x13/0x20
       drm_kms_helper_poll_disable+0x1f/0x30 [drm_kms_helper]
       radeon_pmops_runtime_suspend+0x3d/0xa0 [radeon]
       pci_pm_runtime_suspend+0x61/0x1a0
       vga_switcheroo_runtime_suspend+0x21/0x70
       __rpm_callback+0x32/0x70
       rpm_callback+0x24/0x80
       rpm_suspend+0x12b/0x640
       pm_runtime_work+0x6f/0xb0
       process_one_work+0x14b/0x440
       worker_thread+0x48/0x4a0
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=94147
    Fixes: 10ebc0bc0934 ("drm/radeon: add runtime PM support (v2)")
    Cc: Ismo Toijala <ismo.toijala@gmail.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/64ea02c44f91dda19bc563902b97bbc699040392.1518338789.git.lukas@wunner.de
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2bd9bd288e536e299b954416aa55ec610efbde06
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/nouveau: Fix deadlock on runtime suspend
    
    commit d61a5c1063515e855bedb1b81e20e50b0ac3541e upstream.
    
    nouveau's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    nouveau_connector_detect() which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if nouveau_connector_detect() is
    called in the output poll worker's context.  This is safe because
    the poll worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Other contexts calling nouveau_connector_detect() do require a runtime
    PM ref, these comprise:
    
      status_store() drm sysfs interface
      ->fill_modes drm callback
      drm_fb_helper_probe_connector_modes()
      drm_mode_getconnector()
      nouveau_connector_hotplug()
      nouveau_display_hpd_work()
      nv17_tv_set_property()
    
    Stack trace for posterity:
    
      INFO: task kworker/0:1:58 blocked for more than 120 seconds.
      Workqueue: events output_poll_execute [drm_kms_helper]
      Call Trace:
       schedule+0x28/0x80
       rpm_resume+0x107/0x6e0
       __pm_runtime_resume+0x47/0x70
       nouveau_connector_detect+0x7e/0x4a0 [nouveau]
       nouveau_connector_detect_lvds+0x132/0x180 [nouveau]
       drm_helper_probe_detect_ctx+0x85/0xd0 [drm_kms_helper]
       output_poll_execute+0x11e/0x1c0 [drm_kms_helper]
       process_one_work+0x184/0x380
       worker_thread+0x2e/0x390
    
      INFO: task kworker/0:2:252 blocked for more than 120 seconds.
      Workqueue: pm pm_runtime_work
      Call Trace:
       schedule+0x28/0x80
       schedule_timeout+0x1e3/0x370
       wait_for_completion+0x123/0x190
       flush_work+0x142/0x1c0
       nouveau_pmops_runtime_suspend+0x7e/0xd0 [nouveau]
       pci_pm_runtime_suspend+0x5c/0x180
       vga_switcheroo_runtime_suspend+0x1e/0xa0
       __rpm_callback+0xc1/0x200
       rpm_callback+0x1f/0x70
       rpm_suspend+0x13c/0x640
       pm_runtime_work+0x6e/0x90
       process_one_work+0x184/0x380
       worker_thread+0x2e/0x390
    
    Bugzilla: https://bugs.archlinux.org/task/53497
    Bugzilla: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870523
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=70388#c33
    Fixes: 5addcf0a5f0f ("nouveau: add runtime PM support (v0.9)")
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/b7d2cbb609a80f59ccabfdf479b9d5907c603ea1.1518338789.git.lukas@wunner.de
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b877c6874c90668f1847d5ccb96c5e26f004dca8
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Feb 14 06:41:25 2018 +0100

    drm: Allow determining if current task is output poll worker
    
    commit 25c058ccaf2ebbc3e250ec1e199e161f91fe27d4 upstream.
    
    Introduce a helper to determine if the current task is an output poll
    worker.
    
    This allows us to fix a long-standing deadlock in several DRM drivers
    wherein the ->runtime_suspend callback waits for the output poll worker
    to finish and the worker in turn calls a ->detect callback which waits
    for runtime suspend to finish.  The ->detect callback is invoked from
    multiple call sites and waiting for runtime suspend to finish is the
    correct thing to do except if it's executing in the context of the
    worker.
    
    v2: Expand kerneldoc to specifically mention deadlock between
        output poll worker and autosuspend worker as use case. (Lyude)
    
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/3549ce32e7f1467102e70d3e9cbf70c46bfe108e.1518593424.git.lukas@wunner.de
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4b1438cae62271718441e9e4ceaa1b7534104c90
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    workqueue: Allow retrieval of current task's work struct
    
    commit 27d4ee03078aba88c5e07dcc4917e8d01d046f38 upstream.
    
    Introduce a helper to retrieve the current task's work struct if it is
    a workqueue worker.
    
    This allows us to fix a long-standing deadlock in several DRM drivers
    wherein the ->runtime_suspend callback waits for a specific worker to
    finish and that worker in turn calls a function which waits for runtime
    suspend to finish.  That function is invoked from multiple call sites
    and waiting for runtime suspend to finish is the correct thing to do
    except if it's executing in the context of the worker.
    
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/2d8f603074131eb87e588d2b803a71765bd3a2fd.1518338788.git.lukas@wunner.de
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 29f22eed356176d55582bb25d02c0aaec2e37fa1
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Thu Feb 15 20:18:43 2018 +0300

    udplite: fix partial checksum initialization
    
    commit 15f35d49c93f4fa9875235e7bf3e3783d2dd7a1b upstream.
    
    Since UDP-Lite is always using checksum, the following path is
    triggered when calculating pseudo header for it:
    
      udp4_csum_init() or udp6_csum_init()
        skb_checksum_init_zero_check()
          __skb_checksum_validate_complete()
    
    The problem can appear if skb->len is less than CHECKSUM_BREAK. In
    this particular case __skb_checksum_validate_complete() also invokes
    __skb_checksum_complete(skb). If UDP-Lite is using partial checksum
    that covers only part of a packet, the function will return bad
    checksum and the packet will be dropped.
    
    It can be fixed if we skip skb_checksum_init_zero_check() and only
    set the required pseudo header checksum for UDP-Lite with partial
    checksum before udp4_csum_init()/udp6_csum_init() functions return.
    
    Fixes: ed70fcfcee95 ("net: Call skb_checksum_init in IPv4")
    Fixes: e4f45b7f40bd ("net: Call skb_checksum_init in IPv6")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86cfda63a76c89ab76954a95513b1647437cb910
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 15 16:59:49 2018 +0100

    dn_getsockoptdecnet: move nf_{get/set}sockopt outside sock lock
    
    commit dfec091439bb2acf763497cfc58f2bdfc67c56b7 upstream.
    
    After commit 3f34cfae1238 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), the caller of nf_{get/set}sockopt() must
    not hold any lock, but, in such changeset, I forgot to cope with DECnet.
    
    This commit addresses the issue moving the nf call outside the lock,
    in the dn_{get,set}sockopt() with the same schema currently used by
    ipv4 and ipv6. Also moves the unhandled sockopts of the end of the main
    switch statements, to improve code readability.
    
    Reported-by: Petr Vandrovec <petr@vandrovec.name>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=198791#c2
    Fixes: 3f34cfae1238 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3b3a343e2442a4fb2730967df4e2a29f0fa66c84
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Feb 14 15:45:07 2018 -0800

    NFC: llcp: Limit size of SDP URI
    
    commit fe9c842695e26d8116b61b80bfb905356f07834b upstream.
    
    The tlv_len is u8, so we need to limit the size of the SDP URI. Enforce
    this both in the NLA policy and in the code that performs the allocation
    and copy, to avoid writing past the end of the allocated buffer.
    
    Fixes: d9b8d8e19b073 ("NFC: llcp: Service Name Lookup netlink interface")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fa25a8b46e7f4abba6c7acab95c7791b841a9c48
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 16:25:53 2018 +0100

    mm: hide a #warning for COMPILE_TEST
    
    commit af27d9403f5b80685b79c88425086edccecaf711 upstream.
    
    We get a warning about some slow configurations in randconfig kernels:
    
      mm/memory.c:83:2: error: #warning Unfortunate NUMA and NUMA Balancing config, growing page-frame for last_cpupid. [-Werror=cpp]
    
    The warning is reasonable by itself, but gets in the way of randconfig
    build testing, so I'm hiding it whenever CONFIG_COMPILE_TEST is set.
    
    The warning was added in 2013 in commit 75980e97dacc ("mm: fold
    page->_last_nid into page->flags where possible").
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6cb99bea2f1a8cf53d3fbf6ef3d59a26bdb6a29f
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Wed Feb 28 14:59:22 2018 +0800

    staging: android: ashmem: Fix possible deadlock in ashmem_ioctl
    
    commit 740a5759bf222332fbb5eda42f89aa25ba38f9b2 upstream.
    
    ashmem_mutex may create a chain of dependencies like:
    
    CPU0                                    CPU1
     mmap syscall                           ioctl syscall
     -> mmap_sem (acquired)                 -> ashmem_ioctl
     -> ashmem_mmap                            -> ashmem_mutex (acquired)
        -> ashmem_mutex (try to acquire)       -> copy_from_user
                                                  -> mmap_sem (try to acquire)
    
    There is a lock odering problem between mmap_sem and ashmem_mutex causing
    a lockdep splat[1] during a syzcaller test. This patch fixes the problem
    by move copy_from_user out of ashmem_mutex.
    
    [1] https://www.spinics.net/lists/kernel/msg2733200.html
    
    Fixes: ce8a3a9e76d0 (staging: android: ashmem: Fix a race condition in pin ioctls)
    Reported-by: syzbot+d7a918a7a8e1c952bc36@syzkaller.appspotmail.com
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f628209e61333c4d79dc1d774d15c820c0b95ae
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Feb 4 02:06:27 2018 +0000

    staging: android: ashmem: Fix a race condition in pin ioctls
    
    commit ce8a3a9e76d0193e2e8d74a06d275b3c324ca652 upstream.
    
    ashmem_pin_unpin() reads asma->file and asma->size before taking the
    ashmem_mutex, so it can race with other operations that modify them.
    
    Build-tested only.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2c37cd0a0f45dd883fc03b38b04a7f0a269a1ca
Author: Todd Kjos <tkjos@android.com>
Date:   Wed Feb 7 13:57:37 2018 -0800

    binder: replace "%p" with "%pK"
    
    commit 8ca86f1639ec5890d400fff9211aca22d0a392eb upstream.
    
    The format specifier "%p" can leak kernel addresses. Use
    "%pK" instead. There were 4 remaining cases in binder.c.
    
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24e54ffd435c59aa91f932bbfcf19494c3f50f4c
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 30 23:11:24 2018 -0800

    binder: check for binder_thread allocation failure in binder_poll()
    
    commit f88982679f54f75daa5b8eff3da72508f1e7422f upstream.
    
    If the kzalloc() in binder_get_thread() fails, binder_poll()
    dereferences the resulting NULL pointer.
    
    Fix it by returning POLLERR if the memory allocation failed.
    
    This bug was found by syzkaller using fault injection.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 457b9a6f09f0 ("Staging: android: add binder driver")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Drop the binder global lock before returning
     - Adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 836dba52785de52e445d3d1317dc16dae681d1dd
Author: Alaa Hleihel <alaa@mellanox.com>
Date:   Tue Feb 13 12:18:27 2018 +0200

    IB/ipoib: Do not warn if IPoIB debugfs doesn't exist
    
    commit 14fa91e0fef8e4d6feb8b1fa2a807828e0abe815 upstream.
    
    netdev_wait_allrefs() could rebroadcast NETDEV_UNREGISTER event
    multiple times until all refs are gone, which will result in calling
    ipoib_delete_debug_files multiple times and printing a warning.
    
    Remove the WARN_ONCE since checks of NULL pointers before calling
    debugfs_remove are not needed.
    
    Fixes: 771a52584096 ("IB/IPoIB: ibX: failed to create mcg debug file")
    Signed-off-by: Alaa Hleihel <alaa@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 89a37077ab630223ed756415aa31e1b4d1f41bee
Author: Jack Stocker <jackstocker.93@gmail.com>
Date:   Thu Feb 15 18:24:10 2018 +0000

    Add delay-init quirk for Corsair K70 RGB keyboards
    
    commit 7a1646d922577b5b48c0d222e03831141664bb59 upstream.
    
    Following on from this patch: https://lkml.org/lkml/2017/11/3/516,
    Corsair K70 RGB keyboards also require the DELAY_INIT quirk to
    start correctly at boot.
    
    Device ids found here:
    usb 3-3: New USB device found, idVendor=1b1c, idProduct=1b13
    usb 3-3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
    usb 3-3: Product: Corsair K70 RGB Gaming Keyboard
    
    Signed-off-by: Jack Stocker <jackstocker.93@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8e81e7d5d81f91785128e6b4c98dde4a496d7cbe
Author: AMAN DEEP <aman.deep@samsung.com>
Date:   Thu Feb 8 11:55:01 2018 +0800

    usb: ohci: Proper handling of ed_rm_list to handle race condition between usb_kill_urb() and finish_unlinks()
    
    commit 46408ea558df13b110e0866b99624384a33bdeba upstream.
    
    There is a race condition between finish_unlinks->finish_urb() function
    and usb_kill_urb() in ohci controller case. The finish_urb calls
    spin_unlock(&ohci->lock) before usb_hcd_giveback_urb() function call,
    then if during this time, usb_kill_urb is called for another endpoint,
    then new ed will be added to ed_rm_list at beginning for unlink, and
    ed_rm_list will point to newly added.
    
    When finish_urb() is completed in finish_unlinks() and ed->td_list
    becomes empty as in below code (in finish_unlinks() function):
    
            if (list_empty(&ed->td_list)) {
                    *last = ed->ed_next;
                    ed->ed_next = NULL;
            } else if (ohci->rh_state == OHCI_RH_RUNNING) {
                    *last = ed->ed_next;
                    ed->ed_next = NULL;
                    ed_schedule(ohci, ed);
            }
    
    The *last = ed->ed_next will make ed_rm_list to point to ed->ed_next
    and previously added ed by usb_kill_urb will be left unreferenced by
    ed_rm_list. This causes usb_kill_urb() hang forever waiting for
    finish_unlink to remove added ed from ed_rm_list.
    
    The main reason for hang in this race condtion is addition and removal
    of ed from ed_rm_list in the beginning during usb_kill_urb and later
    last* is modified in finish_unlinks().
    
    As suggested by Alan Stern, the solution for proper handling of
    ohci->ed_rm_list is to remove ed from the ed_rm_list before finishing
    any URBs. Then at the end, we can add ed back to the list if necessary.
    
    This properly handle the updated ohci->ed_rm_list in usb_kill_urb().
    
    Fixes: 977dcfdc6031 ("USB: OHCI: don't lose track of EDs when a controller dies")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Aman Deep <aman.deep@samsung.com>
    Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc3d708a3bd873b4edfb4b82af067954b63067d7
Author: Karsten Koop <kkoop@ld-didactic.de>
Date:   Fri Feb 9 09:12:06 2018 +0000

    usb: ldusb: add PIDs for new CASSY devices supported by this driver
    
    commit 52ad2bd8918158266fc88a05f95429b56b6a33c5 upstream.
    
    This patch adds support for new CASSY devices to the ldusb driver. The
    PIDs are also added to the ignore list in hid-quirks.
    
    Signed-off-by: Karsten Koop <kkoop@ld-didactic.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c6e9f50df87fff7472cab28695604352a300f0f9
Author: Shuah Khan <shuah@kernel.org>
Date:   Fri Jan 26 11:56:50 2018 -0700

    usbip: keep usbip_device sockfd state in sync with tcp_socket
    
    commit 009f41aed4b3e11e6dc1e3c07377a10c20f1a5ed upstream.
    
    Keep usbip_device sockfd state in sync with tcp_socket. When tcp_socket
    is reset to null, reset sockfd to -1 to keep it in sync.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filenames]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 57e30307e048f602bd968c7bc7c4a0c878b20c43
Author: Kamil Konieczny <k.konieczny@samsung.com>
Date:   Wed Feb 7 16:52:09 2018 +0100

    crypto: s5p-sss - Fix kernel Oops in AES-ECB mode
    
    commit c927b080c67e3e97193c81fc1d27f4251bf4e036 upstream.
    
    In AES-ECB mode crypt is done with key only, so any use of IV
    can cause kernel Oops. Use IV only in AES-CBC and AES-CTR.
    
    Signed-off-by: Kamil Konieczny <k.konieczny@partner.samsung.com>
    Reported-by: Anand Moon <linux.amoon@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Tested-by: Anand Moon <linux.amoon@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bb01c2fdfcddb23c2ffd733300f6e8e464810b84
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Feb 13 14:28:19 2018 +0100

    x86/speculation: Add <asm/msr-index.h> dependency
    
    commit ea00f301285ea2f07393678cd2b6057878320c9d upstream.
    
    Joe Konno reported a compile failure resulting from using an MSR
    without inclusion of <asm/msr-index.h>, and while the current code builds
    fine (by accident) this needs fixing for future patches.
    
    Reported-by: Joe Konno <joe.konno@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan@linux.intel.com
    Cc: bp@alien8.de
    Cc: dan.j.williams@intel.com
    Cc: dave.hansen@linux.intel.com
    Cc: dwmw2@infradead.org
    Cc: dwmw@amazon.co.uk
    Cc: gregkh@linuxfoundation.org
    Cc: hpa@zytor.com
    Cc: jpoimboe@redhat.com
    Cc: linux-tip-commits@vger.kernel.org
    Cc: luto@kernel.org
    Fixes: 20ffa1caecca ("x86/speculation: Add basic IBPB (Indirect Branch Prediction Barrier) support")
    Link: http://lkml.kernel.org/r/20180213132819.GJ25201@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8b4b287eec0ee1a27b4917ca8e727b0429fb8c1a
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Feb 14 12:17:47 2018 +0000

    powerpc/pseries: Add empty update_numa_cpu_lookup_table() for NUMA=n
    
    commit c1e150ceb61e4a585bad156da15c33bfe89f5858 upstream.
    
    When CONFIG_NUMA is not set, the build fails with:
    
      arch/powerpc/platforms/pseries/hotplug-cpu.c:335:4:
      error: déclaration implicite de la fonction « update_numa_cpu_lookup_table »
    
    So we have to add update_numa_cpu_lookup_table() as an empty function
    when CONFIG_NUMA is not set.
    
    Fixes: 1d9a090783be ("powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4f3d849afa631f384e6b44697cc5088a9aff3be3
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed Feb 14 17:21:19 2018 +0100

    netfilter: nat: cope with negative port range
    
    commit db57ccf0f2f4624b4c4758379f8165277504fbd7 upstream.
    
    syzbot reported a division by 0 bug in the netfilter nat code:
    
    divide error: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 4168 Comm: syzkaller034710 Not tainted 4.16.0-rc1+ #309
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:nf_nat_l4proto_unique_tuple+0x291/0x530
    net/netfilter/nf_nat_proto_common.c:88
    RSP: 0018:ffff8801b2466778 EFLAGS: 00010246
    RAX: 000000000000f153 RBX: ffff8801b2466dd8 RCX: ffff8801b2466c7c
    RDX: 0000000000000000 RSI: ffff8801b2466c58 RDI: ffff8801db5293ac
    RBP: ffff8801b24667d8 R08: ffff8801b8ba6dc0 R09: ffffffff88af5900
    R10: ffff8801b24666f0 R11: 0000000000000000 R12: 000000002990f153
    R13: 0000000000000001 R14: 0000000000000000 R15: ffff8801b2466c7c
    FS:  00000000017e3880(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000208fdfe4 CR3: 00000001b5340002 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      dccp_unique_tuple+0x40/0x50 net/netfilter/nf_nat_proto_dccp.c:30
      get_unique_tuple+0xc28/0x1c10 net/netfilter/nf_nat_core.c:362
      nf_nat_setup_info+0x1c2/0xe00 net/netfilter/nf_nat_core.c:406
      nf_nat_redirect_ipv6+0x306/0x730 net/netfilter/nf_nat_redirect.c:124
      redirect_tg6+0x7f/0xb0 net/netfilter/xt_REDIRECT.c:34
      ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365
      ip6table_nat_do_chain+0x65/0x80 net/ipv6/netfilter/ip6table_nat.c:41
      nf_nat_ipv6_fn+0x594/0xa80 net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:302
      nf_nat_ipv6_local_fn+0x33/0x5d0
    net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:407
      ip6table_nat_local_fn+0x2c/0x40 net/ipv6/netfilter/ip6table_nat.c:69
      nf_hook_entry_hookfn include/linux/netfilter.h:120 [inline]
      nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483
      nf_hook include/linux/netfilter.h:243 [inline]
      NF_HOOK include/linux/netfilter.h:286 [inline]
      ip6_xmit+0x10ec/0x2260 net/ipv6/ip6_output.c:277
      inet6_csk_xmit+0x2fc/0x580 net/ipv6/inet6_connection_sock.c:139
      dccp_transmit_skb+0x9ac/0x10f0 net/dccp/output.c:142
      dccp_connect+0x369/0x670 net/dccp/output.c:564
      dccp_v6_connect+0xe17/0x1bf0 net/dccp/ipv6.c:946
      __inet_stream_connect+0x2d4/0xf00 net/ipv4/af_inet.c:620
      inet_stream_connect+0x58/0xa0 net/ipv4/af_inet.c:684
      SYSC_connect+0x213/0x4a0 net/socket.c:1639
      SyS_connect+0x24/0x30 net/socket.c:1620
      do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x26/0x9b
    RIP: 0033:0x441c69
    RSP: 002b:00007ffe50cc0be8 EFLAGS: 00000217 ORIG_RAX: 000000000000002a
    RAX: ffffffffffffffda RBX: ffffffffffffffff RCX: 0000000000441c69
    RDX: 000000000000001c RSI: 00000000208fdfe4 RDI: 0000000000000003
    RBP: 00000000006cc018 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000538 R11: 0000000000000217 R12: 0000000000403590
    R13: 0000000000403620 R14: 0000000000000000 R15: 0000000000000000
    Code: 48 89 f0 83 e0 07 83 c0 01 38 d0 7c 08 84 d2 0f 85 46 02 00 00 48 8b
    45 c8 44 0f b7 20 e8 88 97 04 fd 31 d2 41 0f b7 c4 4c 89 f9 <41> f7 f6 48
    c1 e9 03 48 b8 00 00 00 00 00 fc ff df 0f b6 0c 01
    RIP: nf_nat_l4proto_unique_tuple+0x291/0x530
    net/netfilter/nf_nat_proto_common.c:88 RSP: ffff8801b2466778
    
    The problem is that currently we don't have any check on the
    configured port range. A port range == -1 triggers the bug, while
    other negative values may require a very long time to complete the
    following loop.
    
    This commit addresses the issue swapping the two ends on negative
    ranges. The check is performed in nf_nat_l4proto_unique_tuple() since
    the nft nat loads the port values from nft registers at runtime.
    
    v1 -> v2: use the correct 'Fixes' tag
    v2 -> v3: update commit message, drop unneeded READ_ONCE()
    
    Fixes: 5b1158e909ec ("[NETFILTER]: Add NAT support for nf_conntrack")
    Reported-by: syzbot+8012e198bd037f4871e5@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 35ae5d3e6946f4d65a414c936d05cc201f0b9049
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Mon Feb 12 18:49:39 2018 +0100

    netfilter: x_tables: fix missing timer initialization in xt_LED
    
    commit 10414014bc085aac9f787a5890b33b5605fbcfc4 upstream.
    
    syzbot reported that xt_LED may try to use the ledinternal->timer
    without previously initializing it:
    
    ------------[ cut here ]------------
    kernel BUG at kernel/time/timer.c:958!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 1826 Comm: kworker/1:2 Not tainted 4.15.0+ #306
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Workqueue: ipv6_addrconf addrconf_dad_work
    RIP: 0010:__mod_timer kernel/time/timer.c:958 [inline]
    RIP: 0010:mod_timer+0x7d6/0x13c0 kernel/time/timer.c:1102
    RSP: 0018:ffff8801d24fe9f8 EFLAGS: 00010293
    RAX: ffff8801d25246c0 RBX: ffff8801aec6cb50 RCX: ffffffff816052c6
    RDX: 0000000000000000 RSI: 00000000fffbd14b RDI: ffff8801aec6cb68
    RBP: ffff8801d24fec98 R08: 0000000000000000 R09: 1ffff1003a49fd6c
    R10: ffff8801d24feb28 R11: 0000000000000005 R12: dffffc0000000000
    R13: ffff8801d24fec70 R14: 00000000fffbd14b R15: ffff8801af608f90
    FS:  0000000000000000(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000206d6fd0 CR3: 0000000006a22001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      led_tg+0x1db/0x2e0 net/netfilter/xt_LED.c:75
      ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365
      ip6table_raw_hook+0x65/0x80 net/ipv6/netfilter/ip6table_raw.c:42
      nf_hook_entry_hookfn include/linux/netfilter.h:120 [inline]
      nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483
      nf_hook.constprop.27+0x3f6/0x830 include/linux/netfilter.h:243
      NF_HOOK include/linux/netfilter.h:286 [inline]
      ndisc_send_skb+0xa51/0x1370 net/ipv6/ndisc.c:491
      ndisc_send_ns+0x38a/0x870 net/ipv6/ndisc.c:633
      addrconf_dad_work+0xb9e/0x1320 net/ipv6/addrconf.c:4008
      process_one_work+0xbbf/0x1af0 kernel/workqueue.c:2113
      worker_thread+0x223/0x1990 kernel/workqueue.c:2247
      kthread+0x33c/0x400 kernel/kthread.c:238
      ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:429
    Code: 85 2a 0b 00 00 4d 8b 3c 24 4d 85 ff 75 9f 4c 8b bd 60 fd ff ff e8 bb
    57 10 00 65 ff 0d 94 9a a1 7e e9 d9 fc ff ff e8 aa 57 10 00 <0f> 0b e8 a3
    57 10 00 e9 14 fb ff ff e8 99 57 10 00 4c 89 bd 70
    RIP: __mod_timer kernel/time/timer.c:958 [inline] RSP: ffff8801d24fe9f8
    RIP: mod_timer+0x7d6/0x13c0 kernel/time/timer.c:1102 RSP: ffff8801d24fe9f8
    ---[ end trace f661ab06f5dd8b3d ]---
    
    The ledinternal struct can be shared between several different
    xt_LED targets, but the related timer is currently initialized only
    if the first target requires it. Fix it by unconditionally
    initializing the timer struct.
    
    v1 -> v2: call del_timer_sync() unconditionally, too.
    
    Fixes: 268cb38e1802 ("netfilter: x_tables: add LED trigger target")
    Reported-by: syzbot+10c98dc5725c6c8fc7fb@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16: Keep using setup_timer()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7423c3f4f7ccbb321010d3e3c00c51a3e4db50e6
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Feb 8 13:53:52 2018 -0800

    netfilter: ipt_CLUSTERIP: fix a refcount bug in clusterip_config_find_get()
    
    commit db93a3632b0f8773a3899e04a3a3e0aa7a26eb46 upstream.
    
    In clusterip_config_find_get() we hold RCU read lock so it could
    run concurrently with clusterip_config_entry_put(), as a result,
    the refcnt could go back to 1 from 0, which leads to a double
    list_del()... Just replace refcount_inc() with
    refcount_inc_not_zero(), as for c->refcount.
    
    Fixes: d73f33b16883 ("netfilter: CLUSTERIP: RCU conversion")
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Pablo Neira Ayuso <pablo@netfilter.org>
    Cc: Florian Westphal <fw@strlen.de>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16: s/refcount/atomic/]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit aed15b3930175cfebf45fa6e1734606f6ea337a1
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 8 12:19:00 2018 +0100

    netfilter: drop outermost socket lock in getsockopt()
    
    commit 01ea306f2ac2baff98d472da719193e738759d93 upstream.
    
    The Syzbot reported a possible deadlock in the netfilter area caused by
    rtnl lock, xt lock and socket lock being acquired with a different order
    on different code paths, leading to the following backtrace:
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0+ #301 Not tainted
    ------------------------------------------------------
    syzkaller233489/4179 is trying to acquire lock:
      (rtnl_mutex){+.+.}, at: [<0000000048e996fd>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    but task is already holding lock:
      (&xt[i].mutex){+.+.}, at: [<00000000328553a2>]
    xt_find_table_lock+0x3e/0x3e0 net/netfilter/x_tables.c:1041
    
    which lock already depends on the new lock.
    ===
    
    Since commit 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), we already acquire the socket lock in
    the innermost scope, where needed. In such commit I forgot to remove
    the outer-most socket lock from the getsockopt() path, this commit
    addresses the issues dropping it now.
    
    v1 -> v2: fix bad subj, added relavant 'fixes' tag
    
    Fixes: 22265a5c3c10 ("netfilter: xt_TEE: resolve oif using netdevice notifiers")
    Fixes: 202f59afd441 ("netfilter: ipt_CLUSTERIP: do not hold dev")
    Fixes: 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Reported-by: syzbot+ddde1c7b7ff7442d7f2d@syzkaller.appspotmail.com
    Suggested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 65783e46da39da3325a1f4954584e1da06f4689d
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Feb 12 21:35:31 2018 -0800

    net: fix race on decreasing number of TX queues
    
    commit ac5b70198adc25c73fba28de4f78adcee8f6be0b upstream.
    
    netif_set_real_num_tx_queues() can be called when netdev is up.
    That usually happens when user requests change of number of
    channels/rings with ethtool -L.  The procedure for changing
    the number of queues involves resetting the qdiscs and setting
    dev->num_tx_queues to the new value.  When the new value is
    lower than the old one, extra care has to be taken to ensure
    ordering of accesses to the number of queues vs qdisc reset.
    
    Currently the queues are reset before new dev->num_tx_queues
    is assigned, leaving a window of time where packets can be
    enqueued onto the queues going down, leading to a likely
    crash in the drivers, since most drivers don't check if TX
    skbs are assigned to an active queue.
    
    Fixes: e6484930d7c7 ("net: allocate tx queues in register_netdevice")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1d6d0b74634bdc77d1f7d50fb93e9172f700333a
Author: Jan-Marek Glogowski <glogow@fbihome.de>
Date:   Wed Feb 14 11:29:15 2018 +0100

    ALSA: hda/realtek: PCI quirk for Fujitsu U7x7
    
    commit fdcc968a3b290407bcba9d4c90e2fba6d8d928f1 upstream.
    
    These laptops have a combined jack to attach headsets, the U727 on
    the left, the U757 on the right, but a headsets microphone doesn't
    work. Using hdajacksensetest I found that pin 0x19 changed the
    present state when plugging the headset, in addition to 0x21, but
    didn't have the correct configuration (shown as "Not connected").
    
    So this sets the configuration to the same values as the headphone
    pin 0x21 except for the device type microphone, which makes it
    work correctly. With the patch the configured pins for U727 are
    
    Pin 0x12 (Internal Mic, Mobile-In): present = No
    Pin 0x14 (Internal Speaker): present = No
    Pin 0x19 (Black Mic, Left side): present = No
    Pin 0x1d (Internal Aux): present = No
    Pin 0x21 (Black Headphone, Left side): present = No
    
    Signed-off-by: Jan-Marek Glogowski <glogow@fbihome.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cce704ab5402f0953d635478bf51d8c03e271ec4
Author: Ulf Magnusson <ulfalizer@gmail.com>
Date:   Mon Feb 5 02:21:13 2018 +0100

    ARM: mvebu: Fix broken PL310_ERRATA_753970 selects
    
    commit 8aa36a8dcde3183d84db7b0d622ffddcebb61077 upstream.
    
    The MACH_ARMADA_375 and MACH_ARMADA_38X boards select ARM_ERRATA_753970,
    but it was renamed to PL310_ERRATA_753970 by commit fa0ce4035d48 ("ARM:
    7162/1: errata: tidy up Kconfig options for PL310 errata workarounds").
    
    Fix the selects to use the new name.
    
    Discovered with the
    https://github.com/ulfalizer/Kconfiglib/blob/master/examples/list_undefined.py
    script.
    Fixes: fa0ce4035d48 ("ARM: 7162/1: errata: tidy up Kconfig options for
    PL310 errata workarounds"
    Signed-off-by: Ulf Magnusson <ulfalizer@gmail.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 66e1f97832584c4db5b4907a2290d1ccbe20980a
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 12 14:42:01 2018 +0100

    xfrm_user: uncoditionally validate esn replay attribute struct
    
    commit d97ca5d714a5334aecadadf696875da40f1fbf3e upstream.
    
    The sanity test added in ecd7918745234 can be bypassed, validation
    only occurs if XFRM_STATE_ESN flag is set, but rest of code doesn't care
    and just checks if the attribute itself is present.
    
    So always validate.  Alternative is to reject if we have the attribute
    without the flag but that would change abi.
    
    Reported-by: syzbot+0ab777c27d2bb7588f73@syzkaller.appspotmail.com
    Cc: Mathias Krause <minipli@googlemail.com>
    Fixes: ecd7918745234 ("xfrm_user: ensure user supplied esn replay window is valid")
    Fixes: d8647b79c3b7e ("xfrm: Add user interface for esn and big anti-replay windows")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1a84eee67c95df77d4ebda944b6cd2809be79ef5
Author: Eric Biggers <ebiggers@google.com>
Date:   Sat Feb 3 20:33:27 2018 -0800

    libata: remove WARN() for DMA or PIO command without data
    
    commit 9173e5e80729c8434b8d27531527c5245f4a5594 upstream.
    
    syzkaller hit a WARN() in ata_qc_issue() when writing to /dev/sg0.  This
    happened because it issued a READ_6 command with no data buffer.
    
    Just remove the WARN(), as it doesn't appear indicate a kernel bug.  The
    expected behavior is to fail the command, which the code does.
    
    Here's a reproducer that works in QEMU when /dev/sg0 refers to a disk of
    the default type ("82371SB PIIX3 IDE"):
    
        #include <fcntl.h>
        #include <unistd.h>
    
        int main()
        {
                char buf[42] = { [36] = 0x8 /* READ_6 */ };
    
                write(open("/dev/sg0", O_RDWR), buf, sizeof(buf));
        }
    
    Fixes: f92a26365a72 ("libata: change ATA_QCFLAG_DMAMAP semantics")
    Reported-by: syzbot+f7b556d1766502a69d85071d2ff08bd87be53d0f@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ef27a92a96178e4d982d52b8804b20cfc221b633
Author: Eric Biggers <ebiggers@google.com>
Date:   Sat Feb 3 20:30:56 2018 -0800

    libata: fix length validation of ATAPI-relayed SCSI commands
    
    commit 058f58e235cbe03e923b30ea7c49995a46a8725f upstream.
    
    syzkaller reported a crash in ata_bmdma_fill_sg() when writing to
    /dev/sg1.  The immediate cause was that the ATA command's scatterlist
    was not DMA-mapped, which causes 'pi - 1' to underflow, resulting in a
    write to 'qc->ap->bmdma_prd[0xffffffff]'.
    
    Strangely though, the flag ATA_QCFLAG_DMAMAP was set in qc->flags.  The
    root cause is that when __ata_scsi_queuecmd() is preparing to relay a
    SCSI command to an ATAPI device, it doesn't correctly validate the CDB
    length before copying it into the 16-byte buffer 'cdb' in 'struct
    ata_queued_cmd'.  Namely, it validates the fixed CDB length expected
    based on the SCSI opcode but not the actual CDB length, which can be
    larger due to the use of the SG_NEXT_CMD_LEN ioctl.  Since 'flags' is
    the next member in ata_queued_cmd, a buffer overflow corrupts it.
    
    Fix it by requiring that the actual CDB length be <= 16 (ATAPI_CDB_LEN).
    
    [Really it seems the length should be required to be <= dev->cdb_len,
    but the current behavior seems to have been intentionally introduced by
    commit 607126c2a21c ("libata-scsi: be tolerant of 12-byte ATAPI commands
    in 16-byte CDBs") to work around a userspace bug in mplayer.  Probably
    the workaround is no longer needed (mplayer was fixed in 2007), but
    continuing to allow lengths to up 16 appears harmless for now.]
    
    Here's a reproducer that works in QEMU when /dev/sg1 refers to the
    CD-ROM drive that qemu-system-x86_64 creates by default:
    
        #include <fcntl.h>
        #include <sys/ioctl.h>
        #include <unistd.h>
    
        #define SG_NEXT_CMD_LEN 0x2283
    
        int main()
        {
                char buf[53] = { [36] = 0x7e, [52] = 0x02 };
                int fd = open("/dev/sg1", O_RDWR);
                ioctl(fd, SG_NEXT_CMD_LEN, &(int){ 17 });
                write(fd, buf, sizeof(buf));
        }
    
    The crash was:
    
        BUG: unable to handle kernel paging request at ffff8cb97db37ffc
        IP: ata_bmdma_fill_sg drivers/ata/libata-sff.c:2623 [inline]
        IP: ata_bmdma_qc_prep+0xa4/0xc0 drivers/ata/libata-sff.c:2727
        PGD fb6c067 P4D fb6c067 PUD 0
        Oops: 0002 [#1] SMP
        CPU: 1 PID: 150 Comm: syz_ata_bmdma_q Not tainted 4.15.0-next-20180202 #99
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        [...]
        Call Trace:
         ata_qc_issue+0x100/0x1d0 drivers/ata/libata-core.c:5421
         ata_scsi_translate+0xc9/0x1a0 drivers/ata/libata-scsi.c:2024
         __ata_scsi_queuecmd drivers/ata/libata-scsi.c:4326 [inline]
         ata_scsi_queuecmd+0x8c/0x210 drivers/ata/libata-scsi.c:4375
         scsi_dispatch_cmd+0xa2/0xe0 drivers/scsi/scsi_lib.c:1727
         scsi_request_fn+0x24c/0x530 drivers/scsi/scsi_lib.c:1865
         __blk_run_queue_uncond block/blk-core.c:412 [inline]
         __blk_run_queue+0x3a/0x60 block/blk-core.c:432
         blk_execute_rq_nowait+0x93/0xc0 block/blk-exec.c:78
         sg_common_write.isra.7+0x272/0x5a0 drivers/scsi/sg.c:806
         sg_write+0x1ef/0x340 drivers/scsi/sg.c:677
         __vfs_write+0x31/0x160 fs/read_write.c:480
         vfs_write+0xa7/0x160 fs/read_write.c:544
         SYSC_write fs/read_write.c:589 [inline]
         SyS_write+0x4d/0xc0 fs/read_write.c:581
         do_syscall_64+0x5e/0x110 arch/x86/entry/common.c:287
         entry_SYSCALL_64_after_hwframe+0x21/0x86
    
    Fixes: 607126c2a21c ("libata-scsi: be tolerant of 12-byte ATAPI commands in 16-byte CDBs")
    Reported-by: syzbot+1ff6f9fcc3c35f1c72a95e26528c8e7e3276e4da@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f069d6a9b383380970bcb0b75282686904499eb
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Feb 12 17:15:40 2018 +0800

    bridge: check brport attr show in brport_show
    
    commit 1b12580af1d0677c3c3a19e35bfe5d59b03f737f upstream.
    
    Now br_sysfs_if file flush doesn't have attr show. To read it will
    cause kernel panic after users chmod u+r this file.
    
    Xiong found this issue when running the commands:
    
      ip link add br0 type bridge
      ip link add type veth
      ip link set veth0 master br0
      chmod u+r /sys/devices/virtual/net/veth0/brport/flush
      timeout 3 cat /sys/devices/virtual/net/veth0/brport/flush
    
    kernel crashed with NULL a pointer dereference call trace.
    
    This patch is to fix it by return -EINVAL when brport_attr->show
    is null, just the same as the check for brport_attr->store in
    brport_store().
    
    Fixes: 9cf637473c85 ("bridge: add sysfs hook to flush forwarding table")
    Reported-by: Xiong Zhou <xzhou@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f6ece273fb5ae5c89002afc7f2ae716ee656061a
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Jan 12 18:18:05 2018 -0800

    usb: dwc3: gadget: Set maxpacket size for ep0 IN
    
    commit 6180026341e852a250e1f97ebdcf71684a3c81b9 upstream.
    
    There are 2 control endpoint structures for DWC3. However, the driver
    only updates the OUT direction control endpoint structure during
    ConnectDone event. DWC3 driver needs to update the endpoint max packet
    size for control IN endpoint as well. If the max packet size is not
    properly set, then the driver will incorrectly calculate the data
    transfer size and fail to send ZLP for HS/FS 3-stage control read
    transfer.
    
    The fix is simply to update the max packet size for the ep0 IN direction
    during ConnectDone event.
    
    Fixes: 72246da40f37 ("usb: Introduce DesignWare USB3 DRD Driver")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit abe5affda565d8fedb602a4825c56b2445f843f9
Author: Lassi Ylikojola <lassi.ylikojola@gmail.com>
Date:   Fri Feb 9 16:51:36 2018 +0200

    ALSA: usb-audio: add implicit fb quirk for Behringer UFX1204
    
    commit 5e35dc0338d85ccebacf3f77eca1e5dea73155e8 upstream.
    
    Add quirk to ensure a sync endpoint is properly configured.
    This patch is a fix for same symptoms on Behringer UFX1204 as patch
    from Albertto Aquirre on Dec 8 2016 for Axe-Fx II.
    
    Signed-off-by: Lassi Ylikojola <lassi.ylikojola@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit db033f33e7445abaf31e978d63afd11039cd7802
Author: Zhang Bo <zbsdta@126.com>
Date:   Mon Feb 5 14:56:21 2018 -0800

    Input: matrix_keypad - fix race when disabling interrupts
    
    commit ea4f7bd2aca9f68470e9aac0fc9432fd180b1fe7 upstream.
    
    If matrix_keypad_stop() is executing and the keypad interrupt is triggered,
    disable_row_irqs() may be called by both matrix_keypad_interrupt() and
    matrix_keypad_stop() at the same time, causing interrupts to be disabled
    twice and the keypad being "stuck" after resuming.
    
    Take lock when setting keypad->stopped to ensure that ISR will not race
    with matrix_keypad_stop() disabling interrupts.
    
    Signed-off-by: Zhang Bo <zbsdta@126.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 952c3e411fc9eb228d7f7861f2ed14189c902d73
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Fri Feb 9 11:03:50 2018 +0100

    s390/qeth: fix SETIP command handling
    
    commit 1c5b2216fbb973a9410e0b06389740b5c1289171 upstream.
    
    send_control_data() applies some special handling to SETIP v4 IPA
    commands. But current code parses *all* command types for the SETIP
    command code. Limit the command code check to IPA commands.
    
    Fixes: 5b54e16f1a54 ("qeth: do not spin for SETIP ip assist command")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9a5861a3d59c64438fe06a66fd6718836bd69703
Author: Greg Kurz <groug@kaod.org>
Date:   Mon Jan 22 22:02:05 2018 +0100

    9p/trans_virtio: discard zero-length reply
    
    commit 26d99834f89e76514076d9cd06f61e56e6a509b8 upstream.
    
    When a 9p request is successfully flushed, the server is expected to just
    mark it as used without sending a 9p reply (ie, without writing data into
    the buffer). In this case, virtqueue_get_buf() will return len == 0 and
    we must not report a REQ_STATUS_RCVD status to the client, otherwise the
    client will erroneously assume the request has not been flushed.
    
    Signed-off-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3f5a898f9e6c881d9cdd74b514fb54144243f4cd
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Wed Mar 14 21:10:23 2018 +0100

    netlink: avoid a double skb free in genlmsg_mcast()
    
    commit 02a2385f37a7c6594c9d89b64c4a1451276f08eb upstream.
    
    nlmsg_multicast() consumes always the skb, thus the original skb must be
    freed only when this function is called with a clone.
    
    Fixes: cb9f7a9a5c96 ("netlink: ensure to loop over all netns in genlmsg_multicast_allns()")
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8ac2414ffd89c62c894bf67581570d5c4d9cfec0
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Tue Feb 6 14:48:32 2018 +0100

    netlink: ensure to loop over all netns in genlmsg_multicast_allns()
    
    commit cb9f7a9a5c96a773bbc9c70660dc600cfff82f82 upstream.
    
    Nowadays, nlmsg_multicast() returns only 0 or -ESRCH but this was not the
    case when commit 134e63756d5f was pushed.
    However, there was no reason to stop the loop if a netns does not have
    listeners.
    Returns -ESRCH only if there was no listeners in all netns.
    
    To avoid having the same problem in the future, I didn't take the
    assumption that nlmsg_multicast() returns only 0 or -ESRCH.
    
    Fixes: 134e63756d5f ("genetlink: make netns aware")
    CC: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1c749b6e89b56f22c42793da92cdcf555d9a2702
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Fri Jan 26 13:41:59 2018 -0600

    powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove
    
    commit 1d9a090783bef19fe8cdec878620d22f05191316 upstream.
    
    When DLPAR removing a CPU, the unmapping of the cpu from a node in
    unmap_cpu_from_node() should also invalidate the CPUs entry in the
    numa_cpu_lookup_table. There is not a guarantee that on a subsequent
    DLPAR add of the CPU the associativity will be the same and thus
    could be in a different node. Invalidating the entry in the
    numa_cpu_lookup_table causes the associativity to be read from the
    device tree at the time of the add.
    
    The current behavior of not invalidating the CPUs entry in the
    numa_cpu_lookup_table can result in scenarios where the the topology
    layout of CPUs in the partition does not match the device tree
    or the topology reported by the HMC.
    
    This bug looks like it was introduced in 2004 in the commit titled
    "ppc64: cpu hotplug notifier for numa", which is 6b15e4e87e32 in the
    linux-fullhist tree. Hence tag it for all stable releases.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 050a7601d5d92c388c0dbbfcf4c42992a06e96c7
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Mon Feb 5 11:15:52 2018 +0200

    crypto: caam - fix endless loop when DECO acquire fails
    
    commit 225ece3e7dad4cfc44cca38ce7a3a80f255ea8f1 upstream.
    
    In case DECO0 cannot be acquired - i.e. run_descriptor_deco0() fails
    with -ENODEV, caam_probe() enters an endless loop:
    
    run_descriptor_deco0
            ret -ENODEV
            -> instantiate_rng
                    -ENODEV, overwritten by -EAGAIN
                    ret -EAGAIN
                    -> caam_probe
                            -EAGAIN results in endless loop
    
    It turns out the error path in instantiate_rng() is incorrect,
    the checks are done in the wrong order.
    
    Fixes: 1005bccd7a4a6 ("crypto: caam - enable instantiation of all RNG4 state handles")
    Reported-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Suggested-by: Auer Lukas <lukas.auer@aisec.fraunhofer.de>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 552816063bb33d3fada4c9305bca25547281302d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 2 16:48:47 2018 +0100

    cifs: silence compiler warnings showing up with gcc-8.0.0
    
    commit ade7db991b47ab3016a414468164f4966bd08202 upstream.
    
    This bug was fixed before, but came up again with the latest
    compiler in another function:
    
    fs/cifs/cifssmb.c: In function 'CIFSSMBSetEA':
    fs/cifs/cifssmb.c:6362:3: error: 'strncpy' offset 8 is out of the bounds [0, 4] [-Werror=array-bounds]
       strncpy(parm_data->list[0].name, ea_name, name_len);
    
    Let's apply the same fix that was used for the other instances.
    
    Fixes: b2a3ad9ca502 ("cifs: silence compiler warnings showing up with gcc-4.7.0")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9c7aa205c49237cdf1cddcc1da7a549c6fa11555
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:42:08 2018 -0800

    pipe: read buffer limits atomically
    
    commit f7340761812fc10313e6fcc115e0bc4f7a799112 upstream.
    
    The pipe buffer limits are accessed without any locking, and may be
    changed at any time by the sysctl handlers.  In theory this could cause
    problems for expressions like the following:
    
        pipe_user_pages_hard && user_bufs > pipe_user_pages_hard
    
    ...  since the assembly code might reference the 'pipe_user_pages_hard'
    memory location multiple times, and if the admin removes the limit by
    setting it to 0, there is a very brief window where processes could
    incorrectly observe the limit to be exceeded.
    
    Fix this by loading the limits with READ_ONCE() prior to use.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-8-ebiggers3@gmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16:
     - Use ACCESS_ONCE() instead of READ_ONCE()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 44ee666d54c3285a91a2aa25909fefc6d4b651fa
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:42:05 2018 -0800

    pipe: simplify round_pipe_size()
    
    commit c4fed5a91fadc8a277b1eda474317b501651dd3e upstream.
    
    round_pipe_size() calculates the number of pages the requested size
    corresponds to, then rounds the page count up to the next power of 2.
    
    However, it also rounds everything < PAGE_SIZE up to PAGE_SIZE.
    Therefore, there's no need to actually translate the size into a page
    count; we just need to round the size up to the next power of 2.
    
    We do need to verify the size isn't greater than (1 << 31), since on
    32-bit systems roundup_pow_of_two() would be undefined in that case.  But
    that can just be combined with the UINT_MAX check which we need anyway
    now.
    
    Finally, update pipe_set_size() to not redundantly check the return value
    of round_pipe_size() for the "invalid size" case twice.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-7-ebiggers3@gmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 44c5e1c1fa9df3815786a78b8c5ac7ec9c12202a
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:42:00 2018 -0800

    pipe: reject F_SETPIPE_SZ with size over UINT_MAX
    
    commit 96e99be40e4cff870a83233731121ec0f7f95075 upstream.
    
    A pipe's size is represented as an 'unsigned int'.  As expected, writing a
    value greater than UINT_MAX to /proc/sys/fs/pipe-max-size fails with
    EINVAL.  However, the F_SETPIPE_SZ fcntl silently truncates such values to
    32 bits, rather than failing with EINVAL as expected.  (It *does* fail
    with EINVAL for values above (1 << 31) but <= UINT_MAX.)
    
    Fix this by moving the check against UINT_MAX into round_pipe_size() which
    is called in both cases.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-6-ebiggers3@gmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0fb6eac1022a3a87aaceca6bfc6093c742cc8629
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:41:56 2018 -0800

    pipe: fix off-by-one error when checking buffer limits
    
    commit 9903a91c763ecdae333a04a9d89d79d2b8966503 upstream.
    
    With pipe-user-pages-hard set to 'N', users were actually only allowed up
    to 'N - 1' buffers; and likewise for pipe-user-pages-soft.
    
    Fix this to allow up to 'N' buffers, as would be expected.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-5-ebiggers3@gmail.com
    Fixes: b0b91d18e2e9 ("pipe: fix limit checking in pipe_set_size()")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Willy Tarreau <w@1wt.eu>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0aaa03fae25eaa40620434b87da86362a21a3cf1
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:41:53 2018 -0800

    pipe: actually allow root to exceed the pipe buffer limits
    
    commit 85c2dd5473b2718b4b63e74bfeb1ca876868e11f upstream.
    
    pipe-user-pages-hard and pipe-user-pages-soft are only supposed to apply
    to unprivileged users, as documented in both Documentation/sysctl/fs.txt
    and the pipe(7) man page.
    
    However, the capabilities are actually only checked when increasing a
    pipe's size using F_SETPIPE_SZ, not when creating a new pipe.  Therefore,
    if pipe-user-pages-hard has been set, the root user can run into it and be
    unable to create pipes.  Similarly, if pipe-user-pages-soft has been set,
    the root user can run into it and have their pipes limited to 1 page each.
    
    Fix this by allowing the privileged override in both cases.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-4-ebiggers3@gmail.com
    Fixes: 759c01142a5d ("pipe: limit the per-user amount of pages allocated in pipes")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d9386e646afb484dc34ade580800f03aac064c5a
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:41:49 2018 -0800

    pipe, sysctl: remove pipe_proc_fn()
    
    commit 319e0a21bb7823abbb4818fe2724e572bbac77a2 upstream.
    
    pipe_proc_fn() is no longer needed, as it only calls through to
    proc_dopipe_max_size().  Just put proc_dopipe_max_size() in the ctl_table
    entry directly, and remove the unneeded EXPORT_SYMBOL() and the ENOSYS
    stub for it.
    
    (The reason the ENOSYS stub isn't needed is that the pipe-max-size
    ctl_table entry is located directly in 'kern_table' rather than being
    registered separately.  Therefore, the entry is already only defined when
    the kernel is built with sysctl support.)
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-3-ebiggers3@gmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4fa253ccefc1f3ea800e81fac82c28c442328c1c
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:41:45 2018 -0800

    pipe, sysctl: drop 'min' parameter from pipe-max-size converter
    
    commit 4c2e4befb3cc9ce42d506aa537c9ab504723e98c upstream.
    
    Patch series "pipe: buffer limits fixes and cleanups", v2.
    
    This series simplifies the sysctl handler for pipe-max-size and fixes
    another set of bugs related to the pipe buffer limits:
    
    - The root user wasn't allowed to exceed the limits when creating new
      pipes.
    
    - There was an off-by-one error when checking the limits, so a limit of
      N was actually treated as N - 1.
    
    - F_SETPIPE_SZ accepted values over UINT_MAX.
    
    - Reading the pipe buffer limits could be racy.
    
    This patch (of 7):
    
    Before validating the given value against pipe_min_size,
    do_proc_dopipe_max_size_conv() calls round_pipe_size(), which rounds the
    value up to pipe_min_size.  Therefore, the second check against
    pipe_min_size is redundant.  Remove it.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-2-ebiggers3@gmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f9b4f72f064eeafad6581adc27c7f8f0009ac08
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Fri Nov 17 15:29:28 2017 -0800

    sysctl: check for UINT_MAX before unsigned int min/max
    
    commit fb910c42ccebf853c29296185c45c11164a56098 upstream.
    
    Mikulas noticed in the existing do_proc_douintvec_minmax_conv() and
    do_proc_dopipe_max_size_conv() introduced in this patchset, that they
    inconsistently handle overflow and min/max range inputs:
    
    For example:
    
      0 ... param->min - 1 ---> ERANGE
      param->min ... param->max ---> the value is accepted
      param->max + 1 ... 0x100000000L + param->min - 1 ---> ERANGE
      0x100000000L + param->min ... 0x100000000L + param->max ---> EINVAL
      0x100000000L + param->max + 1, 0x200000000L + param->min - 1 ---> ERANGE
      0x200000000L + param->min ... 0x200000000L + param->max ---> EINVAL
      0x200000000L + param->max + 1, 0x300000000L + param->min - 1 ---> ERANGE
    
    In do_proc_do*() routines which store values into unsigned int variables
    (4 bytes wide for 64-bit builds), first validate that the input unsigned
    long value (8 bytes wide for 64-bit builds) will fit inside the smaller
    unsigned int variable.  Then check that the unsigned int value falls
    inside the specified parameter min, max range.  Otherwise the unsigned
    long -> unsigned int conversion drops leading bits from the input value,
    leading to the inconsistent pattern Mikulas documented above.
    
    Link: http://lkml.kernel.org/r/1507658689-11669-5-git-send-email-joe.lawrence@redhat.com
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16:
     - Drop changes in do_proc_douintvec_minmax_conv()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c861a0beb1195ed271f296f62459bdf1aa3fa733
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Fri Nov 17 15:29:24 2017 -0800

    pipe: add proc_dopipe_max_size() to safely assign pipe_max_size
    
    commit 7a8d181949fb2c16be00f8cdb354794a30e46b39 upstream.
    
    pipe_max_size is assigned directly via procfs sysctl:
    
      static struct ctl_table fs_table[] = {
              ...
              {
                      .procname       = "pipe-max-size",
                      .data           = &pipe_max_size,
                      .maxlen         = sizeof(int),
                      .mode           = 0644,
                      .proc_handler   = &pipe_proc_fn,
                      .extra1         = &pipe_min_size,
              },
              ...
    
      int pipe_proc_fn(struct ctl_table *table, int write, void __user *buf,
                       size_t *lenp, loff_t *ppos)
      {
              ...
              ret = proc_dointvec_minmax(table, write, buf, lenp, ppos)
              ...
    
    and then later rounded in-place a few statements later:
    
              ...
              pipe_max_size = round_pipe_size(pipe_max_size);
              ...
    
    This leaves a window of time between initial assignment and rounding
    that may be visible to other threads.  (For example, one thread sets a
    non-rounded value to pipe_max_size while another reads its value.)
    
    Similar reads of pipe_max_size are potentially racy:
    
      pipe.c :: alloc_pipe_info()
      pipe.c :: pipe_set_size()
    
    Add a new proc_dopipe_max_size() that consolidates reading the new value
    from the user buffer, verifying bounds, and calling round_pipe_size()
    with a single assignment to pipe_max_size.
    
    Link: http://lkml.kernel.org/r/1507658689-11669-4-git-send-email-joe.lawrence@redhat.com
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: Continue using int sysctl functions because we don't
     have proper unsigned int support]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 219af14b4692f13b6ec5eda7505e00e65febe6ef
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Fri Nov 17 15:29:21 2017 -0800

    pipe: avoid round_pipe_size() nr_pages overflow on 32-bit
    
    commit d3f14c485867cfb2e0c48aa88c41d0ef4bf5209c upstream.
    
    round_pipe_size() contains a right-bit-shift expression which may
    overflow, which would cause undefined results in a subsequent
    roundup_pow_of_two() call.
    
      static inline unsigned int round_pipe_size(unsigned int size)
      {
              unsigned long nr_pages;
    
              nr_pages = (size + PAGE_SIZE - 1) >> PAGE_SHIFT;
              return roundup_pow_of_two(nr_pages) << PAGE_SHIFT;
      }
    
    PAGE_SIZE is defined as (1UL << PAGE_SHIFT), so:
      - 4 bytes wide on 32-bit (0 to 0xffffffff)
      - 8 bytes wide on 64-bit (0 to 0xffffffffffffffff)
    
    That means that 32-bit round_pipe_size(), nr_pages may overflow to 0:
    
      size=0x00000000    nr_pages=0x0
      size=0x00000001    nr_pages=0x1
      size=0xfffff000    nr_pages=0xfffff
      size=0xfffff001    nr_pages=0x0         << !
      size=0xffffffff    nr_pages=0x0         << !
    
    This is bad because roundup_pow_of_two(n) is undefined when n == 0!
    
    64-bit is not a problem as the unsigned int size is 4 bytes wide
    (similar to 32-bit) and the larger, 8 byte wide unsigned long, is
    sufficient to handle the largest value of the bit shift expression:
    
      size=0xffffffff    nr_pages=100000
    
    Modify round_pipe_size() to return 0 if n == 0 and updates its callers to
    handle accordingly.
    
    Link: http://lkml.kernel.org/r/1507658689-11669-3-git-send-email-joe.lawrence@redhat.com
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 968c7922b163c2dacce033d309c9d0f646d8baac
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:43 2016 -0700

    pipe: cap initial pipe capacity according to pipe-max-size limit
    
    commit 086e774a57fba4695f14383c0818994c0b31da7c upstream.
    
    This is a patch that provides behavior that is more consistent, and
    probably less surprising to users. I consider the change optional, and
    welcome opinions about whether it should be applied.
    
    By default, pipes are created with a capacity of 64 kiB.  However,
    /proc/sys/fs/pipe-max-size may be set smaller than this value.  In this
    scenario, an unprivileged user could thus create a pipe whose initial
    capacity exceeds the limit. Therefore, it seems logical to cap the
    initial pipe capacity according to the value of pipe-max-size.
    
    The test program shown earlier in this patch series can be used to
    demonstrate the effect of the change brought about with this patch:
    
        # cat /proc/sys/fs/pipe-max-size
        1048576
        # sudo -u mtk ./test_F_SETPIPE_SZ 1
        Initial pipe capacity: 65536
        # echo 10000 > /proc/sys/fs/pipe-max-size
        # cat /proc/sys/fs/pipe-max-size
        16384
        # sudo -u mtk ./test_F_SETPIPE_SZ 1
        Initial pipe capacity: 16384
        # ./test_F_SETPIPE_SZ 1
        Initial pipe capacity: 65536
    
    The last two executions of 'test_F_SETPIPE_SZ' show that pipe-max-size
    caps the initial allocation for a new pipe for unprivileged users, but
    not for privileged users.
    
    Link: http://lkml.kernel.org/r/31dc7064-2a17-9c5b-1df1-4e3012ee992c@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d904c968ea470cf6d5d014c610e32e692fa75429
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:40 2016 -0700

    pipe: make account_pipe_buffers() return a value, and use it
    
    commit 9c87bcf0a31b338dc8a69a5d251a037565a94e13 upstream.
    
    This is an optional patch, to provide a small performance
    improvement.  Alter account_pipe_buffers() so that it returns the
    new value in user->pipe_bufs. This means that we can refactor
    too_many_pipe_buffers_soft() and too_many_pipe_buffers_hard() to
    avoid the costs of repeated use of atomic_long_read() to get the
    value user->pipe_bufs.
    
    Link: http://lkml.kernel.org/r/93e5f193-1e5e-3e1f-3a20-eae79b7e1310@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5c2136307064f8962fda88f3740da491689b10b5
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:37 2016 -0700

    pipe: fix limit checking in alloc_pipe_info()
    
    commit a005ca0e6813e1d796a7422a7e31d8b8d6555df1 upstream.
    
    The limit checking in alloc_pipe_info() (used by pipe(2) and when
    opening a FIFO) has the following problems:
    
    (1) When checking capacity required for the new pipe, the checks against
        the limit in /proc/sys/fs/pipe-user-pages-{soft,hard} are made
        against existing consumption, and exclude the memory required for
        the new pipe capacity. As a consequence: (1) the memory allocation
        throttling provided by the soft limit does not kick in quite as
        early as it should, and (2) the user can overrun the hard limit.
    
    (2) As currently implemented, accounting and checking against the limits
        is done as follows:
    
        (a) Test whether the user has exceeded the limit.
        (b) Make new pipe buffer allocation.
        (c) Account new allocation against the limits.
    
        This is racey. Multiple processes may pass point (a) simultaneously,
        and then allocate pipe buffers that are accounted for only in step
        (c).  The race means that the user's pipe buffer allocation could be
        pushed over the limit (by an arbitrary amount, depending on how
        unlucky we were in the race). [Thanks to Vegard Nossum for spotting
        this point, which I had missed.]
    
    This patch addresses the above problems as follows:
    
    * Alter the checks against limits to include the memory required for the
      new pipe.
    * Re-order the accounting step so that it precedes the buffer allocation.
      If the accounting step determines that a limit has been reached, revert
      the accounting and cause the operation to fail.
    
    Link: http://lkml.kernel.org/r/8ff3e9f9-23f6-510c-644f-8e70cd1c0bd9@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: Don't use GFP_KERNEL_ACCOUNT]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5395d3172e68d36b18b3ee8c284dea4b0a86a326
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:34 2016 -0700

    pipe: simplify logic in alloc_pipe_info()
    
    commit 09b4d1990094dd22c27fb0163534db419458569c upstream.
    
    Replace an 'if' block that covers most of the code in this function
    with a 'goto'. This makes the code a little simpler to read, and also
    simplifies the next patch (fix limit checking in alloc_pipe_info())
    
    Link: http://lkml.kernel.org/r/aef030c1-0257-98a9-4988-186efa48530c@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16:
     - Don't use GFP_KERNEL_ACCOUNT
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 35f088bd4808e58ca6c644aaaeec033b4cc70092
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:31 2016 -0700

    pipe: fix limit checking in pipe_set_size()
    
    commit b0b91d18e2e97b741b294af9333824ecc3fadfd8 upstream.
    
    The limit checking in pipe_set_size() (used by fcntl(F_SETPIPE_SZ))
    has the following problems:
    
    (1) When increasing the pipe capacity, the checks against the limits in
        /proc/sys/fs/pipe-user-pages-{soft,hard} are made against existing
        consumption, and exclude the memory required for the increased pipe
        capacity. The new increase in pipe capacity can then push the total
        memory used by the user for pipes (possibly far) over a limit. This
        can also trigger the problem described next.
    
    (2) The limit checks are performed even when the new pipe capacity is
        less than the existing pipe capacity. This can lead to problems if a
        user sets a large pipe capacity, and then the limits are lowered,
        with the result that the user will no longer be able to decrease the
        pipe capacity.
    
    (3) As currently implemented, accounting and checking against the
        limits is done as follows:
    
        (a) Test whether the user has exceeded the limit.
        (b) Make new pipe buffer allocation.
        (c) Account new allocation against the limits.
    
        This is racey. Multiple processes may pass point (a)
        simultaneously, and then allocate pipe buffers that are accounted
        for only in step (c).  The race means that the user's pipe buffer
        allocation could be pushed over the limit (by an arbitrary amount,
        depending on how unlucky we were in the race). [Thanks to Vegard
        Nossum for spotting this point, which I had missed.]
    
    This patch addresses the above problems as follows:
    
    * Perform checks against the limits only when increasing a pipe's
      capacity; an unprivileged user can always decrease a pipe's capacity.
    * Alter the checks against limits to include the memory required for
      the new pipe capacity.
    * Re-order the accounting step so that it precedes the buffer
      allocation. If the accounting step determines that a limit has
      been reached, revert the accounting and cause the operation to fail.
    
    The program below can be used to demonstrate problems 1 and 2, and the
    effect of the fix. The program takes one or more command-line arguments.
    The first argument specifies the number of pipes that the program should
    create. The remaining arguments are, alternately, pipe capacities that
    should be set using fcntl(F_SETPIPE_SZ), and sleep intervals (in
    seconds) between the fcntl() operations. (The sleep intervals allow the
    possibility to change the limits between fcntl() operations.)
    
    Problem 1
    =========
    
    Using the test program on an unpatched kernel, we first set some
    limits:
    
        # echo 0 > /proc/sys/fs/pipe-user-pages-soft
        # echo 1000000000 > /proc/sys/fs/pipe-max-size
        # echo 10000 > /proc/sys/fs/pipe-user-pages-hard    # 40.96 MB
    
    Then show that we can set a pipe with capacity (100MB) that is
    over the hard limit
    
        # sudo -u mtk ./test_F_SETPIPE_SZ 1 100000000
        Initial pipe capacity: 65536
            Loop 1: set pipe capacity to 100000000 bytes
                F_SETPIPE_SZ returned 134217728
    
    Now set the capacity to 100MB twice. The second call fails (which is
    probably surprising to most users, since it seems like a no-op):
    
        # sudo -u mtk ./test_F_SETPIPE_SZ 1 100000000 0 100000000
        Initial pipe capacity: 65536
            Loop 1: set pipe capacity to 100000000 bytes
                F_SETPIPE_SZ returned 134217728
            Loop 2: set pipe capacity to 100000000 bytes
                Loop 2, pipe 0: F_SETPIPE_SZ failed: fcntl: Operation not permitted
    
    With a patched kernel, setting a capacity over the limit fails at the
    first attempt:
    
        # echo 0 > /proc/sys/fs/pipe-user-pages-soft
        # echo 1000000000 > /proc/sys/fs/pipe-max-size
        # echo 10000 > /proc/sys/fs/pipe-user-pages-hard
        # sudo -u mtk ./test_F_SETPIPE_SZ 1 100000000
        Initial pipe capacity: 65536
            Loop 1: set pipe capacity to 100000000 bytes
                Loop 1, pipe 0: F_SETPIPE_SZ failed: fcntl: Operation not permitted
    
    There is a small chance that the change to fix this problem could
    break user-space, since there are cases where fcntl(F_SETPIPE_SZ)
    calls that previously succeeded might fail. However, the chances are
    small, since (a) the pipe-user-pages-{soft,hard} limits are new (in
    4.5), and the default soft/hard limits are high/unlimited.  Therefore,
    it seems warranted to make these limits operate more precisely (and
    behave more like what users probably expect).
    
    Problem 2
    =========
    
    Running the test program on an unpatched kernel, we first set some limits:
    
        # getconf PAGESIZE
        4096
        # echo 0 > /proc/sys/fs/pipe-user-pages-soft
        # echo 1000000000 > /proc/sys/fs/pipe-max-size
        # echo 10000 > /proc/sys/fs/pipe-user-pages-hard    # 40.96 MB
    
    Now perform two fcntl(F_SETPIPE_SZ) operations on a single pipe,
    first setting a pipe capacity (10MB), sleeping for a few seconds,
    during which time the hard limit is lowered, and then set pipe
    capacity to a smaller amount (5MB):
    
        # sudo -u mtk ./test_F_SETPIPE_SZ 1 10000000 15 5000000 &
        [1] 748
        # Initial pipe capacity: 65536
            Loop 1: set pipe capacity to 10000000 bytes
                F_SETPIPE_SZ returned 16777216
                Sleeping 15 seconds
    
        # echo 1000 > /proc/sys/fs/pipe-user-pages-hard      # 4.096 MB
        #     Loop 2: set pipe capacity to 5000000 bytes
                Loop 2, pipe 0: F_SETPIPE_SZ failed: fcntl: Operation not permitted
    
    In this case, the user should be able to lower the limit.
    
    With a kernel that has the patch below, the second fcntl()
    succeeds:
    
        # echo 0 > /proc/sys/fs/pipe-user-pages-soft
        # echo 1000000000 > /proc/sys/fs/pipe-max-size
        # echo 10000 > /proc/sys/fs/pipe-user-pages-hard
        # sudo -u mtk ./test_F_SETPIPE_SZ 1 10000000 15 5000000 &
        [1] 3215
        # Initial pipe capacity: 65536
        #     Loop 1: set pipe capacity to 10000000 bytes
                F_SETPIPE_SZ returned 16777216
                Sleeping 15 seconds
    
        # echo 1000 > /proc/sys/fs/pipe-user-pages-hard
    
        #     Loop 2: set pipe capacity to 5000000 bytes
                F_SETPIPE_SZ returned 8388608
    
    8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---
    
    /* test_F_SETPIPE_SZ.c
    
       (C) 2016, Michael Kerrisk; licensed under GNU GPL version 2 or later
    
       Test operation of fcntl(F_SETPIPE_SZ) for setting pipe capacity
       and interactions with limits defined by /proc/sys/fs/pipe-* files.
    */
    
    #define _GNU_SOURCE
    #include <stdio.h>
    #include <stdlib.h>
    #include <fcntl.h>
    #include <unistd.h>
    
    int
    main(int argc, char *argv[])
    {
        int (*pfd)[2];
        int npipes;
        int pcap, rcap;
        int j, p, s, stime, loop;
    
        if (argc < 2) {
            fprintf(stderr, "Usage: %s num-pipes "
                    "[pipe-capacity sleep-time]...\n", argv[0]);
            exit(EXIT_FAILURE);
        }
    
        npipes = atoi(argv[1]);
    
        pfd = calloc(npipes, sizeof (int [2]));
        if (pfd == NULL) {
            perror("calloc");
            exit(EXIT_FAILURE);
        }
    
        for (j = 0; j < npipes; j++) {
            if (pipe(pfd[j]) == -1) {
                fprintf(stderr, "Loop %d: pipe() failed: ", j);
                perror("pipe");
                exit(EXIT_FAILURE);
            }
        }
    
        printf("Initial pipe capacity: %d\n", fcntl(pfd[0][0], F_GETPIPE_SZ));
    
        for (j = 2; j < argc; j += 2 ) {
            loop = j / 2;
            pcap = atoi(argv[j]);
            printf("    Loop %d: set pipe capacity to %d bytes\n", loop, pcap);
    
            for (p = 0; p < npipes; p++) {
                s = fcntl(pfd[p][0], F_SETPIPE_SZ, pcap);
                if (s == -1) {
                    fprintf(stderr, "        Loop %d, pipe %d: F_SETPIPE_SZ "
                            "failed: ", loop, p);
                    perror("fcntl");
                    exit(EXIT_FAILURE);
                }
    
                if (p == 0) {
                    printf("        F_SETPIPE_SZ returned %d\n", s);
                    rcap = s;
                } else {
                    if (s != rcap) {
                        fprintf(stderr, "        Loop %d, pipe %d: F_SETPIPE_SZ "
                                "unexpected return: %d\n", loop, p, s);
                        exit(EXIT_FAILURE);
                    }
                }
    
                stime = (j + 1 < argc) ? atoi(argv[j + 1]) : 0;
                if (stime > 0) {
                    printf("        Sleeping %d seconds\n", stime);
                    sleep(stime);
                }
            }
        }
    
        exit(EXIT_SUCCESS);
    }
    
    8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---8x---
    
    Patch history:
    
    v2
       * Switch order of test in 'if' statement to avoid function call
          (to capability()) in normal path. [This is a fix to a preexisting
          wart in the code. Thanks to Willy Tarreau]
        * Perform (size > pipe_max_size) check before calling
          account_pipe_buffers().  [Thanks to Vegard Nossum]
          Quoting Vegard:
    
            The potential problem happens if the user passes a very large number
            which will overflow pipe->user->pipe_bufs.
    
            On 32-bit, sizeof(int) == sizeof(long), so if they pass arg = INT_MAX
            then round_pipe_size() returns INT_MAX. Although it's true that the
            accounting is done in terms of pages and not bytes, so you'd need on
            the order of (1 << 13) = 8192 processes hitting the limit at the same
            time in order to make it overflow, which seems a bit unlikely.
    
            (See https://lkml.org/lkml/2016/8/12/215 for another discussion on the
            limit checking)
    
    Link: http://lkml.kernel.org/r/1e464945-536b-2420-798b-e77b9c7e8593@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 54ce9e5c863f2325d19f9ef616e0c3a252b7f988
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:28 2016 -0700

    pipe: refactor argument for account_pipe_buffers()
    
    commit 3734a13b96ebf039b293d8d37a934fd1bd9e03ab upstream.
    
    This is a preparatory patch for following work. account_pipe_buffers()
    performs accounting in the 'user_struct'. There is no need to pass a
    pointer to a 'pipe_inode_info' struct (which is then dereferenced to
    obtain a pointer to the 'user' field). Instead, pass a pointer directly
    to the 'user_struct'. This change is needed in preparation for a
    subsequent patch that the fixes the limit checking in alloc_pipe_info()
    (and the resulting code is a little more logical).
    
    Link: http://lkml.kernel.org/r/7277bf8c-a6fc-4a7d-659c-f5b145c981ab@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f51a24f485b74877090b6b5fbd3b1fe627115d02
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:25 2016 -0700

    pipe: move limit checking logic into pipe_set_size()
    
    commit d37d41666408102bf0ac8e48d8efdce7b809e5f6 upstream.
    
    This is a preparatory patch for following work. Move the F_SETPIPE_SZ
    limit-checking logic from pipe_fcntl() into pipe_set_size().  This
    simplifies the code a little, and allows for reworking required in
    a later patch that fixes the limit checking in pipe_set_size()
    
    Link: http://lkml.kernel.org/r/3701b2c5-2c52-2c3e-226d-29b9deb29b50@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a7660dff7cf10fee3251f5f2b1cf3f3ca27cb50b
Author: Michael Kerrisk (man-pages) <mtk.manpages@gmail.com>
Date:   Tue Oct 11 13:53:22 2016 -0700

    pipe: relocate round_pipe_size() above pipe_set_size()
    
    commit f491bd71118beba608d39ac2d5f1530e1160cd2e upstream.
    
    Patch series "pipe: fix limit handling", v2.
    
    When changing a pipe's capacity with fcntl(F_SETPIPE_SZ), various limits
    defined by /proc/sys/fs/pipe-* files are checked to see if unprivileged
    users are exceeding limits on memory consumption.
    
    While documenting and testing the operation of these limits I noticed
    that, as currently implemented, these checks have a number of problems:
    
    (1) When increasing the pipe capacity, the checks against the limits
        in /proc/sys/fs/pipe-user-pages-{soft,hard} are made against
        existing consumption, and exclude the memory required for the
        increased pipe capacity. The new increase in pipe capacity can then
        push the total memory used by the user for pipes (possibly far) over
        a limit. This can also trigger the problem described next.
    
    (2) The limit checks are performed even when the new pipe capacity
        is less than the existing pipe capacity. This can lead to problems
        if a user sets a large pipe capacity, and then the limits are
        lowered, with the result that the user will no longer be able to
        decrease the pipe capacity.
    
    (3) As currently implemented, accounting and checking against the
        limits is done as follows:
    
        (a) Test whether the user has exceeded the limit.
        (b) Make new pipe buffer allocation.
        (c) Account new allocation against the limits.
    
        This is racey. Multiple processes may pass point (a) simultaneously,
        and then allocate pipe buffers that are accounted for only in step
        (c).  The race means that the user's pipe buffer allocation could be
        pushed over the limit (by an arbitrary amount, depending on how
        unlucky we were in the race). [Thanks to Vegard Nossum for spotting
        this point, which I had missed.]
    
    This patch series addresses these three problems.
    
    This patch (of 8):
    
    This is a minor preparatory patch.  After subsequent patches,
    round_pipe_size() will be called from pipe_set_size(), so place
    round_pipe_size() above pipe_set_size().
    
    Link: http://lkml.kernel.org/r/91a91fdb-a959-ba7f-b551-b62477cc98a1@gmail.com
    Signed-off-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: <socketpair@gmail.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 12c7d3f5090c7a3dc67ce40e8b3cdfd8e528f440
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Tue Feb 6 15:37:55 2018 -0800

    kernel/async.c: revert "async: simplify lowest_in_progress()"
    
    commit 4f7e988e63e336827f4150de48163bed05d653bd upstream.
    
    This reverts commit 92266d6ef60c ("async: simplify lowest_in_progress()")
    which was simply wrong: In the case where domain is NULL, we now use the
    wrong offsetof() in the list_first_entry macro, so we don't actually
    fetch the ->cookie value, but rather the eight bytes located
    sizeof(struct list_head) further into the struct async_entry.
    
    On 64 bit, that's the data member, while on 32 bit, that's a u64 built
    from func and data in some order.
    
    I think the bug happens to be harmless in practice: It obviously only
    affects callers which pass a NULL domain, and AFAICT the only such
    caller is
    
      async_synchronize_full() ->
      async_synchronize_full_domain(NULL) ->
      async_synchronize_cookie_domain(ASYNC_COOKIE_MAX, NULL)
    
    and the ASYNC_COOKIE_MAX means that in practice we end up waiting for
    the async_global_pending list to be empty - but it would break if
    somebody happened to pass (void*)-1 as the data element to
    async_schedule, and of course also if somebody ever does a
    async_synchronize_cookie_domain(, NULL) with a "finite" cookie value.
    
    Maybe the "harmless in practice" means this isn't -stable material.  But
    I'm not completely confident my quick git grep'ing is enough, and there
    might be affected code in one of the earlier kernels that has since been
    removed, so I'll leave the decision to the stable guys.
    
    Link: http://lkml.kernel.org/r/20171128104938.3921-1-linux@rasmusvillemoes.dk
    Fixes: 92266d6ef60c "async: simplify lowest_in_progress()"
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Acked-by: Tejun Heo <tj@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Adam Wallis <awallis@codeaurora.org>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4325682e7d19d2dc20d9406b71cad00ca85efdf3
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Feb 5 14:41:45 2018 -0800

    netfilter: xt_RATEEST: acquire xt_rateest_mutex for hash insert
    
    commit 7dc68e98757a8eccf8ca7a53a29b896f1eef1f76 upstream.
    
    rateest_hash is supposed to be protected by xt_rateest_mutex,
    and, as suggested by Eric, lookup and insert should be atomic,
    so we should acquire the xt_rateest_mutex once for both.
    
    So introduce a non-locking helper for internal use and keep the
    locking one for external.
    
    Reported-by: <syzbot+5cb189720978275e4c75@syzkaller.appspotmail.com>
    Fixes: 5859034d7eb8 ("[NETFILTER]: x_tables: add RATEEST target")
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cd53f44e7910881891e667e0d0a9cf3af69ac766
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Feb 6 17:56:07 2018 +0000

    arm64: KVM: Increment PC after handling an SMC trap
    
    commit f5115e8869e1dfafac0e414b4f1664f3a84a4683 upstream.
    
    When handling an SMC trap, the "preferred return address" is set
    to that of the SMC, and not the next PC (which is a departure from
    the behaviour of an SMC that isn't trapped).
    
    Increment PC in the handler, as the guest is otherwise forever
    stuck...
    
    Fixes: acfb3b883f6d ("arm64: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls")
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 09afbc21c9d34ffd283c4fd0b55239f5aafae54f
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Feb 6 17:56:06 2018 +0000

    arm: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls
    
    commit 20e8175d246e9f9deb377f2784b3e7dfb2ad3e86 upstream.
    
    KVM doesn't follow the SMCCC when it comes to unimplemented calls,
    and inject an UNDEF instead of returning an error. Since firmware
    calls are now used for security mitigation, they are becoming more
    common, and the undef is counter productive.
    
    Instead, let's follow the SMCCC which states that -1 must be returned
    to the caller when getting an unknown function number.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    [bwh: Backported to 3.16: Use vcpu_reg() instead of vcpu_set_reg()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 13fae5bb375e04e917fae901ffaf133304d79662
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Feb 1 13:40:19 2018 +0100

    x86/xen: init %gs very early to avoid page faults with stack protector
    
    commit 4f277295e54c5b7340e48efea3fc5cc21a2872b7 upstream.
    
    When running as Xen pv guest %gs is initialized some time after
    C code is started. Depending on stack protector usage this might be
    too late, resulting in page faults.
    
    So setup %gs and MSR_GS_BASE in assembly code already.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Chris Patterson <cjp256@gmail.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d5b66d9c52bf38470a2b145df33a63d889741d1d
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Mon Jan 29 11:26:45 2018 +0000

    MIPS: TXx9: use IS_BUILTIN() for CONFIG_LEDS_CLASS
    
    commit 0cde5b44a30f1daaef1c34e08191239dc63271c4 upstream.
    
    When commit b27311e1cace ("MIPS: TXx9: Add RBTX4939 board support")
    added board support for the RBTX4939, it added a call to
    led_classdev_register even if the LED class is built as a module.
    Built-in arch code cannot call module code directly like this. Commit
    b33b44073734 ("MIPS: TXX9: use IS_ENABLED() macro") subsequently
    changed the inclusion of this code to a single check that
    CONFIG_LEDS_CLASS is either builtin or a module, but the same issue
    remains.
    
    This leads to MIPS allmodconfig builds failing when CONFIG_MACH_TX49XX=y
    is set:
    
    arch/mips/txx9/rbtx4939/setup.o: In function `rbtx4939_led_probe':
    setup.c:(.init.text+0xc0): undefined reference to `of_led_classdev_register'
    make: *** [Makefile:999: vmlinux] Error 1
    
    Fix this by using the IS_BUILTIN() macro instead.
    
    Fixes: b27311e1cace ("MIPS: TXx9: Add RBTX4939 board support")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Reviewed-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/18544/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1a24ef355a6a50a51db66b839b167585a95ce4db
Author: Jean Delvare <jdelvare@suse.de>
Date:   Sat Feb 3 11:25:20 2018 +0100

    firmware: dmi_scan: Fix handling of empty DMI strings
    
    commit a7770ae194569e96a93c48aceb304edded9cc648 upstream.
    
    The handling of empty DMI strings looks quite broken to me:
    * Strings from 1 to 7 spaces are not considered empty.
    * True empty DMI strings (string index set to 0) are not considered
      empty, and result in allocating a 0-char string.
    * Strings with invalid index also result in allocating a 0-char
      string.
    * Strings starting with 8 spaces are all considered empty, even if
      non-space characters follow (sounds like a weird thing to do, but
      I have actually seen occurrences of this in DMI tables before.)
    * Strings which are considered empty are reported as 8 spaces,
      instead of being actually empty.
    
    Some of these issues are the result of an off-by-one error in memcmp,
    the rest is incorrect by design.
    
    So let's get it square: missing strings and strings made of only
    spaces, regardless of their length, should be treated as empty and
    no memory should be allocated for them. All other strings are
    non-empty and should be allocated.
    
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Fixes: 79da4721117f ("x86: fix DMI out of memory problems")
    Cc: Parag Warudkar <parag.warudkar@gmail.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 95b12df8b45babb0634e94189ba207d7dd192e87
Author: Andi Shyti <andi@etezian.org>
Date:   Thu Feb 1 10:18:59 2018 -0800

    Input: mms114 - fix license module information
    
    commit 498e7e7ed1fd72c275a682f0903c4a20cc538658 upstream.
    
    The driver has been released with GNU Public License v2 as stated
    in the header, but the module license information has been tagged
    as "GPL" (GNU Public License v2 or later).
    
    Fix the module license information so that it matches the one in
    the header as "GPL v2".
    
    Fixes: 07b8481d4aff ("Input: add MELFAS mms114 touchscreen driver")
    Reported-by: Marcus Folkesson <marcus.folkesson@gmail.com>
    Signed-off-by: Andi Shyti <andi.shyti@samsung.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e199800c515a2a5ee6632d3d64dbfae6d62d15c1
Author: Zygo Blaxell <ce3g8jdj@umail.furryterror.org>
Date:   Tue Jan 23 22:22:09 2018 -0500

    btrfs: remove spurious WARN_ON(ref->count < 0) in find_parent_nodes
    
    commit c8195a7b1ad5648857ce20ba24f384faed8512bc upstream.
    
    Until v4.14, this warning was very infrequent:
    
            WARNING: CPU: 3 PID: 18172 at fs/btrfs/backref.c:1391 find_parent_nodes+0xc41/0x14e0
            Modules linked in: [...]
            CPU: 3 PID: 18172 Comm: bees Tainted: G      D W    L  4.11.9-zb64+ #1
            Hardware name: System manufacturer System Product Name/M5A78L-M/USB3, BIOS 2101    12/02/2014
            Call Trace:
             dump_stack+0x85/0xc2
             __warn+0xd1/0xf0
             warn_slowpath_null+0x1d/0x20
             find_parent_nodes+0xc41/0x14e0
             __btrfs_find_all_roots+0xad/0x120
             ? extent_same_check_offsets+0x70/0x70
             iterate_extent_inodes+0x168/0x300
             iterate_inodes_from_logical+0x87/0xb0
             ? iterate_inodes_from_logical+0x87/0xb0
             ? extent_same_check_offsets+0x70/0x70
             btrfs_ioctl+0x8ac/0x2820
             ? lock_acquire+0xc2/0x200
             do_vfs_ioctl+0x91/0x700
             ? __fget+0x112/0x200
             SyS_ioctl+0x79/0x90
             entry_SYSCALL_64_fastpath+0x23/0xc6
             ? trace_hardirqs_off_caller+0x1f/0x140
    
    Starting with v4.14 (specifically 86d5f9944252 ("btrfs: convert prelimary
    reference tracking to use rbtrees")) the WARN_ON occurs three orders of
    magnitude more frequently--almost once per second while running workloads
    like bees.
    
    Replace the WARN_ON() with a comment rationale for its removal.
    The rationale is paraphrased from an explanation by Edmund Nadolski
    <enadolski@suse.de> on the linux-btrfs mailing list.
    
    Fixes: 8da6d5815c59 ("Btrfs: added btrfs_find_all_roots()")
    Signed-off-by: Zygo Blaxell <ce3g8jdj@umail.furryterror.org>
    Reviewed-by: Lu Fengqi <lufq.fnst@cn.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b73475d96130f2cb66f73f1c558fdcfacc1f75f4
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:54 2018 -0700

    Btrfs: fix use-after-free on root->orphan_block_rsv
    
    commit 1a932ef4e47984dee227834667b5ff5a334e4805 upstream.
    
    I got these from running generic/475,
    
    WARNING: CPU: 0 PID: 26384 at fs/btrfs/inode.c:3326 btrfs_orphan_commit_root+0x1ac/0x2b0 [btrfs]
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    IP: btrfs_block_rsv_release+0x1c/0x70 [btrfs]
    Call Trace:
      btrfs_orphan_release_metadata+0x9f/0x200 [btrfs]
      btrfs_orphan_del+0x10d/0x170 [btrfs]
      btrfs_setattr+0x500/0x640 [btrfs]
      notify_change+0x7ae/0x870
      do_truncate+0xca/0x130
      vfs_truncate+0x2ee/0x3d0
      do_sys_truncate+0xaf/0xf0
      SyS_truncate+0xe/0x10
      entry_SYSCALL_64_fastpath+0x1f/0x96
    
    The race is between btrfs_orphan_commit_root and btrfs_orphan_del,
            t1                                        t2
    btrfs_orphan_commit_root                     btrfs_orphan_del
       spin_lock
       check (&root->orphan_inodes)
       root->orphan_block_rsv = NULL;
       spin_unlock
                                                 atomic_dec(&root->orphan_inodes);
                                                 access root->orphan_block_rsv
    
    Accessing root->orphan_block_rsv must be done before decreasing
    root->orphan_inodes.
    
    Fixes: 703c88e03524 ("Btrfs: fix tracking of orphan inode count")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: Drop the added comment in a path that's
     unreachable here]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3bfd31f8e2a4b64472f7d6bc4d7a89f6fc686d82
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:52 2018 -0700

    Btrfs: fix extent state leak from tree log
    
    commit 55237a5f2431a72435e3ed39e4306e973c0446b7 upstream.
    
    It's possible that btrfs_sync_log() bails out after one of the two
    btrfs_write_marked_extents() which convert extent state's state bit into
    EXTENT_NEED_WAIT from EXTENT_DIRTY/EXTENT_NEW, however only EXTENT_DIRTY
    and EXTENT_NEW are searched by free_log_tree() so that those extent states
    with EXTENT_NEED_WAIT lead to memory leak.
    
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9ac34783260c7e9275cc9590f3fa7e1da3922965
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:51 2018 -0700

    Btrfs: fix crash due to not cleaning up tree log block's dirty bits
    
    commit 1846430c24d66e85cc58286b3319c82cd54debb2 upstream.
    
    In cases that the whole fs flips into readonly status due to failures in
    critical sections, then log tree's blocks are still dirty, and this leads
    to a crash during umount time, the crash is about use-after-free,
    
    umount
     -> close_ctree
        -> stop workers
        -> iput(btree_inode)
           -> iput_final
              -> write_inode_now
                 -> ...
                   -> queue job on stop'd workers
    
    Fixes: 681ae50917df ("Btrfs: cleanup reserved space when freeing tree log on error")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d06cf37f08a47b74a0e72a1f2419d4bf20934fb4
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:50 2018 -0700

    Btrfs: fix deadlock in run_delalloc_nocow
    
    commit e89166990f11c3f21e1649d760dd35f9e410321c upstream.
    
    @cur_offset is not set back to what it should be (@cow_start) if
    btrfs_next_leaf() returns something wrong, and the range [cow_start,
    cur_offset) remains locked forever.
    
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 43d981dcb80bddd7d822a6b338c90164129a04d0
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 1 10:26:57 2018 -0800

    net: igmp: add a missing rcu locking section
    
    commit e7aadb27a5415e8125834b84a74477bfbee4eff5 upstream.
    
    Newly added igmpv3_get_srcaddr() needs to be called under rcu lock.
    
    Timer callbacks do not ensure this locking.
    
    =============================
    WARNING: suspicious RCU usage
    4.15.0+ #200 Not tainted
    -----------------------------
    ./include/linux/inetdevice.h:216 suspicious rcu_dereference_check() usage!
    
    other info that might help us debug this:
    
    rcu_scheduler_active = 2, debug_locks = 1
    3 locks held by syzkaller616973/4074:
     #0:  (&mm->mmap_sem){++++}, at: [<00000000bfce669e>] __do_page_fault+0x32d/0xc90 arch/x86/mm/fault.c:1355
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] lockdep_copy_map include/linux/lockdep.h:178 [inline]
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] call_timer_fn+0x1c6/0x820 kernel/time/timer.c:1316
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] spin_lock_bh include/linux/spinlock.h:315 [inline]
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] igmpv3_send_report+0x98/0x5b0 net/ipv4/igmp.c:600
    
    stack backtrace:
    CPU: 0 PID: 4074 Comm: syzkaller616973 Not tainted 4.15.0+ #200
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     lockdep_rcu_suspicious+0x123/0x170 kernel/locking/lockdep.c:4592
     __in_dev_get_rcu include/linux/inetdevice.h:216 [inline]
     igmpv3_get_srcaddr net/ipv4/igmp.c:329 [inline]
     igmpv3_newpack+0xeef/0x12e0 net/ipv4/igmp.c:389
     add_grhead.isra.27+0x235/0x300 net/ipv4/igmp.c:432
     add_grec+0xbd3/0x1170 net/ipv4/igmp.c:565
     igmpv3_send_report+0xd5/0x5b0 net/ipv4/igmp.c:605
     igmp_send_report+0xc43/0x1050 net/ipv4/igmp.c:722
     igmp_timer_expire+0x322/0x5c0 net/ipv4/igmp.c:831
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:938
    
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a6681bea45b2bc7f1004c5d6efe900457e17ace3
Author: Alexander Graf <agraf@suse.de>
Date:   Wed Jan 31 22:24:58 2018 +0100

    KVM: PPC: Book3S PR: Fix svcpu copying with preemption enabled
    
    commit 07ae5389e98c53bb9e9f308fce9c903bc3ee7720 upstream.
    
    When copying between the vcpu and svcpu, we may get scheduled away onto
    a different host CPU which in turn means our svcpu pointer may change.
    
    That means we need to atomically copy to and from the svcpu with preemption
    disabled, so that all code around it always sees a coherent state.
    
    Reported-by: Simon Guo <wei.guo.simon@gmail.com>
    Fixes: 3d3319b45eea ("KVM: PPC: Book3S: PR: Enable interrupts earlier")
    Signed-off-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e46406aaf3319a540c83c7cd4497fe92d9b0f3ca
Author: Hugh Dickins <hughd@google.com>
Date:   Fri Jun 1 16:50:50 2018 -0700

    mm: fix the NULL mapping case in __isolate_lru_page()
    
    commit 145e1a71e090575c74969e3daa8136d1e5b99fc8 upstream.
    
    George Boole would have noticed a slight error in 4.16 commit
    69d763fc6d3a ("mm: pin address_space before dereferencing it while
    isolating an LRU page").  Fix it, to match both the comment above it,
    and the original behaviour.
    
    Although anonymous pages are not marked PageDirty at first, we have an
    old habit of calling SetPageDirty when a page is removed from swap
    cache: so there's a category of ex-swap pages that are easily
    migratable, but were inadvertently excluded from compaction's async
    migration in 4.16.
    
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.1805302014001.12558@eggly.anvils
    Fixes: 69d763fc6d3a ("mm: pin address_space before dereferencing it while isolating an LRU page")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Reported-by:  Ivan Kalvachev <ikalvachev@gmail.com>
    Cc: "Huang, Ying" <ying.huang@intel.com>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dd5fb140c6bda724ff1d7e1b01166437dbe74c40
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Wed Jan 31 16:19:52 2018 -0800

    mm: pin address_space before dereferencing it while isolating an LRU page
    
    commit 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d upstream.
    
    Minchan Kim asked the following question -- what locks protects
    address_space destroying when race happens between inode trauncation and
    __isolate_lru_page? Jan Kara clarified by describing the race as follows
    
    CPU1                                            CPU2
    
    truncate(inode)                                 __isolate_lru_page()
      ...
      truncate_inode_page(mapping, page);
        delete_from_page_cache(page)
          spin_lock_irqsave(&mapping->tree_lock, flags);
            __delete_from_page_cache(page, NULL)
              page_cache_tree_delete(..)
                ...                                   mapping = page_mapping(page);
                page->mapping = NULL;
                ...
          spin_unlock_irqrestore(&mapping->tree_lock, flags);
          page_cache_free_page(mapping, page)
            put_page(page)
              if (put_page_testzero(page)) -> false
    - inode now has no pages and can be freed including embedded address_space
    
                                                      if (mapping && !mapping->a_ops->migratepage)
    - we've dereferenced mapping which is potentially already free.
    
    The race is theoretically possible but unlikely.  Before the
    delete_from_page_cache, truncate_cleanup_page is called so the page is
    likely to be !PageDirty or PageWriteback which gets skipped by the only
    caller that checks the mappping in __isolate_lru_page.  Even if the race
    occurs, a substantial amount of work has to happen during a tiny window
    with no preemption but it could potentially be done using a virtual
    machine to artifically slow one CPU or halt it during the critical
    window.
    
    This patch should eliminate the race with truncation by try-locking the
    page before derefencing mapping and aborting if the lock was not
    acquired.  There was a suggestion from Huang Ying to use RCU as a
    side-effect to prevent mapping being freed.  However, I do not like the
    solution as it's an unconventional means of preserving a mapping and
    it's not a context where rcu_read_lock is obviously protecting rcu data.
    
    Link: http://lkml.kernel.org/r/20180104102512.2qos3h5vqzeisrek@techsingularity.net
    Fixes: c82449352854 ("mm: compaction: make isolate_lru_page() filter-aware again")
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Cc: "Huang, Ying" <ying.huang@intel.com>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bf42c14bb04d8ec50cd900431b53b1e5eb06b0e8
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Jan 24 19:35:45 2018 +0100

    Revert "apple-gmux: lock iGP IO to protect from vgaarb changes"
    
    commit d6fa7588fd7a8def4c747c0c574ce85d453e3788 upstream.
    
    Commit 4eebd5a4e726 ("apple-gmux: lock iGP IO to protect from vgaarb
    changes") amended this driver's ->probe hook to lock decoding of normal
    (non-legacy) I/O space accesses to the integrated GPU on dual-GPU
    MacBook Pros.  The lock stays in place until the driver is unbound.
    
    The change was made to work around an issue with the out-of-tree nvidia
    graphics driver (available at http://www.nvidia.com/object/unix.html).
    It contains the following sequence in nvidia/nv.c:
    
            #if defined(CONFIG_VGA_ARB) && !defined(NVCPU_PPC64LE)
            #if defined(VGA_DEFAULT_DEVICE)
                vga_tryget(VGA_DEFAULT_DEVICE, VGA_RSRC_LEGACY_MASK);
            #endif
                vga_set_legacy_decoding(dev, VGA_RSRC_NONE);
            #endif
    
    This code was reported to cause deadlocks with VFIO already in 2013:
    https://devtalk.nvidia.com/default/topic/545560
    
    I've reported the issue to Nvidia developers once more in 2017:
    https://www.spinics.net/lists/dri-devel/msg138754.html
    
    On the MacBookPro10,1, this code apparently breaks backlight control
    (which is handled by apple-gmux via an I/O region starting at 0x700),
    as reported by Petri Hodju:
    https://bugzilla.kernel.org/show_bug.cgi?id=86121
    
    I tried to replicate Petri's observations on my MacBook9,1, which uses
    the same Intel Ivy Bridge + Nvidia GeForce GT 650M architecture, to no
    avail.  On my machine apple-gmux' I/O region remains accessible even
    with the nvidia driver loaded and commit 4eebd5a4e726 reverted.
    Petri reported that apple-gmux becomes accessible again after a
    suspend/resume cycle because the BIOS changed the VGA routing on the
    root port to the Nvidia GPU.  Perhaps this is a BIOS issue after all
    that can be fixed with an update?
    
    In any case, the change made by commit 4eebd5a4e726 has turned out to
    cause two new issues:
    
    * Wilfried Klaebe reports a deadlock when launching Xorg because it
      opens /dev/vga_arbiter and calls vga_get(), but apple-gmux is holding
      a lock on I/O space indefinitely.  It looks like apple-gmux' current
      behavior is an abuse of the vgaarb API as locks are not meant to be
      held for longer periods:
      https://bugzilla.kernel.org/show_bug.cgi?id=88861#c11
      https://bugzilla.kernel.org/attachment.cgi?id=217541
    
    * On dual GPU MacBook Pros introduced since 2013, the integrated GPU is
      powergated on boot und thus becomes invisible to Linux unless a custom
      EFI protocol is used to leave it powered on.  (A patch exists but is
      not in mainline yet due to several negative side effects.)  On these
      machines, locking I/O to the integrated GPU (as done by 4eebd5a4e726)
      fails and backlight control is therefore broken:
      https://bugzilla.kernel.org/show_bug.cgi?id=105051
    
    So let's revert commit 4eebd5a4e726 please.  Users experiencing the
    issue with the proprietary nvidia driver can comment out the above-
    quoted problematic code as a workaround (or try updating the BIOS).
    
    Cc: Petri Hodju <petrihodju@yahoo.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Bruno Prémont <bonbons@linux-vserver.org>
    Cc: Andy Ritger <aritger@nvidia.com>
    Cc: Ronald Tschalär <ronald@innovation.ch>
    Tested-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 21b59ba750c4bfc696c0f15bbae08ed1f3bc6f29
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Jan 30 19:01:40 2018 +0100

    netfilter: on sockopt() acquire sock lock only in the required scope
    
    commit 3f34cfae1238848fd53f25e5c8fd59da57901f4b upstream.
    
    Syzbot reported several deadlocks in the netfilter area caused by
    rtnl lock and socket lock being acquired with a different order on
    different code paths, leading to backtraces like the following one:
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0-rc9+ #212 Not tainted
    ------------------------------------------------------
    syzkaller041579/3682 is trying to acquire lock:
      (sk_lock-AF_INET6){+.+.}, at: [<000000008775e4dd>] lock_sock
    include/net/sock.h:1463 [inline]
      (sk_lock-AF_INET6){+.+.}, at: [<000000008775e4dd>]
    do_ipv6_setsockopt.isra.8+0x3c5/0x39d0 net/ipv6/ipv6_sockglue.c:167
    
    but task is already holding lock:
      (rtnl_mutex){+.+.}, at: [<000000004342eaa9>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #1 (rtnl_mutex){+.+.}:
            __mutex_lock_common kernel/locking/mutex.c:756 [inline]
            __mutex_lock+0x16f/0x1a80 kernel/locking/mutex.c:893
            mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:908
            rtnl_lock+0x17/0x20 net/core/rtnetlink.c:74
            register_netdevice_notifier+0xad/0x860 net/core/dev.c:1607
            tee_tg_check+0x1a0/0x280 net/netfilter/xt_TEE.c:106
            xt_check_target+0x22c/0x7d0 net/netfilter/x_tables.c:845
            check_target net/ipv6/netfilter/ip6_tables.c:538 [inline]
            find_check_entry.isra.7+0x935/0xcf0
    net/ipv6/netfilter/ip6_tables.c:580
            translate_table+0xf52/0x1690 net/ipv6/netfilter/ip6_tables.c:749
            do_replace net/ipv6/netfilter/ip6_tables.c:1165 [inline]
            do_ip6t_set_ctl+0x370/0x5f0 net/ipv6/netfilter/ip6_tables.c:1691
            nf_sockopt net/netfilter/nf_sockopt.c:106 [inline]
            nf_setsockopt+0x67/0xc0 net/netfilter/nf_sockopt.c:115
            ipv6_setsockopt+0x115/0x150 net/ipv6/ipv6_sockglue.c:928
            udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
            sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2978
            SYSC_setsockopt net/socket.c:1849 [inline]
            SyS_setsockopt+0x189/0x360 net/socket.c:1828
            entry_SYSCALL_64_fastpath+0x29/0xa0
    
    -> #0 (sk_lock-AF_INET6){+.+.}:
            lock_acquire+0x1d5/0x580 kernel/locking/lockdep.c:3914
            lock_sock_nested+0xc2/0x110 net/core/sock.c:2780
            lock_sock include/net/sock.h:1463 [inline]
            do_ipv6_setsockopt.isra.8+0x3c5/0x39d0 net/ipv6/ipv6_sockglue.c:167
            ipv6_setsockopt+0xd7/0x150 net/ipv6/ipv6_sockglue.c:922
            udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
            sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2978
            SYSC_setsockopt net/socket.c:1849 [inline]
            SyS_setsockopt+0x189/0x360 net/socket.c:1828
            entry_SYSCALL_64_fastpath+0x29/0xa0
    
    other info that might help us debug this:
    
      Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(rtnl_mutex);
                                    lock(sk_lock-AF_INET6);
                                    lock(rtnl_mutex);
       lock(sk_lock-AF_INET6);
    
      *** DEADLOCK ***
    
    1 lock held by syzkaller041579/3682:
      #0:  (rtnl_mutex){+.+.}, at: [<000000004342eaa9>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    The problem, as Florian noted, is that nf_setsockopt() is always
    called with the socket held, even if the lock itself is required only
    for very tight scopes and only for some operation.
    
    This patch addresses the issues moving the lock_sock() call only
    where really needed, namely in ipv*_getorigdst(), so that nf_setsockopt()
    does not need anymore to acquire both locks.
    
    Fixes: 22265a5c3c10 ("netfilter: xt_TEE: resolve oif using netdevice notifiers")
    Reported-by: syzbot+a4c2dc980ac1af699b36@syzkaller.appspotmail.com
    Suggested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b9d62c107f4cd4a976957b13fa125be2bbab3c87
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Jan 30 15:21:34 2018 +0100

    netfilter: ipt_CLUSTERIP: fix out-of-bounds accesses in clusterip_tg_check()
    
    commit 1a38956cce5eabd7b74f94bab70265e4df83165e upstream.
    
    Commit 136e92bbec0a switched local_nodes from an array to a bitmask
    but did not add proper bounds checks. As the result
    clusterip_config_init_nodelist() can both over-read
    ipt_clusterip_tgt_info.local_nodes and over-write
    clusterip_config.local_nodes.
    
    Add bounds checks for both.
    
    Fixes: 136e92bbec0a ("[NETFILTER] CLUSTERIP: use a bitmap to store node responsibility data")
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8d6801ab14708638a228565c5717fedd47d1c733
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Tue Jan 23 20:11:32 2018 -0600

    scsi: ibmvfc: fix misdefined reserved field in ibmvfc_fcp_rsp_info
    
    commit c39813652700f3df552b6557530f1e5f782dbe2f upstream.
    
    The fcp_rsp_info structure as defined in the FC spec has an initial 3
    bytes reserved field. The ibmvfc driver mistakenly defined this field as
    4 bytes resulting in the rsp_code field being defined in what should be
    the start of the second reserved field and thus always being reported as
    zero by the driver.
    
    Ideally, we should wire ibmvfc up with libfc for the sake of code
    deduplication, and ease of maintaining standardized structures in a
    single place. However, for now simply fixup the definition in ibmvfc for
    backporting to distros on older kernels. Wiring up with libfc will be
    done in a followup patch.
    
    Reported-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e49fe124cedf010ca2cd3b4fa7a2310a6802a76c
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Sat Jan 27 15:28:15 2018 +0100

    drm/radeon: adjust tested variable
    
    commit 3a61b527b4e1f285d21b6e9e623dc45cf8bb391f upstream.
    
    Check the variable that was most recently initialized.
    
    The semantic match that finds this problem is as follows:
    (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @@
    expression x, y, f, g, e, m;
    statement S1,S2,S3,S4;
    @@
    
    x = f(...);
    if (\(<+...x...+>\&e\)) S1 else S2
    (
    x = g(...);
    |
    m = g(...,&x,...);
    |
    y = g(...);
    *if (e)
     S3 else S4
    )
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 06534514c30bb82bd1411ca846cad24feba182ec
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Tue Jan 16 15:41:54 2018 +0100

    rbd: whitelist RBD_FEATURE_OPERATIONS feature bit
    
    commit e573427a440fd67d3f522357d7ac901d59281948 upstream.
    
    This feature bit restricts older clients from performing certain
    maintenance operations against an image (e.g. clone, snap create).
    krbd does not perform maintenance operations.
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Jason Dillaman <dillaman@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bcfe7d40d23c5ad73c89dc125e154bd0574a35da
Author: Jason Wang <jasowang@redhat.com>
Date:   Thu Jan 25 22:03:52 2018 +0800

    vhost_net: stop device during reset owner
    
    commit 4cd879515d686849eec5f718aeac62a70b067d82 upstream.
    
    We don't stop device before reset owner, this means we could try to
    serve any virtqueue kick before reset dev->worker. This will result a
    warn since the work was pending at llist during owner resetting. Fix
    this by stopping device during owner reset.
    
    Reported-by: syzbot+eb17c6162478cc50632c@syzkaller.appspotmail.com
    Fixes: 3a4d5c94e9593 ("vhost_net: a kernel-level virtio server")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d68eca4f310366915bb4a18a6feb1effda762f11
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Wed Jan 24 06:01:57 2018 -0500

    media: cxusb, dib0700: ignore XC2028_I2C_FLUSH
    
    commit 9893b905e743ded332575ca04486bd586c0772f7 upstream.
    
    The XC2028_I2C_FLUSH only needs to be implemented on a few
    devices. Others can safely ignore it.
    
    That prevents filling the dmesg with lots of messages like:
    
            dib0700: stk7700ph_xc3028_callback: unknown command 2, arg 0
    
    Fixes: 4d37ece757a8 ("[media] tuner/xc2028: Add I2C flush callback")
    Reported-by: Enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cbf1d907017411069832878babf6b24ac348487d
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Jan 28 11:25:30 2018 +0200

    RDMA/mlx5: Avoid memory leak in case of XRCD dealloc failure
    
    commit b081808a66345ba725b77ecd8d759bee874cd937 upstream.
    
    Failure in XRCD FW deallocation command leaves memory leaked and
    returns error to the user which he can't do anything about it.
    
    This patch changes behavior to always free memory and always return
    success to the user.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a577b9ca1ee678d394e09be62e7263afe40c4f34
Author: Alexandru Ardelean <alexandru.ardelean@analog.com>
Date:   Mon Jan 22 11:53:12 2018 +0200

    staging: iio: adc: ad7192: fix external frequency setting
    
    commit e31b617d0a63c6558485aaa730fd162faa95a766 upstream.
    
    The external clock frequency was set only when selecting
    the internal clock, which is fixed at 4.9152 Mhz.
    
    This is incorrect, since it should be set when any of
    the external clock or crystal settings is selected.
    
    Added range validation for the external (crystal/clock)
    frequency setting.
    Valid values are between 2.4576 and 5.12 Mhz.
    
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c67aa1ea456f732701efc5a17d66a485da11dfd5
Author: Ioana Ciornei <ciorneiioana@gmail.com>
Date:   Wed Oct 14 21:14:19 2015 +0300

    staging: iio: adc: remove the use of CamelCase
    
    commit 5f7e280f5ae61450a7aecd9feefe3f032b6a5abf upstream.
    
    Remove the use of CamelCase to follow the kernel naming conventions
    
    Signed-off-by: Ioana Ciornei <ciorneiioana@gmail.com>
    Reviewed-by: Daniel Baluta <daniel.baluta@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fe259c9e61f3400dadc66b03963e3afa1ac693ec
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Thu Jan 25 15:59:39 2018 +0100

    CIFS: zero sensitive data when freeing
    
    commit 97f4b7276b829a8927ac903a119bef2f963ccc58 upstream.
    
    also replaces memset()+kfree() by kzfree().
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d1d1a29f4debdef9009fba789eb7eec2036feb79
Author: Namjae Jeon <namjae.jeon@samsung.com>
Date:   Thu Aug 21 19:11:20 2014 +0900

    cifs: fix memory leak when password is supplied multiple times
    
    commit d6ccf4997e62fb6629f9f003980dca5292138b7b upstream.
    
    Unlikely but possible. When password is supplied multiple times, we have
    to free the previous allocation.
    
    Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
    Signed-off-by: Ashish Sangwan <a.sangwan@samsung.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d57567a89db62012c9ca5b44c7d59b1f704a80cf
Author: Jake Daryll Obina <jake.obina@gmail.com>
Date:   Fri Sep 22 00:00:14 2017 +0800

    jffs2: Fix use-after-free bug in jffs2_iget()'s error handling path
    
    commit 5bdd0c6f89fba430e18d636493398389dadc3b17 upstream.
    
    If jffs2_iget() fails for a newly-allocated inode, jffs2_do_clear_inode()
    can get called twice in the error handling path, the first call in
    jffs2_iget() itself and the second through iget_failed(). This can result
    to a use-after-free error in the second jffs2_do_clear_inode() call, such
    as shown by the oops below wherein the second jffs2_do_clear_inode() call
    was trying to free node fragments that were already freed in the first
    jffs2_do_clear_inode() call.
    
    [   78.178860] jffs2: error: (1904) jffs2_do_read_inode_internal: CRC failed for read_inode of inode 24 at physical location 0x1fc00c
    [   78.178914] Unable to handle kernel paging request at virtual address 6b6b6b6b6b6b6b7b
    [   78.185871] pgd = ffffffc03a567000
    [   78.188794] [6b6b6b6b6b6b6b7b] *pgd=0000000000000000, *pud=0000000000000000
    [   78.194968] Internal error: Oops: 96000004 [#1] PREEMPT SMP
    ...
    [   78.513147] PC is at rb_first_postorder+0xc/0x28
    [   78.516503] LR is at jffs2_kill_fragtree+0x28/0x90 [jffs2]
    [   78.520672] pc : [<ffffff8008323d28>] lr : [<ffffff8000eb1cc8>] pstate: 60000105
    [   78.526757] sp : ffffff800cea38f0
    [   78.528753] x29: ffffff800cea38f0 x28: ffffffc01f3f8e80
    [   78.532754] x27: 0000000000000000 x26: ffffff800cea3c70
    [   78.536756] x25: 00000000dc67c8ae x24: ffffffc033d6945d
    [   78.540759] x23: ffffffc036811740 x22: ffffff800891a5b8
    [   78.544760] x21: 0000000000000000 x20: 0000000000000000
    [   78.548762] x19: ffffffc037d48910 x18: ffffff800891a588
    [   78.552764] x17: 0000000000000800 x16: 0000000000000c00
    [   78.556766] x15: 0000000000000010 x14: 6f2065646f6e695f
    [   78.560767] x13: 6461657220726f66 x12: 2064656c69616620
    [   78.564769] x11: 435243203a6c616e x10: 7265746e695f6564
    [   78.568771] x9 : 6f6e695f64616572 x8 : ffffffc037974038
    [   78.572774] x7 : bbbbbbbbbbbbbbbb x6 : 0000000000000008
    [   78.576775] x5 : 002f91d85bd44a2f x4 : 0000000000000000
    [   78.580777] x3 : 0000000000000000 x2 : 000000403755e000
    [   78.584779] x1 : 6b6b6b6b6b6b6b6b x0 : 6b6b6b6b6b6b6b6b
    ...
    [   79.038551] [<ffffff8008323d28>] rb_first_postorder+0xc/0x28
    [   79.042962] [<ffffff8000eb5578>] jffs2_do_clear_inode+0x88/0x100 [jffs2]
    [   79.048395] [<ffffff8000eb9ddc>] jffs2_evict_inode+0x3c/0x48 [jffs2]
    [   79.053443] [<ffffff8008201ca8>] evict+0xb0/0x168
    [   79.056835] [<ffffff8008202650>] iput+0x1c0/0x200
    [   79.060228] [<ffffff800820408c>] iget_failed+0x30/0x3c
    [   79.064097] [<ffffff8000eba0c0>] jffs2_iget+0x2d8/0x360 [jffs2]
    [   79.068740] [<ffffff8000eb0a60>] jffs2_lookup+0xe8/0x130 [jffs2]
    [   79.073434] [<ffffff80081f1a28>] lookup_slow+0x118/0x190
    [   79.077435] [<ffffff80081f4708>] walk_component+0xfc/0x28c
    [   79.081610] [<ffffff80081f4dd0>] path_lookupat+0x84/0x108
    [   79.085699] [<ffffff80081f5578>] filename_lookup+0x88/0x100
    [   79.089960] [<ffffff80081f572c>] user_path_at_empty+0x58/0x6c
    [   79.094396] [<ffffff80081ebe14>] vfs_statx+0xa4/0x114
    [   79.098138] [<ffffff80081ec44c>] SyS_newfstatat+0x58/0x98
    [   79.102227] [<ffffff800808354c>] __sys_trace_return+0x0/0x4
    [   79.106489] Code: d65f03c0 f9400001 b40000e1 aa0103e0 (f9400821)
    
    The jffs2_do_clear_inode() call in jffs2_iget() is unnecessary since
    iget_failed() will eventually call jffs2_do_clear_inode() if needed, so
    just remove it.
    
    Fixes: 5451f79f5f81 ("iget: stop JFFS2 from using iget() and read_inode()")
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Jake Daryll Obina <jake.obina@gmail.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6c66efd659c176158fa86fd22507b2d2a6f8cfba
Author: Ganesh Mahendran <opensource.ganesh@gmail.com>
Date:   Wed Jan 10 10:49:05 2018 +0800

    android: binder: use VM_ALLOC to get vm area
    
    commit aac6830ec1cb681544212838911cdc57f2638216 upstream.
    
    VM_IOREMAP is used to access hardware through a mechanism called
    I/O mapped memory. Android binder is a IPC machanism which will
    not access I/O memory.
    
    And VM_IOREMAP has alignment requiement which may not needed in
    binder.
        __get_vm_area_node()
        {
        ...
            if (flags & VM_IOREMAP)
                align = 1ul << clamp_t(int, fls_long(size),
                   PAGE_SHIFT, IOREMAP_MAX_ORDER);
        ...
        }
    
    This patch will save some kernel vm area, especially for 32bit os.
    
    In 32bit OS, kernel vm area is only 240MB. We may got below
    error when launching a app:
    
    <3>[ 4482.440053] binder_alloc: binder_alloc_mmap_handler: 15728 8ce67000-8cf65000 get_vm_area failed -12
    <3>[ 4483.218817] binder_alloc: binder_alloc_mmap_handler: 15745 8ce67000-8cf65000 get_vm_area failed -12
    
    Signed-off-by: Ganesh Mahendran <opensource.ganesh@gmail.com>
    Acked-by: Martijn Coenen <maco@android.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    
    ----
    V3: update comments
    V2: update comments
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b900774fc479719248b5653da601851c66389118
Author: Ivan Delalande <colona@arista.com>
Date:   Wed Jan 24 17:16:22 2018 -0800

    lkdtm: fix handle_irq_event symbol for INT_HW_IRQ_EN
    
    commit 5be2a5011c039506e2862650c928acfb2e3d7b9c upstream.
    
    Function handle_IRQ_event was retired in v2.6.39 and replaced with
    handle_irq_event but nobody changed it in lkdtm so INT_HW_IRQ_EN has
    been broken for a while.
    
    Fixes: 33b054b867b8 ("genirq: Remove handle_IRQ_event")
    Signed-off-by: Travis Brown <travisb@arista.com>
    Signed-off-by: Ivan Delalande <colona@arista.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 867d97dfc1e9f8674da84d26092d1d34e8633f6c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 25 09:48:55 2018 +0100

    USB: serial: pl2303: new device id for Chilitag
    
    commit d08dd3f3dd2ae351b793fc5b76abdbf0fd317b12 upstream.
    
    This adds a new device id for Chilitag devices to the pl2303 driver.
    
    Reported-by: "Chu.Mike [朱堅宜]" <Mike-Chu@prolific.com.tw>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd595f18bf8c8bcd3b6f2d4134fce106a8f48e72
Author: Daniel N Pettersson <danielnp@axis.com>
Date:   Thu Jan 11 16:00:12 2018 +0100

    cifs: Fix autonegotiate security settings mismatch
    
    commit 9aca7e454415f7878b28524e76bebe1170911a88 upstream.
    
    Autonegotiation gives a security settings mismatch error if the SMB
    server selects an SMBv3 dialect that isn't SMB3.02. The exact error is
    "protocol revalidation - security settings mismatch".
    This can be tested using Samba v4.2 or by setting the global Samba
    setting max protocol = SMB3_00.
    
    The check that fails in smb3_validate_negotiate is the dialect
    verification of the negotiate info response. This is because it tries
    to verify against the protocol_id in the global smbdefault_values. The
    protocol_id in smbdefault_values is SMB3.02.
    In SMB2_negotiate the protocol_id in smbdefault_values isn't updated,
    it is global so it probably shouldn't be, but server->dialect is.
    
    This patch changes the check in smb3_validate_negotiate to use
    server->dialect instead of server->vals->protocol_id. The patch works
    with autonegotiate and when using a specific version in the vers mount
    option.
    
    Signed-off-by: Daniel N Pettersson <danielnp@axis.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b9b3d59a8d6f558aedcde7a20bb6682d4931797d
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Dec 15 12:48:32 2017 -0800

    cifs: Fix missing put_xid in cifs_file_strict_mmap
    
    commit f04a703c3d613845ae3141bfaf223489de8ab3eb upstream.
    
    If cifs_zap_mapping() returned an error, we would return without putting
    the xid that we got earlier.  Restructure cifs_file_strict_mmap() and
    cifs_file_mmap() to be more similar to each other and have a single
    point of return that always puts the xid.
    
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4731ab91f3ca537767d9920fa86ee7ea469fd2c0
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Jan 23 10:01:57 2018 -0800

    Input: edt-ft5x06 - fix error handling for factory mode on non-M06
    
    commit 4b3e910d7f430ab76dd37131bb75129878950163 upstream.
    
    When attempting enter factory mode on firmware that does not support it,
    we'd error out, but leave the device with interrupts disabled, and thus
    touch not working. Fix it by moving the check before we disable
    interrupts/allocate memory for debug buffers.
    
    Fixes: fd335ab04b3f ("Input: edt-ft5x06 - add support for M09 firmware version")
    Reviewed-by: Andi Shyti <andi@etezian.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    [bwh: Backported to 3.16:
     - s/EDT_M06/M06/
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 54094458f554385eb9c0326ce155c61e0263c9f9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jan 10 12:39:03 2018 +0300

    HID: roccat: prevent an out of bounds read in kovaplus_profile_activated()
    
    commit 7ad81482cad67cbe1ec808490d1ddfc420c42008 upstream.
    
    We get the "new_profile_index" value from the mouse device when we're
    handling raw events.  Smatch taints it as untrusted data and complains
    that we need a bounds check.  This seems like a reasonable warning
    otherwise there is a small read beyond the end of the array.
    
    Fixes: 0e70f97f257e ("HID: roccat: Add support for Kova[+] mouse")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Silvan Jegen <s.jegen@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8cc61943dfdd6b34158b95b11a58bdcc30635153
Author: Eugene Syromiatnikov <esyr@redhat.com>
Date:   Mon Jan 15 20:38:17 2018 +0100

    s390: fix handling of -1 in set{,fs}[gu]id16 syscalls
    
    commit 6dd0d2d22aa363fec075cb2577ba273ac8462e94 upstream.
    
    For some reason, the implementation of some 16-bit ID system calls
    (namely, setuid16/setgid16 and setfsuid16/setfsgid16) used type cast
    instead of low2highgid/low2highuid macros for converting [GU]IDs, which
    led to incorrect handling of value of -1 (which ought to be considered
    invalid).
    
    Discovered by strace test suite.
    
    Signed-off-by: Eugene Syromiatnikov <esyr@redhat.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a6931cf35cbfb117606b260d1fc028318c686177
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jan 18 14:16:38 2018 +0100

    scsi: fas216: fix sense buffer initialization
    
    commit 96d5eaa9bb74d299508d811d865c2c41b38b0301 upstream.
    
    While testing with the ARM specific memset() macro removed, I ran into a
    compiler warning that shows an old bug:
    
    drivers/scsi/arm/fas216.c: In function 'fas216_rq_sns_done':
    drivers/scsi/arm/fas216.c:2014:40: error: argument to 'sizeof' in 'memset' call is the same expression as the destination; did you mean to provide an explicit length? [-Werror=sizeof-pointer-memaccess]
    
    It turns out that the definition of the scsi_cmd structure changed back
    in linux-2.6.25, so now we clear only four bytes (sizeof(pointer))
    instead of 96 (SCSI_SENSE_BUFFERSIZE). I did not check whether we
    actually need to initialize the buffer here, but it's clear that if we
    do it, we should use the correct size.
    
    Fixes: de25deb18016 ("[SCSI] use dynamically allocated sense buffer")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4c2dda4bb0193b3e5fb51c41c42b599f68d46719
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Dec 5 09:29:19 2017 +0200

    btrfs: Handle btrfs_set_extent_delalloc failure in fixup worker
    
    commit f3038ee3a3f1017a1cbe9907e31fa12d366c5dcb upstream.
    
    This function was introduced by 247e743cbe6e ("Btrfs: Use async helpers
    to deal with pages that have been improperly dirtied") and it didn't do
    any error handling then. This function might very well fail in ENOMEM
    situation, yet it's not handled, this could lead to inconsistent state.
    So let's handle the failure by setting the mapping error bit.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bd39ed5096a41942cbb319a763231bc695b0b24e
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Jan 19 15:15:34 2018 -0800

    NFS: reject request for id_legacy key without auxdata
    
    commit 49686cbbb3ebafe42e63868222f269d8053ead00 upstream.
    
    nfs_idmap_legacy_upcall() is supposed to be called with 'aux' pointing
    to a 'struct idmap', via the call to request_key_with_auxdata() in
    nfs_idmap_request_key().
    
    However it can also be reached via the request_key() system call in
    which case 'aux' will be NULL, causing a NULL pointer dereference in
    nfs_idmap_prepare_pipe_upcall(), assuming that the key description is
    valid enough to get that far.
    
    Fix this by making nfs_idmap_legacy_upcall() negate the key if no
    auxdata is provided.
    
    As usual, this bug was found by syzkaller.  A simple reproducer using
    the command-line keyctl program is:
    
        keyctl request2 id_legacy uid:0 '' @s
    
    Fixes: 57e62324e469 ("NFS: Store the legacy idmapper result in the keyring")
    Reported-by: syzbot+5dfdbcf7b3eb5912abbb@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Trond Myklebust <trondmy@gmail.com>
    pbwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 13006b429b43e4620c72e0d152a808a2613f7d69
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Jan 17 12:08:03 2018 -0700

    usbip: list: don't list devices attached to vhci_hcd
    
    commit ef824501f50846589f02173d73ce3fe6021a9d2a upstream.
    
    usbip host lists devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Fix it to check and not list devices that are attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 93e35d3d1c3d64c7c403511879a1cb01282cdedc
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Jan 17 12:07:30 2018 -0700

    usbip: prevent bind loops on devices attached to vhci_hcd
    
    commit ef54cf0c600fb8f5737fb001a9e357edda1a1de8 upstream.
    
    usbip host binds to devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Unbind followed by bind works, however device is left in a bad state with
    accesses via the attached busid result in errors and system hangs during
    shutdown.
    
    Fix it to check and bail out if the device is already attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5a64b547f43a4fff5632246271901d9cf0f2b7fd
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 18 14:46:41 2018 +1100

    USB: serial: simple: add Motorola Tetra driver
    
    commit 46fe895e22ab3845515ec06b01eaf1282b342e29 upstream.
    
    Add new Motorola Tetra (simple) driver for Motorola Solutions TETRA PEI
    devices.
    
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=0cad ProdID=9011 Rev=24.16
    S:  Manufacturer=Motorola Solutions Inc.
    S:  Product=Motorola Solutions TETRA PEI interface
    C:  #Ifs= 2 Cfg#= 1 Atr=80 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    
    Note that these devices do not support the CDC SET_CONTROL_LINE_STATE
    request (for any interface).
    
    Reported-by: Max Schulze <max.schulze@posteo.de>
    Tested-by: Max Schulze <max.schulze@posteo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c29c81ce41a021e915634af78942964238a315c0
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 18 18:23:19 2014 +0200

    USB: serial: add Medtronic CareLink USB driver
    
    commit cff9c2339a6d5105d7f6b1f9a96dd1d239cc76ac upstream.
    
    Add simple driver for Medtronic CareLink USB devices.
    
    Reported-by: Benjamin West <bewest@gmail.com>
    Tested-by: Benjamin West <bewest@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c7235bb6a586c75f2109507fbd4af489a3d20760
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 18 18:14:53 2014 +0200

    USB: serial: add Novatel Wireless GPS driver
    
    commit c5cd24d7b179a415df263e5b18b72f6e3aaf81e0 upstream.
    
    Add simple driver for Novatel Wireless GPS receivers.
    
    Reported-by: Kirk Madsen <kirkm@Navsys.com>
    Tested-by: Kirk Madsen <kirkm@Navsys.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a83d4393fb07518492a8f5e74706f04c49ebd674
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 18 18:14:52 2014 +0200

    USB: serial: add support for multi-port simple drivers
    
    commit b9f040389e23fb95fde36cb0a3c2c516fb3e9d1c upstream.
    
    Add support for multi-port simple drivers.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1632e40aa4b67172ac82489ddba3904ca43cd50f
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 18 12:13:45 2018 +0100

    CDC-ACM: apply quirk for card reader
    
    commit df1cc78a52491f71d8170d513d0f6f114faa1bda upstream.
    
    This devices drops random bytes from messages if you talk to it
    too fast.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d681feaa3ee5baccf9496169eed45c18e3001479
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 22 13:23:32 2018 +0300

    staging: rts5208: Fix "seg_no" calculation in reset_ms_card()
    
    commit 7f7aeea7cf30368b9fdb86dcc9d2c8a3ebc65dfb upstream.
    
    I get some static checker warnings like this:
    
        drivers/staging/rts5208/ms.c:2607 ms_build_l2p_tbl()
        error: buffer underflow 'ms_card->segment' (-1)-16
    
    The problem is that we memset "ms_card" to zero at the start of the
    reset_ms_card() function.  That means that when we try to calculate
    "ms_card->total_block / 512 - 1" then it's just always -1.  The fix is
    to calculate "seg_no" before doing the memset().
    
    This is a static checker fix, and I am not able to test it.  My theory
    is that reset_ms_card() gets very little testing which is why this bug
    exists.
    
    Fixes: fa590c222fba ("staging: rts5208: add support for rts5208 and rts5288")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ec7ed07ffff1c2dc1b52ebba61d0855d86ed89c3
Author: OKAMOTO Yoshiaki <yokamoto@allied-telesis.co.jp>
Date:   Tue Jan 16 09:51:17 2018 +0000

    usb: option: Add support for FS040U modem
    
    commit 69341bd15018da0a662847e210f9b2380c71e623 upstream.
    
    FS040U modem is manufactured by omega, and sold by Fujisoft. This patch
    adds ID of the modem to use option1 driver. Interface 3 is used as
    qmi_wwan, so the interface is ignored.
    
    Signed-off-by: Yoshiaki Okamoto <yokamoto@allied-telesis.co.jp>
    Signed-off-by: Hiroyuki Yamamoto <hyamamo@allied-telesis.co.jp>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d7b661de312b11ebf7df8059eb2fcd3e14bcd8a5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 22 13:26:14 2018 +0300

    staging: lustre: libcfs: Prevent harmless read underflow
    
    commit 134aecbc25fd77645baaea5467b2a7ed8e9d1ea7 upstream.
    
    Because this is a post-op instead of a pre-op, then it means we check
    if knl_buffer[-1] is a space.  It doesn't really hurt anything, but
    it causes a static checker warning so let's fix it.
    
    Fixes: d7e09d0397e8 ("staging: add Lustre file system client support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0b2e4fd226b0395299d5f7a2d892a8482d591154
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jan 2 14:01:34 2018 -0500

    alpha: fix crash if pthread_create races with signal delivery
    
    commit 21ffceda1c8b3807615c40d440d7815e0c85d366 upstream.
    
    On alpha, a process will crash if it attempts to start a thread and a
    signal is delivered at the same time. The crash can be reproduced with
    this program: https://cygwin.com/ml/cygwin/2014-11/msg00473.html
    
    The reason for the crash is this:
    * we call the clone syscall
    * we go to the function copy_process
    * copy process calls copy_thread_tls, it is a wrapper around copy_thread
    * copy_thread sets the tls pointer: childti->pcb.unique = regs->r20
    * copy_thread sets regs->r20 to zero
    * we go back to copy_process
    * copy process checks "if (signal_pending(current))" and returns
      -ERESTARTNOINTR
    * the clone syscall is restarted, but this time, regs->r20 is zero, so
      the new thread is created with zero tls pointer
    * the new thread crashes in start_thread when attempting to access tls
    
    The comment in the code says that setting the register r20 is some
    compatibility with OSF/1. But OSF/1 doesn't use the CLONE_SETTLS flag, so
    we don't have to zero r20 if CLONE_SETTLS is set. This patch fixes the bug
    by zeroing regs->r20 only if CLONE_SETTLS is not set.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 483ff7c7dc52f49bcc4ca7ff22b8819093f159b2
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jan 2 13:59:54 2018 -0500

    alpha: fix reboot on Avanti platform
    
    commit 55fc633c41a08ce9244ff5f528f420b16b1e04d6 upstream.
    
    We need to define NEED_SRM_SAVE_RESTORE on the Avanti, otherwise we get
    machine check exception when attempting to reboot the machine.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 88a25f03d3d99c0eb6eedab5d1c142f4289d2059
Author: Ivan Vecera <ivecera@redhat.com>
Date:   Fri Jan 19 09:18:54 2018 +0100

    kernfs: fix regression in kernfs_fop_write caused by wrong type
    
    commit ba87977a49913129962af8ac35b0e13e0fa4382d upstream.
    
    Commit b7ce40cff0b9 ("kernfs: cache atomic_write_len in
    kernfs_open_file") changes type of local variable 'len' from ssize_t
    to size_t. This change caused that the *ppos value is updated also
    when the previous write callback failed.
    
    Mentioned snippet:
    ...
    len = ops->write(...); <- return value can be negative
    ...
    if (len > 0)           <- true here in this case
            *ppos += len;
    ...
    
    Fixes: b7ce40cff0b9 ("kernfs: cache atomic_write_len in kernfs_open_file")
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 521f0550e647e6d73da5cb55315b40a25cf4c75f
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Jan 16 21:38:24 2018 +0000

    MIPS: Fix clean of vmlinuz.{32,ecoff,bin,srec}
    
    commit 5f2483eb2423152445b39f2db59d372f523e664e upstream.
    
    Make doesn't expand shell style "vmlinuz.{32,ecoff,bin,srec}" to the 4
    separate files, so none of these files get cleaned up by make clean.
    List the files separately instead.
    
    Fixes: ec3352925b74 ("MIPS: Remove all generated vmlinuz* files on "make clean"")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/18491/
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b6a081f800201d67b5cdbfd87a2369e7ea012713
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Jan 17 23:52:03 2018 -0500

    drm/ttm: Don't add swapped BOs to swap-LRU list
    
    commit fd5002d6a3c602664b07668a24df4ef7a43bf078 upstream.
    
    A BO that's already swapped would be added back to the swap-LRU list
    for example if its validation failed under high memory pressure. This
    could later lead to swapping it out again and leaking previous swap
    storage.
    
    This commit adds a condition to prevent that from happening.
    
    v2: Check page_flags instead of swap_storage
    
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a66ba380d68d8cf922c1fdb8de63035ed005a718
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Jan 11 15:35:19 2016 +0100

    drm/ttm: fix adding foreign BOs to the swap LRU
    
    commit ed704a43e84cc536081423dcd3491acf2791aaeb upstream.
    
    It doesn't make any sense to try to swap out imported BOs.
    
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 08da3da4f89016c4a01a38e5c7289afaa290e5dc
Author: Jan Chochol <jan@chochol.info>
Date:   Fri Jan 5 08:39:12 2018 +0100

    nfs: Do not convert nfs_idmap_cache_timeout to jiffies
    
    commit cbebc6ef4fc830f4040d4140bf53484812d5d5d9 upstream.
    
    Since commit 57e62324e469 ("NFS: Store the legacy idmapper result in the
    keyring") nfs_idmap_cache_timeout changed units from jiffies to seconds.
    Unfortunately sysctl interface was not updated accordingly.
    
    As a effect updating /proc/sys/fs/nfs/idmap_cache_timeout with some
    value will incorrectly multiply this value by HZ.
    Also reading /proc/sys/fs/nfs/idmap_cache_timeout will show real value
    divided by HZ.
    
    Fixes: 57e62324e469 ("NFS: Store the legacy idmapper result in the keyring")
    Signed-off-by: Jan Chochol <jan@chochol.info>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9590cab17a633af44de5eb731adf789d261be73d
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 18 14:05:05 2018 +0000

    mtd: ubi: wl: Fix error return code in ubi_wl_init()
    
    commit 7233982ade15eeac05c6f351e8d347406e6bcd2f upstream.
    
    Fix to return error code -ENOMEM from the kmem_cache_alloc() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: f78e5623f45b ("ubi: fastmap: Erase outdated anchor PEBs during
    attach")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e0e42adfb3a5b5ba93d8185d70e0962ec67f75b4
Author: Clay McClure <clay@daemons.net>
Date:   Thu Sep 21 19:01:34 2017 -0700

    ubi: Fix race condition between ubi volume creation and udev
    
    commit a51a0c8d213594bc094cb8e54aad0cb6d7f7b9a6 upstream.
    
    Similar to commit 714fb87e8bc0 ("ubi: Fix race condition between ubi
    device creation and udev"), we should make the volume active before
    registering it.
    
    Signed-off-by: Clay McClure <clay@daemons.net>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit aa224ff7457ed6358bf3d82924230d84b913ba55
Author: mulhern <amulhern@redhat.com>
Date:   Mon Nov 27 10:02:39 2017 -0500

    dm thin: fix documentation relative to low water mark threshold
    
    commit 9b28a1102efc75d81298198166ead87d643a29ce upstream.
    
    Fixes:
    1. The use of "exceeds" when the opposite of exceeds, falls below,
    was meant.
    2. Properly speaking, a table can not exceed a threshold.
    
    It emphasizes the important point, which is that it is the userspace
    daemon's responsibility to check for low free space when a device
    is resumed, since it won't get a special event indicating low free
    space in that situation.
    
    Signed-off-by: mulhern <amulhern@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e361b4a503722ade1f7d4496373f33781420267f
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Jan 16 10:08:00 2018 -0500

    NFS: commit direct writes even if they fail partially
    
    commit 1b8d97b0a837beaf48a8449955b52c650a7114b4 upstream.
    
    If some of the WRITE calls making up an O_DIRECT write syscall fail,
    we neglect to commit, even if some of the WRITEs succeed.
    
    We also depend on the commit code to free the reference count on the
    nfs_page taken in the "if (request_commit)" case at the end of
    nfs_direct_write_completion().  The problem was originally noticed
    because ENOSPC's encountered partway through a write would result in a
    closed file being sillyrenamed when it should have been unlinked.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b1f0431664fb76535b676f7dd1641a59ffb28a8
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 11 13:10:16 2018 +0100

    usb: uas: unconditionally bring back host after reset
    
    commit cbeef22fd611c4f47c494b821b2b105b8af970bb upstream.
    
    Quoting Hans:
    
    If we return 1 from our post_reset handler, then our disconnect handler
    will be called immediately afterwards. Since pre_reset blocks all scsi
    requests our disconnect handler will then hang in the scsi_remove_host
    call.
    
    This is esp. bad because our disconnect handler hanging for ever also
    stops the USB subsys from enumerating any new USB devices, causes commands
    like lsusb to hang, etc.
    
    In practice this happens when unplugging some uas devices because the hub
    code may see the device as needing a warm-reset and calls usb_reset_device
    before seeing the disconnect. In this case uas_configure_endpoints fails
    with -ENODEV. We do not want to print an error for this, so this commit
    also silences the shost_printk for -ENODEV.
    
    ENDQUOTE
    
    However, if we do that we better drop any unconditional execution
    and report to the SCSI subsystem that we have undergone a reset
    but we are not operational now.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1209c898f090c46cafa1c559658269bdf60a862f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Sep 13 12:26:50 2014 +0200

    uas: Log error codes when logging errors
    
    commit ce39fe6fa115d9fea0112c907773a400b98d2463 upstream.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 000e630f8cf4c2def7f9b99e34ac70be81f4c614
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jan 14 16:09:00 2018 +0100

    USB: cdc-acm: Do not log urb submission errors on disconnect
    
    commit f0386c083c2ce85284dc0b419d7b89c8e567c09f upstream.
    
    When disconnected sometimes the cdc-acm driver logs errors like these:
    
    [20278.039417] cdc_acm 2-2:2.1: urb 9 failed submission with -19
    [20278.042924] cdc_acm 2-2:2.1: urb 10 failed submission with -19
    [20278.046449] cdc_acm 2-2:2.1: urb 11 failed submission with -19
    [20278.049920] cdc_acm 2-2:2.1: urb 12 failed submission with -19
    [20278.053442] cdc_acm 2-2:2.1: urb 13 failed submission with -19
    [20278.056915] cdc_acm 2-2:2.1: urb 14 failed submission with -19
    [20278.060418] cdc_acm 2-2:2.1: urb 15 failed submission with -19
    
    Silence these by not logging errors when the result is -ENODEV.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac1cd8d483c9574f3b5edfe952897df3f1af24b8
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Thu Dec 21 11:41:35 2017 +0100

    hrtimer: Ensure POSIX compliance (relative CLOCK_REALTIME hrtimers)
    
    commit 48d0c9becc7f3c66874c100c126459a9da0fdced upstream.
    
    The POSIX specification defines that relative CLOCK_REALTIME timers are not
    affected by clock modifications. Those timers have to use CLOCK_MONOTONIC
    to ensure POSIX compliance.
    
    The introduction of the additional HRTIMER_MODE_PINNED mode broke this
    requirement for pinned timers.
    
    There is no user space visible impact because user space timers are not
    using pinned mode, but for consistency reasons this needs to be fixed.
    
    Check whether the mode has the HRTIMER_MODE_REL bit set instead of
    comparing with HRTIMER_MODE_ABS.
    
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: keescook@chromium.org
    Fixes: 597d0275736d ("timers: Framework for identifying pinned timers")
    Link: http://lkml.kernel.org/r/20171221104205.7269-7-anna-maria@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3d00e694b04bcef4b0a243091856237040065644
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Fri Jan 12 07:58:40 2018 +0200

    IB/mlx4: Fix incorrectly releasing steerable UD QPs when have only ETH ports
    
    commit 852f6927594d0d3e8632c889b2ab38cbc46476ad upstream.
    
    Allocating steerable UD QPs depends on having at least one IB port,
    while releasing those QPs does not.
    
    As a result, when there are only ETH ports, the IB (RoCE) driver
    requests releasing a qp range whose base qp is zero, with
    qp count zero.
    
    When SR-IOV is enabled, and the VF driver is running on a VM over
    a hypervisor which treats such qp release calls as errors
    (rather than NOPs), we see lines in the VM message log like:
    
     mlx4_core 0002:00:02.0: Failed to release qp range base:0 cnt:0
    
    Fix this by adding a check for a zero count in mlx4_release_qp_range()
    (which thus treats releasing 0 qps as a nop), and eliminating the
    check for device managed flow steering when releasing steerable UD QPs.
    (Freeing ib_uc_qpns_bitmap unconditionally is also OK, since it
    remains NULL when steerable UD QPs are not allocated).
    
    Fixes: 4196670be786 ("IB/mlx4: Don't allocate range of steerable UD QPs for Ethernet-only device")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 744ac1c61844092b86c241fea6c0948648dba00b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 15 11:08:38 2018 +0300

    ASoC: au1x: Fix timeout tests in au1xac97c_ac97_read()
    
    commit 123af9043e93cb6f235207d260d50f832cdb5439 upstream.
    
    The loop timeout doesn't work because it's a post op and ends with "tmo"
    set to -1.  I changed it from a post-op to a pre-op and I changed the
    initial the starting value from 5 to 6 so we still iterate 5 times.  I
    left the other as it was because it's a large number.
    
    Fixes: b3c70c9ea62a ("ASoC: Alchemy AC97C/I2SC audio support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 92e516eb79788458bc1e2feebcc9c7998112e443
Author: Nicolas Pitre <nico@fluxnic.net>
Date:   Mon Jan 15 17:04:22 2018 +0100

    console/dummy: leave .con_font_get set to NULL
    
    commit 724ba8b30b044aa0d94b1cd374fc15806cdd6f18 upstream.
    
    When this method is set, the caller expects struct console_font fields
    to be properly initialized when it returns. Leave it unset otherwise
    nonsensical (leaked kernel stack) values are returned to user space.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 36a5a1613f947db1924e0305f7e1c7325753d761
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Dec 15 16:12:32 2017 -0500

    nfs/pnfs: fix nfs_direct_req ref leak when i/o falls back to the mds
    
    commit ba4a76f703ab7eb72941fdaac848502073d6e9ee upstream.
    
    Currently when falling back to doing I/O through the MDS (via
    pnfs_{read|write}_through_mds), the client frees the nfs_pgio_header
    without releasing the reference taken on the dreq
    via pnfs_generic_pg_{read|write}pages -> nfs_pgheader_init ->
    nfs_direct_pgio_init.  It then takes another reference on the dreq via
    nfs_generic_pg_pgios -> nfs_pgheader_init -> nfs_direct_pgio_init and
    as a result the requester will become stuck in inode_dio_wait.  Once
    that happens, other processes accessing the inode will become stuck as
    well.
    
    Ensure that pnfs_read_through_mds() and pnfs_write_through_mds() clean
    up correctly by calling hdr->completion_ops->completion() instead of
    calling hdr->release() directly.
    
    This can be reproduced (sometimes) by performing "storage failover
    takeover" commands on NetApp filer while doing direct I/O from a client.
    
    This can also be reproduced using SystemTap to simulate a failure while
    doing direct I/O from a client (from Dave Wysochanski
    <dwysocha@redhat.com>):
    
    stap -v -g -e 'probe module("nfs_layout_nfsv41_files").function("nfs4_fl_prepare_ds").return { $return=NULL; exit(); }'
    
    Suggested-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Fixes: 1ca018d28d ("pNFS: Fix a memory leak when attempted pnfs fails")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c266669ac248ab3ec98fcadcfb53a4ea06633e53
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Sep 8 21:28:11 2017 -0400

    NFS: Fix 2 use after free issues in the I/O code
    
    commit 196639ebbe63a037fe9a80669140bd292d8bcd80 upstream.
    
    The writeback code wants to send a commit after processing the pages,
    which is why we want to delay releasing the struct path until after
    that's done.
    
    Also, the layout code expects that we do not free the inode before
    we've put the layout segments in pnfs_writehdr_free() and
    pnfs_readhdr_free()
    
    Fixes: 919e3bd9a875 ("NFS: Ensure we commit after writeback is complete")
    Fixes: 4714fb51fd03 ("nfs: remove pgio_header refcount, related cleanup")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 76e06dfa541e887359f3fc32936c3e6a956a1261
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Dec 18 14:39:13 2017 -0500

    NFS: Add a cond_resched() to nfs_commit_release_pages()
    
    commit 7f1bda447c9bd48b415acedba6b830f61591601f upstream.
    
    The commit list can get very large, and so we need a cond_resched()
    in nfs_commit_release_pages() in order to ensure we don't hog the CPU
    for excessive periods of time.
    
    Reported-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 085f09ec539489107bae7ada0bf2d3ea75734a30
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Aug 1 05:02:38 2017 -0500

    mn10300/misalignment: Use SIGSEGV SEGV_MAPERR to report a failed user copy
    
    commit 6ac1dc736b323011a55ecd1fc5897c24c4f77cbd upstream.
    
    Setting si_code to 0 is the same a setting si_code to SI_USER which is definitely
    not correct.  With si_code set to SI_USER si_pid and si_uid will be copied to
    userspace instead of si_addr.  Which is very wrong.
    
    So fix this by using a sensible si_code (SEGV_MAPERR) for this failure.
    
    Fixes: b920de1b77b7 ("mn10300: add the MN10300/AM33 architecture to the kernel")
    Cc: David Howells <dhowells@redhat.com>
    Cc: Masakazu Urade <urade.masakazu@jp.panasonic.com>
    Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0d519b4a46b2b3b37b0282c63a19b4fe31b1401f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Aug 1 04:16:47 2017 -0500

    signal/openrisc: Fix do_unaligned_access to send the proper signal
    
    commit 500d58300571b6602341b041f97c082a461ef994 upstream.
    
    While reviewing the signal sending on openrisc the do_unaligned_access
    function stood out because it is obviously wrong.  A comment about an
    si_code set above when actually si_code is never set.  Leading to a
    random si_code being sent to userspace in the event of an unaligned
    access.
    
    Looking further SIGBUS BUS_ADRALN is the proper pair of signal and
    si_code to send for an unaligned access. That is what other
    architectures do and what is required by posix.
    
    Given that do_unaligned_access is broken in a way that no one can be
    relying on it on openrisc fix the code to just do the right thing.
    
    Fixes: 769a8a96229e ("OpenRISC: Traps")
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>
    Cc: Stafford Horne <shorne@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: openrisc@lists.librecores.org
    Acked-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2f5c85c4fa7bfc5862d1438a2d7535a304c7ba4e
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:27 2018 -0800

    crypto: hash - prevent using keyed hashes without setting key
    
    commit 9fa68f620041be04720d0cbfb1bd3ddfc6310b24 upstream.
    
    Currently, almost none of the keyed hash algorithms check whether a key
    has been set before proceeding.  Some algorithms are okay with this and
    will effectively just use a key of all 0's or some other bogus default.
    However, others will severely break, as demonstrated using
    "hmac(sha3-512-generic)", the unkeyed use of which causes a kernel crash
    via a (potentially exploitable) stack buffer overflow.
    
    A while ago, this problem was solved for AF_ALG by pairing each hash
    transform with a 'has_key' bool.  However, there are still other places
    in the kernel where userspace can specify an arbitrary hash algorithm by
    name, and the kernel uses it as unkeyed hash without checking whether it
    is really unkeyed.  Examples of this include:
    
        - KEYCTL_DH_COMPUTE, via the KDF extension
        - dm-verity
        - dm-crypt, via the ESSIV support
        - dm-integrity, via the "internal hash" mode with no key given
        - drbd (Distributed Replicated Block Device)
    
    This bug is especially bad for KEYCTL_DH_COMPUTE as that requires no
    privileges to call.
    
    Fix the bug for all users by adding a flag CRYPTO_TFM_NEED_KEY to the
    ->crt_flags of each hash transform that indicates whether the transform
    still needs to be keyed or not.  Then, make the hash init, import, and
    digest functions return -ENOKEY if the key is still needed.
    
    The new flag also replaces the 'has_key' bool which algif_hash was
    previously using, thereby simplifying the algif_hash implementation.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [bwh: Backported to 3.16:
     - In hash_accept_parent_nokey(), update initialisation of ds to use tfm
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac02a194f47b9fd5c4624ca421190fa3e59b8ad9
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:26 2018 -0800

    crypto: hash - annotate algorithms taking optional key
    
    commit a208fa8f33031b9e0aba44c7d1b7e68eb0cbd29e upstream.
    
    We need to consistently enforce that keyed hashes cannot be used without
    setting the key.  To do this we need a reliable way to determine whether
    a given hash algorithm is keyed or not.  AF_ALG currently does this by
    checking for the presence of a ->setkey() method.  However, this is
    actually slightly broken because the CRC-32 algorithms implement
    ->setkey() but can also be used without a key.  (The CRC-32 "key" is not
    actually a cryptographic key but rather represents the initial state.
    If not overridden, then a default initial state is used.)
    
    Prepare to fix this by introducing a flag CRYPTO_ALG_OPTIONAL_KEY which
    indicates that the algorithm has a ->setkey() method, but it is not
    required to be called.  Then set it on all the CRC-32 algorithms.
    
    The same also applies to the Adler-32 implementation in Lustre.
    
    Also, the cryptd and mcryptd templates have to pass through the flag
    from their underlying algorithm.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [bwh: Backported to 3.16:
     - Drop changes to nonexistent drivers
     - There's no CRYPTO_ALG_INTERNAL flag
     - Adjust filenames]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6e118db666378fdc9e78a37fd6ed97b19f4e9db8
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:23 2018 -0800

    crypto: cryptd - pass through absence of ->setkey()
    
    commit 841a3ff329713f796a63356fef6e2f72e4a3f6a3 upstream.
    
    When the cryptd template is used to wrap an unkeyed hash algorithm,
    don't install a ->setkey() method to the cryptd instance.  This change
    is necessary for cryptd to keep working with unkeyed hash algorithms
    once we start enforcing that ->setkey() is called when present.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6b3aa7a9bd2e4693f8b6b5edf9d0c724376cd979
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:22 2018 -0800

    crypto: hash - introduce crypto_hash_alg_has_setkey()
    
    commit cd6ed77ad5d223dc6299fb58f62e0f5267f7e2ba upstream.
    
    Templates that use an shash spawn can use crypto_shash_alg_has_setkey()
    to determine whether the underlying algorithm requires a key or not.
    But there was no corresponding function for ahash spawns.  Add it.
    
    Note that the new function actually has to support both shash and ahash
    algorithms, since the ahash API can be used with either.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cd3e607bb8cee3c34258a728fc6b0b5d7c7be608
Author: Stephan Mueller <smueller@chronox.de>
Date:   Tue Jan 2 08:55:25 2018 +0100

    crypto: af_alg - whitelist mask and type
    
    commit bb30b8848c85e18ca7e371d0a869e94b3e383bdf upstream.
    
    The user space interface allows specifying the type and mask field used
    to allocate the cipher. Only a subset of the possible flags are intended
    for user space. Therefore, white-list the allowed flags.
    
    In case the user space caller uses at least one non-allowed flag, EINVAL
    is returned.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [bwh: Backported to 3.16: We don't have a CRYPTO_ALG_INTENRAL flag and
     didn't blacklist it here]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fae04c265403021f0cfed1c2e2c1aa99efaeff9a
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Jan 12 10:13:36 2018 +0100

    mtd: nand: Fix nand_do_read_oob() return value
    
    commit 87e89ce8d0d14f573c068c61bec2117751fb5103 upstream.
    
    Starting from commit 041e4575f034 ("mtd: nand: handle ECC errors in
    OOB"), nand_do_read_oob() (from the NAND core) did return 0 or a
    negative error, and the MTD layer expected it.
    
    However, the trend for the NAND layer is now to return an error or a
    positive number of bitflips. Deciding which status to return to the user
    belongs to the MTD layer.
    
    Commit e47f68587b82 ("mtd: check for max_bitflips in mtd_read_oob()")
    brought this logic to the mtd_read_oob() function while the return value
    coming from nand_do_read_oob() (called by the ->_read_oob() hook) was
    left unchanged.
    
    Fixes: e47f68587b82 ("mtd: check for max_bitflips in mtd_read_oob()")
    Signed-off-by: Miquel Raynal <miquel.raynal@free-electrons.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ba250b5ebb299ceea52a1de0026d45bfd0c9e433
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:53 2018 +0530

    arm: spear13xx: Fix spics gpio controller's warning
    
    commit f8975cb1b8a36d0839b6365235778dd9df1d04ca upstream.
    
    This fixes the following warning by also sending the flags argument for
    gpio controllers:
    
    Property 'cs-gpios', cell 6 is not a phandle reference in
    /ahb/apb/spi@e0100000
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2e56ab2ee8b8fe426b5878d6d7c7383bec0dd554
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:52 2018 +0530

    arm: spear13xx: Fix dmas cells
    
    commit cdd10409914184c7eee5ae3e11beb890c9c16c61 upstream.
    
    The "dmas" cells for the designware DMA controller need to have only 3
    properties apart from the phandle: request line, src master and
    destination master. But the commit 6e8887f60f60 updated it incorrectly
    while moving from platform code to DT. Fix it.
    
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bb68ffdee8a610251aa67c4cf658824aebf5eabf
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:51 2018 +0530

    arm: spear600: Add missing interrupt-parent of rtc
    
    commit 6ffb5b4f248fe53e0361b8cbc2a523b432566442 upstream.
    
    The interrupt-parent of rtc was missing, add it.
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 48b6f1b4e0e82e8fcb73a129045bf2e5853d8336
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Thu Jan 11 13:43:33 2018 -0500

    ext4: correct documentation for grpid mount option
    
    commit 9f0372488cc9243018a812e8cfbf27de650b187b upstream.
    
    The grpid option is currently described as being the same as nogrpid.
    
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 266b72644deddddaef689f0256659978888cc6f6
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Jan 11 15:55:50 2018 +0300

    ahci: Add Intel Cannon Lake PCH-H PCI ID
    
    commit f919dde0772a894c693a1eeabc77df69d6a9b937 upstream.
    
    Add Intel Cannon Lake PCH-H PCI ID to the list of supported controllers.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bf68dcc82310c794d75948d76a0c08b9139e9ca1
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 6 16:41:09 2017 +0100

    ahci: Add PCI ids for Intel Bay Trail, Cherry Trail and Apollo Lake AHCI
    
    commit 998008b779e424bd7513c434d0ab9c1268459009 upstream.
    
    Add PCI ids for Intel Bay Trail, Cherry Trail and Apollo Lake AHCI
    SATA controllers. This commit is a preparation patch for allowing a
    different default sata link powermanagement policy for mobile chipsets.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f4ce456ad2a806fab08ca4c7056486968cb42630
Author: Scott Lawson <scott.lawson@intel.com>
Date:   Fri Feb 26 10:09:52 2016 -0800

    AHCI: Remove obsolete Intel Lewisburg SATA RAID device IDs
    
    commit 8ba559fd09bcf4e87faad3efa465dacf04c076c9 upstream.
    
    These PCI device IDs have been removed from the Intel Lewisburg design
    specification. They are no longer needed.
    
    Signed-off-by: Scott Lawson <scott.lawson@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 34625db5298c5b62dcea71213f1c8720abd640fc
Author: Alexandra Yates <alexandra.yates@linux.intel.com>
Date:   Wed Feb 17 19:36:20 2016 -0800

    Adding Intel Lewisburg device IDs for SATA
    
    commit f5bdd66c705484b4bc77eb914be15c1b7881fae7 upstream.
    
    This patch complements the list of device IDs previously
    added for lewisburg sata.
    
    Signed-off-by: Alexandra Yates <alexandra.yates@linux.intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8110e641aa6a2d7371e184e7e6479446be1193ca
Author: Alexandra Yates <alexandra.yates@linux.intel.com>
Date:   Mon Nov 16 11:22:16 2015 -0500

    ahci: Order SATA device IDs for codename Lewisburg
    
    commit 4d92f0099a06ef0e36c7673f7c090f1a448b2d1b upstream.
    
    This change was to preserve the ascending order of device IDs.
    There was an exception with the first two Lewisburg device IDs to
    keep all device IDs of the same kind grouped by code name.
    
    Signed-off-by: Alexandra Yates <alexandra.yates@linux.intel.com>
    signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f086685bf06b616ad8579bd545e664f092165821
Author: Charles_Rose@Dell.com <Charles_Rose@Dell.com>
Date:   Fri Nov 6 14:18:56 2015 -0600

    ahci: Add Device ID for Intel Sunrise Point PCH
    
    commit c5967b79ecabe2baca40658d9073e28b30d7f6cf upstream.
    
    This patch adds missing AHCI RAID SATA Device IDs for the Intel Sunrise
    Point PCH.
    
    Signed-off-by: Nanda Kishore Chinna <nanda_kishore_chinna@dell.com>
    Signed-off-by: Charles Rose <charles_rose@dell.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac256126571fd9b176d9cd0357bbf50b1cefcadb
Author: Alexandra Yates <alexandra.yates@linux.intel.com>
Date:   Tue Nov 3 14:14:18 2015 -0800

    ahci: add new Intel device IDs
    
    commit 56e74338a535cbcc2f2da08b1ea1a92920194364 upstream.
    
    Adding Intel codename Lewisburg platform device IDs for SATA.
    
    Signed-off-by: Alexandra Yates <alexandra.yates@linux.intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 030e0b7e4ee2faacbaf59358eb010f4b7fac4240
Author: James Ralston <james.d.ralston@intel.com>
Date:   Mon Jan 12 16:13:52 2015 -0800

    ahci: Remove Device ID for Intel Sunrise Point PCH
    
    commit 46319e13581a6c442b0a0e5a3bd5d9af4496f252 upstream.
    
    This patch removes a duplicate AHCI-mode SATA Device ID for the Intel Sunrise Point PCH.
    
    Signed-off-by: James Ralston <james.d.ralston@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 246c2fed7a9696c45645021bd4f43ba5d7edf3b0
Author: Jiri Bohac <jbohac@suse.cz>
Date:   Sat Jan 6 02:00:13 2018 +0100

    x86/gart: Exclude GART aperture from vmcore
    
    commit 2a3e83c6f96c513f43ce5a8c9034608ea584a255 upstream.
    
    On machines where the GART aperture is mapped over physical RAM
    /proc/vmcore contains the remapped range and reading it may cause hangs or
    reboots.
    
    In the past, the GART region was added into the resource map, implemented
    by commit 56dd669a138c ("[PATCH] Insert GART region into resource map")
    
    However, inserting the iomem_resource from the early GART code caused
    resource conflicts with some AGP drivers (bko#72201), which got avoided by
    reverting the patch in commit 707d4eefbdb3 ("Revert [PATCH] Insert GART
    region into resource map"). This revert introduced the /proc/vmcore bug.
    
    The vmcore ELF header is either prepared by the kernel (when using the
    kexec_file_load syscall) or by the kexec userspace (when using the kexec_load
    syscall). Since we no longer have the GART iomem resource, the userspace
    kexec has no way of knowing which region to exclude from the ELF header.
    
    Changes from v1 of this patch:
    Instead of excluding the aperture from the ELF header, this patch
    makes /proc/vmcore return zeroes in the second kernel when attempting to
    read the aperture region. This is done by reusing the
    gart_oldmem_pfn_is_ram infrastructure originally intended to exclude XEN
    balooned memory. This works for both, the kexec_file_load and kexec_load
    syscalls.
    
    [Note that the GART region is the same in the first and second kernels:
    regardless whether the first kernel fixed up the northbridge/bios setting
    and mapped the aperture over physical memory, the second kernel finds the
    northbridge properly configured by the first kernel and the aperture
    never overlaps with e820 memory because the second kernel has a fake e820
    map created from the crashkernel memory regions. Thus, the second kernel
    keeps the aperture address/size as configured by the first kernel.]
    
    register_oldmem_pfn_is_ram can only register one callback and returns an error
    if the callback has been registered already. Since XEN used to be the only user
    of this function, it never checks the return value. Now that we have more than
    one user, I added a WARN_ON just in case agp, XEN, or any other future user of
    register_oldmem_pfn_is_ram were to step on each other's toes.
    
    Fixes: 707d4eefbdb3 ("Revert [PATCH] Insert GART region into resource map")
    Signed-off-by: Jiri Bohac <jbohac@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Toshi Kani <toshi.kani@hpe.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: yinghai@kernel.org
    Cc: joro@8bytes.org
    Cc: kexec@lists.infradead.org
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Vivek Goyal <vgoyal@redhat.com>
    Link: https://lkml.kernel.org/r/20180106010013.73suskgxm7lox7g6@dwarf.suse.cz
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b8c9b20e25f1612e216167c823c3a48fd486837c
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Nov 21 12:09:38 2017 -0500

    drm/radeon: Add dpm quirk for Jet PRO (v2)
    
    commit 239b5f64e12b1f09f506c164dff0374924782979 upstream.
    
    Fixes stability issues.
    
    v2: clamp sclk to 600 Mhz
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=103370
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 56e44b3fec6e9a0ee469edc348c1c86c2be908f5
Author: Zhouyi Zhou <zhouzhouyi@gmail.com>
Date:   Wed Jan 10 00:34:19 2018 -0500

    ext4: save error to disk in __ext4_grp_locked_error()
    
    commit 06f29cc81f0350261f59643a505010531130eea0 upstream.
    
    In the function __ext4_grp_locked_error(), __save_error_info()
    is called to save error info in super block block, but does not sync
    that information to disk to info the subsequence fsck after reboot.
    
    This patch writes the error information to disk.  After this patch,
    I think there is no obvious EXT4 error handle branches which leads to
    "Remounting filesystem read-only" will leave the disk partition miss
    the subsequence fsck.
    
    Signed-off-by: Zhouyi Zhou <zhouzhouyi@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3622f2b46189564a9b9a2cb75338746c283b74ce
Author: Hemant Kumar <hemantk@codeaurora.org>
Date:   Tue Jan 9 12:30:53 2018 +0530

    usb: f_fs: Prevent gadget unbind if it is already unbound
    
    commit ce5bf9a50daf2d9078b505aca1cea22e88ecb94a upstream.
    
    Upon usb composition switch there is possibility of ep0 file
    release happening after gadget driver bind. In case of composition
    switch from adb to a non-adb composition gadget will never gets
    bound again resulting into failure of usb device enumeration. Fix
    this issue by checking FFS_FL_BOUND flag and avoid extra
    gadget driver unbind if it is already done as part of composition
    switch.
    
    This fixes adb reconnection error reported on Android running
    v4.4 and above kernel versions. Verified on Hikey running vanilla
    v4.15-rc7 + few out of tree Mali patches.
    
    Reviewed-at: https://android-review.googlesource.com/#/c/582632/
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: Michal Nazarewicz <mina86@mina86.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Dmitry Shmidt <dimitrysh@google.com>
    Cc: Badhri <badhri@google.com>
    Cc: Android Kernel Team <kernel-team@android.com>
    Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
    [AmitP: Cherry-picked it from android-4.14 and updated the commit log]
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 57422570fefd34e3f77afe8ac0aeb6e8f658af56
Author: Baolin Wang <baolin.wang@linaro.org>
Date:   Thu Dec 8 19:55:22 2016 +0800

    usb: gadget: f_fs: Fix possibe deadlock
    
    commit b3ce3ce02d146841af012d08506b4071db8ffde3 upstream.
    
    When system try to close /dev/usb-ffs/adb/ep0 on one core, at the same
    time another core try to attach new UDC, which will cause deadlock as
    below scenario. Thus we should release ffs lock before issuing
    unregister_gadget_item().
    
    [   52.642225] c1 ======================================================
    [   52.642228] c1 [ INFO: possible circular locking dependency detected ]
    [   52.642236] c1 4.4.6+ #1 Tainted: G        W  O
    [   52.642241] c1 -------------------------------------------------------
    [   52.642245] c1 usb ffs open/2808 is trying to acquire lock:
    [   52.642270] c0  (udc_lock){+.+.+.}, at: [<ffffffc00065aeec>]
                    usb_gadget_unregister_driver+0x3c/0xc8
    [   52.642272] c1  but task is already holding lock:
    [   52.642283] c0  (ffs_lock){+.+.+.}, at: [<ffffffc00066b244>]
                    ffs_data_clear+0x30/0x140
    [   52.642285] c1 which lock already depends on the new lock.
    [   52.642287] c1
                   the existing dependency chain (in reverse order) is:
    [   52.642295] c0
                   -> #1 (ffs_lock){+.+.+.}:
    [   52.642307] c0        [<ffffffc00012340c>] __lock_acquire+0x20f0/0x2238
    [   52.642314] c0        [<ffffffc000123b54>] lock_acquire+0xe4/0x298
    [   52.642322] c0        [<ffffffc000aaf6e8>] mutex_lock_nested+0x7c/0x3cc
    [   52.642328] c0        [<ffffffc00066f7bc>] ffs_func_bind+0x504/0x6e8
    [   52.642334] c0        [<ffffffc000654004>] usb_add_function+0x84/0x184
    [   52.642340] c0        [<ffffffc000658ca4>] configfs_composite_bind+0x264/0x39c
    [   52.642346] c0        [<ffffffc00065b348>] udc_bind_to_driver+0x58/0x11c
    [   52.642352] c0        [<ffffffc00065b49c>] usb_udc_attach_driver+0x90/0xc8
    [   52.642358] c0        [<ffffffc0006598e0>] gadget_dev_desc_UDC_store+0xd4/0x128
    [   52.642369] c0        [<ffffffc0002c14e8>] configfs_write_file+0xd0/0x13c
    [   52.642376] c0        [<ffffffc00023c054>] vfs_write+0xb8/0x214
    [   52.642381] c0        [<ffffffc00023cad4>] SyS_write+0x54/0xb0
    [   52.642388] c0        [<ffffffc000085ff0>] el0_svc_naked+0x24/0x28
    [   52.642395] c0
                  -> #0 (udc_lock){+.+.+.}:
    [   52.642401] c0        [<ffffffc00011e3d0>] print_circular_bug+0x84/0x2e4
    [   52.642407] c0        [<ffffffc000123454>] __lock_acquire+0x2138/0x2238
    [   52.642412] c0        [<ffffffc000123b54>] lock_acquire+0xe4/0x298
    [   52.642420] c0        [<ffffffc000aaf6e8>] mutex_lock_nested+0x7c/0x3cc
    [   52.642427] c0        [<ffffffc00065aeec>] usb_gadget_unregister_driver+0x3c/0xc8
    [   52.642432] c0        [<ffffffc00065995c>] unregister_gadget_item+0x28/0x44
    [   52.642439] c0        [<ffffffc00066b34c>] ffs_data_clear+0x138/0x140
    [   52.642444] c0        [<ffffffc00066b374>] ffs_data_reset+0x20/0x6c
    [   52.642450] c0        [<ffffffc00066efd0>] ffs_data_closed+0xac/0x12c
    [   52.642454] c0        [<ffffffc00066f070>] ffs_ep0_release+0x20/0x2c
    [   52.642460] c0        [<ffffffc00023dbe4>] __fput+0xb0/0x1f4
    [   52.642466] c0        [<ffffffc00023dd9c>] ____fput+0x20/0x2c
    [   52.642473] c0        [<ffffffc0000ee944>] task_work_run+0xb4/0xe8
    [   52.642482] c0        [<ffffffc0000cd45c>] do_exit+0x360/0xb9c
    [   52.642487] c0        [<ffffffc0000cf228>] do_group_exit+0x4c/0xb0
    [   52.642494] c0        [<ffffffc0000dd3c8>] get_signal+0x380/0x89c
    [   52.642501] c0        [<ffffffc00008a8f0>] do_signal+0x154/0x518
    [   52.642507] c0        [<ffffffc00008af00>] do_notify_resume+0x70/0x78
    [   52.642512] c0        [<ffffffc000085ee8>] work_pending+0x1c/0x20
    [   52.642514] c1
                  other info that might help us debug this:
    [   52.642517] c1  Possible unsafe locking scenario:
    [   52.642518] c1        CPU0                    CPU1
    [   52.642520] c1        ----                    ----
    [   52.642525] c0   lock(ffs_lock);
    [   52.642529] c0                                lock(udc_lock);
    [   52.642533] c0                                lock(ffs_lock);
    [   52.642537] c0   lock(udc_lock);
    [   52.642539] c1
                          *** DEADLOCK ***
    [   52.642543] c1 1 lock held by usb ffs open/2808:
    [   52.642555] c0  #0:  (ffs_lock){+.+.+.}, at: [<ffffffc00066b244>]
                    ffs_data_clear+0x30/0x140
    [   52.642557] c1 stack backtrace:
    [   52.642563] c1 CPU: 1 PID: 2808 Comm: usb ffs open Tainted: G
    [   52.642565] c1 Hardware name: Spreadtrum SP9860g Board (DT)
    [   52.642568] c1 Call trace:
    [   52.642573] c1 [<ffffffc00008b430>] dump_backtrace+0x0/0x170
    [   52.642577] c1 [<ffffffc00008b5c0>] show_stack+0x20/0x28
    [   52.642583] c1 [<ffffffc000422694>] dump_stack+0xa8/0xe0
    [   52.642587] c1 [<ffffffc00011e548>] print_circular_bug+0x1fc/0x2e4
    [   52.642591] c1 [<ffffffc000123454>] __lock_acquire+0x2138/0x2238
    [   52.642595] c1 [<ffffffc000123b54>] lock_acquire+0xe4/0x298
    [   52.642599] c1 [<ffffffc000aaf6e8>] mutex_lock_nested+0x7c/0x3cc
    [   52.642604] c1 [<ffffffc00065aeec>] usb_gadget_unregister_driver+0x3c/0xc8
    [   52.642608] c1 [<ffffffc00065995c>] unregister_gadget_item+0x28/0x44
    [   52.642613] c1 [<ffffffc00066b34c>] ffs_data_clear+0x138/0x140
    [   52.642618] c1 [<ffffffc00066b374>] ffs_data_reset+0x20/0x6c
    [   52.642621] c1 [<ffffffc00066efd0>] ffs_data_closed+0xac/0x12c
    [   52.642625] c1 [<ffffffc00066f070>] ffs_ep0_release+0x20/0x2c
    [   52.642629] c1 [<ffffffc00023dbe4>] __fput+0xb0/0x1f4
    [   52.642633] c1 [<ffffffc00023dd9c>] ____fput+0x20/0x2c
    [   52.642636] c1 [<ffffffc0000ee944>] task_work_run+0xb4/0xe8
    [   52.642640] c1 [<ffffffc0000cd45c>] do_exit+0x360/0xb9c
    [   52.642644] c1 [<ffffffc0000cf228>] do_group_exit+0x4c/0xb0
    [   52.642647] c1 [<ffffffc0000dd3c8>] get_signal+0x380/0x89c
    [   52.642651] c1 [<ffffffc00008a8f0>] do_signal+0x154/0x518
    [   52.642656] c1 [<ffffffc00008af00>] do_notify_resume+0x70/0x78
    [   52.642659] c1 [<ffffffc000085ee8>] work_pending+0x1c/0x20
    
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b385d73180f3d6b3e73f1408b5f018e9016a879
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jan 5 15:31:06 2018 +0000

    scsi: aacraid: remove redundant setting of variable c
    
    commit 91814744646351a470f256fbcb853fb5a7229a9f upstream.
    
    A previous commit no longer stores the contents of c, so we now have a
    situation where c is being updated but the value is never read. Clean up
    the code by removing the now redundant setting of variable c.
    
    Cleans up clang warning:
    drivers/scsi/aacraid/aachba.c:943:3: warning: Value stored to 'c' is
    never read
    
    Fixes: f4e8708d3104 ("scsi: aacraid: Fix udev inquiry race condition")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f0b1708e87b16f4a13a418a9db1e818a6251850c
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:32 2018 +0800

    scsi: libsas: fix error when getting phy events
    
    commit 2b23d9509fd7174b362482cf5f3b5f9a2265bc33 upstream.
    
    The intend purpose here was to goto out if smp_execute_task() returned
    error. Obviously something got screwed up. We will never get these link
    error statistics below:
    
    ~:/sys/class/sas_phy/phy-1:0:12 # cat invalid_dword_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat running_disparity_error_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat loss_of_dword_sync_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat phy_reset_problem_count
    0
    
    Obviously we should goto error handler if smp_execute_task() returns
    non-zero.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1faebdeb892b169941185857d6a5578ace8fb84d
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Dec 26 17:33:18 2017 +0000

    wl1251: check return from call to wl1251_acx_arp_ip_filter
    
    commit ac1181c60822292176ab96912208ec9f9819faf8 upstream.
    
    Currently the less than zero error check on ret is incorrect
    as it is checking a far earlier ret assignment rather than the
    return from the call to wl1251_acx_arp_ip_filter. Fix this by
    adding in the missing assginment.
    
    Detected by CoverityScan, CID#1164835 ("Logically dead code")
    
    Fixes: 204cc5c44fb6 ("wl1251: implement hardware ARP filtering")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fc58a98f1c98b22d31c53913cca38d5c43807cb4
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Jan 7 15:05:49 2018 +0100

    spi: imx: do not access registers while clocks disabled
    
    commit d593574aff0ab846136190b1729c151c736727ec upstream.
    
    Since clocks are disabled except during message transfer clocks
    are also disabled when spi_imx_remove gets called. Accessing
    registers leads to a freeeze at least on a i.MX 6ULL. Enable
    clocks before disabling accessing the MXC_CSPICTRL register.
    
    Fixes: 9e556dcc55774 ("spi: spi-imx: only enable the clocks when we start to transfer a message")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6ec06e60446b1225cb8e5971e3d31c5372448963
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Jul 24 17:30:30 2017 -0500

    signal/sh: Ensure si_signo is initialized in do_divide_error
    
    commit 0e88bb002a9b2ee8cc3cc9478ce2dc126f849696 upstream.
    
    Set si_signo.
    
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: linux-sh@vger.kernel.org
    Fixes: 0983b31849bb ("sh: Wire up division and address error exceptions on SH-2A.")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d7437f5dc02dded1fb93894167afcbcc155ecfa
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Fri Jan 5 14:27:58 2018 -0800

    xtensa: fix futex_atomic_cmpxchg_inatomic
    
    commit ca47480921587ae30417dd234a9f79af188e3666 upstream.
    
    Return 0 if the operation was successful, not the userspace memory
    value. Check that userspace value equals passed oldval, not itself.
    Don't update *uval if the value wasn't read from userspace memory.
    
    This fixes process hang due to infinite loop in futex_lock_pi.
    It also fixes a bunch of glibc tests nptl/tst-mutexpi*.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c360bf2e0cc1f9abed4c5272c8aba8f6496f692d
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Jan 2 11:39:47 2018 -0800

    pktcdvd: Fix pkt_setup_dev() error path
    
    commit 5a0ec388ef0f6e33841aeb810d7fa23f049ec4cd upstream.
    
    Commit 523e1d399ce0 ("block: make gendisk hold a reference to its queue")
    modified add_disk() and disk_release() but did not update any of the
    error paths that trigger a put_disk() call after disk->queue has been
    assigned. That introduced the following behavior in the pktcdvd driver
    if pkt_new_dev() fails:
    
    Kernel BUG at 00000000e98fd882 [verbose debug info unavailable]
    
    Since disk_release() calls blk_put_queue() anyway if disk->queue != NULL,
    fix this by removing the blk_cleanup_queue() call from the pkt_setup_dev()
    error path.
    
    Fixes: commit 523e1d399ce0 ("block: make gendisk hold a reference to its queue")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 588b9d09fe7d3aee491b0fa5e69c73e4161605f2
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:22 2017 -0800

    scsi: aacraid: Fix udev inquiry race condition
    
    commit f4e8708d3104437fd7716e957f38c265b0c509ef upstream.
    
    When udev requests for a devices inquiry string, it might create multiple
    threads causing a race condition on the shared inquiry resource string.
    
    Created a buffer with the string for each thread.
    
    Fixes: 3bc8070fb75b3315 ([SCSI] aacraid: SMC vendor identification)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [bwh: Backported to 3.16:
     - s/sup_adap_info->adapter_type_text/dev->supplement_adapter_info.AdapterTypeText/
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5cf81a54c156779558718d453a657a086f6c3fc2
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Sun Nov 5 21:27:41 2017 -0800

    PM / devfreq: Propagate error from devfreq_add_device()
    
    commit d1bf2d30728f310f72296b54f0651ecdb09cbb12 upstream.
    
    Propagate the error of devfreq_add_device() in devm_devfreq_add_device()
    rather than statically returning ENOMEM. This makes it slightly faster
    to pinpoint the cause of a returned error.
    
    Fixes: 8cd84092d35e ("PM / devfreq: Add resource-managed function for devfreq device")
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86d07c3c72ad26c59e994defdad7a36499601ea8
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Dec 29 19:48:43 2017 +0100

    video: fbdev: atmel_lcdfb: fix display-timings lookup
    
    commit 9cb18db0701f6b74f0c45c23ad767b3ebebe37f6 upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent display node was also prematurely
    freed.
    
    Note that the display and timings node references are never put after a
    successful dt-initialisation so the nodes would leak on later probe
    deferrals and on driver unbind.
    
    Fixes: b985172b328a ("video: atmel_lcdfb: add device tree suport")
    Cc: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit da302aca911f361853fe7b48d12f36bd15b40499
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Wed Aug 6 22:12:18 2014 +0200

    drivers: video: fbdev: atmel_lcdfb.c: fix error return code
    
    commit 6c131850eca653344c41d68ce87f3ab5a89af89e upstream.
    
    Convert a zero return value on error to a negative one, as returned
    elsewhere in the function.
    
    A simplified version of the semantic match that finds this problem is as
    follows: (http://coccinelle.lip6.fr/)
    
    // <smpl>
    (
    if@p1 (\(ret < 0\|ret != 0\))
     { ... return ret; }
    |
    ret@p1 = 0
    )
    ... when != ret = e1
        when != &ret
    *if(...)
    {
      ... when != ret = e2
          when forall
     return ret;
    }
    
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d435b08a2bf3b01b5465d84dc6e633da6707b720
Author: Tariq Toukan <tariqt@mellanox.com>
Date:   Thu Dec 28 16:26:10 2017 +0200

    net/mlx4_core: Cleanup FMR unmapping flow
    
    commit fd4a3e2828b4ca35aef40e5bdc1ed7d87b3cb50a upstream.
    
    Remove redundant and not essential operations in fmr unmap/free.
    According to device spec, in FMR unmap it is sufficient to set
    ownership bit to SW. This allows remapping afterwards.
    
    Fixes: 8ad11fb6b073 ("IB/mlx4: Implement FMRs")
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7ceef15e5ce2e3676062f3be616a2752aba390fb
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Mar 1 10:32:57 2017 -0800

    pinctrl: Really force states during suspend/resume
    
    commit 981ed1bfbc6c4660b2ddaa8392893e20a6255048 upstream.
    
    In case a platform only defaults a "default" set of pins, but not a
    "sleep" set of pins, and this particular platform suspends and resumes
    in a way that the pin states are not preserved by the hardware, when we
    resume, we would call pinctrl_single_resume() -> pinctrl_force_default()
    -> pinctrl_select_state() and the first thing we do is check that the
    pins state is the same as before, and do nothing.
    
    In order to fix this, decouple the actual state change from
    pinctrl_select_state() and move it pinctrl_commit_state(), while keeping
    the p->state == state check in pinctrl_select_state() not to change the
    caller assumptions. pinctrl_force_sleep() and pinctrl_force_default()
    are updated to bypass the state check by calling pinctrl_commit_state().
    
    [Linus Walleij]
    The forced pin control states are currently only used in some pin
    controller drivers that grab their own reference to their own pins.
    This is equal to the pin control hogs: pins taken by pin control
    devices since there are no corresponding device in the Linux device
    hierarchy, such as memory controller lines or unused GPIO lines,
    or GPIO lines that are used orthogonally from the GPIO subsystem
    but pincontrol-wise managed as hogs (non-strict mode, allowing
    simultaneous use by GPIO and pin control). For this case forcing
    the state from the drivers' suspend()/resume() callbacks makes
    sense and should semantically match the name of the function.
    
    Fixes: 6e5e959dde0d ("pinctrl: API changes to support multiple states per device")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a1ffa5618a8dfbb598415124dfea0dfcc4a7eae7
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Nov 14 14:51:55 2017 +0200

    RDMA/cma: Use correct size when writing netlink stats
    
    commit 7baaa49af3716fb31877c61f59b74d029ce15b75 upstream.
    
    The code was using the src size when formatting the dst. They are almost
    certainly the same value but it reads wrong.
    
    Fixes: ce117ffac2e9 ("RDMA/cma: Export AF_IB statistics")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 21efeca3eeea9ca4a9f55bd04b83e6caf7f69a70
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Sep 15 15:54:34 2017 -0400

    media: exynos4-is: properly initialize frame format
    
    commit 97913bcbe6da3957af27d9fdd76b3d97b99e6d6a upstream.
    
    We copy the subdev frame format from a partially initialized
    structure, which is not entirely well-defined. Older compilers
    like gcc-4.4 can copy uninitialized stack data here and warn
    about it:
    
    drivers/media/platform/exynos4-is/fimc-isp.c: In function 'fimc_isp_subdev_open':
    drivers/media/platform/exynos4-is/fimc-isp.c:379: error: 'fmt.reserved[10u]' may be used uninitialized in this function
    drivers/media/platform/exynos4-is/fimc-isp.c:379: error: 'fmt.reserved[9u]' may be used uninitialized in this function
    ...
    drivers/media/platform/exynos4-is/fimc-isp.c:379: error: 'fmt.reserved[0u]' may be used uninitialized in this function
    drivers/media/platform/exynos4-is/fimc-isp.c:379: error: 'fmt.xfer_func' may be used uninitialized in this function
    
    On newer compilers, only the initialized fields get copied, but
    we should not rely on that, so this changes the code to zero-out
    the remaining fields first.
    
    Fixes: 9a761e436843 ("[media] exynos4-is: Add Exynos4x12 FIMC-IS driver")
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d3216bfe199701ff808499beb30581a82941f98
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Dec 5 17:35:08 2017 +0300

    ath9k_htc: Add a sanity check in ath9k_htc_ampdu_action()
    
    commit 413fd2f5c0233d3cde391679b967c1f14cd2cb27 upstream.
    
    Smatch generates a warning here:
    
        drivers/net/wireless/ath/ath9k/htc_drv_main.c:1688 ath9k_htc_ampdu_action()
        error: buffer overflow 'ista->tid_state' 8 <= 15
    
    I don't know if it's a real bug or not but the other paths through this
    function all ensure that "tid" is less than ATH9K_HTC_MAX_TID (8) so
    checking here makes things more consistent.
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f9ce6328a2b5fbe3a7c082c42f74eafeab8a0eed
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Sep 21 19:23:56 2017 -0400

    media: bt8xx: Fix err 'bt878_probe()'
    
    commit 45392ff6881dbe56d41ef0b17c2e576065f8ffa1 upstream.
    
    This is odd to call 'pci_disable_device()' in an error path before a
    coresponding successful 'pci_enable_device()'.
    
    Return directly instead.
    
    Fixes: 77e0be12100a ("V4L/DVB (4176): Bug-fix: Fix memory overflow")
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 82d79310f35a7630f40f14767269c3a950ce179b
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Dec 13 20:34:36 2017 +0800

    USB: serial: io_edgeport: fix possible sleep-in-atomic
    
    commit c7b8f77872c73f69a16528a9eb87afefcccdc18b upstream.
    
    According to drivers/usb/serial/io_edgeport.c, the driver may sleep
    under a spinlock.
    The function call path is:
    edge_bulk_in_callback (acquire the spinlock)
       process_rcvd_data
         process_rcvd_status
           change_port_settings
             send_iosp_ext_cmd
               write_cmd_usb
                 usb_kill_urb --> may sleep
    
    To fix it, the redundant usb_kill_urb() is removed from the error path
    after usb_submit_urb() fails.
    
    This possible bug is found by my static analysis tool (DSAC) and checked
    by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ceee8b524ada2e9926e28779cf763ea32d0279d6
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Wed Nov 29 09:47:33 2017 +0100

    RDMA/iwpm: Fix uninitialized error code in iwpm_send_mapinfo()
    
    commit 302d6424e4a293a5761997e6c9fc3dfb1e4c355f upstream.
    
    With gcc-4.1.2:
    
        drivers/infiniband/core/iwpm_util.c: In function ‘iwpm_send_mapinfo’:
        drivers/infiniband/core/iwpm_util.c:647: warning: ‘ret’ may be used uninitialized in this function
    
    Indeed, if nl_client is not found in any of the scanned has buckets, ret
    will be used uninitialized.
    
    Preinitialize ret to -EINVAL to fix this.
    
    Fixes: 30dc5e63d6a5ad24 ("RDMA/core: Add support for iWARP Port Mapper user space service")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reviewed-by: Tatyana Nikolova <tatyana.e.nikolova@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fea682d93e06913a93d8ddad71b24a39e11a361b
Author: Mimi Zohar <zohar@linux.vnet.ibm.com>
Date:   Wed Nov 8 07:38:28 2017 -0500

    ima: relax requiring a file signature for new files with zero length
    
    commit b7e27bc1d42e8e0cc58b602b529c25cd0071b336 upstream.
    
    Custom policies can require file signatures based on LSM labels.  These
    files are normally created and only afterwards labeled, requiring them
    to be signed.
    
    Instead of requiring file signatures based on LSM labels, entire
    filesystems could require file signatures.  In this case, we need the
    ability of writing new files without requiring file signatures.
    
    The definition of a "new" file was originally defined as any file with
    a length of zero.  Subsequent patches redefined a "new" file to be based
    on the FILE_CREATE open flag.  By combining the open flag with a file
    size of zero, this patch relaxes the file signature requirement.
    
    Fixes: 1ac202e978e1 ima: accept previously set IMA_NEW_FILE
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a446b514f70dadc9780588868e635df947dc43ac
Author: SeongJae Park <sj38.park@gmail.com>
Date:   Fri Nov 3 19:17:23 2017 +0900

    rcutorture/kvm.sh: Use consistent help text for --qemu-args
    
    commit 8dcd6f3fe206c0bb8996e59386a04027b1c2fb9b upstream.
    
    The '--qemu-args' option's help text is wrongly copied from '--qemu-cmd'
    option and its argument type description message format is inconsistent
    with other arguments.  This commit fixes the usage and type messages to
    be consistent with others.
    
    Fixes: e9ce640001c6 ("rcutorture: Add --qemu-args argument to kvm.sh")
    
    Signed-off-by: SeongJae Park <sj38.park@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e37697909a059d36c8d411019017e629e8cd56cc
Author: SeongJae Park <sj38.park@gmail.com>
Date:   Fri Nov 3 19:17:20 2017 +0900

    rcutorture/configinit: Fix build directory error message
    
    commit 2adfa4210f8f35cdfb4e08318cc06b99752964c2 upstream.
    
    The 'configinit.sh' script checks the format of optional argument for the
    build directory, printing an error message if the format is not valid.
    However, the error message uses the wrong variable, indicating an empty
    string even though the user entered a non-empty (but erroneous) string.
    This commit fixes the script to use the correct variable.
    
    Fixes: c87b9c601ac8 ("rcutorture: Add KVM-based test framework")
    
    Signed-off-by: SeongJae Park <sj38.park@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 34e745ff38da718dd616ad7822e12d527245b429
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Dec 9 14:52:28 2017 +0300

    ASoC: nuc900: Fix a loop timeout test
    
    commit 65a12b3aafed5fc59f4ce41b22b752b1729e6701 upstream.
    
    We should be finishing the loop with timeout set to zero but because
    this is a post-op we finish with timeout == -1.
    
    Fixes: 1082e2703a2d ("ASoC: NUC900/audio: add nuc900 audio driver support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c4d49ad1713d26df282c00f1a7d9c23b454317f8
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 17 02:00:50 2017 +1000

    powerpc/64: Don't trace irqs-off at interrupt return to soft-disabled context
    
    commit acb1feab320e38588fccc568e3767761f494976f upstream.
    
    When an interrupt is returning to a soft-disabled context (which can
    happen for non-maskable interrupts or synchronous interrupts), it goes
    through the motions of soft-disabling again, including calling
    TRACE_DISABLE_INTS (i.e., trace_hardirqs_off()).
    
    This is not necessary, because we must already be soft-disabled in the
    interrupt context, it also may be causing crashes in the irq tracing
    code to re-enter as an nmi. Replace it with a warning to ensure that
    soft-interrupts are still disabled.
    
    Fixes: 7c0482e3d055 ("powerpc/irq: Fix another case of lazy IRQ state getting out of sync")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 33ee5c590011261cb576850a85598d9151dddcec
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Fri Dec 8 12:18:59 2017 +0100

    slip: sl_alloc(): remove unused parameter "dev_t line"
    
    commit 936e5d8bdfa72577e28ea671d9e2ee4fef0d6b3e upstream.
    
    The first and only parameter of sl_alloc() is unused, so remove it.
    
    Fixes: 5342b77c4123 slip: ("Clean up create and destroy")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c510ef7a81b124917e309b6432c3a5da22815778
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 9 16:28:14 2017 -0500

    media: cpia2: Fix a couple off by one bugs
    
    commit d5ac225c7d64c9c3ef821239edc035634e594ec9 upstream.
    
    The cam->buffers[] array has cam->num_frames elements so the > needs to
    be changed to >= to avoid going beyond the end of the array.  The
    ->buffers[] array is allocated in cpia2_allocate_buffers() if you want
    to confirm.
    
    Fixes: ab33d5071de7 ("V4L/DVB (3376): Add cpia2 camera support")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 128b6ef6a0969da90e7b093e36ea21cff8d48cd4
Author: Tobias Jordan <Tobias.Jordan@elektrobit.com>
Date:   Thu Dec 7 15:04:53 2017 +0100

    spi: sun6i: disable/unprepare clocks on remove
    
    commit 2d9bbd02c54094ceffa555143b0d68cd06504d63 upstream.
    
    sun6i_spi_probe() uses sun6i_spi_runtime_resume() to prepare/enable
    clocks, so sun6i_spi_remove() should use sun6i_spi_runtime_suspend() to
    disable/unprepare them if we're not suspended.
    Replacing pm_runtime_disable() by pm_runtime_force_suspend() will ensure
    that sun6i_spi_runtime_suspend() is called if needed.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 3558fe900e8af (spi: sunxi: Add Allwinner A31 SPI controller driver)
    Signed-off-by: Tobias Jordan <Tobias.Jordan@elektrobit.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 48baa248d4b65bf0644b7da4f74477215f89a7d8
Author: Dave Young <dyoung@redhat.com>
Date:   Fri Dec 1 20:19:34 2017 +0800

    HID: add quirk for another PIXART OEM mouse used by HP
    
    commit 01cffe9ded15c0d664e0beb33c594e00c0d57bba upstream.
    
    This mouse keep disconnecting in runleve 3 like below, add it needs the
    quirk to mute the anoying messages.
    
    [  111.230555] usb 2-2: USB disconnect, device number 6
    [  112.718156] usb 2-2: new low-speed USB device number 7 using xhci_hcd
    [  112.941594] usb 2-2: New USB device found, idVendor=03f0, idProduct=094a
    [  112.984866] usb 2-2: New USB device strings: Mfr=1, Product=2, SerialNumber=0
    [  113.027731] usb 2-2: Product: HP USB Optical Mouse
    [  113.069977] usb 2-2: Manufacturer: PixArt
    [  113.113500] input: PixArt HP USB Optical Mouse as /devices/pci0000:00/0000:00:14.0/usb2/2-2/2-2:1.0/0003:03F0:094A.0002/input/input14
    [  113.156787] hid-generic 0003:03F0:094A.0002: input: USB HID v1.11 Mouse [PixArt HP USB Optical Mouse] on usb-0000:00:14.0-2/input0
    [  173.262642] usb 2-2: USB disconnect, device number 7
    [  174.750244] usb 2-2: new low-speed USB device number 8 using xhci_hcd
    [  174.935740] usb 2-2: New USB device found, idVendor=03f0, idProduct=094a
    [  174.990435] usb 2-2: New USB device strings: Mfr=1, Product=2, SerialNumber=0
    [  175.014984] usb 2-2: Product: HP USB Optical Mouse
    [  175.037886] usb 2-2: Manufacturer: PixArt
    [  175.061794] input: PixArt HP USB Optical Mouse as /devices/pci0000:00/0000:00:14.0/usb2/2-2/2-2:1.0/0003:03F0:094A.0003/input/input15
    [  175.084946] hid-generic 0003:03F0:094A.0003: input: USB HID v1.11 Mouse [PixArt HP USB Optical Mouse] on usb-0000:00:14.0-2/input0
    
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    [bwh: Backported to 3.16:
     - Don't use HID_USB_DEVICE()
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 083a3a7ff68139d5d91f38c74c5455c82ffb1fd3
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Tue Nov 28 08:56:32 2017 +0100

    perf annotate: Fix objdump comment parsing for Intel mov dissassembly
    
    commit 35a8a148d8c1ee9e5ae18f9565a880490f816f89 upstream.
    
    The command 'perf annotate' parses the output of objdump and also
    investigates the comments produced by objdump. For example the
    output of objdump produces (on x86):
    
    23eee:  4c 8b 3d 13 01 21 00 mov 0x210113(%rip),%r15
                                    # 234008 <stderr@@GLIBC_2.2.5+0x9a8>
    
    and the function mov__parse() is called to investigate the complete
    line. Mov__parse() breaks this line into several parts and finally
    calls function comment__symbol() to parse the data after the comment
    character '#'. Comment__symbol() expects a hexadecimal address followed
    by a symbol in '<' and '>' brackets.
    
    However the 2nd parameter given to function comment__symbol()
    always points to the comment character '#'. The address parsing
    always returns 0 because the character '#' is not a digit and
    strtoull() fails without being noticed.
    
    Fix this by advancing the second parameter to function comment__symbol()
    by one byte before invocation and add an error check after strtoull()
    has been called.
    
    Signed-off-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Acked-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Fixes: 6de783b6f50f ("perf annotate: Resolve symbols using objdump comment")
    Link: http://lkml.kernel.org/r/20171128075632.72182-1-tmricht@linux.vnet.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit aafa57f9e7ff0e0b20404f648526fa6db632a57c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Nov 22 21:31:20 2017 +0100

    power: supply: ab8500_charger: Bail out in case of error in 'ab8500_charger_init_hw_registers()'
    
    commit 09edcb647542487864e23aa8d2ef26be3e08978a upstream.
    
    If an error occurs when we enable the backup battery charging, we should
    go through the error handling path directly.
    
    Before commit db43e6c473b5 ("ab8500-bm: Add usb power path support") this
    was the case, but this commit has added some code between the last test and
    the 'out' label.
    So, in case of error, this added code is executed and the error may be
    silently ignored.
    
    Fix it by adding the missing 'goto out', as done in all other error
    handling paths.
    
    Fixes: db43e6c473b5 ("ab8500-bm: Add usb power path support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6fed33c3a424c746bbbb7cf983bfa1df17adb60f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Nov 22 21:27:31 2017 +0100

    power: supply: ab8500_charger: Fix an error handling path
    
    commit bf59fddde1c3eab89eb8dca8f3d3dc097887d2bb upstream.
    
    'ret' is know to be 0 at this point, because it has not been updated by the
    the previous call to 'abx500_mask_and_set_register_interruptible()'.
    
    Fix it by updating 'ret' before checking if an error occurred.
    
    Fixes: 84edbeeab67c ("ab8500-charger: AB8500 charger driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d7f1d486a06d4cf2a95128d27bab78c4d540cb4e
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Nov 23 15:35:04 2017 -0300

    perf report: Fix -D output for user metadata events
    
    commit f250b09c779550e4a7a412dae6d3ad34d5201019 upstream.
    
    The PERF_RECORD_USER_ events are synthesized by the tool to assist in
    processing the PERF_RECORD_ ones generated by the kernel, the printing
    of that information doesn't come with a perf_sample structure, so, when
    dumping the event fields using 'perf report -D' there were columns that
    end up not being printed.
    
    To tidy up a bit this, fake a perf_sample structure with zeroes to have
    the missing columns printed and avoid the occasional surprise with that.
    
    Before:
    
    0 0x45b8 [0x68]: PERF_RECORD_MMAP -1/0: [0xffffffffc12ec000(0x4000) @ 0]: x /lib/modules/4.14.0+/kernel/fs/nls/nls_utf8.ko
    0x4620 [0x28]: PERF_RECORD_THREAD_MAP nr: 1 thread: 27820
    0x4648 [0x18]: PERF_RECORD_CPU_MAP: 0-3
    0 0x4660 [0x28]: PERF_RECORD_COMM: perf:27820/27820
    0x4a58 [0x8]: PERF_RECORD_FINISHED_ROUND
    447723433020976 0x4688 [0x28]: PERF_RECORD_SAMPLE(IP, 0x4001): 27820/27820: 0xffffffff8f1b6d7a period: 1 addr: 0
    
    After:
    
      $ perf report -D | grep PERF_RECORD_ | head
      0 0xe8 [0x20]: PERF_RECORD_TIME_CONV: unhandled!
      0 0x108 [0x28]: PERF_RECORD_THREAD_MAP nr: 1 thread: 32555
      0 0x130 [0x18]: PERF_RECORD_CPU_MAP: 0-3
      0 0x148 [0x28]: PERF_RECORD_COMM: perf:32555/32555
      0 0x4e8 [0x8]: PERF_RECORD_FINISHED_ROUND
      448743409421205 0x170 [0x28]: PERF_RECORD_COMM exec: sleep:32555/32555
      448743409431883 0x198 [0x68]: PERF_RECORD_MMAP2 32555/32555: [0x55e11d75a000(0x208000) @ 0 fd:00 3147174 2566255743]: r-xp /usr/bin/sleep
      448743409443873 0x200 [0x70]: PERF_RECORD_MMAP2 32555/32555: [0x7f0ced316000(0x229000) @ 0 fd:00 3151761 2566238119]: r-xp /usr/lib64/ld-2.25.so
      448743409454790 0x270 [0x60]: PERF_RECORD_MMAP2 32555/32555: [0x7ffe84f6d000(0x2000) @ 0 00:00 0 0]: r-xp [vdso]
      448743409479500 0x2d0 [0x28]: PERF_RECORD_SAMPLE(IP, 0x4002): 32555/32555: 0xffffffff8f84c7e7 period: 1 addr: 0
      $
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 9aefcab0de47 ("perf session: Consolidate the dump code")
    Link: https://lkml.kernel.org/n/tip-todcu15x0cwgppkh1gi6uhru@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f11e1145ff0da01988c43f7b2f75888611e73abb
Author: Simon Shields <simon@lineageos.org>
Date:   Tue Nov 21 22:24:24 2017 +1100

    ARM: dts: exynos: Correct Trats2 panel reset line
    
    commit 1b377924841df1e13ab5b225be3a83f807a92b52 upstream.
    
    Trats2 uses gpf2-1 as the panel reset GPIO. gpy4-5 was only used
    on early revisions of the board.
    
    Fixes: 420ae8451a22 ("ARM: dts: exynos4412-trats2: add panel node")
    Signed-off-by: Simon Shields <simon@lineageos.org>
    Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c63a8a3e62115492027270d9fe4b2442165e6b89
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Nov 13 16:12:06 2017 +0000

    EDAC, octeon: Fix an uninitialized variable warning
    
    commit 544e92581a2ac44607d7cc602c6b54d18656f56d upstream.
    
    Fix an uninitialized variable warning in the Octeon EDAC driver, as seen
    in MIPS cavium_octeon_defconfig builds since v4.14 with Codescape GNU
    Tools 2016.05-03:
    
      drivers/edac/octeon_edac-lmc.c In function ‘octeon_lmc_edac_poll_o2’:
      drivers/edac/octeon_edac-lmc.c:87:24: warning: ‘((long unsigned int*)&int_reg)[1]’ may \
        be used uninitialized in this function [-Wmaybe-uninitialized]
        if (int_reg.s.sec_err || int_reg.s.ded_err) {
                            ^
    Iinitialise the whole int_reg variable to zero before the conditional
    assignments in the error injection case.
    
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Acked-by: David Daney <david.daney@cavium.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: linux-mips@linux-mips.org
    Fixes: 1bc021e81565 ("EDAC: Octeon: Add error injection support")
    Link: http://lkml.kernel.org/r/20171113161206.20990-1-james.hogan@mips.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 947ec2972c6634170a7fbb9cf06b2226afa390e1
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Nov 3 15:34:34 2017 -0300

    perf record: Generate PERF_RECORD_{MMAP,COMM,EXEC} with --delay
    
    commit d3dbf43c56f9176be325ce1cc72a44c8d3c210dc upstream.
    
    When we use an initial delay, e.g.: 'perf record --delay 1000', we do not
    enable the events until that delay has passed after we started the workload,
    including the tracking event, i.e. the one for which we have attr.mmap, etc,
    enabled to ask the kernel to generate the PERF_RECORD_{MMAP,COMM,EXEC} metadata
    events that will then allow us to resolve addresses in samples to the map, dso
    and symbol. There will be a shadow that even synthesizing samples won't cover,
    i.e. the workload that we start and other processes forking while we
    wait for the initial delay to expire.
    
    So use a dummy event to be the tracking one and make it be enabled on exec.
    
    Before:
    
      # perf record --delay 1000 stress --cpu 1 --timeout 5
      stress: info: [9029] dispatching hogs: 1 cpu, 0 io, 0 vm, 0 hdd
      stress: info: [9029] successful run completed in 5s
      [ perf record: Woken up 3 times to write data ]
      [ perf record: Captured and wrote 0.624 MB perf.data (15908 samples) ]
      # perf script | head
          :9031 9031 32001.826888:       1 cycles:ppp: ffffffff831aa30d event_function (/lib/modules/4.14.0-rc6+/build/vmlinux)
          :9031 9031 32001.826893:       1 cycles:ppp: ffffffff8300d1a0 intel_bts_enable_local (/lib/modules/4.14.0-rc6+/build/vmlinux)
          :9031 9031 32001.826895:       7 cycles:ppp: ffffffff83023870 sched_clock (/lib/modules/4.14.0-rc6+/build/vmlinux)
          :9031 9031 32001.826897:     103 cycles:ppp: ffffffff8300c331 intel_pmu_handle_irq (/lib/modules/4.14.0-rc6+/build/vmlinux)
          :9031 9031 32001.826899:    1615 cycles:ppp: ffffffff830231f8 native_sched_clock (/lib/modules/4.14.0-rc6+/build/vmlinux)
          :9031 9031 32001.826902:   26724 cycles:ppp: ffffffff8384c6a7 native_irq_return_iret (/lib/modules/4.14.0-rc6+/build/vmlinux)
          :9031 9031 32001.826913:  329739 cycles:ppp:     7fb2a5410932 [unknown] ([unknown])
          :9031 9031 32001.827033: 1225451 cycles:ppp:     7fb2a5410930 [unknown] ([unknown])
          :9031 9031 32001.827474: 1391725 cycles:ppp:     7fb2a5410930 [unknown] ([unknown])
          :9031 9031 32001.827978: 1233697 cycles:ppp:     7fb2a5410928 [unknown] ([unknown])
      #
    
    After:
    
      # perf record --delay 1000 stress --cpu 1 --timeout 5
      stress: info: [9741] dispatching hogs: 1 cpu, 0 io, 0 vm, 0 hdd
      stress: info: [9741] successful run completed in 5s
      [ perf record: Woken up 3 times to write data ]
      [ perf record: Captured and wrote 0.751 MB perf.data (15976 samples) ]
      # perf script | head
         stress  9742 32110.959106:          1 cycles:ppp:  ffffffff831b26f6 __perf_event_task_sched_in (/lib/modules/4.14.0-rc6+/build/vmlinux)
         stress 9742 32110.959110:       1 cycles:ppp: ffffffff8300c2e9 intel_pmu_handle_irq (/lib/modules/4.14.0-rc6+/build/vmlinux)
         stress 9742 32110.959112:       7 cycles:ppp: ffffffff830231e0 native_sched_clock (/lib/modules/4.14.0-rc6+/build/vmlinux)
         stress 9742 32110.959115:     101 cycles:ppp: ffffffff83023870 sched_clock (/lib/modules/4.14.0-rc6+/build/vmlinux)
         stress 9742 32110.959117:    1533 cycles:ppp: ffffffff830231f8 native_sched_clock (/lib/modules/4.14.0-rc6+/build/vmlinux)
         stress 9742 32110.959119:   23992 cycles:ppp: ffffffff831b0900 ctx_sched_in (/lib/modules/4.14.0-rc6+/build/vmlinux)
         stress 9742 32110.959129:  329406 cycles:ppp:     7f4b1b661930 __random_r (/usr/lib64/libc-2.25.so)
         stress 9742 32110.959249: 1288322 cycles:ppp:     5566e1e7cbc9 hogcpu (/usr/bin/stress)
         stress 9742 32110.959712: 1464046 cycles:ppp:     7f4b1b66179e __random (/usr/lib64/libc-2.25.so)
         stress 9742 32110.960241: 1266918 cycles:ppp:     7f4b1b66195b __random_r (/usr/lib64/libc-2.25.so)
      #
    
    Reported-by: Bram Stolk <b.stolk@gmail.com>
    Tested-by: Bram Stolk <b.stolk@gmail.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Fixes: 6619a53ef757 ("perf record: Add --initial-delay option")
    Link: http://lkml.kernel.org/n/tip-nrdfchshqxf7diszhxcecqb9@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    [bwh: Backported to 3.16:
     - Don't set perf_evsel::tracking fields
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e94e50a7c87b3ebdbf7c8fcfc9a4693fe3ae5c4e
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Jan 7 13:14:56 2016 -0300

    perf evlist: Introduce perf_evlist__new_dummy constructor
    
    commit 5bae0250237f7a5ec4355f9920701de247b8db91 upstream.
    
    For case where all we need is an evlist with just an "dummy" evsel,
    like in some 'perf test' entries.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/n/tip-q52le0pblm2k3ncvyilelr9z@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 03044aa5a8ecd5e76f3d6b2430314b962ab281fc
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 12 15:27:34 2018 +0000

    x86/speculation: Correct Speculation Control microcode blacklist again
    
    commit d37fc6d360a404b208547ba112e7dabb6533c7fc upstream.
    
    Arjan points out that the Intel document only clears the 0xc2 microcode
    on *some* parts with CPUID 506E3 (INTEL_FAM6_SKYLAKE_DESKTOP stepping 3).
    For the Skylake H/S platform it's OK but for Skylake E3 which has the
    same CPUID it isn't (yet) cleared.
    
    So removing it from the blacklist was premature. Put it back for now.
    
    Also, Arjan assures me that the 0x84 microcode for Kaby Lake which was
    featured in one of the early revisions of the Intel document was never
    released to the public, and won't be until/unless it is also validated
    as safe. So those can change to 0x80 which is what all *other* versions
    of the doc have identified.
    
    Once the retrospective testing of existing public microcodes is done, we
    should be back into a mode where new microcodes are only released in
    batches and we shouldn't even need to update the blacklist for those
    anyway, so this tweaking of the list isn't expected to be a thing which
    keeps happening.
    
    Requested-by: Arjan van de Ven <arjan.van.de.ven@intel.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Link: http://lkml.kernel.org/r/1518449255-2182-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bd1f65872654013615e60530b1ebfa11e0c5799a
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:22 2018 +0000

    x86/speculation: Update Speculation Control microcode blacklist
    
    commit 1751342095f0d2b36fa8114d8e12c5688c455ac4 upstream.
    
    Intel have retroactively blessed the 0xc2 microcode on Skylake mobile
    and desktop parts, and the Gemini Lake 0x22 microcode is apparently fine
    too. We blacklisted the latter purely because it was present with all
    the other problematic ones in the 2018-01-08 release, but now it's
    explicitly listed as OK.
    
    We still list 0x84 for the various Kaby Lake / Coffee Lake parts, as
    that appeared in one version of the blacklist and then reverted to
    0x80 again. We can change it if 0x84 is actually announced to be safe.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8869532093454b555338c9f0ca899150c10a72a6
Author: Tim Chen <tim.c.chen@linux.intel.com>
Date:   Mon Jan 29 22:04:47 2018 +0000

    x86/speculation: Use Indirect Branch Prediction Barrier in context switch
    
    commit 18bf3c3ea8ece8f03b6fc58508f2dfd23c7711c7 upstream.
    
    Flush indirect branches when switching into a process that marked itself
    non dumpable. This protects high value processes like gpg better,
    without having too high performance overhead.
    
    If done naïvely, we could switch to a kernel idle thread and then back
    to the original process, such as:
    
        process A -> idle -> process A
    
    In such scenario, we do not have to do IBPB here even though the process
    is non-dumpable, as we are switching back to the same process after a
    hiatus.
    
    To avoid the redundant IBPB, which is expensive, we track the last mm
    user context ID. The cost is to have an extra u64 mm context id to track
    the last mm we were using before switching to the init_mm used by idle.
    Avoiding the extra IBPB is probably worth the extra memory for this
    common scenario.
    
    For those cases where tlb_defer_switch_to_init_mm() returns true (non
    PCID), lazy tlb will defer switch to init_mm, so we will not be changing
    the mm for the process A -> idle -> process A switch. So IBPB will be
    skipped for this case.
    
    Thanks to the reviewers and Andy Lutomirski for the suggestion of
    using ctx_id which got rid of the problem of mm pointer recycling.
    
    Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: linux@dominikbrodowski.net
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: luto@kernel.org
    Cc: pbonzini@redhat.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1517263487-3708-1-git-send-email-dwmw@amazon.co.uk
    [bwh: Backported to 3.16: Drop the optimisation for switching via the idle
     task, since we don't have mm_context_t::ctx_id here]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 186ff874eb06d46f9636ed57f6f750bb14e12023
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Feb 22 16:43:18 2018 +0100

    KVM/VMX: Optimize vmx_vcpu_run() and svm_vcpu_run() by marking the RDMSR path as unlikely()
    
    commit 946fbbc13dce68902f64515b610eeb2a6c3d7a64 upstream.
    
    vmx_vcpu_run() and svm_vcpu_run() are large functions, and giving
    branch hints to the compiler can actually make a substantial cycle
    difference by keeping the fast path contiguous in memory.
    
    With this optimization, the retpoline-guest/retpoline-host case is
    about 50 cycles faster.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: KarimAllah Ahmed <karahmed@amazon.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kvm@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180222154318.20361-3-pbonzini@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d48560e9867198b4ad8c609d9ef3f0643355b558
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 21 09:20:37 2018 +0100

    x86/speculation: Move firmware_restrict_branch_speculation_*() from C to CPP
    
    commit d72f4e29e6d84b7ec02ae93088aa459ac70e733b upstream.
    
    firmware_restrict_branch_speculation_*() recently started using
    preempt_enable()/disable(), but those are relatively high level
    primitives and cause build failures on some 32-bit builds.
    
    Since we want to keep <asm/nospec-branch.h> low level, convert
    them to macros to avoid header hell...
    
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 433862605c05695fc2f4ad4fef3036af6735badc
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Feb 22 16:43:17 2018 +0100

    KVM/x86: Remove indirect MSR op calls from SPEC_CTRL
    
    commit ecb586bd29c99fb4de599dec388658e74388daad upstream.
    
    Having a paravirt indirect call in the IBRS restore path is not a
    good idea, since we are trying to protect from speculative execution
    of bogus indirect branch targets.  It is also slower, so use
    native_wrmsrl() on the vmentry path too.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: KarimAllah Ahmed <karahmed@amazon.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kvm@vger.kernel.org
    Fixes: d28b387fb74da95d69d2615732f50cceb38e9a4d
    Link: http://lkml.kernel.org/r/20180222154318.20361-2-pbonzini@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f54d0bb8487d2f016fbc4f0e38ef9098f8eb8bd4
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Sat Feb 3 15:56:23 2018 +0100

    KVM/SVM: Allow direct access to MSR_IA32_SPEC_CTRL
    
    commit b2ac58f90540e39324e7a29a7ad471407ae0bf48 upstream.
    
    [ Based on a patch from Paolo Bonzini <pbonzini@redhat.com> ]
    
    ... basically doing exactly what we do for VMX:
    
    - Passthrough SPEC_CTRL to guests (if enabled in guest CPUID)
    - Save and restore SPEC_CTRL around VMExit and VMEntry only if the guest
      actually used it.
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/1517669783-20732-1-git-send-email-karahmed@amazon.de
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 44491a23b73789c0a914af4ea55ccf8968adf90b
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Thu Feb 1 22:59:45 2018 +0100

    KVM/VMX: Allow direct access to MSR_IA32_SPEC_CTRL
    
    commit d28b387fb74da95d69d2615732f50cceb38e9a4d upstream.
    
    [ Based on a patch from Ashok Raj <ashok.raj@intel.com> ]
    
    Add direct access to MSR_IA32_SPEC_CTRL for guests. This is needed for
    guests that will only mitigate Spectre V2 through IBRS+IBPB and will not
    be using a retpoline+IBPB based approach.
    
    To avoid the overhead of saving and restoring the MSR_IA32_SPEC_CTRL for
    guests that do not actually use the MSR, only start saving and restoring
    when a non-zero is written to it.
    
    No attempt is made to handle STIBP here, intentionally. Filtering STIBP
    may be added in a future patch, which may require trapping all writes
    if we don't want to pass it through directly to the guest.
    
    [dwmw2: Clean up CPUID bits, save/restore manually, handle reset]
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/1517522386-18410-5-git-send-email-karahmed@amazon.de
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - No support for nested MSR bitmaps
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2f614f8e69cb0778fd4006453224a560333662b9
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Thu Feb 1 22:59:44 2018 +0100

    KVM/VMX: Emulate MSR_IA32_ARCH_CAPABILITIES
    
    commit 28c1c9fabf48d6ad596273a11c46e0d0da3e14cd upstream.
    
    Intel processors use MSR_IA32_ARCH_CAPABILITIES MSR to indicate RDCL_NO
    (bit 0) and IBRS_ALL (bit 1). This is a read-only MSR. By default the
    contents will come directly from the hardware, but user-space can still
    override it.
    
    [dwmw2: The bit in kvm_cpuid_7_0_edx_x86_features can be unconditional]
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/1517522386-18410-4-git-send-email-karahmed@amazon.de
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Add mapping of the relevant CPUID word
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c51f1e5f57cca88d8d5894b6fad1638f643a99d0
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Thu Feb 1 22:59:43 2018 +0100

    KVM/x86: Add IBPB support
    
    commit 15d45071523d89b3fb7372e2135fbd72f6af9506 upstream.
    
    The Indirect Branch Predictor Barrier (IBPB) is an indirect branch
    control mechanism. It keeps earlier branches from influencing
    later ones.
    
    Unlike IBRS and STIBP, IBPB does not define a new mode of operation.
    It's a command that ensures predicted branch targets aren't used after
    the barrier. Although IBRS and IBPB are enumerated by the same CPUID
    enumeration, IBPB is very different.
    
    IBPB helps mitigate against three potential attacks:
    
    * Mitigate guests from being attacked by other guests.
      - This is addressed by issing IBPB when we do a guest switch.
    
    * Mitigate attacks from guest/ring3->host/ring3.
      These would require a IBPB during context switch in host, or after
      VMEXIT. The host process has two ways to mitigate
      - Either it can be compiled with retpoline
      - If its going through context switch, and has set !dumpable then
        there is a IBPB in that path.
        (Tim's patch: https://patchwork.kernel.org/patch/10192871)
      - The case where after a VMEXIT you return back to Qemu might make
        Qemu attackable from guest when Qemu isn't compiled with retpoline.
      There are issues reported when doing IBPB on every VMEXIT that resulted
      in some tsc calibration woes in guest.
    
    * Mitigate guest/ring0->host/ring0 attacks.
      When host kernel is using retpoline it is safe against these attacks.
      If host kernel isn't using retpoline we might need to do a IBPB flush on
      every VMEXIT.
    
    Even when using retpoline for indirect calls, in certain conditions 'ret'
    can use the BTB on Skylake-era CPUs. There are other mitigations
    available like RSB stuffing/clearing.
    
    * IBPB is issued only for SVM during svm_free_vcpu().
      VMX has a vmclear and SVM doesn't.  Follow discussion here:
      https://lkml.org/lkml/2018/1/15/146
    
    Please refer to the following spec for more details on the enumeration
    and control.
    
    Refer here to get documentation about mitigations.
    
    https://software.intel.com/en-us/side-channel-security-support
    
    [peterz: rebase and changelog rewrite]
    [karahmed: - rebase
               - vmx: expose PRED_CMD if guest has it in CPUID
               - svm: only pass through IBPB if guest has it in CPUID
               - vmx: support !cpu_has_vmx_msr_bitmap()]
               - vmx: support nested]
    [dwmw2: Expose CPUID bit too (AMD IBPB only for now as we lack IBRS)
            PRED_CMD is a write-only MSR]
    
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Link: http://lkml.kernel.org/r/1515720739-43819-6-git-send-email-ashok.raj@intel.com
    Link: https://lkml.kernel.org/r/1517522386-18410-3-git-send-email-karahmed@amazon.de
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - No support for nested MSR bitmaps in VMX
     - Use literal number for CPU feature word
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 994f527b437995383a9509ef69cd5abf7167b181
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jan 16 16:51:18 2018 +0100

    KVM: VMX: make MSR bitmaps per-VCPU
    
    commit 904e14fb7cb96401a7dc803ca2863fd5ba32ffe6 upstream.
    
    Place the MSR bitmap in struct loaded_vmcs, and update it in place
    every time the x2apic or APICv state can change.  This is rare and
    the loop can handle 64 MSRs per iteration, in a similar fashion as
    nested_vmx_prepare_msr_bitmap.
    
    This prepares for choosing, on a per-VM basis, whether to intercept
    the SPEC_CTRL and PRED_CMD MSRs.
    
    Suggested-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - No support for nested MSR bitmaps
     - APICv support looked different
     - We still need to intercept the APIC_ID MSR
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit eff9612370bef383b4dee621e69f97bf85913626
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jan 11 12:16:15 2018 +0100

    KVM: VMX: introduce alloc_loaded_vmcs
    
    commit f21f165ef922c2146cc5bdc620f542953c41714b upstream.
    
    Group together the calls to alloc_vmcs and loaded_vmcs_init.  Soon we'll also
    allocate an MSR bitmap there.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - No loaded_vmcs::shadow_vmcs field to initialise
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d3451189b7133f78a9ce335e4bf1f077bc0812ff
Author: Jim Mattson <jmattson@google.com>
Date:   Mon Nov 27 17:22:25 2017 -0600

    KVM: nVMX: Eliminate vmcs02 pool
    
    commit de3a0021a60635de96aa92713c1a31a96747d72c upstream.
    
    The potential performance advantages of a vmcs02 pool have never been
    realized. To simplify the code, eliminate the pool. Instead, a single
    vmcs02 is allocated per VCPU when the VCPU enters VMX operation.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Mark Kanda <mark.kanda@oracle.com>
    Reviewed-by: Ameya More <ameya.more@oracle.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - No loaded_vmcs::shadow_vmcs field to initialise
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 395ba4fee298d0966bfea866f7a1a37fdd06e9d1
Author: David Matlack <dmatlack@google.com>
Date:   Tue Aug 1 14:00:40 2017 -0700

    KVM: nVMX: mark vmcs12 pages dirty on L2 exit
    
    commit c9f04407f2e0b3fc9ff7913c65fcfcb0a4b61570 upstream.
    
    The host physical addresses of L1's Virtual APIC Page and Posted
    Interrupt descriptor are loaded into the VMCS02. The CPU may write
    to these pages via their host physical address while L2 is running,
    bypassing address-translation-based dirty tracking (e.g. EPT write
    protection). Mark them dirty on every exit from L2 to prevent them
    from getting out of sync with dirty tracking.
    
    Also mark the virtual APIC page and the posted interrupt descriptor
    dirty when KVM is virtualizing posted interrupt processing.
    
    Signed-off-by: David Matlack <dmatlack@google.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - No nested posted interrupt support
     - No SMM support, so use mark_page_dirty() instead of
       kvm_vcpu_mark_page_dirty()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 44bbffff7dcf26ff181eb5d5cb328e35eef25f34
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:54 2018 +0000

    x86/speculation: Use IBRS if available before calling into firmware
    
    commit dd84441a797150dcc49298ec95c459a8891d8bb1 upstream.
    
    Retpoline means the kernel is safe because it has no indirect branches.
    But firmware isn't, so use IBRS for firmware calls if it's available.
    
    Block preemption while IBRS is set, although in practice the call sites
    already had to be doing that.
    
    Ignore hpwdt.c for now. It's taking spinlocks and calling into firmware
    code, from an NMI handler. I don't want to touch that with a bargepole.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16:
     - x86 defines {,__}efi_call_virt() itself; update those definitions
     - Renumber the feature bit
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 09efca6af9ad3ef6ad938f5b124167ea7d39d724
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Tue Jan 30 14:30:23 2018 +0000

    x86/cpuid: Fix up "virtual" IBRS/IBPB/STIBP feature bits on Intel
    
    commit 7fcae1118f5fd44a862aa5c3525248e35ee67c3b upstream.
    
    Despite the fact that all the other code there seems to be doing it, just
    using set_cpu_cap() in early_intel_init() doesn't actually work.
    
    For CPUs with PKU support, setup_pku() calls get_cpu_cap() after
    c->c_init() has set those feature bits. That resets those bits back to what
    was queried from the hardware.
    
    Turning the bits off for bad microcode is easy to fix. That can just use
    setup_clear_cpu_cap() to force them off for all CPUs.
    
    I was less keen on forcing the feature bits *on* that way, just in case
    of inconsistencies. I appreciate that the kernel is going to get this
    utterly wrong if CPU features are not consistent, because it has already
    applied alternatives by the time secondary CPUs are brought up.
    
    But at least if setup_force_cpu_cap() isn't being used, we might have a
    chance of *detecting* the lack of the corresponding bit and either
    panicking or refusing to bring the offending CPU online.
    
    So ensure that the appropriate feature bits are set within get_cpu_cap()
    regardless of how many extra times it's called.
    
    Fixes: 2961298e ("x86/cpufeatures: Clean up Spectre v2 related CPUID flags")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: karahmed@amazon.de
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Link: https://lkml.kernel.org/r/1517322623-15261-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d5f94d8cf3fef111ead1628f99be843004b92dc9
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Jan 27 16:24:32 2018 +0000

    x86/cpufeatures: Clean up Spectre v2 related CPUID flags
    
    commit 2961298efe1ea1b6fc0d7ee8b76018fa6c0bcef2 upstream.
    
    We want to expose the hardware features simply in /proc/cpuinfo as "ibrs",
    "ibpb" and "stibp". Since AMD has separate CPUID bits for those, use them
    as the user-visible bits.
    
    When the Intel SPEC_CTRL bit is set which indicates both IBRS and IBPB
    capability, set those (AMD) bits accordingly. Likewise if the Intel STIBP
    bit is set, set the AMD STIBP that's used for the generic hardware
    capability.
    
    Hide the rest from /proc/cpuinfo by putting "" in the comments. Including
    RETPOLINE and RETPOLINE_AMD which shouldn't be visible there. There are
    patches to make the sysfs vulnerabilities information non-readable by
    non-root, and the same should apply to all information about which
    mitigations are actually in use. Those *shouldn't* appear in /proc/cpuinfo.
    
    The feature bit for whether IBPB is actually used, which is needed for
    ALTERNATIVEs, is renamed to X86_FEATURE_USE_IBPB.
    
    Originally-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1517070274-12128-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: Adjust context and numbering]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 36293058920c81bf69fee579f94091264882d34f
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:15 2018 +0000

    x86/speculation: Add basic IBPB (Indirect Branch Prediction Barrier) support
    
    commit 20ffa1caecca4db8f79fe665acdeaa5af815a24d upstream.
    
    Expose indirect_branch_prediction_barrier() for use in subsequent patches.
    
    [ tglx: Add IBPB status to spectre_v2 sysfs file ]
    
    Co-developed-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-8-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Renumber the feature bit
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 221ddea76ecd5dcd2a856228d91ec9ba64caa572
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:14 2018 +0000

    x86/cpufeature: Blacklist SPEC_CTRL/PRED_CMD on early Spectre v2 microcodes
    
    commit a5b2966364538a0e68c9fa29bc0a3a1651799035 upstream.
    
    This doesn't refuse to load the affected microcodes; it just refuses to
    use the Spectre v2 mitigation features if they're detected, by clearing
    the appropriate feature bits.
    
    The AMD CPUID bits are handled here too, because hypervisors *may* have
    been exposing those bits even on Intel chips, for fine-grained control
    of what's available.
    
    It is non-trivial to use x86_match_cpu() for this table because that
    doesn't handle steppings. And the approach taken in commit bd9240a18
    almost made me lose my lunch.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-7-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: Add #include <asm/intel-family.h>]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 94a97e5aa9101881f1028154faca31cd4b1a35c7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 2 22:39:23 2018 +0100

    x86/pti: Mark constant arrays as __initconst
    
    commit 4bf5d56d429cbc96c23d809a08f63cd29e1a702e upstream.
    
    I'm seeing build failures from the two newly introduced arrays that
    are marked 'const' and '__initdata', which are mutually exclusive:
    
    arch/x86/kernel/cpu/common.c:882:43: error: 'cpu_no_speculation' causes a section type conflict with 'e820_table_firmware_init'
    arch/x86/kernel/cpu/common.c:895:43: error: 'cpu_no_meltdown' causes a section type conflict with 'e820_table_firmware_init'
    
    The correct annotation is __initconst.
    
    Fixes: fec9434a12f3 ("x86/pti: Do not enable PTI on CPUs which are not vulnerable to Meltdown")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180202213959.611210-1-arnd@arndb.de
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5e42d1dda7017eeff025d2bd1414aa5ece133412
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:13 2018 +0000

    x86/pti: Do not enable PTI on CPUs which are not vulnerable to Meltdown
    
    commit fec9434a12f38d3aeafeb75711b71d8a1fdef621 upstream.
    
    Also, for CPUs which don't speculate at all, don't report that they're
    vulnerable to the Spectre variants either.
    
    Leave the cpu_no_meltdown[] match table with just X86_VENDOR_AMD in it
    for now, even though that could be done with a simple comparison, on the
    assumption that we'll have more to add.
    
    Based on suggestions from Dave Hansen and Alan Cox.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-6-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dada5d39c32961733d234e2e9e01de83cd05e7c7
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:12 2018 +0000

    x86/msr: Add definitions for new speculation control MSRs
    
    commit 1e340c60d0dd3ae07b5bedc16a0469c14b9f3410 upstream.
    
    Add MSR and bit definitions for SPEC_CTRL, PRED_CMD and ARCH_CAPABILITIES.
    
    See Intel's 336996-Speculative-Execution-Side-Channel-Mitigations.pdf
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3e50ffb9b305fd5c512402d917264a80e0137e8b
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:11 2018 +0000

    x86/cpufeatures: Add AMD feature bits for Speculation Control
    
    commit 5d10cbc91d9eb5537998b65608441b592eec65e7 upstream.
    
    AMD exposes the PRED_CMD/SPEC_CTRL MSRs slightly differently to Intel.
    See http://lkml.kernel.org/r/2b3e25cc-286d-8bd0-aeaf-9ac4aae39de8@amd.com
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: This CPUID word wasn't used at all yet, so
     add it as feature word 11]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 13056af0ca8213eb800ada9b2b73eb602bb943e0
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:10 2018 +0000

    x86/cpufeatures: Add Intel feature bits for Speculation Control
    
    commit fc67dd70adb711a45d2ef34e12d1a8be75edde61 upstream.
    
    Add three feature bits exposed by new microcode on Intel CPUs for
    speculation control.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: This CPUID word wasn't used at all yet, so
     add it as feature word 10]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit af707f1b8886d6e9d52650aa130f7bea5bf69d35
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Sep 6 21:42:54 2016 +0300

    x86/cpu: Rename Merrifield2 to Moorefield
    
    commit f5fbf848303c8704d0e1a1e7cabd08fd0a49552f upstream.
    
    Merrifield2 is actually Moorefield.
    
    Rename it accordingly and drop tail digit from Merrifield1.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20160906184254.94440-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16: Drop driver changes]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 55572bc073d70f9cb17b2d137faa8f5bfd56525e
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Wed Jun 29 12:27:37 2016 -0700

    x86/cpu: Rename "WESTMERE2" family to "NEHALEM_G"
    
    commit 4b3b234f434d440fcd749b9636131b76e2ce561e upstream.
    
    Len Brown noticed something was amiss in our INTEL_FAM6_*
    definitions.  It seems like model 0x1F was a Nehalem part,
    marketed as "Intel Core i7 and i5 Processors" (according to the
    SDM).  But, although it was a Nehalem 0x1F had some uncore events
    which were shared with Westmere.
    
    Len also mentioned he thought it was called "Havendale", which
    Wikipedia says was graphics-oriented and canceled:
    
            https://en.wikipedia.org/wiki/Nehalem_(microarchitecture)
    
    So either way, it's probably not imporant what we call it, but
    call it Nehalem to be accurate, and add a "G" since it seems
    graphics-related.  If it were canceled that would be a good reason
    why it's so sparsely and inconsistently referred to in the code.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dave Hansen <dave@sr71.net>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20160629192737.949C41A8@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16: drop changes in intel_idle.c]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ffd18eb002bf00fd8066da5ae3aad7de77b7f11d
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Apr 8 15:30:38 2015 +0200

    KVM: x86: pass host_initiated to functions that read MSRs
    
    commit 609e36d372ad9329269e4a1467bd35311893d1d6 upstream.
    
    SMBASE is only readable from SMM for the VCPU, but it must be always
    accessible if userspace is accessing it.  Thus, all functions that
    read MSRs are changed to accept a struct msr_data; the host_initiated
    and index fields are pre-initialized, while the data field is filled
    on return.
    
    Reviewed-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [carnil: backport to 3.16, adjust context]
    [bwh: Adjust context again after update to 3.16.51]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3b0862bb914ada69085b67a59e1e5051bfeb5a71
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Nov 10 11:55:36 2015 +0100

    KVM: x86: rename update_db_bp_intercept to update_bp_intercept
    
    commit a96036b8ef7df9f10cd575c0d78359bd33188e8e upstream.
    
    Because #DB is now intercepted unconditionally, this callback
    only operates on #BP for both VMX and SVM.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [carnil: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6aa1edde1030eb98f6c810709ce4c9d257ecbe5c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Mar 26 15:39:07 2018 -1000

    perf/hwbp: Simplify the perf-hwbp code, fix documentation
    
    commit f67b15037a7a50c57f72e69a6d59941ad90a0f0f upstream.
    
    Annoyingly, modify_user_hw_breakpoint() unnecessarily complicates the
    modification of a breakpoint - simplify it and remove the pointless
    local variables.
    
    Also update the stale Docbook while at it.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 319975e893eebe88c6695c6876ab75d316aa518b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 18 12:51:31 2018 +0300

    cdrom: information leak in cdrom_ioctl_media_changed()
    
    commit 9de4ee40547fd315d4a0ed1dd15a2fa3559ad707 upstream.
    
    This cast is wrong.  "cdi->capacity" is an int and "arg" is an unsigned
    long.  The way the check is written now, if one of the high 32 bits is
    set then we could read outside the info->slots[] array.
    
    This bug is pretty old and it predates git.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 45dc1e88fb5a728c1f2186edafccf6581c9c99b8
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jul 23 15:37:48 2015 -0700

    x86/entry/64: Don't use IST entry for #BP stack
    
    commit d8ba61ba58c88d5207c1ba2f7d9a2280e7d03be9 upstream.
    
    There's nothing IST-worthy about #BP/int3.  We don't allow kprobes
    in the small handful of places in the kernel that run at CPL0 with
    an invalid stack, and 32-bit kernels have used normal interrupt
    gates for #BP forever.
    
    Furthermore, we don't allow kprobes in places that have usergs while
    in kernel mode, so "paranoid" is also unnecessary.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    [carnil: Backport to 3.16:
     - Adjust finename change: arch/x86/kernel/entry_64.S
     - Context changes
    ]
    [bwh: Rebase on top of "x86/traps: Enable DEBUG_STACK after cpu_init() for
     TRAP_DB/BP", and restore change in trap_init() instead of early_trap_init()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 82dd4b92ebcb628723cf47156263503beaa573a6
Author: Wang Nan <wangnan0@huawei.com>
Date:   Thu Feb 26 13:49:39 2015 +0800

    x86/traps: Enable DEBUG_STACK after cpu_init() for TRAP_DB/BP
    
    commit b4d8327024637cb2a1f7910dcb5d0ad7a096f473 upstream.
    
    Before this patch early_trap_init() installs DEBUG_STACK for
    X86_TRAP_BP and X86_TRAP_DB. However, DEBUG_STACK doesn't work
    correctly until cpu_init() <-- trap_init().
    
    This patch passes 0 to set_intr_gate_ist() and
    set_system_intr_gate_ist() instead of DEBUG_STACK to let it use
    same stack as kernel, and installs DEBUG_STACK for them in
    trap_init().
    
    As core runs at ring 0 between early_trap_init() and
    trap_init(), there is no chance to get a bad stack before
    trap_init().
    
    As NMI is also enabled in trap_init(), we don't need to care
    about is_debug_stack() and related things used in
    arch/x86/kernel/nmi.c.
    
    Signed-off-by: Wang Nan <wangnan0@huawei.com>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: <dave.hansen@linux.intel.com>
    Cc: <lizefan@huawei.com>
    Cc: <luto@amacapital.net>
    Cc: <oleg@redhat.com>
    Link: http://lkml.kernel.org/r/1424929779-13174-1-git-send-email-wangnan0@huawei.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 13a0dfcedbaa682bbb720685778185aead8ce996
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Mar 19 14:07:45 2018 +0300

    staging: ncpfs: memory corruption in ncp_read_kernel()
    
    commit 4c41aa24baa4ed338241d05494f2c595c885af8f upstream.
    
    If the server is malicious then *bytes_read could be larger than the
    size of the "target" buffer.  It would lead to memory corruption when we
    do the memcpy().
    
    Reported-by: Dr Silvio Cesare of InfoSect <Silvio Cesare <silvio.cesare@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [carnil: backport to 4.9: Files renamed from drivers/staging/ncpfs/ncplib_kernel.c
     to fs/ncpfs/ncplib_kernel.c]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c2f377300d828234a16a6dc35402bc313bb15bed
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 21 16:45:53 2018 +0100

    drm: udl: Properly check framebuffer mmap offsets
    
    commit 3b82a4db8eaccce735dffd50b4d4e1578099b8e8 upstream.
    
    The memmap options sent to the udl framebuffer driver were not being
    checked for all sets of possible crazy values.  Fix this up by properly
    bounding the allowed values.
    
    Reported-by: Eyal Itkin <eyalit@checkpoint.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180321154553.GA18454@kroah.com
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 290e29104bf6863d75a8049e501e47815665d39d
Author: Seunghun Han <kkamagui@gmail.com>
Date:   Tue Mar 6 15:21:43 2018 +0100

    x86/MCE: Serialize sysfs changes
    
    commit b3b7c4795ccab5be71f080774c45bbbcc75c2aaf upstream.
    
    The check_interval file in
    
      /sys/devices/system/machinecheck/machinecheck<cpu number>
    
    directory is a global timer value for MCE polling. If it is changed by one
    CPU, mce_restart() broadcasts the event to other CPUs to delete and restart
    the MCE polling timer and __mcheck_cpu_init_timer() reinitializes the
    mce_timer variable.
    
    If more than one CPU writes a specific value to the check_interval file
    concurrently, mce_timer is not protected from such concurrent accesses and
    all kinds of explosions happen. Since only root can write to those sysfs
    variables, the issue is not a big deal security-wise.
    
    However, concurrent writes to these configuration variables is void of
    reason so the proper thing to do is to serialize the access with a mutex.
    
    Boris:
    
     - Make store_int_with_restart() use device_store_ulong() to filter out
       negative intervals
     - Limit min interval to 1 second
     - Correct locking
     - Massage commit message
    
    Signed-off-by: Seunghun Han <kkamagui@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180302202706.9434-1-kkamagui@gmail.com
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c1184c59b37ed607a1193fc4fde0ffda56844bd6
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:31 2018 +0800

    scsi: libsas: fix memory leak in sas_smp_get_phy_events()
    
    commit 4a491b1ab11ca0556d2fda1ff1301e862a2d44c4 upstream.
    
    We've got a memory leak with the following producer:
    
    while true;
    do cat /sys/class/sas_phy/phy-1:0:12/invalid_dword_count >/dev/null;
    done
    
    The buffer req is allocated and not freed after we return. Fix it.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8cca49ea37415645203520bff04309c8a87f7677
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Thu Mar 22 16:17:13 2018 -0700

    hugetlbfs: check for pgoff value overflow
    
    commit 63489f8e821144000e0bdca7e65a8d1cc23a7ee7 upstream.
    
    A vma with vm_pgoff large enough to overflow a loff_t type when
    converted to a byte offset can be passed via the remap_file_pages system
    call.  The hugetlbfs mmap routine uses the byte offset to calculate
    reservations and file size.
    
    A sequence such as:
    
      mmap(0x20a00000, 0x600000, 0, 0x66033, -1, 0);
      remap_file_pages(0x20a00000, 0x600000, 0, 0x20000000000000, 0);
    
    will result in the following when task exits/file closed,
    
      kernel BUG at mm/hugetlb.c:749!
      Call Trace:
        hugetlbfs_evict_inode+0x2f/0x40
        evict+0xcb/0x190
        __dentry_kill+0xcb/0x150
        __fput+0x164/0x1e0
        task_work_run+0x84/0xa0
        exit_to_usermode_loop+0x7d/0x80
        do_syscall_64+0x18b/0x190
        entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    The overflowed pgoff value causes hugetlbfs to try to set up a mapping
    with a negative range (end < start) that leaves invalid state which
    causes the BUG.
    
    The previous overflow fix to this code was incomplete and did not take
    the remap_file_pages system call into account.
    
    [mike.kravetz@oracle.com: v3]
      Link: http://lkml.kernel.org/r/20180309002726.7248-1-mike.kravetz@oracle.com
    [akpm@linux-foundation.org: include mmdebug.h]
    [akpm@linux-foundation.org: fix -ve left shift count on sh]
    Link: http://lkml.kernel.org/r/20180308210502.15952-1-mike.kravetz@oracle.com
    Fixes: 045c7a3f53d9 ("hugetlbfs: fix offset overflow in hugetlbfs mmap")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reported-by: Nic Losby <blurbdust@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Yisheng Xie <xieyisheng1@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16:
     - Use a conditional WARN() instead of VM_WARN()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 363ed2044f82d8997e9ea8231dc1abeab4993755
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Thu Apr 13 14:56:32 2017 -0700

    hugetlbfs: fix offset overflow in hugetlbfs mmap
    
    commit 045c7a3f53d9403b62d396b6d051c4be5044cdb4 upstream.
    
    If mmap() maps a file, it can be passed an offset into the file at which
    the mapping is to start.  Offset could be a negative value when
    represented as a loff_t.  The offset plus length will be used to update
    the file size (i_size) which is also a loff_t.
    
    Validate the value of offset and offset + length to make sure they do
    not overflow and appear as negative.
    
    Found by syzcaller with commit ff8c0c53c475 ("mm/hugetlb.c: don't call
    region_abort if region_chg fails") applied.  Prior to this commit, the
    overflow would still occur but we would luckily return ENOMEM.
    
    To reproduce:
    
       mmap(0, 0x2000, 0, 0x40021, 0xffffffffffffffffULL, 0x8000000000000000ULL);
    
    Resulted in,
    
      kernel BUG at mm/hugetlb.c:742!
      Call Trace:
       hugetlbfs_evict_inode+0x80/0xa0
       evict+0x24a/0x620
       iput+0x48f/0x8c0
       dentry_unlink_inode+0x31f/0x4d0
       __dentry_kill+0x292/0x5e0
       dput+0x730/0x830
       __fput+0x438/0x720
       ____fput+0x1a/0x20
       task_work_run+0xfe/0x180
       exit_to_usermode_loop+0x133/0x150
       syscall_return_slowpath+0x184/0x1c0
       entry_SYSCALL_64_fastpath+0xab/0xad
    
    Fixes: ff8c0c53c475 ("mm/hugetlb.c: don't call region_abort if region_chg fails")
    Link: http://lkml.kernel.org/r/1491951118-30678-1-git-send-email-mike.kravetz@oracle.com
    Reported-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Acked-by: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7e6e780c399aa3831a3414f32c2aaa5a54cdb9ca
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:06:09 2018 +0100

    ALSA: seq: More protection for concurrent write and ioctl races
    
    commit 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9 upstream.
    
    This patch is an attempt for further hardening against races between
    the concurrent write and ioctls.  The previous fix d15d662e89fc
    ("ALSA: seq: Fix racy pool initializations") covered the race of the
    pool initialization at writer and the pool resize ioctl by the
    client->ioctl_mutex (CVE-2018-1000004).  However, basically this mutex
    should be applied more widely to the whole write operation for
    avoiding the unexpected pool operations by another thread.
    
    The only change outside snd_seq_write() is the additional mutex
    argument to helper functions, so that we can unlock / relock the given
    mutex temporarily during schedule() call for blocking write.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Reviewed-and-tested-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dba49ace617b78a0304e8a33a0c274e101ab3abd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:00:55 2018 +0100

    ALSA: seq: Don't allow resizing pool in use
    
    commit d85739367c6d56e475c281945c68fdb05ca74b4c upstream.
    
    This is a fix for a (sort of) fallout in the recent commit
    d15d662e89fc ("ALSA: seq: Fix racy pool initializations") for
    CVE-2018-1000004.
    As the pool resize deletes the existing cells, it may lead to a race
    when another thread is writing concurrently, eventually resulting a
    UAF.
    
    A simple workaround is not to allow the pool resizing when the pool is
    in use.  It's an invalid behavior in anyway.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1786e202fe5a52fe6d4026b9e40c6a824efce148
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 12 15:20:51 2018 +0100

    ALSA: seq: Fix racy pool initializations
    
    commit d15d662e89fc667b90cd294b0eb45694e33144da upstream.
    
    ALSA sequencer core initializes the event pool on demand by invoking
    snd_seq_pool_init() when the first write happens and the pool is
    empty.  Meanwhile user can reset the pool size manually via ioctl
    concurrently, and this may lead to UAF or out-of-bound accesses since
    the function tries to vmalloc / vfree the buffer.
    
    A simple fix is to just wrap the snd_seq_pool_init() call with the
    recently introduced client->ioctl_mutex; as the calls for
    snd_seq_pool_init() from other side are always protected with this
    mutex, we can avoid the race.
    
    Reported-by: 范龙飞 <long7573@126.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b57ed0f08e1ef7bb138f92f71f143e03a5d52136
Author: Peter Malone <peter.malone@gmail.com>
Date:   Wed Mar 7 14:00:34 2018 +0100

    fbdev: Fixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in sbusfb_ioctl_helper().
    
    commit 250c6c49e3b68756b14983c076183568636e2bde upstream.
    
    Fixing arbitrary kernel leak in case FBIOGETCMAP_SPARC in
    sbusfb_ioctl_helper().
    
    'index' is defined as an int in sbusfb_ioctl_helper().
    We retrieve this from the user:
    if (get_user(index, &c->index) ||
        __get_user(count, &c->count) ||
        __get_user(ured, &c->red) ||
        __get_user(ugreen, &c->green) ||
        __get_user(ublue, &c->blue))
           return -EFAULT;
    
    and then we use 'index' in the following way:
    red = cmap->red[index + i] >> 8;
    green = cmap->green[index + i] >> 8;
    blue = cmap->blue[index + i] >> 8;
    
    This is a classic information leak vulnerability. 'index' should be
    an unsigned int, given its usage above.
    
    This patch is straight-forward; it changes 'index' to unsigned int
    in two switch-cases: FBIOGETCMAP_SPARC && FBIOPUTCMAP_SPARC.
    
    This patch fixes CVE-2018-6412.
    
    Signed-off-by: Peter Malone <peter.malone@gmail.com>
    Acked-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ca566c761ec34bb6bce3a65d1a3688818f29b64f
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Feb 9 17:35:23 2018 +0300

    sctp: verify size of a new chunk in _sctp_make_chunk()
    
    commit 07f2c7ab6f8d0a7e7c5764c4e6cc9c52951b9d9c upstream.
    
    When SCTP makes INIT or INIT_ACK packet the total chunk length
    can exceed SCTP_MAX_CHUNK_LEN which leads to kernel panic when
    transmitting these packets, e.g. the crash on sending INIT_ACK:
    
    [  597.804948] skbuff: skb_over_panic: text:00000000ffae06e4 len:120168
                   put:120156 head:000000007aa47635 data:00000000d991c2de
                   tail:0x1d640 end:0xfec0 dev:<NULL>
    ...
    [  597.976970] ------------[ cut here ]------------
    [  598.033408] kernel BUG at net/core/skbuff.c:104!
    [  600.314841] Call Trace:
    [  600.345829]  <IRQ>
    [  600.371639]  ? sctp_packet_transmit+0x2095/0x26d0 [sctp]
    [  600.436934]  skb_put+0x16c/0x200
    [  600.477295]  sctp_packet_transmit+0x2095/0x26d0 [sctp]
    [  600.540630]  ? sctp_packet_config+0x890/0x890 [sctp]
    [  600.601781]  ? __sctp_packet_append_chunk+0x3b4/0xd00 [sctp]
    [  600.671356]  ? sctp_cmp_addr_exact+0x3f/0x90 [sctp]
    [  600.731482]  sctp_outq_flush+0x663/0x30d0 [sctp]
    [  600.788565]  ? sctp_make_init+0xbf0/0xbf0 [sctp]
    [  600.845555]  ? sctp_check_transmitted+0x18f0/0x18f0 [sctp]
    [  600.912945]  ? sctp_outq_tail+0x631/0x9d0 [sctp]
    [  600.969936]  sctp_cmd_interpreter.isra.22+0x3be1/0x5cb0 [sctp]
    [  601.041593]  ? sctp_sf_do_5_1B_init+0x85f/0xc30 [sctp]
    [  601.104837]  ? sctp_generate_t1_cookie_event+0x20/0x20 [sctp]
    [  601.175436]  ? sctp_eat_data+0x1710/0x1710 [sctp]
    [  601.233575]  sctp_do_sm+0x182/0x560 [sctp]
    [  601.284328]  ? sctp_has_association+0x70/0x70 [sctp]
    [  601.345586]  ? sctp_rcv+0xef4/0x32f0 [sctp]
    [  601.397478]  ? sctp6_rcv+0xa/0x20 [sctp]
    ...
    
    Here the chunk size for INIT_ACK packet becomes too big, mostly
    because of the state cookie (INIT packet has large size with
    many address parameters), plus additional server parameters.
    
    Later this chunk causes the panic in skb_put_data():
    
      skb_packet_transmit()
          sctp_packet_pack()
              skb_put_data(nskb, chunk->skb->data, chunk->skb->len);
    
    'nskb' (head skb) was previously allocated with packet->size
    from u16 'chunk->chunk_hdr->length'.
    
    As suggested by Marcelo we should check the chunk's length in
    _sctp_make_chunk() before trying to allocate skb for it and
    discard a chunk if its size bigger than SCTP_MAX_CHUNK_LEN.
    
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leinter@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16:
     - Keep using WORD_ROUND() instead of SCTP_PAD4()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e86c8c8cdf47ce06f29a080f9ab9ee8eee71b374
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Tue Mar 6 22:57:01 2018 +0300

    dccp: check sk for closed state in dccp_sendmsg()
    
    commit 67f93df79aeefc3add4e4b31a752600f834236e2 upstream.
    
    dccp_disconnect() sets 'dp->dccps_hc_tx_ccid' tx handler to NULL,
    therefore if DCCP socket is disconnected and dccp_sendmsg() is
    called after it, it will cause a NULL pointer dereference in
    dccp_write_xmit().
    
    This crash and the reproducer was reported by syzbot. Looks like
    it is reproduced if commit 69c64866ce07 ("dccp: CVE-2017-8824:
    use-after-free in DCCP code") is applied.
    
    Reported-by: syzbot+f99ab3887ab65d70f816@syzkaller.appspotmail.com
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 73cc97df78e4fbc22a34b0eeedbaaf30b47d7ee5
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Tue Apr 24 11:31:44 2018 -0400

    ext4: fix bitmap position validation
    
    commit 22be37acce25d66ecf6403fc8f44df9c5ded2372 upstream.
    
    Currently in ext4_valid_block_bitmap() we expect the bitmap to be
    positioned anywhere between 0 and s_blocksize clusters, but that's
    wrong because the bitmap can be placed anywhere in the block group. This
    causes false positives when validating bitmaps on perfectly valid file
    system layouts. Fix it by checking whether the bitmap is within the group
    boundary.
    
    The problem can be reproduced using the following
    
    mkfs -t ext3 -E stride=256 /dev/vdb1
    mount /dev/vdb1 /mnt/test
    cd /mnt/test
    wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.16.3.tar.xz
    tar xf linux-4.16.3.tar.xz
    
    This will result in the warnings in the logs
    
    EXT4-fs error (device vdb1): ext4_validate_block_bitmap:399: comm tar: bg 84: block 2774529: invalid block bitmap
    
    [ Changed slightly for clarity and to not drop a overflow test -- TYT ]
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reported-by: Ilya Dryomov <idryomov@gmail.com>
    Fixes: 7dac4a1726a9 ("ext4: add validity checks for bitmap block numbers")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 91a9c8e8ac7da66d7159fd758464808d2a1c979a
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Mar 26 23:54:10 2018 -0400

    ext4: add validity checks for bitmap block numbers
    
    commit 7dac4a1726a9c64a517d595c40e95e2d0d135f6f upstream.
    
    An privileged attacker can cause a crash by mounting a crafted ext4
    image which triggers a out-of-bounds read in the function
    ext4_valid_block_bitmap() in fs/ext4/balloc.c.
    
    This issue has been assigned CVE-2018-1093.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=199181
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1560782
    Reported-by: Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    [bwh: Backported to 3.16:
     - In ext4_read_block_bitmap_nowait() and ext4_read_inode_bitmap(),
       return NULL on error
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 43ef70b328eddc46938878a270895a9ff7b51059
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 29 21:56:09 2018 -0400

    ext4: fail ext4_iget for root directory if unallocated
    
    commit 8e4b5eae5decd9dfe5a4ee369c22028f90ab4c44 upstream.
    
    If the root directory has an i_links_count of zero, then when the file
    system is mounted, then when ext4_fill_super() notices the problem and
    tries to call iput() the root directory in the error return path,
    ext4_evict_inode() will try to free the inode on disk, before all of
    the file system structures are set up, and this will result in an OOPS
    caused by a NULL pointer dereference.
    
    This issue has been assigned CVE-2018-1092.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199179
    https://bugzilla.redhat.com/show_bug.cgi?id=1560777
    
    Reported-by: Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    [bwh: Backported to 3.16: use EIO instead of EFSCORRUPTED]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e6c4cf2c7cbd5fd81f9a323c30ee0e3e1d2cae4b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 20 12:16:59 2018 -0700

    kvm/x86: fix icebp instruction handling
    
    commit 32d43cd391bacb5f0814c2624399a5dad3501d09 upstream.
    
    The undocumented 'icebp' instruction (aka 'int1') works pretty much like
    'int3' in the absense of in-circuit probing equipment (except,
    obviously, that it raises #DB instead of raising #BP), and is used by
    some validation test-suites as such.
    
    But Andy Lutomirski noticed that his test suite acted differently in kvm
    than on bare hardware.
    
    The reason is that kvm used an inexact test for the icebp instruction:
    it just assumed that an all-zero VM exit qualification value meant that
    the VM exit was due to icebp.
    
    That is not unlike the guess that do_debug() does for the actual
    exception handling case, but it's purely a heuristic, not an absolute
    rule.  do_debug() does it because it wants to ascribe _some_ reasons to
    the #DB that happened, and an empty %dr6 value means that 'icebp' is the
    most likely casue and we have no better information.
    
    But kvm can just do it right, because unlike the do_debug() case, kvm
    actually sees the real reason for the #DB in the VM-exit interruption
    information field.
    
    So instead of relying on an inexact heuristic, just use the actual VM
    exit information that says "it was 'icebp'".
    
    Right now the 'icebp' instruction isn't technically documented by Intel,
    but that will hopefully change.  The special "privileged software
    exception" information _is_ actually mentioned in the Intel SDM, even
    though the cause of it isn't enumerated.
    
    Reported-by: Andy Lutomirski <luto@kernel.org>
    Tested-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [carnil: Backport to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 68edcec690a62dfc46c4061dab83c08573427e6b
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Mar 8 12:54:19 2018 +0100

    netfilter: ebtables: fix erroneous reject of last rule
    
    commit 932909d9b28d27e807ff8eecb68c7748f6701628 upstream.
    
    The last rule in the blob has next_entry offset that is same as total size.
    This made "ebtables32 -A OUTPUT -d de:ad:be:ef:01:02" fail on 64 bit kernel.
    
    Fixes: b71812168571fa ("netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 71a00fe67dde7d2ed206a0db2a67f29fad90cc72
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 01:24:15 2018 +0100

    netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets
    
    commit b71812168571fa55e44cdd0254471331b9c4c4c6 upstream.
    
    We need to make sure the offsets are not out of range of the
    total size.
    Also check that they are in ascending order.
    
    The WARN_ON triggered by syzkaller (it sets panic_on_warn) is
    changed to also bail out, no point in continuing parsing.
    
    Briefly tested with simple ruleset of
    -A INPUT --limit 1/s' --log
    plus jump to custom chains using 32bit ebtables binary.
    
    Reported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 36a0db05310fbee38b59fed7e1306c1a095f8c8f
Author: Dan Aloni <dan@kernelim.com>
Date:   Sat Jan 27 22:07:41 2018 +0200

    cifs: empty TargetInfo leads to crash on recovery
    
    commit cabfb3680f78981d26c078a26e5c748531257ebb upstream.
    
    [ resend from Oct 20, 2014, see [1] ]
    
    A trivially patched Samba server (see [2] [3]) can cause a remote kernel
    crash (see [4]) in a client's CIFS kernel module upon session recovery,
    under kernels prior to v4.11.  The server patch can made by a single
    source line modification - returning an empty TargetInfo in an NTLMSSP
    setup negotiation response.
    
    To reproduce at the client side, the CIFS client can be instructed to
    mount with SMB 2.0, on a share without user/password credentials, e.g:
    
         mount -t cifs //[host]/[share] -o vers=2.0,guest [mountpoint]
    
    (It may also reproduce with credentials, but I used a simpler
     configuration for the reproduction)
    
    An demo patch to Samba 4.7.4 is provided in the links provided.
    
    As for the client crash itself:
    
    When the session is recovered (after a server start/stop, for example),
    the following condition turns out to be true:
    
         ses->auth_key.len != 0  &&  ses->auth_key.response == NULL
    
    This will cause the following memcpy() in setup_ntlmv2_rsp() to GPF,
    because tiblob == NULL and tilen != 0 (these are the old auth_key values):
    
         memcpy(ses->auth_key.response + baselen, tiblob, tilen);
    
    By bisecting, upstream commit cabfb3680f78 ("CIFS: Enable encryption
    during session setup phase") from v4.11 have fixed this issue.
    
    According to my tests, LTS kernels versions 4.4.x and 4.9.x are affected.
    The patch below applies for 4.4.x however a similar patch can be applied
    to 4.9.x and older kernels.
    
    Signed-off-by: Dan Aloni <dan@kernelim.com>
    CC: Steve French <sfrench@samba.org>
    CC: linux-cifs@vger.kernel.org
    CC: linux-kernel@vger.kernel.org
    
    [1]
    https://patchwork.kernel.org/patch/5106391/
    
    [2] (temporary url)
    http://copr-dist-git.fedorainfracloud.org/cgit/alonid/samba-for-client-crash-repro/samba.git/tree/0001-Patch.patch?id=43229c84abe008bfc11aa86f5bacb03a1e54f88c
    
    [3] (temporary url)
    https://copr.fedorainfracloud.org/coprs/alonid/samba-for-client-crash-repro/
    
    [4]
    [ 3414.518134] BUG: unable to handle kernel NULL pointer dereference at           (null)
    [ 3414.518200] IP: memcpy_erms+0x6/0x10
    [ 3414.518227] PGD 0
    
    [ 3414.518252] Oops: 0000 [#1] SMP
    [ 3414.518272] Modules linked in: arc4 md4 cifs rpcsec_gss_krb5 nfsv4 dns_resolver nfs fscache ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_nat nf_conntrack_ipv6 nf_defrag_ipv6 nf_nat_ipv6 ip6table_mangle ip6table_security ip6table_raw iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack iptable_mangle iptable_security iptable_raw ebtable_filter ebtables ip6table_filter ip6_tables snd_hda_codec_generic ppdev snd_hda_intel snd_hda_codec crct10dif_pclmul crc32_pclmul snd_hwdep snd_hda_core ghash_clmulni_intel snd_seq snd_seq_device snd_pcm joydev parport_pc tpm_tis parport tpm_tis_core tpm snd_timer snd soundcore qemu_fw_cfg virtio_balloon i2c_piix4 nfsd auth_rpcgss nfs_acl lockd grace sunrpc xfs libcrc32c
    [ 3414.518708]  virtio_blk virtio_console virtio_net qxl drm_kms_helper ttm crc32c_intel drm ata_generic nvme serio_raw nvme_core virtio_pci virtio_ring virtio pata_acpi
    [ 3414.518803] CPU: 3 PID: 1697 Comm: kworker/3:1 Not tainted 4.10.0-rc6-dan-00097-ge765a3d89ede #20
    [ 3414.518852] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-2.fc27 04/01/2014
    [ 3414.518927] Workqueue: cifsiod smb2_reconnect_server [cifs]
    [ 3414.518960] task: ffff8cc6764a4000 task.stack: ffff9bc548808000
    [ 3414.518997] RIP: 0010:memcpy_erms+0x6/0x10
    [ 3414.519021] RSP: 0018:ffff9bc54880bbc8 EFLAGS: 00010296
    [ 3414.519051] RAX: ffff8cc6ba00d8dc RBX: ffff8cc676190400 RCX: 0000000000000010
    [ 3414.519091] RDX: 0000000000000010 RSI: 0000000000000000 RDI: ffff8cc6ba00d8dc
    [ 3414.519130] RBP: ffff9bc54880bc30 R08: ffff9bc54880bb58 R09: ffff9bc54880bb58
    [ 3414.519170] R10: 000000004619520e R11: 00000000f46cd8cf R12: 0000000000000000
    [ 3414.519209] R13: 0000000000000000 R14: ffff8cc6ba00d8a0 R15: 0000000000000010
    [ 3414.519250] FS:  0000000000000000(0000) GS:ffff8cc6bfd80000(0000) knlGS:0000000000000000
    [ 3414.519314] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 3414.519347] CR2: 0000000000000000 CR3: 000000007992a000 CR4: 00000000003406e0
    [ 3414.519392] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 3414.519431] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 3414.519470] Call Trace:
    [ 3414.519510]  ? setup_ntlmv2_rsp+0x124/0xa10 [cifs]
    [ 3414.519553]  build_ntlmssp_auth_blob+0x36/0x310 [cifs]
    [ 3414.519597]  SMB2_sess_auth_rawntlmssp_authenticate+0xc7/0x300 [cifs]
    [ 3414.519646]  SMB2_sess_setup+0x9a/0x140 [cifs]
    [ 3414.519685]  cifs_setup_session+0x78/0x100 [cifs]
    [ 3414.519722]  ? cifs_negotiate_protocol+0x84/0xd0 [cifs]
    [ 3414.519763]  smb2_reconnect+0x308/0x3e0 [cifs]
    [ 3414.519793]  ? __internal_add_timer+0x1f/0x60
    [ 3414.519831]  smb2_reconnect_server+0x187/0x260 [cifs]
    [ 3414.519863]  process_one_work+0x19e/0x440
    [ 3414.519887]  worker_thread+0x4e/0x4a0
    [ 3414.519910]  ? process_one_work+0x440/0x440
    [ 3414.519936]  kthread+0x11e/0x140
    [ 3414.520493]  ? kthread_park+0x90/0x90
    [ 3414.520989]  ret_from_fork+0x2c/0x40
    [ 3414.521450] Code: 78 ff ff ff 90 eb 1e 0f 1f 00 48 89 f8 48 89 d1 48 c1 e9 03 83 e2 07 f3 48 a5 89 d1 f3 a4 c3 66 0f 1f 44 00 00 48 89 f8 48 89 d1 <f3> a4 c3 0f 1f 80 00 00 00 00 48 89 f8 48 83 fa 20 72 7e 40 38
    [ 3414.522488] RIP: memcpy_erms+0x6/0x10 RSP: ffff9bc54880bbc8
    [ 3414.522964] CR2: 0000000000000000
    [ 3414.526127] ---[ end trace bbe4aa1e45cc6c17 ]---
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1f0db424c8770c7b31296d5c66a52fffdec1d24c
Author: Yunlei He <heyunlei@huawei.com>
Date:   Thu Jun 1 16:43:51 2017 +0800

    f2fs: fix a panic caused by NULL flush_cmd_control
    
    commit d4fdf8ba0e5808ba9ad6b44337783bd9935e0982 upstream.
    
    Mount fs with option noflush_merge, boot failed for illegal address
    fcc in function f2fs_issue_flush:
    
            if (!test_opt(sbi, FLUSH_MERGE)) {
                    ret = submit_flush_wait(sbi);
                    atomic_inc(&fcc->issued_flush);   ->  Here, fcc illegal
                    return ret;
            }
    
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bf495b9c234de4cea3165fda15fc693043a659d5
Author: Jason Yan <yanaijie@huawei.com>
Date:   Wed Sep 6 17:15:05 2017 +0800

    scsi: libsas: remove the numbering for each event enum
    
    commit 0d78f969b10f27e0be34210d482a01e1ee92994c upstream.
    
    Numbering for each event enum makes no sense. Remove the numbering so
    that we don't have to calculate the number by hand every time.
    
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: Johannes Thumshirn <jthumshirn@suse.de>
    CC: Ewan Milne <emilne@redhat.com>
    CC: Christoph Hellwig <hch@lst.de>
    CC: Tomas Henzl <thenzl@redhat.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d9b4d618a22bf30a1c82dffc5c7cb3b1abda48dc
Author: alex chen <alex.chen@huawei.com>
Date:   Wed Nov 15 17:31:48 2017 -0800

    ocfs2: subsystem.su_mutex is required while accessing the item->ci_parent
    
    commit 853bc26a7ea39e354b9f8889ae7ad1492ffa28d2 upstream.
    
    The subsystem.su_mutex is required while accessing the item->ci_parent,
    otherwise, NULL pointer dereference to the item->ci_parent will be
    triggered in the following situation:
    
    add node                     delete node
    sys_write
     vfs_write
      configfs_write_file
       o2nm_node_store
        o2nm_node_local_write
                                 do_rmdir
                                  vfs_rmdir
                                   configfs_rmdir
                                    mutex_lock(&subsys->su_mutex);
                                    unlink_obj
                                     item->ci_group = NULL;
                                     item->ci_parent = NULL;
             to_o2nm_cluster_from_node
              node->nd_item.ci_parent->ci_parent
              BUG since of NULL pointer dereference to nd_item.ci_parent
    
    Moreover, the o2nm_cluster also should be protected by the
    subsystem.su_mutex.
    
    [alex.chen@huawei.com: v2]
      Link: http://lkml.kernel.org/r/59EEAA69.9080703@huawei.com
    Link: http://lkml.kernel.org/r/59E9B36A.10700@huawei.com
    Signed-off-by: Alex Chen <alex.chen@huawei.com>
    Reviewed-by: Jun Piao <piaojun@huawei.com>
    Reviewed-by: Joseph Qi <jiangqi903@gmail.com>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 302212255813b55c0daeb8f15bcf25ff542e36cf
Author: chenjie <chenjie6@huawei.com>
Date:   Wed Nov 29 16:10:54 2017 -0800

    mm/madvise.c: fix madvise() infinite loop under special circumstances
    
    commit 6ea8d958a2c95a1d514015d4e29ba21a8c0a1a91 upstream.
    
    MADVISE_WILLNEED has always been a noop for DAX (formerly XIP) mappings.
    Unfortunately madvise_willneed() doesn't communicate this information
    properly to the generic madvise syscall implementation.  The calling
    convention is quite subtle there.  madvise_vma() is supposed to either
    return an error or update &prev otherwise the main loop will never
    advance to the next vma and it will keep looping for ever without a way
    to get out of the kernel.
    
    It seems this has been broken since introduction.  Nobody has noticed
    because nobody seems to be using MADVISE_WILLNEED on these DAX mappings.
    
    [mhocko@suse.com: rewrite changelog]
    Link: http://lkml.kernel.org/r/20171127115318.911-1-guoxuenan@huawei.com
    Fixes: fe77ba6f4f97 ("[PATCH] xip: madvice/fadvice: execute in place")
    Signed-off-by: chenjie <chenjie6@huawei.com>
    Signed-off-by: guoxuenan <guoxuenan@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: zhangyi (F) <yi.zhang@huawei.com>
    Cc: Miao Xie <miaoxie@huawei.com>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Shaohua Li <shli@fb.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Carsten Otte <cotte@de.ibm.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 089f7761b91260a1c5aaa6acb70914aa93721c72
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Tue Sep 26 17:10:21 2017 -0400

    media: dvb-usb-v2: lmedm04: move ts2020 attach to dm04_lme2510_tuner
    
    commit 7bf7a7116ed313c601307f7e585419369926ab05 upstream.
    
    When the tuner was split from m88rs2000 the attach function is in wrong
    place.
    
    Move to dm04_lme2510_tuner to trap errors on failure and removing
    a call to lme_coldreset.
    
    Prevents driver starting up without any tuner connected.
    
    Fixes to trap for ts2020 fail.
    LME2510(C): FE Found M88RS2000
    ts2020: probe of 0-0060 failed with error -11
    ...
    LME2510(C): TUN Found RS2000 tuner
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] PREEMPT SMP KASAN
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c8f3c2e5c507a41f303bbd6e1beeeb830c327881
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Tue Sep 26 17:10:20 2017 -0400

    media: dvb-usb-v2: lmedm04: Improve logic checking of warm start
    
    commit 3d932ee27e852e4904647f15b64dedca51187ad7 upstream.
    
    Warm start has no check as whether a genuine device has
    connected and proceeds to next execution path.
    
    Check device should read 0x47 at offset of 2 on USB descriptor read
    and it is the amount requested of 6 bytes.
    
    Fix for
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access as
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3738d7b1da4d6f306ca6d5a6a96dd70c36f53f94
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Dec 19 06:20:57 2014 +0000

    Bluetooth: hidp_connection_add() unsafe use of l2cap_pi()
    
    commit 51bda2bca53b265715ca1852528f38dc67429d9a upstream.
    
    it's OK after we'd verified the sockets, but not before that.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 27d2d1dcad1852a8ddd4bf2068fde34d49f05bfe
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue May 26 17:30:17 2015 -0600

    sctp: Fix mangled IPv4 addresses on a IPv6 listening socket
    
    commit 9302d7bb0c5cd46be5706859301f18c137b2439f upstream.
    
    sctp_v4_map_v6 was subtly writing and reading from members
    of a union in a way the clobbered data it needed to read before
    it read it.
    
    Zeroing the v6 flowinfo overwrites the v4 sin_addr with 0, meaning
    that every place that calls sctp_v4_map_v6 gets ::ffff:0.0.0.0 as the
    result.
    
    Reorder things to guarantee correct behaviour no matter what the
    union layout is.
    
    This impacts user space clients that open an IPv6 SCTP socket and
    receive IPv4 connections. Prior to 299ee user space would see a
    sockaddr with AF_INET and a correct address, after 299ee the sockaddr
    is AF_INET6, but the address is wrong.
    
    Fixes: 299ee123e198 (sctp: Fixup v4mapped behaviour to comply with Sock API)
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 904667f7fbb8c30d51c9b03f39c2d68d2bb301f2
Author: Borislav Petkov <bp@suse.de>
Date:   Sun Dec 18 17:44:13 2016 +0100

    x86/microcode/AMD: Do not load when running on a hypervisor
    
    commit a15a753539eca8ba243d576f02e7ca9c4b7d7042 upstream.
    
    Doing so is completely void of sense for multiple reasons so prevent
    it. Set dis_ucode_ldr to true and thus disable the microcode loader by
    default to address xen pv guests which execute the AP path but not the
    BSP path.
    
    By having it turned off by default, the APs won't run into the loader
    either.
    
    Also, check CPUID(1).ECX[31] which hypervisors set. Well almost, not the
    xen pv one. That one gets the aforementioned "fix".
    
    Also, improve the detection method by caching the final decision whether
    to continue loading in dis_ucode_ldr and do it once on the BSP. The APs
    then simply test that value.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Juergen Gross <jgross@suse.com>
    Tested-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Acked-by: Juergen Gross <jgross@suse.com>
    Link: http://lkml.kernel.org/r/20161218164414.9649-4-bp@alien8.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Rolf Neugebauer <rolf.neugebauer@docker.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Early microcode loader is optional, so only set dis_ucode_ldr by default
       if it is enabled
     - Adjust context, filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2616097c3e65568a4a7c4b9437422eef60c526dd
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Nov 5 17:28:06 2014 +0100

    x86, microcode: Fix accessing dis_ucode_ldr on 32-bit
    
    commit 85be07c32496dc264661308e4d9d4e9ccaff8072 upstream.
    
    We should be accessing it through a pointer, like on the BSP.
    
    Tested-by: Richard Hendershot <rshendershot@mchsi.com>
    Fixes: 65cef1311d5d ("x86, microcode: Add a disable chicken bit")
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 778e5ae8c900c4d781b6b510cede9b0970867dd0
Author: Julien Gomes <julien@arista.com>
Date:   Wed Oct 25 11:50:50 2017 -0700

    tun: allow positive return values on dev_get_valid_name() call
    
    commit 5c25f65fd1e42685f7ccd80e0621829c105785d9 upstream.
    
    If the name argument of dev_get_valid_name() contains "%d", it will try
    to assign it a unit number in __dev__alloc_name() and return either the
    unit number (>= 0) or an error code (< 0).
    Considering positive values as error values prevent tun device creations
    relying this mechanism, therefor we should only consider negative values
    as errors here.
    
    Signed-off-by: Julien Gomes <julien@arista.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f41e722d6da18417e939f7261be8783978b570e3
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Fri Apr 3 23:25:08 2015 +0100

    MIPS: Normalise code flow in the CpU exception handler
    
    commit 27e28e8ec47a5ce335ebf25d34ca356c80635908 upstream.
    
    Changes applied to `do_cpu' over time reduced the use of the SIGILL
    issued with `force_sig' at the end to a single CU3 case only in the
    switch statement there.  Move that `force_sig' call over to right where
    required then and toss out the pile of gotos now not needed to skip over
    the call, replacing them with regular breaks out of the switch.
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/9683/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
