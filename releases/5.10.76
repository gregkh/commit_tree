commit 378e85d1aeb5c93db43f2089630ec40c7385bd54
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 27 09:56:57 2021 +0200

    Linux 5.10.76
    
    Link: https://lore.kernel.org/r/20211025190956.374447057@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfa79faf7e1ffa93e76461c7716864377bff76bd
Author: Fabien Dessenne <fabien.dessenne@foss.st.com>
Date:   Fri Oct 8 14:25:17 2021 +0200

    pinctrl: stm32: use valid pin identifier in stm32_pinctrl_resume()
    
    commit c370bb474016ab9edfdabd7c08a88dd13a71ddbd upstream.
    
    When resuming from low power, the driver attempts to restore the
    configuration of some pins. This is done by a call to:
      stm32_pinctrl_restore_gpio_regs(struct stm32_pinctrl *pctl, u32 pin)
    where 'pin' must be a valid pin value (i.e. matching some 'groups->pin').
    Fix the current implementation which uses some wrong 'pin' value.
    
    Fixes: e2f3cf18c3e2 ("pinctrl: stm32: add suspend/resume management")
    Signed-off-by: Fabien Dessenne <fabien.dessenne@foss.st.com>
    Link: https://lore.kernel.org/r/20211008122517.617633-1-fabien.dessenne@foss.st.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c56c801391c3e138baffa782d31957f679f94c80
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Wed Sep 8 19:25:59 2021 +0100

    ARM: 9122/1: select HAVE_FUTEX_CMPXCHG
    
    commit 9d417cbe36eee7afdd85c2e871685f8dab7c2dba upstream.
    
    tglx notes:
      This function [futex_detect_cmpxchg] is only needed when an
      architecture has to runtime discover whether the CPU supports it or
      not.  ARM has unconditional support for this, so the obvious thing to
      do is the below.
    
    Fixes linkage failure from Clang randconfigs:
    kernel/futex.o:(.text.fixup+0x5c): relocation truncated to fit: R_ARM_JUMP24 against `.init.text'
    and boot failures for CONFIG_THUMB2_KERNEL.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/325
    
    Comments from Nick Desaulniers:
    
     See-also: 03b8c7b623c8 ("futex: Allow architectures to skip
     futex_atomic_cmpxchg_inatomic() test")
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org # v3.14+
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d088db8637bb705a987ca5a497c081089ce3ccb1
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Mon Oct 25 17:06:19 2021 +0100

    selftests: bpf: fix backported ASSERT_FALSE
    
    Commit 183d9ebd449c ("selftests/bpf: Fix core_reloc test runner") causes
    builds of selftests/bpf to fail on 5.10.y since the branch doesn't have the
    ASSERT_FALSE macro yet. Replace ASSERT_FALSE with ASSERT_EQ.
    
    Fixes: 183d9ebd449c ("selftests/bpf: Fix core_reloc test runner")
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a845fa00fd730ae3b48e87b11794c2270a7c9ac
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Wed Sep 22 09:54:49 2021 +0300

    e1000e: Separate TGP board type from SPT
    
    [ Upstream commit 280db5d420090a24e4e41f9ddcbf37920a598572 ]
    
    We have the same LAN controller on different PCHs. Separate TGP board
    type from SPT which will allow for specific fixes to be applied for
    TGP platforms.
    
    Suggested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Tested-by: Mark Pearson <markpearson@lenovo.com>
    Tested-by: Nechama Kraus <nechamax.kraus@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 021b6d11e590bbb2b8f243b699204b48ea3857f4
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Oct 18 15:44:12 2021 -0400

    tracing: Have all levels of checks prevent recursion
    
    commit ed65df63a39a3f6ed04f7258de8b6789e5021c18 upstream.
    
    While writing an email explaining the "bit = 0" logic for a discussion on
    making ftrace_test_recursion_trylock() disable preemption, I discovered a
    path that makes the "not do the logic if bit is zero" unsafe.
    
    The recursion logic is done in hot paths like the function tracer. Thus,
    any code executed causes noticeable overhead. Thus, tricks are done to try
    to limit the amount of code executed. This included the recursion testing
    logic.
    
    Having recursion testing is important, as there are many paths that can
    end up in an infinite recursion cycle when tracing every function in the
    kernel. Thus protection is needed to prevent that from happening.
    
    Because it is OK to recurse due to different running context levels (e.g.
    an interrupt preempts a trace, and then a trace occurs in the interrupt
    handler), a set of bits are used to know which context one is in (normal,
    softirq, irq and NMI). If a recursion occurs in the same level, it is
    prevented*.
    
    Then there are infrastructure levels of recursion as well. When more than
    one callback is attached to the same function to trace, it calls a loop
    function to iterate over all the callbacks. Both the callbacks and the
    loop function have recursion protection. The callbacks use the
    "ftrace_test_recursion_trylock()" which has a "function" set of context
    bits to test, and the loop function calls the internal
    trace_test_and_set_recursion() directly, with an "internal" set of bits.
    
    If an architecture does not implement all the features supported by ftrace
    then the callbacks are never called directly, and the loop function is
    called instead, which will implement the features of ftrace.
    
    Since both the loop function and the callbacks do recursion protection, it
    was seemed unnecessary to do it in both locations. Thus, a trick was made
    to have the internal set of recursion bits at a more significant bit
    location than the function bits. Then, if any of the higher bits were set,
    the logic of the function bits could be skipped, as any new recursion
    would first have to go through the loop function.
    
    This is true for architectures that do not support all the ftrace
    features, because all functions being traced must first go through the
    loop function before going to the callbacks. But this is not true for
    architectures that support all the ftrace features. That's because the
    loop function could be called due to two callbacks attached to the same
    function, but then a recursion function inside the callback could be
    called that does not share any other callback, and it will be called
    directly.
    
    i.e.
    
     traced_function_1: [ more than one callback tracing it ]
       call loop_func
    
     loop_func:
       trace_recursion set internal bit
       call callback
    
     callback:
       trace_recursion [ skipped because internal bit is set, return 0 ]
       call traced_function_2
    
     traced_function_2: [ only traced by above callback ]
       call callback
    
     callback:
       trace_recursion [ skipped because internal bit is set, return 0 ]
       call traced_function_2
    
     [ wash, rinse, repeat, BOOM! out of shampoo! ]
    
    Thus, the "bit == 0 skip" trick is not safe, unless the loop function is
    call for all functions.
    
    Since we want to encourage architectures to implement all ftrace features,
    having them slow down due to this extra logic may encourage the
    maintainers to update to the latest ftrace features. And because this
    logic is only safe for them, remove it completely.
    
     [*] There is on layer of recursion that is allowed, and that is to allow
         for the transition between interrupt context (normal -> softirq ->
         irq -> NMI), because a trace may occur before the context update is
         visible to the trace recursion logic.
    
    Link: https://lore.kernel.org/all/609b565a-ed6e-a1da-f025-166691b5d994@linux.alibaba.com/
    Link: https://lkml.kernel.org/r/20211018154412.09fcad3c@gandalf.local.home
    
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "James E.J. Bottomley" <James.Bottomley@hansenpartnership.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Albert Ou <aou@eecs.berkeley.edu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Miroslav Benes <mbenes@suse.cz>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Colin Ian King <colin.king@canonical.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Jisheng Zhang <jszhang@kernel.org>
    Cc: =?utf-8?b?546L6LSH?= <yun.wang@linux.alibaba.com>
    Cc: Guo Ren <guoren@kernel.org>
    Cc: stable@vger.kernel.org
    Fixes: edc15cafcbfa3 ("tracing: Avoid unnecessary multiple recursion checks")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a0dc2e35a5d6546b1db87fe985582dadc64fe7b
Author: Yanfei Xu <yanfei.xu@windriver.com>
Date:   Sun Sep 26 12:53:13 2021 +0800

    net: mdiobus: Fix memory leak in __mdiobus_register
    
    commit ab609f25d19858513919369ff3d9a63c02cd9e2e upstream.
    
    Once device_register() failed, we should call put_device() to
    decrement reference count for cleanup. Or it will cause memory
    leak.
    
    BUG: memory leak
    unreferenced object 0xffff888114032e00 (size 256):
      comm "kworker/1:3", pid 2960, jiffies 4294943572 (age 15.920s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 08 2e 03 14 81 88 ff ff  ................
        08 2e 03 14 81 88 ff ff 90 76 65 82 ff ff ff ff  .........ve.....
      backtrace:
        [<ffffffff8265cfab>] kmalloc include/linux/slab.h:591 [inline]
        [<ffffffff8265cfab>] kzalloc include/linux/slab.h:721 [inline]
        [<ffffffff8265cfab>] device_private_init drivers/base/core.c:3203 [inline]
        [<ffffffff8265cfab>] device_add+0x89b/0xdf0 drivers/base/core.c:3253
        [<ffffffff828dd643>] __mdiobus_register+0xc3/0x450 drivers/net/phy/mdio_bus.c:537
        [<ffffffff828cb835>] __devm_mdiobus_register+0x75/0xf0 drivers/net/phy/mdio_devres.c:87
        [<ffffffff82b92a00>] ax88772_init_mdio drivers/net/usb/asix_devices.c:676 [inline]
        [<ffffffff82b92a00>] ax88772_bind+0x330/0x480 drivers/net/usb/asix_devices.c:786
        [<ffffffff82baa33f>] usbnet_probe+0x3ff/0xdf0 drivers/net/usb/usbnet.c:1745
        [<ffffffff82c36e17>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
        [<ffffffff82661d17>] call_driver_probe drivers/base/dd.c:517 [inline]
        [<ffffffff82661d17>] really_probe.part.0+0xe7/0x380 drivers/base/dd.c:596
        [<ffffffff826620bc>] really_probe drivers/base/dd.c:558 [inline]
        [<ffffffff826620bc>] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:751
        [<ffffffff826621ba>] driver_probe_device+0x2a/0x120 drivers/base/dd.c:781
        [<ffffffff82662a26>] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:898
        [<ffffffff8265eca7>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:427
        [<ffffffff826625a2>] __device_attach+0x122/0x260 drivers/base/dd.c:969
        [<ffffffff82660916>] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:487
        [<ffffffff8265cd0b>] device_add+0x5fb/0xdf0 drivers/base/core.c:3359
        [<ffffffff82c343b9>] usb_set_configuration+0x9d9/0xb90 drivers/usb/core/message.c:2170
        [<ffffffff82c4473c>] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238
    
    BUG: memory leak
    unreferenced object 0xffff888116f06900 (size 32):
      comm "kworker/0:2", pid 2670, jiffies 4294944448 (age 7.160s)
      hex dump (first 32 bytes):
        75 73 62 2d 30 30 31 3a 30 30 33 00 00 00 00 00  usb-001:003.....
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff81484516>] kstrdup+0x36/0x70 mm/util.c:60
        [<ffffffff814845a3>] kstrdup_const+0x53/0x80 mm/util.c:83
        [<ffffffff82296ba2>] kvasprintf_const+0xc2/0x110 lib/kasprintf.c:48
        [<ffffffff82358d4b>] kobject_set_name_vargs+0x3b/0xe0 lib/kobject.c:289
        [<ffffffff826575f3>] dev_set_name+0x63/0x90 drivers/base/core.c:3147
        [<ffffffff828dd63b>] __mdiobus_register+0xbb/0x450 drivers/net/phy/mdio_bus.c:535
        [<ffffffff828cb835>] __devm_mdiobus_register+0x75/0xf0 drivers/net/phy/mdio_devres.c:87
        [<ffffffff82b92a00>] ax88772_init_mdio drivers/net/usb/asix_devices.c:676 [inline]
        [<ffffffff82b92a00>] ax88772_bind+0x330/0x480 drivers/net/usb/asix_devices.c:786
        [<ffffffff82baa33f>] usbnet_probe+0x3ff/0xdf0 drivers/net/usb/usbnet.c:1745
        [<ffffffff82c36e17>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
        [<ffffffff82661d17>] call_driver_probe drivers/base/dd.c:517 [inline]
        [<ffffffff82661d17>] really_probe.part.0+0xe7/0x380 drivers/base/dd.c:596
        [<ffffffff826620bc>] really_probe drivers/base/dd.c:558 [inline]
        [<ffffffff826620bc>] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:751
        [<ffffffff826621ba>] driver_probe_device+0x2a/0x120 drivers/base/dd.c:781
        [<ffffffff82662a26>] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:898
        [<ffffffff8265eca7>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:427
        [<ffffffff826625a2>] __device_attach+0x122/0x260 drivers/base/dd.c:969
    
    Reported-by: syzbot+398e7dc692ddbbb4cfec@syzkaller.appspotmail.com
    Signed-off-by: Yanfei Xu <yanfei.xu@windriver.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfe9266213c441b2b7486aa600e151e46a8c38ba
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon Sep 27 14:39:21 2021 +0200

    bpf, test, cgroup: Use sk_{alloc,free} for test cases
    
    commit 435b08ec0094ac1e128afe6cfd0d9311a8c617a7 upstream.
    
    BPF test infra has some hacks in place which kzalloc() a socket and perform
    minimum init via sock_net_set() and sock_init_data(). As a result, the sk's
    skcd->cgroup is NULL since it didn't go through proper initialization as it
    would have been the case from sk_alloc(). Rather than re-adding a NULL test
    in sock_cgroup_ptr() just for this, use sk_{alloc,free}() pair for the test
    socket. The latter also allows to get rid of the bpf_sk_storage_free() special
    case.
    
    Fixes: 8520e224f547 ("bpf, cgroups: Fix cgroup v2 fallback on v1/v2 mixed mode")
    Fixes: b7a1848e8398 ("bpf: add BPF_PROG_TEST_RUN support for flow dissector")
    Fixes: 2cb494a36c98 ("bpf: add tests for direct packet access from CGROUP_SKB")
    Reported-by: syzbot+664b58e9a40fbb2cec71@syzkaller.appspotmail.com
    Reported-by: syzbot+33f36d0754d4c5c0e102@syzkaller.appspotmail.com
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Tested-by: syzbot+664b58e9a40fbb2cec71@syzkaller.appspotmail.com
    Tested-by: syzbot+33f36d0754d4c5c0e102@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/bpf/20210927123921.21535-2-daniel@iogearbox.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 188907c252188ac7a5ec3efcfa31dae1f47b8a20
Author: Niklas Schnelle <schnelle@linux.ibm.com>
Date:   Wed Sep 22 15:55:12 2021 +0200

    s390/pci: fix zpci_zdev_put() on reserve
    
    commit a46044a92add6a400f4dada7b943b30221f7cc80 upstream.
    
    Since commit 2a671f77ee49 ("s390/pci: fix use after free of zpci_dev")
    the reference count of a zpci_dev is incremented between
    pcibios_add_device() and pcibios_release_device() which was supposed to
    prevent the zpci_dev from being freed while the common PCI code has
    access to it. It was missed however that the handling of zPCI
    availability events assumed that once zpci_zdev_put() was called no
    later availability event would still see the device. With the previously
    mentioned commit however this assumption no longer holds and we must
    make sure that we only drop the initial long-lived reference the zPCI
    subsystem holds exactly once.
    
    Do so by introducing a zpci_device_reserved() function that handles when
    a device is reserved. Here we make sure the zpci_dev will not be
    considered for further events by removing it from the zpci_list.
    
    This also means that the device actually stays in the
    ZPCI_FN_STATE_RESERVED state between the time we know it has been
    reserved and the final reference going away. We thus need to consider it
    a real state instead of just a conceptual state after the removal. The
    final cleanup of PCI resources, removal from zbus, and destruction of
    the IOMMU stays in zpci_release_device() to make sure holders of the
    reference do see valid data until the release.
    
    Fixes: 2a671f77ee49 ("s390/pci: fix use after free of zpci_dev")
    Cc: stable@vger.kernel.org
    Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f18b90e9366f6d01f65de127e3fe56988cd9f8fd
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Sat Oct 9 15:40:30 2021 +0800

    can: isotp: isotp_sendmsg(): fix TX buffer concurrent access in isotp_sendmsg()
    
    commit 43a08c3bdac4cb42eff8fe5e2278bffe0c5c3daa upstream.
    
    When isotp_sendmsg() concurrent, tx.state of all TX processes can be
    ISOTP_IDLE. The conditions so->tx.state != ISOTP_IDLE and
    wq_has_sleeper(&so->wait) can not protect TX buffer from being
    accessed by multiple TX processes.
    
    We can use cmpxchg() to try to modify tx.state to ISOTP_SENDING firstly.
    If the modification of the previous process succeed, the later process
    must wait tx.state to ISOTP_IDLE firstly. Thus, we can ensure TX buffer
    is accessed by only one process at the same time. And we should also
    restore the original tx.state at the subsequent error processes.
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://lore.kernel.org/all/c2517874fbdf4188585cf9ddf67a8fa74d5dbde5.1633764159.git.william.xuanziyang@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2304dfb548a4ba95faa9ef5f87fa88aad3f08923
Author: Dexuan Cui <decui@microsoft.com>
Date:   Thu Oct 7 21:35:46 2021 -0700

    scsi: core: Fix shost->cmd_per_lun calculation in scsi_add_host_with_dma()
    
    commit 50b6cb3516365cb69753b006be2b61c966b70588 upstream.
    
    After commit ea2f0f77538c ("scsi: core: Cap scsi_host cmd_per_lun at
    can_queue"), a 416-CPU VM running on Hyper-V hangs during boot because the
    hv_storvsc driver sets scsi_driver.can_queue to an integer value that
    exceeds SHRT_MAX, and hence scsi_add_host_with_dma() sets
    shost->cmd_per_lun to a negative "short" value.
    
    Use min_t(int, ...) to work around the issue.
    
    Link: https://lore.kernel.org/r/20211008043546.6006-1-decui@microsoft.com
    Fixes: ea2f0f77538c ("scsi: core: Cap scsi_host cmd_per_lun at can_queue")
    Cc: stable@vger.kernel.org
    Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c58654f344dda734c320ecf81634443a9e1c61c1
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Tue Oct 19 22:16:32 2021 +0800

    net: hns3: fix for miscalculation of rx unused desc
    
    [ Upstream commit 9f9f0f19994b42b3e5e8735d41b9c5136828a76c ]
    
    rx unused desc is the desc that need attatching new buffer
    before refilling to hw to receive new packet, the number of
    desc need attatching new buffer is calculated using next_to_use
    and next_to_clean. when next_to_use == next_to_clean, currently
    hns3 driver assumes that all the desc has the buffer attatched,
    but 'next_to_use == next_to_clean' also means all the desc need
    attatching new buffer if hw has comsumed all the desc and the
    driver has not attatched any buffer to the desc yet.
    
    This patch adds 'refill' in desc_cb to indicate whether a new
    buffer has been refilled to a desc.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96fe5061291d9e9734abf6bb187ef7532824522d
Author: Woody Lin <woodylin@google.com>
Date:   Tue Oct 12 16:35:21 2021 +0800

    sched/scs: Reset the shadow stack when idle_task_exit
    
    [ Upstream commit 63acd42c0d4942f74710b11c38602fb14dea7320 ]
    
    Commit f1a0a376ca0c ("sched/core: Initialize the idle task with
    preemption disabled") removed the init_idle() call from
    idle_thread_get(). This was the sole call-path on hotplug that resets
    the Shadow Call Stack (scs) Stack Pointer (sp).
    
    Not resetting the scs-sp leads to scs overflow after enough hotplug
    cycles. Therefore add an explicit scs_task_reset() to the hotplug code
    to make sure the scs-sp does get reset on hotplug.
    
    Fixes: f1a0a376ca0c ("sched/core: Initialize the idle task with preemption disabled")
    Signed-off-by: Woody Lin <woodylin@google.com>
    [peterz: Changelog]
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Link: https://lore.kernel.org/r/20211012083521.973587-1-woodylin@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96f0aebf29be25254fa585af43924e34aa21fd9a
Author: Joy Gu <jgu@purestorage.com>
Date:   Tue Oct 12 12:18:33 2021 -0700

    scsi: qla2xxx: Fix a memory leak in an error path of qla2x00_process_els()
    
    [ Upstream commit 7fb223d0ad801f633c78cbe42b1d1b55f5d163ad ]
    
    Commit 8c0eb596baa5 ("[SCSI] qla2xxx: Fix a memory leak in an error path of
    qla2x00_process_els()"), intended to change:
    
            bsg_job->request->msgcode == FC_BSG_HST_ELS_NOLOGIN
    
    to:
    
            bsg_job->request->msgcode != FC_BSG_RPT_ELS
    
    but changed it to:
    
            bsg_job->request->msgcode == FC_BSG_RPT_ELS
    
    instead.
    
    Change the == to a != to avoid leaking the fcport structure or freeing
    unallocated memory.
    
    Link: https://lore.kernel.org/r/20211012191834.90306-2-jgu@purestorage.com
    Fixes: 8c0eb596baa5 ("[SCSI] qla2xxx: Fix a memory leak in an error path of qla2x00_process_els()")
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Joy Gu <jgu@purestorage.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90c8e8c0829b78518cf9dc4f6fca286848ce4c5a
Author: Mike Christie <michael.christie@oracle.com>
Date:   Sun Oct 10 11:19:04 2021 -0500

    scsi: iscsi: Fix set_param() handling
    
    [ Upstream commit 187a580c9e7895978dcd1e627b9c9e7e3d13ca96 ]
    
    In commit 9e67600ed6b8 ("scsi: iscsi: Fix race condition between login and
    sync thread") we meant to add a check where before we call ->set_param() we
    make sure the iscsi_cls_connection is bound. The problem is that between
    versions 4 and 5 of the patch the deletion of the unchecked set_param()
    call was dropped so we ended up with 2 calls. As a result we can still hit
    a crash where we access the unbound connection on the first call.
    
    This patch removes that first call.
    
    Fixes: 9e67600ed6b8 ("scsi: iscsi: Fix race condition between login and sync thread")
    Link: https://lore.kernel.org/r/20211010161904.60471-1-michael.christie@oracle.com
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Li Feng <fengli@smartx.com>
    Signed-off-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0eb254479685b21ba8e2387a85746cff1b93d10a
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Fri Oct 15 21:19:33 2021 -0700

    Input: snvs_pwrkey - add clk handling
    
    [ Upstream commit d997cc1715df7b6c3df798881fb9941acf0079f8 ]
    
    On i.MX7S and i.MX8M* (but not i.MX6*) the pwrkey device has an
    associated clock. Accessing the registers requires that this clock is
    enabled. Binding the driver on at least i.MX7S and i.MX8MP while not
    having the clock enabled results in a complete hang of the machine.
    (This usually only happens if snvs_pwrkey is built as a module and the
    rtc-snvs driver isn't already bound because at bootup the required clk
    is on and only gets disabled when the clk framework disables unused clks
    late during boot.)
    
    This completes the fix in commit 135be16d3505 ("ARM: dts: imx7s: add
    snvs clock to pwrkey").
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20211013062848.2667192-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea9c1f5d8a3add8d47986460513660ff24ef66bb
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Wed Oct 6 13:12:17 2021 -0700

    perf/x86/msr: Add Sapphire Rapids CPU support
    
    [ Upstream commit 71920ea97d6d1d800ee8b51951dc3fda3f5dc698 ]
    
    SMI_COUNT MSR is supported on Sapphire Rapids CPU.
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/1633551137-192083-1-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a5a1f09c8b45685a2336d418b5a49439c190e92
Author: Shunsuke Nakamura <nakamura.shun@fujitsu.com>
Date:   Mon Oct 11 17:37:04 2021 +0900

    libperf tests: Fix test_stat_cpu
    
    [ Upstream commit 3ff6d64e68abc231955d216236615918797614ae ]
    
    The `cpu` argument of perf_evsel__read() must specify the cpu index.
    
    perf_cpu_map__for_each_cpu() is for iterating the cpu number (not index)
    and is thus not appropriate for use with perf_evsel__read().
    
    So, if there is an offline CPU, the cpu number specified in the argument
    may point out of range because the cpu number and the cpu index are
    different.
    
    Fix test_stat_cpu().
    
    Testing it:
    
      # make tests -C tools/lib/perf/
      make: Entering directory '/home/nakamura/kernel_src/linux-5.15-rc4_fix/tools/lib/perf'
      running static:
      - running tests/test-cpumap.c...OK
      - running tests/test-threadmap.c...OK
      - running tests/test-evlist.c...OK
      - running tests/test-evsel.c...OK
      running dynamic:
      - running tests/test-cpumap.c...OK
      - running tests/test-threadmap.c...OK
      - running tests/test-evlist.c...OK
      - running tests/test-evsel.c...OK
      make: Leaving directory '/home/nakamura/kernel_src/linux-5.15-rc4_fix/tools/lib/perf'
    
    Signed-off-by: Shunsuke Nakamura <nakamura.shun@fujitsu.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20211011083704.4108720-1-nakamura.shun@fujitsu.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e56a3e7ae3533ae1bf2dc742cf3538e459324340
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Tue Oct 12 17:29:35 2021 +0300

    ALSA: hda: avoid write to STATESTS if controller is in reset
    
    [ Upstream commit b37a15188eae9d4c49c5bb035e0c8d4058e4d9b3 ]
    
    The snd_hdac_bus_reset_link() contains logic to clear STATESTS register
    before performing controller reset. This code dates back to an old
    bugfix in commit e8a7f136f5ed ("[ALSA] hda-intel - Improve HD-audio
    codec probing robustness"). Originally the code was added to
    azx_reset().
    
    The code was moved around in commit a41d122449be ("ALSA: hda - Embed bus
    into controller object") and ended up to snd_hdac_bus_reset_link() and
    called primarily via snd_hdac_bus_init_chip().
    
    The logic to clear STATESTS is correct when snd_hdac_bus_init_chip() is
    called when controller is not in reset. In this case, STATESTS can be
    cleared. This can be useful e.g. when forcing a controller reset to retry
    codec probe. A normal non-power-on reset will not clear the bits.
    
    However, this old logic is problematic when controller is already in
    reset. The HDA specification states that controller must be taken out of
    reset before writing to registers other than GCTL.CRST (1.0a spec,
    3.3.7). The write to STATESTS in snd_hdac_bus_reset_link() will be lost
    if the controller is already in reset per the HDA specification mentioned.
    
    This has been harmless on older hardware. On newer generation of Intel
    PCIe based HDA controllers, if configured to report issues, this write
    will emit an unsupported request error. If ACPI Platform Error Interface
    (APEI) is enabled in kernel, this will end up to kernel log.
    
    Fix the code in snd_hdac_bus_reset_link() to only clear the STATESTS if
    the function is called when controller is not in reset. Otherwise
    clearing the bits is not possible and should be skipped.
    
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20211012142935.3731820-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85c8d8c1609df3038801b45989b6ae18ef03c265
Author: Prashant Malani <pmalani@chromium.org>
Date:   Tue Sep 28 03:19:34 2021 -0700

    platform/x86: intel_scu_ipc: Update timeout value in comment
    
    [ Upstream commit a0c5814b9933f25ecb6de169483c5b88cf632bca ]
    
    The comment decribing the IPC timeout hadn't been updated when the
    actual timeout was changed from 3 to 5 seconds in
    commit a7d53dbbc70a ("platform/x86: intel_scu_ipc: Increase virtual
    timeout from 3 to 5 seconds") .
    
    Since the value is anyway updated to 10s now, take this opportunity to
    update the value in the comment too.
    
    Signed-off-by: Prashant Malani <pmalani@chromium.org>
    Cc: Benson Leung <bleung@chromium.org>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Link: https://lore.kernel.org/r/20210928101932.2543937-4-pmalani@chromium.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f591cbdbed3d7822b2bdba89b34a6d7b434317d
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Oct 9 11:33:49 2021 +0000

    isdn: mISDN: Fix sleeping function called from invalid context
    
    [ Upstream commit 6510e80a0b81b5d814e3aea6297ba42f5e76f73c ]
    
    The driver can call card->isac.release() function from an atomic
    context.
    
    Fix this by calling this function after releasing the lock.
    
    The following log reveals it:
    
    [   44.168226 ] BUG: sleeping function called from invalid context at kernel/workqueue.c:3018
    [   44.168941 ] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 5475, name: modprobe
    [   44.169574 ] INFO: lockdep is turned off.
    [   44.169899 ] irq event stamp: 0
    [   44.170160 ] hardirqs last  enabled at (0): [<0000000000000000>] 0x0
    [   44.170627 ] hardirqs last disabled at (0): [<ffffffff814209ed>] copy_process+0x132d/0x3e00
    [   44.171240 ] softirqs last  enabled at (0): [<ffffffff81420a1a>] copy_process+0x135a/0x3e00
    [   44.171852 ] softirqs last disabled at (0): [<0000000000000000>] 0x0
    [   44.172318 ] Preemption disabled at:
    [   44.172320 ] [<ffffffffa009b0a9>] nj_release+0x69/0x500 [netjet]
    [   44.174441 ] Call Trace:
    [   44.174630 ]  dump_stack_lvl+0xa8/0xd1
    [   44.174912 ]  dump_stack+0x15/0x17
    [   44.175166 ]  ___might_sleep+0x3a2/0x510
    [   44.175459 ]  ? nj_release+0x69/0x500 [netjet]
    [   44.175791 ]  __might_sleep+0x82/0xe0
    [   44.176063 ]  ? start_flush_work+0x20/0x7b0
    [   44.176375 ]  start_flush_work+0x33/0x7b0
    [   44.176672 ]  ? trace_irq_enable_rcuidle+0x85/0x170
    [   44.177034 ]  ? kasan_quarantine_put+0xaa/0x1f0
    [   44.177372 ]  ? kasan_quarantine_put+0xaa/0x1f0
    [   44.177711 ]  __flush_work+0x11a/0x1a0
    [   44.177991 ]  ? flush_work+0x20/0x20
    [   44.178257 ]  ? lock_release+0x13c/0x8f0
    [   44.178550 ]  ? __kasan_check_write+0x14/0x20
    [   44.178872 ]  ? do_raw_spin_lock+0x148/0x360
    [   44.179187 ]  ? read_lock_is_recursive+0x20/0x20
    [   44.179530 ]  ? __kasan_check_read+0x11/0x20
    [   44.179846 ]  ? do_raw_spin_unlock+0x55/0x900
    [   44.180168 ]  ? ____kasan_slab_free+0x116/0x140
    [   44.180505 ]  ? _raw_spin_unlock_irqrestore+0x41/0x60
    [   44.180878 ]  ? skb_queue_purge+0x1a3/0x1c0
    [   44.181189 ]  ? kfree+0x13e/0x290
    [   44.181438 ]  flush_work+0x17/0x20
    [   44.181695 ]  mISDN_freedchannel+0xe8/0x100
    [   44.182006 ]  isac_release+0x210/0x260 [mISDNipac]
    [   44.182366 ]  nj_release+0xf6/0x500 [netjet]
    [   44.182685 ]  nj_remove+0x48/0x70 [netjet]
    [   44.182989 ]  pci_device_remove+0xa9/0x250
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab4f542b515b694ecb7d7a73a4e7e908528a7cfe
Author: Herve Codina <herve.codina@bootlin.com>
Date:   Fri Oct 8 12:34:40 2021 +0200

    ARM: dts: spear3xx: Fix gmac node
    
    [ Upstream commit 6636fec29cdf6665bd219564609e8651f6ddc142 ]
    
    On SPEAr3xx, ethernet driver is not compatible with the SPEAr600
    one.
    Indeed, SPEAr3xx uses an earlier version of this IP (v3.40) and
    needs some driver tuning compare to SPEAr600.
    
    The v3.40 IP support was added to stmmac driver and this patch
    fixes this issue and use the correct compatible string for
    SPEAr3xx
    
    Signed-off-by: Herve Codina <herve.codina@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15d3ad79885b91d9bdcaa102027021d447b89ea5
Author: Herve Codina <herve.codina@bootlin.com>
Date:   Fri Oct 8 12:34:39 2021 +0200

    net: stmmac: add support for dwmac 3.40a
    
    [ Upstream commit 9cb1d19f47fafad7dcf7c8564e633440c946cfd7 ]
    
    dwmac 3.40a is an old ip version that can be found on SPEAr3xx soc.
    
    Signed-off-by: Herve Codina <herve.codina@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9d16a4284890bbcfa0888b02a718c1bae8168b3
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 1 13:52:30 2021 +0100

    btrfs: deal with errors when checking if a dir entry exists during log replay
    
    [ Upstream commit 77a5b9e3d14cbce49ceed2766b2003c034c066dc ]
    
    Currently inode_in_dir() ignores errors returned from
    btrfs_lookup_dir_index_item() and from btrfs_lookup_dir_item(), treating
    any errors as if the directory entry does not exists in the fs/subvolume
    tree, which is obviously not correct, as we can get errors such as -EIO
    when reading extent buffers while searching the fs/subvolume's tree.
    
    Fix that by making inode_in_dir() return the errors and making its only
    caller, add_inode_ref(), deal with returned errors as well.
    
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 369db2a91d5cfa55b04c919af7f5680276996e06
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 6 16:19:40 2021 +0200

    ALSA: hda: intel: Allow repeatedly probing on codec configuration errors
    
    [ Upstream commit c0f1886de7e173865f1a0fa7680a1c07954a987f ]
    
    It seems that a few recent AMD systems show the codec configuration
    errors at the early boot, while loading the driver at a later stage
    works magically.  Although the root cause of the error isn't clear,
    it's certainly not bad to allow retrying the codec probe in such a
    case if that helps.
    
    This patch adds the capability for retrying the probe upon codec probe
    errors on the certain AMD platforms.  The probe_work is changed to a
    delayed work, and at the secondary call, it'll jump to the codec
    probing.
    
    Note that, not only adding the re-probing, this includes the behavior
    changes in the codec configuration function.  Namely,
    snd_hda_codec_configure() won't unregister the codec at errors any
    longer.  Instead, its caller, azx_codec_configure() unregisters the
    codecs with the probe failures *if* any codec has been successfully
    configured.  If all codec probe failed, it doesn't unregister but let
    it re-probed -- which is the most case we're seeing and this patch
    tries to improve.
    
    Even if the driver doesn't re-probe or give up, it will go to the
    "free-all" error path, hence the leftover codecs shall be disabled /
    deleted in anyway.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1190801
    Link: https://lore.kernel.org/r/20211006141940.2897-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81d8e70cdce4f4e1414943ed0f78215b1abb0027
Author: Brendan Higgins <brendanhiggins@google.com>
Date:   Wed Sep 29 14:27:09 2021 -0700

    gcc-plugins/structleak: add makefile var for disabling structleak
    
    [ Upstream commit 554afc3b9797511e3245864e32aebeb6abbab1e3 ]
    
    KUnit and structleak don't play nice, so add a makefile variable for
    enabling structleak when it complains.
    
    Co-developed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Brendan Higgins <brendanhiggins@google.com>
    Reviewed-by: David Gow <davidgow@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69078a94365a74cfbf113890ca9cc86ba1d1e5c0
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Tue Oct 19 22:16:31 2021 +0800

    net: hns3: fix the max tx size according to user manual
    
    commit adfb7b4966c0c4c63a791f202b8b3837b07a9ece upstream.
    
    Currently the max tx size supported by the hw is calculated by
    using the max BD num supported by the hw. According to the hw
    user manual, the max tx size is fixed value for both non-TSO and
    TSO skb.
    
    This patch updates the max tx size according to the manual.
    
    Fixes: 8ae10cfb5089("net: hns3: support tx-scatter-gather-fraglist feature")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f40c2281d2c0674d32ba732fee45222d76495472
Author: Marek Vasut <marex@denx.de>
Date:   Sat Oct 16 23:04:46 2021 +0200

    drm: mxsfb: Fix NULL pointer dereference crash on unload
    
    commit 3cfc183052c3dbf8eae57b6c1685dab00ed3db4a upstream.
    
    The mxsfb->crtc.funcs may already be NULL when unloading the driver,
    in which case calling mxsfb_irq_disable() via drm_irq_uninstall() from
    mxsfb_unload() leads to NULL pointer dereference.
    
    Since all we care about is masking the IRQ and mxsfb->base is still
    valid, just use that to clear and mask the IRQ.
    
    Fixes: ae1ed00932819 ("drm: mxsfb: Stop using DRM simple display pipeline helper")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Daniel Abrecht <public@danielabrecht.ch>
    Cc: Emil Velikov <emil.l.velikov@gmail.com>
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211016210446.171616-1-marex@denx.de
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96835b68d7b39df9b25d5a08a2ffa9cb2562cffa
Author: Nikolay Aleksandrov <nikolay@nvidia.com>
Date:   Fri Oct 15 12:05:46 2021 +0300

    net: bridge: mcast: use multicast_membership_interval for IGMPv3
    
    commit fac3cb82a54a4b7c49c932f96ef196cf5774344c upstream.
    
    When I added IGMPv3 support I decided to follow the RFC for computing
    the GMI dynamically:
    " 8.4. Group Membership Interval
    
       The Group Membership Interval is the amount of time that must pass
       before a multicast router decides there are no more members of a
       group or a particular source on a network.
    
       This value MUST be ((the Robustness Variable) times (the Query
       Interval)) plus (one Query Response Interval)."
    
    But that actually is inconsistent with how the bridge used to compute it
    for IGMPv2, where it was user-configurable that has a correct default value
    but it is up to user-space to maintain it. This would make it consistent
    with the other timer values which are also maintained correct by the user
    instead of being dynamically computed. It also changes back to the previous
    user-expected GMI behaviour for IGMPv3 queries which were supported before
    IGMPv3 was added. Note that to properly compute it dynamically we would
    need to add support for "Robustness Variable" which is currently missing.
    
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Fixes: 0436862e417e ("net: bridge: mcast: support for IGMPv3/MLDv2 ALLOW_NEW_SOURCES report")
    Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e033cb40761e50b9ed437397898cccad40def0b
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Oct 12 18:37:09 2021 +0200

    selftests: netfilter: remove stray bash debug line
    
    commit 3e6ed7703dae6838c104d73d3e76e9b79f5c0528 upstream.
    
    This should not be there.
    
    Fixes: 2de03b45236f ("selftests: netfilter: add flowtable test script")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8a6541345c2d384c1343a2990e16e4c696f47a1
Author: Vegard Nossum <vegard.nossum@gmail.com>
Date:   Tue Oct 5 22:54:54 2021 +0200

    netfilter: Kconfig: use 'default y' instead of 'm' for bool config option
    
    commit 77076934afdcd46516caf18ed88b2f88025c9ddb upstream.
    
    This option, NF_CONNTRACK_SECMARK, is a bool, so it can never be 'm'.
    
    Fixes: 33b8e77605620 ("[NETFILTER]: Add CONFIG_NETFILTER_ADVANCED option")
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f221ccbee4ec662e2292d490a43ce6c314c4594
Author: Xiaolong Huang <butterflyhuangxx@gmail.com>
Date:   Fri Oct 8 14:58:30 2021 +0800

    isdn: cpai: check ctr->cnr to avoid array index out of bound
    
    commit 1f3e2e97c003f80c4b087092b225c8787ff91e4d upstream.
    
    The cmtp_add_connection() would add a cmtp session to a controller
    and run a kernel thread to process cmtp.
    
            __module_get(THIS_MODULE);
            session->task = kthread_run(cmtp_session, session, "kcmtpd_ctr_%d",
                                                                    session->num);
    
    During this process, the kernel thread would call detach_capi_ctr()
    to detach a register controller. if the controller
    was not attached yet, detach_capi_ctr() would
    trigger an array-index-out-bounds bug.
    
    [   46.866069][ T6479] UBSAN: array-index-out-of-bounds in
    drivers/isdn/capi/kcapi.c:483:21
    [   46.867196][ T6479] index -1 is out of range for type 'capi_ctr *[32]'
    [   46.867982][ T6479] CPU: 1 PID: 6479 Comm: kcmtpd_ctr_0 Not tainted
    5.15.0-rc2+ #8
    [   46.869002][ T6479] Hardware name: QEMU Standard PC (i440FX + PIIX,
    1996), BIOS 1.14.0-2 04/01/2014
    [   46.870107][ T6479] Call Trace:
    [   46.870473][ T6479]  dump_stack_lvl+0x57/0x7d
    [   46.870974][ T6479]  ubsan_epilogue+0x5/0x40
    [   46.871458][ T6479]  __ubsan_handle_out_of_bounds.cold+0x43/0x48
    [   46.872135][ T6479]  detach_capi_ctr+0x64/0xc0
    [   46.872639][ T6479]  cmtp_session+0x5c8/0x5d0
    [   46.873131][ T6479]  ? __init_waitqueue_head+0x60/0x60
    [   46.873712][ T6479]  ? cmtp_add_msgpart+0x120/0x120
    [   46.874256][ T6479]  kthread+0x147/0x170
    [   46.874709][ T6479]  ? set_kthread_struct+0x40/0x40
    [   46.875248][ T6479]  ret_from_fork+0x1f/0x30
    [   46.875773][ T6479]
    
    Signed-off-by: Xiaolong Huang <butterflyhuangxx@gmail.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211008065830.305057-1-butterflyhuangxx@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77c0ef979e32b8bc22f36a013bab77cd37e31530
Author: Lin Ma <linma@zju.edu.cn>
Date:   Thu Oct 7 19:44:30 2021 +0200

    nfc: nci: fix the UAF of rf_conn_info object
    
    commit 1b1499a817c90fd1ce9453a2c98d2a01cca0e775 upstream.
    
    The nci_core_conn_close_rsp_packet() function will release the conn_info
    with given conn_id. However, it needs to set the rf_conn_info to NULL to
    prevent other routines like nci_rf_intf_activated_ntf_packet() to trigger
    the UAF.
    
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f042315fcc46b7fc048ba7d7a3e136927e384d4
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Oct 20 06:22:59 2021 -0400

    KVM: nVMX: promptly process interrupts delivered while in guest mode
    
    commit 3a25dfa67fe40f3a2690af2c562e0947a78bd6a0 upstream.
    
    Since commit c300ab9f08df ("KVM: x86: Replace late check_nested_events() hack with
    more precise fix") there is no longer the certainty that check_nested_events()
    tries to inject an external interrupt vmexit to L1 on every call to vcpu_enter_guest.
    Therefore, even in that case we need to set KVM_REQ_EVENT.  This ensures
    that inject_pending_event() is called, and from there kvm_check_nested_events().
    
    Fixes: c300ab9f08df ("KVM: x86: Replace late check_nested_events() hack with more precise fix")
    Cc: stable@vger.kernel.org
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b41fd8f5d2ade45cb8b3e745705a0922e43a019a
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Mon Oct 18 15:16:06 2021 -0700

    mm, slub: fix incorrect memcg slab count for bulk free
    
    commit 3ddd60268c24bcac9d744404cc277e9dc52fe6b6 upstream.
    
    kmem_cache_free_bulk() will call memcg_slab_free_hook() for all objects
    when doing bulk free.  So we shouldn't call memcg_slab_free_hook() again
    for bulk free to avoid incorrect memcg slab count.
    
    Link: https://lkml.kernel.org/r/20210916123920.48704-6-linmiaohe@huawei.com
    Fixes: d1b2cf6cb84a ("mm: memcg/slab: uncharge during kmem_cache_free_bulk()")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Andrey Konovalov <andreyknvl@gmail.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Bharata B Rao <bharata@linux.ibm.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Faiyaz Mohammed <faiyazm@codeaurora.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 568f906340b43120abd6fcc67c37396482f85930
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Mon Oct 18 15:15:59 2021 -0700

    mm, slub: fix potential memoryleak in kmem_cache_open()
    
    commit 9037c57681d25e4dcc442d940d6dbe24dd31f461 upstream.
    
    In error path, the random_seq of slub cache might be leaked.  Fix this
    by using __kmem_cache_release() to release all the relevant resources.
    
    Link: https://lkml.kernel.org/r/20210916123920.48704-4-linmiaohe@huawei.com
    Fixes: 210e7a43fa90 ("mm: SLUB freelist randomization")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Andrey Konovalov <andreyknvl@gmail.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Bharata B Rao <bharata@linux.ibm.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Faiyaz Mohammed <faiyazm@codeaurora.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48843dd23c7bfcb0f0c3a02926d660f939dc2b9f
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Mon Oct 18 15:15:55 2021 -0700

    mm, slub: fix mismatch between reconstructed freelist depth and cnt
    
    commit 899447f669da76cc3605665e1a95ee877bc464cc upstream.
    
    If object's reuse is delayed, it will be excluded from the reconstructed
    freelist.  But we forgot to adjust the cnt accordingly.  So there will
    be a mismatch between reconstructed freelist depth and cnt.  This will
    lead to free_debug_processing() complaining about freelist count or a
    incorrect slub inuse count.
    
    Link: https://lkml.kernel.org/r/20210916123920.48704-3-linmiaohe@huawei.com
    Fixes: c3895391df38 ("kasan, slub: fix handling of kasan_slab_free hook")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Andrey Konovalov <andreyknvl@gmail.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Bharata B Rao <bharata@linux.ibm.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Faiyaz Mohammed <faiyazm@codeaurora.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5c2a80368e97ac179d6a101c99f1e1f36146ec2
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Oct 20 20:48:26 2021 +1100

    powerpc/idle: Don't corrupt back chain when going idle
    
    commit 496c5fe25c377ddb7815c4ce8ecfb676f051e9b6 upstream.
    
    In isa206_idle_insn_mayloss() we store various registers into the stack
    red zone, which is allowed.
    
    However inside the IDLE_STATE_ENTER_SEQ_NORET macro we save r2 again,
    to 0(r1), which corrupts the stack back chain.
    
    We used to do the same in isa206_idle_insn_mayloss() itself, but we
    fixed that in 73287caa9210 ("powerpc64/idle: Fix SP offsets when saving
    GPRs"), however we missed that the macro also corrupts the back chain.
    
    Corrupting the back chain is bad for debuggability but doesn't
    necessarily cause a bug.
    
    However we recently changed the stack handling in some KVM code, and it
    now relies on the stack back chain being valid when it returns. The
    corruption causes that code to return with r1 pointing somewhere in
    kernel data, at some point LR is restored from the stack and we branch
    to NULL or somewhere else invalid.
    
    Only affects Power8 hosts running KVM guests, with dynamic_mt_modes
    enabled (which it is by default).
    
    The fixes tag below points to the commit that changed the KVM stack
    handling, exposing this bug. The actual corruption of the back chain has
    always existed since 948cf67c4726 ("powerpc: Add NAP mode support on
    Power7 in HV mode").
    
    Fixes: 9b4416c5095c ("KVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211020094826.3222052-1-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 197ec50b2df12dbfb17929eda643b16117b6f0ca
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Oct 15 23:02:08 2021 +1100

    KVM: PPC: Book3S HV: Make idle_kvm_start_guest() return 0 if it went to guest
    
    commit cdeb5d7d890e14f3b70e8087e745c4a6a7d9f337 upstream.
    
    We call idle_kvm_start_guest() from power7_offline() if the thread has
    been requested to enter KVM. We pass it the SRR1 value that was returned
    from power7_idle_insn() which tells us what sort of wakeup we're
    processing.
    
    Depending on the SRR1 value we pass in, the KVM code might enter the
    guest, or it might return to us to do some host action if the wakeup
    requires it.
    
    If idle_kvm_start_guest() is able to handle the wakeup, and enter the
    guest it is supposed to indicate that by returning a zero SRR1 value to
    us.
    
    That was the behaviour prior to commit 10d91611f426 ("powerpc/64s:
    Reimplement book3s idle code in C"), however in that commit the
    handling of SRR1 was reworked, and the zeroing behaviour was lost.
    
    Returning from idle_kvm_start_guest() without zeroing the SRR1 value can
    confuse the host offline code, causing the guest to crash and other
    weirdness.
    
    Fixes: 10d91611f426 ("powerpc/64s: Reimplement book3s idle code in C")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211015133929.832061-2-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbd724c49bead048ae9fc1a5b7bff2fb3e54f855
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Oct 15 23:01:48 2021 +1100

    KVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()
    
    commit 9b4416c5095c20e110c82ae602c254099b83b72f upstream.
    
    In commit 10d91611f426 ("powerpc/64s: Reimplement book3s idle code in
    C") kvm_start_guest() became idle_kvm_start_guest(). The old code
    allocated a stack frame on the emergency stack, but didn't use the
    frame to store anything, and also didn't store anything in its caller's
    frame.
    
    idle_kvm_start_guest() on the other hand is written more like a normal C
    function, it creates a frame on entry, and also stores CR/LR into its
    callers frame (per the ABI). The problem is that there is no caller
    frame on the emergency stack.
    
    The emergency stack for a given CPU is allocated with:
    
      paca_ptrs[i]->emergency_sp = alloc_stack(limit, i) + THREAD_SIZE;
    
    So emergency_sp actually points to the first address above the emergency
    stack allocation for a given CPU, we must not store above it without
    first decrementing it to create a frame. This is different to the
    regular kernel stack, paca->kstack, which is initialised to point at an
    initial frame that is ready to use.
    
    idle_kvm_start_guest() stores the backchain, CR and LR all of which
    write outside the allocation for the emergency stack. It then creates a
    stack frame and saves the non-volatile registers. Unfortunately the
    frame it creates is not large enough to fit the non-volatiles, and so
    the saving of the non-volatile registers also writes outside the
    emergency stack allocation.
    
    The end result is that we corrupt whatever is at 0-24 bytes, and 112-248
    bytes above the emergency stack allocation.
    
    In practice this has gone unnoticed because the memory immediately above
    the emergency stack happens to be used for other stack allocations,
    either another CPUs mc_emergency_sp or an IRQ stack. See the order of
    calls to irqstack_early_init() and emergency_stack_init().
    
    The low addresses of another stack are the top of that stack, and so are
    only used if that stack is under extreme pressue, which essentially
    never happens in practice - and if it did there's a high likelyhood we'd
    crash due to that stack overflowing.
    
    Still, we shouldn't be corrupting someone else's stack, and it is purely
    luck that we aren't corrupting something else.
    
    To fix it we save CR/LR into the caller's frame using the existing r1 on
    entry, we then create a SWITCH_FRAME_SIZE frame (which has space for
    pt_regs) on the emergency stack with the backchain pointing to the
    existing stack, and then finally we switch to the new frame on the
    emergency stack.
    
    Fixes: 10d91611f426 ("powerpc/64s: Reimplement book3s idle code in C")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211015133929.832061-1-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9258f58432c5e83494cf5887a6bf59b6055b612c
Author: Christopher M. Riedl <cmr@codefail.de>
Date:   Sat Feb 6 01:23:42 2021 -0600

    powerpc64/idle: Fix SP offsets when saving GPRs
    
    commit 73287caa9210ded6066833195f4335f7f688a46b upstream.
    
    The idle entry/exit code saves/restores GPRs in the stack "red zone"
    (Protected Zone according to PowerPC64 ELF ABI v2). However, the offset
    used for the first GPR is incorrect and overwrites the back chain - the
    Protected Zone actually starts below the current SP. In practice this is
    probably not an issue, but it's still incorrect so fix it.
    
    Also expand the comments to explain why using the stack "red zone"
    instead of creating a new stackframe is appropriate here.
    
    Signed-off-by: Christopher M. Riedl <cmr@codefail.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210206072342.5067-1-cmr@codefail.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e16d9d525a7a62c40655b2747be35b674fd4dc5
Author: DENG Qingfang <dqfext@gmail.com>
Date:   Sat Oct 16 14:24:14 2021 +0800

    net: dsa: mt7530: correct ds->num_ports
    
    commit 342afce10d6f61c443c95e244f812d4766f73f53 upstream.
    
    Setting ds->num_ports to DSA_MAX_PORTS made DSA core allocate unnecessary
    dsa_port's and call mt7530_port_disable for non-existent ports.
    
    Set it to MT7530_NUM_PORTS to fix that, and dsa_is_user_port check in
    port_enable/disable is no longer required.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: DENG Qingfang <dqfext@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16802fa4c33eb1a8efb23f1e93365190e4047d05
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Sat Oct 16 15:23:50 2021 +0800

    audit: fix possible null-pointer dereference in audit_filter_rules
    
    commit 6e3ee990c90494561921c756481d0e2125d8b895 upstream.
    
    Fix  possible null-pointer dereference in audit_filter_rules.
    
    audit_filter_rules() error: we previously assumed 'ctx' could be null
    
    Cc: stable@vger.kernel.org
    Fixes: bf361231c295 ("audit: add saddr_fam filter field")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d867a359979b368f8f00de48893d46a43440736
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 6 16:17:12 2021 +0200

    ASoC: DAPM: Fix missing kctl change notifications
    
    commit 5af82c81b2c49cfb1cad84d9eb6eab0e3d1c4842 upstream.
    
    The put callback of a kcontrol is supposed to return 1 when the value
    is changed, and this will be notified to user-space.  However, some
    DAPM kcontrols always return 0 (except for errors), hence the
    user-space misses the update of a control value.
    
    This patch corrects the behavior by properly returning 1 when the
    value gets updated.
    
    Reported-and-tested-by: Hans de Goede <hdegoede@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20211006141712.2439-1-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2606acf418efaad368b1f49deb21191bc82837d
Author: Steven Clarkson <sc@lambdal.com>
Date:   Thu Oct 14 06:35:54 2021 -0700

    ALSA: hda/realtek: Add quirk for Clevo PC50HS
    
    commit aef454b40288158b850aab13e3d2a8c406779401 upstream.
    
    Apply existing PCI quirk to the Clevo PC50HS and related models to fix
    audio output on the built in speakers.
    
    Signed-off-by: Steven Clarkson <sc@lambdal.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211014133554.1326741-1-sc@lambdal.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6411397b6d7a84eebdbdf2446c4e6f780f7e25b2
Author: Brendan Grieve <brendan@grieve.com.au>
Date:   Fri Oct 15 10:53:35 2021 +0800

    ALSA: usb-audio: Provide quirk for Sennheiser GSP670 Headset
    
    commit 3c414eb65c294719a91a746260085363413f91c1 upstream.
    
    As per discussion at: https://github.com/szszoke/sennheiser-gsp670-pulseaudio-profile/issues/13
    
    The GSP670 has 2 playback and 1 recording device that by default are
    detected in an incompatible order for alsa. This may have been done to make
    it compatible for the console by the manufacturer and only affects the
    latest firmware which uses its own ID.
    
    This quirk will resolve this by reordering the channels.
    
    Signed-off-by: Brendan Grieve <brendan@grieve.com.au>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211015025335.196592-1-brendan@grieve.com.au
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b721500c979b71a9f02eb84ca384082722c62d4e
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Mon Oct 18 15:16:12 2021 -0700

    vfs: check fd has read access in kernel_read_file_from_fd()
    
    commit 032146cda85566abcd1c4884d9d23e4e30a07e9a upstream.
    
    If we open a file without read access and then pass the fd to a syscall
    whose implementation calls kernel_read_file_from_fd(), we get a warning
    from __kernel_read():
    
            if (WARN_ON_ONCE(!(file->f_mode & FMODE_READ)))
    
    This currently affects both finit_module() and kexec_file_load(), but it
    could affect other syscalls in the future.
    
    Link: https://lkml.kernel.org/r/20211007220110.600005-1-willy@infradead.org
    Fixes: b844f0ecbc56 ("vfs: define kernel_copy_file_from_fd()")
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Reported-by: Hao Sun <sunhao.th@gmail.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Mimi Zohar <zohar@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 895ceeff31b1f5e01ac8d5567d48215bbbcf9d97
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Mon Oct 18 15:16:09 2021 -0700

    elfcore: correct reference to CONFIG_UML
    
    commit b0e901280d9860a0a35055f220e8e457f300f40a upstream.
    
    Commit 6e7b64b9dd6d ("elfcore: fix building with clang") introduces
    special handling for two architectures, ia64 and User Mode Linux.
    However, the wrong name, i.e., CONFIG_UM, for the intended Kconfig
    symbol for User-Mode Linux was used.
    
    Although the directory for User Mode Linux is ./arch/um; the Kconfig
    symbol for this architecture is called CONFIG_UML.
    
    Luckily, ./scripts/checkkconfigsymbols.py warns on non-existing configs:
    
      UM
      Referencing files: include/linux/elfcore.h
      Similar symbols: UML, NUMA
    
    Correct the name of the config to the intended one.
    
    [akpm@linux-foundation.org: fix um/x86_64, per Catalin]
      Link: https://lkml.kernel.org/r/20211006181119.2851441-1-catalin.marinas@arm.com
      Link: https://lkml.kernel.org/r/YV6pejGzLy5ppEpt@arm.com
    
    Link: https://lkml.kernel.org/r/20211006082209.417-1-lukas.bulwahn@gmail.com
    Fixes: 6e7b64b9dd6d ("elfcore: fix building with clang")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Barret Rhoden <brho@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cda4bfffd4f755645577aaa9e96a606657b4525
Author: Nadav Amit <namit@vmware.com>
Date:   Mon Oct 18 15:15:25 2021 -0700

    userfaultfd: fix a race between writeprotect and exit_mmap()
    
    commit cb185d5f1ebf900f4ae3bf84cee212e6dd035aca upstream.
    
    A race is possible when a process exits, its VMAs are removed by
    exit_mmap() and at the same time userfaultfd_writeprotect() is called.
    
    The race was detected by KASAN on a development kernel, but it appears
    to be possible on vanilla kernels as well.
    
    Use mmget_not_zero() to prevent the race as done in other userfaultfd
    operations.
    
    Link: https://lkml.kernel.org/r/20210921200247.25749-1-namit@vmware.com
    Fixes: 63b2d4174c4ad ("userfaultfd: wp: add the writeprotect API to userfaultfd ioctl")
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Tested-by: Li  Wang <liwang@redhat.com>
    Reviewed-by: Peter Xu <peterx@redhat.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93be0eeea14cf39235e585c8f56df3b3859deaad
Author: Valentin Vidic <vvidic@valentin-vidic.from.hr>
Date:   Mon Oct 18 15:15:42 2021 -0700

    ocfs2: mount fails with buffer overflow in strlen
    
    commit b15fa9224e6e1239414525d8d556d824701849fc upstream.
    
    Starting with kernel 5.11 built with CONFIG_FORTIFY_SOURCE mouting an
    ocfs2 filesystem with either o2cb or pcmk cluster stack fails with the
    trace below.  Problem seems to be that strings for cluster stack and
    cluster name are not guaranteed to be null terminated in the disk
    representation, while strlcpy assumes that the source string is always
    null terminated.  This causes a read outside of the source string
    triggering the buffer overflow detection.
    
      detected buffer overflow in strlen
      ------------[ cut here ]------------
      kernel BUG at lib/string.c:1149!
      invalid opcode: 0000 [#1] SMP PTI
      CPU: 1 PID: 910 Comm: mount.ocfs2 Not tainted 5.14.0-1-amd64 #1
        Debian 5.14.6-2
      RIP: 0010:fortify_panic+0xf/0x11
      ...
      Call Trace:
       ocfs2_initialize_super.isra.0.cold+0xc/0x18 [ocfs2]
       ocfs2_fill_super+0x359/0x19b0 [ocfs2]
       mount_bdev+0x185/0x1b0
       legacy_get_tree+0x27/0x40
       vfs_get_tree+0x25/0xb0
       path_mount+0x454/0xa20
       __x64_sys_mount+0x103/0x140
       do_syscall_64+0x3b/0xc0
       entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Link: https://lkml.kernel.org/r/20210929180654.32460-1-vvidic@valentin-vidic.from.hr
    Signed-off-by: Valentin Vidic <vvidic@valentin-vidic.from.hr>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b98569e81c37d7e0deada7172f8f60860c1360
Author: Jan Kara <jack@suse.cz>
Date:   Mon Oct 18 15:15:39 2021 -0700

    ocfs2: fix data corruption after conversion from inline format
    
    commit 5314454ea3ff6fc746eaf71b9a7ceebed52888fa upstream.
    
    Commit 6dbf7bb55598 ("fs: Don't invalidate page buffers in
    block_write_full_page()") uncovered a latent bug in ocfs2 conversion
    from inline inode format to a normal inode format.
    
    The code in ocfs2_convert_inline_data_to_extents() attempts to zero out
    the whole cluster allocated for file data by grabbing, zeroing, and
    dirtying all pages covering this cluster.  However these pages are
    beyond i_size, thus writeback code generally ignores these dirty pages
    and no blocks were ever actually zeroed on the disk.
    
    This oversight was fixed by commit 693c241a5f6a ("ocfs2: No need to zero
    pages past i_size.") for standard ocfs2 write path, inline conversion
    path was apparently forgotten; the commit log also has a reasoning why
    the zeroing actually is not needed.
    
    After commit 6dbf7bb55598, things became worse as writeback code stopped
    invalidating buffers on pages beyond i_size and thus these pages end up
    with clean PageDirty bit but with buffers attached to these pages being
    still dirty.  So when a file is converted from inline format, then
    writeback triggers, and then the file is grown so that these pages
    become valid, the invalid dirtiness state is preserved,
    mark_buffer_dirty() does nothing on these pages (buffers are already
    dirty) but page is never written back because it is clean.  So data
    written to these pages is lost once pages are reclaimed.
    
    Simple reproducer for the problem is:
    
      xfs_io -f -c "pwrite 0 2000" -c "pwrite 2000 2000" -c "fsync" \
        -c "pwrite 4000 2000" ocfs2_file
    
    After unmounting and mounting the fs again, you can observe that end of
    'ocfs2_file' has lost its contents.
    
    Fix the problem by not doing the pointless zeroing during conversion
    from inline format similarly as in the standard write path.
    
    [akpm@linux-foundation.org: fix whitespace, per Joseph]
    
    Link: https://lkml.kernel.org/r/20210930095405.21433-1-jack@suse.cz
    Fixes: 6dbf7bb55598 ("fs: Don't invalidate page buffers in block_write_full_page()")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Tested-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Acked-by: Gang He <ghe@suse.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: "Markov, Andrey" <Markov.Andrey@Dell.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1727e8688d2ea6e1eaf3b94621a9981cc73ce3b9
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Oct 7 14:19:49 2021 -0400

    ceph: fix handling of "meta" errors
    
    commit 1bd85aa65d0e7b5e4d09240f492f37c569fdd431 upstream.
    
    Currently, we check the wb_err too early for directories, before all of
    the unsafe child requests have been waited on. In order to fix that we
    need to check the mapping->wb_err later nearer to the end of ceph_fsync.
    
    We also have an overly-complex method for tracking errors after
    blocklisting. The errors recorded in cleanup_session_requests go to a
    completely separate field in the inode, but we end up reporting them the
    same way we would for any other error (in fsync).
    
    There's no real benefit to tracking these errors in two different
    places, since the only reporting mechanism for them is in fsync, and
    we'd need to advance them both every time.
    
    Given that, we can just remove i_meta_err, and convert the places that
    used it to instead just use mapping->wb_err instead. That also fixes
    the original problem by ensuring that we do a check_and_advance of the
    wb_err at the end of the fsync op.
    
    Cc: stable@vger.kernel.org
    URL: https://tracker.ceph.com/issues/52864
    Reported-by: Patrick Donnelly <pdonnell@redhat.com>
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 603d4bcc0fcdd99339f0b6b675fa14e140161de4
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Sep 30 08:33:13 2021 -0400

    ceph: skip existing superblocks that are blocklisted or shut down when mounting
    
    commit 98d0a6fb7303a6f4a120b8b8ed05b86ff5db53e8 upstream.
    
    Currently when mounting, we may end up finding an existing superblock
    that corresponds to a blocklisted MDS client. This means that the new
    mount ends up being unusable.
    
    If we've found an existing superblock with a client that is already
    blocklisted, and the client is not configured to recover on its own,
    fail the match. Ditto if the superblock has been forcibly unmounted.
    
    While we're in here, also rename "other" to the more conventional "fsc".
    
    Cc: stable@vger.kernel.org
    URL: https://bugzilla.redhat.com/show_bug.cgi?id=1901499
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d48db508f9119a98e4bbee76da43364d879aca73
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Oct 14 17:26:40 2021 +0800

    can: j1939: j1939_xtp_rx_rts_session_new(): abort TP less than 9 bytes
    
    commit a4fbe70c5cb746441d56b28cf88161d9e0e25378 upstream.
    
    The receiver should abort TP if 'total message size' in TP.CM_RTS and
    TP.CM_BAM is less than 9 or greater than 1785 [1], but currently the
    j1939 stack only checks the upper bound and the receiver will accept
    the following broadcast message:
    
      vcan1  18ECFF00   [8]  20 08 00 02 FF 00 23 01
      vcan1  18EBFF00   [8]  01 00 00 00 00 00 00 00
      vcan1  18EBFF00   [8]  02 00 FF FF FF FF FF FF
    
    This patch adds check for the lower bound and abort illegal TP.
    
    [1] SAE-J1939-82 A.3.4 Row 2 and A.3.6 Row 6.
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Link: https://lore.kernel.org/all/1634203601-3460-1-git-send-email-zhangchangzhong@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5abc9b9d3ca5df054aaabd10f9d99ebf5ffadeef
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Sep 30 11:33:20 2021 +0800

    can: j1939: j1939_xtp_rx_dat_one(): cancel session if receive TP.DT with error length
    
    commit 379743985ab6cfe2cbd32067cf4ed497baca6d06 upstream.
    
    According to SAE-J1939-21, the data length of TP.DT must be 8 bytes, so
    cancel session when receive unexpected TP.DT message.
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Link: https://lore.kernel.org/all/1632972800-45091-1-git-send-email-zhangchangzhong@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 864e77771a24c877aaf53aee019f78619cbcd668
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Sun Sep 26 18:47:57 2021 +0800

    can: j1939: j1939_netdev_start(): fix UAF for rx_kref of j1939_priv
    
    commit d9d52a3ebd284882f5562c88e55991add5d01586 upstream.
    
    It will trigger UAF for rx_kref of j1939_priv as following.
    
            cpu0                                    cpu1
    j1939_sk_bind(socket0, ndev0, ...)
    j1939_netdev_start
                                            j1939_sk_bind(socket1, ndev0, ...)
                                            j1939_netdev_start
    j1939_priv_set
                                            j1939_priv_get_by_ndev_locked
    j1939_jsk_add
    .....
    j1939_netdev_stop
    kref_put_lock(&priv->rx_kref, ...)
                                            kref_get(&priv->rx_kref, ...)
                                            REFCOUNT_WARN("addition on 0;...")
    
    ====================================================
    refcount_t: addition on 0; use-after-free.
    WARNING: CPU: 1 PID: 20874 at lib/refcount.c:25 refcount_warn_saturate+0x169/0x1e0
    RIP: 0010:refcount_warn_saturate+0x169/0x1e0
    Call Trace:
     j1939_netdev_start+0x68b/0x920
     j1939_sk_bind+0x426/0xeb0
     ? security_socket_bind+0x83/0xb0
    
    The rx_kref's kref_get() and kref_put() should use j1939_netdev_lock to
    protect.
    
    Fixes: 9d71dd0c70099 ("can: add support of SAE J1939 protocol")
    Link: https://lore.kernel.org/all/20210926104757.2021540-1-william.xuanziyang@huawei.com
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+85d9878b19c94f9019ad@syzkaller.appspotmail.com
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecfccb1c58c9c4585cc112d24cb0f06a88ee3525
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Mon Sep 6 17:42:19 2021 +0800

    can: j1939: j1939_tp_rxtimer(): fix errant alert in j1939_tp_rxtimer
    
    commit b504a884f6b5a77dac7d580ffa08e482f70d1a30 upstream.
    
    When the session state is J1939_SESSION_DONE, j1939_tp_rxtimer() will
    give an alert "rx timeout, send abort", but do nothing actually. Move
    the alert into session active judgment condition, it is more
    reasonable.
    
    One of the scenarios is that j1939_tp_rxtimer() execute followed by
    j1939_xtp_rx_abort_one(). After j1939_xtp_rx_abort_one(), the session
    state is J1939_SESSION_DONE, then j1939_tp_rxtimer() give an alert.
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Link: https://lore.kernel.org/all/20210906094219.95924-1-william.xuanziyang@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 053bc12df0d6097c1126d0e14fa778a0a8faeb64
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Sat Oct 9 15:40:18 2021 +0800

    can: isotp: isotp_sendmsg(): add result check for wait_event_interruptible()
    
    commit 9acf636215a6ce9362fe618e7da4913b8bfe84c8 upstream.
    
    Using wait_event_interruptible() to wait for complete transmission,
    but do not check the result of wait_event_interruptible() which can be
    interrupted. It will result in TX buffer has multiple accessors and
    the later process interferes with the previous process.
    
    Following is one of the problems reported by syzbot.
    
    =============================================================
    WARNING: CPU: 0 PID: 0 at net/can/isotp.c:840 isotp_tx_timer_handler+0x2e0/0x4c0
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.13.0-rc7+ #68
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014
    RIP: 0010:isotp_tx_timer_handler+0x2e0/0x4c0
    Call Trace:
     <IRQ>
     ? isotp_setsockopt+0x390/0x390
     __hrtimer_run_queues+0xb8/0x610
     hrtimer_run_softirq+0x91/0xd0
     ? rcu_read_lock_sched_held+0x4d/0x80
     __do_softirq+0xe8/0x553
     irq_exit_rcu+0xf8/0x100
     sysvec_apic_timer_interrupt+0x9e/0xc0
     </IRQ>
     asm_sysvec_apic_timer_interrupt+0x12/0x20
    
    Add result check for wait_event_interruptible() in isotp_sendmsg()
    to avoid multiple accessers for tx buffer.
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://lore.kernel.org/all/10ca695732c9dd267c76a3c30f37aefe1ff7e32f.1633764159.git.william.xuanziyang@huawei.com
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+78bab6958a614b0c80b9@syzkaller.appspotmail.com
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0917fb04069a51c5458a5ca95b7859de88cb61b8
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Fri May 7 11:18:39 2021 +0200

    can: isotp: isotp_sendmsg(): fix return error on FC timeout on TX path
    
    commit d674a8f123b4096d85955c7eaabec688f29724c9 upstream.
    
    When the a large chunk of data send and the receiver does not send a
    Flow Control frame back in time, the sendmsg() does not return a error
    code, but the number of bytes sent corresponding to the size of the
    packet.
    
    If a timeout occurs the isotp_tx_timer_handler() is fired, sets
    sk->sk_err and calls the sk->sk_error_report() function. It was
    wrongly expected that the error would be propagated to user space in
    every case. For isotp_sendmsg() blocking on wait_event_interruptible()
    this is not the case.
    
    This patch fixes the problem by checking if sk->sk_err is set and
    returning the error to user space.
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://github.com/hartkopp/can-isotp/issues/42
    Link: https://github.com/hartkopp/can-isotp/pull/43
    Link: https://lore.kernel.org/all/20210507091839.1366379-1-mkl@pengutronix.de
    Cc: stable@vger.kernel.org
    Reported-by: Sottas Guillaume (LMB) <Guillaume.Sottas@liebherr.com>
    Tested-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28f28e4bc3a5e0051faa963f10b778ab38c1db69
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Thu Oct 14 06:28:33 2021 +0000

    can: peak_pci: peak_pci_remove(): fix UAF
    
    commit 949fe9b35570361bc6ee2652f89a0561b26eec98 upstream.
    
    When remove the module peek_pci, referencing 'chan' again after
    releasing 'dev' will cause UAF.
    
    Fix this by releasing 'dev' later.
    
    The following log reveals it:
    
    [   35.961814 ] BUG: KASAN: use-after-free in peak_pci_remove+0x16f/0x270 [peak_pci]
    [   35.963414 ] Read of size 8 at addr ffff888136998ee8 by task modprobe/5537
    [   35.965513 ] Call Trace:
    [   35.965718 ]  dump_stack_lvl+0xa8/0xd1
    [   35.966028 ]  print_address_description+0x87/0x3b0
    [   35.966420 ]  kasan_report+0x172/0x1c0
    [   35.966725 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]
    [   35.967137 ]  ? trace_irq_enable_rcuidle+0x10/0x170
    [   35.967529 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]
    [   35.967945 ]  __asan_report_load8_noabort+0x14/0x20
    [   35.968346 ]  peak_pci_remove+0x16f/0x270 [peak_pci]
    [   35.968752 ]  pci_device_remove+0xa9/0x250
    
    Fixes: e6d9c80b7ca1 ("can: peak_pci: add support of some new PEAK-System PCI cards")
    Link: https://lore.kernel.org/all/1634192913-15639-1-git-send-email-zheyuma97@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9697ad6395f97208ca620912503a6943ea308ca0
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Wed Sep 29 16:21:10 2021 +0200

    can: peak_usb: pcan_usb_fd_decode_status(): fix back to ERROR_ACTIVE state notification
    
    commit 3d031abc7e7249573148871180c28ecedb5e27df upstream.
    
    This corrects the lack of notification of a return to ERROR_ACTIVE
    state for USB - CANFD devices from PEAK-System.
    
    Fixes: 0a25e1f4f185 ("can: peak_usb: add support for PEAK new CANFD USB adapters")
    Link: https://lore.kernel.org/all/20210929142111.55757-1-s.grosjean@peak-system.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4758e92e75cac632ddfb518e17601595b4f1ccac
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Sep 24 16:55:56 2021 +0900

    can: rcar_can: fix suspend/resume
    
    commit f7c05c3987dcfde9a4e8c2d533db013fabebca0d upstream.
    
    If the driver was not opened, rcar_can_suspend() should not call
    clk_disable() because the clock was not enabled.
    
    Fixes: fd1159318e55 ("can: add Renesas R-Car CAN driver")
    Link: https://lore.kernel.org/all/20210924075556.223685-1-yoshihiro.shimoda.uh@renesas.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Tested-by: Ayumi Nakamichi <ayumi.nakamichi.kf@renesas.com>
    Reviewed-by: Ulrich Hecht <uli+renesas@fpond.eu>
    Tested-by: Biju Das <biju.das.jz@bp.renesas.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a0928c3ebca08e3919514dd0cef674ecace01ba
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Wed Oct 20 19:52:06 2021 +0300

    net: enetc: fix ethtool counter name for PM0_TERR
    
    [ Upstream commit fb8dc5fc8cbdfd62ecd16493848aee2f42ed84d9 ]
    
    There are two counters named "MAC tx frames", one of them is actually
    incorrect. The correct name for that counter should be "MAC tx error
    frames", which is symmetric to the existing "MAC rx error frames".
    
    Fixes: 16eb4c85c964 ("enetc: Add ethtool statistics")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: <Claudiu Manoil <claudiu.manoil@nxp.com>
    Link: https://lore.kernel.org/r/20211020165206.1069889-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00ad7a01540968da214e1fe607aff27b97f9883a
Author: Dan Johansen <strit@manjaro.org>
Date:   Wed Aug 18 23:48:18 2021 +0200

    drm/panel: ilitek-ili9881c: Fix sync for Feixin K101-IM2BYL02 panel
    
    [ Upstream commit 772970620a839141835eaf2bc507d957b10adcca ]
    
    This adjusts sync values according to the datasheet
    
    Fixes: 1c243751c095 ("drm/panel: ilitek-ili9881c: add support for Feixin K101-IM2BYL02 panel")
    Co-developed-by: Marius Gripsgard <marius@ubports.com>
    Signed-off-by: Dan Johansen <strit@manjaro.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210818214818.298089-1-strit@manjaro.org
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eccd00728b1a0665e69f1895164e81bcb068f11c
Author: Tony Nguyen <anthony.l.nguyen@intel.com>
Date:   Tue Oct 19 13:04:16 2021 -0700

    ice: Add missing E810 device ids
    
    [ Upstream commit 7dcf78b870be6418d72bb1c4d4924bf0f5ca5052 ]
    
    As part of support for E810 XXV devices, some device ids were
    inadvertently left out. Add those missing ids.
    
    Fixes: 195fb97766da ("ice: add additional E810 device id")
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Acked-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6418508a3ac2a85a48d097f478566708a4f43087
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Wed Sep 22 09:55:42 2021 +0300

    e1000e: Fix packet loss on Tiger Lake and later
    
    [ Upstream commit 639e298f432fb058a9496ea16863f53b1ce935fe ]
    
    Update the HW MAC initialization flow. Do not gate DMA clock from
    the modPHY block. Keeping this clock will prevent dropped packets
    sent in burst mode on the Kumeran interface.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=213651
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=213377
    Fixes: fb776f5d57ee ("e1000e: Add support for Tiger Lake")
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Mark Pearson <markpearson@lenovo.com>
    Tested-by: Nechama Kraus <nechamax.kraus@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29f1bdcaa3ddfc9be22c82fa927a8e35b8132df0
Author: Kurt Kanzenbach <kurt@linutronix.de>
Date:   Wed Oct 20 09:04:33 2021 +0200

    net: stmmac: Fix E2E delay mechanism
    
    [ Upstream commit 3cb958027cb8b78d3ee639ce9af54c2ef1bf964f ]
    
    When utilizing End to End delay mechanism, the following error messages show up:
    
    |root@ehl1:~# ptp4l --tx_timestamp_timeout=50 -H -i eno2 -E -m
    |ptp4l[950.573]: selected /dev/ptp3 as PTP clock
    |ptp4l[950.586]: port 1: INITIALIZING to LISTENING on INIT_COMPLETE
    |ptp4l[950.586]: port 0: INITIALIZING to LISTENING on INIT_COMPLETE
    |ptp4l[952.879]: port 1: new foreign master 001395.fffe.4897b4-1
    |ptp4l[956.879]: selected best master clock 001395.fffe.4897b4
    |ptp4l[956.879]: port 1: assuming the grand master role
    |ptp4l[956.879]: port 1: LISTENING to GRAND_MASTER on RS_GRAND_MASTER
    |ptp4l[962.017]: port 1: received DELAY_REQ without timestamp
    |ptp4l[962.273]: port 1: received DELAY_REQ without timestamp
    |ptp4l[963.090]: port 1: received DELAY_REQ without timestamp
    
    Commit f2fb6b6275eb ("net: stmmac: enable timestamp snapshot for required PTP
    packets in dwmac v5.10a") already addresses this problem for the dwmac
    v5.10. However, same holds true for all dwmacs above version v4.10. Correct the
    check accordingly. Afterwards everything works as expected.
    
    Tested on Intel Atom(R) x6414RE Processor.
    
    Fixes: 14f347334bf2 ("net: stmmac: Correctly take timestamp for PTPv2")
    Fixes: f2fb6b6275eb ("net: stmmac: enable timestamp snapshot for required PTP packets in dwmac v5.10a")
    Suggested-by: Ong Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: Kurt Kanzenbach <kurt@linutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d36b15e3e7b5937cb1f6ac590a85facc3a320642
Author: Peng Li <lipeng321@huawei.com>
Date:   Tue Oct 19 22:16:35 2021 +0800

    net: hns3: disable sriov before unload hclge layer
    
    [ Upstream commit 0dd8a25f355b4df2d41c08df1716340854c7d4c5 ]
    
    HNS3 driver includes hns3.ko, hnae3.ko and hclge.ko.
    hns3.ko includes network stack and pci_driver, hclge.ko includes
    HW device action, algo_ops and timer task, hnae3.ko includes some
    register function.
    
    When SRIOV is enable and hclge.ko is removed, HW device is unloaded
    but VF still exists, PF will not reply VF mbx messages, and cause
    errors.
    
    This patch fix it by disable SRIOV before remove hclge.ko.
    
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a72e1d78a2ffd5ae94190434aafa7056891c9a8
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Tue Oct 19 22:16:34 2021 +0800

    net: hns3: fix vf reset workqueue cannot exit
    
    [ Upstream commit 1385cc81baeb3bd8cbbbcdc1557f038ac1712529 ]
    
    The task of VF reset is performed through the workqueue. It checks the
    value of hdev->reset_pending to determine whether to exit the loop.
    However, the value of hdev->reset_pending may also be assigned by
    the interrupt function hclgevf_misc_irq_handle(), which may cause the
    loop fail to exit and keep occupying the workqueue. This loop is not
    necessary, so remove it and the workqueue will be rescheduled if the
    reset needs to be retried or a new reset occurs.
    
    Fixes: 1cc9bc6e5867 ("net: hns3: split hclgevf_reset() into preparing and rebuilding part")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32b860d364d2fe3b2a5c2f506d7f7d08afea4994
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Tue Oct 19 22:16:33 2021 +0800

    net: hns3: schedule the polling again when allocation fails
    
    [ Upstream commit 68752b24f51a71d4f350a764d890b670f59062c5 ]
    
    Currently when there is a rx page allocation failure, it is
    possible that polling may be stopped if there is no more packet
    to be reveiced, which may cause queue stall problem under memory
    pressure.
    
    This patch makes sure polling is scheduled again when there is
    any rx page allocation failure, and polling will try to allocate
    receive buffers until it succeeds.
    
    Now the allocation retry is added, it is unnecessary to do the rx
    page allocation at the end of rx cleaning, so remove it. And reset
    the unused_count to zero after calling hns3_nic_alloc_rx_buffers()
    to avoid calling hns3_nic_alloc_rx_buffers() repeatedly under
    memory pressure.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96c013f40c9b524f15fafc653284776902d2dfd8
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Tue Oct 19 22:16:30 2021 +0800

    net: hns3: add limit ets dwrr bandwidth cannot be 0
    
    [ Upstream commit 731797fdffa3d083db536e2fdd07ceb050bb40b1 ]
    
    If ets dwrr bandwidth of tc is set to 0, the hardware will switch to SP
    mode. In this case, this tc may occupy all the tx bandwidth if it has
    huge traffic, so it violates the purpose of the user setting.
    
    To fix this problem, limit the ets dwrr bandwidth must greater than 0.
    
    Fixes: cacde272dd00 ("net: hns3: Add hclge_dcb module for the support of DCB feature")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21f61d10435c9c112bc14433fc026b231bdea918
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Tue Oct 19 22:16:29 2021 +0800

    net: hns3: reset DWRR of unused tc to zero
    
    [ Upstream commit b63fcaab959807282e9822e659034edf95fc8bd1 ]
    
    Currently, DWRR of tc will be initialized to a fixed value when this tc
    is enabled, but it is not been reset to 0 when this tc is disabled. It
    cause a problem that the DWRR of unused tc is not 0 after using tc tool
    to add and delete multi-tc parameters.
    
    For examples, after enabling 4 TCs and restoring to 1 TC by follow
    tc commands:
    
    $ tc qdisc add dev eth0 root mqprio num_tc 4 map 0 1 2 3 0 1 2 3 queues \
      8@0 8@8 8@16 8@24 hw 1 mode channel
    $ tc qdisc del dev eth0 root
    
    Now there is just one TC is enabled for eth0, but the tc info querying by
    debugfs is shown as follow:
    
    $ cat /mnt/hns3/0000:7d:00.0/tm/tc_sch_info
    enabled tc number: 1
    weight_offset: 14
    TC    MODE  WEIGHT
    0     dwrr    100
    1     dwrr    100
    2     dwrr    100
    3     dwrr    100
    4     dwrr      0
    5     dwrr      0
    6     dwrr      0
    7     dwrr      0
    
    This patch fixes it by resetting DWRR of tc to 0 when tc is disabled.
    
    Fixes: 848440544b41 ("net: hns3: Add support of TX Scheduler & Shaper to HNS3 driver")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53770a411559cf7bc0906d1df319cc533d2f4f58
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Oct 15 12:39:02 2021 -0500

    powerpc/smp: do not decrement idle task preempt count in CPU offline
    
    [ Upstream commit 787252a10d9422f3058df9a4821f389e5326c440 ]
    
    With PREEMPT_COUNT=y, when a CPU is offlined and then onlined again, we
    get:
    
    BUG: scheduling while atomic: swapper/1/0/0x00000000
    no locks held by swapper/1/0.
    CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.15.0-rc2+ #100
    Call Trace:
     dump_stack_lvl+0xac/0x108
     __schedule_bug+0xac/0xe0
     __schedule+0xcf8/0x10d0
     schedule_idle+0x3c/0x70
     do_idle+0x2d8/0x4a0
     cpu_startup_entry+0x38/0x40
     start_secondary+0x2ec/0x3a0
     start_secondary_prolog+0x10/0x14
    
    This is because powerpc's arch_cpu_idle_dead() decrements the idle task's
    preempt count, for reasons explained in commit a7c2bb8279d2 ("powerpc:
    Re-enable preemption before cpu_die()"), specifically "start_secondary()
    expects a preempt_count() of 0."
    
    However, since commit 2c669ef6979c ("powerpc/preempt: Don't touch the idle
    task's preempt_count during hotplug") and commit f1a0a376ca0c ("sched/core:
    Initialize the idle task with preemption disabled"), that justification no
    longer holds.
    
    The idle task isn't supposed to re-enable preemption, so remove the
    vestigial preempt_enable() from the CPU offline path.
    
    Tested with pseries and powernv in qemu, and pseries on PowerVM.
    
    Fixes: 2c669ef6979c ("powerpc/preempt: Don't touch the idle task's preempt_count during hotplug")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211015173902.2278118-1-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81dbd898fb7b93286dc962bb3dde38270c0d5b74
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Oct 4 00:56:06 2021 -0700

    NIOS2: irqflags: rename a redefined register name
    
    [ Upstream commit 4cce60f15c04d69eff6ffc539ab09137dbe15070 ]
    
    Both arch/nios2/ and drivers/mmc/host/tmio_mmc.c define a macro
    with the name "CTL_STATUS". Change the one in arch/nios2/ to be
    "CTL_FSTATUS" (flags status) to eliminate the build warning.
    
    In file included from ../drivers/mmc/host/tmio_mmc.c:22:
    drivers/mmc/host/tmio_mmc.h:31: warning: "CTL_STATUS" redefined
       31 | #define CTL_STATUS 0x1c
    arch/nios2/include/asm/registers.h:14: note: this is the location of the previous definition
       14 | #define CTL_STATUS      0
    
    Fixes: b31ebd8055ea ("nios2: Nios2 registers")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6edf99b000d6fb0e2b6a58580c1735453d6f3922
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Sat Oct 16 00:10:20 2021 +0200

    net: dsa: lantiq_gswip: fix register definition
    
    [ Upstream commit 66d262804a2276721eac86cf18fcd61046149193 ]
    
    I compared the register definitions with the D-Link DWR-966
    GPL sources and found that the PUAFD field definition was
    incorrect. This definition is unused and causes no issues.
    
    Fixes: 14fceff4771e ("net: dsa: Add Lantiq / Intel DSA driver for vrx200")
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Acked-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef97219d5fecd96b599dc48a9f95c5a50fc434ab
Author: Stephen Suryaputra <ssuryaextr@gmail.com>
Date:   Thu Oct 14 09:08:45 2021 -0400

    ipv6: When forwarding count rx stats on the orig netdev
    
    [ Upstream commit 0857d6f8c759d95f89d0436f86cdfd189ef99f20 ]
    
    Commit bdb7cc643fc9 ("ipv6: Count interface receive statistics on the
    ingress netdev") does not work when ip6_forward() executes on the skbs
    with vrf-enslaved netdev. Use IP6CB(skb)->iif to get to the right one.
    
    Add a selftest script to verify.
    
    Fixes: bdb7cc643fc9 ("ipv6: Count interface receive statistics on the ingress netdev")
    Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20211014130845.410602-1-ssuryaextr@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38d984e5e845b2c0ec87e396c3f3771b4187990f
Author: Leonard Crestez <cdleonard@gmail.com>
Date:   Fri Oct 15 10:26:04 2021 +0300

    tcp: md5: Fix overlap between vrf and non-vrf keys
    
    [ Upstream commit 86f1e3a8489f6a0232c1f3bc2bdb379f5ccdecec ]
    
    With net.ipv4.tcp_l3mdev_accept=1 it is possible for a listen socket to
    accept connection from the same client address in different VRFs. It is
    also possible to set different MD5 keys for these clients which differ
    only in the tcpm_l3index field.
    
    This appears to work when distinguishing between different VRFs but not
    between non-VRF and VRF connections. In particular:
    
     * tcp_md5_do_lookup_exact will match a non-vrf key against a vrf key.
    This means that adding a key with l3index != 0 after a key with l3index
    == 0 will cause the earlier key to be deleted. Both keys can be present
    if the non-vrf key is added later.
     * _tcp_md5_do_lookup can match a non-vrf key before a vrf key. This
    casues failures if the passwords differ.
    
    Fix this by making tcp_md5_do_lookup_exact perform an actual exact
    comparison on l3index and by making  __tcp_md5_do_lookup perfer
    vrf-bound keys above other considerations like prefixlen.
    
    Fixes: dea53bb80e07 ("tcp: Add l3index to tcp_md5sig_key and md5 functions")
    Signed-off-by: Leonard Crestez <cdleonard@gmail.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c28bea6b876f6d47e36c949c87de938dc0083858
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Fri Oct 15 15:07:54 2021 +0200

    lan78xx: select CRC32
    
    [ Upstream commit 46393d61a328d7c4e3264252dae891921126c674 ]
    
    Fix the following build/link error by adding a dependency on the CRC32
    routines:
    
      ld: drivers/net/usb/lan78xx.o: in function `lan78xx_set_multicast':
      lan78xx.c:(.text+0x48cf): undefined reference to `crc32_le'
    
    The actual use of crc32_le() comes indirectly through ether_crc().
    
    Fixes: 55d7de9de6c30 ("Microchip's LAN7800 family USB 2/3 to 10/100/1000 Ethernet device driver")
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c8943812dace238ec49fd62e599aad196a583c6
Author: Antoine Tenart <atenart@kernel.org>
Date:   Tue Oct 12 16:54:37 2021 +0200

    netfilter: ipvs: make global sysctl readonly in non-init netns
    
    [ Upstream commit 174c376278949c44aad89c514a6b5db6cee8db59 ]
    
    Because the data pointer of net/ipv4/vs/debug_level is not updated per
    netns, it must be marked as read-only in non-init netns.
    
    Fixes: c6d2d445d8de ("IPVS: netns, final patch enabling network name space.")
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 911e01990c70521d3601a03ca15716925afa9ca4
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Oct 12 08:18:13 2021 -0400

    netfilter: ip6t_rt: fix rt0_hdr parsing in rt_mt6
    
    [ Upstream commit a482c5e00a9b5a194085bcd372ac36141028becb ]
    
    In rt_mt6(), when it's a nonlinear skb, the 1st skb_header_pointer()
    only copies sizeof(struct ipv6_rt_hdr) to _route that rh points to.
    The access by ((const struct rt0_hdr *)rh)->reserved will overflow
    the buffer. So this access should be moved below the 2nd call to
    skb_header_pointer().
    
    Besides, after the 2nd skb_header_pointer(), its return value should
    also be checked, othersize, *rp may cause null-pointer-ref.
    
    v1->v2:
      - clean up some old debugging log.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69ea08c1b539657c0bea27d972f03b393caccc30
Author: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
Date:   Tue Sep 14 19:25:05 2021 -0400

    ice: fix getting UDP tunnel entry
    
    [ Upstream commit e4c2efa1393c6f1fbfabf91d1d83fcb4ae691ccb ]
    
    Correct parameters order in call to ice_tunnel_idx_to_entry function.
    
    Entry in sparse port table is correct when the idx is 0. For idx 1 one
    correct entry should be skipped, for idx 2 two of them should be skipped
    etc. Change if condition to be true when idx is 0, which means that
    previous valid entry of this tunnel type were skipped.
    
    Fixes: b20e6c17c468 ("ice: convert to new udp_tunnel infrastructure")
    Signed-off-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Tested-by: Gurucharan G <gurucharanx.g@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 842fce43190cc3611584c178caec8300c7eaf236
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Wed Oct 13 13:17:04 2021 +0800

    ASoC: wm8960: Fix clock configuration on slave mode
    
    [ Upstream commit 6b9b546dc00797c74bef491668ce5431ff54e1e2 ]
    
    There is a noise issue for 8kHz sample rate on slave mode.
    Compared with master mode, the difference is the DACDIV
    setting, after correcting the DACDIV, the noise is gone.
    
    There is no noise issue for 48kHz sample rate, because
    the default value of DACDIV is correct for 48kHz.
    
    So wm8960_configure_clocking() should be functional for
    ADC and DAC function even if it is slave mode.
    
    In order to be compatible for old use case, just add
    condition for checking that sysclk is zero with
    slave mode.
    
    Fixes: 0e50b51aa22f ("ASoC: wm8960: Let wm8960 driver configure its bit clock and frame clock")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1634102224-3922-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39afed394cc62365d54b02e091668bd68c3a5299
Author: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
Date:   Wed Oct 6 22:19:43 2021 +0200

    dma-debug: fix sg checks in debug_dma_map_sg()
    
    [ Upstream commit 293d92cbbd2418ca2ba43fed07f1b92e884d1c77 ]
    
    The following warning occurred sporadically on s390:
    DMA-API: nvme 0006:00:00.0: device driver maps memory from kernel text or rodata [addr=0000000048cc5e2f] [len=131072]
    WARNING: CPU: 4 PID: 825 at kernel/dma/debug.c:1083 check_for_illegal_area+0xa8/0x138
    
    It is a false-positive warning, due to broken logic in debug_dma_map_sg().
    check_for_illegal_area() checks for overlay of sg elements with kernel text
    or rodata. It is called with sg_dma_len(s) instead of s->length as
    parameter. After the call to ->map_sg(), sg_dma_len() will contain the
    length of possibly combined sg elements in the DMA address space, and not
    the individual sg element length, which would be s->length.
    
    The check will then use the physical start address of an sg element, and
    add the DMA length for the overlap check, which could result in the false
    warning, because the DMA length can be larger than the actual single sg
    element length.
    
    In addition, the call to check_for_illegal_area() happens in the iteration
    over mapped_ents, which will not include all individual sg elements if
    any of them were combined in ->map_sg().
    
    Fix this by using s->length instead of sg_dma_len(s). Also put the call to
    check_for_illegal_area() in a separate loop, iterating over all the
    individual sg elements ("nents" instead of "mapped_ents").
    
    While at it, as suggested by Robin Murphy, also move check_for_stack()
    inside the new loop, as it is similarly concerned with validating the
    individual sg elements.
    
    Link: https://lore.kernel.org/lkml/20210705185252.4074653-1-gerald.schaefer@linux.ibm.com
    Fixes: 884d05970bfb ("dma-debug: use sg_dma_len accessor")
    Signed-off-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a670c323055282c9b72794a491d53cef86bbeaf
Author: Juhee Kang <claudiajkang@gmail.com>
Date:   Mon Oct 4 21:14:38 2021 +0900

    netfilter: xt_IDLETIMER: fix panic that occurs when timer_type has garbage value
    
    [ Upstream commit 902c0b1887522a099aa4e1e6b4b476c2fe5dd13e ]
    
    Currently, when the rule related to IDLETIMER is added, idletimer_tg timer
    structure is initialized by kmalloc on executing idletimer_tg_create
    function. However, in this process timer->timer_type is not defined to
    a specific value. Thus, timer->timer_type has garbage value and it occurs
    kernel panic. So, this commit fixes the panic by initializing
    timer->timer_type using kzalloc instead of kmalloc.
    
    Test commands:
        # iptables -A OUTPUT -j IDLETIMER --timeout 1 --label test
        $ cat /sys/class/xt_idletimer/timers/test
          Killed
    
    Splat looks like:
        BUG: KASAN: user-memory-access in alarm_expires_remaining+0x49/0x70
        Read of size 8 at addr 0000002e8c7bc4c8 by task cat/917
        CPU: 12 PID: 917 Comm: cat Not tainted 5.14.0+ #3 79940a339f71eb14fc81aee1757a20d5bf13eb0e
        Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014
        Call Trace:
         dump_stack_lvl+0x6e/0x9c
         kasan_report.cold+0x112/0x117
         ? alarm_expires_remaining+0x49/0x70
         __asan_load8+0x86/0xb0
         alarm_expires_remaining+0x49/0x70
         idletimer_tg_show+0xe5/0x19b [xt_IDLETIMER 11219304af9316a21bee5ba9d58f76a6b9bccc6d]
         dev_attr_show+0x3c/0x60
         sysfs_kf_seq_show+0x11d/0x1f0
         ? device_remove_bin_file+0x20/0x20
         kernfs_seq_show+0xa4/0xb0
         seq_read_iter+0x29c/0x750
         kernfs_fop_read_iter+0x25a/0x2c0
         ? __fsnotify_parent+0x3d1/0x570
         ? iov_iter_init+0x70/0x90
         new_sync_read+0x2a7/0x3d0
         ? __x64_sys_llseek+0x230/0x230
         ? rw_verify_area+0x81/0x150
         vfs_read+0x17b/0x240
         ksys_read+0xd9/0x180
         ? vfs_write+0x460/0x460
         ? do_syscall_64+0x16/0xc0
         ? lockdep_hardirqs_on+0x79/0x120
         __x64_sys_read+0x43/0x50
         do_syscall_64+0x3b/0xc0
         entry_SYSCALL_64_after_hwframe+0x44/0xae
        RIP: 0033:0x7f0cdc819142
        Code: c0 e9 c2 fe ff ff 50 48 8d 3d 3a ca 0a 00 e8 f5 19 02 00 0f 1f 44 00 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 <48> 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 ec 28 48 89 54 24
        RSP: 002b:00007fff28eee5b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
        RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f0cdc819142
        RDX: 0000000000020000 RSI: 00007f0cdc032000 RDI: 0000000000000003
        RBP: 00007f0cdc032000 R08: 00007f0cdc031010 R09: 0000000000000000
        R10: 0000000000000022 R11: 0000000000000246 R12: 00005607e9ee31f0
        R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000
    
    Fixes: 68983a354a65 ("netfilter: xtables: Add snapshot of hardidletimer target")
    Signed-off-by: Juhee Kang <claudiajkang@gmail.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f4308a164a9de4ffaf86b22082dbdfa16bdc601
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Wed Oct 6 13:20:44 2021 -0400

    NFSD: Keep existing listeners on portlist error
    
    [ Upstream commit c20106944eb679fa3ab7e686fe5f6ba30fbc51e5 ]
    
    If nfsd has existing listening sockets without any processes, then an error
    returned from svc_create_xprt() for an additional transport will remove
    those existing listeners.  We're seeing this in practice when userspace
    attempts to create rpcrdma transports without having the rpcrdma modules
    present before creating nfsd kernel processes.  Fix this by checking for
    existing sockets before calling nfsd_destroy().
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 546c04c857912a60b0724a29315845b1e2379c90
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sun Aug 1 10:36:59 2021 -0700

    xtensa: xtfpga: Try software restart before simulating CPU reset
    
    [ Upstream commit 012e974501a270d8dfd4ee2039e1fdf7579c907e ]
    
    Rebooting xtensa images loaded with the '-kernel' option in qemu does
    not work. When executing a reboot command, the qemu session either hangs
    or experiences an endless sequence of error messages.
    
      Kernel panic - not syncing: Unrecoverable error in exception handler
    
    Reset code jumps to the CPU restart address, but Linux can not recover
    from there because code and data in the kernel init sections have been
    discarded and overwritten at this point.
    
    XTFPGA platforms have a means to reset the CPU by writing 0xdead into a
    specific FPGA IO address. When used in QEMU the kernel image loaded with
    the '-kernel' option gets restored to its original state allowing the
    machine to boot successfully.
    
    Use that mechanism to attempt a platform reset. If it does not work,
    fall back to the existing mechanism.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfef5d826276c59898d7f13303e39f840dd4a49d
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Oct 5 11:36:01 2021 -0700

    xtensa: xtfpga: use CONFIG_USE_OF instead of CONFIG_OF
    
    [ Upstream commit f3d7c2cdf6dc0d5402ec29c3673893b3542c5ad1 ]
    
    Use platform data to initialize xtfpga device drivers when CONFIG_USE_OF
    is not selected. This fixes xtfpga networking when CONFIG_USE_OF is not
    selected but CONFIG_OF is.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8284c981c1cbde04544a5bf378e25c0962d99db
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Oct 1 15:40:00 2021 -0400

    drm/amdgpu/display: fix dependencies for DRM_AMD_DC_SI
    
    [ Upstream commit 4702b34d1de9582df9dfa0e583ea28fff7de29df ]
    
    Depends on DRM_AMDGPU_SI and DRM_AMD_DC
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 101e1bcb114743033f0df86adcaa9b8571f93a06
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Sep 30 14:16:15 2021 +0200

    xen/x86: prevent PVH type from getting clobbered
    
    [ Upstream commit 9172b5c4a778da1f855b2e3780b1afabb3cfd523 ]
    
    Like xen_start_flags, xen_domain_type gets set before .bss gets cleared.
    Hence this variable also needs to be prevented from getting put in .bss,
    which is possible because XEN_NATIVE is an enumerator evaluating to
    zero. Any use prior to init_hvm_pv_info() setting the variable again
    would lead to wrong decisions; one such case is xenboot_console_setup()
    when called as a result of "earlyprintk=xen".
    
    Use __ro_after_init as more applicable than either __section(".data") or
    __read_mostly.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    
    Link: https://lore.kernel.org/r/d301677b-6f22-5ae6-bd36-458e1f323d0b@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6285b1b2212ac6f9af30980ed3def7a5b37680e
Author: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Date:   Mon Oct 4 16:22:07 2021 +0900

    block: decode QUEUE_FLAG_HCTX_ACTIVE in debugfs output
    
    [ Upstream commit 1dbdd99b511c966be9147ad72991a2856ac76f22 ]
    
    While debugging an issue we've found that $DEBUGFS/block/$disk/state
    doesn't decode QUEUE_FLAG_HCTX_ACTIVE but only displays its numerical
    value.
    
    Add QUEUE_FLAG(HCTX_ACTIVE) to the blk_queue_flag_name array so it'll get
    decoded properly.
    
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Link: https://lore.kernel.org/r/4351076388918075bd80ef07756f9d2ce63be12c.1633332053.git.johannes.thumshirn@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85c1827eeee7fa8998fd57ec48b74fcc9ae9cf40
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Thu Sep 2 15:13:58 2021 +0300

    ARM: dts: at91: sama5d2_som1_ek: disable ISC node by default
    
    [ Upstream commit 4348cc10da6377a86940beb20ad357933b8f91bb ]
    
    Without a sensor node, the ISC will simply fail to probe, as the
    corresponding port node is missing.
    It is then logical to disable the node in the devicetree.
    If we add a port with a connection to a sensor endpoint, ISC can be enabled.
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/20210902121358.503589-1-eugen.hristev@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5489c1bed5b86c07a8fafc2d6dad89e902b70c69
Author: Rob Herring <robh@kernel.org>
Date:   Thu Aug 19 13:42:38 2021 -0500

    arm: dts: vexpress-v2p-ca9: Fix the SMB unit-address
    
    [ Upstream commit 2e9edc07df2ec6f835222151fa4e536e9e54856a ]
    
    Based on 'ranges', the 'bus@4000000' node unit-address is off by 1 '0'.
    
    Link: https://lore.kernel.org/r/20210819184239.1192395-5-robh@kernel.org
    Cc: Andre Przywara <andre.przywara@arm.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f59da9f7efa73a31b6287bd9b8f03a8d536e524f
Author: Kamal Mostafa <kamal@canonical.com>
Date:   Mon Oct 18 10:18:08 2021 -0700

    io_uring: fix splice_fd_in checks backport typo
    
    The linux-5.10.y backport of commit "io_uring: add ->splice_fd_in checks"
    includes a typo: "|" where "||" should be. (The original upstream commit
    is fine.)
    
    Fixes: 54eb6211b979 ("io_uring: add ->splice_fd_in checks")
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org # v5.10
    Signed-off-by: Kamal Mostafa <kamal@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f32897af190d4716412e156ee0abcc16e4f1e5
Author: Jonathan Bell <jonathan@raspberrypi.org>
Date:   Fri Oct 8 12:25:44 2021 +0300

    xhci: add quirk for host controllers that don't update endpoint DCS
    
    commit 5255660b208aebfdb71d574f3952cf48392f4306 upstream.
    
    Seen on a VLI VL805 PCIe to USB controller. For non-stream endpoints
    at least, if the xHC halts on a particular TRB due to an error then
    the DCS field in the Out Endpoint Context maintained by the hardware
    is not updated with the current cycle state.
    
    Using the quirk XHCI_EP_CTX_BROKEN_DCS and instead fetch the DCS bit
    from the TRB that the xHC stopped on.
    
    [ bjorn: rebased to v5.14-rc2 ]
    
    Link: https://github.com/raspberrypi/linux/issues/3060
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonathan Bell <jonathan@raspberrypi.org>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20211008092547.3996295-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3b7f831a49b56c258ab8ef08d04045fcfb9b4a7
Author: Helge Deller <deller@gmx.de>
Date:   Wed Sep 1 22:18:18 2021 +0200

    parisc: math-emu: Fix fall-through warnings
    
    commit 6f1fce595b78b775d7fb585c15c2dc3a6994f96e upstream.
    
    Fix lots of fallthrough warnings, e.g.:
    arch/parisc/math-emu/fpudispatch.c:323:33: warning: this statement may fall through [-Wimplicit-fallthrough=]
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
