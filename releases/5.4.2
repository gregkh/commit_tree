commit 5f8bc2bb0e0f456e2217bbd1caac2acf211431c9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 4 22:31:09 2019 +0100

    Linux 5.4.2

commit e64cd7a033436300a1e4aee982d6530bd708f465
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 22 19:56:41 2019 +0100

    platform/x86: hp-wmi: Fix ACPI errors caused by passing 0 as input size
    
    commit f3e4f3fc8ee9729c4b1b27a478c68b713df53c0c upstream.
    
    The AML code implementing the WMI methods creates a variable length
    field to hold the input data we pass like this:
    
            CreateDWordField (Arg1, 0x0C, DSZI)
            Local5 = DSZI /* \HWMC.DSZI */
            CreateField (Arg1, 0x80, (Local5 * 0x08), DAIN)
    
    If we pass 0 as bios_args.datasize argument then (Local5 * 0x08)
    is 0 which results in these errors:
    
    [   71.973305] ACPI BIOS Error (bug): Attempt to CreateField of length zero (20190816/dsopcode-133)
    [   71.973332] ACPI Error: Aborting method \HWMC due to previous error (AE_AML_OPERAND_VALUE) (20190816/psparse-529)
    [   71.973413] ACPI Error: Aborting method \_SB.WMID.WMAA due to previous error (AE_AML_OPERAND_VALUE) (20190816/psparse-529)
    
    And in our HPWMI_WIRELESS2_QUERY calls always failing. for read commands
    like HPWMI_WIRELESS2_QUERY the DSZI value is not used / checked, except for
    read commands where extra input is needed to specify exactly what to read.
    
    So for HPWMI_WIRELESS2_QUERY we can safely pass the size of the expected
    output as insize to hp_wmi_perform_query(), as we are already doing for all
    other HPWMI_READ commands we send. Doing so fixes these errors.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197007
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201981
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5227ac4ddacdde511f10679a0b55797b8a2ecfd8
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 22 19:56:40 2019 +0100

    platform/x86: hp-wmi: Fix ACPI errors caused by too small buffer
    
    commit 16245db1489cd9aa579506f64afeeeb13d825a93 upstream.
    
    The HP WMI calls may take up to 128 bytes of data as input, and
    the AML methods implementing the WMI calls, declare a couple of fields for
    accessing input in different sizes, specifycally the HWMC method contains:
    
            CreateField (Arg1, 0x80, 0x0400, D128)
    
    Even though we do not use any of the WMI command-types which need a buffer
    of this size, the APCI interpreter still tries to create it as it is
    declared in generoc code at the top of the HWMC method which runs before
    the code looks at which command-type is requested.
    
    This results in many of these errors on many different HP laptop models:
    
    [   14.459261] ACPI Error: Field [D128] at 1152 exceeds Buffer [NULL] size 160 (bits) (20170303/dsopcode-236)
    [   14.459268] ACPI Error: Method parse/execution failed [\HWMC] (Node ffff8edcc61507f8), AE_AML_BUFFER_LIMIT (20170303/psparse-543)
    [   14.459279] ACPI Error: Method parse/execution failed [\_SB.WMID.WMAA] (Node ffff8edcc61523c0), AE_AML_BUFFER_LIMIT (20170303/psparse-543)
    
    This commit increases the size of the data element of the bios_args struct
    to 128 bytes fixing these errors.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197007
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201981
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41dc53ab988c914f2e16dc33b35448f5ad486f5d
Author: Candle Sun <candle.sun@unisoc.com>
Date:   Tue Oct 22 22:21:39 2019 +0800

    HID: core: check whether Usage Page item is after Usage ID items
    
    commit 1cb0d2aee26335d0bccf29100c7bed00ebece851 upstream.
    
    Upstream commit 58e75155009c ("HID: core: move Usage Page concatenation
    to Main item") adds support for Usage Page item after Usage ID items
    (such as keyboards manufactured by Primax).
    
    Usage Page concatenation in Main item works well for following report
    descriptor patterns:
    
        USAGE_PAGE (Keyboard)                   05 07
        USAGE_MINIMUM (Keyboard LeftControl)    19 E0
        USAGE_MAXIMUM (Keyboard Right GUI)      29 E7
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (8)                        95 08
        INPUT (Data,Var,Abs)                    81 02
    
    -------------
    
        USAGE_MINIMUM (Keyboard LeftControl)    19 E0
        USAGE_MAXIMUM (Keyboard Right GUI)      29 E7
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (8)                        95 08
        USAGE_PAGE (Keyboard)                   05 07
        INPUT (Data,Var,Abs)                    81 02
    
    But it makes the parser act wrong for the following report
    descriptor pattern(such as some Gamepads):
    
        USAGE_PAGE (Button)                     05 09
        USAGE (Button 1)                        09 01
        USAGE (Button 2)                        09 02
        USAGE (Button 4)                        09 04
        USAGE (Button 5)                        09 05
        USAGE (Button 7)                        09 07
        USAGE (Button 8)                        09 08
        USAGE (Button 14)                       09 0E
        USAGE (Button 15)                       09 0F
        USAGE (Button 13)                       09 0D
        USAGE_PAGE (Consumer Devices)           05 0C
        USAGE (Back)                            0a 24 02
        USAGE (HomePage)                        0a 23 02
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (11)                       95 0B
        INPUT (Data,Var,Abs)                    81 02
    
    With Usage Page concatenation in Main item, parser recognizes all the
    11 Usages as consumer keys, it is not the HID device's real intention.
    
    This patch checks whether Usage Page is really defined after Usage ID
    items by comparing usage page using status.
    
    Usage Page concatenation on currently defined Usage Page will always
    do in local parsing when Usage ID items encountered.
    
    When Main item is parsing, concatenation will do again with last
    defined Usage Page if this page has not been used in the previous
    usages concatenation.
    
    Signed-off-by: Candle Sun <candle.sun@unisoc.com>
    Signed-off-by: Nianfu Bai <nianfu.bai@unisoc.com>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Siarhei Vishniakou <svv@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f98a928d6ea6d3cc86f393be821da17a1f346733
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Nov 26 19:28:36 2019 +0800

    crypto: talitos - Fix build error by selecting LIB_DES
    
    commit dbc2e87bd8b6d3cc79730b3a49c5163b4c386b49 upstream.
    
    The talitos driver needs to select LIB_DES as it needs calls
    des_expand_key.
    
    Fixes: 9d574ae8ebc1 ("crypto: talitos/des - switch to new...")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88e373c0472af1eb742b9f2c03471397173b8d51
Author: Joel Stanley <joel@jms.id.au>
Date:   Fri Nov 29 10:49:30 2019 +1030

    Revert "jffs2: Fix possible null-pointer dereferences in jffs2_add_frag_to_fragtree()"
    
    commit 6e78c01fde9023e0701f3af880c1fd9de6e4e8e3 upstream.
    
    This reverts commit f2538f999345405f7d2e1194c0c8efa4e11f7b3a. The patch
    stopped JFFS2 from being able to mount an existing filesystem with the
    following errors:
    
     jffs2: error: (77) jffs2_build_inode_fragtree: Add node to tree failed -22
     jffs2: error: (77) jffs2_do_read_inode_internal: Failed to build final fragtree for inode #5377: error -22
    
    Fixes: f2538f999345 ("jffs2: Fix possible null-pointer dereferences...")
    Cc: stable@vger.kernel.org
    Suggested-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69412e8ac6206e36aa09a6e3f5503be020b64ba8
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Nov 7 21:43:41 2019 -0500

    ext4: add more paranoia checking in ext4_expand_extra_isize handling
    
    commit 4ea99936a1630f51fc3a2d61a58ec4a1c4b7d55a upstream.
    
    It's possible to specify a non-zero s_want_extra_isize via debugging
    option, and this can cause bad things(tm) to happen when using a file
    system with an inode size of 128 bytes.
    
    Add better checking when the file system is mounted, as well as when
    we are actually doing the trying to do the inode expansion.
    
    Link: https://lore.kernel.org/r/20191110121510.GH23325@mit.edu
    Reported-by: syzbot+f8d6f8386ceacdbfff57@syzkaller.appspotmail.com
    Reported-by: syzbot+33d7ea72e47de3bdf4e1@syzkaller.appspotmail.com
    Reported-by: syzbot+44b6763edfc17144296f@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2840e52f679a93bbef3d45d8da4c454fa7e3a446
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sun Dec 1 10:39:56 2019 +0100

    r8169: fix resume on cable plug-in
    
    [ Upstream commit 398fd408ccfb5e44b1cbe73a209d2281d3efa83c ]
    
    It was reported [0] that network doesn't wake up on cable plug-in with
    certain chip versions. Reason is that on these chip versions the PHY
    doesn't detect cable plug-in when being in power-down mode. So prevent
    the PHY from powering down if WoL is enabled.
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=202103
    
    Fixes: 95fb8bb3181b ("net: phy: force phy suspend when calling phy_stop")
    Reported-by: jhdskag3 <jhdskag3@tutanota.com>
    Tested-by: jhdskag3 <jhdskag3@tutanota.com>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c07fd3caadc3a6c18f36f5ee02d0c1981bede81e
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sun Dec 1 10:27:14 2019 +0100

    r8169: fix jumbo configuration for RTL8168evl
    
    [ Upstream commit 14012c9f3bb922b9e0751ba43d15cc580a6049bf ]
    
    Alan reported [0] that network is broken since the referenced commit
    when using jumbo frames. This commit isn't wrong, it just revealed
    another issue that has been existing before. According to the vendor
    driver the RTL8168e-specific jumbo config doesn't apply for RTL8168evl.
    
    [0] https://lkml.org/lkml/2019/11/30/119
    
    Fixes: 4ebcb113edcc ("r8169: fix jumbo packet handling on resume from suspend")
    Reported-by: Alan J. Wylie <alan@wylie.me.uk>
    Tested-by: Alan J. Wylie <alan@wylie.me.uk>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb2008b4de93c5319faf55ad248180bb402496ec
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Thu Nov 28 15:58:06 2019 -0300

    selftests: pmtu: use -oneline for ip route list cache
    
    [ Upstream commit 2745aea6750ff0d2c48285d25bdb00e5b636ec8b ]
    
    Some versions of iproute2 will output more than one line per entry, which
    will cause the test to fail, like:
    
    TEST: ipv6: list and flush cached exceptions                        [FAIL]
      can't list cached exceptions
    
    That happens, for example, with iproute2 4.15.0. When using the -oneline
    option, this will work just fine:
    
    TEST: ipv6: list and flush cached exceptions                        [ OK ]
    
    This also works just fine with a more recent version of iproute2, like
    5.4.0.
    
    For some reason, two lines are printed for the IPv4 test no matter what
    version of iproute2 is used. Use the same -oneline parameter there instead
    of counting the lines twice.
    
    Fixes: b964641e9925 ("selftests: pmtu: Make list_flush_ipv6_exception test more demanding")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c36e7734b8b288bf851ddc159d8efeded1edc1
Author: John Rutherford <john.rutherford@dektech.com.au>
Date:   Tue Nov 26 13:52:55 2019 +1100

    tipc: fix link name length check
    
    [ Upstream commit fd567ac20cb0377ff466d3337e6e9ac5d0cb15e4 ]
    
    In commit 4f07b80c9733 ("tipc: check msg->req data len in
    tipc_nl_compat_bearer_disable") the same patch code was copied into
    routines: tipc_nl_compat_bearer_disable(),
    tipc_nl_compat_link_stat_dump() and tipc_nl_compat_link_reset_stats().
    The two link routine occurrences should have been modified to check
    the maximum link name length and not bearer name length.
    
    Fixes: 4f07b80c9733 ("tipc: check msg->reg data len in tipc_nl_compat_bearer_disable")
    Signed-off-by: John Rutherford <john.rutherford@dektech.com.au>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b7a6e872dffb90c35daa3c4ebe056b175d456ef
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:46 2019 -0800

    selftests: bpf: correct perror strings
    
    [ Upstream commit e5dc9dd3258098bf8b5ceb75fc3433b41eff618a ]
    
    perror(str) is basically equivalent to
    print("%s: %s\n", str, strerror(errno)).
    New line or colon at the end of str is
    a mistake/breaks formatting.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 987daa48f8d84f02add8fd9fd5f1a8783159771e
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:45 2019 -0800

    selftests: bpf: test_sockmap: handle file creation failures gracefully
    
    [ Upstream commit 4b67c515036313f3c3ecba3cb2babb9cbddb3f85 ]
    
    test_sockmap creates a temporary file to use for sendpage.
    this may fail for various reasons. Handle the error rather
    than segfault.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 569cac5a50002a135c9d791a3bac73e70cba0450
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:44 2019 -0800

    net/tls: use sg_next() to walk sg entries
    
    [ Upstream commit c5daa6cccdc2f94aca2c9b3fa5f94e4469997293 ]
    
    Partially sent record cleanup path increments an SG entry
    directly instead of using sg_next(). This should not be a
    problem today, as encrypted messages should be always
    allocated as arrays. But given this is a cleanup path it's
    easy to miss was this ever to change. Use sg_next(), and
    simplify the code.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a58365a79a2ab99bcf58ea4d3264c4029093147f
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:43 2019 -0800

    net/tls: remove the dead inplace_crypto code
    
    [ Upstream commit 9e5ffed37df68d0ccfb2fdc528609e23a1e70ebe ]
    
    Looks like when BPF support was added by commit d3b18ad31f93
    ("tls: add bpf support to sk_msg handling") and
    commit d829e9c4112b ("tls: convert to generic sk_msg interface")
    it broke/removed the support for in-place crypto as added by
    commit 4e6d47206c32 ("tls: Add support for inplace records
    encryption").
    
    The inplace_crypto member of struct tls_rec is dead, inited
    to zero, and sometimes set to zero again. It used to be
    set to 1 when record was allocated, but the skmsg code doesn't
    seem to have been written with the idea of in-place crypto
    in mind.
    
    Since non trivial effort is required to bring the feature back
    and we don't really have the HW to measure the benefit just
    remove the left over support for now to avoid confusing readers.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e663d88f9f4ae52e2985ac4b52f25e470c7e4f7
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:42 2019 -0800

    selftests/tls: add a test for fragmented messages
    
    [ Upstream commit 65190f77424d7b82c4aad7326c9cce6bd91a2fcc ]
    
    Add a sendmsg test with very fragmented messages. This should
    fill up sk_msg and test the boundary conditions.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cef7ef9c42562212574c32b98fbb1617a2ff515
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:41 2019 -0800

    net: skmsg: fix TLS 1.3 crash with full sk_msg
    
    [ Upstream commit 031097d9e079e40dce401031d1012e83d80eaf01 ]
    
    TLS 1.3 started using the entry at the end of the SG array
    for chaining-in the single byte content type entry. This mostly
    works:
    
    [ E E E E E E . . ]
      ^           ^
       start       end
    
                     E < content type
                   /
    [ E E E E E E C . ]
      ^           ^
       start       end
    
    (Where E denotes a populated SG entry; C denotes a chaining entry.)
    
    If the array is full, however, the end will point to the start:
    
    [ E E E E E E E E ]
      ^
       start
       end
    
    And we end up overwriting the start:
    
        E < content type
       /
    [ C E E E E E E E ]
      ^
       start
       end
    
    The sg array is supposed to be a circular buffer with start and
    end markers pointing anywhere. In case where start > end
    (i.e. the circular buffer has "wrapped") there is an extra entry
    reserved at the end to chain the two halves together.
    
    [ E E E E E E . . l ]
    
    (Where l is the reserved entry for "looping" back to front.
    
    As suggested by John, let's reserve another entry for chaining
    SG entries after the main circular buffer. Note that this entry
    has to be pointed to by the end entry so its position is not fixed.
    
    Examples of full messages:
    
    [ E E E E E E E E . l ]
      ^               ^
       start           end
    
       <---------------.
    [ E E . E E E E E E l ]
          ^ ^
       end   start
    
    Now the end will always point to an unused entry, so TLS 1.3
    can always use it.
    
    Fixes: 130b392c6cd6 ("net: tls: Add tls 1.3 support")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 795c687eacf029b9c34dacce640b2050f0feb203
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:40 2019 -0800

    net/tls: free the record on encryption error
    
    [ Upstream commit d10523d0b3d78153ee58d19853ced26c9004c8c4 ]
    
    When tls_do_encryption() fails the SG lists are left with the
    SG_END and SG_CHAIN marks in place. One could hope that once
    encryption fails we will never see the record again, but that
    is in fact not true. Commit d3b18ad31f93 ("tls: add bpf support
    to sk_msg handling") added special handling to ENOMEM and ENOSPC
    errors which mean we may see the same record re-submitted.
    
    As suggested by John free the record, the BPF code is already
    doing just that.
    
    Reported-by: syzbot+df0d4ec12332661dd1f9@syzkaller.appspotmail.com
    Fixes: d3b18ad31f93 ("tls: add bpf support to sk_msg handling")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a85ca0027970f5a283555577791db3e32a212e7a
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:39 2019 -0800

    net/tls: take into account that bpf_exec_tx_verdict() may free the record
    
    [ Upstream commit c329ef9684de9517d82af5b4758c9e1b64a8a11a ]
    
    bpf_exec_tx_verdict() may free the record if tls_push_record()
    fails, or if the entire record got consumed by BPF. Re-check
    ctx->open_rec before touching the data.
    
    Fixes: d3b18ad31f93 ("tls: add bpf support to sk_msg handling")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab46fb3ef68efeab4c1432d2696238ca74bf72be
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sun Dec 1 18:41:25 2019 +0100

    openvswitch: remove another BUG_ON()
    
    [ Upstream commit 8a574f86652a4540a2433946ba826ccb87f398cc ]
    
    If we can't build the flow del notification, we can simply delete
    the flow, no need to crash the kernel. Still keep a WARN_ON to
    preserve debuggability.
    
    Note: the BUG_ON() predates the Fixes tag, but this change
    can be applied only after the mentioned commit.
    
    v1 -> v2:
     - do not leak an skb on error
    
    Fixes: aed067783e50 ("openvswitch: Minimize ovs_flow_cmd_del critical section.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 910d9e8839dc93ed3afe46642ad3874d3057102b
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sun Dec 1 18:41:24 2019 +0100

    openvswitch: drop unneeded BUG_ON() in ovs_flow_cmd_build_info()
    
    [ Upstream commit 8ffeb03fbba3b599690b361467bfd2373e8c450f ]
    
    All the callers of ovs_flow_cmd_build_info() already deal with
    error return code correctly, so we can handle the error condition
    in a more gracefull way. Still dump a warning to preserve
    debuggability.
    
    v1 -> v2:
     - clarify the commit message
     - clean the skb and report the error (DaveM)
    
    Fixes: ccb1352e76cf ("net: Add Open vSwitch kernel components.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0111438d7ce48034f8b93ba75516227e6bcfecd5
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 23 11:56:49 2019 +0800

    sctp: cache netns in sctp_ep_common
    
    [ Upstream commit 312434617cb16be5166316cf9d08ba760b1042a1 ]
    
    This patch is to fix a data-race reported by syzbot:
    
      BUG: KCSAN: data-race in sctp_assoc_migrate / sctp_hash_obj
    
      write to 0xffff8880b67c0020 of 8 bytes by task 18908 on cpu 1:
        sctp_assoc_migrate+0x1a6/0x290 net/sctp/associola.c:1091
        sctp_sock_migrate+0x8aa/0x9b0 net/sctp/socket.c:9465
        sctp_accept+0x3c8/0x470 net/sctp/socket.c:4916
        inet_accept+0x7f/0x360 net/ipv4/af_inet.c:734
        __sys_accept4+0x224/0x430 net/socket.c:1754
        __do_sys_accept net/socket.c:1795 [inline]
        __se_sys_accept net/socket.c:1792 [inline]
        __x64_sys_accept+0x4e/0x60 net/socket.c:1792
        do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      read to 0xffff8880b67c0020 of 8 bytes by task 12003 on cpu 0:
        sctp_hash_obj+0x4f/0x2d0 net/sctp/input.c:894
        rht_key_get_hash include/linux/rhashtable.h:133 [inline]
        rht_key_hashfn include/linux/rhashtable.h:159 [inline]
        rht_head_hashfn include/linux/rhashtable.h:174 [inline]
        head_hashfn lib/rhashtable.c:41 [inline]
        rhashtable_rehash_one lib/rhashtable.c:245 [inline]
        rhashtable_rehash_chain lib/rhashtable.c:276 [inline]
        rhashtable_rehash_table lib/rhashtable.c:316 [inline]
        rht_deferred_worker+0x468/0xab0 lib/rhashtable.c:420
        process_one_work+0x3d4/0x890 kernel/workqueue.c:2269
        worker_thread+0xa0/0x800 kernel/workqueue.c:2415
        kthread+0x1d4/0x200 drivers/block/aoe/aoecmd.c:1253
        ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:352
    
    It was caused by rhashtable access asoc->base.sk when sctp_assoc_migrate
    is changing its value. However, what rhashtable wants is netns from asoc
    base.sk, and for an asoc, its netns won't change once set. So we can
    simply fix it by caching netns since created.
    
    Fixes: d6c0256a60e6 ("sctp: add the rhashtable apis for sctp global transport hashtable")
    Reported-by: syzbot+e3b35fe7918ff0ee474e@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97d92f0763e632d06786e4cd76b76eb8b995acbd
Author: Jouni Hogander <jouni.hogander@unikie.com>
Date:   Mon Nov 25 14:23:43 2019 +0200

    slip: Fix use-after-free Read in slip_open
    
    [ Upstream commit e58c1912418980f57ba2060017583067f5f71e52 ]
    
    Slip_open doesn't clean-up device which registration failed from the
    slip_devs device list. On next open after failure this list is iterated
    and freed device is accessed. Fix this by calling sl_free_netdev in error
    path.
    
    Here is the trace from the Syzbot:
    
    __dump_stack lib/dump_stack.c:77 [inline]
    dump_stack+0x197/0x210 lib/dump_stack.c:118
    print_address_description.constprop.0.cold+0xd4/0x30b mm/kasan/report.c:374
    __kasan_report.cold+0x1b/0x41 mm/kasan/report.c:506
    kasan_report+0x12/0x20 mm/kasan/common.c:634
    __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:132
    sl_sync drivers/net/slip/slip.c:725 [inline]
    slip_open+0xecd/0x11b7 drivers/net/slip/slip.c:801
    tty_ldisc_open.isra.0+0xa3/0x110 drivers/tty/tty_ldisc.c:469
    tty_set_ldisc+0x30e/0x6b0 drivers/tty/tty_ldisc.c:596
    tiocsetd drivers/tty/tty_io.c:2334 [inline]
    tty_ioctl+0xe8d/0x14f0 drivers/tty/tty_io.c:2594
    vfs_ioctl fs/ioctl.c:46 [inline]
    file_ioctl fs/ioctl.c:509 [inline]
    do_vfs_ioctl+0xdb6/0x13e0 fs/ioctl.c:696
    ksys_ioctl+0xab/0xd0 fs/ioctl.c:713
    __do_sys_ioctl fs/ioctl.c:720 [inline]
    __se_sys_ioctl fs/ioctl.c:718 [inline]
    __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:718
    do_syscall_64+0xfa/0x760 arch/x86/entry/common.c:290
    entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: 3b5a39979daf ("slip: Fix memory leak in slip_open error path")
    Reported-by: syzbot+4d5170758f3762109542@syzkaller.appspotmail.com
    Cc: David Miller <davem@davemloft.net>
    Cc: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Jouni Hogander <jouni.hogander@unikie.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6a456237de1380c724a504f7105aad9a3e65873
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Nov 22 16:17:56 2019 -0600

    sctp: Fix memory leak in sctp_sf_do_5_2_4_dupcook
    
    [ Upstream commit b6631c6031c746ed004c4221ec0616d7a520f441 ]
    
    In the implementation of sctp_sf_do_5_2_4_dupcook() the allocated
    new_asoc is leaked if security_sctp_assoc_request() fails. Release it
    via sctp_association_free().
    
    Fixes: 2277c7cd75e3 ("sctp: Add LSM hooks")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8109f5b67aa3ae3310196318a1d395c09dd1a4c5
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Nov 26 12:55:50 2019 +0100

    openvswitch: fix flow command message size
    
    [ Upstream commit 4e81c0b3fa93d07653e2415fa71656b080a112fd ]
    
    When user-space sets the OVS_UFID_F_OMIT_* flags, and the relevant
    flow has no UFID, we can exceed the computed size, as
    ovs_nla_put_identifier() will always dump an OVS_FLOW_ATTR_KEY
    attribute.
    Take the above in account when computing the flow command message
    size.
    
    Fixes: 74ed7ab9264c ("openvswitch: Add support for unique flow IDs.")
    Reported-by: Qi Jun Ding <qding@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbb5cc35b9a639e22e1c3f8956c8c3c498c82df5
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Thu Nov 28 14:29:09 2019 +0800

    net: sched: fix `tc -s class show` no bstats on class with nolock subqueues
    
    [ Upstream commit 14e54ab9143fa60794d13ea0a66c792a2046a8f3 ]
    
    When a classful qdisc's child qdisc has set the flag
    TCQ_F_CPUSTATS (pfifo_fast for example), the child qdisc's
    cpu_bstats should be passed to gnet_stats_copy_basic(),
    but many classful qdisc didn't do that. As a result,
    `tc -s class show dev DEV` always return 0 for bytes and
    packets in this case.
    
    Pass the child qdisc's cpu_bstats to gnet_stats_copy_basic()
    to fix this issue.
    
    The qstats also has this problem, but it has been fixed
    in 5dd431b6b9 ("net: sched: introduce and use qstats read...")
    and bstats still remains buggy.
    
    Fixes: 22e0f8b9322c ("net: sched: make bstats per cpu and estimator RCU safe")
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: Tony Lu <tonylu@linux.alibaba.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63c197a192e2b81190fe3305c8af50aa69b4b4a2
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed Nov 27 00:16:44 2019 +0200

    net: psample: fix skb_over_panic
    
    [ Upstream commit 7eb9d7675c08937cd11d32b0b40442d4d731c5ee ]
    
    We need to calculate the skb size correctly otherwise we risk triggering
    skb_over_panic[1]. The issue is that data_len is added to the skb in a
    nl attribute, but we don't account for its header size (nlattr 4 bytes)
    and alignment. We account for it when calculating the total size in
    the > PSAMPLE_MAX_PACKET_SIZE comparison correctly, but not when
    allocating after that. The fix is simple - use nla_total_size() for
    data_len when allocating.
    
    To reproduce:
     $ tc qdisc add dev eth1 clsact
     $ tc filter add dev eth1 egress matchall action sample rate 1 group 1 trunc 129
     $ mausezahn eth1 -b bcast -a rand -c 1 -p 129
     < skb_over_panic BUG(), tail is 4 bytes past skb->end >
    
    [1] Trace:
     [   50.459526][ T3480] skbuff: skb_over_panic: text:(____ptrval____) len:196 put:136 head:(____ptrval____) data:(____ptrval____) tail:0xc4 end:0xc0 dev:<NULL>
     [   50.474339][ T3480] ------------[ cut here ]------------
     [   50.481132][ T3480] kernel BUG at net/core/skbuff.c:108!
     [   50.486059][ T3480] invalid opcode: 0000 [#1] PREEMPT SMP
     [   50.489463][ T3480] CPU: 3 PID: 3480 Comm: mausezahn Not tainted 5.4.0-rc7 #108
     [   50.492844][ T3480] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-2.fc30 04/01/2014
     [   50.496551][ T3480] RIP: 0010:skb_panic+0x79/0x7b
     [   50.498261][ T3480] Code: bc 00 00 00 41 57 4c 89 e6 48 c7 c7 90 29 9a 83 4c 8b 8b c0 00 00 00 50 8b 83 b8 00 00 00 50 ff b3 c8 00 00 00 e8 ae ef c0 fe <0f> 0b e8 2f df c8 fe 48 8b 55 08 44 89 f6 4c 89 e7 48 c7 c1 a0 22
     [   50.504111][ T3480] RSP: 0018:ffffc90000447a10 EFLAGS: 00010282
     [   50.505835][ T3480] RAX: 0000000000000087 RBX: ffff888039317d00 RCX: 0000000000000000
     [   50.507900][ T3480] RDX: 0000000000000000 RSI: ffffffff812716e1 RDI: 00000000ffffffff
     [   50.509820][ T3480] RBP: ffffc90000447a60 R08: 0000000000000001 R09: 0000000000000000
     [   50.511735][ T3480] R10: ffffffff81d4f940 R11: 0000000000000000 R12: ffffffff834a22b0
     [   50.513494][ T3480] R13: ffffffff82c10433 R14: 0000000000000088 R15: ffffffff838a8084
     [   50.515222][ T3480] FS:  00007f3536462700(0000) GS:ffff88803eac0000(0000) knlGS:0000000000000000
     [   50.517135][ T3480] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     [   50.518583][ T3480] CR2: 0000000000442008 CR3: 000000003b222000 CR4: 00000000000006e0
     [   50.520723][ T3480] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     [   50.522709][ T3480] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     [   50.524450][ T3480] Call Trace:
     [   50.525214][ T3480]  skb_put.cold+0x1b/0x1b
     [   50.526171][ T3480]  psample_sample_packet+0x1d3/0x340
     [   50.527307][ T3480]  tcf_sample_act+0x178/0x250
     [   50.528339][ T3480]  tcf_action_exec+0xb1/0x190
     [   50.529354][ T3480]  mall_classify+0x67/0x90
     [   50.530332][ T3480]  tcf_classify+0x72/0x160
     [   50.531286][ T3480]  __dev_queue_xmit+0x3db/0xd50
     [   50.532327][ T3480]  dev_queue_xmit+0x18/0x20
     [   50.533299][ T3480]  packet_sendmsg+0xee7/0x2090
     [   50.534331][ T3480]  sock_sendmsg+0x54/0x70
     [   50.535271][ T3480]  __sys_sendto+0x148/0x1f0
     [   50.536252][ T3480]  ? tomoyo_file_ioctl+0x23/0x30
     [   50.537334][ T3480]  ? ksys_ioctl+0x5e/0xb0
     [   50.540068][ T3480]  __x64_sys_sendto+0x2a/0x30
     [   50.542810][ T3480]  do_syscall_64+0x73/0x1f0
     [   50.545383][ T3480]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
     [   50.548477][ T3480] RIP: 0033:0x7f35357d6fb3
     [   50.551020][ T3480] Code: 48 8b 0d 18 90 20 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d f9 d3 20 00 00 75 13 49 89 ca b8 2c 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 34 c3 48 83 ec 08 e8 eb f6 ff ff 48 89 04 24
     [   50.558547][ T3480] RSP: 002b:00007ffe0c7212c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
     [   50.561870][ T3480] RAX: ffffffffffffffda RBX: 0000000001dac010 RCX: 00007f35357d6fb3
     [   50.565142][ T3480] RDX: 0000000000000082 RSI: 0000000001dac2a2 RDI: 0000000000000003
     [   50.568469][ T3480] RBP: 00007ffe0c7212f0 R08: 00007ffe0c7212d0 R09: 0000000000000014
     [   50.571731][ T3480] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000082
     [   50.574961][ T3480] R13: 0000000001dac2a2 R14: 0000000000000001 R15: 0000000000000003
     [   50.578170][ T3480] Modules linked in: sch_ingress virtio_net
     [   50.580976][ T3480] ---[ end trace 61a515626a595af6 ]---
    
    CC: Yotam Gigi <yotamg@mellanox.com>
    CC: Jiri Pirko <jiri@mellanox.com>
    CC: Jamal Hadi Salim <jhs@mojatatu.com>
    CC: Simon Horman <simon.horman@netronome.com>
    CC: Roopa Prabhu <roopa@cumulusnetworks.com>
    Fixes: 6ae0a6286171 ("net: Introduce psample, a new genetlink channel for packet sampling")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40c1eee5669d91140dfb333e2839225e6a0372a8
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu Nov 28 10:00:21 2019 +0800

    net: macb: add missed tasklet_kill
    
    [ Upstream commit 61183b056b49e2937ff92a1424291ba36a6f6d05 ]
    
    This driver forgets to kill tasklet in remove.
    Add the call to fix it.
    
    Fixes: 032dc41ba6e2 ("net: macb: Handle HRESP error")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45b03799ad3ca6f626d49c0e5fccc694431f6c25
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Mon Nov 25 12:43:51 2019 +0100

    net: dsa: sja1105: fix sja1105_parse_rgmii_delays()
    
    [ Upstream commit 9bca3a0a923fc3f0fb9e41391be1d0f291e86858 ]
    
    This function was using configuration of port 0 in devicetree for all ports.
    In case CPU port was not 0, the delay settings was ignored. This resulted not
    working communication between CPU and the switch.
    
    Fixes: f5b8631c293b ("net: dsa: sja1105: Error out if RGMII delays are requested in DT")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72e08c098efa5649ae5f0c84be75d4a0e41be1da
Author: David Bauer <mail@david-bauer.net>
Date:   Fri Nov 22 22:44:51 2019 +0100

    mdio_bus: don't use managed reset-controller
    
    [ Upstream commit 32085f25d7b68404055f3525c780142fc72e543f ]
    
    Geert Uytterhoeven reported that using devm_reset_controller_get leads
    to a WARNING when probing a reset-controlled PHY. This is because the
    device devm_reset_controller_get gets supplied is not actually the
    one being probed.
    
    Acquire an unmanaged reset-control as well as free the reset_control on
    unregister to fix this.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    CC: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David Bauer <mail@david-bauer.net>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1189227da844d98eb1c101b41b72eee09feb9727
Author: Menglong Dong <dong.menglong@zte.com.cn>
Date:   Mon Nov 25 16:58:09 2019 +0800

    macvlan: schedule bc_work even if error
    
    [ Upstream commit 1d7ea55668878bb350979c377fc72509dd6f5b21 ]
    
    While enqueueing a broadcast skb to port->bc_queue, schedule_work()
    is called to add port->bc_work, which processes the skbs in
    bc_queue, to "events" work queue. If port->bc_queue is full, the
    skb will be discarded and schedule_work(&port->bc_work) won't be
    called. However, if port->bc_queue is full and port->bc_work is not
    running or pending, port->bc_queue will keep full and schedule_work()
    won't be called any more, and all broadcast skbs to macvlan will be
    discarded. This case can happen:
    
    macvlan_process_broadcast() is the pending function of port->bc_work,
    it moves all the skbs in port->bc_queue to the queue "list", and
    processes the skbs in "list". During this, new skbs will keep being
    added to port->bc_queue in macvlan_broadcast_enqueue(), and
    port->bc_queue may already full when macvlan_process_broadcast()
    return. This may happen, especially when there are a lot of real-time
    threads and the process is preempted.
    
    Fix this by calling schedule_work(&port->bc_work) even if
    port->bc_work is full in macvlan_broadcast_enqueue().
    
    Fixes: 412ca1550cbe ("macvlan: Move broadcasts into a work queue")
    Signed-off-by: Menglong Dong <dong.menglong@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c57e9361ee2f22be0d581f2abf967060ba1f31a
Author: Jeroen de Borst <jeroendb@google.com>
Date:   Tue Nov 26 15:36:19 2019 -0800

    gve: Fix the queue page list allocated pages count
    
    [ Upstream commit a95069ecb7092d03b2ea1c39ee04514fe9627540 ]
    
    In gve_alloc_queue_page_list(), when a page allocation fails,
    qpl->num_entries will be wrong.  In this case priv->num_registered_pages
    can underflow in gve_free_queue_page_list(), causing subsequent calls
    to gve_alloc_queue_page_list() to fail.
    
    Fixes: f5cedc84a30d ("gve: Add transmit and receive support")
    Signed-off-by: Jeroen de Borst <jeroendb@google.com>
    Reviewed-by: Catherine Sullivan <csully@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c1bb6bbc541a1961ac3605a5507236961983185
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Nov 28 09:53:06 2019 +0100

    x86/fpu: Don't cache access to fpu_fpregs_owner_ctx
    
    commit 59c4bd853abcea95eccc167a7d7fd5f1a5f47b98 upstream.
    
    The state/owner of the FPU is saved to fpu_fpregs_owner_ctx by pointing
    to the context that is currently loaded. It never changed during the
    lifetime of a task - it remained stable/constant.
    
    After deferred FPU registers loading until return to userland was
    implemented, the content of fpu_fpregs_owner_ctx may change during
    preemption and must not be cached.
    
    This went unnoticed for some time and was now noticed, in particular
    since gcc 9 is caching that load in copy_fpstate_to_sigframe() and
    reusing it in the retry loop:
    
      copy_fpstate_to_sigframe()
        load fpu_fpregs_owner_ctx and save on stack
        fpregs_lock()
        copy_fpregs_to_sigframe() /* failed */
        fpregs_unlock()
             *** PREEMPTION, another uses FPU, changes fpu_fpregs_owner_ctx ***
    
        fault_in_pages_writeable() /* succeed, retry */
    
        fpregs_lock()
            __fpregs_load_activate()
              fpregs_state_valid() /* uses fpu_fpregs_owner_ctx from stack */
        copy_fpregs_to_sigframe() /* succeeds, random FPU content */
    
    This is a comparison of the assembly produced by gcc 9, without vs with this
    patch:
    
    | # arch/x86/kernel/fpu/signal.c:173:      if (!access_ok(buf, size))
    |        cmpq    %rdx, %rax      # tmp183, _4
    |        jb      .L190   #,
    |-# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read_stable(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |-#APP
    |-# 512 "arch/x86/include/asm/fpu/internal.h" 1
    |-       movq %gs:fpu_fpregs_owner_ctx,%rax      #, pfo_ret__
    |-# 0 "" 2
    |-#NO_APP
    |-       movq    %rax, -88(%rbp) # pfo_ret__, %sfp
    …
    |-# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read_stable(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |-       movq    -88(%rbp), %rcx # %sfp, pfo_ret__
    |-       cmpq    %rcx, -64(%rbp) # pfo_ret__, %sfp
    |+# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |+#APP
    |+# 512 "arch/x86/include/asm/fpu/internal.h" 1
    |+       movq %gs:fpu_fpregs_owner_ctx(%rip),%rax        # fpu_fpregs_owner_ctx, pfo_ret__
    |+# 0 "" 2
    |+# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |+#NO_APP
    |+       cmpq    %rax, -64(%rbp) # pfo_ret__, %sfp
    
    Use this_cpu_read() instead this_cpu_read_stable() to avoid caching of
    fpu_fpregs_owner_ctx during preemption points.
    
    The Fixes: tag points to the commit where deferred FPU loading was
    added. Since this commit, the compiler is no longer allowed to move the
    load of fpu_fpregs_owner_ctx somewhere else / outside of the locked
    section. A task preemption will change its value and stale content will
    be observed.
    
     [ bp: Massage. ]
    
    Debugged-by: Austin Clements <austin@google.com>
    Debugged-by: David Chase <drchase@golang.org>
    Debugged-by: Ian Lance Taylor <ian@airs.com>
    Fixes: 5f409e20b7945 ("x86/fpu: Defer FPU state load until return to userspace")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Tested-by: Borislav Petkov <bp@suse.de>
    Cc: Aubrey Li <aubrey.li@intel.com>
    Cc: Austin Clements <austin@google.com>
    Cc: Barret Rhoden <brho@google.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Chase <drchase@golang.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: ian@airs.com
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Josh Bleecher Snyder <josharian@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20191128085306.hxfa2o3knqtu4wfn@linutronix.de
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=205663
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5148c89f9957cf597544f4e3dfb10febe08c2536
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Nov 11 13:25:44 2019 +0300

    thunderbolt: Power cycle the router if NVM authentication fails
    
    commit 7a7ebfa85f4fac349f3ab219538c44efe18b0cf6 upstream.
    
    On zang's Dell XPS 13 9370 after Thunderbolt NVM firmware upgrade the
    Thunderbolt controller did not come back as expected. Only after the
    system was rebooted it became available again. It is not entirely clear
    what happened but I suspect the new NVM firmware image authentication
    failed for some reason. Regardless of this the router needs to be power
    cycled if NVM authentication fails in order to get it fully functional
    again.
    
    This modifies the driver to issue a power cycle in case the NVM
    authentication fails immediately when dma_port_flash_update_auth()
    returns. We also need to call tb_switch_set_uuid() earlier to be able to
    fetch possible NVM authentication failure when DMA port is added.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=205457
    Reported-by: zang <dump@tzib.net>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 570c0ee0b92f1351224606d509fb55be002716f8
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Nov 5 17:05:14 2019 +0200

    mei: me: add comet point V device id
    
    commit 82b29b9f72afdccb40ea5f3c13c6a3cb65a597bc upstream.
    
    Comet Point (Comet Lake) V device id.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191105150514.14010-2-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57916ffb5d4b646b9c63276f1bca1d033e6baa2c
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Nov 5 17:05:13 2019 +0200

    mei: bus: prefix device names on bus with the bus name
    
    commit 7a2b9e6ec84588b0be65cc0ae45a65bac431496b upstream.
    
    Add parent device name to the name of devices on bus to avoid
    device names collisions for same client UUID available
    from different MEI heads. Namely this prevents sysfs collision under
    /sys/bus/mei/device/
    
    In the device part leave just UUID other parameters that are
    required for device matching are not required here and are
    just bloating the name.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191105150514.14010-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5029226bb6b70df082b8bb4699d21aeee0093f65
Author: Fabio D'Urso <fabiodurso@hotmail.it>
Date:   Thu Nov 14 01:30:53 2019 +0000

    USB: serial: ftdi_sio: add device IDs for U-Blox C099-F9P
    
    commit c1a1f273d0825774c80896b8deb1c9ea1d0b91e3 upstream.
    
    This device presents itself as a USB hub with three attached devices:
     - An ACM serial port connected to the GPS module (not affected by this
       commit)
     - An FTDI serial port connected to the GPS module (1546:0502)
     - Another FTDI serial port connected to the ODIN-W2 radio module
       (1546:0503)
    
    This commit registers U-Blox's VID and the PIDs of the second and third
    devices.
    
    Datasheet: https://www.u-blox.com/sites/default/files/C099-F9P-AppBoard-Mbed-OS3-FW_UserGuide_%28UBX-18063024%29.pdf
    
    Signed-off-by: Fabio D'Urso <fabiodurso@hotmail.it>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 244d577e2802819b3019a5da4b19cb180960fd1a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 11 12:38:45 2019 +0100

    staging: rtl8723bs: Add 024c:0525 to the list of SDIO device-ids
    
    commit 3d5f1eedbfd22ceea94b39989d6021b1958181f4 upstream.
    
    Add 024c:0525 to the list of SDIO device-ids, based on a patch found
    in the Android X86 kernels. According to that patch this device id is
    used on the Alcatel Plus 10 device.
    
    Reported-and-tested-by: youling257 <youling257@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191111113846.24940-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 928353f4e12008ed13ae7c77320c77420e3a4f15
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 11 12:38:46 2019 +0100

    staging: rtl8723bs: Drop ACPI device ids
    
    commit 2d9d2491530a156b9a5614adf9dc79285e35d55e upstream.
    
    The driver only binds by SDIO device-ids, all the ACPI device-id does
    is causing the driver to load unnecessarily on devices where the DSDT
    contains a bogus OBDA8723 device.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191111113846.24940-2-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab1908cbe204faaf3f65e59e23b6863002e852a0
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Nov 5 22:49:11 2019 +0800

    staging: rtl8192e: fix potential use after free
    
    commit b7aa39a2ed0112d07fc277ebd24a08a7b2368ab9 upstream.
    
    The variable skb is released via kfree_skb() when the return value of
    _rtl92e_tx is not zero. However, after that, skb is accessed again to
    read its length, which may result in a use after free bug. This patch
    fixes the bug by moving the release operation to where skb is never
    used later.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1572965351-6745-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb2135c6a5e3eee1d3884af2cfc3d3e5126c4eef
Author: Ajay Singh <ajay.kathat@microchip.com>
Date:   Thu Nov 7 15:58:54 2019 +0000

    staging: wilc1000: fix illegal memory access in wilc_parse_join_bss_param()
    
    commit c7e621bb981b76d3bfd8a595070ee8282ac4a32b upstream.
    
    Do not copy the extended supported rates in 'param->supp_rates' if the
    array is already full with basic rates values. The array size check
    helped to avoid possible illegal memory access [1] while copying to
    'param->supp_rates' array.
    
    1. https://marc.info/?l=linux-next&m=157301720517456&w=2
    
    Reported-by: coverity-bot <keescook+coverity-bot@chromium.org>
    Addresses-Coverity-ID: 1487400 ("Memory - illegal accesses")
    Fixes: 4e0b0f42c9c7 ("staging: wilc1000: use struct to pack join parameters for FW")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ajay Singh <ajay.kathat@microchip.com>
    Link: https://lore.kernel.org/r/20191106062127.3165-1-ajay.kathat@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eea8956c968485b5e6c6ea6a842a0f98ef8f1b20
Author: Mathias Kresin <dev@kresin.me>
Date:   Sun Jul 7 16:22:01 2019 +0200

    usb: dwc2: use a longer core rest timeout in dwc2_core_reset()
    
    commit 6689f0f4bb14e50917ba42eb9b41c25e0184970c upstream.
    
    Testing on different generations of Lantiq MIPS SoC based boards, showed
    that it takes up to 1500 us until the core reset bit is cleared.
    
    The driver from the vendor SDK (ifxhcd) uses a 1 second timeout. Use the
    same timeout to fix wrong hang detections and make the driver work for
    Lantiq MIPS SoCs.
    
    At least till kernel 4.14 the hanging reset only caused a warning but
    the driver was probed successful. With kernel 4.19 errors out with
    EBUSY.
    
    Cc: linux-stable <stable@vger.kernel.org> # 4.19+
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88d945a0b0aa5916ca66cd22199ad6d8b3f4a368
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Tue Nov 12 13:41:56 2019 -0800

    driver core: platform: use the correct callback type for bus_find_device
    
    commit 492c88720d36eb662f9f10c1633f7726fbb07fc4 upstream.
    
    platform_find_device_by_driver calls bus_find_device and passes
    platform_match as the callback function. Casting the function to a
    mismatching type trips indirect call Control-Flow Integrity (CFI) checking.
    
    This change adds a callback function with the correct type and instead
    of casting the function, explicitly casts the second parameter to struct
    device_driver* as expected by platform_match.
    
    Fixes: 36f3313d6bff9 ("platform: Add platform_find_device_by_driver() helper")
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191112214156.3430-1-samitolvanen@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3cda1dea7f069a0fc0b2fbe3cee3e2821ff6498
Author: Pascal van Leeuwen <pascalvanl@gmail.com>
Date:   Tue Sep 17 11:55:18 2019 +0200

    crypto: inside-secure - Fix stability issue with Macchiatobin
    
    commit b8c5d882c8334d05754b69dcdf1cfd6bc48a9e12 upstream.
    
    This patch corrects an error in the Transform Record Cache initialization
    code that was causing intermittent stability problems on the Macchiatobin
    board.
    
    Unfortunately, due to HW platform specifics, the problem could not happen
    on the main development platform, being the VCU118 Xilinx development
    board. And since it was a problem with hash table access, it was very
    dependent on the actual physical context record DMA buffers being used,
    i.e. with some (bad) luck it could seemingly work quit stable for a while.
    
    Signed-off-by: Pascal van Leeuwen <pvanleeuwen@verimatrix.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6245944452ce4592ea975491f5e90e75b346bef
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Nov 25 17:04:13 2019 -0700

    net: disallow ancillary data for __sys_{send,recv}msg_file()
    
    [ Upstream commit d69e07793f891524c6bbf1e75b9ae69db4450953 ]
    
    Only io_uring uses (and added) these, and we want to disallow the
    use of sendmsg/recvmsg for anything but regular data transfers.
    Use the newly added prep helper to split the msghdr copy out from
    the core function, to check for msg_control and msg_controllen
    settings. If either is set, we return -EINVAL.
    
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78df03e4c892a09ebfd9045a427d656805964552
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Nov 25 14:27:34 2019 -0700

    net: separate out the msghdr copy from ___sys_{send,recv}msg()
    
    [ Upstream commit 4257c8ca13b084550574b8c9a667d9c90ff746eb ]
    
    This is in preparation for enabling the io_uring helpers for sendmsg
    and recvmsg to first copy the header for validation before continuing
    with the operation.
    
    There should be no functional changes in this patch.
    
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8387e3688aa9e06a12b58abbcfe2cbfd0cf0f589
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Nov 25 08:52:30 2019 -0700

    io_uring: async workers should inherit the user creds
    
    [ Upstream commit 181e448d8709e517c9c7b523fcd209f24eb38ca7 ]
    
    If we don't inherit the original task creds, then we can confuse users
    like fuse that pass creds in the request header. See link below on
    identical aio issue.
    
    Link: https://lore.kernel.org/linux-fsdevel/26f0d78e-99ca-2f1b-78b9-433088053a61@scylladb.com/T/#u
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
