commit e3ac9117b18596b7363d5b7904ab03a7d782b40c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed May 20 08:22:38 2020 +0200

    Linux 5.6.14

commit 0084b141713cff197c8fac00a464500acf6422c2
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Tue Mar 17 00:07:18 2020 +0000

    Makefile: disallow data races on gcc-10 as well
    
    commit b1112139a103b4b1101d0d2d72931f2d33d8c978 upstream.
    
    gcc-10 will rename --param=allow-store-data-races=0
    to -fno-allow-store-data-races.
    
    The flag change happened at https://gcc.gnu.org/PR92046.
    
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Acked-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a51e9ae051436660800b9aa703e626c3e3966d5
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri May 15 12:11:18 2020 +0200

    bpf: Restrict bpf_trace_printk()'s %s usage and add %pks, %pus specifier
    
    commit b2a5212fb634561bb734c6356904e37f6665b955 upstream.
    
    Usage of plain %s conversion specifier in bpf_trace_printk() suffers from the
    very same issue as bpf_probe_read{,str}() helpers, that is, it is broken on
    archs with overlapping address ranges.
    
    While the helpers have been addressed through work in 6ae08ae3dea2 ("bpf: Add
    probe_read_{user, kernel} and probe_read_{user, kernel}_str helpers"), we need
    an option for bpf_trace_printk() as well to fix it.
    
    Similarly as with the helpers, force users to make an explicit choice by adding
    %pks and %pus specifier to bpf_trace_printk() which will then pick the corresponding
    strncpy_from_unsafe*() variant to perform the access under KERNEL_DS or USER_DS.
    The %pk* (kernel specifier) and %pu* (user specifier) can later also be extended
    for other objects aside strings that are probed and printed under tracing, and
    reused out of other facilities like bpf_seq_printf() or BTF based type printing.
    
    Existing behavior of %s for current users is still kept working for archs where it
    is not broken and therefore gated through CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE.
    For archs not having this property we fall-back to pick probing under KERNEL_DS as
    a sensible default.
    
    Fixes: 8d3b7dce8622 ("bpf: add support for %s specifier to bpf_trace_printk()")
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reported-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Brendan Gregg <brendan.d.gregg@gmail.com>
    Link: https://lore.kernel.org/bpf/20200515101118.6508-4-daniel@iogearbox.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86937fc5fb5bd54e68696a9c74f2fe7714aa6552
Author: Yonghong Song <yhs@fb.com>
Date:   Wed May 13 22:32:07 2020 -0700

    selftests/bpf: Enforce returning 0 for fentry/fexit programs
    
    commit 6d74f64b922b8394dccc52576659cb0dc0a1da7b upstream.
    
    There are a few fentry/fexit programs returning non-0.
    The tests with these programs will break with the previous
    patch which enfoced return-0 rules. Fix them properly.
    
    Fixes: ac065870d928 ("selftests/bpf: Add BPF_PROG, BPF_KPROBE, and BPF_KRETPROBE macros")
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200514053207.1298479-1-yhs@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9afc9ff98658bbe517b9d1ee451bbe8e44897424
Author: Yonghong Song <yhs@fb.com>
Date:   Wed May 13 22:32:05 2020 -0700

    bpf: Enforce returning 0 for fentry/fexit progs
    
    commit e92888c72fbdc6f9d07b3b0604c012e81d7c0da7 upstream.
    
    Currently, tracing/fentry and tracing/fexit prog
    return values are not enforced. In trampoline codes,
    the fentry/fexit prog return values are ignored.
    Let us enforce it to be 0 to avoid confusion and
    allows potential future extension.
    
    This patch also explicitly added return value
    checking for tracing/raw_tp, tracing/fmod_ret,
    and freplace programs such that these program
    return values can be anything. The purpose are
    two folds:
     1. to make it explicit about return value expectations
        for these programs in verifier.
     2. for tracing prog_type, if a future attach type
        is added, the default is -ENOTSUPP which will
        enforce to specify return value ranges explicitly.
    
    Fixes: fec56f5890d9 ("bpf: Introduce BPF trampoline")
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200514053206.1298415-1-yhs@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a042b9097297b8f44c8b62761198c13506f2e27
Author: Jim Mattson <jmattson@google.com>
Date:   Mon May 11 15:56:16 2020 -0700

    KVM: x86: Fix off-by-one error in kvm_vcpu_ioctl_x86_setup_mce
    
    commit c4e0e4ab4cf3ec2b3f0b628ead108d677644ebd9 upstream.
    
    Bank_num is a one-based count of banks, not a zero-based index. It
    overflows the allocated space only when strictly greater than
    KVM_MAX_MCE_BANKS.
    
    Fixes: a9e38c3e01ad ("KVM: x86: Catch potential overrun in MCE setup")
    Signed-off-by: Jue Wang <juew@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Peter Shier <pshier@google.com>
    Message-Id: <20200511225616.19557-1-jmattson@google.com>
    Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bae909dab387fc6b7eccc52b957ea42473f1f73
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Thu May 7 23:04:45 2020 +0800

    riscv: perf: RISCV_BASE_PMU should be independent
    
    commit 48084c3595cb7429f6ba734cfea1313573b9a7fa upstream.
    
    Selecting PERF_EVENTS without selecting RISCV_BASE_PMU results in a build
    error.
    
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    [Palmer: commit text]
    Fixes: 178e9fc47aae("perf: riscv: preliminary RISC-V support")
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cecd2b57f6ee1ac4d7a05191cf0aa7462e1a626e
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Thu May 7 09:33:48 2020 +0300

    RDMA/uverbs: Move IB_EVENT_DEVICE_FATAL to destroy_uobj
    
    commit ccfdbaa5cf4601b9b71601893029dcc9245c002b upstream.
    
    When multiple async FDs were allowed to exist the idea was for all
    broadcast events to be delivered to all async FDs, however
    IB_EVENT_DEVICE_FATAL was missed.
    
    Instead of having ib_uverbs_free_hw_resources() special case the global
    async_fd, have it cause the event during the uobject destruction. Every
    async fd is now a uobject so simply generate the IB_EVENT_DEVICE_FATAL
    while destroying the async fd uobject. This ensures every async FD gets a
    copy of the event.
    
    Fixes: d680e88e2013 ("RDMA/core: Add UVERBS_METHOD_ASYNC_EVENT_ALLOC")
    Link: https://lore.kernel.org/r/20200507063348.98713-3-leon@kernel.org
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62181003030d83c56be85cabf7ac30fdefe658ee
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Thu May 7 09:33:47 2020 +0300

    RDMA/uverbs: Do not discard the IB_EVENT_DEVICE_FATAL event
    
    commit c485b19d52c4ba269dfd027945dee81755fdd530 upstream.
    
    The commit below moved all of the destruction to the disassociate step and
    cleaned up the event channel during destroy_uobj.
    
    However, when ib_uverbs_free_hw_resources() pushes IB_EVENT_DEVICE_FATAL
    and then immediately goes to destroy all uobjects this causes
    ib_uverbs_free_event_queue() to discard the queued event if userspace
    hasn't already read() it.
    
    Unlike all other event queues async FD needs to defer the
    ib_uverbs_free_event_queue() until FD release. This still unregisters the
    handler from the IB device during disassociation.
    
    Fixes: 3e032c0e92aa ("RDMA/core: Make ib_uverbs_async_event_file into a uobject")
    Link: https://lore.kernel.org/r/20200507063348.98713-2-leon@kernel.org
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c49736ba5e49cef2497390d6d8ac4913309266c
Author: Nayna Jain <nayna@linux.ibm.com>
Date:   Fri May 1 10:16:52 2020 -0400

    powerpc/ima: Fix secure boot rules in ima arch policy
    
    commit fa4f3f56ccd28ac031ab275e673ed4098855fed4 upstream.
    
    To prevent verifying the kernel module appended signature
    twice (finit_module), once by the module_sig_check() and again by IMA,
    powerpc secure boot rules define an IMA architecture specific policy
    rule only if CONFIG_MODULE_SIG_FORCE is not enabled. This,
    unfortunately, does not take into account the ability of enabling
    "sig_enforce" on the boot command line (module.sig_enforce=1).
    
    Including the IMA module appraise rule results in failing the
    finit_module syscall, unless the module signing public key is loaded
    onto the IMA keyring.
    
    This patch fixes secure boot policy rules to be based on
    CONFIG_MODULE_SIG instead.
    
    Fixes: 4238fad366a6 ("powerpc/ima: Add support to initialize ima policy rules")
    Signed-off-by: Nayna Jain <nayna@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Link: https://lore.kernel.org/r/1588342612-14532-1-git-send-email-nayna@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88293f52850080da0ee628e15303abdda2cfc779
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Apr 7 14:12:45 2020 +1000

    powerpc/uaccess: Evaluate macro arguments once, before user access is allowed
    
    commit d02f6b7dab8228487268298ea1f21081c0b4b3eb upstream.
    
    get/put_user() can be called with nontrivial arguments. fs/proc/page.c
    has a good example:
    
        if (put_user(stable_page_flags(ppage), out)) {
    
    stable_page_flags() is quite a lot of code, including spin locks in
    the page allocator.
    
    Ensure these arguments are evaluated before user access is allowed.
    
    This improves security by reducing code with access to userspace, but
    it also fixes a PREEMPT bug with KUAP on powerpc/64s:
    stable_page_flags() is currently called with AMR set to allow writes,
    it ends up calling spin_unlock(), which can call preempt_schedule. But
    the task switch code can not be called with AMR set (it relies on
    interrupts saving the register), so this blows up.
    
    It's fine if the code inside allow_user_access() is preemptible,
    because a timer or IPI will save the AMR, but it's not okay to
    explicitly cause a reschedule.
    
    Fixes: de78a9c42a79 ("powerpc: Add a framework for Kernel Userspace Access Protection")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200407041245.600651-1-npiggin@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 388011d36065a17f3dc481485be5171692d38a44
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Sun Apr 26 11:35:15 2020 +0800

    bpf: Fix sk_psock refcnt leak when receiving message
    
    commit 18f02ad19e2c2a1d9e1d55a4e1c0cbf51419151c upstream.
    
    tcp_bpf_recvmsg() invokes sk_psock_get(), which returns a reference of
    the specified sk_psock object to "psock" with increased refcnt.
    
    When tcp_bpf_recvmsg() returns, local variable "psock" becomes invalid,
    so the refcount should be decreased to keep refcount balanced.
    
    The reference counting issue happens in several exception handling paths
    of tcp_bpf_recvmsg(). When those error scenarios occur such as "flags"
    includes MSG_ERRQUEUE, the function forgets to decrease the refcnt
    increased by sk_psock_get(), causing a refcnt leak.
    
    Fix this issue by calling sk_psock_put() or pulling up the error queue
    read handling when those error scenarios occur.
    
    Fixes: e7a5f1f1cd000 ("bpf/sockmap: Read psock ingress_msg before sk_receive_queue")
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/1587872115-42805-1-git-send-email-xiyuyang19@fudan.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2151e1f2c1ea73a97b50dd115c2cbdd3f132714b
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Apr 15 17:36:22 2020 -0400

    SUNRPC: Revert 241b1f419f0e ("SUNRPC: Remove xdr_buf_trim()")
    
    commit 0a8e7b7d08466b5fc52f8e96070acc116d82a8bb upstream.
    
    I've noticed that when krb5i or krb5p security is in use,
    retransmitted requests are missing the server's duplicate reply
    cache. The computed checksum on the retransmitted request does not
    match the cached checksum, resulting in the server performing the
    retransmitted request again instead of returning the cached reply.
    
    The assumptions made when removing xdr_buf_trim() were not correct.
    In the send paths, the upper layer has already set the segment
    lengths correctly, and shorting the buffer's content is simply a
    matter of reducing buf->len.
    
    xdr_buf_trim() is the right answer in the receive/unwrap path on
    both the client and the server. The buffer segment lengths have to
    be shortened one-by-one.
    
    On the server side in particular, head.iov_len needs to be updated
    correctly to enable nfsd_cache_csum() to work correctly. The simple
    buf->len computation doesn't do that, and that results in
    checksumming stale data in the buffer.
    
    The problem isn't noticed until there's significant instability of
    the RPC transport. At that point, the reliability of retransmit
    detection on the server becomes crucial.
    
    Fixes: 241b1f419f0e ("SUNRPC: Remove xdr_buf_trim()")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b9c587512691388ac0e4ddf6d01fe158f508a14
Author: Michael Walle <michael@walle.cc>
Date:   Fri Mar 6 21:54:02 2020 +0100

    dt-bindings: dma: fsl-edma: fix ls1028a-edma compatible
    
    commit d94a05f87327143f94f67dd256932163ac2bcd65 upstream.
    
    The bootloader will fix up the IOMMU entries only on nodes with the
    compatible "fsl,vf610-edma". Thus make this compatible string mandatory
    for the ls1028a-edma.
    
    While at it, fix the "fsl,fsl," typo.
    
    Signed-off-by: Michael Walle <michael@walle.cc>
    Fixes: d8c1bdb5288d ("dt-bindings: dma: fsl-edma: add new fsl,fsl,ls1028a-edma")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef2721e1729200abbd02782e78ce0bb9aa0218cb
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri May 8 11:59:18 2020 +0200

    ARM: dts: r8a7740: Add missing extal2 to CPG node
    
    commit e47cb97f153193d4b41ca8d48127da14513d54c7 upstream.
    
    The Clock Pulse Generator (CPG) device node lacks the extal2 clock.
    This may lead to a failure registering the "r" clock, or to a wrong
    parent for the "usb24s" clock, depending on MD_CK2 pin configuration and
    boot loader CPG_USBCKCR register configuration.
    
    This went unnoticed, as this does not affect the single upstream board
    configuration, which relies on the first clock input only.
    
    Fixes: d9ffd583bf345e2e ("ARM: shmobile: r8a7740: add SoC clocks to DTS")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Ulrich Hecht <uli+renesas@fpond.eu>
    Link: https://lore.kernel.org/r/20200508095918.6061-1-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7633f1760fb734aa35b22a89d0f7d7fd3ded771b
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Apr 17 16:29:03 2020 +0900

    arm64: dts: renesas: r8a77980: Fix IPMMU VIP[01] nodes
    
    commit f4d71c6ea9e58c07dd4d02d09c5dd9bb780ec4b1 upstream.
    
    Missing the renesas,ipmmu-main property on ipmmu_vip[01] nodes.
    
    Fixes: 55697cbb44e4 ("arm64: dts: renesas: r8a779{65,80,90}: Add IPMMU devices nodes)
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1587108543-23786-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 127feea7761fc21206e98515e9d150d80848b943
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Apr 8 11:09:26 2020 +0200

    ARM: dts: r8a73a4: Add missing CMT1 interrupts
    
    commit 0f739fdfe9e5ce668bd6d3210f310df282321837 upstream.
    
    The R-Mobile APE6 Compare Match Timer 1 generates 8 interrupts, one for
    each channel, but currently only 1 is described.
    Fix this by adding the missing interrupts.
    
    Fixes: f7b65230019b9dac ("ARM: shmobile: r8a73a4: Add CMT1 node")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20200408090926.25201-1-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6955059ca2561b1e110a41247974ba49df1ae199
Author: Adam Ford <aford173@gmail.com>
Date:   Fri Mar 27 21:33:53 2020 -0500

    arm64: dts: imx8mn: Change SDMA1 ahb clock for imx8mn
    
    commit 15ddc3e17aec0de4c69d595b873e184432b9791d upstream.
    
    Using SDMA1 with UART1 is causing a "Timeout waiting for CH0" error.
    This patch changes to ahb clock from SDMA1_ROOT to AHB which fixes the
    timeout error.
    
    Fixes: 6c3debcbae47 ("arm64: dts: freescale: Add i.MX8MN dtsi support")
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56d1314ee49645d5fbb0c422f9446960a2bffe6c
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Mar 27 11:04:14 2020 +0800

    arm64: dts: rockchip: Rename dwc3 device nodes on rk3399 to make dtc happy
    
    commit 190c7f6fd43a776d4a6da1dac44408104649e9b7 upstream.
    
    The device tree compiler complains that the dwc3 nodes have regs
    properties but no matching unit addresses.
    
    Add the unit addresses to the device node name. While at it, also rename
    the nodes from "dwc3" to "usb", as guidelines require device nodes have
    generic names.
    
    Fixes: 7144224f2c2b ("arm64: dts: rockchip: support dwc3 USB for rk3399")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Link: https://lore.kernel.org/r/20200327030414.5903-7-wens@kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4438c85bd702592f7c09f915b57bcc511778076
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Mar 27 11:04:10 2020 +0800

    arm64: dts: rockchip: Replace RK805 PMIC node name with "pmic" on rk3328 boards
    
    commit 83b994129fb4c18a8460fd395864a28740e5e7fb upstream.
    
    In some board device tree files, "rk805" was used for the RK805 PMIC's
    node name. However the policy for device trees is that generic names
    should be used.
    
    Replace the "rk805" node name with the generic "pmic" name.
    
    Fixes: 1e28037ec88e ("arm64: dts: rockchip: add rk805 node for rk3328-evb")
    Fixes: 955bebde057e ("arm64: dts: rockchip: add rk3328-rock64 board")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Link: https://lore.kernel.org/r/20200327030414.5903-3-wens@kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e96f952d5676a8b7073ba814a0a9e8172a0d532d
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Thu Mar 26 17:08:57 2020 +0100

    arm64: dts: meson-g12-common: fix dwc2 clock names
    
    commit e4f634d812634067b0c661af2e3cecfd629c89b8 upstream.
    
    Use the correct dwc2 clock name.
    
    Fixes: 9baf7d6be730 ("arm64: dts: meson: g12a: Add G12A USB nodes")
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20200326160857.11929-3-narmstrong@baylibre.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1d7624f36403087b52822fb1a6b0332c2780b07
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Tue Mar 17 22:44:42 2020 -0700

    arm64: dts: qcom: msm8996: Reduce vdd_apc voltage
    
    commit 28810eecae08f9458a44831978e36f14ed182c80 upstream.
    
    Some msm8996 based devices are unstable when run with VDD_APC of 1.23V,
    which is listed as the maximum voltage in "Turbo" mode. Given that the
    CPU cluster is not run in "Turbo" mode, reduce this to 0.98V - the
    maximum voltage for nominal operation.
    
    Tested-by: Loic Poulain <loic.poulain@linaro.org>
    Fixes: 7a2a2231ef22 ("arm64: dts: apq8096-db820c: Fix VDD core voltage")
    Cc: Loic Poulain <loic.poulain@linaro.org>
    Link: https://lore.kernel.org/r/20200318054442.3066726-1-bjorn.andersson@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14918c16fdddda480bfb59050b97ecfe18a86ccb
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Fri Oct 18 14:02:16 2019 +0000

    arm64: dts: meson-g12b-khadas-vim3: add missing frddr_a status property
    
    commit 5ac0869fb39b1c1ba84d4d75c550f82e0bf44c96 upstream.
    
    In the process of moving the VIM3 audio nodes to a G12B specific dtsi
    for enabling the SM1 based VIM3L, the frddr_a status = "okay" property
    got dropped.
    This re-enables the frddr_a node to fix audio support.
    
    Fixes: 4f26cc1c96c9 ("arm64: dts: khadas-vim3: move common nodes into meson-khadas-vim3.dtsi")
    Reported-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Reviewed-by: Jerome Brunet <jbrunet@baylibre.com>
    Tested-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20191018140216.4257-1-narmstrong@baylibre.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84a0266ab8f6f0222c6271a1e0eb115343f08fc8
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue May 5 15:09:53 2020 +0100

    clk: Unlink clock if failed to prepare or enable
    
    commit 018d4671b9bbd4a5c55cf6eab3e1dbc70a50b66e upstream.
    
    On failing to prepare or enable a clock, remove the core structure
    from the list it has been inserted as it is about to be freed.
    
    This otherwise leads to random crashes when subsequent clocks get
    registered, during which parsing of the clock tree becomes adventurous.
    
    Observed with QEMU's RPi-3 emulation.
    
    Fixes: 12ead77432f2 ("clk: Don't try to enable critical clocks if prepare failed")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: Michael Turquette <mturquette@baylibre.com>
    Link: https://lkml.kernel.org/r/20200505140953.409430-1-maz@kernel.org
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4686c5fa3bea8f16cc5c38cd2409be224d74402
Author: Tero Kristo <t-kristo@ti.com>
Date:   Fri Apr 24 15:47:25 2020 +0300

    clk: ti: clkctrl: Fix Bad of_node_put within clkctrl_get_name
    
    commit e1f9e0d28ff025564dfdb1001a7839b4af5db2e2 upstream.
    
    clkctrl_get_name incorrectly calls of_node_put when it is not really
    doing of_node_get. This causes a boot time warning later on:
    
    [    0.000000] OF: ERROR: Bad of_node_put() on /ocp/interconnect@4a000000/segmen
    t@0/target-module@5000/cm_core_aon@0/ipu-cm@500/ipu1-clkctrl@20
    
    Fix by dropping the of_node_put from the function.
    
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Fixes: 6c3090520554 ("clk: ti: clkctrl: Fix hidden dependency to node name")
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Link: https://lkml.kernel.org/r/20200424124725.9895-1-t-kristo@ti.com
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b081c99fe28b774ae8d3b3e082f22e1be3f97a06
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sun May 3 23:24:46 2020 +0800

    Revert "ALSA: hda/realtek: Fix pop noise on ALC225"
    
    commit f41224efcf8aafe80ea47ac870c5e32f3209ffc8 upstream.
    
    This reverts commit 3b36b13d5e69d6f51ff1c55d1b404a74646c9757.
    
    Enable power save node breaks some systems with ACL225. Revert the patch
    and use a platform specific quirk for the original issue isntead.
    
    Fixes: 3b36b13d5e69 ("ALSA: hda/realtek: Fix pop noise on ALC225")
    BugLink: https://bugs.launchpad.net/bugs/1875916
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20200503152449.22761-1-kai.heng.feng@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03c3d35c859225e44b97464f43ad5f086ae5bf6d
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu May 7 05:13:32 2020 +0000

    usb: gadget: legacy: fix error return code in cdc_bind()
    
    commit e8f7f9e3499a6d96f7f63a4818dc7d0f45a7783b upstream.
    
    If 'usb_otg_descriptor_alloc()' fails, we must return a
    negative error code -ENOMEM, not 0.
    
    Fixes: ab6796ae9833 ("usb: gadget: cdc2: allocate and init otg descriptor by otg capabilities")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81bdda9764bc4b498f982461123356e68857190d
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu May 7 05:13:23 2020 +0000

    usb: gadget: legacy: fix error return code in gncm_bind()
    
    commit e27d4b30b71c66986196d8a1eb93cba9f602904a upstream.
    
    If 'usb_otg_descriptor_alloc()' fails, we must return a
    negative error code -ENOMEM, not 0.
    
    Fixes: 1156e91dd7cc ("usb: gadget: ncm: allocate and init otg descriptor by otg capabilities")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0b5e6a96683e8d35eb517c5aa0cd7425c4061a3
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun May 3 12:47:07 2020 +0200

    usb: gadget: audio: Fix a missing error return value in audio_bind()
    
    commit 19b94c1f9c9a16d41a8de3ccbdb8536cf1aecdbf upstream.
    
    If 'usb_otg_descriptor_alloc()' fails, we must return an error code, not 0.
    
    Fixes: 56023ce0fd70 ("usb: gadget: audio: allocate and init otg descriptor by otg capabilities")
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf42b6275ca3ee9e893fcd8268405ff347986ec2
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Apr 27 20:04:23 2020 +0200

    usb: gadget: net2272: Fix a memory leak in an error handling path in 'net2272_plat_probe()'
    
    commit ccaef7e6e354fb65758eaddd3eae8065a8b3e295 upstream.
    
    'dev' is allocated in 'net2272_probe_init()'. It must be freed in the error
    handling path, as already done in the remove function (i.e.
    'net2272_plat_remove()')
    
    Fixes: 90fccb529d24 ("usb: gadget: Gadget directory cleanup - group UDC drivers")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 182b3b5c16d1298bb14d846c637929e72680a990
Author: Thierry Reding <treding@nvidia.com>
Date:   Fri Apr 17 19:05:37 2020 +0200

    usb: gadget: tegra-xudc: Fix idle suspend/resume
    
    commit 0534d40160cb9505073b0ecf5e7210daee319a66 upstream.
    
    When the XUDC device is idle (i.e. powergated), care must be taken not
    to access any registers because that would lead to a crash.
    
    Move the call to tegra_xudc_device_mode_off() into the same conditional
    as the tegra_xudc_powergate() call to make sure we only force device
    mode off if the XUDC is actually powered up.
    
    Fixes: 49db427232fe ("usb: gadget: Add UDC driver for tegra XUSB device mode controller")
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d92da48cbe0b780a648ebde9612e6ca66f073b66
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Thu Mar 26 17:08:56 2020 +0100

    arm64: dts: meson-g12b-ugoos-am6: fix usb vbus-supply
    
    commit 4e025fd91ba32a16ed8131158aa63cd37d141cbb upstream.
    
    The USB supply used the wrong property, fixing:
    meson-g12b-ugoos-am6.dt.yaml: usb@ffe09000: 'vbus-regulator' does not match any of the regexes: '^usb@[0-9a-f]+$', 'pinctrl-[0-9]+'
    
    Fixes: 2cd2310fca4c ("arm64: dts: meson-g12b-ugoos-am6: add initial device-tree")
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20200326160857.11929-2-narmstrong@baylibre.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e160465114fc5e2cb39389385a308b9fe1fbcdc
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Thu Mar 19 17:10:17 2020 +0200

    fanotify: fix merging marks masks with FAN_ONDIR
    
    commit 55bf882c7f13dda8bbe624040c6d5b4fbb812d16 upstream.
    
    Change the logic of FAN_ONDIR in two ways that are similar to the logic
    of FAN_EVENT_ON_CHILD, that was fixed in commit 54a307ba8d3c ("fanotify:
    fix logic of events on child"):
    
    1. The flag is meaningless in ignore mask
    2. The flag refers only to events in the mask of the mark where it is set
    
    This is what the fanotify_mark.2 man page says about FAN_ONDIR:
    "Without this flag, only events for files are created."  It doesn't
    say anything about setting this flag in ignore mask to stop getting
    events on directories nor can I think of any setup where this capability
    would be useful.
    
    Currently, when marks masks are merged, the FAN_ONDIR flag set in one
    mark affects the events that are set in another mark's mask and this
    behavior causes unexpected results.  For example, a user adds a mark on a
    directory with mask FAN_ATTRIB | FAN_ONDIR and a mount mark with mask
    FAN_OPEN (without FAN_ONDIR).  An opendir() of that directory (which is
    inside that mount) generates a FAN_OPEN event even though neither of the
    marks requested to get open events on directories.
    
    Link: https://lore.kernel.org/r/20200319151022.31456-10-amir73il@gmail.com
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Cc: Rachel Sibley <rasibley@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cdb9ae72a2fb0b484d61ed4c4379d0dfc6283d2
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon May 4 23:12:15 2020 +0000

    dwc3: Remove check for HWO flag in dwc3_gadget_ep_reclaim_trb_sg()
    
    commit 00e21763f2c8cab21b7befa52996d1b18bde5c42 upstream.
    
    The check for the HWO flag in dwc3_gadget_ep_reclaim_trb_sg()
    causes us to break out of the loop before we call
    dwc3_gadget_ep_reclaim_completed_trb(), which is what likely
    should be clearing the HWO flag.
    
    This can cause odd behavior where we never reclaim all the trbs
    in the sg list, so we never call giveback on a usb req, and that
    will causes transfer stalls.
    
    This effectively resovles the adb stalls seen on HiKey960
    after userland changes started only using AIO in adbd.
    
    Cc: YongQin Liu <yongqin.liu@linaro.org>
    Cc: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
    Cc: Yang Fei <fei.yang@intel.com>
    Cc: Thinh Nguyen <thinhn@synopsys.com>
    Cc: Tejas Joglekar <tejas.joglekar@synopsys.com>
    Cc: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Cc: Jack Pham <jackp@codeaurora.org>
    Cc: Josh Gao <jmgao@google.com>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-usb@vger.kernel.org
    Cc: stable@vger.kernel.org #4.20+
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93a2c8dcbc4ff87fc0bed42041bf6dbed56867e5
Author: Justin Swartz <justin.swartz@risingedge.co.za>
Date:   Tue Jan 14 16:25:02 2020 +0000

    clk: rockchip: fix incorrect configuration of rk3228 aclk_gpu* clocks
    
    commit cec9d101d70a3509da9bd2e601e0b242154ce616 upstream.
    
    The following changes prevent the unrecoverable freezes and rcu_sched
    stall warnings experienced in each of my attempts to take advantage of
    lima.
    
    Replace the COMPOSITE_NOGATE definition of aclk_gpu_pre with a
    COMPOSITE that retains the selection of HDMIPHY as the PLL source, but
    instead makes uses of the aclk_gpu PLL source gate and parent names
    defined by mux_pll_src_4plls_p rather than mux_aclk_gpu_pre_p.
    
    Remove the now unused mux_aclk_gpu_pre_p and the four named but also
    unused definitions (cpll_gpu, gpll_gpu, hdmiphy_gpu and usb480m_gpu)
    of the aclk_gpu PLL source gate.
    
    Use the correct gate offset for aclk_gpu and aclk_gpu_noc.
    
    Fixes: 307a2e9ac524 ("clk: rockchip: add clock controller for rk3228")
    Cc: stable@vger.kernel.org
    Signed-off-by: Justin Swartz <justin.swartz@risingedge.co.za>
    [double-checked against SoC manual and added fixes tag]
    Link: https://lore.kernel.org/r/20200114162503.7548-1-justin.swartz@risingedge.co.za
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f97f0652b8f038925187a37898b50cc36d8a033f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Sat May 16 16:29:20 2020 -0500

    exec: Move would_dump into flush_old_exec
    
    commit f87d1c9559164294040e58f5e3b74a162bf7c6e8 upstream.
    
    I goofed when I added mm->user_ns support to would_dump.  I missed the
    fact that in the case of binfmt_loader, binfmt_em86, binfmt_misc, and
    binfmt_script bprm->file is reassigned.  Which made the move of
    would_dump from setup_new_exec to __do_execve_file before exec_binprm
    incorrect as it can result in would_dump running on the script instead
    of the interpreter of the script.
    
    The net result is that the code stopped making unreadable interpreters
    undumpable.  Which allows them to be ptraced and written to disk
    without special permissions.  Oops.
    
    The move was necessary because the call in set_new_exec was after
    bprm->mm was no longer valid.
    
    To correct this mistake move the misplaced would_dump from
    __do_execve_file into flos_old_exec, before exec_mmap is called.
    
    I tested and confirmed that without this fix I can attach with gdb to
    a script with an unreadable interpreter, and with this fix I can not.
    
    Cc: stable@vger.kernel.org
    Fixes: f84df2a6f268 ("exec: Ensure mm->user_ns contains the execed files")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8472bca52f99d3d2acdb54300151e7eb4d32996
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu May 14 15:31:10 2020 -0500

    x86/unwind/orc: Fix error handling in __unwind_start()
    
    commit 71c95825289f585014fe9741b051d32a7a916680 upstream.
    
    The unwind_state 'error' field is used to inform the reliable unwinding
    code that the stack trace can't be trusted.  Set this field for all
    errors in __unwind_start().
    
    Also, move the zeroing out of the unwind_state struct to before the ORC
    table initialization check, to prevent the caller from reading
    uninitialized data if the ORC table is corrupted.
    
    Fixes: af085d9084b4 ("stacktrace/x86: add function for detecting reliable stack traces")
    Fixes: d3a09104018c ("x86/unwinder/orc: Dont bail on stack overflow")
    Fixes: 98d0c8ebf77e ("x86/unwind/orc: Prevent unwinding before ORC initialization")
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/d6ac7215a84ca92b895fdd2e1aa546729417e6e6.1589487277.git.jpoimboe@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70bee5eecb9e78b39825c40fb9515f41c454fe36
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Apr 22 18:11:30 2020 +0200

    x86: Fix early boot crash on gcc-10, third try
    
    commit a9a3ed1eff3601b63aea4fb462d8b3b92c7c1e7e upstream.
    
    ... or the odyssey of trying to disable the stack protector for the
    function which generates the stack canary value.
    
    The whole story started with Sergei reporting a boot crash with a kernel
    built with gcc-10:
    
      Kernel panic — not syncing: stack-protector: Kernel stack is corrupted in: start_secondary
      CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.6.0-rc5—00235—gfffb08b37df9 #139
      Hardware name: Gigabyte Technology Co., Ltd. To be filled by O.E.M./H77M—D3H, BIOS F12 11/14/2013
      Call Trace:
        dump_stack
        panic
        ? start_secondary
        __stack_chk_fail
        start_secondary
        secondary_startup_64
      -—-[ end Kernel panic — not syncing: stack—protector: Kernel stack is corrupted in: start_secondary
    
    This happens because gcc-10 tail-call optimizes the last function call
    in start_secondary() - cpu_startup_entry() - and thus emits a stack
    canary check which fails because the canary value changes after the
    boot_init_stack_canary() call.
    
    To fix that, the initial attempt was to mark the one function which
    generates the stack canary with:
    
      __attribute__((optimize("-fno-stack-protector"))) ... start_secondary(void *unused)
    
    however, using the optimize attribute doesn't work cumulatively
    as the attribute does not add to but rather replaces previously
    supplied optimization options - roughly all -fxxx options.
    
    The key one among them being -fno-omit-frame-pointer and thus leading to
    not present frame pointer - frame pointer which the kernel needs.
    
    The next attempt to prevent compilers from tail-call optimizing
    the last function call cpu_startup_entry(), shy of carving out
    start_secondary() into a separate compilation unit and building it with
    -fno-stack-protector, was to add an empty asm("").
    
    This current solution was short and sweet, and reportedly, is supported
    by both compilers but we didn't get very far this time: future (LTO?)
    optimization passes could potentially eliminate this, which leads us
    to the third attempt: having an actual memory barrier there which the
    compiler cannot ignore or move around etc.
    
    That should hold for a long time, but hey we said that about the other
    two solutions too so...
    
    Reported-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Kalle Valo <kvalo@codeaurora.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20200314164451.346497-1-slyfox@gentoo.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b00e09960d7194809e8af61b95814f012eccc20
Author: Babu Moger <babu.moger@amd.com>
Date:   Tue May 12 18:59:06 2020 -0500

    KVM: x86: Fix pkru save/restore when guest CR4.PKE=0, move it to x86.c
    
    commit 37486135d3a7b03acc7755b63627a130437f066a upstream.
    
    Though rdpkru and wrpkru are contingent upon CR4.PKE, the PKRU
    resource isn't. It can be read with XSAVE and written with XRSTOR.
    So, if we don't set the guest PKRU value here(kvm_load_guest_xsave_state),
    the guest can read the host value.
    
    In case of kvm_load_host_xsave_state, guest with CR4.PKE clear could
    potentially use XRSTOR to change the host PKRU value.
    
    While at it, move pkru state save/restore to common code and the
    host_pkru field to kvm_vcpu_arch.  This will let SVM support protection keys.
    
    Cc: stable@vger.kernel.org
    Reported-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Babu Moger <babu.moger@amd.com>
    Message-Id: <158932794619.44260.14508381096663848853.stgit@naples-babu.amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 042ae30b46fce74b20e6233a2471c071defc5eea
Author: Adam McCoy <adam@forsedomani.com>
Date:   Wed May 13 11:53:30 2020 +0000

    cifs: fix leaked reference on requeued write
    
    commit a48137996063d22ffba77e077425f49873856ca5 upstream.
    
    Failed async writes that are requeued may not clean up a refcount
    on the file, which can result in a leaked open. This scenario arises
    very reliably when using persistent handles and a reconnect occurs
    while writing.
    
    cifs_writev_requeue only releases the reference if the write fails
    (rc != 0). The server->ops->async_writev operation will take its own
    reference, so the initial reference can always be released.
    
    Signed-off-by: Adam McCoy <adam@forsedomani.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39be29d41660116b440c3a19ffca34ce7b6d6726
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Mon Apr 20 07:47:05 2020 +0000

    powerpc/32s: Fix build failure with CONFIG_PPC_KUAP_DEBUG
    
    commit 4833ce06e6855d526234618b746ffb71d6612c9a upstream.
    
    gpr2 is not a parametre of kuap_check(), it doesn't exist.
    
    Use gpr instead.
    
    Fixes: a68c31fc01ef ("powerpc/32s: Implement Kernel Userspace Access Protection")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/ea599546f2a7771bde551393889e44e6b2632332.1587368807.git.christophe.leroy@c-s.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 249b99a8d8d0f19f4694f4c8f05bc6ec7921c425
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Sat May 9 09:42:14 2020 +0000

    powerpc/vdso32: Fallback on getres syscall when clock is unknown
    
    commit e963b7a28b2bf2416304e1a15df967fcf662aff5 upstream.
    
    There are other clocks than the standard ones, for instance
    per process clocks. Therefore, being above the last standard clock
    doesn't mean it is a bad clock. So, fallback to syscall instead
    of returning -EINVAL inconditionaly.
    
    Fixes: e33ffc956b08 ("powerpc/vdso32: implement clock_getres entirely")
    Cc: stable@vger.kernel.org # v5.6+
    Reported-by: Aurelien Jarno <aurelien@aurel32.net>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Tested-by: Aurelien Jarno <aurelien@aurel32.net>
    Link: https://lore.kernel.org/r/7316a9e2c0c2517923eb4b0411c4a08d15e675a4.1589017281.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81f275dfd2cb3ad8d9723b8f3b71e1a13894fd5b
Author: Imre Deak <imre.deak@intel.com>
Date:   Mon May 4 10:58:28 2020 +0300

    drm/i915/tgl+: Fix interrupt handling for DP AUX transactions
    
    commit 4457a9db2bdec2360ddb15242341696108167886 upstream.
    
    Unmask/enable AUX interrupts on all ports on TGL+. So far the interrupts
    worked only on port A, which meant each transaction on other ports took
    10ms.
    
    Cc: <stable@vger.kernel.org> # v5.4+
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200504075828.20348-1-imre.deak@intel.com
    (cherry picked from commit 054318c7e35f1d7d06b216143fff5f32405047ee)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 113555dee159d1aa37931679f88567e75bb67460
Author: Tom St Denis <tom.stdenis@amd.com>
Date:   Thu May 7 08:35:40 2020 -0400

    drm/amd/amdgpu: add raven1 part to the gfxoff quirk list
    
    commit 975f543e7522e17b8a4bf34d7daeac44819aee5a upstream.
    
    On my raven1 system (rev c6) with VBIOS 113-RAVEN-114 GFXOFF is
    not stable (resulting in large block tiling noise in some applications).
    
    Disabling GFXOFF via the quirk list fixes the problems for me.
    
    Signed-off-by: Tom St Denis <tom.stdenis@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36ab3ad8b6c9e14a5310eaa49a5725d03945c789
Author: Simon Ser <contact@emersion.fr>
Date:   Mon Mar 30 09:23:21 2020 +0000

    drm/amd/display: add basic atomic check for cursor plane
    
    commit 626bf90fe03fa080d8df06bb0397c95c53ae8e27 upstream.
    
    This patch adds a basic cursor check when an atomic test-only commit is
    performed. The position and size of the cursor plane is checked.
    
    This should fix user-space relying on atomic checks to assign buffers to
    planes.
    
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Reported-by: Roman Gilg <subdiff@gmail.com>
    References: https://github.com/emersion/libliftoff/issues/46
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Harry Wentland <hwentlan@amd.com>
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 008ed582b6992718317ce71a712e5b1783d2b418
Author: Michal Vokáč <michal.vokac@ysoft.com>
Date:   Tue Mar 17 09:46:28 2020 +0100

    ARM: dts: imx6dl-yapp4: Fix Ursa board Ethernet connection
    
    commit cbe63a8358310244e6007398bd2c7c70c7fd51cd upstream.
    
    The Y Soft yapp4 platform supports up to two Ethernet ports.
    The Ursa board though has only one Ethernet port populated and that is
    the port@2. Since the introduction of this platform into mainline a wrong
    port was deleted and the Ethernet could never work. Fix this by deleting
    the correct port node.
    
    Fixes: 87489ec3a77f ("ARM: dts: imx: Add Y Soft IOTA Draco, Hydra and Ursa boards")
    Cc: stable@vger.kernel.org
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5246ca21ca4db4a6d03eb8e496ccca8f24f14bac
Author: Fabio Estevam <festevam@gmail.com>
Date:   Fri Mar 27 10:36:24 2020 -0300

    ARM: dts: imx27-phytec-phycard-s-rdk: Fix the I2C1 pinctrl entries
    
    commit 0caf34350a25907515d929a9c77b9b206aac6d1e upstream.
    
    The I2C2 pins are already used and the following errors are seen:
    
    imx27-pinctrl 10015000.iomuxc: pin MX27_PAD_I2C2_SDA already requested by 10012000.i2c; cannot claim for 1001d000.i2c
    imx27-pinctrl 10015000.iomuxc: pin-69 (1001d000.i2c) status -22
    imx27-pinctrl 10015000.iomuxc: could not request pin 69 (MX27_PAD_I2C2_SDA) from group i2c2grp  on device 10015000.iomuxc
    imx-i2c 1001d000.i2c: Error applying setting, reverse things back
    imx-i2c: probe of 1001d000.i2c failed with error -22
    
    Fix it by adding the correct I2C1 IOMUX entries for the pinctrl_i2c1 group.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 61664d0b432a ("ARM: dts: imx27 phyCARD-S pinctrl")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Reviewed-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3b0245a1023e8aab3209a544e1280326544bb94
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Fri Apr 17 12:13:40 2020 +0530

    ARM: dts: dra7: Fix bus_dma_limit for PCIe
    
    commit 90d4d3f4ea45370d482fa609dbae4d2281b4074f upstream.
    
    Even though commit cfb5d65f2595 ("ARM: dts: dra7: Add bus_dma_limit
    for L3 bus") added bus_dma_limit for L3 bus, the PCIe controller
    gets incorrect value of bus_dma_limit.
    
    Fix it by adding empty dma-ranges property to axi@0 and axi@1
    (parent device tree node of PCIe controller).
    
    Cc: stable@kernel.org
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a88c06df4955c541f0f55af9a2550ba083fc8a43
Author: Peter Jones <pjones@redhat.com>
Date:   Fri Jul 6 15:04:24 2018 -0400

    Make the "Reducing compressed framebufer size" message be DRM_INFO_ONCE()
    
    commit 82152d424b6cb6fc1ede7d03d69c04e786688740 upstream.
    
    This was sort of annoying me:
    
    random:~$ dmesg | tail -1
    [523884.039227] [drm] Reducing the compressed framebuffer size. This may lead to less power savings than a non-reduced-size. Try to increase stolen memory size if available in BIOS.
    random:~$ dmesg | grep -c "Reducing the compressed"
    47
    
    This patch makes it DRM_INFO_ONCE() just like the similar message
    farther down in that function is pr_info_once().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Peter Jones <pjones@redhat.com>
    Acked-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/1745
    Link: https://patchwork.freedesktop.org/patch/msgid/20180706190424.29194-1-pjones@redhat.com
    [vsyrjala: Rebase due to per-device logging]
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    (cherry picked from commit 6b7fc6a3e6af4ff5773949d0fed70d8e7f68d5ce)
    [Rodrigo: port back to DRM_INFO_ONCE]
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c1c7e5c0fee6cc6c94a50ebf489fab631a4ec3
Author: Sriharsha Allenki <sallenki@codeaurora.org>
Date:   Thu May 14 14:04:31 2020 +0300

    usb: xhci: Fix NULL pointer dereference when enqueuing trbs from urb sg list
    
    commit 3c6f8cb92c9178fc0c66b580ea3df1fa3ac1155a upstream.
    
    On platforms with IOMMU enabled, multiple SGs can be coalesced into one
    by the IOMMU driver. In that case the SG list processing as part of the
    completion of a urb on a bulk endpoint can result into a NULL pointer
    dereference with the below stack dump.
    
    <6> Unable to handle kernel NULL pointer dereference at virtual address 0000000c
    <6> pgd = c0004000
    <6> [0000000c] *pgd=00000000
    <6> Internal error: Oops: 5 [#1] PREEMPT SMP ARM
    <2> PC is at xhci_queue_bulk_tx+0x454/0x80c
    <2> LR is at xhci_queue_bulk_tx+0x44c/0x80c
    <2> pc : [<c08907c4>]    lr : [<c08907bc>]    psr: 000000d3
    <2> sp : ca337c80  ip : 00000000  fp : ffffffff
    <2> r10: 00000000  r9 : 50037000  r8 : 00004000
    <2> r7 : 00000000  r6 : 00004000  r5 : 00000000  r4 : 00000000
    <2> r3 : 00000000  r2 : 00000082  r1 : c2c1a200  r0 : 00000000
    <2> Flags: nzcv  IRQs off  FIQs off  Mode SVC_32  ISA ARM  Segment none
    <2> Control: 10c0383d  Table: b412c06a  DAC: 00000051
    <6> Process usb-storage (pid: 5961, stack limit = 0xca336210)
    <snip>
    <2> [<c08907c4>] (xhci_queue_bulk_tx)
    <2> [<c0881b3c>] (xhci_urb_enqueue)
    <2> [<c0831068>] (usb_hcd_submit_urb)
    <2> [<c08350b4>] (usb_sg_wait)
    <2> [<c089f384>] (usb_stor_bulk_transfer_sglist)
    <2> [<c089f2c0>] (usb_stor_bulk_srb)
    <2> [<c089fe38>] (usb_stor_Bulk_transport)
    <2> [<c089f468>] (usb_stor_invoke_transport)
    <2> [<c08a11b4>] (usb_stor_control_thread)
    <2> [<c014a534>] (kthread)
    
    The above NULL pointer dereference is the result of block_len and the
    sent_len set to zero after the first SG of the list when IOMMU driver
    is enabled. Because of this the loop of processing the SGs has run
    more than num_sgs which resulted in a sg_next on the last SG of the
    list which has SG_END set.
    
    Fix this by check for the sg before any attributes of the sg are
    accessed.
    
    [modified reason for null pointer dereference in commit message subject -Mathias]
    Fixes: f9c589e142d04 ("xhci: TD-fragment, align the unsplittable case with a bounce buffer")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sriharsha Allenki <sallenki@codeaurora.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20200514110432.25564-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 062e571afd9048bdc1d47d77a963fb662ce53246
Author: Kyungtae Kim <kt0755@gmail.com>
Date:   Sun May 10 05:43:34 2020 +0000

    USB: gadget: fix illegal array access in binding with UDC
    
    commit 15753588bcd4bbffae1cca33c8ced5722477fe1f upstream.
    
    FuzzUSB (a variant of syzkaller) found an illegal array access
    using an incorrect index while binding a gadget with UDC.
    
    Reference: https://www.spinics.net/lists/linux-usb/msg194331.html
    
    This bug occurs when a size variable used for a buffer
    is misused to access its strcpy-ed buffer.
    Given a buffer along with its size variable (taken from user input),
    from which, a new buffer is created using kstrdup().
    Due to the original buffer containing 0 value in the middle,
    the size of the kstrdup-ed buffer becomes smaller than that of the original.
    So accessing the kstrdup-ed buffer with the same size variable
    triggers memory access violation.
    
    The fix makes sure no zero value in the buffer,
    by comparing the strlen() of the orignal buffer with the size variable,
    so that the access to the kstrdup-ed buffer is safe.
    
    BUG: KASAN: slab-out-of-bounds in gadget_dev_desc_UDC_store+0x1ba/0x200
    drivers/usb/gadget/configfs.c:266
    Read of size 1 at addr ffff88806a55dd7e by task syz-executor.0/17208
    
    CPU: 2 PID: 17208 Comm: syz-executor.0 Not tainted 5.6.8 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0xce/0x128 lib/dump_stack.c:118
     print_address_description.constprop.4+0x21/0x3c0 mm/kasan/report.c:374
     __kasan_report+0x131/0x1b0 mm/kasan/report.c:506
     kasan_report+0x12/0x20 mm/kasan/common.c:641
     __asan_report_load1_noabort+0x14/0x20 mm/kasan/generic_report.c:132
     gadget_dev_desc_UDC_store+0x1ba/0x200 drivers/usb/gadget/configfs.c:266
     flush_write_buffer fs/configfs/file.c:251 [inline]
     configfs_write_file+0x2f1/0x4c0 fs/configfs/file.c:283
     __vfs_write+0x85/0x110 fs/read_write.c:494
     vfs_write+0x1cd/0x510 fs/read_write.c:558
     ksys_write+0x18a/0x220 fs/read_write.c:611
     __do_sys_write fs/read_write.c:623 [inline]
     __se_sys_write fs/read_write.c:620 [inline]
     __x64_sys_write+0x73/0xb0 fs/read_write.c:620
     do_syscall_64+0x9e/0x510 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Signed-off-by: Kyungtae Kim <kt0755@gmail.com>
    Reported-and-tested-by: Kyungtae Kim <kt0755@gmail.com>
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200510054326.GA19198@pizza01
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5180330783299da634665a38f89db972b216ec29
Author: Peter Chen <peter.chen@nxp.com>
Date:   Thu Apr 30 15:07:13 2020 +0800

    usb: cdns3: gadget: prev_req->trb is NULL for ep0
    
    commit 95cd7dc47abd71d1a0c9c43594ff2fa32552f46c upstream.
    
    And there are no multiple TRBs on EP0 and WA1 workaround,
    so it doesn't need to change TRB for EP0. It fixes below oops.
    
    configfs-gadget gadget: high-speed config #1: b
    android_work: sent uevent USB_STATE=CONFIGURED
    Unable to handle kernel read from unreadable memory at virtual address 0000000000000008
    Mem abort info:
    android_work: sent uevent USB_STATE=DISCONNECTED
      ESR = 0x96000004
      EC = 0x25: DABT (current EL), IL = 32 bits
    
      SET = 0, FnV = 0
      EA = 0, S1PTW = 0
    Data abort info:
      ISV = 0, ISS = 0x00000004
      CM = 0, WnR = 0
    user pgtable: 4k pages, 48-bit VAs, pgdp=00000008b5bb7000
    [0000000000000008] pgd=0000000000000000
    Internal error: Oops: 96000004 [#1] PREEMPT SMP
    Modules linked in:
    CPU: 2 PID: 430 Comm: HwBinder:401_1 Not tainted 5.4.24-06071-g6fa8921409c1-dirty #77
    Hardware name: Freescale i.MX8QXP MEK (DT)
    pstate: 60400085 (nZCv daIf +PAN -UAO)
    pc : cdns3_gadget_ep_dequeue+0x1d4/0x270
    lr : cdns3_gadget_ep_dequeue+0x48/0x270
    sp : ffff800012763ba0
    x29: ffff800012763ba0 x28: ffff00082c653c00
    x27: 0000000000000000 x26: ffff000068fa7b00
    x25: ffff0000699b2000 x24: ffff00082c6ac000
    x23: ffff000834f0a480 x22: ffff000834e87b9c
    x21: 0000000000000000 x20: ffff000834e87800
    x19: ffff000069eddc00 x18: 0000000000000000
    x17: 0000000000000000 x16: 0000000000000000
    x15: 0000000000000000 x14: 0000000000000000
    x13: 0000000000000000 x12: 0000000000000001
    x11: ffff80001180fbe8 x10: 0000000000000001
    x9 : ffff800012101558 x8 : 0000000000000001
    x7 : 0000000000000006 x6 : ffff000835d9c668
    x5 : ffff000834f0a4c8 x4 : 0000000096000000
    x3 : 0000000000001810 x2 : 0000000000000000
    x1 : ffff800024bd001c x0 : 0000000000000001
    Call trace:
     cdns3_gadget_ep_dequeue+0x1d4/0x270
     usb_ep_dequeue+0x34/0xf8
     composite_dev_cleanup+0x154/0x170
     configfs_composite_unbind+0x6c/0xa8
     usb_gadget_remove_driver+0x44/0x70
     usb_gadget_unregister_driver+0x74/0xe0
     unregister_gadget+0x28/0x58
     gadget_dev_desc_UDC_store+0x80/0x110
     configfs_write_file+0x1e0/0x2a0
     __vfs_write+0x48/0x90
     vfs_write+0xe4/0x1c8
     ksys_write+0x78/0x100
     __arm64_sys_write+0x24/0x30
     el0_svc_common.constprop.0+0x74/0x168
     el0_svc_handler+0x34/0xa0
     el0_svc+0x8/0xc
    Code: 52830203 b9407660 f94042e4 11000400 (b9400841)
    ---[ end trace 1574516e4c1772ca ]---
    Kernel panic - not syncing: Fatal exception
    SMP: stopping secondary CPUs
    Kernel Offset: disabled
    CPU features: 0x0002,20002008
    Memory Limit: none
    Rebooting in 5 seconds..
    
    Fixes: f616c3bda47e ("usb: cdns3: Fix dequeue implementation")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d614ebdc69e8f0ed977f0f37fea9b1a987356577
Author: Li Jun <jun.li@nxp.com>
Date:   Thu May 14 14:04:32 2020 +0300

    usb: host: xhci-plat: keep runtime active when removing host
    
    commit 1449cb2c2253d37d998c3714aa9b95416d16d379 upstream.
    
    While removing the host (e.g. for USB role switch from host to device),
    if runtime pm is enabled by user, below oops occurs on dwc3 and cdns3
    platforms.
    Keeping the xhci-plat device active during host removal, and disabling
    runtime pm before calling pm_runtime_set_suspended() fixes them.
    
    oops1:
    Unable to handle kernel NULL pointer dereference at virtual address
    0000000000000240
    Internal error: Oops: 96000004 [#1] PREEMPT SMP
    Modules linked in:
    CPU: 0 PID: 5 Comm: kworker/0:0 Not tainted 5.4.3-00107-g64d454a-dirty
    Hardware name: FSL i.MX8MP EVK (DT)
    Workqueue: pm pm_runtime_work
    pstate: 60000005 (nZCv daif -PAN -UAO)
    pc : xhci_suspend+0x34/0x698
    lr : xhci_plat_runtime_suspend+0x2c/0x38
    sp : ffff800011ddbbc0
    Call trace:
     xhci_suspend+0x34/0x698
     xhci_plat_runtime_suspend+0x2c/0x38
     pm_generic_runtime_suspend+0x28/0x40
     __rpm_callback+0xd8/0x138
     rpm_callback+0x24/0x98
     rpm_suspend+0xe0/0x448
     rpm_idle+0x124/0x140
     pm_runtime_work+0xa0/0xf8
     process_one_work+0x1dc/0x370
     worker_thread+0x48/0x468
     kthread+0xf0/0x120
     ret_from_fork+0x10/0x1c
    
    oops2:
    usb 2-1: USB disconnect, device number 2
    xhci-hcd xhci-hcd.1.auto: remove, state 4
    usb usb2: USB disconnect, device number 1
    xhci-hcd xhci-hcd.1.auto: USB bus 2 deregistered
    xhci-hcd xhci-hcd.1.auto: remove, state 4
    usb usb1: USB disconnect, device number 1
    Unable to handle kernel NULL pointer dereference at virtual address
    0000000000000138
    Internal error: Oops: 96000004 [#1] PREEMPT SMP
    Modules linked in:
    CPU: 2 PID: 7 Comm: kworker/u8:0 Not tainted 5.6.0-rc4-next-20200304-03578
    Hardware name: Freescale i.MX8QXP MEK (DT)
    Workqueue: 1-0050 tcpm_state_machine_work
    pstate: 20000005 (nzCv daif -PAN -UAO)
    pc : xhci_free_dev+0x214/0x270
    lr : xhci_plat_runtime_resume+0x78/0x88
    sp : ffff80001006b5b0
    Call trace:
     xhci_free_dev+0x214/0x270
     xhci_plat_runtime_resume+0x78/0x88
     pm_generic_runtime_resume+0x30/0x48
     __rpm_callback+0x90/0x148
     rpm_callback+0x28/0x88
     rpm_resume+0x568/0x758
     rpm_resume+0x260/0x758
     rpm_resume+0x260/0x758
     __pm_runtime_resume+0x40/0x88
     device_release_driver_internal+0xa0/0x1c8
     device_release_driver+0x1c/0x28
     bus_remove_device+0xd4/0x158
     device_del+0x15c/0x3a0
     usb_disable_device+0xb0/0x268
     usb_disconnect+0xcc/0x300
     usb_remove_hcd+0xf4/0x1dc
     xhci_plat_remove+0x78/0xe0
     platform_drv_remove+0x30/0x50
     device_release_driver_internal+0xfc/0x1c8
     device_release_driver+0x1c/0x28
     bus_remove_device+0xd4/0x158
     device_del+0x15c/0x3a0
     platform_device_del.part.0+0x20/0x90
     platform_device_unregister+0x28/0x40
     cdns3_host_exit+0x20/0x40
     cdns3_role_stop+0x60/0x90
     cdns3_role_set+0x64/0xd8
     usb_role_switch_set_role.part.0+0x3c/0x68
     usb_role_switch_set_role+0x20/0x30
     tcpm_mux_set+0x60/0xf8
     tcpm_reset_port+0xa4/0xf0
     tcpm_detach.part.0+0x28/0x50
     tcpm_state_machine_work+0x12ac/0x2360
     process_one_work+0x1c8/0x470
     worker_thread+0x50/0x428
     kthread+0xfc/0x128
     ret_from_fork+0x10/0x18
    Code: c8037c02 35ffffa3 17ffe7c3 f9800011 (c85f7c01)
    ---[ end trace 45b1a173d2679e44 ]---
    
    [minor commit message cleanup  -Mathias]
    Cc: Baolin Wang <baolin.wang@linaro.org>
    Cc: <stable@vger.kernel.org>
    Fixes: b0c69b4bace3 ("usb: host: plat: Enable xHCI plat runtime PM")
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Tested-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Li Jun <jun.li@nxp.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20200514110432.25564-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f567366a8150a3c6b506271ad8a0fde99def4a09
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Fri May 15 00:02:46 2020 +0200

    usb: core: hub: limit HUB_QUIRK_DISABLE_AUTOSUSPEND to USB5534B
    
    commit 76e1ef1d81a4129d7e2fb8c48c83b166d1c8e040 upstream.
    
    On Tue, May 12, 2020 at 09:36:07PM +0800, Kai-Heng Feng wrote [1]:
    > This patch prevents my Raven Ridge xHCI from getting runtime suspend.
    
    The problem described in v5.6 commit 1208f9e1d758c9 ("USB: hub: Fix the
    broken detection of USB3 device in SMSC hub") applies solely to the
    USB5534B hub [2] present on the Kingfisher Infotainment Carrier Board,
    manufactured by Shimafuji Electric Inc [3].
    
    Despite that, the aforementioned commit applied the quirk to _all_ hubs
    carrying vendor ID 0x424 (i.e. SMSC), of which there are more [4] than
    initially expected. Consequently, the quirk is now enabled on platforms
    carrying SMSC/Microchip hub models which potentially don't exhibit the
    original issue.
    
    To avoid reports like [1], further limit the quirk's scope to
    USB5534B [2], by employing both Vendor and Product ID checks.
    
    Tested on H3ULCB + Kingfisher rev. M05.
    
    [1] https://lore.kernel.org/linux-renesas-soc/73933975-6F0E-40F5-9584-D2B8F615C0F3@canonical.com/
    [2] https://www.microchip.com/wwwproducts/en/USB5534B
    [3] http://www.shimafuji.co.jp/wp/wp-content/uploads/2018/08/SBEV-RCAR-KF-M06Board_HWSpecificationEN_Rev130.pdf
    [4] https://devicehunt.com/search/type/usb/vendor/0424/device/any
    
    Fixes: 1208f9e1d758c9 ("USB: hub: Fix the broken detection of USB3 device in SMSC hub")
    Cc: stable@vger.kernel.org # v4.14+
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Cc: Hardik Gajjar <hgajjar@de.adit-jv.com>
    Cc: linux-renesas-soc@vger.kernel.org
    Cc: linux-usb@vger.kernel.org
    Reported-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20200514220246.13290-1-erosca@de.adit-jv.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05049607294ada1cca7df05a44cc99e268c167c9
Author: Jesus Ramos <jesus-ramos@live.com>
Date:   Mon Apr 27 06:21:39 2020 -0700

    ALSA: usb-audio: Add control message quirk delay for Kingston HyperX headset
    
    commit 073919e09ca445d4486968e3f851372ff44cf2b5 upstream.
    
    Kingston HyperX headset with 0951:16ad also needs the same quirk for
    delaying the frequency controls.
    
    Signed-off-by: Jesus Ramos <jesus-ramos@live.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/BY5PR19MB3634BA68C7CCA23D8DF428E796AF0@BY5PR19MB3634.namprd19.prod.outlook.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 343006873bc08b9bd8a22649ff131a6e752ac867
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu May 7 13:44:56 2020 +0200

    ALSA: rawmidi: Fix racy buffer resize under concurrent accesses
    
    commit c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d upstream.
    
    The rawmidi core allows user to resize the runtime buffer via ioctl,
    and this may lead to UAF when performed during concurrent reads or
    writes: the read/write functions unlock the runtime lock temporarily
    during copying form/to user-space, and that's the race window.
    
    This patch fixes the hole by introducing a reference counter for the
    runtime buffer read/write access and returns -EBUSY error when the
    resize is performed concurrently against read/write.
    
    Note that the ref count field is a simple integer instead of
    refcount_t here, since the all contexts accessing the buffer is
    basically protected with a spinlock, hence we need no expensive atomic
    ops.  Also, note that this busy check is needed only against read /
    write functions, and not in receive/transmit callbacks; the race can
    happen only at the spinlock hole mentioned in the above, while the
    whole function is protected for receive / transmit callbacks.
    
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/CAFcO6XMWpUVK_yzzCpp8_XP7+=oUpQvuBeCbMffEDkpe8jWrfg@mail.gmail.com
    Link: https://lore.kernel.org/r/s5heerw3r5z.wl-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e658ffbaf76b8623b017c56317eadccf529f652c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue May 12 09:32:03 2020 +0200

    ALSA: hda/realtek - Add COEF workaround for ASUS ZenBook UX431DA
    
    commit 1b94e59d30afecf18254ad413e953e7587645a20 upstream.
    
    ASUS ZenBook UX431DA requires an additional COEF setup when booted
    from the recent Windows 10, otherwise it produces the noisy output.
    The quirk turns on COEF 0x1b bit 10 that has been cleared supposedly
    due to the pop noise reduction.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207553
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20200512073203.14091-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bebf867a1dede126df9df919f7167145f4dbfb43
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu May 14 18:05:33 2020 +0200

    ALSA: hda/realtek - Limit int mic boost for Thinkpad T530
    
    commit b590b38ca305d6d7902ec7c4f7e273e0069f3bcc upstream.
    
    Lenovo Thinkpad T530 seems to have a sensitive internal mic capture
    that needs to limit the mic boost like a few other Thinkpad models.
    Although we may change the quirk for ALC269_FIXUP_LENOVO_DOCK, this
    hits way too many other laptop models, so let's add a new fixup model
    that limits the internal mic boost on top of the existing quirk and
    apply to only T530.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1171293
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200514160533.10337-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edc5a8c1ed67cfa24c24bad7c6b05c29475ed4f9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu May 14 13:27:11 2020 +0200

    USB: usbfs: fix mmap dma mismatch
    
    commit a0e710a7def471b8eb779ff551fc27701da49599 upstream.
    
    In commit 2bef9aed6f0e ("usb: usbfs: correct kernel->user page attribute
    mismatch") we switched from always calling remap_pfn_range() to call
    dma_mmap_coherent() to handle issues with systems with non-coherent USB host
    controller drivers.  Unfortunatly, as syzbot quickly told us, not all the world
    is host controllers with DMA support, so we need to check what host controller
    we are attempting to talk to before doing this type of allocation.
    
    Thanks to Christoph for the quick idea of how to fix this.
    
    Fixes: 2bef9aed6f0e ("usb: usbfs: correct kernel->user page attribute mismatch")
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hillf Danton <hdanton@sina.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jeremy Linton <jeremy.linton@arm.com>
    Cc: stable <stable@vger.kernel.org>
    Reported-by: syzbot+353be47c9ce21b68b7ed@syzkaller.appspotmail.com
    Reviewed-by: Jeremy Linton <jeremy.linton@arm.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20200514112711.1858252-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 582b8f7d5ceedfff9eef4f9e833ea8f8290044d3
Author: Jeremy Linton <jeremy.linton@arm.com>
Date:   Mon May 4 15:13:48 2020 -0500

    usb: usbfs: correct kernel->user page attribute mismatch
    
    commit 2bef9aed6f0e22391c8d4570749b1acc9bc3981e upstream.
    
    On some architectures (e.g. arm64) requests for
    IO coherent memory may use non-cachable attributes if
    the relevant device isn't cache coherent. If these
    pages are then remapped into userspace as cacheable,
    they may not be coherent with the non-cacheable mappings.
    
    In particular this happens with libusb, when it attempts
    to create zero-copy buffers for use by rtl-sdr
    (https://github.com/osmocom/rtl-sdr/). On low end arm
    devices with non-coherent USB ports, the application will
    be unexpectedly killed, while continuing to work fine on
    arm machines with coherent USB controllers.
    
    This bug has been discovered/reported a few times over
    the last few years. In the case of rtl-sdr a compile time
    option to enable/disable zero copy was implemented to
    work around it.
    
    Rather than relaying on application specific workarounds,
    dma_mmap_coherent() can be used instead of remap_pfn_range().
    The page cache/etc attributes will then be correctly set in
    userspace to match the kernel mapping.
    
    Signed-off-by: Jeremy Linton <jeremy.linton@arm.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200504201348.1183246-1-jeremy.linton@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baf648d4cb3a0b92298ea6b7ec31e6d006ffbcf8
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Mon May 11 10:39:24 2020 +0900

    bootconfig: Fix to prevent warning message if no bootconfig option
    
    commit 611d0a95d46b0977a530b4d538948c69d447b001 upstream.
    
    Commit de462e5f1071 ("bootconfig: Fix to remove bootconfig
    data from initrd while boot") causes a cosmetic regression
    on dmesg, which warns "no bootconfig data" message without
    bootconfig cmdline option.
    
    Fix setup_boot_config() by moving no bootconfig check after
    commandline option check.
    
    Link: http://lkml.kernel.org/r/9b1ba335-071d-c983-89a4-2677b522dcc8@molgen.mpg.de
    Link: http://lkml.kernel.org/r/158916116468.21787.14558782332170588206.stgit@devnote2
    
    Fixes: de462e5f1071 ("bootconfig: Fix to remove bootconfig data from initrd while boot")
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32394df25d8e46935b442b429d74b37885c4f092
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sun Apr 26 15:53:30 2020 +0900

    bootconfig: Fix to remove bootconfig data from initrd while boot
    
    commit de462e5f10718517bacf2f84c8aa2804567ef7df upstream.
    
    If there is a bootconfig data in the tail of initrd/initramfs,
    initrd image sanity check caused an error while decompression
    stage as follows.
    
    [    0.883882] Unpacking initramfs...
    [    2.696429] Initramfs unpacking failed: invalid magic at start of compressed archive
    
    This error will be ignored if CONFIG_BLK_DEV_RAM=n,
    but CONFIG_BLK_DEV_RAM=y the kernel failed to mount rootfs
    and causes a panic.
    
    To fix this issue, shrink down the initrd_end for removing
    tailing bootconfig data while boot the kernel.
    
    Link: http://lkml.kernel.org/r/158788401014.24243.17424755854115077915.stgit@devnote2
    
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Fixes: 7684b8582c24 ("bootconfig: Load boot config from the tail of initrd")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7f25746b0fdd0385d09d75521c965c4c3df4b70
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 15:58:04 2020 -0700

    gcc-10: avoid shadowing standard library 'free()' in crypto
    
    commit 1a263ae60b04de959d9ce9caea4889385eefcc7b upstream.
    
    gcc-10 has started warning about conflicting types for a few new
    built-in functions, particularly 'free()'.
    
    This results in warnings like:
    
       crypto/xts.c:325:13: warning: conflicting types for built-in function ‘free’; expected ‘void(void *)’ [-Wbuiltin-declaration-mismatch]
    
    because the crypto layer had its local freeing functions called
    'free()'.
    
    Gcc-10 is in the wrong here, since that function is marked 'static', and
    thus there is no chance of confusion with any standard library function
    namespace.
    
    But the simplest thing to do is to just use a different name here, and
    avoid this gcc mis-feature.
    
    [ Side note: gcc knowing about 'free()' is in itself not the
      mis-feature: the semantics of 'free()' are special enough that a
      compiler can validly do special things when seeing it.
    
      So the mis-feature here is that gcc thinks that 'free()' is some
      restricted name, and you can't shadow it as a local static function.
    
      Making the special 'free()' semantics be a function attribute rather
      than tied to the name would be the much better model ]
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b08afbbd30d45dcf46125368deb7bd514090efd6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 17:50:03 2020 -0700

    gcc-10: mark more functions __init to avoid section mismatch warnings
    
    commit e99332e7b4cda6e60f5b5916cf9943a79dbef902 upstream.
    
    It seems that for whatever reason, gcc-10 ends up not inlining a couple
    of functions that used to be inlined before.  Even if they only have one
    single callsite - it looks like gcc may have decided that the code was
    unlikely, and not worth inlining.
    
    The code generation difference is harmless, but caused a few new section
    mismatch errors, since the (now no longer inlined) function wasn't in
    the __init section, but called other init functions:
    
       Section mismatch in reference from the function kexec_free_initrd() to the function .init.text:free_initrd_mem()
       Section mismatch in reference from the function tpm2_calc_event_log_size() to the function .init.text:early_memremap()
       Section mismatch in reference from the function tpm2_calc_event_log_size() to the function .init.text:early_memunmap()
    
    So add the appropriate __init annotation to make modpost not complain.
    In both cases there were trivially just a single callsite from another
    __init function.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f35ef92069e94995078eb33a7670a8df88e22199
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 4 09:16:37 2020 -0700

    gcc-10 warnings: fix low-hanging fruit
    
    commit 9d82973e032e246ff5663c9805fbb5407ae932e3 upstream.
    
    Due to a bug-report that was compiler-dependent, I updated one of my
    machines to gcc-10.  That shows a lot of new warnings.  Happily they
    seem to be mostly the valid kind, but it's going to cause a round of
    churn for getting rid of them..
    
    This is the really low-hanging fruit of removing a couple of zero-sized
    arrays in some core code.  We have had a round of these patches before,
    and we'll have many more coming, and there is nothing special about
    these except that they were particularly trivial, and triggered more
    warnings than most.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a8ff6fa13bfdf1c7b08e69e0c6d6f7fd5367622
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 15:45:21 2020 -0700

    gcc-10: disable 'restrict' warning for now
    
    commit adc71920969870dfa54e8f40dac8616284832d02 upstream.
    
    gcc-10 now warns about passing aliasing pointers to functions that take
    restricted pointers.
    
    That's actually a great warning, and if we ever start using 'restrict'
    in the kernel, it might be quite useful.  But right now we don't, and it
    turns out that the only thing this warns about is an idiom where we have
    declared a few functions to be "printf-like" (which seems to make gcc
    pick up the restricted pointer thing), and then we print to the same
    buffer that we also use as an input.
    
    And people do that as an odd concatenation pattern, with code like this:
    
        #define sysfs_show_gen_prop(buffer, fmt, ...) \
            snprintf(buffer, PAGE_SIZE, "%s"fmt, buffer, __VA_ARGS__)
    
    where we have 'buffer' as both the destination of the final result, and
    as the initial argument.
    
    Yes, it's a bit questionable.  And outside of the kernel, people do have
    standard declarations like
    
        int snprintf( char *restrict buffer, size_t bufsz,
                      const char *restrict format, ... );
    
    where that output buffer is marked as a restrict pointer that cannot
    alias with any other arguments.
    
    But in the context of the kernel, that 'use snprintf() to concatenate to
    the end result' does work, and the pattern shows up in multiple places.
    And we have not marked our own version of snprintf() as taking restrict
    pointers, so the warning is incorrect for now, and gcc picks it up on
    its own.
    
    If we do start using 'restrict' in the kernel (and it might be a good
    idea if people find places where it matters), we'll need to figure out
    how to avoid this issue for snprintf and friends.  But in the meantime,
    this warning is not useful.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1e9358e1d48b823adf446cd65b0a5f309d37ee8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 15:40:52 2020 -0700

    gcc-10: disable 'stringop-overflow' warning for now
    
    commit 5a76021c2eff7fcf2f0918a08fd8a37ce7922921 upstream.
    
    This is the final array bounds warning removal for gcc-10 for now.
    
    Again, the warning is good, and we should re-enable all these warnings
    when we have converted all the legacy array declaration cases to
    flexible arrays. But in the meantime, it's just noise.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e96d575ff8f3672be8f10468ad2ec31760bc519f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 14:52:44 2020 -0700

    gcc-10: disable 'array-bounds' warning for now
    
    commit 44720996e2d79e47d508b0abe99b931a726a3197 upstream.
    
    This is another fine warning, related to the 'zero-length-bounds' one,
    but hitting the same historical code in the kernel.
    
    Because C didn't historically support flexible array members, we have
    code that instead uses a one-sized array, the same way we have cases of
    zero-sized arrays.
    
    The one-sized arrays come from either not wanting to use the gcc
    zero-sized array extension, or from a slight convenience-feature, where
    particularly for strings, the size of the structure now includes the
    allocation for the final NUL character.
    
    So with a "char name[1];" at the end of a structure, you can do things
    like
    
           v = my_malloc(sizeof(struct vendor) + strlen(name));
    
    and avoid the "+1" for the terminator.
    
    Yes, the modern way to do that is with a flexible array, and using
    'offsetof()' instead of 'sizeof()', and adding the "+1" by hand.  That
    also technically gets the size "more correct" in that it avoids any
    alignment (and thus padding) issues, but this is another long-term
    cleanup thing that will not happen for 5.7.
    
    So disable the warning for now, even though it's potentially quite
    useful.  Having a slew of warnings that then hide more urgent new issues
    is not an improvement.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6dae2dcef67a661089ab26423f470ebcacc0657
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 14:30:29 2020 -0700

    gcc-10: disable 'zero-length-bounds' warning for now
    
    commit 5c45de21a2223fe46cf9488c99a7fbcf01527670 upstream.
    
    This is a fine warning, but we still have a number of zero-length arrays
    in the kernel that come from the traditional gcc extension.  Yes, they
    are getting converted to flexible arrays, but in the meantime the gcc-10
    warning about zero-length bounds is very verbose, and is hiding other
    issues.
    
    I missed one actual build failure because it was hidden among hundreds
    of lines of warning.  Thankfully I caught it on the second go before
    pushing things out, but it convinced me that I really need to disable
    the new warnings for now.
    
    We'll hopefully be all done with our conversion to flexible arrays in
    the not too distant future, and we can then re-enable this warning.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1e123f8d33a126c66605fc871ce63b36a13b915
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 9 13:57:10 2020 -0700

    Stop the ad-hoc games with -Wno-maybe-initialized
    
    commit 78a5255ffb6a1af189a83e493d916ba1c54d8c75 upstream.
    
    We have some rather random rules about when we accept the
    "maybe-initialized" warnings, and when we don't.
    
    For example, we consider it unreliable for gcc versions < 4.9, but also
    if -O3 is enabled, or if optimizing for size.  And then various kernel
    config options disabled it, because they know that they trigger that
    warning by confusing gcc sufficiently (ie PROFILE_ALL_BRANCHES).
    
    And now gcc-10 seems to be introducing a lot of those warnings too, so
    it falls under the same heading as 4.9 did.
    
    At the same time, we have a very straightforward way to _enable_ that
    warning when wanted: use "W=2" to enable more warnings.
    
    So stop playing these ad-hoc games, and just disable that warning by
    default, with the known and straight-forward "if you want to work on the
    extra compiler warnings, use W=123".
    
    Would it be great to have code that is always so obvious that it never
    confuses the compiler whether a variable is used initialized or not?
    Yes, it would.  In a perfect world, the compilers would be smarter, and
    our source code would be simpler.
    
    That's currently not the world we live in, though.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ad7f6fd9e3cc98736afd9b49ea62a335a88f506
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Apr 14 20:02:07 2020 -0300

    net/rds: Use ERR_PTR for rds_message_alloc_sgs()
    
    commit 7dba92037baf3fa00b4880a31fd532542264994c upstream.
    
    Returning the error code via a 'int *ret' when the function returns a
    pointer is very un-kernely and causes gcc 10's static analysis to choke:
    
    net/rds/message.c: In function ‘rds_message_map_pages’:
    net/rds/message.c:358:10: warning: ‘ret’ may be used uninitialized in this function [-Wmaybe-uninitialized]
      358 |   return ERR_PTR(ret);
    
    Use a typical ERR_PTR return instead.
    
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9c29896d45ccfa02cd738ab8a97363c94d3f774
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Apr 14 12:10:50 2020 -0300

    pnp: Use list_for_each_entry() instead of open coding
    
    commit 01b2bafe57b19d9119413f138765ef57990921ce upstream.
    
    Aside from good practice, this avoids a warning from gcc 10:
    
    ./include/linux/kernel.h:997:3: warning: array subscript -31 is outside array bounds of ‘struct list_head[1]’ [-Warray-bounds]
      997 |  ((type *)(__mptr - offsetof(type, member))); })
          |  ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./include/linux/list.h:493:2: note: in expansion of macro ‘container_of’
      493 |  container_of(ptr, type, member)
          |  ^~~~~~~~~~~~
    ./include/linux/pnp.h:275:30: note: in expansion of macro ‘list_entry’
      275 | #define global_to_pnp_dev(n) list_entry(n, struct pnp_dev, global_list)
          |                              ^~~~~~~~~~
    ./include/linux/pnp.h:281:11: note: in expansion of macro ‘global_to_pnp_dev’
      281 |  (dev) != global_to_pnp_dev(&pnp_global); \
          |           ^~~~~~~~~~~~~~~~~
    arch/x86/kernel/rtc.c:189:2: note: in expansion of macro ‘pnp_for_each_dev’
      189 |  pnp_for_each_dev(dev) {
    
    Because the common code doesn't cast the starting list_head to the
    containing struct.
    
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [ rjw: Whitespace adjustments ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6819f7586018e8eb036edcb403217a43ab62400
Author: Olga Kornievskaia <olga.kornievskaia@gmail.com>
Date:   Thu May 14 16:09:40 2020 -0400

    NFSv3: fix rpc receive buffer size for MOUNT call
    
    [ Upstream commit 8eed292bc8cbf737e46fb1c119d4c8f6dcb00650 ]
    
    Prior to commit e3d3ab64dd66 ("SUNRPC: Use au_rslack when
    computing reply buffer size"), there was enough slack in the reply
    buffer to commodate filehandles of size 60bytes. However, the real
    problem was that the reply buffer size for the MOUNT operation was
    not correctly calculated. Received buffer size used the filehandle
    size for NFSv2 (32bytes) which is much smaller than the allowed
    filehandle size for the v3 mounts.
    
    Fix the reply buffer size (decode arguments size) for the MNT command.
    
    Fixes: 2c94b8eca1a2 ("SUNRPC: Use au_rslack when computing reply buffer size")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3601c141d03c29f9456c04e2dfbd870f376485f6
Author: Sasha Levin <sashal@kernel.org>
Date:   Sat May 16 20:45:27 2020 -0400

    bpf: Fix bug in mmap() implementation for BPF array map
    
    [ Upstream commit 333291ce5055f2039afc907badaf5b66bc1adfdc ]
    
    mmap() subsystem allows user-space application to memory-map region with
    initial page offset. This wasn't taken into account in initial implementation
    of BPF array memory-mapping. This would result in wrong pages, not taking into
    account requested page shift, being memory-mmaped into user-space. This patch
    fixes this gap and adds a test for such scenario.
    
    Fixes: fc9702273e2e ("bpf: Add mmap() support for BPF_MAP_TYPE_ARRAY")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20200512235925.3817805-1-andriin@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5891ccd18dee25b6ac02d49be510f89d74017753
Author: Roman Penyaev <rpenyaev@suse.de>
Date:   Wed May 13 17:50:38 2020 -0700

    epoll: call final ep_events_available() check under the lock
    
    [ Upstream commit 65759097d804d2a9ad2b687db436319704ba7019 ]
    
    There is a possible race when ep_scan_ready_list() leaves ->rdllist and
    ->obflist empty for a short period of time although some events are
    pending.  It is quite likely that ep_events_available() observes empty
    lists and goes to sleep.
    
    Since commit 339ddb53d373 ("fs/epoll: remove unnecessary wakeups of
    nested epoll") we are conservative in wakeups (there is only one place
    for wakeup and this is ep_poll_callback()), thus ep_events_available()
    must always observe correct state of two lists.
    
    The easiest and correct way is to do the final check under the lock.
    This does not impact the performance, since lock is taken anyway for
    adding a wait entry to the wait queue.
    
    The discussion of the problem can be found here:
    
       https://lore.kernel.org/linux-fsdevel/a2f22c3c-c25a-4bda-8339-a7bdaf17849e@akamai.com/
    
    In this patch barrierless __set_current_state() is used.  This is safe
    since waitqueue_active() is called under the same lock on wakeup side.
    
    Short-circuit for fatal signals (i.e.  fatal_signal_pending() check) is
    moved to the line just before actual events harvesting routine.  This is
    fully compliant to what is said in the comment of the patch where the
    actual fatal_signal_pending() check was added: c257a340ede0 ("fs, epoll:
    short circuit fetching events if thread has been killed").
    
    Fixes: 339ddb53d373 ("fs/epoll: remove unnecessary wakeups of nested epoll")
    Reported-by: Jason Baron <jbaron@akamai.com>
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Roman Penyaev <rpenyaev@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Jason Baron <jbaron@akamai.com>
    Cc: Khazhismel Kumykov <khazhy@google.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200505145609.1865152-1-rpenyaev@suse.de
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90c90cb2906fee61791e082cced3191a762debc6
Author: Yafang Shao <laoar.shao@gmail.com>
Date:   Wed May 13 17:50:34 2020 -0700

    mm, memcg: fix inconsistent oom event behavior
    
    [ Upstream commit 04fd61a4e01028210a91f0efc408c8bc61a3018c ]
    
    A recent commit 9852ae3fe529 ("mm, memcg: consider subtrees in
    memory.events") changed the behavior of memcg events, which will now
    consider subtrees in memory.events.
    
    But oom_kill event is a special one as it is used in both cgroup1 and
    cgroup2.  In cgroup1, it is displayed in memory.oom_control.  The file
    memory.oom_control is in both root memcg and non root memcg, that is
    different with memory.event as it only in non-root memcg.  That commit
    is okay for cgroup2, but it is not okay for cgroup1 as it will cause
    inconsistent behavior between root memcg and non-root memcg.
    
    Here's an example on why this behavior is inconsistent in cgroup1.
    
           root memcg
           /
        memcg foo
         /
      memcg bar
    
    Suppose there's an oom_kill in memcg bar, then the oon_kill will be
    
           root memcg : memory.oom_control(oom_kill)  0
           /
        memcg foo : memory.oom_control(oom_kill)  1
         /
      memcg bar : memory.oom_control(oom_kill)  1
    
    For the non-root memcg, its memory.oom_control(oom_kill) includes its
    descendants' oom_kill, but for root memcg, it doesn't include its
    descendants' oom_kill.  That means, memory.oom_control(oom_kill) has
    different meanings in different memcgs.  That is inconsistent.  Then the
    user has to know whether the memcg is root or not.
    
    If we can't fully support it in cgroup1, for example by adding
    memory.events.local into cgroup1 as well, then let's don't touch its
    original behavior.
    
    Fixes: 9852ae3fe529 ("mm, memcg: consider subtrees in memory.events")
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Yafang Shao <laoar.shao@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Chris Down <chris@chrisdown.name>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200502141055.7378-1-laoar.shao@gmail.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f18d3beac6bc2e1bddfba202f5327200acbda54c
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Sat May 9 12:52:17 2020 +0100

    drm/i915: Handle idling during i915_gem_evict_something busy loops
    
    [ Upstream commit 955da9d77435acac066139e9d7f7723ce7204a1d ]
    
    i915_gem_evict_something() is charged with finding a slot within the GTT
    that we may reuse. Since our goal is not to stall, we first look for a
    slot that only overlaps idle vma. To this end, on the first pass we move
    any active vma to the end of the search list. However, we only stopped
    moving active vma after we see the first active vma twice. If during the
    search, that first active vma completed, we would not notice and keep on
    extending the search list.
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/1746
    Fixes: 2850748ef876 ("drm/i915: Pull i915_vma_pin under the vm->mutex")
    Fixes: b1e3177bd1d8 ("drm/i915: Coordinate i915_active with its own mutex")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: <stable@vger.kernel.org> # v5.5+
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200509115217.26853-1-chris@chris-wilson.co.uk
    (cherry picked from commit 73e28cc40bf00b5d168cb8f5cff1ae63e9097446)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e83d5a1066800985e95737e7a8a19ea3270b558
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed May 13 09:42:29 2020 +0200

    s390/ism: fix error return code in ism_probe()
    
    [ Upstream commit 29b74cb75e3572d83708745e81e24d37837415f9 ]
    
    Fix to return negative error code -ENOMEM from the smcd_alloc_dev()
    error handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 684b89bc39ce ("s390/ism: add device driver for internal shared memory")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfe9f43509f2e4e8c1ac6f87fa6e686674f8a1cc
Author: Samu Nuutamo <samu.nuutamo@vincit.fi>
Date:   Mon May 11 13:02:19 2020 +0200

    hwmon: (da9052) Synchronize access with mfd
    
    [ Upstream commit 333e22db228f0bd0c839553015a6a8d3db4ba569 ]
    
    When tsi-as-adc is configured it is possible for in7[0123]_input read to
    return an incorrect value if a concurrent read to in[456]_input is
    performed. This is caused by a concurrent manipulation of the mux
    channel without proper locking as hwmon and mfd use different locks for
    synchronization.
    
    Switch hwmon to use the same lock as mfd when accessing the TSI channel.
    
    Fixes: 4f16cab19a3d5 ("hwmon: da9052: Add support for TSI channel")
    Signed-off-by: Samu Nuutamo <samu.nuutamo@vincit.fi>
    [rebase to current master, reword commit message slightly]
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a6a42a5c71b1165d51e07f52cdd54dab7160604
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Apr 30 20:21:47 2020 -0400

    x86/ftrace: Have ftrace trampolines turn read-only at the end of system boot up
    
    [ Upstream commit 59566b0b622e3e6ea928c0b8cac8a5601b00b383 ]
    
    Booting one of my machines, it triggered the following crash:
    
     Kernel/User page tables isolation: enabled
     ftrace: allocating 36577 entries in 143 pages
     Starting tracer 'function'
     BUG: unable to handle page fault for address: ffffffffa000005c
     #PF: supervisor write access in kernel mode
     #PF: error_code(0x0003) - permissions violation
     PGD 2014067 P4D 2014067 PUD 2015063 PMD 7b253067 PTE 7b252061
     Oops: 0003 [#1] PREEMPT SMP PTI
     CPU: 0 PID: 0 Comm: swapper Not tainted 5.4.0-test+ #24
     Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./To be filled by O.E.M., BIOS SDBLI944.86P 05/08/2007
     RIP: 0010:text_poke_early+0x4a/0x58
     Code: 34 24 48 89 54 24 08 e8 bf 72 0b 00 48 8b 34 24 48 8b 4c 24 08 84 c0 74 0b 48 89 df f3 a4 48 83 c4 10 5b c3 9c 58 fa 48 89 df <f3> a4 50 9d 48 83 c4 10 5b e9 d6 f9 ff ff
    0 41 57 49
     RSP: 0000:ffffffff82003d38 EFLAGS: 00010046
     RAX: 0000000000000046 RBX: ffffffffa000005c RCX: 0000000000000005
     RDX: 0000000000000005 RSI: ffffffff825b9a90 RDI: ffffffffa000005c
     RBP: ffffffffa000005c R08: 0000000000000000 R09: ffffffff8206e6e0
     R10: ffff88807b01f4c0 R11: ffffffff8176c106 R12: ffffffff8206e6e0
     R13: ffffffff824f2440 R14: 0000000000000000 R15: ffffffff8206eac0
     FS:  0000000000000000(0000) GS:ffff88807d400000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: ffffffffa000005c CR3: 0000000002012000 CR4: 00000000000006b0
     Call Trace:
      text_poke_bp+0x27/0x64
      ? mutex_lock+0x36/0x5d
      arch_ftrace_update_trampoline+0x287/0x2d5
      ? ftrace_replace_code+0x14b/0x160
      ? ftrace_update_ftrace_func+0x65/0x6c
      __register_ftrace_function+0x6d/0x81
      ftrace_startup+0x23/0xc1
      register_ftrace_function+0x20/0x37
      func_set_flag+0x59/0x77
      __set_tracer_option.isra.19+0x20/0x3e
      trace_set_options+0xd6/0x13e
      apply_trace_boot_options+0x44/0x6d
      register_tracer+0x19e/0x1ac
      early_trace_init+0x21b/0x2c9
      start_kernel+0x241/0x518
      ? load_ucode_intel_bsp+0x21/0x52
      secondary_startup_64+0xa4/0xb0
    
    I was able to trigger it on other machines, when I added to the kernel
    command line of both "ftrace=function" and "trace_options=func_stack_trace".
    
    The cause is the "ftrace=function" would register the function tracer
    and create a trampoline, and it will set it as executable and
    read-only. Then the "trace_options=func_stack_trace" would then update
    the same trampoline to include the stack tracer version of the function
    tracer. But since the trampoline already exists, it updates it with
    text_poke_bp(). The problem is that text_poke_bp() called while
    system_state == SYSTEM_BOOTING, it will simply do a memcpy() and not
    the page mapping, as it would think that the text is still read-write.
    But in this case it is not, and we take a fault and crash.
    
    Instead, lets keep the ftrace trampolines read-write during boot up,
    and then when the kernel executable text is set to read-only, the
    ftrace trampolines get set to read-only as well.
    
    Link: https://lkml.kernel.org/r/20200430202147.4dc6e2de@oasis.local.home
    
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: stable@vger.kernel.org
    Fixes: 768ae4406a5c ("x86/ftrace: Use text_poke()")
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6e472f6d6ebd2ee387d6ab473934c7016763cdd
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Tue May 12 00:26:08 2020 +0530

    RDMA/iw_cxgb4: Fix incorrect function parameters
    
    [ Upstream commit c8b1f340e54158662acfa41d6dee274846370282 ]
    
    While reading the TCB field in t4_tcb_get_field32() the wrong mask is
    passed as a parameter which leads the driver eventually to a kernel
    panic/app segfault from access to an illegal SRQ index while flushing the
    SRQ completions during connection teardown.
    
    Fixes: 11a27e2121a5 ("iw_cxgb4: complete the cached SRQ buffers")
    Link: https://lore.kernel.org/r/20200511185608.5202-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 058c3f45b760669f76f46897447d96ba49116d8d
Author: Maor Gottlieb <maorg@mellanox.com>
Date:   Thu May 7 09:29:42 2020 +0300

    RDMA/core: Fix double put of resource
    
    [ Upstream commit 50bbe3d34fea74b7c0fabe553c40c2f4a48bb9c3 ]
    
    Do not decrease the reference count of resource tracker object twice in
    the error flow of res_get_common_doit.
    
    Fixes: c5dfe0ea6ffa ("RDMA/nldev: Add resource tracker doit callback")
    Link: https://lore.kernel.org/r/20200507062942.98305-1-leon@kernel.org
    Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a5968f266c7b9dc13917ac573af8d7b7da4023c
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Thu May 7 10:10:12 2020 +0300

    IB/core: Fix potential NULL pointer dereference in pkey cache
    
    [ Upstream commit 1901b91f99821955eac2bd48fe25ee983385dc00 ]
    
    The IB core pkey cache is populated by procedure ib_cache_update().
    Initially, the pkey cache pointer is NULL. ib_cache_update allocates a
    buffer and populates it with the device's pkeys, via repeated calls to
    procedure ib_query_pkey().
    
    If there is a failure in populating the pkey buffer via ib_query_pkey(),
    ib_cache_update does not replace the old pkey buffer cache with the
    updated one -- it leaves the old cache as is.
    
    Since initially the pkey buffer cache is NULL, when calling
    ib_cache_update the first time, a failure in ib_query_pkey() will cause
    the pkey buffer cache pointer to remain NULL.
    
    In this situation, any calls subsequent to ib_get_cached_pkey(),
    ib_find_cached_pkey(), or ib_find_cached_pkey_exact() will try to
    dereference the NULL pkey cache pointer, causing a kernel panic.
    
    Fix this by checking the ib_cache_update() return value.
    
    Fixes: 8faea9fd4a39 ("RDMA/cache: Move the cache per-port data into the main ib_port_data")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Link: https://lore.kernel.org/r/20200507071012.100594-1-leon@kernel.org
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2e97acbb3c7e58b3ae5ef7f3566a9654ded2fad
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Sun Apr 26 10:59:21 2020 +0300

    IB/mlx4: Test return value of calls to ib_get_cached_pkey
    
    [ Upstream commit 6693ca95bd4330a0ad7326967e1f9bcedd6b0800 ]
    
    In the mlx4_ib_post_send() flow, some functions call ib_get_cached_pkey()
    without checking its return value. If ib_get_cached_pkey() returns an
    error code, these functions should return failure.
    
    Fixes: 1ffeb2eb8be9 ("IB/mlx4: SR-IOV IB context objects and proxy/tunnel SQP support")
    Fixes: 225c7b1feef1 ("IB/mlx4: Add a driver Mellanox ConnectX InfiniBand adapters")
    Fixes: e622f2f4ad21 ("IB: split struct ib_send_wr")
    Link: https://lore.kernel.org/r/20200426075921.130074-1-leon@kernel.org
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee8677efc90e375f6878488a44d9cbaf08ee6080
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Sun Apr 26 00:35:45 2020 +0100

    RDMA/rxe: Always return ERR_PTR from rxe_create_mmap_info()
    
    [ Upstream commit bb43c8e382e5da0ee253e3105d4099820ff4d922 ]
    
    The commit below modified rxe_create_mmap_info() to return ERR_PTR's but
    didn't update the callers to handle them. Modify rxe_create_mmap_info() to
    only return ERR_PTR and fix all error checking after
    rxe_create_mmap_info() is called.
    
    Ensure that all other exit paths properly set the error return.
    
    Fixes: ff23dfa13457 ("IB: Pass only ib_udata in function prototypes")
    Link: https://lore.kernel.org/r/20200425233545.17210-1-sudipm.mukherjee@gmail.com
    Link: https://lore.kernel.org/r/20200511183742.GB225608@mwanda
    Cc: stable@vger.kernel.org [5.4+]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ead224c4111ec7c17fa8547373cb603a35b0022c
Author: Phil Sutter <phil@nwl.cc>
Date:   Mon May 11 15:31:41 2020 +0200

    netfilter: nft_set_rbtree: Add missing expired checks
    
    [ Upstream commit 340eaff651160234bdbce07ef34b92a8e45cd540 ]
    
    Expired intervals would still match and be dumped to user space until
    garbage collection wiped them out. Make sure they stop matching and
    disappear (from users' perspective) as soon as they expire.
    
    Fixes: 8d8540c4f5e03 ("netfilter: nft_set_rbtree: add timeout support")
    Signed-off-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4577165bfac8a592885a751234737cb078038c48
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon May 11 11:54:31 2020 +0200

    netfilter: flowtable: set NF_FLOW_TEARDOWN flag on entry expiration
    
    [ Upstream commit 9ed81c8e0deb7bd2aa0d69371e4a0f9a7b31205d ]
    
    If the flow timer expires, the gc sets on the NF_FLOW_TEARDOWN flag.
    Otherwise, the flowtable software path might race to refresh the
    timeout, leaving the state machine in inconsistent state.
    
    Fixes: c29f74e0df7a ("netfilter: nf_flow_table: hardware offload support")
    Reported-by: Paul Blakey <paulb@mellanox.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4c4a85ad4e5075e31349d23f2098834b0235c1c
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Sun May 10 11:35:10 2020 -0400

    tracing: Wait for preempt irq delay thread to execute
    
    [ Upstream commit 8b1fac2e73e84ef0d6391051880a8e1d7044c847 ]
    
    A bug report was posted that running the preempt irq delay module on a slow
    machine, and removing it quickly could lead to the thread created by the
    modlue to execute after the module is removed, and this could cause the
    kernel to crash. The fix for this was to call kthread_stop() after creating
    the thread to make sure it finishes before allowing the module to be
    removed.
    
    Now this caused the opposite problem on fast machines. What now happens is
    the kthread_stop() can cause the kthread never to execute and the test never
    to run. To fix this, add a completion and wait for the kthread to execute,
    then wait for it to end.
    
    This issue caused the ftracetest selftests to fail on the preemptirq tests.
    
    Link: https://lore.kernel.org/r/20200510114210.15d9e4af@oasis.local.home
    
    Cc: stable@vger.kernel.org
    Fixes: d16a8c31077e ("tracing: Wait for preempt irq delay thread to finish")
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 251394ab5f630c852429b7b2c0a1cd528d892460
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sat May 9 14:07:13 2020 -0400

    SUNRPC: Signalled ASYNC tasks need to exit
    
    [ Upstream commit ce99aa62e1eb793e259d023c7f6ccb7c4879917b ]
    
    Ensure that signalled ASYNC rpc_tasks exit immediately instead of
    spinning until a timeout (or forever).
    
    To avoid checking for the signal flag on every scheduler iteration,
    the check is instead introduced in the client's finite state
    machine.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Fixes: ae67bd3821bb ("SUNRPC: Fix up task signalling")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f6422b355ffbf413ca89701317d531b6a7c6ac2
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Mon May 11 10:02:48 2020 -0400

    nfs: fix NULL deference in nfs4_get_valid_delegation
    
    [ Upstream commit 29fe839976266bc7c55b927360a1daae57477723 ]
    
    We add the new state to the nfsi->open_states list, making it
    potentially visible to other threads, before we've finished initializing
    it.
    
    That wasn't a problem when all the readers were also taking the i_lock
    (as we do here), but since we switched to RCU, there's now a possibility
    that a reader could see the partially initialized state.
    
    Symptoms observed were a crash when another thread called
    nfs4_get_valid_delegation() on a NULL inode, resulting in an oops like:
    
            BUG: unable to handle page fault for address: ffffffffffffffb0 ...
            RIP: 0010:nfs4_get_valid_delegation+0x6/0x30 [nfsv4] ...
            Call Trace:
             nfs4_open_prepare+0x80/0x1c0 [nfsv4]
             __rpc_execute+0x75/0x390 [sunrpc]
             ? finish_task_switch+0x75/0x260
             rpc_async_schedule+0x29/0x40 [sunrpc]
             process_one_work+0x1ad/0x370
             worker_thread+0x30/0x390
             ? create_worker+0x1a0/0x1a0
             kthread+0x10c/0x130
             ? kthread_park+0x80/0x80
             ret_from_fork+0x22/0x30
    
    Fixes: 9ae075fdd190 "NFSv4: Convert open state lookup to use RCU"
    Reviewed-by: Seiichi Ikarashi <s.ikarashi@fujitsu.com>
    Tested-by: Daisuke Matsuda <matsuda-daisuke@fujitsu.com>
    Tested-by: Masayoshi Mizuma <m.mizuma@jp.fujitsu.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Cc: stable@vger.kernel.org # v4.20+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d11f15a55a2c91fb7086c97e8a64cf6ec310b49
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu May 7 16:51:09 2020 +0100

    drm/i915: Mark concurrent submissions with a weak-dependency
    
    [ Upstream commit a9d094dcf7845af85f82adcad9f793e51e4d14c8 ]
    
    We recorded the dependencies for WAIT_FOR_SUBMIT in order that we could
    correctly perform priority inheritance from the parallel branches to the
    common trunk. However, for the purpose of timeslicing and reset
    handling, the dependency is weak -- as we the pair of requests are
    allowed to run in parallel and not in strict succession.
    
    The real significance though is that this allows us to rearrange
    groups of WAIT_FOR_SUBMIT linked requests along the single engine, and
    so can resolve user level inter-batch scheduling dependencies from user
    semaphores.
    
    Fixes: c81471f5e95c ("drm/i915: Copy across scheduler behaviour flags across submit fences")
    Testcase: igt/gem_exec_fence/submit
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: <stable@vger.kernel.org> # v5.6+
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200507155109.8892-1-chris@chris-wilson.co.uk
    (cherry picked from commit 6b6cd2ebd8d071e55998e32b648bb8081f7f02bb)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e62d09d51cf74d103b67cf871e680b182e78b80
Author: Florian Westphal <fw@strlen.de>
Date:   Sun May 10 14:28:07 2020 +0200

    netfilter: conntrack: fix infinite loop on rmmod
    
    [ Upstream commit 54ab49fde95605a1077f759ce454d94e84b5ca45 ]
    
    'rmmod nf_conntrack' can hang forever, because the netns exit
    gets stuck in nf_conntrack_cleanup_net_list():
    
    i_see_dead_people:
     busy = 0;
     list_for_each_entry(net, net_exit_list, exit_list) {
      nf_ct_iterate_cleanup(kill_all, net, 0, 0);
      if (atomic_read(&net->ct.count) != 0)
       busy = 1;
     }
     if (busy) {
      schedule();
      goto i_see_dead_people;
     }
    
    When nf_ct_iterate_cleanup iterates the conntrack table, all nf_conn
    structures can be found twice:
    once for the original tuple and once for the conntracks reply tuple.
    
    get_next_corpse() only calls the iterator when the entry is
    in original direction -- the idea was to avoid unneeded invocations
    of the iterator callback.
    
    When support for clashing entries was added, the assumption that
    all nf_conn objects are added twice, once in original, once for reply
    tuple no longer holds -- NF_CLASH_BIT entries are only added in
    the non-clashing reply direction.
    
    Thus, if at least one NF_CLASH entry is in the list then
    nf_conntrack_cleanup_net_list() always skips it completely.
    
    During normal netns destruction, this causes a hang of several
    seconds, until the gc worker removes the entry (NF_CLASH entries
    always have a 1 second timeout).
    
    But in the rmmod case, the gc worker has already been stopped, so
    ct.count never becomes 0.
    
    We can fix this in two ways:
    
    1. Add a second test for CLASH_BIT and call iterator for those
       entries as well, or:
    2. Skip the original tuple direction and use the reply tuple.
    
    2) is simpler, so do that.
    
    Fixes: 6a757c07e51f80ac ("netfilter: conntrack: allow insertion of clashing entries")
    Reported-by: Chen Yi <yiche@redhat.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6416760a05434097d1fda90ae5530c9cbc2cd4f
Author: Christoph Hellwig <hch@lst.de>
Date:   Sun May 10 09:54:41 2020 +0200

    arm64: fix the flush_icache_range arguments in machine_kexec
    
    [ Upstream commit d51c214541c5154dda3037289ee895ea3ded5ebd ]
    
    The second argument is the end "pointer", not the length.
    
    Fixes: d28f6df1305a ("arm64/kexec: Add core kexec support")
    Cc: <stable@vger.kernel.org> # 4.8.x-
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a538b476eb35220aa4e8fc03debe2aed04b7c69c
Author: Zhenyu Wang <zhenyuw@linux.intel.com>
Date:   Wed May 6 17:59:18 2020 +0800

    drm/i915/gvt: Fix kernel oops for 3-level ppgtt guest
    
    [ Upstream commit 72a7a9925e2beea09b109dffb3384c9bf920d9da ]
    
    As i915 won't allocate extra PDP for current default PML4 table,
    so for 3-level ppgtt guest, we would hit kernel pointer access
    failure on extra PDP pointers. So this trys to bypass that now.
    It won't impact real shadow PPGTT setup, so guest context still
    works.
    
    This is verified on 4.15 guest kernel with i915.enable_ppgtt=1
    to force on old aliasing ppgtt behavior.
    
    Fixes: 4f15665ccbba ("drm/i915: Add ppgtt to GVT GEM context")
    Reviewed-by: Xiong Zhang <xiong.y.zhang@intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20200506095918.124913-1-zhenyuw@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d373d1fde4d589e9743c8498bc5e9899c048b8c9
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Apr 30 23:30:48 2020 +0200

    netfilter: conntrack: avoid gcc-10 zero-length-bounds warning
    
    [ Upstream commit 2c407aca64977ede9b9f35158e919773cae2082f ]
    
    gcc-10 warns around a suspicious access to an empty struct member:
    
    net/netfilter/nf_conntrack_core.c: In function '__nf_conntrack_alloc':
    net/netfilter/nf_conntrack_core.c:1522:9: warning: array subscript 0 is outside the bounds of an interior zero-length array 'u8[0]' {aka 'unsigned char[0]'} [-Wzero-length-bounds]
     1522 |  memset(&ct->__nfct_init_offset[0], 0,
          |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
    In file included from net/netfilter/nf_conntrack_core.c:37:
    include/net/netfilter/nf_conntrack.h:90:5: note: while referencing '__nfct_init_offset'
       90 |  u8 __nfct_init_offset[0];
          |     ^~~~~~~~~~~~~~~~~~
    
    The code is correct but a bit unusual. Rework it slightly in a way that
    does not trigger the warning, using an empty struct instead of an empty
    array. There are probably more elegant ways to do this, but this is the
    smallest change.
    
    Fixes: c41884ce0562 ("netfilter: conntrack: avoid zeroing timer")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f349557d4e0445e8752e09401451cf728ece6767
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat May 9 13:13:33 2020 -0700

    hwmon: (drivetemp) Fix SCT support if SCT data tables are not supported
    
    [ Upstream commit bcb543cc3d4034da3f3fd8bc4296a26dfeadf47d ]
    
    If SCT is supported but SCT data tables are not, the driver unnecessarily
    tries to fall back to SMART. Use SCT without data tables instead in this
    situation.
    
    Fixes: 5b46903d8bf3 ("hwmon: Driver for disk and solid state drives with temperature sensors")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9262bb40618b3697194513e19d51a5a248f5e371
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Thu Apr 16 06:06:08 2020 -0400

    NFSv4: Fix fscache cookie aux_data to ensure change_attr is included
    
    [ Upstream commit 50eaa652b54df1e2b48dc398d9e6114c9ed080eb ]
    
    Commit 402cb8dda949 ("fscache: Attach the index key and aux data to
    the cookie") added the aux_data and aux_data_len to parameters to
    fscache_acquire_cookie(), and updated the callers in the NFS client.
    In the process it modified the aux_data to include the change_attr,
    but missed adding change_attr to a couple places where aux_data was
    used.  Specifically, when opening a file and the change_attr is not
    added, the following attempt to lookup an object will fail inside
    cachefiles_check_object_xattr() = -116 due to
    nfs_fscache_inode_check_aux() failing memcmp on auxdata and returning
    FSCACHE_CHECKAUX_OBSOLETE.
    
    Fix this by adding nfs_fscache_update_auxdata() to set the auxdata
    from all relevant fields in the inode, including the change_attr.
    
    Fixes: 402cb8dda949 ("fscache: Attach the index key and aux data to the cookie")
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dfd76303a057a5aa41982561dea5e4d00249a74
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Wed Apr 15 16:14:42 2020 -0400

    NFS: Fix fscache super_cookie allocation
    
    [ Upstream commit 15751612734ca0c419ac43ce986c9badcb5e2829 ]
    
    Commit f2aedb713c28 ("NFS: Add fs_context support.") reworked
    NFS mount code paths for fs_context support which included
    super_block initialization.  In the process there was an extra
    return left in the code and so we never call
    nfs_fscache_get_super_cookie even if 'fsc' is given on as mount
    option.  In addition, there is an extra check inside
    nfs_fscache_get_super_cookie for the NFS_OPTION_FSCACHE which
    is unnecessary since the only caller nfs_get_cache_cookie
    checks this flag.
    
    Fixes: f2aedb713c28 ("NFS: Add fs_context support.")
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b189454123ce96d9345d122f109b069ef91c7f0
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Wed Apr 15 16:14:41 2020 -0400

    NFS: Fix fscache super_cookie index_key from changing after umount
    
    [ Upstream commit d9bfced1fbcb35b28d8fbed4e785d2807055ed2b ]
    
    Commit 402cb8dda949 ("fscache: Attach the index key and aux data to
    the cookie") added the index_key and index_key_len parameters to
    fscache_acquire_cookie(), and updated the callers in the NFS client.
    One of the callers was inside nfs_fscache_get_super_cookie()
    and was changed to use the full struct nfs_fscache_key as the
    index_key.  However, a couple members of this structure contain
    pointers and thus will change each time the same NFS share is
    remounted.  Since index_key is used for fscache_cookie->key_hash
    and this subsequently is used to compare cookies, the effectiveness
    of fscache with NFS is reduced to the point at which a umount
    occurs.   Any subsequent remount of the same share will cause a
    unique NFS super_block index_key and key_hash to be generated for
    the same data, rendering any prior fscache data unable to be
    found.  A simple reproducer demonstrates the problem.
    
    1. Mount share with 'fsc', create a file, drop page cache
    systemctl start cachefilesd
    mount -o vers=3,fsc 127.0.0.1:/export /mnt
    dd if=/dev/zero of=/mnt/file1.bin bs=4096 count=1
    echo 3 > /proc/sys/vm/drop_caches
    
    2. Read file into page cache and fscache, then unmount
    dd if=/mnt/file1.bin of=/dev/null bs=4096 count=1
    umount /mnt
    
    3. Remount and re-read which should come from fscache
    mount -o vers=3,fsc 127.0.0.1:/export /mnt
    echo 3 > /proc/sys/vm/drop_caches
    dd if=/mnt/file1.bin of=/dev/null bs=4096 count=1
    
    4. Check for READ ops in mountstats - there should be none
    grep READ: /proc/self/mountstats
    
    Looking at the history and the removed function, nfs_super_get_key(),
    we should only use nfs_fscache_key.key plus any uniquifier, for
    the fscache index_key.
    
    Fixes: 402cb8dda949 ("fscache: Attach the index key and aux data to the cookie")
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 551ef63c8fc07565a934b2881e8548ffd9bf7167
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue May 5 09:42:26 2020 -0400

    drm/amdgpu: force fbdev into vram
    
    [ Upstream commit a6aacb2b26e85aa619cf0c6f98d0ca77314cd2a1 ]
    
    We set the fb smem pointer to the offset into the BAR, so keep
    the fbdev bo in vram.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=207581
    Fixes: 6c8d74caa2fa33 ("drm/amdgpu: Enable scatter gather display support")
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec28a9a4a27982572fdc30d493bdd9515a42ab40
Author: Christian Brauner <christian.brauner@ubuntu.com>
Date:   Thu May 7 12:32:14 2020 +0200

    fork: prevent accidental access to clone3 features
    
    [ Upstream commit 3f2c788a13143620c5471ac96ac4f033fc9ac3f3 ]
    
    Jan reported an issue where an interaction between sign-extending clone's
    flag argument on ppc64le and the new CLONE_INTO_CGROUP feature causes
    clone() to consistently fail with EBADF.
    
    The whole story is a little longer. The legacy clone() syscall is odd in a
    bunch of ways and here two things interact. First, legacy clone's flag
    argument is word-size dependent, i.e. it's an unsigned long whereas most
    system calls with flag arguments use int or unsigned int. Second, legacy
    clone() ignores unknown and deprecated flags. The two of them taken
    together means that users on 64bit systems can pass garbage for the upper
    32bit of the clone() syscall since forever and things would just work fine.
    Just try this on a 64bit kernel prior to v5.7-rc1 where this will succeed
    and on v5.7-rc1 where this will fail with EBADF:
    
    int main(int argc, char *argv[])
    {
            pid_t pid;
    
            /* Note that legacy clone() has different argument ordering on
             * different architectures so this won't work everywhere.
             *
             * Only set the upper 32 bits.
             */
            pid = syscall(__NR_clone, 0xffffffff00000000 | SIGCHLD,
                          NULL, NULL, NULL, NULL);
            if (pid < 0)
                    exit(EXIT_FAILURE);
            if (pid == 0)
                    exit(EXIT_SUCCESS);
            if (wait(NULL) != pid)
                    exit(EXIT_FAILURE);
    
            exit(EXIT_SUCCESS);
    }
    
    Since legacy clone() couldn't be extended this was not a problem so far and
    nobody really noticed or cared since nothing in the kernel ever bothered to
    look at the upper 32 bits.
    
    But once we introduced clone3() and expanded the flag argument in struct
    clone_args to 64 bit we opened this can of worms. With the first flag-based
    extension to clone3() making use of the upper 32 bits of the flag argument
    we've effectively made it possible for the legacy clone() syscall to reach
    clone3() only flags. The sign extension scenario is just the odd
    corner-case that we needed to figure this out.
    
    The reason we just realized this now and not already when we introduced
    CLONE_CLEAR_SIGHAND was that CLONE_INTO_CGROUP assumes that a valid cgroup
    file descriptor has been given. So the sign extension (or the user
    accidently passing garbage for the upper 32 bits) caused the
    CLONE_INTO_CGROUP bit to be raised and the kernel to error out when it
    didn't find a valid cgroup file descriptor.
    
    Let's fix this by always capping the upper 32 bits for all codepaths that
    are not aware of clone3() features. This ensures that we can't reach
    clone3() only features by accident via legacy clone as with the sign
    extension case and also that legacy clone() works exactly like before, i.e.
    ignoring any unknown flags.  This solution risks no regressions and is also
    pretty clean.
    
    Fixes: 7f192e3cd316 ("fork: add clone3")
    Fixes: ef2c41cf38a7 ("clone3: allow spawning processes into cgroups")
    Reported-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Andreas Schwab <schwab@linux-m68k.org>
    Cc: Florian Weimer <fw@deneb.enyo.de>
    Cc: libc-alpha@sourceware.org
    Cc: stable@vger.kernel.org # 5.3+
    Link: https://sourceware.org/pipermail/libc-alpha/2020-May/113596.html
    Link: https://lore.kernel.org/r/20200507103214.77218-1-christian.brauner@ubuntu.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 790557697fd5f8075024ae4c421eb41b36a94d81
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Tue Apr 28 01:15:41 2020 +0200

    gfs2: More gfs2_find_jhead fixes
    
    [ Upstream commit aa83da7f47b26c9587bade6c4bc4736ffa308f0a ]
    
    It turns out that when extending an existing bio, gfs2_find_jhead fails to
    check if the block number is consecutive, which leads to incorrect reads for
    fragmented journals.
    
    In addition, limit the maximum bio size to an arbitrary value of 2 megabytes:
    since commit 07173c3ec276 ("block: enable multipage bvecs"), if we just keep
    adding pages until bio_add_page fails, bios will grow much larger than useful,
    which pins more memory than necessary with barely any additional performance
    gains.
    
    Fixes: f4686c26ecc3 ("gfs2: read journal in large chunks")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32107a1681dfba581222f7850af6a15ee8d3c39f
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Fri May 8 09:22:27 2020 +0300

    mmc: block: Fix request completion in the CQE timeout path
    
    [ Upstream commit c077dc5e0620508a29497dac63a2822324ece52a ]
    
    First, it should be noted that the CQE timeout (60 seconds) is substantial
    so a CQE request that times out is really stuck, and the race between
    timeout and completion is extremely unlikely. Nevertheless this patch
    fixes an issue with it.
    
    Commit ad73d6feadbd7b ("mmc: complete requests from ->timeout")
    preserved the existing functionality, to complete the request.
    However that had only been necessary because the block layer
    timeout handler had been marking the request to prevent it from being
    completed normally. That restriction was removed at the same time, the
    result being that a request that has gone will have been completed anyway.
    That is, the completion was unnecessary.
    
    At the time, the unnecessary completion was harmless because the block
    layer would ignore it, although that changed in kernel v5.0.
    
    Note for stable, this patch will not apply cleanly without patch "mmc:
    core: Fix recursive locking issue in CQE recovery path"
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: ad73d6feadbd7b ("mmc: complete requests from ->timeout")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200508062227.23144-1-adrian.hunter@intel.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b7b9d3faac9047082f5137340f5c4d2d8d59dcc
Author: Sarthak Garg <sartgarg@codeaurora.org>
Date:   Thu May 7 21:45:33 2020 +0530

    mmc: core: Fix recursive locking issue in CQE recovery path
    
    [ Upstream commit 39a22f73744d5baee30b5f134ae2e30b668b66ed ]
    
    Consider the following stack trace
    
    -001|raw_spin_lock_irqsave
    -002|mmc_blk_cqe_complete_rq
    -003|__blk_mq_complete_request(inline)
    -003|blk_mq_complete_request(rq)
    -004|mmc_cqe_timed_out(inline)
    -004|mmc_mq_timed_out
    
    mmc_mq_timed_out acquires the queue_lock for the first
    time. The mmc_blk_cqe_complete_rq function also tries to acquire
    the same queue lock resulting in recursive locking where the task
    is spinning for the same lock which it has already acquired leading
    to watchdog bark.
    
    Fix this issue with the lock only for the required critical section.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 1e8e55b67030 ("mmc: block: Add CQE support")
    Suggested-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Sarthak Garg <sartgarg@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/1588868135-31783-1-git-send-email-vbadigan@codeaurora.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abc14656136abceb1d0c73c64ba14c070c529d7d
Author: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
Date:   Wed May 6 20:04:02 2020 +0530

    mmc: core: Check request type before completing the request
    
    [ Upstream commit e6bfb1bf00852b55f4c771f47ae67004c04d3c87 ]
    
    In the request completion path with CQE, request type is being checked
    after the request is getting completed. This is resulting in returning
    the wrong request type and leading to the IO hang issue.
    
    ASYNC request type is getting returned for DCMD type requests.
    Because of this mismatch, mq->cqe_busy flag is never getting cleared
    and the driver is not invoking blk_mq_hw_run_queue. So requests are not
    getting dispatched to the LLD from the block layer.
    
    All these eventually leading to IO hang issues.
    So, get the request type before completing the request.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 1e8e55b67030 ("mmc: block: Add CQE support")
    Signed-off-by: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/1588775643-18037-2-git-send-email-vbadigan@codeaurora.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fef31a6a0f22deb2b119204e4dd429bdcc19ecf4
Author: Ben Chuang <ben.chuang@genesyslogic.com.tw>
Date:   Mon May 4 14:39:57 2020 +0800

    mmc: sdhci-pci-gli: Fix can not access GL9750 after reboot from Windows 10
    
    [ Upstream commit b56ff195c317ad28c05d354aeecbb9995b8e08c1 ]
    
    Need to clear some bits in a vendor-defined register after reboot from
    Windows 10.
    
    Fixes: e51df6ce668a ("mmc: host: sdhci-pci: Add Genesys Logic GL975x support")
    Reported-by: Grzegorz Kowal <custos.mentis@gmail.com>
    Signed-off-by: Ben Chuang <ben.chuang@genesyslogic.com.tw>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Tested-by: Grzegorz Kowal <custos.mentis@gmail.com>
    Link: https://lore.kernel.org/r/20200504063957.6638-1-benchuanggli@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84b1fd515b3faff3c2836f15061554efd419f870
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Apr 26 22:23:55 2020 +0200

    mmc: alcor: Fix a resource leak in the error path for ->probe()
    
    [ Upstream commit 7c277dd2b0ff6a16f1732a66c2c52a29f067163e ]
    
    If devm_request_threaded_irq() fails, the allocated struct mmc_host needs
    to be freed via calling mmc_free_host(), so let's do that.
    
    Fixes: c5413ad815a6 ("mmc: add new Alcor Micro Cardreader SD/MMC driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20200426202355.43055-1-christophe.jaillet@wanadoo.fr
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 743eebb48b08854551c0a75e3650dca4c91a1c71
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Apr 20 13:53:55 2020 +0100

    drm/i915/gem: Remove object_is_locked assertion from unpin_from_display_plane
    
    [ Upstream commit 47bf7b7a7151bad568b9523d14477a353a450066 ]
    
    Since moving the obj->vma.list to a spin_lock, and the vm->bound_list to
    its vm->mutex, along with tracking shrinkable status under its own
    spinlock, we no long require the object to be locked by the caller.
    
    This is fortunate as it appears we can be called with the lock along an
    error path in flipping:
    
    <4> [139.942851] WARN_ON(debug_locks && !lock_is_held(&(&((obj)->base.resv)->lock.base)->dep_map))
    <4> [139.943242] WARNING: CPU: 0 PID: 1203 at drivers/gpu/drm/i915/gem/i915_gem_domain.c:405 i915_gem_object_unpin_from_display_plane+0x70/0x130 [i915]
    <4> [139.943263] Modules linked in: snd_hda_intel i915 vgem snd_hda_codec_realtek snd_hda_codec_generic coretemp snd_intel_dspcfg snd_hda_codec snd_hwdep snd_hda_core r8169 lpc_ich snd_pcm realtek prime_numbers [last unloaded: i915]
    <4> [139.943347] CPU: 0 PID: 1203 Comm: kms_flip Tainted: G     U            5.6.0-gd0fda5c2cf3f1-drmtip_474+ #1
    <4> [139.943363] Hardware name:  /D510MO, BIOS MOPNV10J.86A.0311.2010.0802.2346 08/02/2010
    <4> [139.943589] RIP: 0010:i915_gem_object_unpin_from_display_plane+0x70/0x130 [i915]
    <4> [139.943589] Code: 85 28 01 00 00 be ff ff ff ff 48 8d 78 60 e8 d7 9b f0 e2 85 c0 75 b9 48 c7 c6 50 b9 38 c0 48 c7 c7 e9 48 3c c0 e8 20 d4 e9 e2 <0f> 0b eb a2 48 c7 c1 08 bb 38 c0 ba 0a 01 00 00 48 c7 c6 88 a3 35
    <4> [139.943589] RSP: 0018:ffffb774c0603b48 EFLAGS: 00010282
    <4> [139.943589] RAX: 0000000000000000 RBX: ffff9a142fa36e80 RCX: 0000000000000006
    <4> [139.943589] RDX: 000000000000160d RSI: ffff9a142c1a88f8 RDI: ffffffffa434a64d
    <4> [139.943589] RBP: ffff9a1410a513c0 R08: ffff9a142c1a88f8 R09: 0000000000000000
    <4> [139.943589] R10: 0000000000000000 R11: 0000000000000000 R12: ffff9a1436ee94b8
    <4> [139.943589] R13: 0000000000000001 R14: 00000000ffffffff R15: ffff9a1410960000
    <4> [139.943589] FS:  00007fc73a744e40(0000) GS:ffff9a143da00000(0000) knlGS:0000000000000000
    <4> [139.943589] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    <4> [139.943589] CR2: 00007fc73997e098 CR3: 000000002f5fe000 CR4: 00000000000006f0
    <4> [139.943589] Call Trace:
    <4> [139.943589]  intel_pin_and_fence_fb_obj+0x1c9/0x1f0 [i915]
    <4> [139.943589]  intel_plane_pin_fb+0x3f/0xd0 [i915]
    <4> [139.943589]  intel_prepare_plane_fb+0x13b/0x5c0 [i915]
    <4> [139.943589]  drm_atomic_helper_prepare_planes+0x85/0x110
    <4> [139.943589]  intel_atomic_commit+0xda/0x390 [i915]
    <4> [139.943589]  drm_atomic_helper_page_flip+0x9c/0xd0
    <4> [139.943589]  ? drm_event_reserve_init+0x46/0x60
    <4> [139.943589]  drm_mode_page_flip_ioctl+0x587/0x5d0
    
    This completes the symmetry lost in commit 8b1c78e06e61 ("drm/i915: Avoid
    calling i915_gem_object_unbind holding object lock").
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/1743
    Fixes: 8b1c78e06e61 ("drm/i915: Avoid calling i915_gem_object_unbind holding object lock")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Matthew Auld <matthew.auld@intel.com>
    Cc: Andi Shyti <andi.shyti@intel.com>
    Cc: <stable@vger.kernel.org> # v5.6+
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200420125356.26614-1-chris@chris-wilson.co.uk
    (cherry picked from commit a95f3ac21d64d62c746f836598d1467d5837fa28)
    (cherry picked from commit 2208b85fa1766ee4821a9435d548578b67090531)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca0438c0904ded0998ec557cf466db99b98cdcf1
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Mon May 4 10:21:44 2020 -0700

    bpf, sockmap: bpf_tcp_ingress needs to subtract bytes from sg.size
    
    [ Upstream commit 81aabbb9fb7b4b1efd073b62f0505d3adad442f3 ]
    
    In bpf_tcp_ingress we used apply_bytes to subtract bytes from sg.size
    which is used to track total bytes in a message. But this is not
    correct because apply_bytes is itself modified in the main loop doing
    the mem_charge.
    
    Then at the end of this we have sg.size incorrectly set and out of
    sync with actual sk values. Then we can get a splat if we try to
    cork the data later and again try to redirect the msg to ingress. To
    fix instead of trying to track msg.size do the easy thing and include
    it as part of the sk_msg_xfer logic so that when the msg is moved the
    sg.size is always correct.
    
    To reproduce the below users will need ingress + cork and hit an
    error path that will then try to 'free' the skmsg.
    
    [  173.699981] BUG: KASAN: null-ptr-deref in sk_msg_free_elem+0xdd/0x120
    [  173.699987] Read of size 8 at addr 0000000000000008 by task test_sockmap/5317
    
    [  173.700000] CPU: 2 PID: 5317 Comm: test_sockmap Tainted: G          I       5.7.0-rc1+ #43
    [  173.700005] Hardware name: Dell Inc. Precision 5820 Tower/002KVM, BIOS 1.9.2 01/24/2019
    [  173.700009] Call Trace:
    [  173.700021]  dump_stack+0x8e/0xcb
    [  173.700029]  ? sk_msg_free_elem+0xdd/0x120
    [  173.700034]  ? sk_msg_free_elem+0xdd/0x120
    [  173.700042]  __kasan_report+0x102/0x15f
    [  173.700052]  ? sk_msg_free_elem+0xdd/0x120
    [  173.700060]  kasan_report+0x32/0x50
    [  173.700070]  sk_msg_free_elem+0xdd/0x120
    [  173.700080]  __sk_msg_free+0x87/0x150
    [  173.700094]  tcp_bpf_send_verdict+0x179/0x4f0
    [  173.700109]  tcp_bpf_sendpage+0x3ce/0x5d0
    
    Fixes: 604326b41a6fb ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/158861290407.14306.5327773422227552482.stgit@john-Precision-5820-Tower
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0261c30ddd7843ff58a825de03c0cb6c49716de
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Mon May 4 10:21:23 2020 -0700

    bpf, sockmap: msg_pop_data can incorrecty set an sge length
    
    [ Upstream commit 3e104c23816220919ea1b3fd93fabe363c67c484 ]
    
    When sk_msg_pop() is called where the pop operation is working on
    the end of a sge element and there is no additional trailing data
    and there _is_ data in front of pop, like the following case,
    
       |____________a_____________|__pop__|
    
    We have out of order operations where we incorrectly set the pop
    variable so that instead of zero'ing pop we incorrectly leave it
    untouched, effectively. This can cause later logic to shift the
    buffers around believing it should pop extra space. The result is
    we have 'popped' more data then we expected potentially breaking
    program logic.
    
    It took us a while to hit this case because typically we pop headers
    which seem to rarely be at the end of a scatterlist elements but
    we can't rely on this.
    
    Fixes: 7246d8ed4dcce ("bpf: helper to pop data from messages")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/158861288359.14306.7654891716919968144.stgit@john-Precision-5820-Tower
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2837d9475d97d5c1434012c26b692525c34f1fd
Author: Sultan Alsawaf <sultan@kerneltoast.com>
Date:   Thu Apr 30 14:46:54 2020 -0700

    drm/i915: Don't enable WaIncreaseLatencyIPCEnabled when IPC is disabled
    
    [ Upstream commit 421abe200321a2c907ede1a6208c558284ba0b75 ]
    
    In commit 5a7d202b1574, a logical AND was erroneously changed to an OR,
    causing WaIncreaseLatencyIPCEnabled to be enabled unconditionally for
    kabylake and coffeelake, even when IPC is disabled. Fix the logic so
    that WaIncreaseLatencyIPCEnabled is only used when IPC is enabled.
    
    Fixes: 5a7d202b1574 ("drm/i915: Drop WaIncreaseLatencyIPCEnabled/1140 for cnl")
    Cc: stable@vger.kernel.org # 5.3.x+
    Signed-off-by: Sultan Alsawaf <sultan@kerneltoast.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200430214654.51314-1-sultan@kerneltoast.com
    (cherry picked from commit 690d22dafa88b82453516387b475664047a6bd14)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9379433f732d0f686ba0eff58d5e6acdcf615f5
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri May 1 13:22:49 2020 +0100

    drm/i915/gt: Make timeslicing an explicit engine property
    
    [ Upstream commit fe5a708267911d55cce42910d93e303924b088fd ]
    
    In order to allow userspace to rely on timeslicing to reorder their
    batches, we must support preemption of those user batches. Declare
    timeslicing as an explicit property that is a combination of having the
    kernel support and HW support.
    
    Suggested-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Fixes: 8ee36e048c98 ("drm/i915/execlists: Minimalistic timeslicing")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200501122249.12417-1-chris@chris-wilson.co.uk
    (cherry picked from commit a211da9c771bf97395a3ced83a3aa383372b13a7)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe61dadcff2afcf9f45c0ac2d2af51c60e728e3c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 22 12:22:11 2020 +0300

    i40iw: Fix error handling in i40iw_manage_arp_cache()
    
    [ Upstream commit 37e31d2d26a4124506c24e95434e9baf3405a23a ]
    
    The i40iw_arp_table() function can return -EOVERFLOW if
    i40iw_alloc_resource() fails so we can't just test for "== -1".
    
    Fixes: 4e9042e647ff ("i40iw: add hw and utils files")
    Link: https://lore.kernel.org/r/20200422092211.GA195357@mwanda
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 303683fe39182d002117ed34eb2c00d3630ec5d5
Author: David Howells <dhowells@redhat.com>
Date:   Mon May 4 16:12:55 2020 +0100

    cachefiles: Fix corruption of the return value in cachefiles_read_or_alloc_pages()
    
    [ Upstream commit c5f9d9db83d9f84d2b4aae5a1b29d9b582ccff2f ]
    
    The patch which changed cachefiles from calling ->bmap() to using the
    bmap() wrapper overwrote the running return value with the result of
    calling bmap().  This causes an assertion failure elsewhere in the code.
    
    Fix this by using ret2 rather than ret to hold the return value.
    
    The oops looks like:
    
            kernel BUG at fs/nfs/fscache.c:468!
            ...
            RIP: 0010:__nfs_readpages_from_fscache+0x18b/0x190 [nfs]
            ...
            Call Trace:
             nfs_readpages+0xbf/0x1c0 [nfs]
             ? __alloc_pages_nodemask+0x16c/0x320
             read_pages+0x67/0x1a0
             __do_page_cache_readahead+0x1cf/0x1f0
             ondemand_readahead+0x172/0x2b0
             page_cache_async_readahead+0xaa/0xe0
             generic_file_buffered_read+0x852/0xd50
             ? mem_cgroup_commit_charge+0x6e/0x140
             ? nfs4_have_delegation+0x19/0x30 [nfsv4]
             generic_file_read_iter+0x100/0x140
             ? nfs_revalidate_mapping+0x176/0x2b0 [nfs]
             nfs_file_read+0x6d/0xc0 [nfs]
             new_sync_read+0x11a/0x1c0
             __vfs_read+0x29/0x40
             vfs_read+0x8e/0x140
             ksys_read+0x61/0xd0
             __x64_sys_read+0x1a/0x20
             do_syscall_64+0x60/0x1e0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
            RIP: 0033:0x7f5d148267e0
    
    Fixes: 10d83e11a582 ("cachefiles: drop direct usage of ->bmap method.")
    Reported-by: David Wysochanski <dwysocha@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-by: David Wysochanski <dwysocha@redhat.com>
    cc: Carlos Maiolino <cmaiolino@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a1133502839ec8a0507920786938934f9d5b011
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun May 3 13:57:18 2020 +0900

    ALSA: firewire-lib: fix 'function sizeof not defined' error of tracepoints format
    
    [ Upstream commit 1034872123a06b759aba772b1c99612ccb8e632a ]
    
    The snd-firewire-lib.ko has 'amdtp-packet' event of tracepoints. Current
    printk format for the event includes 'sizeof(u8)' macro expected to be
    extended in compilation time. However, this is not done. As a result,
    perf tools cannot parse the event for printing:
    
    $ mount -l -t debugfs
    debugfs on /sys/kernel/debug type debugfs (rw,nosuid,nodev,noexec,relatime)
    $ cat /sys/kernel/debug/tracing/events/snd_firewire_lib/amdtp_packet/format
    ...
    print fmt: "%02u %04u %04x %04x %02d %03u %02u %03u %02u %01u %02u %s",
      REC->second, REC->cycle, REC->src, REC->dest, REC->channel,
      REC->payload_quadlets, REC->data_blocks, REC->data_block_counter,
      REC->packet_index, REC->irq, REC->index,
      __print_array(__get_dynamic_array(cip_header),
                    __get_dynamic_array_len(cip_header),
                    sizeof(u8))
    
    $ sudo perf record -e snd_firewire_lib:amdtp_packet
      [snd_firewire_lib:amdtp_packet] function sizeof not defined
      Error: expected type 5 but read 0
    
    This commit fixes it by obsoleting the macro with actual size.
    
    Cc: <stable@vger.kernel.org>
    Fixes: bde2bbdb307a ("ALSA: firewire-lib: use dynamic array for CIP header of tracing events")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200503045718.86337-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ad3bcd4e0aa55a5cf3c059ee31b09efb90ac788
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Apr 30 08:18:51 2020 +0000

    bpf: Fix error return code in map_lookup_and_delete_elem()
    
    [ Upstream commit 7f645462ca01d01abb94d75e6768c8b3ed3a188b ]
    
    Fix to return negative error code -EFAULT from the copy_to_user() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: bd513cd08f10 ("bpf: add MAP_LOOKUP_AND_DELETE_ELEM syscall")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20200430081851.166996-1-weiyongjun1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31eaf61c714f03a239ac3b193bf47513d201e13e
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Mar 25 21:16:03 2020 +0100

    drm/tegra: Fix SMMU support on Tegra124 and Tegra210
    
    [ Upstream commit 501be6c1c72417eab05e7413671a38ea991a8ebc ]
    
    When testing whether or not to enable the use of the SMMU, consult the
    supported DMA mask rather than the actually configured DMA mask, since
    the latter might already have been restricted.
    
    Fixes: 2d9384ff9177 ("drm/tegra: Relax IOMMU usage criteria on old Tegra")
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e190ea4dc49672e0610b89217006a3cd97f38282
Author: Grace Kao <grace.kao@intel.com>
Date:   Fri Apr 17 12:11:54 2020 +0800

    pinctrl: cherryview: Add missing spinlock usage in chv_gpio_irq_handler
    
    [ Upstream commit 69388e15f5078c961b9e5319e22baea4c57deff1 ]
    
    According to Braswell NDA Specification Update (#557593),
    concurrent read accesses may result in returning 0xffffffff and write
    instructions may be dropped. We have an established format for the
    commit references, i.e.
    cdca06e4e859 ("pinctrl: baytrail: Add missing spinlock usage in
    byt_gpio_irq_handler")
    
    Fixes: 0bd50d719b00 ("pinctrl: cherryview: prevent concurrent access to GPIO controllers")
    Signed-off-by: Grace Kao <grace.kao@intel.com>
    Reported-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6437ef52940a3b15c12979b488031c296514badf
Author: Ansuel Smith <ansuelsmth@gmail.com>
Date:   Tue Apr 14 02:37:26 2020 +0200

    pinctrl: qcom: fix wrong write in update_dual_edge
    
    [ Upstream commit 90bcb0c3ca0809d1ed358bfbf838df4b3d4e58e0 ]
    
    Fix a typo in the readl/writel accessor conversion where val is used
    instead of pol changing the behavior of the original code.
    
    Cc: stable@vger.kernel.org
    Fixes: 6c73698904aa pinctrl: qcom: Introduce readl/writel accessors
    Signed-off-by: Ansuel Smith <ansuelsmth@gmail.com>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20200414003726.25347-1-ansuelsmth@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25c3ed57488748f44345401e13cb09c9ec8be9c9
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Dec 11 19:32:54 2019 +0200

    pinctrl: baytrail: Enable pin configuration setting for GPIO chip
    
    [ Upstream commit ccd025eaddaeb99e982029446197c544252108e2 ]
    
    It appears that pin configuration for GPIO chip hasn't been enabled yet
    due to absence of ->set_config() callback.
    
    Enable it here for Intel Baytrail.
    
    Fixes: c501d0b149de ("pinctrl: baytrail: Add pin control operations")
    Depends-on: 2956b5d94a76 ("pinctrl / gpio: Introduce .set_config() callback for GPIO chips")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cfbd7d638a290153d396038b0b6991634f4e3f2
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Apr 1 11:53:00 2020 +0300

    pinctrl: sunrisepoint: Fix PAD lock register offset for SPT-H
    
    [ Upstream commit 6b7275c87717652daace4c0b8131eb184c7d7516 ]
    
    It appears that SPT-H variant has different offset for PAD locking registers.
    Fix it here.
    
    Fixes: 551fa5801ef1 ("pinctrl: intel: sunrisepoint: Add Intel Sunrisepoint-H support")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 388843a10ef5f7553f51ab58f70fbb954b000b8a
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sat May 9 10:44:41 2020 +0200

    ACPI: EC: PM: Avoid premature returns from acpi_s2idle_wake()
    
    [ Upstream commit 7b301750f7f8f6503e11f1af4a03832525f58c66 ]
    
    If the EC GPE status is not set after checking all of the other GPEs,
    acpi_s2idle_wake() returns 'false', to indicate that the SCI event
    that has just triggered is not a system wakeup one, but it does that
    without canceling the pending wakeup and re-arming the SCI for system
    wakeup which is a mistake, because it may cause s2idle_loop() to busy
    spin until the next valid wakeup event.  [If that happens, the first
    spurious wakeup is still pending after acpi_s2idle_wake() has
    returned, so s2idle_enter() does nothing, acpi_s2idle_wake()
    is called again and it sees that the SCI has triggered, but no GPEs
    are active, so 'false' is returned again, and so on.]
    
    Fix that by moving all of the GPE checking logic from
    acpi_s2idle_wake() to acpi_ec_dispatch_gpe() and making the
    latter return 'true' only if a non-EC GPE has triggered and
    'false' otherwise, which will cause acpi_s2idle_wake() to
    cancel the pending SCI wakeup and re-arm the SCI for system
    wakeup regardless of the EC GPE status.
    
    This also addresses a lockup observed on an Elitegroup EF20EA laptop
    after attempting to wake it up from suspend-to-idle by a key press.
    
    Fixes: d5406284ff80 ("ACPI: PM: s2idle: Refine active GPEs check")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=207603
    Reported-by: Todd Brandt <todd.e.brandt@linux.intel.com>
    Fixes: fdde0ff8590b ("ACPI: PM: s2idle: Prevent spurious SCIs from waking up the system")
    Link: https://lore.kernel.org/linux-acpi/CAB4CAwdqo7=MvyG_PE+PGVfeA17AHF5i5JucgaKqqMX6mjArbQ@mail.gmail.com/
    Reported-by: Chris Chiu <chiu@endlessm.com>
    Tested-by: Chris Chiu <chiu@endlessm.com>
    Cc: 5.4+ <stable@vger.kernel.org> # 5.4+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3986575351ec708907f2c1517767d68ca9365a9
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Mon May 4 09:09:17 2020 -0400

    IB/hfi1: Fix another case where pq is left on waitlist
    
    [ Upstream commit fa8dac3968635dec8518a13ac78d662f2aa88e4d ]
    
    The commit noted below fixed a case where a pq is left on the sdma wait
    list.
    
    It however missed another case.
    
    user_sdma_send_pkts() has two calls from hfi1_user_sdma_process_request().
    
    If the first one fails as indicated by -EBUSY, the pq will be placed on
    the waitlist as by design.
    
    If the second call then succeeds, the pq is still on the waitlist setting
    up a race with the interrupt handler if a subsequent request uses a
    different SDMA engine
    
    Fix by deleting the first call.
    
    The use of pcount and the intent to send a short burst of packets followed
    by the larger balance of packets was never correctly implemented, because
    the two calls always send pcount packets no matter what.  A subsequent
    patch will correct that issue.
    
    Fixes: 9a293d1e21a6 ("IB/hfi1: Ensure pq is not left on waitlist")
    Link: https://lore.kernel.org/r/20200504130917.175613.43231.stgit@awfm-01.aw.intel.com
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bcc9a1846f335edcdf84d3a29671638d4622690
Author: Ben Chuang <ben.chuang@genesyslogic.com.tw>
Date:   Mon Apr 27 18:30:48 2020 +0800

    mmc: sdhci-pci-gli: Fix no irq handler from suspend
    
    [ Upstream commit 282ede76e47048eebc8ce5324b412890f0ec0a69 ]
    
    The kernel prints a message similar to
    "[   28.881959] do_IRQ: 5.36 No irq handler for vector"
    when GL975x resumes from suspend. Implement a resume callback to fix this.
    
    Fixes: 31e43f31890c ("mmc: sdhci-pci-gli: Enable MSI interrupt for GL975x")
    Co-developed-by: Renius Chen <renius.chen@genesyslogic.com.tw>
    Signed-off-by: Renius Chen <renius.chen@genesyslogic.com.tw>
    Tested-by: Dave Flogeras <dflogeras2@gmail.com>
    Signed-off-by: Ben Chuang <ben.chuang@genesyslogic.com.tw>
    Tested-by: Vineeth Pillai <vineethrp@gmail.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20200427103048.20785-1-benchuanggli@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Samuel Zou <zou_wei@huawei.com>
    [Samuel Zou: Make sdhci_pci_gli_resume() static]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0525fe0d148ab63deb296d37f3be34a77053a8a8
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Apr 20 19:42:04 2020 +0200

    gfs2: Another gfs2_walk_metadata fix
    
    [ Upstream commit 566a2ab3c9005f62e784bd39022d58d34ef4365c ]
    
    Make sure we don't walk past the end of the metadata in gfs2_walk_metadata: the
    inode holds fewer pointers than indirect blocks.
    
    Slightly clean up gfs2_iomap_get.
    
    Fixes: a27a0c9b6a20 ("gfs2: gfs2_walk_metadata fix")
    Cc: stable@vger.kernel.org # v5.3+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81b5ed02ddc7b5794e3cba7d91334cbc9591758d
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sun May 3 23:24:47 2020 +0800

    ALSA: hda/realtek - Fix S3 pop noise on Dell Wyse
    
    [ Upstream commit 52e4e36807aeac1cdd07b14e509c8a64101e1a09 ]
    
    Commit 317d9313925c ("ALSA: hda/realtek - Set default power save node to
    0") makes the ALC225 have pop noise on S3 resume and cold boot.
    
    The previous fix enable power save node universally for ALC225, however
    it makes some ALC225 systems unable to produce any sound.
    
    So let's only enable power save node for the affected Dell Wyse
    platform.
    
    Fixes: 317d9313925c ("ALSA: hda/realtek - Set default power save node to 0")
    BugLink: https://bugs.launchpad.net/bugs/1866357
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20200503152449.22761-2-kai.heng.feng@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f24b697a728e34b858a444385aed93b6ef5fe744
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed May 13 17:50:48 2020 -0700

    ipc/util.c: sysvipc_find_ipc() incorrectly updates position index
    
    [ Upstream commit 5e698222c70257d13ae0816720dde57c56f81e15 ]
    
    Commit 89163f93c6f9 ("ipc/util.c: sysvipc_find_ipc() should increase
    position index") is causing this bug (seen on 5.6.8):
    
       # ipcs -q
    
       ------ Message Queues --------
       key        msqid      owner      perms      used-bytes   messages
    
       # ipcmk -Q
       Message queue id: 0
       # ipcs -q
    
       ------ Message Queues --------
       key        msqid      owner      perms      used-bytes   messages
       0x82db8127 0          root       644        0            0
    
       # ipcmk -Q
       Message queue id: 1
       # ipcs -q
    
       ------ Message Queues --------
       key        msqid      owner      perms      used-bytes   messages
       0x82db8127 0          root       644        0            0
       0x76d1fb2a 1          root       644        0            0
    
       # ipcrm -q 0
       # ipcs -q
    
       ------ Message Queues --------
       key        msqid      owner      perms      used-bytes   messages
       0x76d1fb2a 1          root       644        0            0
       0x76d1fb2a 1          root       644        0            0
    
       # ipcmk -Q
       Message queue id: 2
       # ipcrm -q 2
       # ipcs -q
    
       ------ Message Queues --------
       key        msqid      owner      perms      used-bytes   messages
       0x76d1fb2a 1          root       644        0            0
       0x76d1fb2a 1          root       644        0            0
    
       # ipcmk -Q
       Message queue id: 3
       # ipcrm -q 1
       # ipcs -q
    
       ------ Message Queues --------
       key        msqid      owner      perms      used-bytes   messages
       0x7c982867 3          root       644        0            0
       0x7c982867 3          root       644        0            0
       0x7c982867 3          root       644        0            0
       0x7c982867 3          root       644        0            0
    
    Whenever an IPC item with a low id is deleted, the items with higher ids
    are duplicated, as if filling a hole.
    
    new_pos should jump through hole of unused ids, pos can be updated
    inside "for" cycle.
    
    Fixes: 89163f93c6f9 ("ipc/util.c: sysvipc_find_ipc() should increase position index")
    Reported-by: Andreas Schwab <schwab@suse.de>
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Waiman Long <longman@redhat.com>
    Cc: NeilBrown <neilb@suse.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Oberparleiter <oberpar@linux.ibm.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/4921fe9b-9385-a2b4-1dc4-1099be6d2e39@virtuozzo.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6982667819cae713e3bf5d2ca8f82c948b0051a2
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Fri May 1 17:09:37 2020 +0300

    io_uring: check non-sync defer_list carefully
    
    [ Upstream commit 4ee3631451c9a62e6b6bc7ee51fb9a5b34e33509 ]
    
    io_req_defer() do double-checked locking. Use proper helpers for that,
    i.e. list_empty_careful().
    
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5e2b6fa86ea59d30391ebc82a1181e013b3c4a2
Author: Xiaoguang Wang <xiaoguang.wang@linux.alibaba.com>
Date:   Fri May 1 08:52:56 2020 +0800

    io_uring: use cond_resched() in io_ring_ctx_wait_and_kill()
    
    [ Upstream commit 3fd44c86711f71156b586c22b0495c58f69358bb ]
    
    While working on to make io_uring sqpoll mode support syscalls that need
    struct files_struct, I got cpu soft lockup in io_ring_ctx_wait_and_kill(),
    
        while (ctx->sqo_thread && !wq_has_sleeper(&ctx->sqo_wait))
            cpu_relax();
    
    above loop never has an chance to exit, it's because preempt isn't enabled
    in the kernel, and the context calling io_ring_ctx_wait_and_kill() and
    io_sq_thread() run in the same cpu, if io_sq_thread calls a cond_resched()
    yield cpu and another context enters above loop, then io_sq_thread() will
    always in runqueue and never exit.
    
    Use cond_resched() can fix this issue.
    
     Reported-by: syzbot+66243bb7126c410cefe6@syzkaller.appspotmail.com
    Signed-off-by: Xiaoguang Wang <xiaoguang.wang@linux.alibaba.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c32f62729c871455489f828c3b4275de80c6eb5
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Thu Apr 30 07:57:46 2020 -0700

    fibmap: Warn and return an error in case of block > INT_MAX
    
    [ Upstream commit b75dfde1212991b24b220c3995101c60a7b8ae74 ]
    
    We better warn the fibmap user and not return a truncated and therefore
    an incorrect block map address if the bmap() returned block address
    is greater than INT_MAX (since user supplied integer pointer).
    
    It's better to pr_warn() all user of ioctl_fibmap() and return a proper
    error code rather than silently letting a FS corruption happen if the
    user tries to fiddle around with the returned block map address.
    
    We fix this by returning an error code of -ERANGE and returning 0 as the
    block mapping address in case if it is > INT_MAX.
    
    Now iomap_bmap() could be called from either of these two paths.
    Either when a user is calling an ioctl_fibmap() interface to get
    the block mapping address or by some filesystem via use of bmap()
    internal kernel API.
    bmap() kernel API is well equipped with handling of u64 addresses.
    
    WARN condition in iomap_bmap_actor() was mainly added to warn all
    the fibmap users. But now that we have directly added this warning
    for all fibmap users and also made sure to return 0 as block map address
    in case if addr > INT_MAX.
    So we can now remove this logic from iomap_bmap_actor().
    
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fe92563fb658fb7573ac632a3385cf251c15fe4
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Apr 29 12:34:36 2020 +0300

    drm/qxl: lost qxl_bo_kunmap_atomic_page in qxl_image_init_helper()
    
    [ Upstream commit 5b5703dbafae74adfbe298a56a81694172caf5e6 ]
    
    v2: removed TODO reminder
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/a4e0ae09-a73c-1c62-04ef-3f990d41bea9@virtuozzo.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33db420075ce863a3b7b6375cbde16924c680e9a
Author: Sung Lee <sung.lee@amd.com>
Date:   Wed Apr 22 18:07:57 2020 -0400

    drm/amd/display: Update downspread percent to match spreadsheet for DCN2.1
    
    [ Upstream commit 668a6741f809f2d15d125cfe2b39661e8f1655ea ]
    
    [WHY]
    The downspread percentage was copied over from a previous version
    of the display_mode_lib spreadsheet. This value has been updated,
    and the previous value is too high to allow for such modes as
    4K120hz. The new value is sufficient for such modes.
    
    [HOW]
    Update the value in dcn21_resource to match the spreadsheet.
    
    Signed-off-by: Sung Lee <sung.lee@amd.com>
    Reviewed-by: Yongqiang Sun <yongqiang.sun@amd.com>
    Acked-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e1eba44aa9548ddfc6e8d8557bc48dec768ddf5
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Wed Apr 22 18:07:56 2020 -0400

    drm/amd/display: Defer cursor update around VUPDATE for all ASIC
    
    [ Upstream commit fdfd2a858590d318cfee483bd1c73e00f77533af ]
    
    [Why]
    Fixes the following scenario:
    
    - Flip has been prepared sometime during the frame, update pending
    - Cursor update happens right when VUPDATE would happen
    - OPTC lock acquired, VUPDATE is blocked until next frame
    - Flip is delayed potentially infinitely
    
    With the igt@kms_cursor_legacy cursor-vs-flip-legacy test we can
    observe nearly *13* frames of delay for some flips on Navi.
    
    [How]
    Apply the Raven workaround generically. When close enough to VUPDATE
    block cursor updates from occurring from the dc_stream_set_cursor_*
    helpers.
    
    This could perhaps be a little smarter by checking if there were
    pending updates or flips earlier in the frame on the HUBP side before
    applying the delay, but this should be fine for now.
    
    This fixes the kms_cursor_legacy test.
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Aric Cyr <Aric.Cyr@amd.com>
    Acked-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4644592867243b5045ccb64c868f4fca98ff294
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Wed Apr 22 18:07:52 2020 -0400

    drm/amd/display: check if REFCLK_CNTL register is present
    
    [ Upstream commit 3159d41db3a04330c31ece32f8b29752fc114848 ]
    
    Check before programming the register since it isn't present on
    all IPs using this code.
    
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Reviewed-by: Eric Bernstein <Eric.Bernstein@amd.com>
    Acked-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3a419bc086714d77af34f08eaa3de679fa34fb4
Author: Tiecheng Zhou <Tiecheng.Zhou@amd.com>
Date:   Sun Apr 26 19:03:17 2020 +0800

    drm/amd/powerplay: avoid using pm_en before it is initialized revised
    
    [ Upstream commit 690ae30be163d5262feae01335b2a6f30569e5aa ]
    
    hwmgr->pm_en is initialized at hwmgr_hw_init.
    
    during amdgpu_device_init, there is amdgpu_asic_reset that calls to
    soc15_asic_reset (for V320 usecase, Vega10 asic), in which:
    1) soc15_asic_reset_method calls to pp_get_asic_baco_capability (pm_en)
    2) soc15_asic_baco_reset calls to pp_set_asic_baco_state (pm_en)
    
    pm_en is used in the above two cases while it has not yet been initialized
    
    So avoid using pm_en in the above two functions for V320 passthrough.
    
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Tiecheng Zhou <Tiecheng.Zhou@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 191ec5e94776208717d7cf2480d00a6ace444357
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Tue Apr 28 15:38:36 2020 +0300

    ALSA: hda/hdmi: fix race in monitor detection during probe
    
    [ Upstream commit ca76282b6faffc83601c25bd2a95f635c03503ef ]
    
    A race exists between build_pcms() and build_controls() phases of codec
    setup. Build_pcms() sets up notifier for jack events. If a monitor event
    is received before build_controls() is run, the initial jack state is
    lost and never reported via mixer controls.
    
    The problem can be hit at least with SOF as the controller driver. SOF
    calls snd_hda_codec_build_controls() in its workqueue-based probe and
    this can be delayed enough to hit the race condition.
    
    Fix the issue by invalidating the per-pin ELD information when
    build_controls() is called. The existing call to hdmi_present_sense()
    will update the ELD contents. This ensures initial monitor state is
    correctly reflected via mixer controls.
    
    BugLink: https://github.com/thesofproject/linux/issues/1687
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200428123836.24512-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7aad813bd1ac064069f887c16570f3433124932
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Apr 10 20:26:29 2020 +0100

    cpufreq: intel_pstate: Only mention the BIOS disabling turbo mode once
    
    [ Upstream commit 8c539776ac83c0857395e1ccc9c6b516521a2d32 ]
    
    Make a note of the first time we discover the turbo mode has been
    disabled by the BIOS, as otherwise we complain every time we try to
    update the mode.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 317f2af0a70f6873c28ab2b1545faa3bd6d06f9e
Author: Xiao Yang <yangx.jy@cn.fujitsu.com>
Date:   Tue Apr 7 14:34:19 2020 +0800

    selftests/ftrace: Check the first record for kprobe_args_type.tc
    
    [ Upstream commit f0c0d0cf590f71b2213b29a7ded2cde3d0a1a0ba ]
    
    It is possible to get multiple records from trace during test and then more
    than 4 arguments are assigned to ARGS.  This situation results in the failure
    of kprobe_args_type.tc.  For example:
    -----------------------------------------------------------
    grep testprobe trace
       ftracetest-5902  [001] d... 111195.682227: testprobe: (_do_fork+0x0/0x460) arg1=334823024 arg2=334823024 arg3=0x13f4fe70 arg4=7
         pmlogger-5949  [000] d... 111195.709898: testprobe: (_do_fork+0x0/0x460) arg1=345308784 arg2=345308784 arg3=0x1494fe70 arg4=7
     grep testprobe trace
     sed -e 's/.* arg1=\(.*\) arg2=\(.*\) arg3=\(.*\) arg4=\(.*\)/\1 \2 \3 \4/'
    ARGS='334823024 334823024 0x13f4fe70 7
    345308784 345308784 0x1494fe70 7'
    -----------------------------------------------------------
    
    We don't care which process calls do_fork so just check the first record to
    fix the issue.
    
    Signed-off-by: Xiao Yang <yangx.jy@cn.fujitsu.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91e07d58b384e228e730e89c074333bd12aa8d54
Author: Xiaodong Yan <Xiaodong.Yan@amd.com>
Date:   Thu Apr 9 17:37:40 2020 +0800

    drm/amd/display: blank dp stream before re-train the link
    
    [ Upstream commit 718a5569b6fa6e1f49f1ae76a3c18acb4ddb74f1 ]
    
    [Why]
    When link loss happened, monitor can not light up if only re-train the
    link.
    
    [How]
    Blank all the DP streams on this link before re-train the link, and then
    unblank the stream
    
    Signed-off-by: Xiaodong Yan <Xiaodong.Yan@amd.com>
    Reviewed-by: Tony Cheng <Tony.Cheng@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11fc1816ccd2c8503736f9ec82641df1f0ef3fd1
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sun Apr 19 18:49:09 2020 +0200

    dmaengine: mmp_tdma: Reset channel error on release
    
    [ Upstream commit 0c89446379218698189a47871336cb30286a7197 ]
    
    When a channel configuration fails, the status of the channel is set to
    DEV_ERROR so that an attempt to submit it fails. However, this status
    sticks until the heat end of the universe, making it impossible to
    recover from the error.
    
    Let's reset it when the channel is released so that further use of the
    channel with correct configuration is not impacted.
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Link: https://lore.kernel.org/r/20200419164912.670973-5-lkundrak@v3.sk
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 428177a035fb6d6ce8a0797ee5bf404d8e067be2
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sun Apr 19 18:49:06 2020 +0200

    dmaengine: mmp_tdma: Do not ignore slave config validation errors
    
    [ Upstream commit 363c32701c7fdc8265a84b21a6a4f45d1202b9ca ]
    
    With an invalid dma_slave_config set previously,
    mmp_tdma_prep_dma_cyclic() would detect an error whilst configuring the
    channel, but proceed happily on:
    
      [  120.756530] mmp-tdma d42a0800.adma: mmp_tdma: unknown burst size.
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Link: https://lore.kernel.org/r/20200419164912.670973-2-lkundrak@v3.sk
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18f8e10d07f75525679460fa97c97b6e5b78386c
Author: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
Date:   Thu Apr 16 11:53:35 2020 +0530

    dmaengine: pch_dma.c: Avoid data race between probe and irq handler
    
    [ Upstream commit 2e45676a4d33af47259fa186ea039122ce263ba9 ]
    
    pd->dma.dev is read in irq handler pd_irq().
    However, it is set to pdev->dev after request_irq().
    Therefore, set pd->dma.dev to pdev->dev before request_irq() to
    avoid data race between pch_dma_probe() and pd_irq().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
    Link: https://lore.kernel.org/r/20200416062335.29223-1-madhuparnabhowmik10@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ab8dcf83e8f39d88a415488e8f50f9d6ed51c6e
Author: Ilie Halip <ilie.halip@gmail.com>
Date:   Wed Apr 15 17:29:58 2020 +0300

    riscv: fix vdso build with lld
    
    [ Upstream commit 3c1918c8f54166598195d938564072664a8275b1 ]
    
    When building with the LLVM linker this error occurrs:
        LD      arch/riscv/kernel/vdso/vdso-syms.o
      ld.lld: error: no input files
    
    This happens because the lld treats -R as an alias to -rpath, as opposed
    to ld where -R means --just-symbols.
    
    Use the long option name for compatibility between the two.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/805
    Reported-by: Dmitry Golovin <dima@golovin.in>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Ilie Halip <ilie.halip@gmail.com>
    Reviewed-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 856c9beb034798e007f7516100e113bb457b6d3f
Author: Sebastian von Ohr <vonohr@smaract.com>
Date:   Tue Mar 3 14:05:18 2020 +0100

    dmaengine: xilinx_dma: Add missing check for empty list
    
    [ Upstream commit b269426011bcfd97b7c3101abfe1a99147b6f40b ]
    
    The DMA transfer might finish just after checking the state with
    dma_cookie_status, but before the lock is acquired. Not checking
    for an empty list in xilinx_dma_tx_status may result in reading
    random data or data corruption when desc is written to. This can
    be reliably triggered by using dma_sync_wait to wait for DMA
    completion.
    
    Signed-off-by: Sebastian von Ohr <vonohr@smaract.com>
    Tested-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Link: https://lore.kernel.org/r/20200303130518.333-1-vonohr@smaract.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 977a37ae3971c8497e35132f71783daf940dedb0
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed May 13 08:51:51 2020 -0700

    net: broadcom: Select BROADCOM_PHY for BCMGENET
    
    [ Upstream commit 99addbe31f5524494f4d7077bcb3f6fa64c5d160 ]
    
    The GENET controller on the Raspberry Pi 4 (2711) is typically
    interfaced with an external Broadcom PHY via a RGMII electrical
    interface. To make sure that delays are properly configured at the PHY
    side, ensure that we the dedicated Broadcom PHY driver
    (CONFIG_BROADCOM_PHY) is enabled for this to happen.
    
    Fixes: 402482a6a78e ("net: bcmgenet: Clear ID_MODE_DIS in EXT_RGMII_OOB_CTRL when not needed")
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a565037f2903ad2d3eca7711f8a2b003356b0d8
Author: Vincent Minet <v.minet@criteo.com>
Date:   Fri May 8 00:14:22 2020 +0200

    umh: fix memory leak on execve failure
    
    [ Upstream commit db803036ada7d61d096783726f9771b3fc540370 ]
    
    If a UMH process created by fork_usermode_blob() fails to execute,
    a pair of struct file allocated by umh_pipe_setup() will leak.
    
    Under normal conditions, the caller (like bpfilter) needs to manage the
    lifetime of the UMH and its two pipes. But when fork_usermode_blob()
    fails, the caller doesn't really have a way to know what needs to be
    done. It seems better to do the cleanup ourselves in this case.
    
    Fixes: 449325b52b7a ("umh: introduce fork_usermode_blob() helper")
    Signed-off-by: Vincent Minet <v.minet@criteo.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f291f373d9c78a04e3dc43f3dce92f5aad9f67
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Fri May 8 08:24:14 2020 +0200

    r8169: re-establish support for RTL8401 chip version
    
    [ Upstream commit 1f8492df081bd66255764f3ce82ba1b2c37def49 ]
    
    r8169 never had native support for the RTL8401, however it reportedly
    worked with the fallback to RTL8101e [0]. Therefore let's add this
    as an explicit assignment.
    
    [0] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=956868
    
    Fixes: b4cc2dcc9c7c ("r8169: remove default chip versions")
    Reported-by: Camaleón <noelamac@gmail.com>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4d1b1a1d85ebbb8c9bbf8baf60ff55acb33b177
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri May 8 07:27:35 2020 +0000

    nfp: abm: fix error return code in nfp_abm_vnic_alloc()
    
    [ Upstream commit 5099dea0a59f1c89525bb0ceac36689178a4c125 ]
    
    Fix to return negative error code -ENOMEM from the kzalloc() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 174ab544e3bc ("nfp: abm: add cls_u32 offload for simple band classification")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94e05d0837e4dae9a2ef5a2d8fba7c307ee017a3
Author: Kelly Littlepage <kelly@onechronos.com>
Date:   Fri May 8 19:58:46 2020 +0000

    net: tcp: fix rx timestamp behavior for tcp_recvmsg
    
    [ Upstream commit cc4de047b33be247f9c8150d3e496743a49642b8 ]
    
    The stated intent of the original commit is to is to "return the timestamp
    corresponding to the highest sequence number data returned." The current
    implementation returns the timestamp for the last byte of the last fully
    read skb, which is not necessarily the last byte in the recv buffer. This
    patch converts behavior to the original definition, and to the behavior of
    the previous draft versions of commit 98aaa913b4ed ("tcp: Extend
    SOF_TIMESTAMPING_RX_SOFTWARE to TCP recvmsg") which also match this
    behavior.
    
    Fixes: 98aaa913b4ed ("tcp: Extend SOF_TIMESTAMPING_RX_SOFTWARE to TCP recvmsg")
    Co-developed-by: Iris Liu <iris@onechronos.com>
    Signed-off-by: Iris Liu <iris@onechronos.com>
    Signed-off-by: Kelly Littlepage <kelly@onechronos.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2d928d5ee43f372618a9f98b0c73674717f2a2c
Author: Zefan Li <lizefan@huawei.com>
Date:   Sat May 9 11:32:10 2020 +0800

    netprio_cgroup: Fix unlimited memory leak of v2 cgroups
    
    [ Upstream commit 090e28b229af92dc5b40786ca673999d59e73056 ]
    
    If systemd is configured to use hybrid mode which enables the use of
    both cgroup v1 and v2, systemd will create new cgroup on both the default
    root (v2) and netprio_cgroup hierarchy (v1) for a new session and attach
    task to the two cgroups. If the task does some network thing then the v2
    cgroup can never be freed after the session exited.
    
    One of our machines ran into OOM due to this memory leak.
    
    In the scenario described above when sk_alloc() is called
    cgroup_sk_alloc() thought it's in v2 mode, so it stores
    the cgroup pointer in sk->sk_cgrp_data and increments
    the cgroup refcnt, but then sock_update_netprioidx()
    thought it's in v1 mode, so it stores netprioidx value
    in sk->sk_cgrp_data, so the cgroup refcnt will never be freed.
    
    Currently we do the mode switch when someone writes to the ifpriomap
    cgroup control file. The easiest fix is to also do the switch when
    a task is attached to a new cgroup.
    
    Fixes: bd1060a1d671 ("sock, cgroup: add sock->sk_cgroup")
    Reported-by: Yang Yingliang <yangyingliang@huawei.com>
    Tested-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Zefan Li <lizefan@huawei.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8dd69b74d2f34e552d6c5ebcfa84356b9293dba
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Fri May 8 19:28:34 2020 +0200

    net: ipv4: really enforce backoff for redirects
    
    [ Upstream commit 57644431a6c2faac5d754ebd35780cf43a531b1a ]
    
    In commit b406472b5ad7 ("net: ipv4: avoid mixed n_redirects and
    rate_tokens usage") I missed the fact that a 0 'rate_tokens' will
    bypass the backoff algorithm.
    
    Since rate_tokens is cleared after a redirect silence, and never
    incremented on redirects, if the host keeps receiving packets
    requiring redirect it will reply ignoring the backoff.
    
    Additionally, the 'rate_last' field will be updated with the
    cadence of the ingress packet requiring redirect. If that rate is
    high enough, that will prevent the host from generating any
    other kind of ICMP messages
    
    The check for a zero 'rate_tokens' value was likely a shortcut
    to avoid the more complex backoff algorithm after a redirect
    silence period. Address the issue checking for 'n_redirects'
    instead, which is incremented on successful redirect, and
    does not interfere with other ICMP replies.
    
    Fixes: b406472b5ad7 ("net: ipv4: avoid mixed n_redirects and rate_tokens usage")
    Reported-and-tested-by: Colin Walters <walters@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4140fec893c711dbf7329e8286690594d8e632a
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Sat May 9 16:45:44 2020 -0700

    net: dsa: loop: Add module soft dependency
    
    [ Upstream commit 3047211ca11bf77b3ecbce045c0aa544d934b945 ]
    
    There is a soft dependency against dsa_loop_bdinfo.ko which sets up the
    MDIO device registration, since there are no symbols referenced by
    dsa_loop.ko, there is no automatic loading of dsa_loop_bdinfo.ko which
    is needed.
    
    Fixes: 98cd1552ea27 ("net: dsa: Mock-up driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac59b7f6d6c5465134950862838ad2bb1adfaee4
Author: Luo bin <luobin9@huawei.com>
Date:   Sun May 10 19:01:08 2020 +0000

    hinic: fix a bug of ndo_stop
    
    [ Upstream commit e8a1b0efd632d1c9db7d4e93da66377c7b524862 ]
    
    if some function in ndo_stop interface returns failure because of
    hardware fault, must go on excuting rest steps rather than return
    failure directly, otherwise will cause memory leak.And bump the
    timeout for SET_FUNC_STATE to ensure that cmd won't return failure
    when hw is busy. Otherwise hw may stomp host memory if we free
    memory regardless of the return value of SET_FUNC_STATE.
    
    Fixes: 51ba902a16e6 ("net-next/hinic: Initialize hw interface")
    Signed-off-by: Luo bin <luobin9@huawei.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd6600061fb80b5cbcb88d8c311fd67f9bb68962
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri May 8 17:37:20 2020 +0300

    dpaa2-eth: prevent array underflow in update_cls_rule()
    
    [ Upstream commit 6d32a5119811d2e9b5caa284181944c6f1f192ed ]
    
    The "location" is controlled by the user via the ethtool_set_rxnfc()
    function.  This update_cls_rule() function checks for array overflows
    but it doesn't check if the value is negative.  I have changed the type
    to unsigned to prevent array underflows.
    
    Fixes: afb90dbb5f78 ("dpaa2-eth: Add ethtool support for flow classification")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10c27bd08fd4afa43be980fb58e69a279679b6a2
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu May 7 03:25:56 2020 -0400

    virtio_net: fix lockdep warning on 32 bit
    
    [ Upstream commit 01c3259818a11f3cc3cd767adbae6b45849c03c1 ]
    
    When we fill up a receive VQ, try_fill_recv currently tries to count
    kicks using a 64 bit stats counter. Turns out, on a 32 bit kernel that
    uses a seqcount. sequence counts are "lock" constructs where you need to
    make sure that writers are serialized.
    
    In turn, this means that we mustn't run two try_fill_recv concurrently.
    Which of course we don't. We do run try_fill_recv sometimes from a
    softirq napi context, and sometimes from a fully preemptible context,
    but the later always runs with napi disabled.
    
    However, when it comes to the seqcount, lockdep is trying to enforce the
    rule that the same lock isn't accessed from preemptible and softirq
    context - it doesn't know about napi being enabled/disabled. This causes
    a false-positive warning:
    
    WARNING: inconsistent lock state
    ...
    inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
    
    As a work around, shut down the warning by switching
    to u64_stats_update_begin_irqsave - that works by disabling
    interrupts on 32 bit only, is a NOP on 64 bit.
    
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cb084056baa097693a6e59f69f67d0428d5d7fc
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue May 12 06:54:30 2020 -0700

    tcp: fix SO_RCVLOWAT hangs with fat skbs
    
    [ Upstream commit 24adbc1676af4e134e709ddc7f34cf2adc2131e4 ]
    
    We autotune rcvbuf whenever SO_RCVLOWAT is set to account for 100%
    overhead in tcp_set_rcvlowat()
    
    This works well when skb->len/skb->truesize ratio is bigger than 0.5
    
    But if we receive packets with small MSS, we can end up in a situation
    where not enough bytes are available in the receive queue to satisfy
    RCVLOWAT setting.
    As our sk_rcvbuf limit is hit, we send zero windows in ACK packets,
    preventing remote peer from sending more data.
    
    Even autotuning does not help, because it only triggers at the time
    user process drains the queue. If no EPOLLIN is generated, this
    can not happen.
    
    Note poll() has a similar issue, after commit
    c7004482e8dc ("tcp: Respect SO_RCVLOWAT in tcp_poll().")
    
    Fixes: 03f45c883c6f ("tcp: avoid extra wakeups for SO_RCVLOWAT users")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19b4e28334bf17b73b8fbd42fc4e4d70d92fad17
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu May 14 13:58:13 2020 -0700

    tcp: fix error recovery in tcp_zerocopy_receive()
    
    [ Upstream commit e776af608f692a7a647455106295fa34469e7475 ]
    
    If user provides wrong virtual address in TCP_ZEROCOPY_RECEIVE
    operation we want to return -EINVAL error.
    
    But depending on zc->recv_skip_hint content, we might return
    -EIO error if the socket has SOCK_DONE set.
    
    Make sure to return -EINVAL in this case.
    
    BUG: KMSAN: uninit-value in tcp_zerocopy_receive net/ipv4/tcp.c:1833 [inline]
    BUG: KMSAN: uninit-value in do_tcp_getsockopt+0x4494/0x6320 net/ipv4/tcp.c:3685
    CPU: 1 PID: 625 Comm: syz-executor.0 Not tainted 5.7.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c9/0x220 lib/dump_stack.c:118
     kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:121
     __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:215
     tcp_zerocopy_receive net/ipv4/tcp.c:1833 [inline]
     do_tcp_getsockopt+0x4494/0x6320 net/ipv4/tcp.c:3685
     tcp_getsockopt+0xf8/0x1f0 net/ipv4/tcp.c:3728
     sock_common_getsockopt+0x13f/0x180 net/core/sock.c:3131
     __sys_getsockopt+0x533/0x7b0 net/socket.c:2177
     __do_sys_getsockopt net/socket.c:2192 [inline]
     __se_sys_getsockopt+0xe1/0x100 net/socket.c:2189
     __x64_sys_getsockopt+0x62/0x80 net/socket.c:2189
     do_syscall_64+0xb8/0x160 arch/x86/entry/common.c:297
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x45c829
    Code: 0d b7 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 db b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007f1deeb72c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000037
    RAX: ffffffffffffffda RBX: 00000000004e01e0 RCX: 000000000045c829
    RDX: 0000000000000023 RSI: 0000000000000006 RDI: 0000000000000009
    RBP: 000000000078bf00 R08: 0000000020000200 R09: 0000000000000000
    R10: 00000000200001c0 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 00000000000001d8 R14: 00000000004d3038 R15: 00007f1deeb736d4
    
    Local variable ----zc@do_tcp_getsockopt created at:
     do_tcp_getsockopt+0x1a74/0x6320 net/ipv4/tcp.c:3670
     do_tcp_getsockopt+0x1a74/0x6320 net/ipv4/tcp.c:3670
    
    Fixes: 05255b823a61 ("tcp: add TCP_ZEROCOPY_RECEIVE support for zerocopy receive")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f99c74486dcc20f66888613110cf0fd24bc17382
Author: Maciej Żenczykowski <maze@google.com>
Date:   Tue May 5 11:57:23 2020 -0700

    Revert "ipv6: add mtu lock check in __ip6_rt_update_pmtu"
    
    [ Upstream commit 09454fd0a4ce23cb3d8af65066c91a1bf27120dd ]
    
    This reverts commit 19bda36c4299ce3d7e5bce10bebe01764a655a6d:
    
    | ipv6: add mtu lock check in __ip6_rt_update_pmtu
    |
    | Prior to this patch, ipv6 didn't do mtu lock check in ip6_update_pmtu.
    | It leaded to that mtu lock doesn't really work when receiving the pkt
    | of ICMPV6_PKT_TOOBIG.
    |
    | This patch is to add mtu lock check in __ip6_rt_update_pmtu just as ipv4
    | did in __ip_rt_update_pmtu.
    
    The above reasoning is incorrect.  IPv6 *requires* icmp based pmtu to work.
    There's already a comment to this effect elsewhere in the kernel:
    
      $ git grep -p -B1 -A3 'RTAX_MTU lock'
      net/ipv6/route.c=4813=
    
      static int rt6_mtu_change_route(struct fib6_info *f6i, void *p_arg)
      ...
        /* In IPv6 pmtu discovery is not optional,
           so that RTAX_MTU lock cannot disable it.
           We still use this lock to block changes
           caused by addrconf/ndisc.
        */
    
    This reverts to the pre-4.9 behaviour.
    
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Cc: Xin Long <lucien.xin@gmail.com>
    Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Fixes: 19bda36c4299 ("ipv6: add mtu lock check in __ip6_rt_update_pmtu")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d315cf6cf0d2e4ddea61257acead37f7fddead95
Author: Guillaume Nault <gnault@redhat.com>
Date:   Thu May 14 12:15:39 2020 +0200

    pppoe: only process PADT targeted at local interfaces
    
    [ Upstream commit b8c158395119be62294da73646a3953c29ac974b ]
    
    We don't want to disconnect a session because of a stray PADT arriving
    while the interface is in promiscuous mode.
    Furthermore, multicast and broadcast packets make no sense here, so
    only PACKET_HOST is accepted.
    
    Reported-by: David Balažic <xerces9@gmail.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6d80f31e43a949c4053dbe247b53ecb73681369
Author: Vinod Koul <vkoul@kernel.org>
Date:   Thu May 14 11:58:36 2020 +0530

    net: stmmac: fix num_por initialization
    
    [ Upstream commit fd4a5177382230d39e0d95632d98103fb2938383 ]
    
    Driver missed initializing num_por which is one of the por values that
    driver configures to hardware. In order to get these values, add a new
    structure ethqos_emac_driver_data which holds por and num_por values
    and populate that in driver probe.
    
    Fixes: a7c30e62d4b8 ("net: stmmac: Add driver for Qualcomm ethqos")
    Reported-by: Rahul Ankushrao Kawadgave <rahulak@qti.qualcomm.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 077e50d95d3cec2bfb86d6ca8f58b56da4d88445
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Tue May 12 21:45:53 2020 +0200

    net: phy: fix aneg restart in phy_ethtool_set_eee
    
    [ Upstream commit 9de5d235b60a7cdfcdd5461e70c5663e713fde87 ]
    
    phy_restart_aneg() enables aneg in the PHY. That's not what we want
    if phydev->autoneg is disabled. In this case still update EEE
    advertisement register, but don't enable aneg and don't trigger an
    aneg restart.
    
    Fixes: f75abeb8338e ("net: phy: restart phy autonegotiation after EEE advertisment change")
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6379c382a97246df6653cf4bc58c16d5ec03f5a
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue May 12 14:43:14 2020 +0200

    netlabel: cope with NULL catmap
    
    [ Upstream commit eead1c2ea2509fd754c6da893a94f0e69e83ebe4 ]
    
    The cipso and calipso code can set the MLS_CAT attribute on
    successful parsing, even if the corresponding catmap has
    not been allocated, as per current configuration and external
    input.
    
    Later, selinux code tries to access the catmap if the MLS_CAT flag
    is present via netlbl_catmap_getlong(). That may cause null ptr
    dereference while processing incoming network traffic.
    
    Address the issue setting the MLS_CAT flag only if the catmap is
    really allocated. Additionally let netlbl_catmap_getlong() cope
    with NULL catmap.
    
    Reported-by: Matthew Sheets <matthew.sheets@gd-ms.com>
    Fixes: 4b8feff251da ("netlabel: fix the horribly broken catmap functions")
    Fixes: ceba1832b1b2 ("calipso: Set the calipso socket label to match the secattr.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5178eed232e534f831a4545f2af56085fcc8f95
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu May 7 12:19:03 2020 -0700

    net: fix a potential recursive NETDEV_FEAT_CHANGE
    
    [ Upstream commit dd912306ff008891c82cd9f63e8181e47a9cb2fb ]
    
    syzbot managed to trigger a recursive NETDEV_FEAT_CHANGE event
    between bonding master and slave. I managed to find a reproducer
    for this:
    
      ip li set bond0 up
      ifenslave bond0 eth0
      brctl addbr br0
      ethtool -K eth0 lro off
      brctl addif br0 bond0
      ip li set br0 up
    
    When a NETDEV_FEAT_CHANGE event is triggered on a bonding slave,
    it captures this and calls bond_compute_features() to fixup its
    master's and other slaves' features. However, when syncing with
    its lower devices by netdev_sync_lower_features() this event is
    triggered again on slaves when the LRO feature fails to change,
    so it goes back and forth recursively until the kernel stack is
    exhausted.
    
    Commit 17b85d29e82c intentionally lets __netdev_update_features()
    return -1 for such a failure case, so we have to just rely on
    the existing check inside netdev_sync_lower_features() and skip
    NETDEV_FEAT_CHANGE event only for this specific failure case.
    
    Fixes: fd867d51f889 ("net/core: generic support for disabling netdev features down stack")
    Reported-by: syzbot+e73ceacfd8560cc8a3ca@syzkaller.appspotmail.com
    Reported-by: syzbot+c2fb6f9ddcea95ba49b5@syzkaller.appspotmail.com
    Cc: Jarod Wilson <jarod@redhat.com>
    Cc: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Jann Horn <jannh@google.com>
    Reviewed-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be1a859d7980f92a8f28d4c8e0f71658dd931b90
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu May 7 18:53:24 2020 +0200

    mptcp: set correct vfs info for subflows
    
    [ Upstream commit 7d14b0d2b9b317cfc14161143e2006b95a5da9b1 ]
    
    When a subflow is created via mptcp_subflow_create_socket(),
    a new 'struct socket' is allocated, with a new i_ino value.
    
    When inspecting TCP sockets via the procfs and or the diag
    interface, the above ones are not related to the process owning
    the MPTCP master socket, even if they are a logical part of it
    ('ss -p' shows an empty process field)
    
    Additionally, subflows created by the path manager get
    the uid/gid from the running workqueue.
    
    Subflows are part of the owning MPTCP master socket, let's
    adjust the vfs info to reflect this.
    
    After this patch, 'ss' correctly displays subflows as belonging
    to the msk socket creator.
    
    Fixes: 2303f994b3e1 ("mptcp: Associate MPTCP context with TCP socket")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5111e09ab67e7f6da0f57921ab76462f5db34b38
Author: Ioana Ciornei <ioana.ciornei@nxp.com>
Date:   Fri May 15 15:30:22 2020 +0300

    dpaa2-eth: properly handle buffer size restrictions
    
    [ Upstream commit efa6a7d07523ffbbf6503c1a7eeb52201c15c0e3 ]
    
    Depending on the WRIOP version, the buffer size on the RX path must by a
    multiple of 64 or 256. Handle this restriction properly by aligning down
    the buffer size to the necessary value. Also, use the new buffer size
    dynamically computed instead of the compile time one.
    
    Fixes: 27c874867c4e ("dpaa2-eth: Use a single page per Rx buffer")
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5642e82c6f6078e270d72bcc51a95b5bdc3b6656
Author: Raul E Rangel <rrangel@chromium.org>
Date:   Fri May 8 16:54:21 2020 -0600

    mmc: sdhci-acpi: Add SDHCI_QUIRK2_BROKEN_64_BIT_DMA for AMDI0040
    
    [ Upstream commit 45a3fe3bf93b7cfeddc28ef7386555e05dc57f06 ]
    
    The AMD eMMC 5.0 controller does not support 64 bit DMA.
    
    Fixes: 34597a3f60b1 ("mmc: sdhci-acpi: Add support for ACPI HID of AMD Controller with HS400")
    Signed-off-by: Raul E Rangel <rrangel@chromium.org>
    Link: https://marc.info/?l=linux-mmc&m=158879884514552&w=2
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20200508165344.1.Id5bb8b1ae7ea576f26f9d91c761df7ccffbf58c5@changeid
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1371e6e38e102a5c48631e0266e816e19a99aed2
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon May 4 01:20:27 2020 +0300

    net: mscc: ocelot: ANA_AUTOAGE_AGE_PERIOD holds a value in seconds, not ms
    
    [ Upstream commit c0d7eccbc76115b7eb337956c03d47d6a889cf8c ]
    
    One may notice that automatically-learnt entries 'never' expire, even
    though the bridge configures the address age period at 300 seconds.
    
    Actually the value written to hardware corresponds to a time interval
    1000 times higher than intended, i.e. 83 hours.
    
    Fixes: a556c76adc05 ("net: mscc: Add initial Ocelot switch support")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Faineli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d163824e771e5f39732ec31c7026b79402450b77
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon May 4 01:20:26 2020 +0300

    net: dsa: ocelot: the MAC table on Felix is twice as large
    
    [ Upstream commit 21ce7f3e16fbf89faaf149cfe0f730edfc553914 ]
    
    When running 'bridge fdb dump' on Felix, sometimes learnt and static MAC
    addresses would appear, sometimes they wouldn't.
    
    Turns out, the MAC table has 4096 entries on VSC7514 (Ocelot) and 8192
    entries on VSC9959 (Felix), so the existing code from the Ocelot common
    library only dumped half of Felix's MAC table. They are both organized
    as a 4-way set-associative TCAM, so we just need a single variable
    indicating the correct number of rows.
    
    Fixes: 56051948773e ("net: dsa: ocelot: add driver for Felix switch family")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1a95ee776186667ffffeb3a08935f9a8906d55f
Author: Joerg Roedel <jroedel@suse.de>
Date:   Mon May 4 14:54:12 2020 +0200

    iommu/amd: Update Device Table in increase_address_space()
    
    [ Upstream commit 19c6978fba68a2cdedee7d55fb8c3063d47982d9 ]
    
    The Device Table needs to be updated before the new page-table root
    can be published in domain->pt_root. Otherwise a concurrent call to
    fetch_pte might fetch a PTE which is not reachable through the Device
    Table Entry.
    
    Fixes: 92d420ec028d ("iommu/amd: Relax locking in dma_ops path")
    Reported-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Tested-by: Qian Cai <cai@lca.pw>
    Link: https://lore.kernel.org/r/20200504125413.16798-5-joro@8bytes.org
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6c3f375b2d16d29eaf523358fa1b9f30492d075
Author: Joerg Roedel <jroedel@suse.de>
Date:   Mon May 4 14:54:09 2020 +0200

    iommu/amd: Fix race in increase_address_space()/fetch_pte()
    
    [ Upstream commit eb791aa70b90c559eeb371d807c8813d569393f0 ]
    
    The 'pt_root' and 'mode' struct members of 'struct protection_domain'
    need to be get/set atomically, otherwise the page-table of the domain
    can get corrupted.
    
    Merge the fields into one atomic64_t struct member which can be
    get/set atomically.
    
    Fixes: 92d420ec028d ("iommu/amd: Relax locking in dma_ops path")
    Reported-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Tested-by: Qian Cai <cai@lca.pw>
    Link: https://lore.kernel.org/r/20200504125413.16798-2-joro@8bytes.org
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cfbd8c087b31becefcb12262cbda2ac51daa970
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri May 1 15:10:16 2020 +0100

    net: stmmac: gmac5+: fix potential integer overflow on 32 bit multiply
    
    [ Upstream commit 44d95cc6b10ff7439d45839c96c581cb4368c088 ]
    
    The multiplication of cfg->ctr[1] by 1000000000 is performed using a
    32 bit multiplication (since cfg->ctr[1] is a u32) and this can lead
    to a potential overflow. Fix this by making the constant a ULL to
    ensure a 64 bit multiply occurs.
    
    Fixes: 504723af0d85 ("net: stmmac: Add basic EST support for GMAC5+")
    Addresses-Coverity: ("Unintentional integer overflow")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83864714bd2251cb8965aa7799e828945715358a
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Apr 30 20:53:49 2020 -0700

    net_sched: fix tcm_parent in tc filter dump
    
    [ Upstream commit a7df4870d79b00742da6cc93ca2f336a71db77f7 ]
    
    When we tell kernel to dump filters from root (ffff:ffff),
    those filters on ingress (ffff:0000) are matched, but their
    true parents must be dumped as they are. However, kernel
    dumps just whatever we tell it, that is either ffff:ffff
    or ffff:0000:
    
     $ nl-cls-list --dev=dummy0 --parent=root
     cls basic dev dummy0 id none parent root prio 49152 protocol ip match-all
     cls basic dev dummy0 id :1 parent root prio 49152 protocol ip match-all
     $ nl-cls-list --dev=dummy0 --parent=ffff:
     cls basic dev dummy0 id none parent ffff: prio 49152 protocol ip match-all
     cls basic dev dummy0 id :1 parent ffff: prio 49152 protocol ip match-all
    
    This is confusing and misleading, more importantly this is
    a regression since 4.15, so the old behavior must be restored.
    
    And, when tc filters are installed on a tc class, the parent
    should be the classid, rather than the qdisc handle. Commit
    edf6711c9840 ("net: sched: remove classid and q fields from tcf_proto")
    removed the classid we save for filters, we can just restore
    this classid in tcf_block.
    
    Steps to reproduce this:
     ip li set dev dummy0 up
     tc qd add dev dummy0 ingress
     tc filter add dev dummy0 parent ffff: protocol arp basic action pass
     tc filter show dev dummy0 root
    
    Before this patch:
     filter protocol arp pref 49152 basic
     filter protocol arp pref 49152 basic handle 0x1
            action order 1: gact action pass
             random type none pass val 0
             index 1 ref 1 bind 1
    
    After this patch:
     filter parent ffff: protocol arp pref 49152 basic
     filter parent ffff: protocol arp pref 49152 basic handle 0x1
            action order 1: gact action pass
             random type none pass val 0
             index 1 ref 1 bind 1
    
    Fixes: a10fa20101ae ("net: sched: propagate q and parent from caller down to tcf_fill_node")
    Fixes: edf6711c9840 ("net: sched: remove classid and q fields from tcf_proto")
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbb8f0b6eaa5729b0f3b77f72645e3ca25615dbf
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Apr 28 23:50:51 2020 +0200

    sun6i: dsi: fix gcc-4.8
    
    [ Upstream commit 3a3a71f97c30983f1627c2c550d43566e9b634d2 ]
    
    Older compilers warn about initializers with incorrect curly
    braces:
    
    drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c: In function 'sun6i_dsi_encoder_enable':
    drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c:720:8: error: missing braces around initializer [-Werror=missing-braces]
      union phy_configure_opts opts = { 0 };
            ^
    drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c:720:8: error: (near initialization for 'opts.mipi_dphy') [-Werror=missing-braces]
    
    Use the GNU empty initializer extension to avoid this.
    
    Fixes: bb3b6fcb6849 ("sun6i: dsi: Convert to generic phy handling")
    Reviewed-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200428215105.3928459-1-arnd@arndb.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8c4c46671d41308296bffb5f2d09cd060794c49
Author: Stefan Hajnoczi <stefanha@redhat.com>
Date:   Thu Apr 30 15:04:42 2020 +0100

    virtio-blk: handle block_device_operations callbacks after hot unplug
    
    [ Upstream commit 90b5feb8c4bebc76c27fcaf3e1a0e5ca2d319e9e ]
    
    A userspace process holding a file descriptor to a virtio_blk device can
    still invoke block_device_operations after hot unplug.  This leads to a
    use-after-free accessing vblk->vdev in virtblk_getgeo() when
    ioctl(HDIO_GETGEO) is invoked:
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000090
      IP: [<ffffffffc00e5450>] virtio_check_driver_offered_feature+0x10/0x90 [virtio]
      PGD 800000003a92f067 PUD 3a930067 PMD 0
      Oops: 0000 [#1] SMP
      CPU: 0 PID: 1310 Comm: hdio-getgeo Tainted: G           OE  ------------   3.10.0-1062.el7.x86_64 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      task: ffff9be5fbfb8000 ti: ffff9be5fa890000 task.ti: ffff9be5fa890000
      RIP: 0010:[<ffffffffc00e5450>]  [<ffffffffc00e5450>] virtio_check_driver_offered_feature+0x10/0x90 [virtio]
      RSP: 0018:ffff9be5fa893dc8  EFLAGS: 00010246
      RAX: ffff9be5fc3f3400 RBX: ffff9be5fa893e30 RCX: 0000000000000000
      RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff9be5fbc10b40
      RBP: ffff9be5fa893dc8 R08: 0000000000000301 R09: 0000000000000301
      R10: 0000000000000000 R11: 0000000000000000 R12: ffff9be5fdc24680
      R13: ffff9be5fbc10b40 R14: ffff9be5fbc10480 R15: 0000000000000000
      FS:  00007f1bfb968740(0000) GS:ffff9be5ffc00000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000090 CR3: 000000003a894000 CR4: 0000000000360ff0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       [<ffffffffc016ac37>] virtblk_getgeo+0x47/0x110 [virtio_blk]
       [<ffffffff8d3f200d>] ? handle_mm_fault+0x39d/0x9b0
       [<ffffffff8d561265>] blkdev_ioctl+0x1f5/0xa20
       [<ffffffff8d488771>] block_ioctl+0x41/0x50
       [<ffffffff8d45d9e0>] do_vfs_ioctl+0x3a0/0x5a0
       [<ffffffff8d45dc81>] SyS_ioctl+0xa1/0xc0
    
    A related problem is that virtblk_remove() leaks the vd_index_ida index
    when something still holds a reference to vblk->disk during hot unplug.
    This causes virtio-blk device names to be lost (vda, vdb, etc).
    
    Fix these issues by protecting vblk->vdev with a mutex and reference
    counting vblk so the vd_index_ida index can be removed in all cases.
    
    Fixes: 48e4043d4529 ("virtio: add virtio disk geometry feature")
    Reported-by: Lance Digby <ldigby@redhat.com>
    Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
    Link: https://lore.kernel.org/r/20200430140442.171016-1-stefanha@redhat.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58530d99096c34c208e990a9187beb54b71e3a84
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Apr 30 23:30:49 2020 +0200

    drop_monitor: work around gcc-10 stringop-overflow warning
    
    [ Upstream commit dc30b4059f6e2abf3712ab537c8718562b21c45d ]
    
    The current gcc-10 snapshot produces a false-positive warning:
    
    net/core/drop_monitor.c: In function 'trace_drop_common.constprop':
    cc1: error: writing 8 bytes into a region of size 0 [-Werror=stringop-overflow=]
    In file included from net/core/drop_monitor.c:23:
    include/uapi/linux/net_dropmon.h:36:8: note: at offset 0 to object 'entries' with size 4 declared here
       36 |  __u32 entries;
          |        ^~~~~~~
    
    I reported this in the gcc bugzilla, but in case it does not get
    fixed in the release, work around it by using a temporary variable.
    
    Fixes: 9a8afc8d3962 ("Network Drop Monitor: Adding drop monitor implementation & Netlink protocol")
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=94881
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a258498a20d436710626db1bf614dfb350139cac
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Tue Apr 28 10:54:56 2020 -0700

    hv_netvsc: Fix netvsc_start_xmit's return type
    
    [ Upstream commit 7fdc66debebc6a7170a37c8c9b0d9585a9788fb4 ]
    
    netvsc_start_xmit is used as a callback function for the ndo_start_xmit
    function pointer. ndo_start_xmit's return type is netdev_tx_t but
    netvsc_start_xmit's return type is int.
    
    This causes a failure with Control Flow Integrity (CFI), which requires
    function pointer prototypes and callback function definitions to match
    exactly. When CFI is in enforcing, the kernel panics. When booting a
    CFI kernel with WSL 2, the VM is immediately terminated because of this.
    
    The splat when CONFIG_CFI_PERMISSIVE is used:
    
    [    5.916765] CFI failure (target: netvsc_start_xmit+0x0/0x10):
    [    5.916771] WARNING: CPU: 8 PID: 0 at kernel/cfi.c:29 __cfi_check_fail+0x2e/0x40
    [    5.916772] Modules linked in:
    [    5.916774] CPU: 8 PID: 0 Comm: swapper/8 Not tainted 5.7.0-rc3-next-20200424-microsoft-cbl-00001-ged4eb37d2c69-dirty #1
    [    5.916776] RIP: 0010:__cfi_check_fail+0x2e/0x40
    [    5.916777] Code: 48 c7 c7 70 98 63 a9 48 c7 c6 11 db 47 a9 e8 69 55 59 00 85 c0 75 02 5b c3 48 c7 c7 73 c6 43 a9 48 89 de 31 c0 e8 12 2d f0 ff <0f> 0b 5b c3 00 00 cc cc 00 00 cc cc 00 00 cc cc 00 00 85 f6 74 25
    [    5.916778] RSP: 0018:ffffa803c0260b78 EFLAGS: 00010246
    [    5.916779] RAX: 712a1af25779e900 RBX: ffffffffa8cf7950 RCX: ffffffffa962cf08
    [    5.916779] RDX: ffffffffa9c36b60 RSI: 0000000000000082 RDI: ffffffffa9c36b5c
    [    5.916780] RBP: ffff8ffc4779c2c0 R08: 0000000000000001 R09: ffffffffa9c3c300
    [    5.916781] R10: 0000000000000151 R11: ffffffffa9c36b60 R12: ffff8ffe39084000
    [    5.916782] R13: ffffffffa8cf7950 R14: ffffffffa8d12cb0 R15: ffff8ffe39320140
    [    5.916784] FS:  0000000000000000(0000) GS:ffff8ffe3bc00000(0000) knlGS:0000000000000000
    [    5.916785] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    5.916786] CR2: 00007ffef5749408 CR3: 00000002f4f5e000 CR4: 0000000000340ea0
    [    5.916787] Call Trace:
    [    5.916788]  <IRQ>
    [    5.916790]  __cfi_check+0x3ab58/0x450e0
    [    5.916793]  ? dev_hard_start_xmit+0x11f/0x160
    [    5.916795]  ? sch_direct_xmit+0xf2/0x230
    [    5.916796]  ? __dev_queue_xmit.llvm.11471227737707190958+0x69d/0x8e0
    [    5.916797]  ? neigh_resolve_output+0xdf/0x220
    [    5.916799]  ? neigh_connected_output.cfi_jt+0x8/0x8
    [    5.916801]  ? ip6_finish_output2+0x398/0x4c0
    [    5.916803]  ? nf_nat_ipv6_out+0x10/0xa0
    [    5.916804]  ? nf_hook_slow+0x84/0x100
    [    5.916807]  ? ip6_input_finish+0x8/0x8
    [    5.916807]  ? ip6_output+0x6f/0x110
    [    5.916808]  ? __ip6_local_out.cfi_jt+0x8/0x8
    [    5.916810]  ? mld_sendpack+0x28e/0x330
    [    5.916811]  ? ip_rt_bug+0x8/0x8
    [    5.916813]  ? mld_ifc_timer_expire+0x2db/0x400
    [    5.916814]  ? neigh_proxy_process+0x8/0x8
    [    5.916816]  ? call_timer_fn+0x3d/0xd0
    [    5.916817]  ? __run_timers+0x2a9/0x300
    [    5.916819]  ? rcu_core_si+0x8/0x8
    [    5.916820]  ? run_timer_softirq+0x14/0x30
    [    5.916821]  ? __do_softirq+0x154/0x262
    [    5.916822]  ? native_x2apic_icr_write+0x8/0x8
    [    5.916824]  ? irq_exit+0xba/0xc0
    [    5.916825]  ? hv_stimer0_vector_handler+0x99/0xe0
    [    5.916826]  ? hv_stimer0_callback_vector+0xf/0x20
    [    5.916826]  </IRQ>
    [    5.916828]  ? hv_stimer_global_cleanup.cfi_jt+0x8/0x8
    [    5.916829]  ? raw_setsockopt+0x8/0x8
    [    5.916830]  ? default_idle+0xe/0x10
    [    5.916832]  ? do_idle.llvm.10446269078108580492+0xb7/0x130
    [    5.916833]  ? raw_setsockopt+0x8/0x8
    [    5.916833]  ? cpu_startup_entry+0x15/0x20
    [    5.916835]  ? cpu_hotplug_enable.cfi_jt+0x8/0x8
    [    5.916836]  ? start_secondary+0x188/0x190
    [    5.916837]  ? secondary_startup_64+0xa5/0xb0
    [    5.916838] ---[ end trace f2683fa869597ba5 ]---
    
    Avoid this by using the right return type for netvsc_start_xmit.
    
    Fixes: fceaf24a943d8 ("Staging: hv: add the Hyper-V virtual network driver")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1009
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0491e3caba4d90dd85c89b57c08e771a1c25fe89
Author: Alan Maguire <alan.maguire@oracle.com>
Date:   Wed Feb 19 09:33:29 2020 +0000

    ftrace/selftests: workaround cgroup RT scheduling issues
    
    [ Upstream commit 57c4cfd4a2eef8f94052bd7c0fce0981f74fb213 ]
    
    wakeup_rt.tc and wakeup.tc tests in tracers/ subdirectory
    fail due to the chrt command returning:
    
     chrt: failed to set pid 0's policy: Operation not permitted.
    
    To work around this, temporarily disable grout RT scheduling
    during ftracetest execution.  Restore original value on
    test run completion.  With these changes in place, both
    tests consistently pass.
    
    Fixes: c575dea2c1a5 ("selftests/ftrace: Add wakeup_rt tracer testcase")
    Fixes: c1edd060b413 ("selftests/ftrace: Add wakeup tracer testcase")
    Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96a6e7a05d546112749143444a9f0ad1be1b1952
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Apr 26 22:59:21 2020 +0200

    net: moxa: Fix a potential double 'free_irq()'
    
    [ Upstream commit ee8d2267f0e39a1bfd95532da3a6405004114b27 ]
    
    Should an irq requested with 'devm_request_irq' be released explicitly,
    it should be done by 'devm_free_irq()', not 'free_irq()'.
    
    Fixes: 6c821bd9edc9 ("net: Add MOXA ART SoCs ethernet driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10c51cbe0d769ec0ffb00bece173841af0ea8f64
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Apr 27 08:18:03 2020 +0200

    net/sonic: Fix a resource leak in an error handling path in 'jazz_sonic_probe()'
    
    [ Upstream commit 10e3cc180e64385edc9890c6855acf5ed9ca1339 ]
    
    A call to 'dma_alloc_coherent()' is hidden in 'sonic_alloc_descriptors()',
    called from 'sonic_probe1()'.
    
    This is correctly freed in the remove function, but not in the error
    handling path of the probe function.
    Fix it and add the missing 'dma_free_coherent()' call.
    
    While at it, rename a label in order to be slightly more informative.
    
    Fixes: efcce839360f ("[PATCH] macsonic/jazzsonic network drivers update")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c252fded06782689b77a494148026f38dfa7b00e
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sat Apr 18 14:38:19 2020 -0400

    SUNRPC: Fix GSS privacy computation of auth->au_ralign
    
    [ Upstream commit a7e429a6fa6d612d1dacde96c885dc1bb4a9f400 ]
    
    When the au_ralign field was added to gss_unwrap_resp_priv, the
    wrong calculation was used. Setting au_rslack == au_ralign is
    probably correct for kerberos_v1 privacy, but kerberos_v2 privacy
    adds additional GSS data after the clear text RPC message.
    au_ralign needs to be smaller than au_rslack in that fairly common
    case.
    
    When xdr_buf_trim() is restored to gss_unwrap_kerberos_v2(), it does
    exactly what I feared it would: it trims off part of the clear text
    RPC message. However, that's because rpc_prepare_reply_pages() does
    not set up the rq_rcv_buf's tail correctly because au_ralign is too
    large.
    
    Fixing the au_ralign computation also corrects the alignment of
    rq_rcv_buf->pages so that the client does not have to shift reply
    data payloads after they are received.
    
    Fixes: 35e77d21baa0 ("SUNRPC: Add rpc_auth::au_ralign field")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b946ae6be37904161dec32a1b0eaf93b3c7150f8
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sat Apr 18 21:06:23 2020 -0400

    SUNRPC: Add "@len" parameter to gss_unwrap()
    
    [ Upstream commit 31c9590ae468478fe47dc0f5f0d3562b2f69450e ]
    
    Refactor: This is a pre-requisite to fixing the client-side ralign
    computation in gss_unwrap_resp_priv().
    
    The length value is passed in explicitly rather that as the value
    of buf->len. This will subsequently allow gss_unwrap_kerberos_v1()
    to compute a slack and align value, instead of computing it in
    gss_unwrap_resp_priv().
    
    Fixes: 35e77d21baa0 ("SUNRPC: Add rpc_auth::au_ralign field")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5470e5308f6ba7a879c59b574b4ea3efe03a84ef
Author: Adam Ford <aford173@gmail.com>
Date:   Sat Apr 11 20:33:52 2020 -0500

    gpio: pca953x: Fix pca953x_gpio_set_config
    
    [ Upstream commit dc87f6dd058a648cd2a35e4aa04592dccdc9f0c2 ]
    
    pca953x_gpio_set_config is setup to support pull-up/down
    bias.  Currently the driver uses a variable called 'config' to
    determine which options to use.  Unfortunately, this is incorrect.
    
    This patch uses function pinconf_to_config_param(config), which
    converts this 'config' parameter back to pinconfig to determine
    which option to use.
    
    Fixes: 15add06841a3 ("gpio: pca953x: add ->set_config implementation")
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d17364ab228ac39921ae00606e1cc03b06ace34
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Apr 9 13:05:26 2020 +0100

    KVM: arm: vgic-v2: Only use the virtual state when userspace accesses pending bits
    
    [ Upstream commit ba1ed9e17b581c9a204ec1d72d40472dd8557edd ]
    
    There is no point in accessing the HW when writing to any of the
    ISPENDR/ICPENDR registers from userspace, as only the guest should
    be allowed to change the HW state.
    
    Introduce new userspace-specific accessors that deal solely with
    the virtual state. Note that the API differs from that of GICv3,
    where userspace exclusively uses ISPENDR to set the state. Too
    bad we can't reuse it.
    
    Fixes: 82e40f558de56 ("KVM: arm/arm64: vgic-v2: Handle SGI bits in GICD_I{S,C}PENDR0 as WI")
    Reviewed-by: James Morse <james.morse@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d44512a2d6b57bd4ec9609ec4ea52055518b6b5
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Apr 6 16:21:20 2020 +0100

    KVM: arm: vgic: Synchronize the whole guest on GIC{D,R}_I{S,C}ACTIVER read
    
    [ Upstream commit 9a50ebbffa9862db7604345f5fd763122b0f6fed ]
    
    When a guest tries to read the active state of its interrupts,
    we currently just return whatever state we have in memory. This
    means that if such an interrupt lives in a List Register on another
    CPU, we fail to obsertve the latest active state for this interrupt.
    
    In order to remedy this, stop all the other vcpus so that they exit
    and we can observe the most recent value for the state. This is
    similar to what we are doing for the write side of the same
    registers, and results in new MMIO handlers for userspace (which
    do not need to stop the guest, as it is supposed to be stopped
    already).
    
    Reported-by: Julien Grall <julien@xen.org>
    Reviewed-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32e8ee817d9bb41dd46ce7c0ab7dac314530aaa0
Author: Yuiko Oshino <yuiko.oshino@microchip.com>
Date:   Mon Apr 20 11:51:41 2020 -0400

    net: phy: microchip_t1: add lan87xx_phy_init to initialize the lan87xx phy.
    
    [ Upstream commit 63edbcceef612bdd95fa28ce100460c7b79008a4 ]
    
    lan87xx_phy_init() initializes the lan87xx phy hardware
    including its TC10 Wake-up and Sleep features.
    
    Fixes: 3e50d2da5850 ("Add driver for Microchip LAN87XX T1 PHYs")
    Signed-off-by: Yuiko Oshino <yuiko.oshino@microchip.com>
    v0->v1:
        - Add more details in the commit message and source comments.
        - Update to the latest initialization sequences.
        - Add access_ereg_modify_changed().
        - Fix access_ereg() to access SMI bank correctly.
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68d5d4675a98e188dc0e0968b6b1dc9969f09ee3
Author: Hugh Dickins <hughd@google.com>
Date:   Mon Apr 20 18:14:14 2020 -0700

    shmem: fix possible deadlocks on shmlock_user_lock
    
    [ Upstream commit ea0dfeb4209b4eab954d6e00ed136bc6b48b380d ]
    
    Recent commit 71725ed10c40 ("mm: huge tmpfs: try to split_huge_page()
    when punching hole") has allowed syzkaller to probe deeper, uncovering a
    long-standing lockdep issue between the irq-unsafe shmlock_user_lock,
    the irq-safe xa_lock on mapping->i_pages, and shmem inode's info->lock
    which nests inside xa_lock (or tree_lock) since 4.8's shmem_uncharge().
    
    user_shm_lock(), servicing SysV shmctl(SHM_LOCK), wants
    shmlock_user_lock while its caller shmem_lock() holds info->lock with
    interrupts disabled; but hugetlbfs_file_setup() calls user_shm_lock()
    with interrupts enabled, and might be interrupted by a writeback endio
    wanting xa_lock on i_pages.
    
    This may not risk an actual deadlock, since shmem inodes do not take
    part in writeback accounting, but there are several easy ways to avoid
    it.
    
    Requiring interrupts disabled for shmlock_user_lock would be easy, but
    it's a high-level global lock for which that seems inappropriate.
    Instead, recall that the use of info->lock to guard info->flags in
    shmem_lock() dates from pre-3.1 days, when races with SHMEM_PAGEIN and
    SHMEM_TRUNCATE could occur: nowadays it serves no purpose, the only flag
    added or removed is VM_LOCKED itself, and calls to shmem_lock() an inode
    are already serialized by the caller.
    
    Take info->lock out of the chain and the possibility of deadlock or
    lockdep warning goes away.
    
    Fixes: 4595ef88d136 ("shmem: make shmem_inode_info::lock irq-safe")
    Reported-by: syzbot+c8a8197c8852f566b9d9@syzkaller.appspotmail.com
    Reported-by: syzbot+40b71e145e73f78f81ad@syzkaller.appspotmail.com
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Yang Shi <yang.shi@linux.alibaba.com>
    Cc: Yang Shi <yang.shi@linux.alibaba.com>
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.2004161707410.16322@eggly.anvils
    Link: https://lore.kernel.org/lkml/000000000000e5838c05a3152f53@google.com/
    Link: https://lore.kernel.org/lkml/0000000000003712b305a331d3b1@google.com/
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c15f11f76f1198e956eee70052e9c4f09d7a11a
Author: José Roberto de Souza <jose.souza@intel.com>
Date:   Tue Apr 14 16:04:40 2020 -0700

    drm/i915/display: Load DP_TP_CTL/STATUS offset before use it
    
    [ Upstream commit 12399028751b887bdc2515f1a1e2c81b4fd74085 ]
    
    Right now dp.regs.dp_tp_ctl/status are only set during the encoder
    pre_enable() hook, what is causing all reads and writes to those
    registers to go to offset 0x0 before pre_enable() is executed.
    
    So if i915 takes the BIOS state and don't do a modeset any following
    link retraing will fail.
    
    In the case that i915 needs to do a modeset, the DDI disable sequence
    will write to a wrong register not disabling DP 'Transport Enable' in
    DP_TP_CTL, making a HDMI modeset in the same port/transcoder to
    not light up the monitor.
    
    So here for GENs older than 12, that have those registers fixed at
    port offset range it is loading at encoder/port init while for GEN12
    it will keep setting it at encoder pre_enable() and during HW state
    readout.
    
    Fixes: 4444df6e205b ("drm/i915/tgl: move DP_TP_* to transcoder")
    Cc: Matt Roper <matthew.d.roper@intel.com>
    Cc: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
    Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200414230442.262092-1-jose.souza@intel.com
    (cherry picked from commit edcb9028d66b44d74ba4f8b9daa379b004dc1f85)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 294886d445c5a962ddf669bd26801f739f70f256
Author: Matt Roper <matthew.d.roper@intel.com>
Date:   Wed Apr 15 16:34:34 2020 -0700

    drm/i915/tgl: TBT AUX should use TC power well ops
    
    [ Upstream commit 335f62e7606a7921775d7cc73f0ad8ffd899bc22 ]
    
    As on ICL, we want to use the Type-C aux handlers for the TBT aux wells
    to ensure the DP_AUX_CH_CTL_TBT_IO flag is set properly.
    
    Fixes: 656409bbaf87 ("drm/i915/tgl: Add power well support")
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200415233435.3064257-1-matthew.d.roper@intel.com
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    (cherry picked from commit 3cbdb97564a39020262e62b655e788b63cf426cb)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74459a1b36ee880f28fe587fc7740d39a1e86b5f
Author: Matt Roper <matthew.d.roper@intel.com>
Date:   Tue Apr 14 14:11:17 2020 -0700

    drm/i915/tgl: Add Wa_14010477008:tgl
    
    [ Upstream commit 81fdd7bfeb8e8f76bcdfef9174ec580707c37d38 ]
    
    Media decompression support should not be advertised on any display
    planes for steppings A0-C0.
    
    Bspec: 53273
    Fixes: 2dfbf9d2873a ("drm/i915/tgl: Gen-12 display can decompress surfaces compressed by the media engine")
    Cc: Matt Atwood <matthew.s.atwood@intel.com>
    Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200414211118.2787489-3-matthew.d.roper@intel.com
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    (cherry picked from commit dbff5a8db9c630f61a892ab41a283445e01270f5)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 417effc3029cacf5a4d117dff86b19fbee4fe9de
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sun Apr 19 20:03:05 2020 -0400

    xprtrdma: Fix trace point use-after-free race
    
    [ Upstream commit bdb2ce82818577ba6e57b7d68b698b8d17329281 ]
    
    It's not safe to use resources pointed to by the @send_wr of
    ib_post_send() _after_ that function returns. Those resources are
    typically freed by the Send completion handler, which can run before
    ib_post_send() returns.
    
    Thus the trace points currently around ib_post_send() in the
    client's RPC/RDMA transport are a hazard, even when they are
    disabled. Rearrange them so that they touch the Work Request only
    _before_ ib_post_send() is invoked.
    
    Fixes: ab03eff58eb5 ("xprtrdma: Add trace points in RPC Call transmit paths")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 151021668ac269c05839380eb192b5fe016ccbbc
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Feb 21 17:00:23 2020 -0500

    xprtrdma: Clean up the post_send path
    
    [ Upstream commit 97d0de8812a10a66510ff95f8fe6e8d3053fd2ca ]
    
    Clean up: Simplify the synopses of functions in the post_send path
    by combining the struct rpcrdma_ia and struct rpcrdma_ep arguments.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7058db7ebd75095b0c5006a5efdce4bf057a6735
Author: Oliver Upton <oupton@google.com>
Date:   Tue Apr 14 22:47:45 2020 +0000

    kvm: nVMX: reflect MTF VM-exits if injected by L1
    
    [ Upstream commit b045ae906b42afb361dc7ecf1a3cea110fb0a65f ]
    
    According to SDM 26.6.2, it is possible to inject an MTF VM-exit via the
    VM-entry interruption-information field regardless of the 'monitor trap
    flag' VM-execution control. KVM appropriately copies the VM-entry
    interruption-information field from vmcs12 to vmcs02. However, if L1
    has not set the 'monitor trap flag' VM-execution control, KVM fails to
    reflect the subsequent MTF VM-exit into L1.
    
    Fix this by consulting the VM-entry interruption-information field of
    vmcs12 to determine if L1 has injected the MTF VM-exit. If so, reflect
    the exit, regardless of the 'monitor trap flag' VM-execution control.
    
    Fixes: 5f3d45e7f282 ("kvm/x86: add support for MONITOR_TRAP_FLAG")
    Signed-off-by: Oliver Upton <oupton@google.com>
    Reviewed-by: Peter Shier <pshier@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Message-Id: <20200414224746.240324-1-oupton@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a1f9ebd4b34a278266116d602f84a236740e81e
Author: Oliver Upton <oupton@google.com>
Date:   Mon Feb 24 12:27:44 2020 -0800

    KVM: nVMX: Consolidate nested MTF checks to helper function
    
    [ Upstream commit 212617dbb6bac2a21dec6ef7d6012d96bb6dbb5d ]
    
    commit 5ef8acbdd687 ("KVM: nVMX: Emulate MTF when performing
    instruction emulation") introduced a helper to check the MTF
    VM-execution control in vmcs12. Change pre-existing check in
    nested_vmx_exit_reflected() to instead use the helper.
    
    Signed-off-by: Oliver Upton <oupton@google.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
