commit 4707d8e5727387e36ea99c74d5ff0ad227700fd0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jun 3 08:19:49 2020 +0200

    Linux 4.19.126

commit 224a82c3175ace7c1a27d242230cf804a1478631
Author: Liviu Dudau <liviu@dudau.co.uk>
Date:   Tue Mar 5 15:42:54 2019 -0800

    mm/vmalloc.c: don't dereference possible NULL pointer in __vunmap()
    
    commit 6ade20327dbb808882888ed8ccded71e93067cf9 upstream.
    
    find_vmap_area() can return a NULL pointer and we're going to
    dereference it without checking it first.  Use the existing
    find_vm_area() function which does exactly what we want and checks for
    the NULL pointer.
    
    Link: http://lkml.kernel.org/r/20181228171009.22269-1-liviu@dudau.co.uk
    Fixes: f3c01d2f3ade ("mm: vmalloc: avoid racy handling of debugobjects in vunmap")
    Signed-off-by: Liviu Dudau <liviu@dudau.co.uk>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Chintan Pandya <cpandya@codeaurora.org>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8efa59fc90a590edd772583f9a0d9c780686ecb1
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed May 27 12:24:10 2020 +0200

    netfilter: nf_conntrack_pptp: fix compilation warning with W=1 build
    
    commit 4946ea5c1237036155c3b3a24f049fd5f849f8f6 upstream.
    
    >> include/linux/netfilter/nf_conntrack_pptp.h:13:20: warning: 'const' type qualifier on return type has no effect [-Wignored-qualifiers]
    extern const char *const pptp_msg_name(u_int16_t msg);
    ^~~~~~
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Fixes: 4c559f15efcc ("netfilter: nf_conntrack_pptp: prevent buffer overflows in debug code")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a37da1359ffbf7ae5600b552bfd7fd57057cb68
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Wed May 27 22:10:29 2020 -0500

    bonding: Fix reference count leak in bond_sysfs_slave_add.
    
    commit a068aab42258e25094bc2c159948d263ed7d7a77 upstream.
    
    kobject_init_and_add() takes reference even when it fails.
    If this function returns an error, kobject_put() must be called to
    properly clean up the memory associated with the object. Previous
    commit "b8eb718348b8" fixed a similar problem.
    
    Fixes: 07699f9a7c8d ("bonding: add sysfs /slave dir for bond slave devices.")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3219344fabbdef3eaee14b83dce3223608f43aab
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue May 26 17:28:56 2020 -0700

    crypto: chelsio/chtls: properly set tp->lsndtime
    
    commit a4976a3ef844c510ae9120290b23e9f3f47d6bce upstream.
    
    TCP tp->lsndtime unit/base is tcp_jiffies32, not tcp_time_stamp()
    
    Fixes: 36bedb3f2e5b ("crypto: chtls - Inline TLS record Tx")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Ayush Sawal <ayush.sawal@chelsio.com>
    Cc: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79ed4c838a850ac4154331656d0972331c37d761
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Mon May 25 03:24:39 2020 -0500

    qlcnic: fix missing release in qlcnic_83xx_interrupt_test.
    
    commit 15c973858903009e995b2037683de29dfe968621 upstream.
    
    In function qlcnic_83xx_interrupt_test(), function
    qlcnic_83xx_diag_alloc_res() is not handled by function
    qlcnic_83xx_diag_free_res() after a call of the function
    qlcnic_alloc_mbx_args() failed. Fix this issue by adding
    a jump target "fail_mbx_args", and jump to this new target
    when qlcnic_alloc_mbx_args() failed.
    
    Fixes: b6b4316c8b2f ("qlcnic: Handle qlcnic_alloc_mbx_args() failure")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03cfd4e0ed56a7a21ead9f4ceb4008ef96fbd767
Author: Björn Töpel <bjorn.topel@intel.com>
Date:   Mon May 25 10:03:59 2020 +0200

    xsk: Add overflow check for u64 division, stored into u32
    
    commit b16a87d0aef7a6be766f6618976dc5ff2c689291 upstream.
    
    The npgs member of struct xdp_umem is an u32 entity, and stores the
    number of pages the UMEM consumes. The calculation of npgs
    
      npgs = size / PAGE_SIZE
    
    can overflow.
    
    To avoid overflow scenarios, the division is now first stored in a
    u64, and the result is verified to fit into 32b.
    
    An alternative would be storing the npgs as a u64, however, this
    wastes memory and is an unrealisticly large packet area.
    
    Fixes: c0c77d8fb787 ("xsk: add user memory registration support sockopt")
    Reported-by: "Minh Bùi Quang" <minhquangbui99@gmail.com>
    Signed-off-by: Björn Töpel <bjorn.topel@intel.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Link: https://lore.kernel.org/bpf/CACtPs=GGvV-_Yj6rbpzTVnopgi5nhMoCcTkSkYrJHGQHJWFZMQ@mail.gmail.com/
    Link: https://lore.kernel.org/bpf/20200525080400.13195-1-bjorn.topel@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4c9756ac4e4161c9b9b1d0923f01bcd5633abc8
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Mon May 25 17:41:17 2020 -0400

    bnxt_en: Fix accumulation of bp->net_stats_prev.
    
    commit b8056e8434b037fdab08158fea99ed7bc8ef3a74 upstream.
    
    We have logic to maintain network counters across resets by storing
    the counters in bp->net_stats_prev before reset.  But not all resets
    will clear the counters.  Certain resets that don't need to change
    the number of rings do not clear the counters.  The current logic
    accumulates the counters before all resets, causing big jumps in
    the counters after some resets, such as ethtool -G.
    
    Fix it by only accumulating the counters during reset if the irq_re_init
    parameter is set.  The parameter signifies that all rings and interrupts
    will be reset and that means that the counters will also be reset.
    
    Reported-by: Vijayendra Suman <vijayendra.suman@oracle.com>
    Fixes: b8875ca356f1 ("bnxt_en: Save ring statistics before reset.")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8f7bd7b3c9f87514e6d3d8b263b7e5d12a63a6c
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Apr 10 17:06:56 2020 +0800

    esp6: get the right proto for transport mode in esp6_gso_encap
    
    commit 3c96ec56828922e3fe5477f75eb3fc02f98f98b5 upstream.
    
    For transport mode, when ipv6 nexthdr is set, the packet format might
    be like:
    
        ----------------------------------------------------
        |        | dest |     |     |      |  ESP    | ESP |
        | IP6 hdr| opts.| ESP | TCP | Data | Trailer | ICV |
        ----------------------------------------------------
    
    What it wants to get for x-proto in esp6_gso_encap() is the proto that
    will be set in ESP nexthdr. So it should skip all ipv6 nexthdrs and
    get the real transport protocol. Othersize, the wrong proto number
    will be set into ESP nexthdr.
    
    This patch is to skip all ipv6 nexthdrs by calling ipv6_skip_exthdr()
    in esp6_gso_encap().
    
    Fixes: 7862b4058b9f ("esp: Add gso handlers for esp4 and esp6")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fb6b81e2454b0cf0c3c751f735eb7e8f90f855f
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Thu May 14 14:14:23 2020 +0200

    netfilter: nf_conntrack_pptp: prevent buffer overflows in debug code
    
    commit 4c559f15efcc43b996f4da528cd7f9483aaca36d upstream.
    
    Dan Carpenter says: "Smatch complains that the value for "cmd" comes
    from the network and can't be trusted."
    
    Add pptp_msg_name() helper function that checks for the array boundary.
    
    Fixes: f09943fefe6b ("[NETFILTER]: nf_conntrack/nf_nat: add PPTP helper port")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e70fb3eff0e2776c6bf9d9600f5868a548882ad8
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun May 24 21:04:42 2020 +0200

    netfilter: nfnetlink_cthelper: unbreak userspace helper support
    
    commit 703acd70f2496537457186211c2f03e792409e68 upstream.
    
    Restore helper data size initialization and fix memcopy of the helper
    data size.
    
    Fixes: 157ffffeb5dc ("netfilter: nfnetlink_cthelper: reject too large userspace allocation requests")
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37bc21bb264b50e2b88c642151979eb6b1ab2620
Author: Phil Sutter <phil@nwl.cc>
Date:   Thu May 14 13:31:21 2020 +0200

    netfilter: ipset: Fix subcounter update skip
    
    commit a164b95ad6055c50612795882f35e0efda1f1390 upstream.
    
    If IPSET_FLAG_SKIP_SUBCOUNTER_UPDATE is set, user requested to not
    update counters in sub sets. Therefore IPSET_FLAG_SKIP_COUNTER_UPDATE
    must be set, not unset.
    
    Fixes: 6e01781d1c80e ("netfilter: ipset: set match: add support to match the counters")
    Signed-off-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7d8095579241dc357cf127e8f0e3fe543de5318
Author: Michael Braun <michael-dev@fami-braun.de>
Date:   Wed May 6 11:46:25 2020 +0200

    netfilter: nft_reject_bridge: enable reject with bridge vlan
    
    commit e9c284ec4b41c827f4369973d2792992849e4fa5 upstream.
    
    Currently, using the bridge reject target with tagged packets
    results in untagged packets being sent back.
    
    Fix this by mirroring the vlan id as well.
    
    Fixes: 85f5b3086a04 ("netfilter: bridge: add reject support")
    Signed-off-by: Michael Braun <michael-dev@fami-braun.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60efd2f86a376915234fecefd397d10b6ec2ff7d
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Apr 21 20:46:11 2020 +0800

    ip_vti: receive ipip packet by calling ip_tunnel_rcv
    
    commit 976eba8ab596bab94b9714cd46d38d5c6a2c660d upstream.
    
    In Commit dd9ee3444014 ("vti4: Fix a ipip packet processing bug in
    'IPCOMP' virtual tunnel"), it tries to receive IPIP packets in vti
    by calling xfrm_input(). This case happens when a small packet or
    frag sent by peer is too small to get compressed.
    
    However, xfrm_input() will still get to the IPCOMP path where skb
    sec_path is set, but never dropped while it should have been done
    in vti_ipcomp4_protocol.cb_handler(vti_rcv_cb), as it's not an
    ipcomp4 packet. This will cause that the packet can never pass
    xfrm4_policy_check() in the upper protocol rcv functions.
    
    So this patch is to call ip_tunnel_rcv() to process IPIP packets
    instead.
    
    Fixes: dd9ee3444014 ("vti4: Fix a ipip packet processing bug in 'IPCOMP' virtual tunnel")
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b7d0ff240d447502f4abd89df3c19f867582fd9
Author: Jeremy Sowden <jeremy@azazel.net>
Date:   Sat Mar 23 14:43:02 2019 +0000

    vti4: eliminated some duplicate code.
    
    commit f981c57ffd2d7cf2dd4b6d6f8fcb3965df42f54c upstream.
    
    The ipip tunnel introduced in commit dd9ee3444014 ("vti4: Fix a ipip
    packet processing bug in 'IPCOMP' virtual tunnel") largely duplicated
    the existing vti_input and vti_recv functions.  Refactored to
    deduplicate the common code.
    
    Signed-off-by: Jeremy Sowden <jeremy@azazel.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6194d4ab19187c7686dc595642324e67d60c5f4
Author: Antony Antony <antony@phenome.org>
Date:   Wed Apr 15 21:47:10 2020 +0200

    xfrm: fix error in comment
    
    commit 29e4276667e24ee6b91d9f91064d8fda9a210ea1 upstream.
    
    s/xfrm_state_offload/xfrm_user_offload/
    
    Fixes: d77e38e612a ("xfrm: Add an IPsec hardware offloading API")
    Signed-off-by: Antony Antony <antony@phenome.org>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef22ddbaaa61f928225c77178b1ad719d3b217dd
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue May 26 17:41:46 2020 +0800

    xfrm: fix a NULL-ptr deref in xfrm_local_error
    
    commit f6a23d85d078c2ffde79c66ca81d0a1dde451649 upstream.
    
    This patch is to fix a crash:
    
      [ ] kasan: GPF could be caused by NULL-ptr deref or user memory access
      [ ] general protection fault: 0000 [#1] SMP KASAN PTI
      [ ] RIP: 0010:ipv6_local_error+0xac/0x7a0
      [ ] Call Trace:
      [ ]  xfrm6_local_error+0x1eb/0x300
      [ ]  xfrm_local_error+0x95/0x130
      [ ]  __xfrm6_output+0x65f/0xb50
      [ ]  xfrm6_output+0x106/0x46f
      [ ]  udp_tunnel6_xmit_skb+0x618/0xbf0 [ip6_udp_tunnel]
      [ ]  vxlan_xmit_one+0xbc6/0x2c60 [vxlan]
      [ ]  vxlan_xmit+0x6a0/0x4276 [vxlan]
      [ ]  dev_hard_start_xmit+0x165/0x820
      [ ]  __dev_queue_xmit+0x1ff0/0x2b90
      [ ]  ip_finish_output2+0xd3e/0x1480
      [ ]  ip_do_fragment+0x182d/0x2210
      [ ]  ip_output+0x1d0/0x510
      [ ]  ip_send_skb+0x37/0xa0
      [ ]  raw_sendmsg+0x1b4c/0x2b80
      [ ]  sock_sendmsg+0xc0/0x110
    
    This occurred when sending a v4 skb over vxlan6 over ipsec, in which case
    skb->protocol == htons(ETH_P_IPV6) while skb->sk->sk_family == AF_INET in
    xfrm_local_error(). Then it will go to xfrm6_local_error() where it tries
    to get ipv6 info from a ipv4 sk.
    
    This issue was actually fixed by Commit 628e341f319f ("xfrm: make local
    error reporting more robust"), but brought back by Commit 844d48746e4b
    ("xfrm: choose protocol family by skb protocol").
    
    So to fix it, we should call xfrm6_local_error() only when skb->protocol
    is htons(ETH_P_IPV6) and skb->sk->sk_family is AF_INET6.
    
    Fixes: 844d48746e4b ("xfrm: choose protocol family by skb protocol")
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aa98483427942d4c65a1fc68b89c4a2763af479
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon May 25 13:53:37 2020 +0800

    xfrm: fix a warning in xfrm_policy_insert_list
    
    commit ed17b8d377eaf6b4a01d46942b4c647378a79bdd upstream.
    
    This waring can be triggered simply by:
    
      # ip xfrm policy update src 192.168.1.1/24 dst 192.168.1.2/24 dir in \
        priority 1 mark 0 mask 0x10  #[1]
      # ip xfrm policy update src 192.168.1.1/24 dst 192.168.1.2/24 dir in \
        priority 2 mark 0 mask 0x1   #[2]
      # ip xfrm policy update src 192.168.1.1/24 dst 192.168.1.2/24 dir in \
        priority 2 mark 0 mask 0x10  #[3]
    
    Then dmesg shows:
    
      [ ] WARNING: CPU: 1 PID: 7265 at net/xfrm/xfrm_policy.c:1548
      [ ] RIP: 0010:xfrm_policy_insert_list+0x2f2/0x1030
      [ ] Call Trace:
      [ ]  xfrm_policy_inexact_insert+0x85/0xe50
      [ ]  xfrm_policy_insert+0x4ba/0x680
      [ ]  xfrm_add_policy+0x246/0x4d0
      [ ]  xfrm_user_rcv_msg+0x331/0x5c0
      [ ]  netlink_rcv_skb+0x121/0x350
      [ ]  xfrm_netlink_rcv+0x66/0x80
      [ ]  netlink_unicast+0x439/0x630
      [ ]  netlink_sendmsg+0x714/0xbf0
      [ ]  sock_sendmsg+0xe2/0x110
    
    The issue was introduced by Commit 7cb8a93968e3 ("xfrm: Allow inserting
    policies with matching mark and different priorities"). After that, the
    policies [1] and [2] would be able to be added with different priorities.
    
    However, policy [3] will actually match both [1] and [2]. Policy [1]
    was matched due to the 1st 'return true' in xfrm_policy_mark_match(),
    and policy [2] was matched due to the 2nd 'return true' in there. It
    caused WARN_ON() in xfrm_policy_insert_list().
    
    This patch is to fix it by only (the same value and priority) as the
    same policy in xfrm_policy_mark_match().
    
    Thanks to Yuehaibing, we could make this fix better.
    
    v1->v2:
      - check policy->mark.v == pol->mark.v only without mask.
    
    Fixes: 7cb8a93968e3 ("xfrm: Allow inserting policies with matching mark and different priorities")
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1b98e3b4fb8d3338bbefa2f5b78eb7248af5520
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Thu Apr 23 00:06:45 2020 +0200

    xfrm interface: fix oops when deleting a x-netns interface
    
    commit c95c5f58b35ef995f66cb55547eee6093ab5fcb8 upstream.
    
    Here is the steps to reproduce the problem:
    ip netns add foo
    ip netns add bar
    ip -n foo link add xfrmi0 type xfrm dev lo if_id 42
    ip -n foo link set xfrmi0 netns bar
    ip netns del foo
    ip netns del bar
    
    Which results to:
    [  186.686395] general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6bd3: 0000 [#1] SMP PTI
    [  186.687665] CPU: 7 PID: 232 Comm: kworker/u16:2 Not tainted 5.6.0+ #1
    [  186.688430] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
    [  186.689420] Workqueue: netns cleanup_net
    [  186.689903] RIP: 0010:xfrmi_dev_uninit+0x1b/0x4b [xfrm_interface]
    [  186.690657] Code: 44 f6 ff ff 31 c0 5b 5d 41 5c 41 5d 41 5e c3 48 8d 8f c0 08 00 00 8b 05 ce 14 00 00 48 8b 97 d0 08 00 00 48 8b 92 c0 0e 00 00 <48> 8b 14 c2 48 8b 02 48 85 c0 74 19 48 39 c1 75 0c 48 8b 87 c0 08
    [  186.692838] RSP: 0018:ffffc900003b7d68 EFLAGS: 00010286
    [  186.693435] RAX: 000000000000000d RBX: ffff8881b0f31000 RCX: ffff8881b0f318c0
    [  186.694334] RDX: 6b6b6b6b6b6b6b6b RSI: 0000000000000246 RDI: ffff8881b0f31000
    [  186.695190] RBP: ffffc900003b7df0 R08: ffff888236c07740 R09: 0000000000000040
    [  186.696024] R10: ffffffff81fce1b8 R11: 0000000000000002 R12: ffffc900003b7d80
    [  186.696859] R13: ffff8881edcc6a40 R14: ffff8881a1b6e780 R15: ffffffff81ed47c8
    [  186.697738] FS:  0000000000000000(0000) GS:ffff888237dc0000(0000) knlGS:0000000000000000
    [  186.698705] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  186.699408] CR2: 00007f2129e93148 CR3: 0000000001e0a000 CR4: 00000000000006e0
    [  186.700221] Call Trace:
    [  186.700508]  rollback_registered_many+0x32b/0x3fd
    [  186.701058]  ? __rtnl_unlock+0x20/0x3d
    [  186.701494]  ? arch_local_irq_save+0x11/0x17
    [  186.702012]  unregister_netdevice_many+0x12/0x55
    [  186.702594]  default_device_exit_batch+0x12b/0x150
    [  186.703160]  ? prepare_to_wait_exclusive+0x60/0x60
    [  186.703719]  cleanup_net+0x17d/0x234
    [  186.704138]  process_one_work+0x196/0x2e8
    [  186.704652]  worker_thread+0x1a4/0x249
    [  186.705087]  ? cancel_delayed_work+0x92/0x92
    [  186.705620]  kthread+0x105/0x10f
    [  186.706000]  ? __kthread_bind_mask+0x57/0x57
    [  186.706501]  ret_from_fork+0x35/0x40
    [  186.706978] Modules linked in: xfrm_interface nfsv3 nfs_acl auth_rpcgss nfsv4 nfs lockd grace fscache sunrpc button parport_pc parport serio_raw evdev pcspkr loop ext4 crc16 mbcache jbd2 crc32c_generic 8139too ide_cd_mod cdrom ide_gd_mod ata_generic ata_piix libata scsi_mod piix psmouse i2c_piix4 ide_core 8139cp i2c_core mii floppy
    [  186.710423] ---[ end trace 463bba18105537e5 ]---
    
    The problem is that x-netns xfrm interface are not removed when the link
    netns is removed. This causes later this oops when thoses interfaces are
    removed.
    
    Let's add a handler to remove all interfaces related to a netns when this
    netns is removed.
    
    Fixes: f203b76d7809 ("xfrm: Add virtual xfrm interfaces")
    Reported-by: Christophe Gouault <christophe.gouault@6wind.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e41e9c5324922cfc2259b13551224c6ce51073ae
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Apr 20 21:51:09 2020 +0800

    xfrm: call xfrm_output_gso when inner_protocol is set in xfrm_output
    
    commit a204aef9fd77dce1efd9066ca4e44eede99cd858 upstream.
    
    An use-after-free crash can be triggered when sending big packets over
    vxlan over esp with esp offload enabled:
    
      [] BUG: KASAN: use-after-free in ipv6_gso_pull_exthdrs.part.8+0x32c/0x4e0
      [] Call Trace:
      []  dump_stack+0x75/0xa0
      []  kasan_report+0x37/0x50
      []  ipv6_gso_pull_exthdrs.part.8+0x32c/0x4e0
      []  ipv6_gso_segment+0x2c8/0x13c0
      []  skb_mac_gso_segment+0x1cb/0x420
      []  skb_udp_tunnel_segment+0x6b5/0x1c90
      []  inet_gso_segment+0x440/0x1380
      []  skb_mac_gso_segment+0x1cb/0x420
      []  esp4_gso_segment+0xae8/0x1709 [esp4_offload]
      []  inet_gso_segment+0x440/0x1380
      []  skb_mac_gso_segment+0x1cb/0x420
      []  __skb_gso_segment+0x2d7/0x5f0
      []  validate_xmit_skb+0x527/0xb10
      []  __dev_queue_xmit+0x10f8/0x2320 <---
      []  ip_finish_output2+0xa2e/0x1b50
      []  ip_output+0x1a8/0x2f0
      []  xfrm_output_resume+0x110e/0x15f0
      []  __xfrm4_output+0xe1/0x1b0
      []  xfrm4_output+0xa0/0x200
      []  iptunnel_xmit+0x5a7/0x920
      []  vxlan_xmit_one+0x1658/0x37a0 [vxlan]
      []  vxlan_xmit+0x5e4/0x3ec8 [vxlan]
      []  dev_hard_start_xmit+0x125/0x540
      []  __dev_queue_xmit+0x17bd/0x2320  <---
      []  ip6_finish_output2+0xb20/0x1b80
      []  ip6_output+0x1b3/0x390
      []  ip6_xmit+0xb82/0x17e0
      []  inet6_csk_xmit+0x225/0x3d0
      []  __tcp_transmit_skb+0x1763/0x3520
      []  tcp_write_xmit+0xd64/0x5fe0
      []  __tcp_push_pending_frames+0x8c/0x320
      []  tcp_sendmsg_locked+0x2245/0x3500
      []  tcp_sendmsg+0x27/0x40
    
    As on the tx path of vxlan over esp, skb->inner_network_header would be
    set on vxlan_xmit() and xfrm4_tunnel_encap_add(), and the later one can
    overwrite the former one. It causes skb_udp_tunnel_segment() to use a
    wrong skb->inner_network_header, then the issue occurs.
    
    This patch is to fix it by calling xfrm_output_gso() instead when the
    inner_protocol is set, in which gso_segment of inner_protocol will be
    done first.
    
    While at it, also improve some code around.
    
    Fixes: 7862b4058b9f ("esp: Add gso handlers for esp4 and esp6")
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 477ae70280ee1195fa411c23c13a84c10aeff891
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Apr 10 17:06:01 2020 +0800

    xfrm: allow to accept packets with ipv6 NEXTHDR_HOP in xfrm_input
    
    commit afcaf61be9d1dbdee5ec186d1dcc67b6b692180f upstream.
    
    For beet mode, when it's ipv6 inner address with nexthdrs set,
    the packet format might be:
    
        ----------------------------------------------------
        | outer  |     | dest |     |      |  ESP    | ESP |
        | IP hdr | ESP | opts.| TCP | Data | Trailer | ICV |
        ----------------------------------------------------
    
    The nexthdr from ESP could be NEXTHDR_HOP(0), so it should
    continue processing the packet when nexthdr returns 0 in
    xfrm_input(). Otherwise, when ipv6 nexthdr is set, the
    packet will be dropped.
    
    I don't see any error cases that nexthdr may return 0. So
    fix it by removing the check for nexthdr == 0.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51c017707f192325e67810ef8c45d1098865f408
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue May 26 18:39:49 2020 -0400

    copy_xstate_to_kernel(): don't leave parts of destination uninitialized
    
    commit 9e4636545933131de15e1ecd06733538ae939b2f upstream.
    
    copy the corresponding pieces of init_fpstate into the gaps instead.
    
    Cc: stable@kernel.org
    Tested-by: Alexander Potapenko <glider@google.com>
    Acked-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfe8d7614910a1aa360a4e66ac9a7a854e88b372
Author: Alexander Dahl <post@lespocky.de>
Date:   Tue May 26 19:57:49 2020 +0200

    x86/dma: Fix max PFN arithmetic overflow on 32 bit systems
    
    commit 88743470668ef5eb6b7ba9e0f99888e5999bf172 upstream.
    
    The intermediate result of the old term (4UL * 1024 * 1024 * 1024) is
    4 294 967 296 or 0x100000000 which is no problem on 64 bit systems.
    The patch does not change the later overall result of 0x100000 for
    MAX_DMA32_PFN (after it has been shifted by PAGE_SHIFT). The new
    calculation yields the same result, but does not require 64 bit
    arithmetic.
    
    On 32 bit systems the old calculation suffers from an arithmetic
    overflow in that intermediate term in braces: 4UL aka unsigned long int
    is 4 byte wide and an arithmetic overflow happens (the 0x100000000 does
    not fit in 4 bytes), the in braces result is truncated to zero, the
    following right shift does not alter that, so MAX_DMA32_PFN evaluates to
    0 on 32 bit systems.
    
    That wrong value is a problem in a comparision against MAX_DMA32_PFN in
    the init code for swiotlb in pci_swiotlb_detect_4gb() to decide if
    swiotlb should be active.  That comparison yields the opposite result,
    when compiling on 32 bit systems.
    
    This was not possible before
    
      1b7e03ef7570 ("x86, NUMA: Enable emulation on 32bit too")
    
    when that MAX_DMA32_PFN was first made visible to x86_32 (and which
    landed in v3.0).
    
    In practice this wasn't a problem, unless CONFIG_SWIOTLB is active on
    x86-32.
    
    However if one has set CONFIG_IOMMU_INTEL, since
    
      c5a5dc4cbbf4 ("iommu/vt-d: Don't switch off swiotlb if bounce page is used")
    
    there's a dependency on CONFIG_SWIOTLB, which was not necessarily
    active before. That landed in v5.4, where we noticed it in the fli4l
    Linux distribution. We have CONFIG_IOMMU_INTEL active on both 32 and 64
    bit kernel configs there (I could not find out why, so let's just say
    historical reasons).
    
    The effect is at boot time 64 MiB (default size) were allocated for
    bounce buffers now, which is a noticeable amount of memory on small
    systems like pcengines ALIX 2D3 with 256 MiB memory, which are still
    frequently used as home routers.
    
    We noticed this effect when migrating from kernel v4.19 (LTS) to v5.4
    (LTS) in fli4l and got that kernel messages for example:
    
      Linux version 5.4.22 (buildroot@buildroot) (gcc version 7.3.0 (Buildroot 2018.02.8)) #1 SMP Mon Nov 26 23:40:00 CET 2018
      …
      Memory: 183484K/261756K available (4594K kernel code, 393K rwdata, 1660K rodata, 536K init, 456K bss , 78272K reserved, 0K cma-reserved, 0K highmem)
      …
      PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
      software IO TLB: mapped [mem 0x0bb78000-0x0fb78000] (64MB)
    
    The initial analysis and the suggested fix was done by user 'sourcejedi'
    at stackoverflow and explicitly marked as GPLv2 for inclusion in the
    Linux kernel:
    
      https://unix.stackexchange.com/a/520525/50007
    
    The new calculation, which does not suffer from that overflow, is the
    same as for arch/mips now as suggested by Robin Murphy.
    
    The fix was tested by fli4l users on round about two dozen different
    systems, including both 32 and 64 bit archs, bare metal and virtualized
    machines.
    
     [ bp: Massage commit message. ]
    
    Fixes: 1b7e03ef7570 ("x86, NUMA: Enable emulation on 32bit too")
    Reported-by: Alan Jenkins <alan.christopher.jenkins@gmail.com>
    Suggested-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Alexander Dahl <post@lespocky.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org
    Link: https://unix.stackexchange.com/q/520065/50007
    Link: https://web.nettworks.org/bugs/browse/FFL-2560
    Link: https://lkml.kernel.org/r/20200526175749.20742-1-post@lespocky.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e57ed07d5321dd2ceeaba2ed890c5057b7d1a34d
Author: Linus Lüssing <ll@simonwunderlich.de>
Date:   Fri May 22 19:04:13 2020 +0200

    mac80211: mesh: fix discovery timer re-arming issue / crash
    
    commit e2d4a80f93fcfaf72e2e20daf6a28e39c3b90677 upstream.
    
    On a non-forwarding 802.11s link between two fairly busy
    neighboring nodes (iperf with -P 16 at ~850MBit/s TCP;
    1733.3 MBit/s VHT-MCS 9 80MHz short GI VHT-NSS 4), so with
    frequent PREQ retries, usually after around 30-40 seconds the
    following crash would occur:
    
    [ 1110.822428] Unable to handle kernel read from unreadable memory at virtual address 00000000
    [ 1110.830786] Mem abort info:
    [ 1110.833573]   Exception class = IABT (current EL), IL = 32 bits
    [ 1110.839494]   SET = 0, FnV = 0
    [ 1110.842546]   EA = 0, S1PTW = 0
    [ 1110.845678] user pgtable: 4k pages, 48-bit VAs, pgd = ffff800076386000
    [ 1110.852204] [0000000000000000] *pgd=00000000f6322003, *pud=00000000f62de003, *pmd=0000000000000000
    [ 1110.861167] Internal error: Oops: 86000004 [#1] PREEMPT SMP
    [ 1110.866730] Modules linked in: pppoe ppp_async batman_adv ath10k_pci ath10k_core ath pppox ppp_generic nf_conntrack_ipv6 mac80211 iptable_nat ipt_REJECT ipt_MASQUERADE cfg80211 xt_time xt_tcpudp xt_state xt_nat xt_multiport xt_mark xt_mac xt_limit xt_conntrack xt_comment xt_TCPMSS xt_REDIRECT xt_LOG xt_FLOWOFFLOAD slhc nf_reject_ipv4 nf_nat_redirect nf_nat_masquerade_ipv4 nf_conntrack_ipv4 nf_nat_ipv4 nf_nat nf_log_ipv4 nf_flow_table_hw nf_flow_table nf_defrag_ipv6 nf_defrag_ipv4 nf_conntrack_rtcache nf_conntrack iptable_mangle iptable_filter ip_tables crc_ccitt compat nf_log_ipv6 nf_log_common ip6table_mangle ip6table_filter ip6_tables ip6t_REJECT x_tables nf_reject_ipv6 usb_storage xhci_plat_hcd xhci_pci xhci_hcd dwc3 usbcore usb_common
    [ 1110.932190] Process swapper/3 (pid: 0, stack limit = 0xffff0000090c8000)
    [ 1110.938884] CPU: 3 PID: 0 Comm: swapper/3 Not tainted 4.14.162 #0
    [ 1110.944965] Hardware name: LS1043A RGW Board (DT)
    [ 1110.949658] task: ffff8000787a81c0 task.stack: ffff0000090c8000
    [ 1110.955568] PC is at 0x0
    [ 1110.958097] LR is at call_timer_fn.isra.27+0x24/0x78
    [ 1110.963055] pc : [<0000000000000000>] lr : [<ffff0000080ff29c>] pstate: 00400145
    [ 1110.970440] sp : ffff00000801be10
    [ 1110.973744] x29: ffff00000801be10 x28: ffff000008bf7018
    [ 1110.979047] x27: ffff000008bf87c8 x26: ffff000008c160c0
    [ 1110.984352] x25: 0000000000000000 x24: 0000000000000000
    [ 1110.989657] x23: dead000000000200 x22: 0000000000000000
    [ 1110.994959] x21: 0000000000000000 x20: 0000000000000101
    [ 1111.000262] x19: ffff8000787a81c0 x18: 0000000000000000
    [ 1111.005565] x17: ffff0000089167b0 x16: 0000000000000058
    [ 1111.010868] x15: ffff0000089167b0 x14: 0000000000000000
    [ 1111.016172] x13: ffff000008916788 x12: 0000000000000040
    [ 1111.021475] x11: ffff80007fda9af0 x10: 0000000000000001
    [ 1111.026777] x9 : ffff00000801bea0 x8 : 0000000000000004
    [ 1111.032080] x7 : 0000000000000000 x6 : ffff80007fda9aa8
    [ 1111.037383] x5 : ffff00000801bea0 x4 : 0000000000000010
    [ 1111.042685] x3 : ffff00000801be98 x2 : 0000000000000614
    [ 1111.047988] x1 : 0000000000000000 x0 : 0000000000000000
    [ 1111.053290] Call trace:
    [ 1111.055728] Exception stack(0xffff00000801bcd0 to 0xffff00000801be10)
    [ 1111.062158] bcc0:                                   0000000000000000 0000000000000000
    [ 1111.069978] bce0: 0000000000000614 ffff00000801be98 0000000000000010 ffff00000801bea0
    [ 1111.077798] bd00: ffff80007fda9aa8 0000000000000000 0000000000000004 ffff00000801bea0
    [ 1111.085618] bd20: 0000000000000001 ffff80007fda9af0 0000000000000040 ffff000008916788
    [ 1111.093437] bd40: 0000000000000000 ffff0000089167b0 0000000000000058 ffff0000089167b0
    [ 1111.101256] bd60: 0000000000000000 ffff8000787a81c0 0000000000000101 0000000000000000
    [ 1111.109075] bd80: 0000000000000000 dead000000000200 0000000000000000 0000000000000000
    [ 1111.116895] bda0: ffff000008c160c0 ffff000008bf87c8 ffff000008bf7018 ffff00000801be10
    [ 1111.124715] bdc0: ffff0000080ff29c ffff00000801be10 0000000000000000 0000000000400145
    [ 1111.132534] bde0: ffff8000787a81c0 ffff00000801bde8 0000ffffffffffff 000001029eb19be8
    [ 1111.140353] be00: ffff00000801be10 0000000000000000
    [ 1111.145220] [<          (null)>]           (null)
    [ 1111.149917] [<ffff0000080ff77c>] run_timer_softirq+0x184/0x398
    [ 1111.155741] [<ffff000008081938>] __do_softirq+0x100/0x1fc
    [ 1111.161130] [<ffff0000080a2e28>] irq_exit+0x80/0xd8
    [ 1111.166002] [<ffff0000080ea708>] __handle_domain_irq+0x88/0xb0
    [ 1111.171825] [<ffff000008081678>] gic_handle_irq+0x68/0xb0
    [ 1111.177213] Exception stack(0xffff0000090cbe30 to 0xffff0000090cbf70)
    [ 1111.183642] be20:                                   0000000000000020 0000000000000000
    [ 1111.191461] be40: 0000000000000001 0000000000000000 00008000771af000 0000000000000000
    [ 1111.199281] be60: ffff000008c95180 0000000000000000 ffff000008c19360 ffff0000090cbef0
    [ 1111.207101] be80: 0000000000000810 0000000000000400 0000000000000098 ffff000000000000
    [ 1111.214920] bea0: 0000000000000001 ffff0000089167b0 0000000000000000 ffff0000089167b0
    [ 1111.222740] bec0: 0000000000000000 ffff000008c198e8 ffff000008bf7018 ffff000008c19000
    [ 1111.230559] bee0: 0000000000000000 0000000000000000 ffff8000787a81c0 ffff000008018000
    [ 1111.238380] bf00: ffff00000801c000 ffff00000913ba34 ffff8000787a81c0 ffff0000090cbf70
    [ 1111.246199] bf20: ffff0000080857cc ffff0000090cbf70 ffff0000080857d0 0000000000400145
    [ 1111.254020] bf40: ffff000008018000 ffff00000801c000 ffffffffffffffff ffff0000080fa574
    [ 1111.261838] bf60: ffff0000090cbf70 ffff0000080857d0
    [ 1111.266706] [<ffff0000080832e8>] el1_irq+0xe8/0x18c
    [ 1111.271576] [<ffff0000080857d0>] arch_cpu_idle+0x10/0x18
    [ 1111.276880] [<ffff0000080d7de4>] do_idle+0xec/0x1b8
    [ 1111.281748] [<ffff0000080d8020>] cpu_startup_entry+0x20/0x28
    [ 1111.287399] [<ffff00000808f81c>] secondary_start_kernel+0x104/0x110
    [ 1111.293662] Code: bad PC value
    [ 1111.296710] ---[ end trace 555b6ca4363c3edd ]---
    [ 1111.301318] Kernel panic - not syncing: Fatal exception in interrupt
    [ 1111.307661] SMP: stopping secondary CPUs
    [ 1111.311574] Kernel Offset: disabled
    [ 1111.315053] CPU features: 0x0002000
    [ 1111.318530] Memory Limit: none
    [ 1111.321575] Rebooting in 3 seconds..
    
    With some added debug output / delays we were able to push the crash from
    the timer callback runner into the callback function and by that shedding
    some light on which object holding the timer gets corrupted:
    
    [  401.720899] Unable to handle kernel read from unreadable memory at virtual address 00000868
    [...]
    [  402.335836] [<ffff0000088fafa4>] _raw_spin_lock_bh+0x14/0x48
    [  402.341548] [<ffff000000dbe684>] mesh_path_timer+0x10c/0x248 [mac80211]
    [  402.348154] [<ffff0000080ff29c>] call_timer_fn.isra.27+0x24/0x78
    [  402.354150] [<ffff0000080ff77c>] run_timer_softirq+0x184/0x398
    [  402.359974] [<ffff000008081938>] __do_softirq+0x100/0x1fc
    [  402.365362] [<ffff0000080a2e28>] irq_exit+0x80/0xd8
    [  402.370231] [<ffff0000080ea708>] __handle_domain_irq+0x88/0xb0
    [  402.376053] [<ffff000008081678>] gic_handle_irq+0x68/0xb0
    
    The issue happens due to the following sequence of events:
    
    1) mesh_path_start_discovery():
    -> spin_unlock_bh(&mpath->state_lock) before mesh_path_sel_frame_tx()
    
    2) mesh_path_free_rcu()
    -> del_timer_sync(&mpath->timer)
       [...]
    -> kfree_rcu(mpath)
    
    3) mesh_path_start_discovery():
    -> mod_timer(&mpath->timer, ...)
       [...]
    -> rcu_read_unlock()
    
    4) mesh_path_free_rcu()'s kfree_rcu():
    -> kfree(mpath)
    
    5) mesh_path_timer() starts after timeout, using freed mpath object
    
    So a use-after-free issue due to a timer re-arming bug caused by an
    early spin-unlocking.
    
    This patch fixes this issue by re-checking if mpath is about to be
    free'd and if so bails out of re-arming the timer.
    
    Cc: stable@vger.kernel.org
    Fixes: 050ac52cbe1f ("mac80211: code for on-demand Hybrid Wireless Mesh Protocol")
    Cc: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Linus Lüssing <ll@simonwunderlich.de>
    Link: https://lore.kernel.org/r/20200522170413.14973-1-linus.luessing@c0d3.blue
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cde9a4f6d98c60ea913644aa32987ea20921ebaf
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed May 27 16:55:34 2020 +0300

    RDMA/core: Fix double destruction of uobject
    
    commit c85f4abe66bea0b5db8d28d55da760c4fe0a0301 upstream.
    
    Fix use after free when user user space request uobject concurrently for
    the same object, within the RCU grace period.
    
    In that case, remove_handle_idr_uobject() is called twice and we will have
    an extra put on the uobject which cause use after free.  Fix it by leaving
    the uobject write locked after it was removed from the idr.
    
    Call to rdma_lookup_put_uobject with UVERBS_LOOKUP_DESTROY instead of
    UVERBS_LOOKUP_WRITE will do the work.
    
      refcount_t: underflow; use-after-free.
      WARNING: CPU: 0 PID: 1381 at lib/refcount.c:28 refcount_warn_saturate+0xfe/0x1a0
      Kernel panic - not syncing: panic_on_warn set ...
      CPU: 0 PID: 1381 Comm: syz-executor.0 Not tainted 5.5.0-rc3 #8
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x94/0xce
       panic+0x234/0x56f
       __warn+0x1cc/0x1e1
       report_bug+0x200/0x310
       fixup_bug.part.11+0x32/0x80
       do_error_trap+0xd3/0x100
       do_invalid_op+0x31/0x40
       invalid_op+0x1e/0x30
      RIP: 0010:refcount_warn_saturate+0xfe/0x1a0
      Code: 0f 0b eb 9b e8 23 f6 6d ff 80 3d 6c d4 19 03 00 75 8d e8 15 f6 6d ff 48 c7 c7 c0 02 55 bd c6 05 57 d4 19 03 01 e8 a2 58 49 ff <0f> 0b e9 6e ff ff ff e8 f6 f5 6d ff 80 3d 42 d4 19 03 00 0f 85 5c
      RSP: 0018:ffffc90002df7b98 EFLAGS: 00010282
      RAX: 0000000000000000 RBX: ffff88810f6a193c RCX: ffffffffba649009
      RDX: 0000000000000000 RSI: 0000000000000008 RDI: ffff88811b0283cc
      RBP: 0000000000000003 R08: ffffed10236060e3 R09: ffffed10236060e3
      R10: 0000000000000001 R11: ffffed10236060e2 R12: ffff88810f6a193c
      R13: ffffc90002df7d60 R14: 0000000000000000 R15: ffff888116ae6a08
       uverbs_uobject_put+0xfd/0x140
       __uobj_perform_destroy+0x3d/0x60
       ib_uverbs_close_xrcd+0x148/0x170
       ib_uverbs_write+0xaa5/0xdf0
       __vfs_write+0x7c/0x100
       vfs_write+0x168/0x4a0
       ksys_write+0xc8/0x200
       do_syscall_64+0x9c/0x390
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x465b49
      Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
      RSP: 002b:00007f759d122c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
      RAX: ffffffffffffffda RBX: 000000000073bfa8 RCX: 0000000000465b49
      RDX: 000000000000000c RSI: 0000000020000080 RDI: 0000000000000003
      RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000246 R12: 00007f759d1236bc
      R13: 00000000004ca27c R14: 000000000070de40 R15: 00000000ffffffff
      Dumping ftrace buffer:
         (ftrace buffer empty)
      Kernel Offset: 0x39400000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
    
    Fixes: 7452a3c745a2 ("IB/uverbs: Allow RDMA_REMOVE_DESTROY to work concurrently with disassociate")
    Link: https://lore.kernel.org/r/20200527135534.482279-1-leon@kernel.org
    Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34141cb87719f65dfb88990d29f47b00f6697711
Author: Sarthak Garg <sartgarg@codeaurora.org>
Date:   Thu May 7 21:45:33 2020 +0530

    mmc: core: Fix recursive locking issue in CQE recovery path
    
    commit 39a22f73744d5baee30b5f134ae2e30b668b66ed upstream.
    
    Consider the following stack trace
    
    -001|raw_spin_lock_irqsave
    -002|mmc_blk_cqe_complete_rq
    -003|__blk_mq_complete_request(inline)
    -003|blk_mq_complete_request(rq)
    -004|mmc_cqe_timed_out(inline)
    -004|mmc_mq_timed_out
    
    mmc_mq_timed_out acquires the queue_lock for the first
    time. The mmc_blk_cqe_complete_rq function also tries to acquire
    the same queue lock resulting in recursive locking where the task
    is spinning for the same lock which it has already acquired leading
    to watchdog bark.
    
    Fix this issue with the lock only for the required critical section.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 1e8e55b67030 ("mmc: block: Add CQE support")
    Suggested-by: Sahitya Tummala <stummala@codeaurora.org>
    Signed-off-by: Sarthak Garg <sartgarg@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/1588868135-31783-1-git-send-email-vbadigan@codeaurora.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52234e551889d21dea57f3141249976f31674a2f
Author: Helge Deller <deller@gmx.de>
Date:   Thu May 28 22:29:25 2020 +0200

    parisc: Fix kernel panic in mem_init()
    
    commit bf71bc16e02162388808949b179d59d0b571b965 upstream.
    
    The Debian kernel v5.6 triggers this kernel panic:
    
     Kernel panic - not syncing: Bad Address (null pointer deref?)
     Bad Address (null pointer deref?): Code=26 (Data memory access rights trap) at addr 0000000000000000
     CPU: 0 PID: 0 Comm: swapper Not tainted 5.6.0-2-parisc64 #1 Debian 5.6.14-1
      IAOQ[0]: mem_init+0xb0/0x150
      IAOQ[1]: mem_init+0xb4/0x150
      RP(r2): start_kernel+0x6c8/0x1190
     Backtrace:
      [<0000000040101ab4>] start_kernel+0x6c8/0x1190
      [<0000000040108574>] start_parisc+0x158/0x1b8
    
    on a HP-PARISC rp3440 machine with this memory layout:
     Memory Ranges:
      0) Start 0x0000000000000000 End 0x000000003fffffff Size   1024 MB
      1) Start 0x0000004040000000 End 0x00000040ffdfffff Size   3070 MB
    
    Fix the crash by avoiding virt_to_page() and similar functions in
    mem_init() until the memory zones have been fully set up.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.0+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dc3cd0981c78d0b1669104aa9d28e3c3ce5460c
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Wed May 27 16:00:19 2020 -0500

    iommu: Fix reference count leak in iommu_group_alloc.
    
    [ Upstream commit 7cc31613734c4870ae32f5265d576ef296621343 ]
    
    kobject_init_and_add() takes reference even when it fails.
    Thus, when kobject_init_and_add() returns an error,
    kobject_put() must be called to properly clean up the kobject.
    
    Fixes: d72e31c93746 ("iommu: IOMMU Groups")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Link: https://lore.kernel.org/r/20200527210020.6522-1-wu000273@umn.edu
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51b779592f63242a603c308190f273c678fcfe81
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed May 27 22:20:55 2020 -0700

    include/asm-generic/topology.h: guard cpumask_of_node() macro argument
    
    [ Upstream commit 4377748c7b5187c3342a60fa2ceb60c8a57a8488 ]
    
    drivers/hwmon/amd_energy.c:195:15: error: invalid operands to binary expression ('void' and 'int')
                                            (channel - data->nr_cpus));
                                            ~~~~~~~~~^~~~~~~~~~~~~~~~~
    include/asm-generic/topology.h:51:42: note: expanded from macro 'cpumask_of_node'
        #define cpumask_of_node(node)       ((void)node, cpu_online_mask)
                                                   ^~~~
    include/linux/cpumask.h:618:72: note: expanded from macro 'cpumask_first_and'
     #define cpumask_first_and(src1p, src2p) cpumask_next_and(-1, (src1p), (src2p))
                                                                           ^~~~~
    
    Fixes: f0b848ce6fe9 ("cpumask: Introduce cpumask_of_{node,pcibus} to replace {node,pcibus}_to_cpumask")
    Fixes: 8abee9566b7e ("hwmon: Add amd_energy driver to report energy counters")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Guenter Roeck <linux@roeck-us.net>
    Link: http://lkml.kernel.org/r/20200527134623.930247-1-arnd@arndb.de
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d16b0abe2687f7f0a2f6343a09797e8aac045c86
Author: Alexander Potapenko <glider@google.com>
Date:   Wed May 27 22:20:52 2020 -0700

    fs/binfmt_elf.c: allocate initialized memory in fill_thread_core_info()
    
    [ Upstream commit 1d605416fb7175e1adf094251466caa52093b413 ]
    
    KMSAN reported uninitialized data being written to disk when dumping
    core.  As a result, several kilobytes of kmalloc memory may be written
    to the core file and then read by a non-privileged user.
    
    Reported-by: sam <sunhaoyl@outlook.com>
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200419100848.63472-1-glider@google.com
    Link: https://github.com/google/kmsan/issues/76
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0985f4713e1ee2d3134503e02be9d391e60366f0
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Wed May 27 22:20:47 2020 -0700

    mm: remove VM_BUG_ON(PageSlab()) from page_mapcount()
    
    [ Upstream commit 6988f31d558aa8c744464a7f6d91d34ada48ad12 ]
    
    Replace superfluous VM_BUG_ON() with comment about correct usage.
    
    Technically reverts commit 1d148e218a0d ("mm: add VM_BUG_ON_PAGE() to
    page_mapcount()"), but context lines have changed.
    
    Function isolate_migratepages_block() runs some checks out of lru_lock
    when choose pages for migration.  After checking PageLRU() it checks
    extra page references by comparing page_count() and page_mapcount().
    Between these two checks page could be removed from lru, freed and taken
    by slab.
    
    As a result this race triggers VM_BUG_ON(PageSlab()) in page_mapcount().
    Race window is tiny.  For certain workload this happens around once a
    year.
    
        page:ffffea0105ca9380 count:1 mapcount:0 mapping:ffff88ff7712c180 index:0x0 compound_mapcount: 0
        flags: 0x500000000008100(slab|head)
        raw: 0500000000008100 dead000000000100 dead000000000200 ffff88ff7712c180
        raw: 0000000000000000 0000000080200020 00000001ffffffff 0000000000000000
        page dumped because: VM_BUG_ON_PAGE(PageSlab(page))
        ------------[ cut here ]------------
        kernel BUG at ./include/linux/mm.h:628!
        invalid opcode: 0000 [#1] SMP NOPTI
        CPU: 77 PID: 504 Comm: kcompactd1 Tainted: G        W         4.19.109-27 #1
        Hardware name: Yandex T175-N41-Y3N/MY81-EX0-Y3N, BIOS R05 06/20/2019
        RIP: 0010:isolate_migratepages_block+0x986/0x9b0
    
    The code in isolate_migratepages_block() was added in commit
    119d6d59dcc0 ("mm, compaction: avoid isolating pinned pages") before
    adding VM_BUG_ON into page_mapcount().
    
    This race has been predicted in 2015 by Vlastimil Babka (see link
    below).
    
    [akpm@linux-foundation.org: comment tweaks, per Hugh]
    Fixes: 1d148e218a0d ("mm: add VM_BUG_ON_PAGE() to page_mapcount()")
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Hugh Dickins <hughd@google.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: David Rientjes <rientjes@google.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/159032779896.957378.7852761411265662220.stgit@buzz
    Link: https://lore.kernel.org/lkml/557710E1.6060103@suse.cz/
    Link: https://lore.kernel.org/linux-mm/158937872515.474360.5066096871639561424.stgit@buzz/T/ (v1)
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 977436cff6b12abed81bfcb8a839a4f633e8984a
Author: Valentine Fatiev <valentinef@mellanox.com>
Date:   Wed May 27 16:47:05 2020 +0300

    IB/ipoib: Fix double free of skb in case of multicast traffic in CM mode
    
    [ Upstream commit 1acba6a817852d4aa7916d5c4f2c82f702ee9224 ]
    
    When connected mode is set, and we have connected and datagram traffic in
    parallel, ipoib might crash with double free of datagram skb.
    
    The current mechanism assumes that the order in the completion queue is
    the same as the order of sent packets for all QPs. Order is kept only for
    specific QP, in case of mixed UD and CM traffic we have few QPs (one UD and
    few CM's) in parallel.
    
    The problem:
    ----------------------------------------------------------
    
    Transmit queue:
    -----------------
    UD skb pointer kept in queue itself, CM skb kept in spearate queue and
    uses transmit queue as a placeholder to count the number of total
    transmitted packets.
    
    0   1   2   3   4  5  6  7  8   9  10  11 12 13 .........127
    ------------------------------------------------------------
    NL ud1 UD2 CM1 ud3 cm2 cm3 ud4 cm4 ud5 NL NL NL ...........
    ------------------------------------------------------------
        ^                                  ^
       tail                               head
    
    Completion queue (problematic scenario) - the order not the same as in
    the transmit queue:
    
      1  2  3  4  5  6  7  8  9
    ------------------------------------
     ud1 CM1 UD2 ud3 cm2 cm3 ud4 cm4 ud5
    ------------------------------------
    
    1. CM1 'wc' processing
       - skb freed in cm separate ring.
       - tx_tail of transmit queue increased although UD2 is not freed.
         Now driver assumes UD2 index is already freed and it could be used for
         new transmitted skb.
    
    0   1   2   3   4  5  6  7  8   9  10  11 12 13 .........127
    ------------------------------------------------------------
    NL NL  UD2 CM1 ud3 cm2 cm3 ud4 cm4 ud5 NL NL NL ...........
    ------------------------------------------------------------
            ^   ^                       ^
          (Bad)tail                    head
    (Bad - Could be used for new SKB)
    
    In this case (due to heavy load) UD2 skb pointer could be replaced by new
    transmitted packet UD_NEW, as the driver assumes its free.  At this point
    we will have to process two 'wc' with same index but we have only one
    pointer to free.
    
    During second attempt to free the same skb we will have NULL pointer
    exception.
    
    2. UD2 'wc' processing
       - skb freed according the index we got from 'wc', but it was already
         overwritten by mistake. So actually the skb that was released is the
         skb of the new transmitted packet and not the original one.
    
    3. UD_NEW 'wc' processing
       - attempt to free already freed skb. NUll pointer exception.
    
    The fix:
    -----------------------------------------------------------------------
    
    The fix is to stop using the UD ring as a placeholder for CM packets, the
    cyclic ring variables tx_head and tx_tail will manage the UD tx_ring, a
    new cyclic variables global_tx_head and global_tx_tail are introduced for
    managing and counting the overall outstanding sent packets, then the send
    queue will be stopped and waken based on these variables only.
    
    Note that no locking is needed since global_tx_head is updated in the xmit
    flow and global_tx_tail is updated in the NAPI flow only.  A previous
    attempt tried to use one variable to count the outstanding sent packets,
    but it did not work since xmit and NAPI flows can run at the same time and
    the counter will be updated wrongly. Thus, we use the same simple cyclic
    head and tail scheme that we have today for the UD tx_ring.
    
    Fixes: 2c104ea68350 ("IB/ipoib: Get rid of the tx_outstanding variable in all modes")
    Link: https://lore.kernel.org/r/20200527134705.480068-1-leon@kernel.org
    Signed-off-by: Valentine Fatiev <valentinef@mellanox.com>
    Signed-off-by: Alaa Hleihel <alaa@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Acked-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49998bbee904c95a6fa6d9b74a066d35ea2195a0
Author: Jerry Lee <leisurelysw24@gmail.com>
Date:   Mon May 18 16:03:09 2020 +0800

    libceph: ignore pool overlay and cache logic on redirects
    
    [ Upstream commit 890bd0f8997ae6ac0a367dd5146154a3963306dd ]
    
    OSD client should ignore cache/overlay flag if got redirect reply.
    Otherwise, the client hangs when the cache tier is in forward mode.
    
    [ idryomov: Redirects are effectively deprecated and no longer
      used or tested.  The original tiering modes based on redirects
      are inherently flawed because redirects can race and reorder,
      potentially resulting in data corruption.  The new proxy and
      readproxy tiering modes should be used instead of forward and
      readforward.  Still marking for stable as obviously correct,
      though. ]
    
    Cc: stable@vger.kernel.org
    URL: https://tracker.ceph.com/issues/23296
    URL: https://tracker.ceph.com/issues/36406
    Signed-off-by: Jerry Lee <leisurelysw24@gmail.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccc9da3602d6941c705b3ff19fda89e917501550
Author: Kailang Yang <kailang@realtek.com>
Date:   Wed May 27 14:10:26 2020 +0800

    ALSA: hda/realtek - Add new codec supported for ALC287
    
    [ Upstream commit 630e36126e420e1756378b3427b42711ce0b9ddd ]
    
    Enable new codec supported for ALC287.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/dcf5ce5507104d0589a917cbb71dc3c6@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59edcbe06687a9dbd3bbfccbb2f706adecf91402
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue May 26 10:28:10 2020 +0200

    ALSA: usb-audio: Quirks for Gigabyte TRX40 Aorus Master onboard audio
    
    [ Upstream commit 7f5ad9c9003425175f46c94df380e8c9e558cfb5 ]
    
    Gigabyte TRX40 Aorus Master is equipped with two USB-audio devices,
    a Realtek ALC1220-VB codec (USB ID 0414:a001) and an ESS SABRE9218 DAC
    (USB ID 0414:a000).  The latter serves solely for the headphone output
    on the front panel while the former serves for the rest I/Os (mostly
    for the I/Os in the rear panel but also including the front mic).
    
    Both chips do work more or less with the unmodified USB-audio driver,
    but there are a few glitches.  The ALC1220-VB returns an error for an
    inquiry to some jacks, as already seen on other TRX40-based mobos.
    However this machine has a slightly incompatible configuration, hence
    the existing mapping cannot be used as is.
    
    Meanwhile the ESS chip seems working without any quirk.  But since
    both audio devices don't provide any specific names, both cards appear
    as "USB-Audio", and it's quite confusing for users.
    
    This patch is an attempt to overcome those issues:
    
    - The specific mapping table for ALC1220-VB is provided, reducing the
      non-working nodes and renaming the badly chosen controls.
      The connector map isn't needed here unlike other TRX40 quirks.
    
    - For both USB IDs (0414:a000 and 0414:a001), provide specific card
      name strings, so that user-space can identify more easily; and more
      importantly, UCM profile can be applied to each.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200526082810.29506-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c45ea17efe78addf03c586690cf8ba9cc0a1839
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon May 25 12:56:15 2020 -0500

    exec: Always set cap_ambient in cap_bprm_set_creds
    
    [ Upstream commit a4ae32c71fe90794127b32d26d7ad795813b502e ]
    
    An invariant of cap_bprm_set_creds is that every field in the new cred
    structure that cap_bprm_set_creds might set, needs to be set every
    time to ensure the fields does not get a stale value.
    
    The field cap_ambient is not set every time cap_bprm_set_creds is
    called, which means that if there is a suid or sgid script with an
    interpreter that has neither the suid nor the sgid bits set the
    interpreter should be able to accept ambient credentials.
    Unfortuantely because cap_ambient is not reset to it's original value
    the interpreter can not accept ambient credentials.
    
    Given that the ambient capability set is expected to be controlled by
    the caller, I don't think this is particularly serious.  But it is
    definitely worth fixing so the code works correctly.
    
    I have tested to verify my reading of the code is correct and the
    interpreter of a sgid can receive ambient capabilities with this
    change and cannot receive ambient capabilities without this change.
    
    Cc: stable@vger.kernel.org
    Cc: Andy Lutomirski <luto@kernel.org>
    Fixes: 58319057b784 ("capabilities: ambient capabilities")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5870873c4a6fb716129388395ef9de579d1d51c3
Author: Chris Chiu <chiu@endlessm.com>
Date:   Tue May 26 14:26:13 2020 +0800

    ALSA: usb-audio: mixer: volume quirk for ESS Technology Asus USB DAC
    
    [ Upstream commit 4020d1ccbe55bdf67b31d718d2400506eaf4b43f ]
    
    The Asus USB DAC is a USB type-C audio dongle for connecting to
    the headset and headphone. The volume minimum value -23040 which
    is 0xa600 in hexadecimal with the resolution value 1 indicates
    this should be endianness issue caused by the firmware bug. Add
    a volume quirk to fix the volume control problem.
    
    Also fixes this warning:
      Warning! Unlikely big volume range (=23040), cval->res is probably wrong.
      [5] FU [Headset Capture Volume] ch = 1, val = -23040/0/1
      Warning! Unlikely big volume range (=23040), cval->res is probably wrong.
      [7] FU [Headset Playback Volume] ch = 1, val = -23040/0/1
    
    Signed-off-by: Chris Chiu <chiu@endlessm.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200526062613.55401-1-chiu@endlessm.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5151c8e3de5b1212bd8c59fade217208f73422d6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue May 26 08:24:06 2020 +0200

    ALSA: hda/realtek - Add a model for Thinkpad T570 without DAC workaround
    
    [ Upstream commit 399c01aa49e548c82d40f8161915a5941dd3c60e ]
    
    We fixed the regression of the speaker volume for some Thinkpad models
    (e.g. T570) by the commit 54947cd64c1b ("ALSA: hda/realtek - Fix
    speaker output regression on Thinkpad T570").  Essentially it fixes
    the DAC / pin pairing by a static table.  It was confirmed and merged
    to stable kernel later.
    
    Now, interestingly, we got another regression report for the very same
    model (T570) about the similar problem, and the commit above was the
    culprit.  That is, by some reason, there are devices that prefer the
    DAC1, and another device DAC2!
    
    Unfortunately those have the same ID and we have no idea what can
    differentiate, in this patch, a new fixup model "tpt470-dock-fix" is
    provided, so that users with such a machine can apply it manually.
    When model=tpt470-dock-fix option is passed to snd-hda-intel module,
    it avoids the fixed DAC pairing and the DAC1 is assigned to the
    speaker like the earlier versions.
    
    Fixes: 54947cd64c1b ("ALSA: hda/realtek - Fix speaker output regression on Thinkpad T570")
    BugLink: https://apibugzilla.suse.com/show_bug.cgi?id=1172017
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200526062406.9799-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9ee8f97f94a468c82b6d7bce5815950db79e52d
Author: Changming Liu <liu.changm@northeastern.edu>
Date:   Tue May 26 00:39:21 2020 +0000

    ALSA: hwdep: fix a left shifting 1 by 31 UB bug
    
    [ Upstream commit fb8cd6481ffd126f35e9e146a0dcf0c4e8899f2e ]
    
    The "info.index" variable can be 31 in "1 << info.index".
    This might trigger an undefined behavior since 1 is signed.
    
    Fix this by casting 1 to 1u just to be sure "1u << 31" is defined.
    
    Signed-off-by: Changming Liu <liu.changm@northeastern.edu>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/BL0PR06MB4548170B842CB055C9AF695DE5B00@BL0PR06MB4548.namprd06.prod.outlook.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8ed2ff71f0899125786ac32d69a38432f3f8129
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Fri May 22 22:04:57 2020 -0500

    RDMA/pvrdma: Fix missing pci disable in pvrdma_pci_probe()
    
    [ Upstream commit db857e6ae548f0f4f4a0f63fffeeedf3cca21f9d ]
    
    In function pvrdma_pci_probe(), pdev was not disabled in one error
    path. Thus replace the jump target “err_free_device” by
    "err_disable_pdev".
    
    Fixes: 29c8d9eba550 ("IB: Add vmw_pvrdma driver")
    Link: https://lore.kernel.org/r/20200523030457.16160-1-wu000273@umn.edu
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f5562d73c0379f562c3fd32f5062cb1e052bd8c
Author: Peng Hao <richard.peng@oppo.com>
Date:   Fri May 22 09:29:25 2020 +0000

    mmc: block: Fix use-after-free issue for rpmb
    
    [ Upstream commit 202500d21654874aa03243e91f96de153ec61860 ]
    
    The data structure member “rpmb->md” was passed to a call of the function
    “mmc_blk_put” after a call of the function “put_device”. Reorder these
    function calls to keep the data accesses consistent.
    
    Fixes: 1c87f7357849 ("mmc: block: Fix bug when removing RPMB chardev ")
    Signed-off-by: Peng Hao <richard.peng@oppo.com>
    Cc: stable@vger.kernel.org
    [Uffe: Fixed up mangled patch and updated commit message]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78b83e797576b55a819d7193057bc81b1e6a0dc0
Author: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
Date:   Wed May 20 16:30:42 2020 +1200

    ARM: dts: bcm: HR2: Fix PPI interrupt types
    
    [ Upstream commit be0ec060b54f0481fb95d59086c1484a949c903c ]
    
    These error messages are output when booting on a BCM HR2 system:
        GIC: PPI11 is secure or misconfigured
        GIC: PPI13 is secure or misconfigured
    
    Per ARM documentation these interrupts are triggered on a rising edge.
    See ARM Cortex A-9 MPCore Technical Reference Manual, Revision r4p1,
    Section 3.3.8 Interrupt Configuration Registers.
    
    The same issue was resolved for NSP systems in commit 5f1aa51c7a1e
    ("ARM: dts: NSP: Fix PPI interrupt types").
    
    Fixes: b9099ec754b5 ("ARM: dts: Add Broadcom Hurricane 2 DTS include file")
    Signed-off-by: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d657b5c06b970a0ded4a2648ac0ff2d3bb244af
Author: Vincent Stehlé <vincent.stehle@laposte.net>
Date:   Sat Apr 18 14:35:22 2020 +0200

    ARM: dts: bcm2835-rpi-zero-w: Fix led polarity
    
    [ Upstream commit 58bb90ab415562eededb932455046924e65df342 ]
    
    The status "ACT" led on the Raspberry Pi Zero W is on when GPIO 47 is low.
    
    This has been verified on a board and somewhat confirmed by both the GPIO
    name ("STATUS_LED_N") and the reduced schematics [1].
    
    [1]: https://www.raspberrypi.org/documentation/hardware/raspberrypi/schematics/rpi_SCH_ZeroW_1p1_reduced.pdf
    
    Fixes: 2c7c040c73e9 ("ARM: dts: bcm2835: Add Raspberry Pi Zero W")
    Signed-off-by: Vincent Stehlé <vincent.stehle@laposte.net>
    Cc: Stefan Wahren <stefan.wahren@i2se.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6811a01ab790310895d5f3f586db34ee5e39f7c5
Author: Robert Beckett <bob.beckett@collabora.com>
Date:   Thu May 14 19:02:37 2020 +0200

    ARM: dts/imx6q-bx50v3: Set display interface clock parents
    
    [ Upstream commit 665e7c73a7724a393b4ec92d1ae1e029925ef2b7 ]
    
    Avoid LDB and IPU DI clocks both using the same parent. LDB requires
    pasthrough clock to avoid breaking timing while IPU DI does not.
    
    Force IPU DI clocks to use IMX6QDL_CLK_PLL2_PFD0_352M as parent
    and LDB to use IMX6QDL_CLK_PLL5_VIDEO_DIV.
    
    This fixes an issue where attempting atomic modeset while using
    HDMI and display port at the same time causes LDB clock programming
    to destroy the programming of HDMI that was done during the same
    modeset.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Robert Beckett <bob.beckett@collabora.com>
    [Use IMX6QDL_CLK_PLL2_PFD0_352M instead of IMX6QDL_CLK_PLL2_PFD2_396M
     originally chosen by Robert Beckett to avoid affecting eMMC clock
     by DRM atomic updates]
    Signed-off-by: Ian Ray <ian.ray@ge.com>
    [Squash Robert's and Ian's commits for bisectability, update patch
     description and add stable tag]
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8b8421e97338776ee4b76313ad8fb09a620b568
Author: Kaike Wan <kaike.wan@intel.com>
Date:   Mon May 11 23:13:28 2020 -0400

    IB/qib: Call kobject_put() when kobject_init_and_add() fails
    
    [ Upstream commit a35cd6447effd5c239b564c80fa109d05ff3d114 ]
    
    When kobject_init_and_add() returns an error in the function
    qib_create_port_files(), the function kobject_put() is not called for the
    corresponding kobject, which potentially leads to memory leak.
    
    This patch fixes the issue by calling kobject_put() even if
    kobject_init_and_add() fails. In addition, the ppd->diagc_kobj is released
    along with other kobjects when the sysfs is unregistered.
    
    Fixes: f931551bafe1 ("IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters")
    Link: https://lore.kernel.org/r/20200512031328.189865.48627.stgit@awfm-01.aw.intel.com
    Cc: <stable@vger.kernel.org>
    Suggested-by: Lin Yi <teroincn@gmail.com>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d688e0f09dee3d9d513fe6758376b293d72243e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 29 15:56:54 2020 +0200

    gpio: exar: Fix bad handling for ida_simple_get error path
    
    [ Upstream commit 333830aa149a87cabeb5d30fbcf12eecc8040d2c ]
    
    The commit 7ecced0934e5 ("gpio: exar: add a check for the return value
    of ida_simple_get fails") added a goto jump to the common error
    handler for ida_simple_get() error, but this is wrong in two ways:
    it doesn't set the proper return code and, more badly, it invokes
    ida_simple_remove() with a negative index that shall lead to a kernel
    panic via BUG_ON().
    
    This patch addresses those two issues.
    
    Fixes: 7ecced0934e5 ("gpio: exar: add a check for the return value of ida_simple_get fails")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efae52019b283fa48ed05f23a5cdd278e7be2984
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sun May 3 13:24:07 2020 +0100

    ARM: uaccess: fix DACR mismatch with nested exceptions
    
    [ Upstream commit 71f8af1110101facfad68989ff91f88f8e2c3e22 ]
    
    Tomas Paukrt reports that his SAM9X60 based system (ARM926, ARMv5TJ)
    fails to fix up alignment faults, eventually resulting in a kernel
    oops.
    
    The problem occurs when using CONFIG_CPU_USE_DOMAINS with commit
    e6978e4bf181 ("ARM: save and reset the address limit when entering an
    exception").  This is because the address limit is set back to
    TASK_SIZE on exception entry, and, although it is restored on exception
    exit, the domain register is not.
    
    Hence, this sequence can occur:
    
      interrupt
        pt_regs->addr_limit = addr_limit            // USER_DS
        addr_limit = USER_DS
        alignment exception
        __probe_kernel_read()
          old_fs = get_fs()                         // USER_DS
          set_fs(KERNEL_DS)
            addr_limit = KERNEL_DS
            dacr.kernel = DOMAIN_MANAGER
            interrupt
              pt_regs->addr_limit = addr_limit      // KERNEL_DS
              addr_limit = USER_DS
              alignment exception
              __probe_kernel_read()
                old_fs = get_fs()                   // USER_DS
                set_fs(KERNEL_DS)
                  addr_limit = KERNEL_DS
                  dacr.kernel = DOMAIN_MANAGER
                ...
                set_fs(old_fs)
                  addr_limit = USER_DS
                  dacr.kernel = DOMAIN_CLIENT
              ...
              addr_limit = pt_regs->addr_limit      // KERNEL_DS
            interrupt returns
    
    At this point, addr_limit is correctly restored to KERNEL_DS for
    __probe_kernel_read() to continue execution, but dacr.kernel is not,
    it has been reset by the set_fs(old_fs) to DOMAIN_CLIENT.
    
    This would not have happened prior to the mentioned commit, because
    addr_limit would remain KERNEL_DS, so get_fs() would have returned
    KERNEL_DS, and so would correctly nest.
    
    This commit fixes the problem by also saving the DACR on exception
    entry if either CONFIG_CPU_SW_DOMAIN_PAN or CONFIG_CPU_USE_DOMAINS are
    enabled, and resetting the DACR appropriately on exception entry to
    match addr_limit and PAN settings.
    
    Fixes: e6978e4bf181 ("ARM: save and reset the address limit when entering an exception")
    Reported-by: Tomas Paukrt <tomas.paukrt@advantech.cz>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ab3d9d68cc9d7bbf1223e63e5c5562c29aa3baf
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sun May 3 13:14:09 2020 +0100

    ARM: uaccess: integrate uaccess_save and uaccess_restore
    
    [ Upstream commit 8ede890b0bcebe8c760aacfe20e934d98c3dc6aa ]
    
    Integrate uaccess_save / uaccess_restore macros into the new
    uaccess_entry / uaccess_exit macros respectively.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abd641e92d6e6dbc86778b3843811368b5ffce08
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sun May 3 13:03:54 2020 +0100

    ARM: uaccess: consolidate uaccess asm to asm/uaccess-asm.h
    
    [ Upstream commit 747ffc2fcf969eff9309d7f2d1d61cb8b9e1bb40 ]
    
    Consolidate the user access assembly code to asm/uaccess-asm.h.  This
    moves the csdb, check_uaccess, uaccess_mask_range_ptr, uaccess_enable,
    uaccess_disable, uaccess_save, uaccess_restore macros, and creates two
    new ones for exception entry and exit - uaccess_entry and uaccess_exit.
    
    This makes the uaccess_save and uaccess_restore macros private to
    asm/uaccess-asm.h.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54f4bbd890f6da399652041918269e10e0d27822
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Feb 18 00:56:58 2019 +0100

    ARM: 8843/1: use unified assembler in headers
    
    [ Upstream commit c001899a5d6c2d7a0f3b75b2307ddef137fb46a6 ]
    
    Use unified assembler syntax (UAL) in headers. Divided syntax is
    considered deprecated. This will also allow to build the kernel
    using LLVM's integrated assembler.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6dea0088efe2ddf4b3df02a5159fb508ef4a3330
Author: Łukasz Stelmach <l.stelmach@samsung.com>
Date:   Mon Apr 27 20:36:11 2020 +0100

    ARM: 8970/1: decompressor: increase tag size
    
    [ Upstream commit 2c962369d72f286659e6446919f88d69b943cb4d ]
    
    The size field of the tag header structure is supposed to be set to the
    size of a tag structure including the header.
    
    Fixes: c772568788b5f0 ("ARM: add additional table to compressed kernel")
    Signed-off-by: Łukasz Stelmach <l.stelmach@samsung.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98d7ca2a1e5967ad659371db163ba2756b024763
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Apr 28 16:09:53 2020 -0700

    Input: synaptics-rmi4 - fix error return code in rmi_driver_probe()
    
    [ Upstream commit 5caab2da63207d6d631007f592f5219459e3454d ]
    
    Fix to return a negative error code from the input_register_device()
    error handling case instead of 0, as done elsewhere in this function.
    
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20200428134948.78343-1-weiyongjun1@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54969e54d4b41b4cef73fb7f8d45a2f05380d9f0
Author: Evan Green <evgreen@chromium.org>
Date:   Mon Apr 27 18:08:58 2020 -0700

    Input: synaptics-rmi4 - really fix attn_data use-after-free
    
    [ Upstream commit d5a5e5b5fa7b86c05bf073acc0ba98fa280174ec ]
    
    Fix a use-after-free noticed by running with KASAN enabled. If
    rmi_irq_fn() is run twice in a row, then rmi_f11_attention() (among
    others) will end up reading from drvdata->attn_data.data, which was
    freed and left dangling in rmi_irq_fn().
    
    Commit 55edde9fff1a ("Input: synaptics-rmi4 - prevent UAF reported by
    KASAN") correctly identified and analyzed this bug. However the attempted
    fix only NULLed out a local variable, missing the fact that
    drvdata->attn_data is a struct, not a pointer.
    
    NULL out the correct pointer in the driver data to prevent the attention
    functions from copying from it.
    
    Fixes: 55edde9fff1a ("Input: synaptics-rmi4 - prevent UAF reported by KASAN")
    Fixes: b908d3cd812a ("Input: synaptics-rmi4 - allow to add attention data")
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200427145537.1.Ic8f898e0147beeee2c005ee7b20f1aebdef1e7eb@changeid
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bbb5ab66ca1c8b264660e1e0fd4a999f02302f7
Author: Kevin Locke <kevin@kevinlocke.name>
Date:   Mon Apr 27 18:07:20 2020 -0700

    Input: i8042 - add ThinkPad S230u to i8042 reset list
    
    [ Upstream commit 2712c91a54a1058d55c284152b4d93c979b67be6 ]
    
    On the Lenovo ThinkPad Twist S230u (3347-4HU) with BIOS version
    "GDETC1WW (1.81 ) 06/27/2019", the keyboard, Synaptics TouchPad, and
    TrackPoint either do not function or stop functioning a few minutes
    after boot.  This problem has been noted before, perhaps only occurring
    with BIOS 1.57 and later.[1][2][3][4][5]
    
    Odds of a BIOS fix appear to be low: 1.57 was released over 6 years ago
    and although the [BIOS changelog] notes "Fixed an issue of UEFI
    touchpad/trackpoint/keyboard/touchscreen" in 1.58, it appears to be
    insufficient.
    
    Setting i8042.reset=1 or adding 33474HU to the reset list avoids the
    issue on my system from either warm or cold boot.
    
    [1]: https://bugs.launchpad.net/bugs/1210748
    [2]: https://bbs.archlinux.org/viewtopic.php?pid=1360425
    [3]: https://forums.linuxmint.com/viewtopic.php?f=46&t=41200
    [4]: https://forums.linuxmint.com/viewtopic.php?f=49&t=157115
    [5]: https://forums.lenovo.com/topic/findpost/27/1337119
    [BIOS changelog]: https://download.lenovo.com/pccbbs/mobiles/gduj33uc.txt
    
    Signed-off-by: Kevin Locke <kevin@kevinlocke.name>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/94f384b0f75f90f71425d7dce7ac82c59ddb87a8.1587702636.git.kevin@kevinlocke.name
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d43fe1ab9a7c6c8bb4758eabc8ec6d65dd432b61
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Apr 22 13:58:42 2020 -0700

    Input: dlink-dir685-touchkeys - fix a typo in driver name
    
    [ Upstream commit 38347374ae3f1ec4df56dd688bd603a64e79a0ed ]
    
    According to the file name and Kconfig, a 'k' is missing in this driver
    name. It should be "dlink-dir685-touchkeys".
    
    Fixes: 131b3de7016b ("Input: add D-Link DIR-685 touchkeys driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20200412213937.5287-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95a481e235e5ead2454f24a9252903c39edf315b
Author: Łukasz Patron <priv.luk@gmail.com>
Date:   Wed Apr 22 14:13:09 2020 -0700

    Input: xpad - add custom init packet for Xbox One S controllers
    
    [ Upstream commit 764f7f911bf72450c51eb74cbb262ad9933741d8 ]
    
    Sending [ 0x05, 0x20, 0x00, 0x0f, 0x06 ] packet for Xbox One S controllers
    fixes an issue where controller is stuck in Bluetooth mode and not sending
    any inputs.
    
    Signed-off-by: Łukasz Patron <priv.luk@gmail.com>
    Reviewed-by: Cameron Gutman <aicommander@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200422075206.18229-1-priv.luk@gmail.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bd7f3f811b31cc4df3a581f955c4aa9da27687f
Author: Brendan Shanks <bshanks@codeweavers.com>
Date:   Wed Apr 22 13:45:12 2020 -0700

    Input: evdev - call input_flush_device() on release(), not flush()
    
    [ Upstream commit 09264098ff153f60866039d60b31d39b66f55a31 ]
    
    input_flush_device() should only be called once the struct file is being
    released and no open descriptors remain, but evdev_flush() was calling
    it whenever a file descriptor was closed.
    
    This caused uploaded force-feedback effects to be erased when a process
    did a dup()/close() on the event FD, called system(), etc.
    
    Call input_flush_device() from evdev_release() instead.
    
    Reported-by: Mathieu Maret <mathieu.maret@gmail.com>
    Signed-off-by: Brendan Shanks <bshanks@codeweavers.com>
    Link: https://lore.kernel.org/r/20200421231003.7935-1-bshanks@codeweavers.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99f62349fb3cdef770c731f95584cd60e584e6c2
Author: James Hilliard <james.hilliard1@gmail.com>
Date:   Sat Apr 18 21:17:12 2020 -0700

    Input: usbtouchscreen - add support for BonXeon TP
    
    [ Upstream commit e3b4f94ef52ae1592cbe199bd38dbdc0d58b2217 ]
    
    Based on available information this uses the singletouch irtouch
    protocol. This is tested and confirmed to be fully functional on
    the BonXeon TP hardware I have.
    
    Signed-off-by: James Hilliard <james.hilliard1@gmail.com>
    Link: https://lore.kernel.org/r/20200413184217.55700-1-james.hilliard1@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0de1cab5a5a9a7103d73888e88056b3e948b275
Author: Matteo Croce <mcroce@redhat.com>
Date:   Mon May 11 13:32:34 2020 +0200

    samples: bpf: Fix build error
    
    [ Upstream commit 23ad04669f81f958e9a4121b0266228d2eb3c357 ]
    
    GCC 10 is very strict about symbol clash, and lwt_len_hist_user contains
    a symbol which clashes with libbpf:
    
    /usr/bin/ld: samples/bpf/lwt_len_hist_user.o:(.bss+0x0): multiple definition of `bpf_log_buf'; samples/bpf/bpf_load.o:(.bss+0x8c0): first defined here
    collect2: error: ld returned 1 exit status
    
    bpf_log_buf here seems to be a leftover, so removing it.
    
    Signed-off-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20200511113234.80722-1-mcroce@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d9248f989ecf29a4c3e5c525cccdacb7708e11f
Author: Steve French <stfrench@microsoft.com>
Date:   Wed May 13 10:27:16 2020 -0500

    cifs: Fix null pointer check in cifs_read
    
    [ Upstream commit 9bd21d4b1a767c3abebec203342f3820dcb84662 ]
    
    Coverity scan noted a redundant null check
    
    Coverity-id: 728517
    Reported-by: Coverity <scan-admin@coverity.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Shyam Prasad N <nspmangalore@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b14d3efedb20c12e0fe9e3c43bb06f95e173c1e
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Mon May 11 10:19:53 2020 +0800

    riscv: stacktrace: Fix undefined reference to `walk_stackframe'
    
    [ Upstream commit 0502bee37cdef755d63eee60236562e5605e2480 ]
    
    Drop static declaration to fix following build error if FRAME_POINTER disabled,
      riscv64-linux-ld: arch/riscv/kernel/perf_callchain.o: in function `.L0':
      perf_callchain.c:(.text+0x2b8): undefined reference to `walk_stackframe'
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a855b4d7a3113c6c9be3c1ec7a7534e157b19ae
Author: Denis V. Lunev <den@openvz.org>
Date:   Tue Apr 28 16:15:11 2020 +0300

    IB/i40iw: Remove bogus call to netdev_master_upper_dev_get()
    
    [ Upstream commit 856ec7f64688387b100b7083cdf480ce3ac41227 ]
    
    Local variable netdev is not used in these calls.
    
    It should be noted, that this change is required to work in bonded mode.
    Otherwise we would get the following assert:
    
     "RTNL: assertion failed at net/core/dev.c (5665)"
    
    With the calltrace as follows:
            dump_stack+0x19/0x1b
            netdev_master_upper_dev_get+0x61/0x70
            i40iw_addr_resolve_neigh+0x1e8/0x220
            i40iw_make_cm_node+0x296/0x700
            ? i40iw_find_listener.isra.10+0xcc/0x110
            i40iw_receive_ilq+0x3d4/0x810
            i40iw_puda_poll_completion+0x341/0x420
            i40iw_process_ceq+0xa5/0x280
            i40iw_ceq_dpc+0x1e/0x40
            tasklet_action+0x83/0x140
            __do_softirq+0x125/0x2bb
            call_softirq+0x1c/0x30
            do_softirq+0x65/0xa0
            irq_exit+0x105/0x110
            do_IRQ+0x56/0xf0
            common_interrupt+0x16a/0x16a
            ? cpuidle_enter_state+0x57/0xd0
            cpuidle_idle_call+0xde/0x230
            arch_cpu_idle+0xe/0xc0
            cpu_startup_entry+0x14a/0x1e0
            start_secondary+0x1f7/0x270
            start_cpu+0x5/0x14
    
    Link: https://lore.kernel.org/r/20200428131511.11049-1-den@openvz.org
    Signed-off-by: Denis V. Lunev <den@openvz.org>
    Acked-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4434f4b0f63ace605fe223270afd0801f432f92e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat May 9 14:04:52 2020 +0200

    net: freescale: select CONFIG_FIXED_PHY where needed
    
    [ Upstream commit 99352c79af3e5f2e4724abf37fa5a2a3299b1c81 ]
    
    I ran into a randconfig build failure with CONFIG_FIXED_PHY=m
    and CONFIG_GIANFAR=y:
    
    x86_64-linux-ld: drivers/net/ethernet/freescale/gianfar.o:(.rodata+0x418): undefined reference to `fixed_phy_change_carrier'
    
    It seems the same thing can happen with dpaa and ucc_geth, so change
    all three to do an explicit 'select FIXED_PHY'.
    
    The fixed-phy driver actually has an alternative stub function that
    theoretically allows building network drivers when fixed-phy is
    disabled, but I don't see how that would help here, as the drivers
    presumably would not work then.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90a784d61547d3b90d3a1b628bbb0522999b024b
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Fri Apr 3 22:16:51 2020 +0900

    usb: gadget: legacy: fix redundant initialization warnings
    
    [ Upstream commit d13cce757954fa663c69845611957396843ed87a ]
    
    Fix the following cppcheck warnings:
    
    drivers/usb/gadget/legacy/inode.c:1364:8: style: Redundant initialization for 'value'. The initialized value is overwritten$
     value = -EOPNOTSUPP;
           ^
    drivers/usb/gadget/legacy/inode.c:1331:15: note: value is initialized
     int    value = -EOPNOTSUPP;
                  ^
    drivers/usb/gadget/legacy/inode.c:1364:8: note: value is overwritten
     value = -EOPNOTSUPP;
           ^
    drivers/usb/gadget/legacy/inode.c:1817:8: style: Redundant initialization for 'value'. The initialized value is overwritten$
     value = -EINVAL;
           ^
    drivers/usb/gadget/legacy/inode.c:1787:18: note: value is initialized
     ssize_t   value = len, length = len;
                     ^
    drivers/usb/gadget/legacy/inode.c:1817:8: note: value is overwritten
     value = -EINVAL;
           ^
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f87e14266746b9409db2de04d33de8786275e2b2
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon May 4 12:33:52 2020 +0300

    usb: dwc3: pci: Enable extcon driver for Intel Merrifield
    
    [ Upstream commit 066c09593454e89bc605ffdff1c9810061f9b1e1 ]
    
    Intel Merrifield provides a DR support via PMIC which has its own
    extcon driver.
    
    Add a property string to link to that driver.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd7c695be1c1f7954232f8abb7a0f7d26e6c743b
Author: Lei Xue <carmark.dlut@gmail.com>
Date:   Thu May 7 08:50:22 2020 -0400

    cachefiles: Fix race between read_waiter and read_copier involving op->to_do
    
    [ Upstream commit 7bb0c5338436dae953622470d52689265867f032 ]
    
    There is a potential race in fscache operation enqueuing for reading and
    copying multiple pages from cachefiles to netfs.  The problem can be seen
    easily on a heavy loaded system (for example many processes reading files
    continually on an NFS share covered by fscache triggered this problem within
    a few minutes).
    
    The race is due to cachefiles_read_waiter() adding the op to the monitor
    to_do list and then then drop the object->work_lock spinlock before
    completing fscache_enqueue_operation().  Once the lock is dropped,
    cachefiles_read_copier() grabs the op, completes processing it, and
    makes it through fscache_retrieval_complete() which sets the op->state to
    the final state of FSCACHE_OP_ST_COMPLETE(4).  When cachefiles_read_waiter()
    finally gets through the remainder of fscache_enqueue_operation()
    it sees the invalid state, and hits the ASSERTCMP and the following
    oops is seen:
    [ 2259.612361] FS-Cache:
    [ 2259.614785] FS-Cache: Assertion failed
    [ 2259.618639] FS-Cache: 4 == 5 is false
    [ 2259.622456] ------------[ cut here ]------------
    [ 2259.627190] kernel BUG at fs/fscache/operation.c:70!
    ...
    [ 2259.791675] RIP: 0010:[<ffffffffc061b4cf>]  [<ffffffffc061b4cf>] fscache_enqueue_operation+0xff/0x170 [fscache]
    [ 2259.802059] RSP: 0000:ffffa0263d543be0  EFLAGS: 00010046
    [ 2259.807521] RAX: 0000000000000019 RBX: ffffa01a4d390480 RCX: 0000000000000006
    [ 2259.814847] RDX: 0000000000000000 RSI: 0000000000000046 RDI: ffffa0263d553890
    [ 2259.822176] RBP: ffffa0263d543be8 R08: 0000000000000000 R09: ffffa0263c2d8708
    [ 2259.829502] R10: 0000000000001e7f R11: 0000000000000000 R12: ffffa01a4d390480
    [ 2259.844483] R13: ffff9fa9546c5920 R14: ffffa0263d543c80 R15: ffffa0293ff9bf10
    [ 2259.859554] FS:  00007f4b6efbd700(0000) GS:ffffa0263d540000(0000) knlGS:0000000000000000
    [ 2259.875571] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 2259.889117] CR2: 00007f49e1624ff0 CR3: 0000012b38b38000 CR4: 00000000007607e0
    [ 2259.904015] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 2259.918764] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 2259.933449] PKRU: 55555554
    [ 2259.943654] Call Trace:
    [ 2259.953592]  <IRQ>
    [ 2259.955577]  [<ffffffffc03a7c12>] cachefiles_read_waiter+0x92/0xf0 [cachefiles]
    [ 2259.978039]  [<ffffffffa34d3942>] __wake_up_common+0x82/0x120
    [ 2259.991392]  [<ffffffffa34d3a63>] __wake_up_common_lock+0x83/0xc0
    [ 2260.004930]  [<ffffffffa34d3510>] ? task_rq_unlock+0x20/0x20
    [ 2260.017863]  [<ffffffffa34d3ab3>] __wake_up+0x13/0x20
    [ 2260.030230]  [<ffffffffa34c72a0>] __wake_up_bit+0x50/0x70
    [ 2260.042535]  [<ffffffffa35bdcdb>] unlock_page+0x2b/0x30
    [ 2260.054495]  [<ffffffffa35bdd09>] page_endio+0x29/0x90
    [ 2260.066184]  [<ffffffffa368fc81>] mpage_end_io+0x51/0x80
    
    CPU1
    cachefiles_read_waiter()
     20 static int cachefiles_read_waiter(wait_queue_entry_t *wait, unsigned mode,
     21                                   int sync, void *_key)
     22 {
    ...
     61         spin_lock(&object->work_lock);
     62         list_add_tail(&monitor->op_link, &op->to_do);
     63         spin_unlock(&object->work_lock);
    <begin race window>
     64
     65         fscache_enqueue_retrieval(op);
    182 static inline void fscache_enqueue_retrieval(struct fscache_retrieval *op)
    183 {
    184         fscache_enqueue_operation(&op->op);
    185 }
     58 void fscache_enqueue_operation(struct fscache_operation *op)
     59 {
     60         struct fscache_cookie *cookie = op->object->cookie;
     61
     62         _enter("{OBJ%x OP%x,%u}",
     63                op->object->debug_id, op->debug_id, atomic_read(&op->usage));
     64
     65         ASSERT(list_empty(&op->pend_link));
     66         ASSERT(op->processor != NULL);
     67         ASSERT(fscache_object_is_available(op->object));
     68         ASSERTCMP(atomic_read(&op->usage), >, 0);
    <end race window>
    
    CPU2
    cachefiles_read_copier()
    168         while (!list_empty(&op->to_do)) {
    ...
    202                 fscache_end_io(op, monitor->netfs_page, error);
    203                 put_page(monitor->netfs_page);
    204                 fscache_retrieval_complete(op, 1);
    
    CPU1
     58 void fscache_enqueue_operation(struct fscache_operation *op)
     59 {
    ...
     69         ASSERTIFCMP(op->state != FSCACHE_OP_ST_IN_PROGRESS,
     70                     op->state, ==,  FSCACHE_OP_ST_CANCELLED);
    
    Signed-off-by: Lei Xue <carmark.dlut@gmail.com>
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a359696dfd93ed81a1ae23b63f329442953c7578
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Tue May 5 11:53:21 2020 -0500

    gfs2: move privileged user check to gfs2_quota_lock_check
    
    [ Upstream commit 4ed0c30811cb4d30ef89850b787a53a84d5d2bcb ]
    
    Before this patch, function gfs2_quota_lock checked if it was called
    from a privileged user, and if so, it bypassed the quota check:
    superuser can operate outside the quotas.
    That's the wrong place for the check because the lock/unlock functions
    are separate from the lock_check function, and you can do lock and
    unlock without actually checking the quotas.
    
    This patch moves the check to gfs2_quota_lock_check.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 427c63e10374dc588f8802faaf56cd39f09a53d5
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu May 7 23:13:20 2020 +0800

    net: microchip: encx24j600: add missed kthread_stop
    
    [ Upstream commit ff8ce319e9c25e920d994cc35236f0bb32dfc8f3 ]
    
    This driver calls kthread_run() in probe, but forgets to call
    kthread_stop() in probe failure and remove.
    Add the missed kthread_stop() to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60df5e0350e67904c3df5799237e1efd0109b159
Author: Andrew Oakley <andrew@adoakley.name>
Date:   Sun May 3 15:16:39 2020 +0100

    ALSA: usb-audio: add mapping for ASRock TRX40 Creator
    
    [ Upstream commit da7a8f1a8fc3e14c6dcc52b4098bddb8f20390be ]
    
    This is another TRX40 based motherboard with ALC1220-VB USB-audio
    that requires a static mapping table.
    
    This motherboard also has a PCI device which advertises no codecs.  The
    PCI ID is 1022:1487 and PCI SSID is 1022:d102.  As this is using the AMD
    vendor ID, don't blacklist for now in case other boards have a working
    audio device with the same ssid.
    
    alsa-info.sh report for this board:
    http://alsa-project.org/db/?f=0a742f89066527497b77ce16bca486daccf8a70c
    
    Signed-off-by: Andrew Oakley <andrew@adoakley.name>
    Link: https://lore.kernel.org/r/20200503141639.35519-1-andrew@adoakley.name
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9e8520b43e420a9fd0376df15c8e8597b2aae1e
Author: Stephen Warren <swarren@nvidia.com>
Date:   Mon Apr 27 17:26:05 2020 -0600

    gpio: tegra: mask GPIO IRQs during IRQ shutdown
    
    [ Upstream commit 0cf253eed5d2bdf7bb3152457b38f39b012955f7 ]
    
    The driver currently leaves GPIO IRQs unmasked even when the GPIO IRQ
    client has released the GPIO IRQ. This allows the HW to raise IRQs, and
    SW to process them, after shutdown. Fix this by masking the IRQ when it's
    shut down. This is usually taken care of by the irqchip core, but since
    this driver has a custom irq_shutdown implementation, it must do this
    explicitly itself.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Link: https://lore.kernel.org/r/20200427232605.11608-1-swarren@wwwdotorg.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c0fb298c95cfed30ac17a662664f9838959c9de
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Fri Apr 24 14:39:23 2020 +0200

    ARM: dts: rockchip: fix pinctrl sub nodename for spi in rk322x.dtsi
    
    [ Upstream commit 855bdca1781c79eb661f89c8944c4a719ce720e8 ]
    
    A test with the command below gives these errors:
    
    arch/arm/boot/dts/rk3229-evb.dt.yaml: spi-0:
    '#address-cells' is a required property
    arch/arm/boot/dts/rk3229-evb.dt.yaml: spi-1:
    '#address-cells' is a required property
    arch/arm/boot/dts/rk3229-xms6.dt.yaml: spi-0:
    '#address-cells' is a required property
    arch/arm/boot/dts/rk3229-xms6.dt.yaml: spi-1:
    '#address-cells' is a required property
    
    The $nodename pattern for spi nodes is
    "^spi(@.*|-[0-9a-f])*$". To prevent warnings rename
    'spi-0' and 'spi-1' pinctrl sub nodenames to
    'spi0' and 'spi1' in 'rk322x.dtsi'.
    
    make ARCH=arm dtbs_check
    DT_SCHEMA_FILES=Documentation/devicetree/bindings/spi/spi-controller.yaml
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Link: https://lore.kernel.org/r/20200424123923.8192-1-jbx6244@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53f7ad26c60aa728d601d479fb26491b7eda550b
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Sat Apr 25 21:25:00 2020 +0200

    ARM: dts: rockchip: swap clock-names of gpu nodes
    
    [ Upstream commit b14f3898d2c25a9b47a61fb879d0b1f3af92c59b ]
    
    Dts files with Rockchip 'gpu' nodes were manually verified.
    In order to automate this process arm,mali-utgard.txt
    has been converted to yaml. In the new setup dtbs_check with
    arm,mali-utgard.yaml expects clock-names values
    in the same order, so fix that.
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Link: https://lore.kernel.org/r/20200425192500.1808-1-jbx6244@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff4aedbbddebd10c51569ee58e76257b0174fe5d
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Sat Apr 25 16:38:37 2020 +0200

    arm64: dts: rockchip: swap interrupts interrupt-names rk3399 gpu node
    
    [ Upstream commit c604fd810bda667bdc20b2c041917baa7803e0fb ]
    
    Dts files with Rockchip rk3399 'gpu' nodes were manually verified.
    In order to automate this process arm,mali-midgard.txt
    has been converted to yaml. In the new setup dtbs_check with
    arm,mali-midgard.yaml expects interrupts and interrupt-names values
    in the same order. Fix this for rk3399.
    
    make ARCH=arm64 dtbs_check
    DT_SCHEMA_FILES=Documentation/devicetree/bindings/gpu/
    arm,mali-midgard.yaml
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Link: https://lore.kernel.org/r/20200425143837.18706-1-jbx6244@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bedd2e9acb1252e85139fa0fa855a773843a302
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Sat Apr 25 14:23:45 2020 +0200

    arm64: dts: rockchip: fix status for &gmac2phy in rk3328-evb.dts
    
    [ Upstream commit c617ed88502d0b05149e7f32f3b3fd8a0663f7e2 ]
    
    The status was removed of the '&gmac2phy' node with the apply
    of a patch long time ago, so fix status for '&gmac2phy'
    in 'rk3328-evb.dts'.
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Link: https://lore.kernel.org/r/20200425122345.12902-2-jbx6244@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc2ddf0b3a80782b65a3adcda85600f3edc5632b
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Thu Apr 16 19:03:20 2020 +0200

    ARM: dts: rockchip: fix phy nodename for rk3228-evb
    
    [ Upstream commit 287e0d538fcec2f6e8eb1e565bf0749f3b90186d ]
    
    A test with the command below gives for example this error:
    
    arch/arm/boot/dts/rk3228-evb.dt.yaml: phy@0:
    '#phy-cells' is a required property
    
    The phy nodename is normally used by a phy-handle.
    This node is however compatible with
    "ethernet-phy-id1234.d400", "ethernet-phy-ieee802.3-c22"
    which is just been added to 'ethernet-phy.yaml'.
    So change nodename to 'ethernet-phy' for which '#phy-cells'
    is not a required property
    
    make ARCH=arm dtbs_check
    DT_SCHEMA_FILES=~/.local/lib/python3.5/site-packages/dtschema/schemas/
    phy/phy-provider.yaml
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://lore.kernel.org/r/20200416170321.4216-1-jbx6244@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78c8a063ccb996a7555c6d30a0725d7d117623ea
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Thu May 21 15:11:44 2020 +0300

    mlxsw: spectrum: Fix use-after-free of split/unsplit/type_set in case reload fails
    
    commit 4340f42f207eacb81e7a6b6bb1e3b6afad9a2e26 upstream.
    
    In case of reload fail, the mlxsw_sp->ports contains a pointer to a
    freed memory (either by reload_down() or reload_up() error path).
    Fix this by initializing the pointer to NULL and checking it before
    dereferencing in split/unsplit/type_set callpaths.
    
    Fixes: 24cc68ad6c46 ("mlxsw: core: Add support for reload")
    Reported-by: Danielle Ratson <danieller@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec3150fc2922ddc93aeb3301a1535fd2eebbfd72
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Fri May 22 14:07:15 2020 -0500

    net/mlx4_core: fix a memory leak bug.
    
    commit febfd9d3c7f74063e8e630b15413ca91b567f963 upstream.
    
    In function mlx4_opreq_action(), pointer "mailbox" is not released,
    when mlx4_cmd_box() return and error, causing a memory leak bug.
    Fix this issue by going to "out" label, mlx4_free_cmd_mailbox() can
    free this pointer.
    
    Fixes: fe6f700d6cbb ("net/mlx4_core: Respond to operation request by firmware")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1620da8387caf5b87f1d71b4242dc05a75ca0854
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Fri May 22 16:50:27 2020 -0500

    net: sun: fix missing release regions in cas_init_one().
    
    commit 5a730153984dd13f82ffae93d7170d76eba204e9 upstream.
    
    In cas_init_one(), "pdev" is requested by "pci_request_regions", but it
    was not released after a call of the function “pci_write_config_byte”
    failed. Thus replace the jump target “err_write_cacheline” by
    "err_out_free_res".
    
    Fixes: 1f26dac32057 ("[NET]: Add Sun Cassini driver.")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95fde2e46860c183f6f47a99381a3b9bff488bd5
Author: Roi Dayan <roid@mellanox.com>
Date:   Thu May 14 23:44:38 2020 +0300

    net/mlx5: Annotate mutex destroy for root ns
    
    commit 9ca415399dae133b00273a4283ef31d003a6818d upstream.
    
    Invoke mutex_destroy() to catch any errors.
    
    Fixes: 2cc43b494a6c ("net/mlx5_core: Managing root flow table")
    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Mark Bloch <markb@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 999b69196aabbd292c42a57d505143160a0c8d4c
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Tue Apr 7 17:38:28 2020 +0300

    net/mlx5e: Update netdev txq on completions during closure
    
    [ Upstream commit 5e911e2c06bd8c17df29147a5e2d4b17fafda024 ]
    
    On sq closure when we free its descriptors, we should also update netdev
    txq on completions which would not arrive. Otherwise if we reopen sqs
    and attach them back, for example on fw fatal recovery flow, we may get
    tx timeout.
    
    Fixes: 29429f3300a3 ("net/mlx5e: Timeout if SQ doesn't flush during close")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2191b0c902e394856748accacd64dd83bf3dfe3c
Author: Jere Leppänen <jere.leppanen@nokia.com>
Date:   Wed May 20 18:15:31 2020 +0300

    sctp: Start shutdown on association restart if in SHUTDOWN-SENT state and socket is closed
    
    [ Upstream commit d3e8e4c11870413789f029a71e72ae6e971fe678 ]
    
    Commit bdf6fa52f01b ("sctp: handle association restarts when the
    socket is closed.") starts shutdown when an association is restarted,
    if in SHUTDOWN-PENDING state and the socket is closed. However, the
    rationale stated in that commit applies also when in SHUTDOWN-SENT
    state - we don't want to move an association to ESTABLISHED state when
    the socket has been closed, because that results in an association
    that is unreachable from user space.
    
    The problem scenario:
    
    1.  Client crashes and/or restarts.
    
    2.  Server (using one-to-one socket) calls close(). SHUTDOWN is lost.
    
    3.  Client reconnects using the same addresses and ports.
    
    4.  Server's association is restarted. The association and the socket
        move to ESTABLISHED state, even though the server process has
        closed its descriptor.
    
    Also, after step 4 when the server process exits, some resources are
    leaked in an attempt to release the underlying inet sock structure in
    ESTABLISHED state:
    
        IPv4: Attempt to release TCP socket in state 1 00000000377288c7
    
    Fix by acting the same way as in SHUTDOWN-PENDING state. That is, if
    an association is restarted in SHUTDOWN-SENT state and the socket is
    closed, then start shutdown and don't move the association or the
    socket to ESTABLISHED state.
    
    Fixes: bdf6fa52f01b ("sctp: handle association restarts when the socket is closed.")
    Signed-off-by: Jere Leppänen <jere.leppanen@nokia.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c0a4652f750afe3b4468cbcd9335b244ce2facd
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Tue May 19 16:04:05 2020 -0400

    sctp: Don't add the shutdown timer if its already been added
    
    [ Upstream commit 20a785aa52c82246055a089e55df9dac47d67da1 ]
    
    This BUG halt was reported a while back, but the patch somehow got
    missed:
    
    PID: 2879   TASK: c16adaa0  CPU: 1   COMMAND: "sctpn"
     #0 [f418dd28] crash_kexec at c04a7d8c
     #1 [f418dd7c] oops_end at c0863e02
     #2 [f418dd90] do_invalid_op at c040aaca
     #3 [f418de28] error_code (via invalid_op) at c08631a5
        EAX: f34baac0  EBX: 00000090  ECX: f418deb0  EDX: f5542950  EBP: 00000000
        DS:  007b      ESI: f34ba800  ES:  007b      EDI: f418dea0  GS:  00e0
        CS:  0060      EIP: c046fa5e  ERR: ffffffff  EFLAGS: 00010286
     #4 [f418de5c] add_timer at c046fa5e
     #5 [f418de68] sctp_do_sm at f8db8c77 [sctp]
     #6 [f418df30] sctp_primitive_SHUTDOWN at f8dcc1b5 [sctp]
     #7 [f418df48] inet_shutdown at c080baf9
     #8 [f418df5c] sys_shutdown at c079eedf
     #9 [f418df70] sys_socketcall at c079fe88
        EAX: ffffffda  EBX: 0000000d  ECX: bfceea90  EDX: 0937af98
        DS:  007b      ESI: 0000000c  ES:  007b      EDI: b7150ae4
        SS:  007b      ESP: bfceea7c  EBP: bfceeaa8  GS:  0033
        CS:  0073      EIP: b775c424  ERR: 00000066  EFLAGS: 00000282
    
    It appears that the side effect that starts the shutdown timer was processed
    multiple times, which can happen as multiple paths can trigger it.  This of
    course leads to the BUG halt in add_timer getting called.
    
    Fix seems pretty straightforward, just check before the timer is added if its
    already been started.  If it has mod the timer instead to min(current
    expiration, new expiration)
    
    Its been tested but not confirmed to fix the problem, as the issue has only
    occured in production environments where test kernels are enjoined from being
    installed.  It appears to be a sane fix to me though.  Also, recentely,
    Jere found a reproducer posted on list to confirm that this resolves the
    issues
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Vlad Yasevich <vyasevich@gmail.com>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: jere.leppanen@nokia.com
    CC: marcelo.leitner@gmail.com
    CC: netdev@vger.kernel.org
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea170104fddee1b1016664847a915c9ef9012942
Author: Marc Payne <marc.payne@mdpsys.co.uk>
Date:   Tue May 19 19:01:46 2020 +0100

    r8152: support additional Microsoft Surface Ethernet Adapter variant
    
    [ Upstream commit c27a204383616efba5a4194075e90819961ff66a ]
    
    Device id 0927 is the RTL8153B-based component of the 'Surface USB-C to
    Ethernet and USB Adapter' and may be used as a component of other devices
    in future. Tested and working with the r8152 driver.
    
    Update the cdc_ether blacklist due to the RTL8153 'network jam on suspend'
    issue which this device will cause (personally confirmed).
    
    Signed-off-by: Marc Payne <marc.payne@mdpsys.co.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d878dd4bac33a1ac08b720b5227a42b991c1968
Author: Roman Mashak <mrv@mojatatu.com>
Date:   Sun May 17 08:46:31 2020 -0400

    net sched: fix reporting the first-time use timestamp
    
    [ Upstream commit b15e62631c5f19fea9895f7632dae9c1b27fe0cd ]
    
    When a new action is installed, firstuse field of 'tcf_t' is explicitly set
    to 0. Value of zero means "new action, not yet used"; as a packet hits the
    action, 'firstuse' is stamped with the current jiffies value.
    
    tcf_tm_dump() should return 0 for firstuse if action has not yet been hit.
    
    Fixes: 48d8ee1694dd ("net sched actions: aggregate dumping of actions timeinfo")
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Roman Mashak <mrv@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d486aa523f5452de5202ac7ae3d3626d2e25113
Author: Yuqi Jin <jinyuqi@huawei.com>
Date:   Sat May 16 11:46:49 2020 +0800

    net: revert "net: get rid of an signed integer overflow in ip_idents_reserve()"
    
    [ Upstream commit a6211caa634da39d861a47437ffcda8b38ef421b ]
    
    Commit adb03115f459 ("net: get rid of an signed integer overflow in ip_idents_reserve()")
    used atomic_cmpxchg to replace "atomic_add_return" inside the function
    "ip_idents_reserve". The reason was to avoid UBSAN warning.
    However, this change has caused performance degrade and in GCC-8,
    fno-strict-overflow is now mapped to -fwrapv -fwrapv-pointer
    and signed integer overflow is now undefined by default at all
    optimization levels[1]. Moreover, it was a bug in UBSAN vs -fwrapv
    /-fno-strict-overflow, so Let's revert it safely.
    
    [1] https://gcc.gnu.org/gcc-8/changes.html
    
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
    Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Cc: Arvind Sankar <nivedita@alum.mit.edu>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jiong Wang <jiongwang@huawei.com>
    Signed-off-by: Yuqi Jin <jinyuqi@huawei.com>
    Signed-off-by: Shaokun Zhang <zhangshaokun@hisilicon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 615b7cfc14bebec4de1166501d9c652b36139b35
Author: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Date:   Tue May 19 23:44:16 2020 +0530

    net: qrtr: Fix passing invalid reference to qrtr_local_enqueue()
    
    [ Upstream commit d28ea1fbbf437054ef339afec241019f2c4e2bb6 ]
    
    Once the traversal of the list is completed with list_for_each_entry(),
    the iterator (node) will point to an invalid object. So passing this to
    qrtr_local_enqueue() which is outside of the iterator block is erroneous
    eventhough the object is not used.
    
    So fix this by passing NULL to qrtr_local_enqueue().
    
    Fixes: bdabad3e363d ("net: Add Qualcomm IPC router")
    Reported-by: kbuild test robot <lkp@intel.com>
    Reported-by: Julia Lawall <julia.lawall@lip6.fr>
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27197447be0375337c1e85238b519cccc07eb8e8
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Fri Dec 27 07:01:53 2019 +0200

    net/mlx5: Add command entry handling completion
    
    [ Upstream commit 17d00e839d3b592da9659c1977d45f85b77f986a ]
    
    When FW response to commands is very slow and all command entries in
    use are waiting for completion we can have a race where commands can get
    timeout before they get out of the queue and handled. Timeout
    completion on uninitialized command will cause releasing command's
    buffers before accessing it for initialization and then we will get NULL
    pointer exception while trying access it. It may also cause releasing
    buffers of another command since we may have timeout completion before
    even allocating entry index for this command.
    Add entry handling completion to avoid this race.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd990649b49d1f34be53db6780d3097a6e9537c
Author: Vadim Fedorenko <vfedorenko@novek.ru>
Date:   Wed May 20 11:50:48 2020 +0300

    net: ipip: fix wrong address family in init error path
    
    [ Upstream commit 57ebc8f08504f176eb0f25b3e0fde517dec61a4f ]
    
    In case of error with MPLS support the code is misusing AF_INET
    instead of AF_MPLS.
    
    Fixes: 1b69e7e6c4da ("ipip: support MPLS over IPv4")
    Signed-off-by: Vadim Fedorenko <vfedorenko@novek.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49e7ccf75937114297c102f49166936c3d20205c
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Mon May 18 17:13:34 2020 -0700

    net: inet_csk: Fix so_reuseport bind-address cache in tb->fast*
    
    [ Upstream commit 88d7fcfa3b1fe670f0412b95be785aafca63352b ]
    
    The commit 637bc8bbe6c0 ("inet: reset tb->fastreuseport when adding a reuseport sk")
    added a bind-address cache in tb->fast*.  The tb->fast* caches the address
    of a sk which has successfully been binded with SO_REUSEPORT ON.  The idea
    is to avoid the expensive conflict search in inet_csk_bind_conflict().
    
    There is an issue with wildcard matching where sk_reuseport_match() should
    have returned false but it is currently returning true.  It ends up
    hiding bind conflict.  For example,
    
    bind("[::1]:443"); /* without SO_REUSEPORT. Succeed. */
    bind("[::2]:443"); /* with    SO_REUSEPORT. Succeed. */
    bind("[::]:443");  /* with    SO_REUSEPORT. Still Succeed where it shouldn't */
    
    The last bind("[::]:443") with SO_REUSEPORT on should have failed because
    it should have a conflict with the very first bind("[::1]:443") which
    has SO_REUSEPORT off.  However, the address "[::2]" is cached in
    tb->fast* in the second bind. In the last bind, the sk_reuseport_match()
    returns true because the binding sk's wildcard addr "[::]" matches with
    the "[::2]" cached in tb->fast*.
    
    The correct bind conflict is reported by removing the second
    bind such that tb->fast* cache is not involved and forces the
    bind("[::]:443") to go through the inet_csk_bind_conflict():
    
    bind("[::1]:443"); /* without SO_REUSEPORT. Succeed. */
    bind("[::]:443");  /* with    SO_REUSEPORT. -EADDRINUSE */
    
    The expected behavior for sk_reuseport_match() is, it should only allow
    the "cached" tb->fast* address to be used as a wildcard match but not
    the address of the binding sk.  To do that, the current
    "bool match_wildcard" arg is split into
    "bool match_sk1_wildcard" and "bool match_sk2_wildcard".
    
    This change only affects the sk_reuseport_match() which is only
    used by inet_csk (e.g. TCP).
    The other use cases are calling inet_rcv_saddr_equal() and
    this patch makes it pass the same "match_wildcard" arg twice to
    the "ipv[46]_rcv_saddr_equal(..., match_wildcard, match_wildcard)".
    
    Cc: Josef Bacik <jbacik@fb.com>
    Fixes: 637bc8bbe6c0 ("inet: reset tb->fastreuseport when adding a reuseport sk")
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96b2f1c0b073734d42b2cb38bdd59b945c78d51f
Author: Boris Sukholitko <boris.sukholitko@broadcom.com>
Date:   Tue May 19 10:32:37 2020 +0300

    __netif_receive_skb_core: pass skb by reference
    
    [ Upstream commit c0bbbdc32febd4f034ecbf3ea17865785b2c0652 ]
    
    __netif_receive_skb_core may change the skb pointer passed into it (e.g.
    in rx_handler). The original skb may be freed as a result of this
    operation.
    
    The callers of __netif_receive_skb_core may further process original skb
    by using pt_prev pointer returned by __netif_receive_skb_core thus
    leading to unpleasant effects.
    
    The solution is to pass skb by reference into __netif_receive_skb_core.
    
    v2: Added Fixes tag and comment regarding ppt_prev and skb invariant.
    
    Fixes: 88eb1944e18c ("net: core: propagate SKB lists through packet_type lookup")
    Signed-off-by: Boris Sukholitko <boris.sukholitko@broadcom.com>
    Acked-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52db4beed41b2b33930f62dfc0ff384ff6c58aae
Author: DENG Qingfang <dqfext@gmail.com>
Date:   Wed May 13 23:10:16 2020 +0800

    net: dsa: mt7530: fix roaming from DSA user ports
    
    [ Upstream commit 5e5502e012b8129e11be616acb0f9c34bc8f8adb ]
    
    When a client moves from a DSA user port to a software port in a bridge,
    it cannot reach any other clients that connected to the DSA user ports.
    That is because SA learning on the CPU port is disabled, so the switch
    ignores the client's frames from the CPU port and still thinks it is at
    the user port.
    
    Fix it by enabling SA learning on the CPU port.
    
    To prevent the switch from learning from flooding frames from the CPU
    port, set skb->offload_fwd_mark to 1 for unicast and broadcast frames,
    and let the switch flood them instead of trapping to the CPU port.
    Multicast frames still need to be trapped to the CPU port for snooping,
    so set the SA_DIS bit of the MTK tag to 1 when transmitting those frames
    to disable SA learning.
    
    Fixes: b8f126a8d543 ("net-next: dsa: add dsa support for Mediatek MT7530 switch")
    Signed-off-by: DENG Qingfang <dqfext@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b145710b69388aa4034d32b4a937f18f66b5538e
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon May 25 00:22:51 2020 +0300

    dpaa_eth: fix usage as DSA master, try 3
    
    [ Upstream commit 5d14c304bfc14b4fd052dc83d5224376b48f52f0 ]
    
    The dpaa-eth driver probes on compatible string for the MAC node, and
    the fman/mac.c driver allocates a dpaa-ethernet platform device that
    triggers the probing of the dpaa-eth net device driver.
    
    All of this is fine, but the problem is that the struct device of the
    dpaa_eth net_device is 2 parents away from the MAC which can be
    referenced via of_node. So of_find_net_device_by_node can't find it, and
    DSA switches won't be able to probe on top of FMan ports.
    
    It would be a bit silly to modify a core function
    (of_find_net_device_by_node) to look for dev->parent->parent->of_node
    just for one driver. We're just 1 step away from implementing full
    recursion.
    
    Actually there have already been at least 2 previous attempts to make
    this work:
    - Commit a1a50c8e4c24 ("fsl/man: Inherit parent device and of_node")
    - One or more of the patches in "[v3,0/6] adapt DPAA drivers for DSA":
      https://patchwork.ozlabs.org/project/netdev/cover/1508178970-28945-1-git-send-email-madalin.bucur@nxp.com/
      (I couldn't really figure out which one was supposed to solve the
      problem and how).
    
    Point being, it looks like this is still pretty much a problem today.
    On T1040, the /sys/class/net/eth0 symlink currently points to
    
    ../../devices/platform/ffe000000.soc/ffe400000.fman/ffe4e6000.ethernet/dpaa-ethernet.0/net/eth0
    
    which pretty much illustrates the problem. The closest of_node we've got
    is the "fsl,fman-memac" at /soc@ffe000000/fman@400000/ethernet@e6000,
    which is what we'd like to be able to reference from DSA as host port.
    
    For of_find_net_device_by_node to find the eth0 port, we would need the
    parent of the eth0 net_device to not be the "dpaa-ethernet" platform
    device, but to point 1 level higher, aka the "fsl,fman-memac" node
    directly. The new sysfs path would look like this:
    
    ../../devices/platform/ffe000000.soc/ffe400000.fman/ffe4e6000.ethernet/net/eth0
    
    And this is exactly what SET_NETDEV_DEV does. It sets the parent of the
    net_device. The new parent has an of_node associated with it, and
    of_dev_node_match already checks for the of_node of the device or of its
    parent.
    
    Fixes: a1a50c8e4c24 ("fsl/man: Inherit parent device and of_node")
    Fixes: c6e26ea8c893 ("dpaa_eth: change device used")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efdf6e3c7860139fb79a47b8ef0596b9a58540bd
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue May 19 18:24:43 2020 -0700

    ax25: fix setsockopt(SO_BINDTODEVICE)
    
    [ Upstream commit 687775cec056b38a4c8f3291e0dd7a9145f7b667 ]
    
    syzbot was able to trigger this trace [1], probably by using
    a zero optlen.
    
    While we are at it, cap optlen to IFNAMSIZ - 1 instead of IFNAMSIZ.
    
    [1]
    BUG: KMSAN: uninit-value in strnlen+0xf9/0x170 lib/string.c:569
    CPU: 0 PID: 8807 Comm: syz-executor483 Not tainted 5.7.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c9/0x220 lib/dump_stack.c:118
     kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:121
     __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:215
     strnlen+0xf9/0x170 lib/string.c:569
     dev_name_hash net/core/dev.c:207 [inline]
     netdev_name_node_lookup net/core/dev.c:277 [inline]
     __dev_get_by_name+0x75/0x2b0 net/core/dev.c:778
     ax25_setsockopt+0xfa3/0x1170 net/ax25/af_ax25.c:654
     __compat_sys_setsockopt+0x4ed/0x910 net/compat.c:403
     __do_compat_sys_setsockopt net/compat.c:413 [inline]
     __se_compat_sys_setsockopt+0xdd/0x100 net/compat.c:410
     __ia32_compat_sys_setsockopt+0x62/0x80 net/compat.c:410
     do_syscall_32_irqs_on arch/x86/entry/common.c:339 [inline]
     do_fast_syscall_32+0x3bf/0x6d0 arch/x86/entry/common.c:398
     entry_SYSENTER_compat+0x68/0x77 arch/x86/entry/entry_64_compat.S:139
    RIP: 0023:0xf7f57dd9
    Code: 90 e8 0b 00 00 00 f3 90 0f ae e8 eb f9 8d 74 26 00 89 3c 24 c3 90 90 90 90 90 90 90 90 90 90 90 90 51 52 55 89 e5 0f 34 cd 80 <5d> 5a 59 c3 90 90 90 90 eb 0d 90 90 90 90 90 90 90 90 90 90 90 90
    RSP: 002b:00000000ffae8c1c EFLAGS: 00000217 ORIG_RAX: 000000000000016e
    RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 0000000000000101
    RDX: 0000000000000019 RSI: 0000000020000000 RDI: 0000000000000004
    RBP: 0000000000000012 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    
    Local variable ----devname@ax25_setsockopt created at:
     ax25_setsockopt+0xe6/0x1170 net/ax25/af_ax25.c:536
     ax25_setsockopt+0xe6/0x1170 net/ax25/af_ax25.c:536
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
