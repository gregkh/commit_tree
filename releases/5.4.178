commit 76fd334f07cc11e047c2237a19b2cf8b1f653ba2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 8 18:24:35 2022 +0100

    Linux 5.4.178
    
    Link: https://lore.kernel.org/r/20220207103753.155627314@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed339069725a44633bd7922434176fd43a9c21ac
Author: Waiman Long <longman@redhat.com>
Date:   Wed Feb 2 22:31:03 2022 -0500

    cgroup/cpuset: Fix "suspicious RCU usage" lockdep warning
    
    commit 2bdfd2825c9662463371e6691b1a794e97fa36b4 upstream.
    
    It was found that a "suspicious RCU usage" lockdep warning was issued
    with the rcu_read_lock() call in update_sibling_cpumasks().  It is
    because the update_cpumasks_hier() function may sleep. So we have
    to release the RCU lock, call update_cpumasks_hier() and reacquire
    it afterward.
    
    Also add a percpu_rwsem_assert_held() in update_sibling_cpumasks()
    instead of stating that in the comment.
    
    Fixes: 4716909cc5c5 ("cpuset: Track cpusets that use parent's effective_cpus")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Tested-by: Phil Auld <pauld@redhat.com>
    Reviewed-by: Phil Auld <pauld@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8d7d7c58e6442efedf78c489e78904fd4ea98cb
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Mon Jan 17 17:41:47 2022 +0530

    ext4: fix error handling in ext4_restore_inline_data()
    
    commit 897026aaa73eb2517dfea8d147f20ddb0b813044 upstream.
    
    While running "./check -I 200 generic/475" it sometimes gives below
    kernel BUG(). Ideally we should not call ext4_write_inline_data() if
    ext4_create_inline_data() has failed.
    
    <log snip>
    [73131.453234] kernel BUG at fs/ext4/inline.c:223!
    
    <code snip>
     212 static void ext4_write_inline_data(struct inode *inode, struct ext4_iloc *iloc,
     213                                    void *buffer, loff_t pos, unsigned int len)
     214 {
    <...>
     223         BUG_ON(!EXT4_I(inode)->i_inline_off);
     224         BUG_ON(pos + len > EXT4_I(inode)->i_inline_size);
    
    This patch handles the error and prints out a emergency msg saying potential
    data loss for the given inode (since we couldn't restore the original
    inline_data due to some previous error).
    
    [ 9571.070313] EXT4-fs (dm-0): error restoring inline_data for inode -- potential data loss! (inode 1703982, error -30)
    
    Reported-by: Eric Whitney <enwlinux@gmail.com>
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/9f4cd7dfd54fa58ff27270881823d94ddf78dd07.1642416995.git.riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4a575eada7ccc956712d486617c193092014469
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Jan 24 21:55:03 2022 +0300

    EDAC/xgene: Fix deferred probing
    
    commit dfd0dfb9a7cc04acf93435b440dd34c2ca7b4424 upstream.
    
    The driver overrides error codes returned by platform_get_irq_optional()
    to -EINVAL for some strange reason, so if it returns -EPROBE_DEFER, the
    driver will fail the probe permanently instead of the deferred probing.
    Switch to propagating the proper error codes to platform driver code
    upwards.
    
      [ bp: Massage commit message. ]
    
    Fixes: 0d4429301c4a ("EDAC: Add APM X-Gene SoC EDAC driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220124185503.6720-3-s.shtylyov@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f1ca7cea59660cc57fc3308106413e179603eaa
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Jan 24 21:55:02 2022 +0300

    EDAC/altera: Fix deferred probing
    
    commit 279eb8575fdaa92c314a54c0d583c65e26229107 upstream.
    
    The driver overrides the error codes returned by platform_get_irq() to
    -ENODEV for some strange reason, so if it returns -EPROBE_DEFER, the
    driver will fail the probe permanently instead of the deferred probing.
    Switch to propagating the proper error codes to platform driver code
    upwards.
    
      [ bp: Massage commit message. ]
    
    Fixes: 71bcada88b0f ("edac: altera: Add Altera SDRAM EDAC support")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220124185503.6720-2-s.shtylyov@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66c5aa5726bc94bfab924e97928e091f09d776ba
Author: Riwen Lu <luriwen@kylinos.cn>
Date:   Thu Jan 6 16:46:09 2022 +0800

    rtc: cmos: Evaluate century appropriate
    
    commit ff164ae39b82ee483b24579c8e22a13a8ce5bd04 upstream.
    
    There's limiting the year to 2069. When setting the rtc year to 2070,
    reading it returns 1970. Evaluate century starting from 19 to count the
    correct year.
    
    $ sudo date -s 20700106
    Mon 06 Jan 2070 12:00:00 AM CST
    $ sudo hwclock -w
    $ sudo hwclock -r
    1970-01-06 12:00:49.604968+08:00
    
    Fixes: 2a4daadd4d3e5071 ("rtc: cmos: ignore bogus century byte")
    
    Signed-off-by: Riwen Lu <luriwen@kylinos.cn>
    Acked-by: Eric Wong <e@80x24.org>
    Reviewed-by: Mateusz Jończyk <mat.jonczyk@o2.pl>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20220106084609.1223688-1-luriwen@kylinos.cn
    Signed-off-by: Mateusz Jończyk <mat.jonczyk@o2.pl> # preparation for stable
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ffe36c9c4b6f4a93041d3c5931c66107a2fdbfe
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Thu Jan 27 22:44:46 2022 +0500

    selftests: futex: Use variable MAKE instead of make
    
    commit b9199181a9ef8252e47e207be8c23e1f50662620 upstream.
    
    Recursive make commands should always use the variable MAKE, not the
    explicit command name ‘make’. This has benefits and removes the
    following warning when multiple jobs are used for the build:
    
    make[2]: warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
    
    Fixes: a8ba798bc8ec ("selftests: enable O and KBUILD_OUTPUT")
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Reviewed-by: André Almeida <andrealmeid@collabora.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c17a316f3d53c2b8dc32b0903ef34d32cf635ed8
Author: Dai Ngo <dai.ngo@oracle.com>
Date:   Wed Jan 26 13:13:38 2022 -0800

    nfsd: nfsd4_setclientid_confirm mistakenly expires confirmed client.
    
    commit ab451ea952fe9d7afefae55ddb28943a148247fe upstream.
    
    From RFC 7530 Section 16.34.5:
    
    o  The server has not recorded an unconfirmed { v, x, c, *, * } and
       has recorded a confirmed { v, x, c, *, s }.  If the principals of
       the record and of SETCLIENTID_CONFIRM do not match, the server
       returns NFS4ERR_CLID_INUSE without removing any relevant leased
       client state, and without changing recorded callback and
       callback_ident values for client { x }.
    
    The current code intends to do what the spec describes above but
    it forgot to set 'old' to NULL resulting to the confirmed client
    to be expired.
    
    Fixes: 2b63482185e6 ("nfsd: fix clid_inuse on mount with security change")
    Signed-off-by: Dai Ngo <dai.ngo@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Bruce Fields <bfields@fieldses.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53e4f71763c61a557283eb43301efd671922d1e8
Author: John Meneghini <jmeneghi@redhat.com>
Date:   Mon Jan 24 09:51:10 2022 -0500

    scsi: bnx2fc: Make bnx2fc_recv_frame() mp safe
    
    commit 936bd03405fc83ba039d42bc93ffd4b88418f1d3 upstream.
    
    Running tests with a debug kernel shows that bnx2fc_recv_frame() is
    modifying the per_cpu lport stats counters in a non-mpsafe way.  Just boot
    a debug kernel and run the bnx2fc driver with the hardware enabled.
    
    [ 1391.699147] BUG: using smp_processor_id() in preemptible [00000000] code: bnx2fc_
    [ 1391.699160] caller is bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]
    [ 1391.699174] CPU: 2 PID: 4355 Comm: bnx2fc_l2_threa Kdump: loaded Tainted: G    B
    [ 1391.699180] Hardware name: HP ProLiant DL120 G7, BIOS J01 07/01/2013
    [ 1391.699183] Call Trace:
    [ 1391.699188]  dump_stack_lvl+0x57/0x7d
    [ 1391.699198]  check_preemption_disabled+0xc8/0xd0
    [ 1391.699205]  bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]
    [ 1391.699215]  ? do_raw_spin_trylock+0xb5/0x180
    [ 1391.699221]  ? bnx2fc_npiv_create_vports.isra.0+0x4e0/0x4e0 [bnx2fc]
    [ 1391.699229]  ? bnx2fc_l2_rcv_thread+0xb7/0x3a0 [bnx2fc]
    [ 1391.699240]  bnx2fc_l2_rcv_thread+0x1af/0x3a0 [bnx2fc]
    [ 1391.699250]  ? bnx2fc_ulp_init+0xc0/0xc0 [bnx2fc]
    [ 1391.699258]  kthread+0x364/0x420
    [ 1391.699263]  ? _raw_spin_unlock_irq+0x24/0x50
    [ 1391.699268]  ? set_kthread_struct+0x100/0x100
    [ 1391.699273]  ret_from_fork+0x22/0x30
    
    Restore the old get_cpu/put_cpu code with some modifications to reduce the
    size of the critical section.
    
    Link: https://lore.kernel.org/r/20220124145110.442335-1-jmeneghi@redhat.com
    Fixes: d576a5e80cd0 ("bnx2fc: Improve stats update mechanism")
    Tested-by: Guangwu Zhang <guazhang@redhat.com>
    Acked-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: John Meneghini <jmeneghi@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfba4e8088ca11d193ee8ef25a8a69210e2a13ce
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Jan 27 13:50:31 2022 -0800

    pinctrl: bcm2835: Fix a few error paths
    
    commit 5297c693d8c8e08fa742e3112cf70723f7a04da2 upstream.
    
    After commit 266423e60ea1 ("pinctrl: bcm2835: Change init order for gpio
    hogs") a few error paths would not unwind properly the registration of
    gpio ranges. Correct that by assigning a single error label and goto it
    whenever we encounter a fatal error.
    
    Fixes: 266423e60ea1 ("pinctrl: bcm2835: Change init order for gpio hogs")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220127215033.267227-1-f.fainelli@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71e60c170105d153e34d01766c1e4db26a4b24cc
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jan 19 15:31:01 2022 +0300

    ASoC: max9759: fix underflow in speaker_gain_control_put()
    
    commit 4c907bcd9dcd233da6707059d777ab389dcbd964 upstream.
    
    Check for negative values of "priv->gain" to prevent an out of bounds
    access.  The concern is that these might come from the user via:
      -> snd_ctl_elem_write_user()
        -> snd_ctl_elem_write()
          -> kctl->put()
    
    Fixes: fa8d915172b8 ("ASoC: max9759: Add Amplifier Driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20220119123101.GA9509@kili
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7e396324fe27673cc471991483c23507a5d5641
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jan 11 10:50:48 2022 +0800

    ASoC: cpcap: Check for NULL pointer after calling of_get_child_by_name
    
    commit f7a6021aaf02088870559f82fc13c58cda7fea1a upstream.
    
    If the device does not exist, of_get_child_by_name() will return NULL
    pointer.
    And devm_snd_soc_register_component() does not check it.
    Also, I have noticed that cpcap_codec_driver has not been used yet.
    Therefore, it should be better to check it in order to avoid the future
    dereference of the NULL pointer.
    
    Fixes: f6cdf2d3445d ("ASoC: cpcap: new codec")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220111025048.524134-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7709133f1f7a9e2435e21e62e1d5ad8df82f1379
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Fri Jan 7 15:47:06 2022 -0600

    ASoC: xilinx: xlnx_formatter_pcm: Make buffer bytes multiple of period bytes
    
    commit e958b5884725dac86d36c1e7afe5a55f31feb0b2 upstream.
    
    This patch is based on one in the Xilinx kernel tree, "ASoc: xlnx: Make
    buffer bytes multiple of period bytes" by Devarsh Thakkar. The same
    issue exists in the mainline version of the driver. The original
    patch description is as follows:
    
    "The Xilinx Audio Formatter IP has a constraint on period
    bytes to be multiple of 64. This leads to driver changing
    the period size to suitable frames such that period bytes
    are multiple of 64.
    
    Now since period bytes and period size are updated but not
    the buffer bytes, this may make the buffer bytes unaligned
    and not multiple of period bytes.
    
    When this happens we hear popping noise as while DMA is being
    done the buffer bytes are not enough to complete DMA access
    for last period of frame within the application buffer boundary.
    
    To avoid this, align buffer bytes too as multiple of 64, and
    set another constraint to always enforce number of periods as
    integer. Now since, there is already a rule in alsa core
    to enforce Buffer size = Number of Periods * Period Size
    this automatically aligns buffer bytes as multiple of period
    bytes."
    
    Fixes: 6f6c3c36f091 ("ASoC: xlnx: add pcm formatter platform driver")
    Cc: Devarsh Thakkar <devarsh.thakkar@xilinx.com>
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Link: https://lore.kernel.org/r/20220107214711.1100162-2-robert.hancock@calian.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e51b323f891f110c69a35a9f88543b41d51b248d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jan 27 13:13:34 2022 +0000

    ASoC: fsl: Add missing error handling in pcm030_fabric_probe
    
    commit fb25621da5702c104ce0a48de5b174ced09e5b4e upstream.
    
    Add the missing platform_device_put() and platform_device_del()
    before return from pcm030_fabric_probe in the error handling case.
    
    Fixes: c912fa913446 ("ASoC: fsl: register the wm9712-codec")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220127131336.30214-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04698be843dca8cd4e5f56146f0309481aeedd7f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 24 15:24:09 2022 +0300

    drm/i915/overlay: Prevent divide by zero bugs in scaling
    
    commit 90a3d22ff02b196d5884e111f39271a1d4ee8e3e upstream.
    
    Smatch detected a divide by zero bug in check_overlay_scaling().
    
        drivers/gpu/drm/i915/display/intel_overlay.c:976 check_overlay_scaling()
        error: potential divide by zero bug '/ rec->dst_height'.
        drivers/gpu/drm/i915/display/intel_overlay.c:980 check_overlay_scaling()
        error: potential divide by zero bug '/ rec->dst_width'.
    
    Prevent this by ensuring that the dst height and width are non-zero.
    
    Fixes: 02e792fbaadb ("drm/i915: implement drmmode overlay support v4")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220124122409.GA31673@kili
    (cherry picked from commit cf5b64f7f10b28bebb9b7c9d25e7aee5cbe43918)
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a674b8e8a3c0c65da094914f9b5ac8082beef7c
Author: Yannick Vignon <yannick.vignon@nxp.com>
Date:   Thu Feb 3 17:00:25 2022 +0100

    net: stmmac: ensure PTP time register reads are consistent
    
    commit 80d4609008e6d696a279e39ae7458c916fcd44c1 upstream.
    
    Even if protected from preemption and interrupts, a small time window
    remains when the 2 register reads could return inconsistent values,
    each time the "seconds" register changes. This could lead to an about
    1-second error in the reported time.
    
    Add logic to ensure the "seconds" and "nanoseconds" values are consistent.
    
    Fixes: 92ba6888510c ("stmmac: add the support for PTP hw clock driver")
    Signed-off-by: Yannick Vignon <yannick.vignon@nxp.com>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/20220203160025.750632-1-yannick.vignon@oss.nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9afc028640310011f4d5cdc90927d3adf4b0de72
Author: Camel Guo <camelg@axis.com>
Date:   Mon Jan 31 09:38:40 2022 +0100

    net: stmmac: dump gmac4 DMA registers correctly
    
    commit 7af037c39b600bac2c716dd1228e8ddbe149573f upstream.
    
    Unlike gmac100, gmac1000, gmac4 has 27 DMA registers and they are
    located at DMA_CHAN_BASE_ADDR (0x1100). In order for ethtool to dump
    gmac4 DMA registers correctly, this commit checks if a net_device has
    gmac4 and uses different logic to dump its DMA registers.
    
    This fixes the following KASAN warning, which can normally be triggered
    by a command similar like "ethtool -d eth0":
    
    BUG: KASAN: vmalloc-out-of-bounds in dwmac4_dump_dma_regs+0x6d4/0xb30
    Write of size 4 at addr ffffffc010177100 by task ethtool/1839
     kasan_report+0x200/0x21c
     __asan_report_store4_noabort+0x34/0x60
     dwmac4_dump_dma_regs+0x6d4/0xb30
     stmmac_ethtool_gregs+0x110/0x204
     ethtool_get_regs+0x200/0x4b0
     dev_ethtool+0x1dac/0x3800
     dev_ioctl+0x7c0/0xb50
     sock_ioctl+0x298/0x6c4
     ...
    
    Fixes: fbf68229ffe7 ("net: stmmac: unify registers dumps methods")
    Signed-off-by: Camel Guo <camelg@axis.com>
    Link: https://lore.kernel.org/r/20220131083841.3346801-1-camel.guo@axis.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77454c9ada779635eb9776a3805882fbce7225ff
Author: Lior Nahmanson <liorna@nvidia.com>
Date:   Sun Jan 30 13:37:52 2022 +0200

    net: macsec: Verify that send_sci is on when setting Tx sci explicitly
    
    commit d0cfa548dbde354de986911d3913897b5448faad upstream.
    
    When setting Tx sci explicit, the Rx side is expected to use this
    sci and not recalculate it from the packet.However, in case of Tx sci
    is explicit and send_sci is off, the receiver is wrongly recalculate
    the sci from the source MAC address which most likely be different
    than the explicit sci.
    
    Fix by preventing such configuration when macsec newlink is established
    and return EINVAL error code on such cases.
    
    Fixes: c09440f7dcb3 ("macsec: introduce IEEE 802.1AE driver")
    Signed-off-by: Lior Nahmanson <liorna@nvidia.com>
    Reviewed-by: Raed Salem <raeds@nvidia.com>
    Signed-off-by: Raed Salem <raeds@nvidia.com>
    Link: https://lore.kernel.org/r/1643542672-29403-1-git-send-email-raeds@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc8c2f0d010cf51fc914ed1f6b068004fbbf6c04
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:25 2022 +0100

    net: ieee802154: Return meaningful error codes from the netlink helpers
    
    commit 79c37ca73a6e9a33f7b2b7783ba6af07a448c8a9 upstream.
    
    Returning -1 does not indicate anything useful.
    
    Use a standard and meaningful error code instead.
    
    Fixes: a26c5fd7622d ("nl802154: add support for security layer")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-6-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f38d3a6ec11c2733b1c641a46a2a2ecec57be08
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:24 2022 +0100

    net: ieee802154: ca8210: Stop leaking skb's
    
    commit 621b24b09eb61c63f262da0c9c5f0e93348897e5 upstream.
    
    Upon error the ieee802154_xmit_complete() helper is not called. Only
    ieee802154_wake_queue() is called manually. We then leak the skb
    structure.
    
    Free the skb structure upon error before returning.
    
    Fixes: ded845a781a5 ("ieee802154: Add CA8210 IEEE 802.15.4 device driver")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-5-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 859ded7ac2a6c6efc383a7586358aea00b79aa31
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:22 2022 +0100

    net: ieee802154: mcr20a: Fix lifs/sifs periods
    
    commit d753c4004820a888ec007dd88b271fa9c3172c5c upstream.
    
    These periods are expressed in time units (microseconds) while 40 and 12
    are the number of symbol durations these periods will last. We need to
    multiply them both with phy->symbol_duration in order to get these
    values in microseconds.
    
    Fixes: 8c6ad9cc5157 ("ieee802154: Add NXP MCR20A IEEE 802.15.4 transceiver driver")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-3-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13be1165efda79bb469dbd0621eb4073ea616f16
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:21 2022 +0100

    net: ieee802154: hwsim: Ensure proper channel selection at probe time
    
    commit 1293fccc9e892712d910ec96079d3717307f1d2d upstream.
    
    Drivers are expected to set the PHY current_channel and current_page
    according to their default state. The hwsim driver is advertising being
    configured on channel 13 by default but that is not reflected in its own
    internal pib structure. In order to ensure that this driver consider the
    current channel as being 13 internally, we at least need to set the
    pib->channel field to 13.
    
    Fixes: f25da51fdc38 ("ieee802154: hwsim: add replacement for fakelb")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    [stefan@datenfreihafen.org: fixed assigment from page to channel]
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-2-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cfa026a212eaf2ac1f68cc045680debd275e3de
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 26 11:04:47 2022 +0000

    spi: meson-spicc: add IRQ check in meson_spicc_probe
    
    commit e937440f7fc444a3e3f1fb75ea65292d6f433a44 upstream.
    
    This check misses checking for  platform_get_irq()'s call and may passes
    the negative error codes to devm_request_irq(), which takes unsigned IRQ #,
    causing it to fail with -EINVAL, overriding an original error code.
    Stop calling devm_request_irq() with invalid IRQ #s.
    
    Fixes: 454fa271bc4e ("spi: Add Meson SPICC driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220126110447.24549-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe58eb96bb411e4ab2a4aa018ceae47576b35bac
Author: Benjamin Gaignard <benjamin.gaignard@collabora.com>
Date:   Mon Jan 31 15:17:08 2022 +0100

    spi: mediatek: Avoid NULL pointer crash in interrupt
    
    commit f83a96e5f033fbbd21764705cb9c04234b96218e upstream.
    
    In some case, like after a transfer timeout, master->cur_msg pointer
    is NULL which led to a kernel crash when trying to use master->cur_msg->spi.
    mtk_spi_can_dma(), pointed by master->can_dma, doesn't use this parameter
    avoid the problem by setting NULL as second parameter.
    
    Fixes: a568231f46322 ("spi: mediatek: Add spi bus for Mediatek MT8173")
    Signed-off-by: Benjamin Gaignard <benjamin.gaignard@collabora.com>
    Link: https://lore.kernel.org/r/20220131141708.888710-1-benjamin.gaignard@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9fc48511c65a4f2bb7f57aa91acc6ef324225d0
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Thu Jan 27 13:53:59 2022 -0500

    spi: bcm-qspi: check for valid cs before applying chip select
    
    commit 2cbd27267ffe020af1442b95ec57f59a157ba85c upstream.
    
    Apply only valid chip select value. This change fixes case where chip
    select is set to initial value of '-1' during probe and  PM supend and
    subsequent resume can try to use the value with undefined behaviour.
    Also in case where gpio based chip select, the check in
    bcm_qspi_chip_select() shall prevent undefined behaviour on resume.
    
    Fixes: fa236a7ef240 ("spi: bcm-qspi: Add Broadcom MSPI driver")
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220127185359.27322-1-kdasu.kdev@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e0498e24b1304b5193e424600a28baa813903c3
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Feb 4 12:55:37 2022 +0100

    iommu/amd: Fix loop timeout issue in iommu_ga_log_enable()
    
    commit 9b45a7738eec52bf0f5d8d3d54e822962781c5f2 upstream.
    
    The polling loop for the register change in iommu_ga_log_enable() needs
    to have a udelay() in it.  Otherwise the CPU might be faster than the
    IOMMU hardware and wrongly trigger the WARN_ON() further down the code
    stream. Use a 10us for udelay(), has there is some hardware where
    activation of the GA log can take more than a 100ms.
    
    A future optimization should move the activation check of the GA log
    to the point where it gets used for the first time. But that is a
    bigger change and not suitable for a fix.
    
    Fixes: 8bda0cfbdc1a ("iommu/amd: Detect and initialize guest vAPIC log")
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Link: https://lore.kernel.org/r/20220204115537.3894-1-joro@8bytes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c43d46daa0d2928234dd2792ebebc35d29ee2d1
Author: Guoqing Jiang <guoqing.jiang@linux.dev>
Date:   Fri Jan 28 11:10:02 2022 +0800

    iommu/vt-d: Fix potential memory leak in intel_setup_irq_remapping()
    
    commit 99e675d473eb8cf2deac1376a0f840222fc1adcf upstream.
    
    After commit e3beca48a45b ("irqdomain/treewide: Keep firmware node
    unconditionally allocated"). For tear down scenario, fn is only freed
    after fail to allocate ir_domain, though it also should be freed in case
    dmar_enable_qi returns error.
    
    Besides free fn, irq_domain and ir_msi_domain need to be removed as well
    if intel_setup_irq_remapping fails to enable queued invalidation.
    
    Improve the rewinding path by add out_free_ir_domain and out_free_fwnode
    lables per Baolu's suggestion.
    
    Fixes: e3beca48a45b ("irqdomain/treewide: Keep firmware node unconditionally allocated")
    Suggested-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Guoqing Jiang <guoqing.jiang@linux.dev>
    Link: https://lore.kernel.org/r/20220119063640.16864-1-guoqing.jiang@linux.dev
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20220128031002.2219155-3-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cff7faba8884c8834933f63e84db0363d2bd73cf
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Jan 31 11:45:26 2022 +0200

    RDMA/mlx4: Don't continue event handler after memory allocation failure
    
    commit f3136c4ce7acf64bee43135971ca52a880572e32 upstream.
    
    The failure to allocate memory during MLX4_DEV_EVENT_PORT_MGMT_CHANGE
    event handler will cause skip the assignment logic, but
    ib_dispatch_event() will be called anyway.
    
    Fix it by calling to return instead of break after memory allocation
    failure.
    
    Fixes: 00f5ce99dc6e ("mlx4: Use port management change event instead of smp_snoop")
    Link: https://lore.kernel.org/r/12a0e83f18cfad4b5f62654f141e240d04915e10.1643622264.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Reviewed-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc5d3e8b70d55072e43d5df3143fc4f24ffc193f
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Sun Jan 30 18:08:15 2022 +0100

    RDMA/siw: Fix broken RDMA Read Fence/Resume logic.
    
    commit b43a76f423aa304037603fd6165c4a534d2c09a7 upstream.
    
    Code unconditionally resumed fenced SQ processing after next RDMA Read
    completion, even if other RDMA Read responses are still outstanding, or
    ORQ is full. Also adds comments for better readability of fence
    processing, and removes orq_get_tail() helper, which is not needed
    anymore.
    
    Fixes: 8b6a361b8c48 ("rdma/siw: receive path")
    Fixes: a531975279f3 ("rdma/siw: main include file")
    Link: https://lore.kernel.org/r/20220130170815.1940-1-bmt@zurich.ibm.com
    Reported-by: Jared Holzman <jared.holzman@excelero.com>
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60af6e6860840e8d3cb22a2a3be9b6729fc24d00
Author: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
Date:   Wed Jan 19 04:28:09 2022 -0500

    IB/rdmavt: Validate remote_addr during loopback atomic tests
    
    commit 4028bccb003cf67e46632dee7f97ddc5d7b6e685 upstream.
    
    The rdma-core test suite sends an unaligned remote address and expects a
    failure.
    
    ERROR: test_atomic_non_aligned_addr (tests.test_atomic.AtomicTest)
    
    The qib/hfi1 rc handling validates properly, but the test has the client
    and server on the same system.
    
    The loopback of these operations is a distinct code path.
    
    Fix by syntaxing the proposed remote address in the loopback code path.
    
    Fixes: 15703461533a ("IB/{hfi1, qib, rdmavt}: Move ruc_loopback to rdmavt")
    Link: https://lore.kernel.org/r/1642584489-141005-1-git-send-email-mike.marciniszyn@cornelisnetworks.com
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bbb6e6a1caad71ad635d0feaaf13d9daef339c2
Author: Yutian Yang <nglaive@gmail.com>
Date:   Thu Sep 2 14:55:07 2021 -0700

    memcg: charge fs_context and legacy_fs_context
    
    commit bb902cb47cf93b33cd92b3b7a4019330a03ef57f upstream.
    
    This patch adds accounting flags to fs_context and legacy_fs_context
    allocation sites so that kernel could correctly charge these objects.
    
    We have written a PoC to demonstrate the effect of the missing-charging
    bugs.  The PoC takes around 1,200MB unaccounted memory, while it is
    charged for only 362MB memory usage.  We evaluate the PoC on QEMU x86_64
    v5.2.90 + Linux kernel v5.10.19 + Debian buster.  All the limitations
    including ulimits and sysctl variables are set as default.  Specifically,
    the hard NOFILE limit and nr_open in sysctl are both 1,048,576.
    
    /*------------------------- POC code ----------------------------*/
    
    #define _GNU_SOURCE
    #include <sys/types.h>
    #include <sys/file.h>
    #include <time.h>
    #include <sys/wait.h>
    #include <stdint.h>
    #include <stdlib.h>
    #include <unistd.h>
    #include <stdio.h>
    #include <signal.h>
    #include <sched.h>
    #include <fcntl.h>
    #include <linux/mount.h>
    
    #define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \
                            } while (0)
    
    #define STACK_SIZE (8 * 1024)
    #ifndef __NR_fsopen
    #define __NR_fsopen 430
    #endif
    static inline int fsopen(const char *fs_name, unsigned int flags)
    {
            return syscall(__NR_fsopen, fs_name, flags);
    }
    
    static char thread_stack[512][STACK_SIZE];
    
    int thread_fn(void* arg)
    {
      for (int i = 0; i< 800000; ++i) {
        int fsfd = fsopen("nfs", FSOPEN_CLOEXEC);
        if (fsfd == -1) {
          errExit("fsopen");
        }
      }
      while(1);
      return 0;
    }
    
    int main(int argc, char *argv[]) {
      int thread_pid;
      for (int i = 0; i < 1; ++i) {
        thread_pid = clone(thread_fn, thread_stack[i] + STACK_SIZE, \
          SIGCHLD, NULL);
      }
      while(1);
      return 0;
    }
    
    /*-------------------------- end --------------------------------*/
    
    Link: https://lkml.kernel.org/r/1626517201-24086-1-git-send-email-nglaive@gmail.com
    Signed-off-by: Yutian Yang <nglaive@gmail.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: <shenwenbo@zju.edu.cn>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f837785c2ec69920263f3b5fb8ec8aef8af42fb
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Feb 4 17:47:55 2022 -0800

    Revert "ASoC: mediatek: Check for error clk pointer"
    
    This reverts commit 8b894d503ed79c3e1a96eab50a69ff29e5aade34 which is
    commit 9de2b9286a6dd16966959b3cb34fc2ddfd39213e upstream
    
    With this patch in the tree, Chromebooks running the affected hardware
    no longer boot. Bisect points to this patch, and reverting it fixes
    the problem.
    
    An analysis of the code with this patch applied shows:
    
            ret = init_clks(pdev, clk);
            if (ret)
                    return ERR_PTR(ret);
    ...
                    for (j = 0; j < MAX_CLKS && data->clk_id[j]; j++) {
                            struct clk *c = clk[data->clk_id[j]];
    
                            if (IS_ERR(c)) {
                                    dev_err(&pdev->dev, "%s: clk unavailable\n",
                                            data->name);
                                    return ERR_CAST(c);
                            }
    
                            scpd->clk[j] = c;
                    }
    
    Not all clocks in the clk_names array have to be present. Only the clocks
    in the data->clk_id array are actually needed. The code already checks if
    the required clocks are available and bails out if not. The assumption that
    all clocks have to be present is wrong, and commit 9de2b9286a6d needs to be
    reverted.
    
    Fixes: 9de2b9286a6d ("ASoC: mediatek: Check for error clk pointer")
    Cc: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: James Liao <jamesjj.liao@mediatek.com>
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Matthias Brugger <matthias.bgg@gmail.com
    Cc: Frank Wunderlich <frank-w@public-files.de>
    Cc: Daniel Golle <daniel@makrotopia.org>
    Link: https://lore.kernel.org/lkml/20220205014755.699603-1-linux@roeck-us.net/
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 952717785218f96a28b67d05861d7b73c1b320a0
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Thu Feb 3 22:42:09 2022 -0500

    block: bio-integrity: Advance seed correctly for larger interval sizes
    
    commit b13e0c71856817fca67159b11abac350e41289f5 upstream.
    
    Commit 309a62fa3a9e ("bio-integrity: bio_integrity_advance must update
    integrity seed") added code to update the integrity seed value when
    advancing a bio. However, it failed to take into account that the
    integrity interval might be larger than the 512-byte block layer
    sector size. This broke bio splitting on PI devices with 4KB logical
    blocks.
    
    The seed value should be advanced by bio_integrity_intervals() and not
    the number of sectors.
    
    Cc: Dmitry Monakhov <dmonakhov@openvz.org>
    Cc: stable@vger.kernel.org
    Fixes: 309a62fa3a9e ("bio-integrity: bio_integrity_advance must update integrity seed")
    Tested-by: Dmitry Ivanov <dmitry.ivanov2@hpe.com>
    Reported-by: Alexey Lyashkov <alexey.lyashkov@hpe.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Link: https://lore.kernel.org/r/20220204034209.4193-1-martin.petersen@oracle.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3533ee20e9a0e2e8f60384da7450d43d1c63d1a
Author: Lang Yu <lang.yu@amd.com>
Date:   Thu Feb 3 20:49:37 2022 -0800

    mm/kmemleak: avoid scanning potential huge holes
    
    commit c10a0f877fe007021d70f9cada240f42adc2b5db upstream.
    
    When using devm_request_free_mem_region() and devm_memremap_pages() to
    add ZONE_DEVICE memory, if requested free mem region's end pfn were
    huge(e.g., 0x400000000), the node_end_pfn() will be also huge (see
    move_pfn_range_to_zone()).  Thus it creates a huge hole between
    node_start_pfn() and node_end_pfn().
    
    We found on some AMD APUs, amdkfd requested such a free mem region and
    created a huge hole.  In such a case, following code snippet was just
    doing busy test_bit() looping on the huge hole.
    
      for (pfn = start_pfn; pfn < end_pfn; pfn++) {
            struct page *page = pfn_to_online_page(pfn);
                    if (!page)
                            continue;
            ...
      }
    
    So we got a soft lockup:
    
      watchdog: BUG: soft lockup - CPU#6 stuck for 26s! [bash:1221]
      CPU: 6 PID: 1221 Comm: bash Not tainted 5.15.0-custom #1
      RIP: 0010:pfn_to_online_page+0x5/0xd0
      Call Trace:
        ? kmemleak_scan+0x16a/0x440
        kmemleak_write+0x306/0x3a0
        ? common_file_perm+0x72/0x170
        full_proxy_write+0x5c/0x90
        vfs_write+0xb9/0x260
        ksys_write+0x67/0xe0
        __x64_sys_write+0x1a/0x20
        do_syscall_64+0x3b/0xc0
        entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    I did some tests with the patch.
    
    (1) amdgpu module unloaded
    
    before the patch:
    
      real    0m0.976s
      user    0m0.000s
      sys     0m0.968s
    
    after the patch:
    
      real    0m0.981s
      user    0m0.000s
      sys     0m0.973s
    
    (2) amdgpu module loaded
    
    before the patch:
    
      real    0m35.365s
      user    0m0.000s
      sys     0m35.354s
    
    after the patch:
    
      real    0m1.049s
      user    0m0.000s
      sys     0m1.042s
    
    Link: https://lkml.kernel.org/r/20211108140029.721144-1-lang.yu@amd.com
    Signed-off-by: Lang Yu <lang.yu@amd.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acc887ba88333f5fec49631f12d8cc7ebd95781c
Author: Nick Lopez <github@glowingmonkey.org>
Date:   Sat Jan 22 01:19:06 2022 -0700

    drm/nouveau: fix off by one in BIOS boundary checking
    
    commit 1b777d4d9e383d2744fc9b3a09af6ec1893c8b1a upstream.
    
    Bounds checking when parsing init scripts embedded in the BIOS reject
    access to the last byte. This causes driver initialization to fail on
    Apple eMac's with GeForce 2 MX GPUs, leaving the system with no working
    console.
    
    This is probably only seen on OpenFirmware machines like PowerPC Macs
    because the BIOS image provided by OF is only the used parts of the ROM,
    not a power-of-two blocks read from PCI directly so PCs always have
    empty bytes at the end that are never accessed.
    
    Signed-off-by: Nick Lopez <github@glowingmonkey.org>
    Fixes: 4d4e9907ff572 ("drm/nouveau/bios: guard against out-of-bounds accesses to image")
    Cc: <stable@vger.kernel.org> # v4.10+
    Reviewed-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220122081906.2633061-1-github@glowingmonkey.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26b3901d20bf9da2c6a00cb1fb48932166f80a45
Author: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
Date:   Thu Jan 20 20:09:16 2022 +0900

    btrfs: fix deadlock between quota disable and qgroup rescan worker
    
    commit e804861bd4e69cc5fe1053eedcb024982dde8e48 upstream.
    
    Quota disable ioctl starts a transaction before waiting for the qgroup
    rescan worker completes. However, this wait can be infinite and results
    in deadlock because of circular dependency among the quota disable
    ioctl, the qgroup rescan worker and the other task with transaction such
    as block group relocation task.
    
    The deadlock happens with the steps following:
    
    1) Task A calls ioctl to disable quota. It starts a transaction and
       waits for qgroup rescan worker completes.
    2) Task B such as block group relocation task starts a transaction and
       joins to the transaction that task A started. Then task B commits to
       the transaction. In this commit, task B waits for a commit by task A.
    3) Task C as the qgroup rescan worker starts its job and starts a
       transaction. In this transaction start, task C waits for completion
       of the transaction that task A started and task B committed.
    
    This deadlock was found with fstests test case btrfs/115 and a zoned
    null_blk device. The test case enables and disables quota, and the
    block group reclaim was triggered during the quota disable by chance.
    The deadlock was also observed by running quota enable and disable in
    parallel with 'btrfs balance' command on regular null_blk devices.
    
    An example report of the deadlock:
    
      [372.469894] INFO: task kworker/u16:6:103 blocked for more than 122 seconds.
      [372.479944]       Not tainted 5.16.0-rc8 #7
      [372.485067] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      [372.493898] task:kworker/u16:6   state:D stack:    0 pid:  103 ppid:     2 flags:0x00004000
      [372.503285] Workqueue: btrfs-qgroup-rescan btrfs_work_helper [btrfs]
      [372.510782] Call Trace:
      [372.514092]  <TASK>
      [372.521684]  __schedule+0xb56/0x4850
      [372.530104]  ? io_schedule_timeout+0x190/0x190
      [372.538842]  ? lockdep_hardirqs_on+0x7e/0x100
      [372.547092]  ? _raw_spin_unlock_irqrestore+0x3e/0x60
      [372.555591]  schedule+0xe0/0x270
      [372.561894]  btrfs_commit_transaction+0x18bb/0x2610 [btrfs]
      [372.570506]  ? btrfs_apply_pending_changes+0x50/0x50 [btrfs]
      [372.578875]  ? free_unref_page+0x3f2/0x650
      [372.585484]  ? finish_wait+0x270/0x270
      [372.591594]  ? release_extent_buffer+0x224/0x420 [btrfs]
      [372.599264]  btrfs_qgroup_rescan_worker+0xc13/0x10c0 [btrfs]
      [372.607157]  ? lock_release+0x3a9/0x6d0
      [372.613054]  ? btrfs_qgroup_account_extent+0xda0/0xda0 [btrfs]
      [372.620960]  ? do_raw_spin_lock+0x11e/0x250
      [372.627137]  ? rwlock_bug.part.0+0x90/0x90
      [372.633215]  ? lock_is_held_type+0xe4/0x140
      [372.639404]  btrfs_work_helper+0x1ae/0xa90 [btrfs]
      [372.646268]  process_one_work+0x7e9/0x1320
      [372.652321]  ? lock_release+0x6d0/0x6d0
      [372.658081]  ? pwq_dec_nr_in_flight+0x230/0x230
      [372.664513]  ? rwlock_bug.part.0+0x90/0x90
      [372.670529]  worker_thread+0x59e/0xf90
      [372.676172]  ? process_one_work+0x1320/0x1320
      [372.682440]  kthread+0x3b9/0x490
      [372.687550]  ? _raw_spin_unlock_irq+0x24/0x50
      [372.693811]  ? set_kthread_struct+0x100/0x100
      [372.700052]  ret_from_fork+0x22/0x30
      [372.705517]  </TASK>
      [372.709747] INFO: task btrfs-transacti:2347 blocked for more than 123 seconds.
      [372.729827]       Not tainted 5.16.0-rc8 #7
      [372.745907] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      [372.767106] task:btrfs-transacti state:D stack:    0 pid: 2347 ppid:     2 flags:0x00004000
      [372.787776] Call Trace:
      [372.801652]  <TASK>
      [372.812961]  __schedule+0xb56/0x4850
      [372.830011]  ? io_schedule_timeout+0x190/0x190
      [372.852547]  ? lockdep_hardirqs_on+0x7e/0x100
      [372.871761]  ? _raw_spin_unlock_irqrestore+0x3e/0x60
      [372.886792]  schedule+0xe0/0x270
      [372.901685]  wait_current_trans+0x22c/0x310 [btrfs]
      [372.919743]  ? btrfs_put_transaction+0x3d0/0x3d0 [btrfs]
      [372.938923]  ? finish_wait+0x270/0x270
      [372.959085]  ? join_transaction+0xc75/0xe30 [btrfs]
      [372.977706]  start_transaction+0x938/0x10a0 [btrfs]
      [372.997168]  transaction_kthread+0x19d/0x3c0 [btrfs]
      [373.013021]  ? btrfs_cleanup_transaction.isra.0+0xfc0/0xfc0 [btrfs]
      [373.031678]  kthread+0x3b9/0x490
      [373.047420]  ? _raw_spin_unlock_irq+0x24/0x50
      [373.064645]  ? set_kthread_struct+0x100/0x100
      [373.078571]  ret_from_fork+0x22/0x30
      [373.091197]  </TASK>
      [373.105611] INFO: task btrfs:3145 blocked for more than 123 seconds.
      [373.114147]       Not tainted 5.16.0-rc8 #7
      [373.120401] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      [373.130393] task:btrfs           state:D stack:    0 pid: 3145 ppid:  3141 flags:0x00004000
      [373.140998] Call Trace:
      [373.145501]  <TASK>
      [373.149654]  __schedule+0xb56/0x4850
      [373.155306]  ? io_schedule_timeout+0x190/0x190
      [373.161965]  ? lockdep_hardirqs_on+0x7e/0x100
      [373.168469]  ? _raw_spin_unlock_irqrestore+0x3e/0x60
      [373.175468]  schedule+0xe0/0x270
      [373.180814]  wait_for_commit+0x104/0x150 [btrfs]
      [373.187643]  ? test_and_set_bit+0x20/0x20 [btrfs]
      [373.194772]  ? kmem_cache_free+0x124/0x550
      [373.201191]  ? btrfs_put_transaction+0x69/0x3d0 [btrfs]
      [373.208738]  ? finish_wait+0x270/0x270
      [373.214704]  ? __btrfs_end_transaction+0x347/0x7b0 [btrfs]
      [373.222342]  btrfs_commit_transaction+0x44d/0x2610 [btrfs]
      [373.230233]  ? join_transaction+0x255/0xe30 [btrfs]
      [373.237334]  ? btrfs_record_root_in_trans+0x4d/0x170 [btrfs]
      [373.245251]  ? btrfs_apply_pending_changes+0x50/0x50 [btrfs]
      [373.253296]  relocate_block_group+0x105/0xc20 [btrfs]
      [373.260533]  ? mutex_lock_io_nested+0x1270/0x1270
      [373.267516]  ? btrfs_wait_nocow_writers+0x85/0x180 [btrfs]
      [373.275155]  ? merge_reloc_roots+0x710/0x710 [btrfs]
      [373.283602]  ? btrfs_wait_ordered_extents+0xd30/0xd30 [btrfs]
      [373.291934]  ? kmem_cache_free+0x124/0x550
      [373.298180]  btrfs_relocate_block_group+0x35c/0x930 [btrfs]
      [373.306047]  btrfs_relocate_chunk+0x85/0x210 [btrfs]
      [373.313229]  btrfs_balance+0x12f4/0x2d20 [btrfs]
      [373.320227]  ? lock_release+0x3a9/0x6d0
      [373.326206]  ? btrfs_relocate_chunk+0x210/0x210 [btrfs]
      [373.333591]  ? lock_is_held_type+0xe4/0x140
      [373.340031]  ? rcu_read_lock_sched_held+0x3f/0x70
      [373.346910]  btrfs_ioctl_balance+0x548/0x700 [btrfs]
      [373.354207]  btrfs_ioctl+0x7f2/0x71b0 [btrfs]
      [373.360774]  ? lockdep_hardirqs_on_prepare+0x410/0x410
      [373.367957]  ? lockdep_hardirqs_on_prepare+0x410/0x410
      [373.375327]  ? btrfs_ioctl_get_supported_features+0x20/0x20 [btrfs]
      [373.383841]  ? find_held_lock+0x2c/0x110
      [373.389993]  ? lock_release+0x3a9/0x6d0
      [373.395828]  ? mntput_no_expire+0xf7/0xad0
      [373.402083]  ? lock_is_held_type+0xe4/0x140
      [373.408249]  ? vfs_fileattr_set+0x9f0/0x9f0
      [373.414486]  ? selinux_file_ioctl+0x349/0x4e0
      [373.420938]  ? trace_raw_output_lock+0xb4/0xe0
      [373.427442]  ? selinux_inode_getsecctx+0x80/0x80
      [373.434224]  ? lockdep_hardirqs_on+0x7e/0x100
      [373.440660]  ? force_qs_rnp+0x2a0/0x6b0
      [373.446534]  ? lock_is_held_type+0x9b/0x140
      [373.452763]  ? __blkcg_punt_bio_submit+0x1b0/0x1b0
      [373.459732]  ? security_file_ioctl+0x50/0x90
      [373.466089]  __x64_sys_ioctl+0x127/0x190
      [373.472022]  do_syscall_64+0x3b/0x90
      [373.477513]  entry_SYSCALL_64_after_hwframe+0x44/0xae
      [373.484823] RIP: 0033:0x7f8f4af7e2bb
      [373.490493] RSP: 002b:00007ffcbf936178 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
      [373.500197] RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f8f4af7e2bb
      [373.509451] RDX: 00007ffcbf936220 RSI: 00000000c4009420 RDI: 0000000000000003
      [373.518659] RBP: 00007ffcbf93774a R08: 0000000000000013 R09: 00007f8f4b02d4e0
      [373.527872] R10: 00007f8f4ae87740 R11: 0000000000000246 R12: 0000000000000001
      [373.537222] R13: 00007ffcbf936220 R14: 0000000000000000 R15: 0000000000000002
      [373.546506]  </TASK>
      [373.550878] INFO: task btrfs:3146 blocked for more than 123 seconds.
      [373.559383]       Not tainted 5.16.0-rc8 #7
      [373.565748] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      [373.575748] task:btrfs           state:D stack:    0 pid: 3146 ppid:  2168 flags:0x00000000
      [373.586314] Call Trace:
      [373.590846]  <TASK>
      [373.595121]  __schedule+0xb56/0x4850
      [373.600901]  ? __lock_acquire+0x23db/0x5030
      [373.607176]  ? io_schedule_timeout+0x190/0x190
      [373.613954]  schedule+0xe0/0x270
      [373.619157]  schedule_timeout+0x168/0x220
      [373.625170]  ? usleep_range_state+0x150/0x150
      [373.631653]  ? mark_held_locks+0x9e/0xe0
      [373.637767]  ? do_raw_spin_lock+0x11e/0x250
      [373.643993]  ? lockdep_hardirqs_on_prepare+0x17b/0x410
      [373.651267]  ? _raw_spin_unlock_irq+0x24/0x50
      [373.657677]  ? lockdep_hardirqs_on+0x7e/0x100
      [373.664103]  wait_for_completion+0x163/0x250
      [373.670437]  ? bit_wait_timeout+0x160/0x160
      [373.676585]  btrfs_quota_disable+0x176/0x9a0 [btrfs]
      [373.683979]  ? btrfs_quota_enable+0x12f0/0x12f0 [btrfs]
      [373.691340]  ? down_write+0xd0/0x130
      [373.696880]  ? down_write_killable+0x150/0x150
      [373.703352]  btrfs_ioctl+0x3945/0x71b0 [btrfs]
      [373.710061]  ? find_held_lock+0x2c/0x110
      [373.716192]  ? lock_release+0x3a9/0x6d0
      [373.722047]  ? __handle_mm_fault+0x23cd/0x3050
      [373.728486]  ? btrfs_ioctl_get_supported_features+0x20/0x20 [btrfs]
      [373.737032]  ? set_pte+0x6a/0x90
      [373.742271]  ? do_raw_spin_unlock+0x55/0x1f0
      [373.748506]  ? lock_is_held_type+0xe4/0x140
      [373.754792]  ? vfs_fileattr_set+0x9f0/0x9f0
      [373.761083]  ? selinux_file_ioctl+0x349/0x4e0
      [373.767521]  ? selinux_inode_getsecctx+0x80/0x80
      [373.774247]  ? __up_read+0x182/0x6e0
      [373.780026]  ? count_memcg_events.constprop.0+0x46/0x60
      [373.787281]  ? up_write+0x460/0x460
      [373.792932]  ? security_file_ioctl+0x50/0x90
      [373.799232]  __x64_sys_ioctl+0x127/0x190
      [373.805237]  do_syscall_64+0x3b/0x90
      [373.810947]  entry_SYSCALL_64_after_hwframe+0x44/0xae
      [373.818102] RIP: 0033:0x7f1383ea02bb
      [373.823847] RSP: 002b:00007fffeb4d71f8 EFLAGS: 00000202 ORIG_RAX: 0000000000000010
      [373.833641] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f1383ea02bb
      [373.842961] RDX: 00007fffeb4d7210 RSI: 00000000c0109428 RDI: 0000000000000003
      [373.852179] RBP: 0000000000000003 R08: 0000000000000003 R09: 0000000000000078
      [373.861408] R10: 00007f1383daec78 R11: 0000000000000202 R12: 00007fffeb4d874a
      [373.870647] R13: 0000000000493099 R14: 0000000000000001 R15: 0000000000000000
      [373.879838]  </TASK>
      [373.884018]
                   Showing all locks held in the system:
      [373.894250] 3 locks held by kworker/4:1/58:
      [373.900356] 1 lock held by khungtaskd/63:
      [373.906333]  #0: ffffffff8945ff60 (rcu_read_lock){....}-{1:2}, at: debug_show_all_locks+0x53/0x260
      [373.917307] 3 locks held by kworker/u16:6/103:
      [373.923938]  #0: ffff888127b4f138 ((wq_completion)btrfs-qgroup-rescan){+.+.}-{0:0}, at: process_one_work+0x712/0x1320
      [373.936555]  #1: ffff88810b817dd8 ((work_completion)(&work->normal_work)){+.+.}-{0:0}, at: process_one_work+0x73f/0x1320
      [373.951109]  #2: ffff888102dd4650 (sb_internal#2){.+.+}-{0:0}, at: btrfs_qgroup_rescan_worker+0x1f6/0x10c0 [btrfs]
      [373.964027] 2 locks held by less/1803:
      [373.969982]  #0: ffff88813ed56098 (&tty->ldisc_sem){++++}-{0:0}, at: tty_ldisc_ref_wait+0x24/0x80
      [373.981295]  #1: ffffc90000b3b2e8 (&ldata->atomic_read_lock){+.+.}-{3:3}, at: n_tty_read+0x9e2/0x1060
      [373.992969] 1 lock held by btrfs-transacti/2347:
      [373.999893]  #0: ffff88813d4887a8 (&fs_info->transaction_kthread_mutex){+.+.}-{3:3}, at: transaction_kthread+0xe3/0x3c0 [btrfs]
      [374.015872] 3 locks held by btrfs/3145:
      [374.022298]  #0: ffff888102dd4460 (sb_writers#18){.+.+}-{0:0}, at: btrfs_ioctl_balance+0xc3/0x700 [btrfs]
      [374.034456]  #1: ffff88813d48a0a0 (&fs_info->reclaim_bgs_lock){+.+.}-{3:3}, at: btrfs_balance+0xfe5/0x2d20 [btrfs]
      [374.047646]  #2: ffff88813d488838 (&fs_info->cleaner_mutex){+.+.}-{3:3}, at: btrfs_relocate_block_group+0x354/0x930 [btrfs]
      [374.063295] 4 locks held by btrfs/3146:
      [374.069647]  #0: ffff888102dd4460 (sb_writers#18){.+.+}-{0:0}, at: btrfs_ioctl+0x38b1/0x71b0 [btrfs]
      [374.081601]  #1: ffff88813d488bb8 (&fs_info->subvol_sem){+.+.}-{3:3}, at: btrfs_ioctl+0x38fd/0x71b0 [btrfs]
      [374.094283]  #2: ffff888102dd4650 (sb_internal#2){.+.+}-{0:0}, at: btrfs_quota_disable+0xc8/0x9a0 [btrfs]
      [374.106885]  #3: ffff88813d489800 (&fs_info->qgroup_ioctl_lock){+.+.}-{3:3}, at: btrfs_quota_disable+0xd5/0x9a0 [btrfs]
    
      [374.126780] =============================================
    
    To avoid the deadlock, wait for the qgroup rescan worker to complete
    before starting the transaction for the quota disable ioctl. Clear
    BTRFS_FS_QUOTA_ENABLE flag before the wait and the transaction to
    request the worker to complete. On transaction start failure, set the
    BTRFS_FS_QUOTA_ENABLE flag again. These BTRFS_FS_QUOTA_ENABLE flag
    changes can be done safely since the function btrfs_quota_disable is not
    called concurrently because of fs_info->subvol_sem.
    
    Also check the BTRFS_FS_QUOTA_ENABLE flag in qgroup_rescan_init to avoid
    another qgroup rescan worker to start after the previous qgroup worker
    completed.
    
    CC: stable@vger.kernel.org # 5.4+
    Suggested-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e680e4d30186f4bee1c8bbfbe11586b417761e7f
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sat Jan 29 12:32:43 2022 +0100

    ALSA: hda/realtek: Fix silent output on Gigabyte X570 Aorus Xtreme after reboot from Windows
    
    commit ea3541961376f733373839cc90493aafa8a7f733 upstream.
    
    This commit switches the Gigabyte X570 Aorus Xtreme from using the
    ALC1220_FIXUP_CLEVO_P950 to the ALC1220_FIXUP_GB_X570 quirk. This fixes
    the no-audio after reboot from windows problem.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205275
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220129113243.93068-4-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e59f0554410dda68eeaad1c3ba38abebe70114c
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sat Jan 29 12:32:42 2022 +0100

    ALSA: hda/realtek: Fix silent output on Gigabyte X570S Aorus Master (newer chipset)
    
    commit 41a8601302ecbe704ac970552c33dc942300fc37 upstream.
    
    Newer versions of the X570 Master come with a newer revision of the
    mainboard chipset - the X570S. These boards have the same ALC1220 codec
    but seem to initialize the codec with a different parameter in Coef 0x7
    which causes the output audio to be very low. We therefore write a
    known-good value to Coef 0x7 to fix that. As the value is the exact same
    as on the other X570(non-S) boards the same quirk-function can be shared
    between both generations.
    
    This commit adds the Gigabyte X570S Aorus Master to the list of boards
    using the ALC1220_FIXUP_GB_X570 quirk. This fixes both, the silent output
    and the no-audio after reboot from windows problems.
    
    This work has been tested by the folks over at the level1techs forum here:
    https://forum.level1techs.com/t/has-anybody-gotten-audio-working-in-linux-on-aorus-x570-master/154072
    
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220129113243.93068-3-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8fbf567e7037e6507b7c12d61ccc4cb1823fdc0
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sat Jan 29 12:32:41 2022 +0100

    ALSA: hda/realtek: Add missing fixup-model entry for Gigabyte X570 ALC1220 quirks
    
    commit 63394a16086fc2152869d7902621e2525e14bc40 upstream.
    
    The initial commit of the new Gigabyte X570 ALC1220 quirks lacked the
    fixup-model entry in alc882_fixup_models[]. It seemed not to cause any ill
    effects but for completeness sake this commit makes up for that.
    
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220129113243.93068-2-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66b5dd10c2b09e6f0abf9c3022d80609f2aa4e2f
Author: Albert Geantă <albertgeanta@gmail.com>
Date:   Mon Jan 31 03:05:23 2022 +0200

    ALSA: hda/realtek: Add quirk for ASUS GU603
    
    commit 94db9cc8f8fa2d5426ce79ec4ca16028f7084224 upstream.
    
    The ASUS GU603 (Zephyrus M16 - SSID 1043:16b2) requires a quirk similar to
    other ASUS devices for correctly routing the 4 integrated speakers. This
    fixes it by adding a corresponding quirk entry, which connects the bass
    speakers to the proper DAC.
    
    Signed-off-by: Albert Geantă <albertgeanta@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220131010523.546386-1-albertgeanta@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2c5fde84cee5ac0436e92c6f6c15dce0c7d0506
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Aug 17 10:21:39 2020 +0200

    ALSA: usb-audio: Simplify quirk entries with a macro
    
    commit fa10635fca359f047df6a18b3befd2f1e7304e1a upstream.
    
    Introduce a new macro USB_AUDIO_DEVICE() for the entries matching with
    the pid/vid pair and the class/subclass, and remove the open-code.
    
    Link: https://lore.kernel.org/r/20200817082140.20232-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [ just add the macro for 5.4.y, no entry changes made - gregkh ]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd9a23319f16e7031f0d8c98eed6e093c2927229
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 24 15:32:53 2022 +0000

    ASoC: ops: Reject out of bounds values in snd_soc_put_xr_sx()
    
    commit 4cf28e9ae6e2e11a044be1bcbcfa1b0d8675fe4d upstream.
    
    We don't currently validate that the values being set are within the range
    we advertised to userspace as being valid, do so and reject any values
    that are out of range.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220124153253.3548853-4-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c33402b056de61104b6146dedbe138ca8d7ec62b
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 24 15:32:52 2022 +0000

    ASoC: ops: Reject out of bounds values in snd_soc_put_volsw_sx()
    
    commit 4f1e50d6a9cf9c1b8c859d449b5031cacfa8404e upstream.
    
    We don't currently validate that the values being set are within the range
    we advertised to userspace as being valid, do so and reject any values
    that are out of range.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220124153253.3548853-3-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68fd718724284788fc5f379e0b7cac541429ece7
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 24 15:32:51 2022 +0000

    ASoC: ops: Reject out of bounds values in snd_soc_put_volsw()
    
    commit 817f7c9335ec01e0f5e8caffc4f1dcd5e458a4c0 upstream.
    
    We don't currently validate that the values being set are within the range
    we advertised to userspace as being valid, do so and reject any values
    that are out of range.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220124153253.3548853-2-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01baaf3bede90ab2c57f64d1c2d7875a1eecb58d
Author: Paul Moore <paul@paul-moore.com>
Date:   Thu Jan 13 18:54:38 2022 -0500

    audit: improve audit queue handling when "audit=1" on cmdline
    
    commit f26d04331360d42dbd6b58448bd98e4edbfbe1c5 upstream.
    
    When an admin enables audit at early boot via the "audit=1" kernel
    command line the audit queue behavior is slightly different; the
    audit subsystem goes to greater lengths to avoid dropping records,
    which unfortunately can result in problems when the audit daemon is
    forcibly stopped for an extended period of time.
    
    This patch makes a number of changes designed to improve the audit
    queuing behavior so that leaving the audit daemon in a stopped state
    for an extended period does not cause a significant impact to the
    system.
    
    - kauditd_send_queue() is now limited to looping through the
      passed queue only once per call.  This not only prevents the
      function from looping indefinitely when records are returned
      to the current queue, it also allows any recovery handling in
      kauditd_thread() to take place when kauditd_send_queue()
      returns.
    
    - Transient netlink send errors seen as -EAGAIN now cause the
      record to be returned to the retry queue instead of going to
      the hold queue.  The intention of the hold queue is to store,
      perhaps for an extended period of time, the events which led
      up to the audit daemon going offline.  The retry queue remains
      a temporary queue intended to protect against transient issues
      between the kernel and the audit daemon.
    
    - The retry queue is now limited by the audit_backlog_limit
      setting, the same as the other queues.  This allows admins
      to bound the size of all of the audit queues on the system.
    
    - kauditd_rehold_skb() now returns records to the end of the
      hold queue to ensure ordering is preserved in the face of
      recent changes to kauditd_send_queue().
    
    Cc: stable@vger.kernel.org
    Fixes: 5b52330bbfe63 ("audit: fix auditd/kernel connection state tracking")
    Fixes: f4b3ee3c85551 ("audit: improve robustness of the audit queue handling")
    Reported-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Tested-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
