commit 8539dfa4fcbcf58c3c2f92ac57b964add884d12b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 4 22:34:32 2019 +0100

    Linux 5.3.15

commit d9c7531fb4708eb3f22cccdb0b7371834d37555a
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Nov 20 09:25:13 2019 +0800

    net: fec: fix clock count mis-match
    
    commit a31eda65ba210741b598044d045480494d0ed52a upstream.
    
    pm_runtime_put_autosuspend in probe will call runtime suspend to
    disable clks automatically if CONFIG_PM is defined. (If CONFIG_PM
    is not defined, its implementation will be empty, then runtime
    suspend will not be called.)
    
    Therefore, we can call pm_runtime_get_sync to runtime resume it
    first to enable clks, which matches the runtime suspend. (Only when
    CONFIG_PM is defined, otherwise pm_runtime_get_sync will also be
    empty, then runtime resume will not be called.)
    
    Then it is fine to disable clks without causing clock count mis-match.
    
    Fixes: c43eab3eddb4 ("net: fec: add missed clk_disable_unprepare in remove")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce74ce81c413749eccb3559c863a9279e7271f0
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 22 19:56:41 2019 +0100

    platform/x86: hp-wmi: Fix ACPI errors caused by passing 0 as input size
    
    commit f3e4f3fc8ee9729c4b1b27a478c68b713df53c0c upstream.
    
    The AML code implementing the WMI methods creates a variable length
    field to hold the input data we pass like this:
    
            CreateDWordField (Arg1, 0x0C, DSZI)
            Local5 = DSZI /* \HWMC.DSZI */
            CreateField (Arg1, 0x80, (Local5 * 0x08), DAIN)
    
    If we pass 0 as bios_args.datasize argument then (Local5 * 0x08)
    is 0 which results in these errors:
    
    [   71.973305] ACPI BIOS Error (bug): Attempt to CreateField of length zero (20190816/dsopcode-133)
    [   71.973332] ACPI Error: Aborting method \HWMC due to previous error (AE_AML_OPERAND_VALUE) (20190816/psparse-529)
    [   71.973413] ACPI Error: Aborting method \_SB.WMID.WMAA due to previous error (AE_AML_OPERAND_VALUE) (20190816/psparse-529)
    
    And in our HPWMI_WIRELESS2_QUERY calls always failing. for read commands
    like HPWMI_WIRELESS2_QUERY the DSZI value is not used / checked, except for
    read commands where extra input is needed to specify exactly what to read.
    
    So for HPWMI_WIRELESS2_QUERY we can safely pass the size of the expected
    output as insize to hp_wmi_perform_query(), as we are already doing for all
    other HPWMI_READ commands we send. Doing so fixes these errors.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197007
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201981
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f847eafd12db90aa9939343eb576dd69a9e60189
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 22 19:56:40 2019 +0100

    platform/x86: hp-wmi: Fix ACPI errors caused by too small buffer
    
    commit 16245db1489cd9aa579506f64afeeeb13d825a93 upstream.
    
    The HP WMI calls may take up to 128 bytes of data as input, and
    the AML methods implementing the WMI calls, declare a couple of fields for
    accessing input in different sizes, specifycally the HWMC method contains:
    
            CreateField (Arg1, 0x80, 0x0400, D128)
    
    Even though we do not use any of the WMI command-types which need a buffer
    of this size, the APCI interpreter still tries to create it as it is
    declared in generoc code at the top of the HWMC method which runs before
    the code looks at which command-type is requested.
    
    This results in many of these errors on many different HP laptop models:
    
    [   14.459261] ACPI Error: Field [D128] at 1152 exceeds Buffer [NULL] size 160 (bits) (20170303/dsopcode-236)
    [   14.459268] ACPI Error: Method parse/execution failed [\HWMC] (Node ffff8edcc61507f8), AE_AML_BUFFER_LIMIT (20170303/psparse-543)
    [   14.459279] ACPI Error: Method parse/execution failed [\_SB.WMID.WMAA] (Node ffff8edcc61523c0), AE_AML_BUFFER_LIMIT (20170303/psparse-543)
    
    This commit increases the size of the data element of the bios_args struct
    to 128 bytes fixing these errors.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197007
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201981
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 153274cb1c62eb70fd09e2fbb85aa30597607361
Author: Candle Sun <candle.sun@unisoc.com>
Date:   Tue Oct 22 22:21:39 2019 +0800

    HID: core: check whether Usage Page item is after Usage ID items
    
    commit 1cb0d2aee26335d0bccf29100c7bed00ebece851 upstream.
    
    Upstream commit 58e75155009c ("HID: core: move Usage Page concatenation
    to Main item") adds support for Usage Page item after Usage ID items
    (such as keyboards manufactured by Primax).
    
    Usage Page concatenation in Main item works well for following report
    descriptor patterns:
    
        USAGE_PAGE (Keyboard)                   05 07
        USAGE_MINIMUM (Keyboard LeftControl)    19 E0
        USAGE_MAXIMUM (Keyboard Right GUI)      29 E7
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (8)                        95 08
        INPUT (Data,Var,Abs)                    81 02
    
    -------------
    
        USAGE_MINIMUM (Keyboard LeftControl)    19 E0
        USAGE_MAXIMUM (Keyboard Right GUI)      29 E7
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (8)                        95 08
        USAGE_PAGE (Keyboard)                   05 07
        INPUT (Data,Var,Abs)                    81 02
    
    But it makes the parser act wrong for the following report
    descriptor pattern(such as some Gamepads):
    
        USAGE_PAGE (Button)                     05 09
        USAGE (Button 1)                        09 01
        USAGE (Button 2)                        09 02
        USAGE (Button 4)                        09 04
        USAGE (Button 5)                        09 05
        USAGE (Button 7)                        09 07
        USAGE (Button 8)                        09 08
        USAGE (Button 14)                       09 0E
        USAGE (Button 15)                       09 0F
        USAGE (Button 13)                       09 0D
        USAGE_PAGE (Consumer Devices)           05 0C
        USAGE (Back)                            0a 24 02
        USAGE (HomePage)                        0a 23 02
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (11)                       95 0B
        INPUT (Data,Var,Abs)                    81 02
    
    With Usage Page concatenation in Main item, parser recognizes all the
    11 Usages as consumer keys, it is not the HID device's real intention.
    
    This patch checks whether Usage Page is really defined after Usage ID
    items by comparing usage page using status.
    
    Usage Page concatenation on currently defined Usage Page will always
    do in local parsing when Usage ID items encountered.
    
    When Main item is parsing, concatenation will do again with last
    defined Usage Page if this page has not been used in the previous
    usages concatenation.
    
    Signed-off-by: Candle Sun <candle.sun@unisoc.com>
    Signed-off-by: Nianfu Bai <nianfu.bai@unisoc.com>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Siarhei Vishniakou <svv@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb7bc3a2bb987865e149f6baa2a3d22dd18b201e
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Nov 7 21:43:41 2019 -0500

    ext4: add more paranoia checking in ext4_expand_extra_isize handling
    
    commit 4ea99936a1630f51fc3a2d61a58ec4a1c4b7d55a upstream.
    
    It's possible to specify a non-zero s_want_extra_isize via debugging
    option, and this can cause bad things(tm) to happen when using a file
    system with an inode size of 128 bytes.
    
    Add better checking when the file system is mounted, as well as when
    we are actually doing the trying to do the inode expansion.
    
    Link: https://lore.kernel.org/r/20191110121510.GH23325@mit.edu
    Reported-by: syzbot+f8d6f8386ceacdbfff57@syzkaller.appspotmail.com
    Reported-by: syzbot+33d7ea72e47de3bdf4e1@syzkaller.appspotmail.com
    Reported-by: syzbot+44b6763edfc17144296f@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2e1484ed6dc5bca7defdfdb97818bcb9fc69e6a
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Thu Nov 28 15:58:06 2019 -0300

    selftests: pmtu: use -oneline for ip route list cache
    
    [ Upstream commit 2745aea6750ff0d2c48285d25bdb00e5b636ec8b ]
    
    Some versions of iproute2 will output more than one line per entry, which
    will cause the test to fail, like:
    
    TEST: ipv6: list and flush cached exceptions                        [FAIL]
      can't list cached exceptions
    
    That happens, for example, with iproute2 4.15.0. When using the -oneline
    option, this will work just fine:
    
    TEST: ipv6: list and flush cached exceptions                        [ OK ]
    
    This also works just fine with a more recent version of iproute2, like
    5.4.0.
    
    For some reason, two lines are printed for the IPv4 test no matter what
    version of iproute2 is used. Use the same -oneline parameter there instead
    of counting the lines twice.
    
    Fixes: b964641e9925 ("selftests: pmtu: Make list_flush_ipv6_exception test more demanding")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Acked-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fc720c8cb0e782f26a89f8241a12e0e04256c89
Author: John Rutherford <john.rutherford@dektech.com.au>
Date:   Tue Nov 26 13:52:55 2019 +1100

    tipc: fix link name length check
    
    [ Upstream commit fd567ac20cb0377ff466d3337e6e9ac5d0cb15e4 ]
    
    In commit 4f07b80c9733 ("tipc: check msg->req data len in
    tipc_nl_compat_bearer_disable") the same patch code was copied into
    routines: tipc_nl_compat_bearer_disable(),
    tipc_nl_compat_link_stat_dump() and tipc_nl_compat_link_reset_stats().
    The two link routine occurrences should have been modified to check
    the maximum link name length and not bearer name length.
    
    Fixes: 4f07b80c9733 ("tipc: check msg->reg data len in tipc_nl_compat_bearer_disable")
    Signed-off-by: John Rutherford <john.rutherford@dektech.com.au>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f2ecb95860730483b7701ba358b338f5dca447
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:46 2019 -0800

    selftests: bpf: correct perror strings
    
    [ Upstream commit e5dc9dd3258098bf8b5ceb75fc3433b41eff618a ]
    
    perror(str) is basically equivalent to
    print("%s: %s\n", str, strerror(errno)).
    New line or colon at the end of str is
    a mistake/breaks formatting.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ba0f92bbb395d2de20a7e898c03284ba70bb516
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:45 2019 -0800

    selftests: bpf: test_sockmap: handle file creation failures gracefully
    
    [ Upstream commit 4b67c515036313f3c3ecba3cb2babb9cbddb3f85 ]
    
    test_sockmap creates a temporary file to use for sendpage.
    this may fail for various reasons. Handle the error rather
    than segfault.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33627d93d75702c70c898441602dbfba03e0f4cc
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:44 2019 -0800

    net/tls: use sg_next() to walk sg entries
    
    [ Upstream commit c5daa6cccdc2f94aca2c9b3fa5f94e4469997293 ]
    
    Partially sent record cleanup path increments an SG entry
    directly instead of using sg_next(). This should not be a
    problem today, as encrypted messages should be always
    allocated as arrays. But given this is a cleanup path it's
    easy to miss was this ever to change. Use sg_next(), and
    simplify the code.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d9da049e68e253e9c0419a7effab878108aa59b
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:43 2019 -0800

    net/tls: remove the dead inplace_crypto code
    
    [ Upstream commit 9e5ffed37df68d0ccfb2fdc528609e23a1e70ebe ]
    
    Looks like when BPF support was added by commit d3b18ad31f93
    ("tls: add bpf support to sk_msg handling") and
    commit d829e9c4112b ("tls: convert to generic sk_msg interface")
    it broke/removed the support for in-place crypto as added by
    commit 4e6d47206c32 ("tls: Add support for inplace records
    encryption").
    
    The inplace_crypto member of struct tls_rec is dead, inited
    to zero, and sometimes set to zero again. It used to be
    set to 1 when record was allocated, but the skmsg code doesn't
    seem to have been written with the idea of in-place crypto
    in mind.
    
    Since non trivial effort is required to bring the feature back
    and we don't really have the HW to measure the benefit just
    remove the left over support for now to avoid confusing readers.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aff1d49c19ac6ac48363fc28ba4f60eef05c298c
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:42 2019 -0800

    selftests/tls: add a test for fragmented messages
    
    [ Upstream commit 65190f77424d7b82c4aad7326c9cce6bd91a2fcc ]
    
    Add a sendmsg test with very fragmented messages. This should
    fill up sk_msg and test the boundary conditions.
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8015c79d262661c42ceb698ae421b4b5f46969b9
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:41 2019 -0800

    net: skmsg: fix TLS 1.3 crash with full sk_msg
    
    [ Upstream commit 031097d9e079e40dce401031d1012e83d80eaf01 ]
    
    TLS 1.3 started using the entry at the end of the SG array
    for chaining-in the single byte content type entry. This mostly
    works:
    
    [ E E E E E E . . ]
      ^           ^
       start       end
    
                     E < content type
                   /
    [ E E E E E E C . ]
      ^           ^
       start       end
    
    (Where E denotes a populated SG entry; C denotes a chaining entry.)
    
    If the array is full, however, the end will point to the start:
    
    [ E E E E E E E E ]
      ^
       start
       end
    
    And we end up overwriting the start:
    
        E < content type
       /
    [ C E E E E E E E ]
      ^
       start
       end
    
    The sg array is supposed to be a circular buffer with start and
    end markers pointing anywhere. In case where start > end
    (i.e. the circular buffer has "wrapped") there is an extra entry
    reserved at the end to chain the two halves together.
    
    [ E E E E E E . . l ]
    
    (Where l is the reserved entry for "looping" back to front.
    
    As suggested by John, let's reserve another entry for chaining
    SG entries after the main circular buffer. Note that this entry
    has to be pointed to by the end entry so its position is not fixed.
    
    Examples of full messages:
    
    [ E E E E E E E E . l ]
      ^               ^
       start           end
    
       <---------------.
    [ E E . E E E E E E l ]
          ^ ^
       end   start
    
    Now the end will always point to an unused entry, so TLS 1.3
    can always use it.
    
    Fixes: 130b392c6cd6 ("net: tls: Add tls 1.3 support")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e60624323433f57cf84c1eb7eaf84fe8f7c3f75f
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:40 2019 -0800

    net/tls: free the record on encryption error
    
    [ Upstream commit d10523d0b3d78153ee58d19853ced26c9004c8c4 ]
    
    When tls_do_encryption() fails the SG lists are left with the
    SG_END and SG_CHAIN marks in place. One could hope that once
    encryption fails we will never see the record again, but that
    is in fact not true. Commit d3b18ad31f93 ("tls: add bpf support
    to sk_msg handling") added special handling to ENOMEM and ENOSPC
    errors which mean we may see the same record re-submitted.
    
    As suggested by John free the record, the BPF code is already
    doing just that.
    
    Reported-by: syzbot+df0d4ec12332661dd1f9@syzkaller.appspotmail.com
    Fixes: d3b18ad31f93 ("tls: add bpf support to sk_msg handling")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dc183ea0aab08fa7bf046e30764d153f49d283d
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 27 12:16:39 2019 -0800

    net/tls: take into account that bpf_exec_tx_verdict() may free the record
    
    [ Upstream commit c329ef9684de9517d82af5b4758c9e1b64a8a11a ]
    
    bpf_exec_tx_verdict() may free the record if tls_push_record()
    fails, or if the entire record got consumed by BPF. Re-check
    ctx->open_rec before touching the data.
    
    Fixes: d3b18ad31f93 ("tls: add bpf support to sk_msg handling")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf8d9ad0cdaee5784ebb9a55f6af1177ea250aac
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sun Dec 1 18:41:25 2019 +0100

    openvswitch: remove another BUG_ON()
    
    [ Upstream commit 8a574f86652a4540a2433946ba826ccb87f398cc ]
    
    If we can't build the flow del notification, we can simply delete
    the flow, no need to crash the kernel. Still keep a WARN_ON to
    preserve debuggability.
    
    Note: the BUG_ON() predates the Fixes tag, but this change
    can be applied only after the mentioned commit.
    
    v1 -> v2:
     - do not leak an skb on error
    
    Fixes: aed067783e50 ("openvswitch: Minimize ovs_flow_cmd_del critical section.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6abebb7b9d4297f4b3daf2e4c764a6fbbd47106
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sun Dec 1 18:41:24 2019 +0100

    openvswitch: drop unneeded BUG_ON() in ovs_flow_cmd_build_info()
    
    [ Upstream commit 8ffeb03fbba3b599690b361467bfd2373e8c450f ]
    
    All the callers of ovs_flow_cmd_build_info() already deal with
    error return code correctly, so we can handle the error condition
    in a more gracefull way. Still dump a warning to preserve
    debuggability.
    
    v1 -> v2:
     - clarify the commit message
     - clean the skb and report the error (DaveM)
    
    Fixes: ccb1352e76cf ("net: Add Open vSwitch kernel components.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91273f1480723493e188ec1a0188e9cf0d6fc3bf
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 23 11:56:49 2019 +0800

    sctp: cache netns in sctp_ep_common
    
    [ Upstream commit 312434617cb16be5166316cf9d08ba760b1042a1 ]
    
    This patch is to fix a data-race reported by syzbot:
    
      BUG: KCSAN: data-race in sctp_assoc_migrate / sctp_hash_obj
    
      write to 0xffff8880b67c0020 of 8 bytes by task 18908 on cpu 1:
        sctp_assoc_migrate+0x1a6/0x290 net/sctp/associola.c:1091
        sctp_sock_migrate+0x8aa/0x9b0 net/sctp/socket.c:9465
        sctp_accept+0x3c8/0x470 net/sctp/socket.c:4916
        inet_accept+0x7f/0x360 net/ipv4/af_inet.c:734
        __sys_accept4+0x224/0x430 net/socket.c:1754
        __do_sys_accept net/socket.c:1795 [inline]
        __se_sys_accept net/socket.c:1792 [inline]
        __x64_sys_accept+0x4e/0x60 net/socket.c:1792
        do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      read to 0xffff8880b67c0020 of 8 bytes by task 12003 on cpu 0:
        sctp_hash_obj+0x4f/0x2d0 net/sctp/input.c:894
        rht_key_get_hash include/linux/rhashtable.h:133 [inline]
        rht_key_hashfn include/linux/rhashtable.h:159 [inline]
        rht_head_hashfn include/linux/rhashtable.h:174 [inline]
        head_hashfn lib/rhashtable.c:41 [inline]
        rhashtable_rehash_one lib/rhashtable.c:245 [inline]
        rhashtable_rehash_chain lib/rhashtable.c:276 [inline]
        rhashtable_rehash_table lib/rhashtable.c:316 [inline]
        rht_deferred_worker+0x468/0xab0 lib/rhashtable.c:420
        process_one_work+0x3d4/0x890 kernel/workqueue.c:2269
        worker_thread+0xa0/0x800 kernel/workqueue.c:2415
        kthread+0x1d4/0x200 drivers/block/aoe/aoecmd.c:1253
        ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:352
    
    It was caused by rhashtable access asoc->base.sk when sctp_assoc_migrate
    is changing its value. However, what rhashtable wants is netns from asoc
    base.sk, and for an asoc, its netns won't change once set. So we can
    simply fix it by caching netns since created.
    
    Fixes: d6c0256a60e6 ("sctp: add the rhashtable apis for sctp global transport hashtable")
    Reported-by: syzbot+e3b35fe7918ff0ee474e@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31359cfe886f429c0ca6df6a70370ecd29fcf96e
Author: Jouni Hogander <jouni.hogander@unikie.com>
Date:   Mon Nov 25 14:23:43 2019 +0200

    slip: Fix use-after-free Read in slip_open
    
    [ Upstream commit e58c1912418980f57ba2060017583067f5f71e52 ]
    
    Slip_open doesn't clean-up device which registration failed from the
    slip_devs device list. On next open after failure this list is iterated
    and freed device is accessed. Fix this by calling sl_free_netdev in error
    path.
    
    Here is the trace from the Syzbot:
    
    __dump_stack lib/dump_stack.c:77 [inline]
    dump_stack+0x197/0x210 lib/dump_stack.c:118
    print_address_description.constprop.0.cold+0xd4/0x30b mm/kasan/report.c:374
    __kasan_report.cold+0x1b/0x41 mm/kasan/report.c:506
    kasan_report+0x12/0x20 mm/kasan/common.c:634
    __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:132
    sl_sync drivers/net/slip/slip.c:725 [inline]
    slip_open+0xecd/0x11b7 drivers/net/slip/slip.c:801
    tty_ldisc_open.isra.0+0xa3/0x110 drivers/tty/tty_ldisc.c:469
    tty_set_ldisc+0x30e/0x6b0 drivers/tty/tty_ldisc.c:596
    tiocsetd drivers/tty/tty_io.c:2334 [inline]
    tty_ioctl+0xe8d/0x14f0 drivers/tty/tty_io.c:2594
    vfs_ioctl fs/ioctl.c:46 [inline]
    file_ioctl fs/ioctl.c:509 [inline]
    do_vfs_ioctl+0xdb6/0x13e0 fs/ioctl.c:696
    ksys_ioctl+0xab/0xd0 fs/ioctl.c:713
    __do_sys_ioctl fs/ioctl.c:720 [inline]
    __se_sys_ioctl fs/ioctl.c:718 [inline]
    __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:718
    do_syscall_64+0xfa/0x760 arch/x86/entry/common.c:290
    entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: 3b5a39979daf ("slip: Fix memory leak in slip_open error path")
    Reported-by: syzbot+4d5170758f3762109542@syzkaller.appspotmail.com
    Cc: David Miller <davem@davemloft.net>
    Cc: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Jouni Hogander <jouni.hogander@unikie.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 158bf62a492af802141dd388b599a9f4566d5390
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Nov 22 16:17:56 2019 -0600

    sctp: Fix memory leak in sctp_sf_do_5_2_4_dupcook
    
    [ Upstream commit b6631c6031c746ed004c4221ec0616d7a520f441 ]
    
    In the implementation of sctp_sf_do_5_2_4_dupcook() the allocated
    new_asoc is leaked if security_sctp_assoc_request() fails. Release it
    via sctp_association_free().
    
    Fixes: 2277c7cd75e3 ("sctp: Add LSM hooks")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6e09625d6f73b897e41be195faa38f8e3b47965
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Nov 26 12:55:50 2019 +0100

    openvswitch: fix flow command message size
    
    [ Upstream commit 4e81c0b3fa93d07653e2415fa71656b080a112fd ]
    
    When user-space sets the OVS_UFID_F_OMIT_* flags, and the relevant
    flow has no UFID, we can exceed the computed size, as
    ovs_nla_put_identifier() will always dump an OVS_FLOW_ATTR_KEY
    attribute.
    Take the above in account when computing the flow command message
    size.
    
    Fixes: 74ed7ab9264c ("openvswitch: Add support for unique flow IDs.")
    Reported-by: Qi Jun Ding <qding@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f0242fe65602ec43662eac18444f06019741dc7
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Thu Nov 28 14:29:09 2019 +0800

    net: sched: fix `tc -s class show` no bstats on class with nolock subqueues
    
    [ Upstream commit 14e54ab9143fa60794d13ea0a66c792a2046a8f3 ]
    
    When a classful qdisc's child qdisc has set the flag
    TCQ_F_CPUSTATS (pfifo_fast for example), the child qdisc's
    cpu_bstats should be passed to gnet_stats_copy_basic(),
    but many classful qdisc didn't do that. As a result,
    `tc -s class show dev DEV` always return 0 for bytes and
    packets in this case.
    
    Pass the child qdisc's cpu_bstats to gnet_stats_copy_basic()
    to fix this issue.
    
    The qstats also has this problem, but it has been fixed
    in 5dd431b6b9 ("net: sched: introduce and use qstats read...")
    and bstats still remains buggy.
    
    Fixes: 22e0f8b9322c ("net: sched: make bstats per cpu and estimator RCU safe")
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: Tony Lu <tonylu@linux.alibaba.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e6459b80637d43c9ce2b270734397aa08025a55
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed Nov 27 00:16:44 2019 +0200

    net: psample: fix skb_over_panic
    
    [ Upstream commit 7eb9d7675c08937cd11d32b0b40442d4d731c5ee ]
    
    We need to calculate the skb size correctly otherwise we risk triggering
    skb_over_panic[1]. The issue is that data_len is added to the skb in a
    nl attribute, but we don't account for its header size (nlattr 4 bytes)
    and alignment. We account for it when calculating the total size in
    the > PSAMPLE_MAX_PACKET_SIZE comparison correctly, but not when
    allocating after that. The fix is simple - use nla_total_size() for
    data_len when allocating.
    
    To reproduce:
     $ tc qdisc add dev eth1 clsact
     $ tc filter add dev eth1 egress matchall action sample rate 1 group 1 trunc 129
     $ mausezahn eth1 -b bcast -a rand -c 1 -p 129
     < skb_over_panic BUG(), tail is 4 bytes past skb->end >
    
    [1] Trace:
     [   50.459526][ T3480] skbuff: skb_over_panic: text:(____ptrval____) len:196 put:136 head:(____ptrval____) data:(____ptrval____) tail:0xc4 end:0xc0 dev:<NULL>
     [   50.474339][ T3480] ------------[ cut here ]------------
     [   50.481132][ T3480] kernel BUG at net/core/skbuff.c:108!
     [   50.486059][ T3480] invalid opcode: 0000 [#1] PREEMPT SMP
     [   50.489463][ T3480] CPU: 3 PID: 3480 Comm: mausezahn Not tainted 5.4.0-rc7 #108
     [   50.492844][ T3480] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-2.fc30 04/01/2014
     [   50.496551][ T3480] RIP: 0010:skb_panic+0x79/0x7b
     [   50.498261][ T3480] Code: bc 00 00 00 41 57 4c 89 e6 48 c7 c7 90 29 9a 83 4c 8b 8b c0 00 00 00 50 8b 83 b8 00 00 00 50 ff b3 c8 00 00 00 e8 ae ef c0 fe <0f> 0b e8 2f df c8 fe 48 8b 55 08 44 89 f6 4c 89 e7 48 c7 c1 a0 22
     [   50.504111][ T3480] RSP: 0018:ffffc90000447a10 EFLAGS: 00010282
     [   50.505835][ T3480] RAX: 0000000000000087 RBX: ffff888039317d00 RCX: 0000000000000000
     [   50.507900][ T3480] RDX: 0000000000000000 RSI: ffffffff812716e1 RDI: 00000000ffffffff
     [   50.509820][ T3480] RBP: ffffc90000447a60 R08: 0000000000000001 R09: 0000000000000000
     [   50.511735][ T3480] R10: ffffffff81d4f940 R11: 0000000000000000 R12: ffffffff834a22b0
     [   50.513494][ T3480] R13: ffffffff82c10433 R14: 0000000000000088 R15: ffffffff838a8084
     [   50.515222][ T3480] FS:  00007f3536462700(0000) GS:ffff88803eac0000(0000) knlGS:0000000000000000
     [   50.517135][ T3480] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     [   50.518583][ T3480] CR2: 0000000000442008 CR3: 000000003b222000 CR4: 00000000000006e0
     [   50.520723][ T3480] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     [   50.522709][ T3480] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     [   50.524450][ T3480] Call Trace:
     [   50.525214][ T3480]  skb_put.cold+0x1b/0x1b
     [   50.526171][ T3480]  psample_sample_packet+0x1d3/0x340
     [   50.527307][ T3480]  tcf_sample_act+0x178/0x250
     [   50.528339][ T3480]  tcf_action_exec+0xb1/0x190
     [   50.529354][ T3480]  mall_classify+0x67/0x90
     [   50.530332][ T3480]  tcf_classify+0x72/0x160
     [   50.531286][ T3480]  __dev_queue_xmit+0x3db/0xd50
     [   50.532327][ T3480]  dev_queue_xmit+0x18/0x20
     [   50.533299][ T3480]  packet_sendmsg+0xee7/0x2090
     [   50.534331][ T3480]  sock_sendmsg+0x54/0x70
     [   50.535271][ T3480]  __sys_sendto+0x148/0x1f0
     [   50.536252][ T3480]  ? tomoyo_file_ioctl+0x23/0x30
     [   50.537334][ T3480]  ? ksys_ioctl+0x5e/0xb0
     [   50.540068][ T3480]  __x64_sys_sendto+0x2a/0x30
     [   50.542810][ T3480]  do_syscall_64+0x73/0x1f0
     [   50.545383][ T3480]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
     [   50.548477][ T3480] RIP: 0033:0x7f35357d6fb3
     [   50.551020][ T3480] Code: 48 8b 0d 18 90 20 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d f9 d3 20 00 00 75 13 49 89 ca b8 2c 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 34 c3 48 83 ec 08 e8 eb f6 ff ff 48 89 04 24
     [   50.558547][ T3480] RSP: 002b:00007ffe0c7212c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
     [   50.561870][ T3480] RAX: ffffffffffffffda RBX: 0000000001dac010 RCX: 00007f35357d6fb3
     [   50.565142][ T3480] RDX: 0000000000000082 RSI: 0000000001dac2a2 RDI: 0000000000000003
     [   50.568469][ T3480] RBP: 00007ffe0c7212f0 R08: 00007ffe0c7212d0 R09: 0000000000000014
     [   50.571731][ T3480] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000082
     [   50.574961][ T3480] R13: 0000000001dac2a2 R14: 0000000000000001 R15: 0000000000000003
     [   50.578170][ T3480] Modules linked in: sch_ingress virtio_net
     [   50.580976][ T3480] ---[ end trace 61a515626a595af6 ]---
    
    CC: Yotam Gigi <yotamg@mellanox.com>
    CC: Jiri Pirko <jiri@mellanox.com>
    CC: Jamal Hadi Salim <jhs@mojatatu.com>
    CC: Simon Horman <simon.horman@netronome.com>
    CC: Roopa Prabhu <roopa@cumulusnetworks.com>
    Fixes: 6ae0a6286171 ("net: Introduce psample, a new genetlink channel for packet sampling")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8824ad6d657b500f5debd6bb1d85a981bf3248bb
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu Nov 28 10:00:21 2019 +0800

    net: macb: add missed tasklet_kill
    
    [ Upstream commit 61183b056b49e2937ff92a1424291ba36a6f6d05 ]
    
    This driver forgets to kill tasklet in remove.
    Add the call to fix it.
    
    Fixes: 032dc41ba6e2 ("net: macb: Handle HRESP error")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 195af1df87e6bef1ded21921638a31ef8dc7d632
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Mon Nov 25 12:43:51 2019 +0100

    net: dsa: sja1105: fix sja1105_parse_rgmii_delays()
    
    [ Upstream commit 9bca3a0a923fc3f0fb9e41391be1d0f291e86858 ]
    
    This function was using configuration of port 0 in devicetree for all ports.
    In case CPU port was not 0, the delay settings was ignored. This resulted not
    working communication between CPU and the switch.
    
    Fixes: f5b8631c293b ("net: dsa: sja1105: Error out if RGMII delays are requested in DT")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6fb1f4ff4cf5ed955f21330e64da5a53b1cee6d
Author: David Bauer <mail@david-bauer.net>
Date:   Fri Nov 22 22:44:51 2019 +0100

    mdio_bus: don't use managed reset-controller
    
    [ Upstream commit 32085f25d7b68404055f3525c780142fc72e543f ]
    
    Geert Uytterhoeven reported that using devm_reset_controller_get leads
    to a WARNING when probing a reset-controlled PHY. This is because the
    device devm_reset_controller_get gets supplied is not actually the
    one being probed.
    
    Acquire an unmanaged reset-control as well as free the reset_control on
    unregister to fix this.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    CC: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David Bauer <mail@david-bauer.net>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a5d2003f4d87f1d1f07315105d51db9c106be89
Author: Menglong Dong <dong.menglong@zte.com.cn>
Date:   Mon Nov 25 16:58:09 2019 +0800

    macvlan: schedule bc_work even if error
    
    [ Upstream commit 1d7ea55668878bb350979c377fc72509dd6f5b21 ]
    
    While enqueueing a broadcast skb to port->bc_queue, schedule_work()
    is called to add port->bc_work, which processes the skbs in
    bc_queue, to "events" work queue. If port->bc_queue is full, the
    skb will be discarded and schedule_work(&port->bc_work) won't be
    called. However, if port->bc_queue is full and port->bc_work is not
    running or pending, port->bc_queue will keep full and schedule_work()
    won't be called any more, and all broadcast skbs to macvlan will be
    discarded. This case can happen:
    
    macvlan_process_broadcast() is the pending function of port->bc_work,
    it moves all the skbs in port->bc_queue to the queue "list", and
    processes the skbs in "list". During this, new skbs will keep being
    added to port->bc_queue in macvlan_broadcast_enqueue(), and
    port->bc_queue may already full when macvlan_process_broadcast()
    return. This may happen, especially when there are a lot of real-time
    threads and the process is preempted.
    
    Fix this by calling schedule_work(&port->bc_work) even if
    port->bc_work is full in macvlan_broadcast_enqueue().
    
    Fixes: 412ca1550cbe ("macvlan: Move broadcasts into a work queue")
    Signed-off-by: Menglong Dong <dong.menglong@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 071598ee0440c32f97101d8ea5e46a9de396c535
Author: Jeroen de Borst <jeroendb@google.com>
Date:   Tue Nov 26 15:36:19 2019 -0800

    gve: Fix the queue page list allocated pages count
    
    [ Upstream commit a95069ecb7092d03b2ea1c39ee04514fe9627540 ]
    
    In gve_alloc_queue_page_list(), when a page allocation fails,
    qpl->num_entries will be wrong.  In this case priv->num_registered_pages
    can underflow in gve_free_queue_page_list(), causing subsequent calls
    to gve_alloc_queue_page_list() to fail.
    
    Fixes: f5cedc84a30d ("gve: Add transmit and receive support")
    Signed-off-by: Jeroen de Borst <jeroendb@google.com>
    Reviewed-by: Catherine Sullivan <csully@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a94795bd29e90045053107a6cd79942d2b02ccd
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Nov 28 09:53:06 2019 +0100

    x86/fpu: Don't cache access to fpu_fpregs_owner_ctx
    
    commit 59c4bd853abcea95eccc167a7d7fd5f1a5f47b98 upstream.
    
    The state/owner of the FPU is saved to fpu_fpregs_owner_ctx by pointing
    to the context that is currently loaded. It never changed during the
    lifetime of a task - it remained stable/constant.
    
    After deferred FPU registers loading until return to userland was
    implemented, the content of fpu_fpregs_owner_ctx may change during
    preemption and must not be cached.
    
    This went unnoticed for some time and was now noticed, in particular
    since gcc 9 is caching that load in copy_fpstate_to_sigframe() and
    reusing it in the retry loop:
    
      copy_fpstate_to_sigframe()
        load fpu_fpregs_owner_ctx and save on stack
        fpregs_lock()
        copy_fpregs_to_sigframe() /* failed */
        fpregs_unlock()
             *** PREEMPTION, another uses FPU, changes fpu_fpregs_owner_ctx ***
    
        fault_in_pages_writeable() /* succeed, retry */
    
        fpregs_lock()
            __fpregs_load_activate()
              fpregs_state_valid() /* uses fpu_fpregs_owner_ctx from stack */
        copy_fpregs_to_sigframe() /* succeeds, random FPU content */
    
    This is a comparison of the assembly produced by gcc 9, without vs with this
    patch:
    
    | # arch/x86/kernel/fpu/signal.c:173:      if (!access_ok(buf, size))
    |        cmpq    %rdx, %rax      # tmp183, _4
    |        jb      .L190   #,
    |-# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read_stable(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |-#APP
    |-# 512 "arch/x86/include/asm/fpu/internal.h" 1
    |-       movq %gs:fpu_fpregs_owner_ctx,%rax      #, pfo_ret__
    |-# 0 "" 2
    |-#NO_APP
    |-       movq    %rax, -88(%rbp) # pfo_ret__, %sfp
    …
    |-# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read_stable(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |-       movq    -88(%rbp), %rcx # %sfp, pfo_ret__
    |-       cmpq    %rcx, -64(%rbp) # pfo_ret__, %sfp
    |+# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |+#APP
    |+# 512 "arch/x86/include/asm/fpu/internal.h" 1
    |+       movq %gs:fpu_fpregs_owner_ctx(%rip),%rax        # fpu_fpregs_owner_ctx, pfo_ret__
    |+# 0 "" 2
    |+# arch/x86/include/asm/fpu/internal.h:512:       return fpu == this_cpu_read(fpu_fpregs_owner_ctx) && cpu == fpu->last_cpu;
    |+#NO_APP
    |+       cmpq    %rax, -64(%rbp) # pfo_ret__, %sfp
    
    Use this_cpu_read() instead this_cpu_read_stable() to avoid caching of
    fpu_fpregs_owner_ctx during preemption points.
    
    The Fixes: tag points to the commit where deferred FPU loading was
    added. Since this commit, the compiler is no longer allowed to move the
    load of fpu_fpregs_owner_ctx somewhere else / outside of the locked
    section. A task preemption will change its value and stale content will
    be observed.
    
     [ bp: Massage. ]
    
    Debugged-by: Austin Clements <austin@google.com>
    Debugged-by: David Chase <drchase@golang.org>
    Debugged-by: Ian Lance Taylor <ian@airs.com>
    Fixes: 5f409e20b7945 ("x86/fpu: Defer FPU state load until return to userspace")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Tested-by: Borislav Petkov <bp@suse.de>
    Cc: Aubrey Li <aubrey.li@intel.com>
    Cc: Austin Clements <austin@google.com>
    Cc: Barret Rhoden <brho@google.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Chase <drchase@golang.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: ian@airs.com
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Josh Bleecher Snyder <josharian@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20191128085306.hxfa2o3knqtu4wfn@linutronix.de
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=205663
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a2326755b195a0fc409ebcc1530fee4ac76982
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Nov 6 08:13:49 2019 +0100

    xfrm: Fix memleak on xfrm state destroy
    
    commit 86c6739eda7d2a03f2db30cbee67a5fb81afa8ba upstream.
    
    We leak the page that we use to create skb page fragments
    when destroying the xfrm_state. Fix this by dropping a
    page reference if a page was assigned to the xfrm_state.
    
    Fixes: cac2661c53f3 ("esp4: Avoid skb_cow_data whenever possible")
    Reported-by: JD <jdtxs00@gmail.com>
    Reported-by: Paul Wouters <paul@nohats.ca>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 593c8621dbbac35a4e83d122f7558fdf66de3e33
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Nov 11 13:25:44 2019 +0300

    thunderbolt: Power cycle the router if NVM authentication fails
    
    commit 7a7ebfa85f4fac349f3ab219538c44efe18b0cf6 upstream.
    
    On zang's Dell XPS 13 9370 after Thunderbolt NVM firmware upgrade the
    Thunderbolt controller did not come back as expected. Only after the
    system was rebooted it became available again. It is not entirely clear
    what happened but I suspect the new NVM firmware image authentication
    failed for some reason. Regardless of this the router needs to be power
    cycled if NVM authentication fails in order to get it fully functional
    again.
    
    This modifies the driver to issue a power cycle in case the NVM
    authentication fails immediately when dma_port_flash_update_auth()
    returns. We also need to call tb_switch_set_uuid() earlier to be able to
    fetch possible NVM authentication failure when DMA port is added.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=205457
    Reported-by: zang <dump@tzib.net>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8babe307740bd25120c0ac6352a377783de2bb86
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Nov 5 17:05:14 2019 +0200

    mei: me: add comet point V device id
    
    commit 82b29b9f72afdccb40ea5f3c13c6a3cb65a597bc upstream.
    
    Comet Point (Comet Lake) V device id.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191105150514.14010-2-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 114a1185a91fb2f9b405853ff3b30267d8b1fe06
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Nov 5 17:05:13 2019 +0200

    mei: bus: prefix device names on bus with the bus name
    
    commit 7a2b9e6ec84588b0be65cc0ae45a65bac431496b upstream.
    
    Add parent device name to the name of devices on bus to avoid
    device names collisions for same client UUID available
    from different MEI heads. Namely this prevents sysfs collision under
    /sys/bus/mei/device/
    
    In the device part leave just UUID other parameters that are
    required for device matching are not required here and are
    just bloating the name.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191105150514.14010-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bac6527d6d5548a6c312ddfaeaaedf40ecc4592e
Author: Fabio D'Urso <fabiodurso@hotmail.it>
Date:   Thu Nov 14 01:30:53 2019 +0000

    USB: serial: ftdi_sio: add device IDs for U-Blox C099-F9P
    
    commit c1a1f273d0825774c80896b8deb1c9ea1d0b91e3 upstream.
    
    This device presents itself as a USB hub with three attached devices:
     - An ACM serial port connected to the GPS module (not affected by this
       commit)
     - An FTDI serial port connected to the GPS module (1546:0502)
     - Another FTDI serial port connected to the ODIN-W2 radio module
       (1546:0503)
    
    This commit registers U-Blox's VID and the PIDs of the second and third
    devices.
    
    Datasheet: https://www.u-blox.com/sites/default/files/C099-F9P-AppBoard-Mbed-OS3-FW_UserGuide_%28UBX-18063024%29.pdf
    
    Signed-off-by: Fabio D'Urso <fabiodurso@hotmail.it>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a9b67c35626d447ce77b5080c5c9b8c7d76b0eb
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 11 12:38:45 2019 +0100

    staging: rtl8723bs: Add 024c:0525 to the list of SDIO device-ids
    
    commit 3d5f1eedbfd22ceea94b39989d6021b1958181f4 upstream.
    
    Add 024c:0525 to the list of SDIO device-ids, based on a patch found
    in the Android X86 kernels. According to that patch this device id is
    used on the Alcatel Plus 10 device.
    
    Reported-and-tested-by: youling257 <youling257@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191111113846.24940-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71491212a4821c78e274caf1c3fede5531dee3c6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 11 12:38:46 2019 +0100

    staging: rtl8723bs: Drop ACPI device ids
    
    commit 2d9d2491530a156b9a5614adf9dc79285e35d55e upstream.
    
    The driver only binds by SDIO device-ids, all the ACPI device-id does
    is causing the driver to load unnecessarily on devices where the DSDT
    contains a bogus OBDA8723 device.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191111113846.24940-2-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcb87a460c91b94939d5924d4a1e5eefff8f2126
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Nov 5 22:49:11 2019 +0800

    staging: rtl8192e: fix potential use after free
    
    commit b7aa39a2ed0112d07fc277ebd24a08a7b2368ab9 upstream.
    
    The variable skb is released via kfree_skb() when the return value of
    _rtl92e_tx is not zero. However, after that, skb is accessed again to
    read its length, which may result in a use after free bug. This patch
    fixes the bug by moving the release operation to where skb is never
    used later.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1572965351-6745-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cb5d4f808ed07e9246a4358927fdf30a188fbaa
Author: Ajay Singh <ajay.kathat@microchip.com>
Date:   Thu Nov 7 15:58:54 2019 +0000

    staging: wilc1000: fix illegal memory access in wilc_parse_join_bss_param()
    
    commit c7e621bb981b76d3bfd8a595070ee8282ac4a32b upstream.
    
    Do not copy the extended supported rates in 'param->supp_rates' if the
    array is already full with basic rates values. The array size check
    helped to avoid possible illegal memory access [1] while copying to
    'param->supp_rates' array.
    
    1. https://marc.info/?l=linux-next&m=157301720517456&w=2
    
    Reported-by: coverity-bot <keescook+coverity-bot@chromium.org>
    Addresses-Coverity-ID: 1487400 ("Memory - illegal accesses")
    Fixes: 4e0b0f42c9c7 ("staging: wilc1000: use struct to pack join parameters for FW")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ajay Singh <ajay.kathat@microchip.com>
    Link: https://lore.kernel.org/r/20191106062127.3165-1-ajay.kathat@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9901cd010f3f4d65b51158416a6feed3da044b74
Author: Mathias Kresin <dev@kresin.me>
Date:   Sun Jul 7 16:22:01 2019 +0200

    usb: dwc2: use a longer core rest timeout in dwc2_core_reset()
    
    commit 6689f0f4bb14e50917ba42eb9b41c25e0184970c upstream.
    
    Testing on different generations of Lantiq MIPS SoC based boards, showed
    that it takes up to 1500 us until the core reset bit is cleared.
    
    The driver from the vendor SDK (ifxhcd) uses a 1 second timeout. Use the
    same timeout to fix wrong hang detections and make the driver work for
    Lantiq MIPS SoCs.
    
    At least till kernel 4.14 the hanging reset only caused a warning but
    the driver was probed successful. With kernel 4.19 errors out with
    EBUSY.
    
    Cc: linux-stable <stable@vger.kernel.org> # 4.19+
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6de301569a4e465b275ce497b2db431483fe4c52
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 9 15:30:31 2019 +0000

    clk: at91: fix update bit maps on CFG_MOR write
    
    commit 263eaf8f172d9f44e15d6aca85fe40ec18d2c477 upstream.
    
    The regmap update bits call was not selecting the proper mask, considering
    the bits which was updating.
    Update the mask from call to also include OSCBYPASS.
    Removed MOSCEN which was not updated.
    
    Fixes: 1bdf02326b71 ("clk: at91: make use of syscon/regmap internally")
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Link: https://lkml.kernel.org/r/1568042692-11784-1-git-send-email-eugen.hristev@microchip.com
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc2ccb9b36511d213ba15ad31d641fbb439a10e1
Author: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
Date:   Wed Nov 6 06:24:04 2019 -0800

    i40e: Fix for ethtool -m issue on X722 NIC
    
    [ Upstream commit 4c9da6f2b8a029052c75bd4a61ae229135831177 ]
    
    This patch contains fix for a problem with command:
    'ethtool -m <dev>'
    which breaks functionality of:
    'ethtool <dev>'
    when called on X722 NIC
    
    Disallowed update of link phy_types on X722 NIC
    Currently correct value cannot be obtained from FW
    Previously wrong value returned by FW was used and was
    a root cause for incorrect output of 'ethtool <dev>' command
    
    Signed-off-by: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3625adbba38042a56957721488ac53bdbcdddff
Author: Nicholas Nunley <nicholas.d.nunley@intel.com>
Date:   Tue Nov 5 04:22:14 2019 -0800

    iavf: initialize ITRN registers with correct values
    
    [ Upstream commit 4eda4e0096842764d725bcfd77471a419832b074 ]
    
    Since commit 92418fb14750 ("i40e/i40evf: Use usec value instead of reg
    value for ITR defines") the driver tracks the interrupt throttling
    intervals in single usec units, although the actual ITRN registers are
    programmed in 2 usec units. Most register programming flows in the driver
    correctly handle the conversion, although it is currently not applied when
    the registers are initialized to their default values. Most of the time
    this doesn't present a problem since the default values are usually
    immediately overwritten through the standard adaptive throttling mechanism,
    or updated manually by the user, but if adaptive throttling is disabled and
    the interval values are left alone then the incorrect value will persist.
    
    Since the intended default interval of 50 usecs (vs. 100 usecs as
    programmed) performs better for most traffic workloads, this can lead to
    performance regressions.
    
    This patch adds the correct conversion when writing the initial values to
    the ITRN registers.
    
    Signed-off-by: Nicholas Nunley <nicholas.d.nunley@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0f58d784d4cd6ce7446451dddcd6dde98f73c84
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Nov 1 14:00:17 2019 +0000

    ice: fix potential infinite loop because loop counter being too small
    
    [ Upstream commit 615457a226f042bffc3a1532afb244cab37460d4 ]
    
    Currently the for-loop counter i is a u8 however it is being checked
    against a maximum value hw->num_tx_sched_layers which is a u16. Hence
    there is a potential wrap-around of counter i back to zero if
    hw->num_tx_sched_layers is greater than 255.  Fix this by making i
    a u16.
    
    Addresses-Coverity: ("Infinite loop")
    Fixes: b36c598c999c ("ice: Updates to Tx scheduler code")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc5ae31afbae83038dfce8d2bd35bbe7ba05a536
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Oct 17 21:22:18 2019 +0200

    pwm: bcm-iproc: Prevent unloading the driver module while in use
    
    [ Upstream commit 24906a41eecb73d51974ade0847c21e429beec60 ]
    
    The owner member of struct pwm_ops must be set to THIS_MODULE to
    increase the reference count of the module such that the module cannot
    be removed while its code is in use.
    
    Fixes: daa5abc41c80 ("pwm: Add support for Broadcom iProc PWM controller")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 900960e07966f4705b888778542bbb39c3703e7e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 7 10:48:47 2019 +0300

    block: drbd: remove a stray unlock in __drbd_send_protocol()
    
    [ Upstream commit 8e9c523016cf9983b295e4bc659183d1fa6ef8e0 ]
    
    There are two callers of this function and they both unlock the mutex so
    this ends up being a double unlock.
    
    Fixes: 44ed167da748 ("drbd: rcu_read_lock() and rcu_dereference() for tconn->net_conf")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6caf8942e17543a6155ac35cdd86389568613f4
Author: Ahmed Zaki <anzaki@gmail.com>
Date:   Thu Oct 31 06:12:43 2019 -0600

    mac80211: fix station inactive_time shortly after boot
    
    [ Upstream commit 285531f9e6774e3be71da6673d475ff1a088d675 ]
    
    In the first 5 minutes after boot (time of INITIAL_JIFFIES),
    ieee80211_sta_last_active() returns zero if last_ack is zero. This
    leads to "inactive time" showing jiffies_to_msecs(jiffies).
    
     # iw wlan0 station get fc:ec:da:64:a6:dd
     Station fc:ec:da:64:a6:dd (on wlan0)
            inactive time:  4294894049 ms
            .
            .
            connected time: 70 seconds
    
    Fix by returning last_rx if last_ack == 0.
    
    Signed-off-by: Ahmed Zaki <anzaki@gmail.com>
    Link: https://lore.kernel.org/r/20191031121243.27694-1-anzaki@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b8fcaa9c17ef4b35631154b74d9ba81eb262557
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Tue Nov 5 16:57:50 2019 +0100

    net/fq_impl: Switch to kvmalloc() for memory allocation
    
    [ Upstream commit 71e67c3bd127cfe7863f54e4b087eba1cc8f9a7a ]
    
    The FQ implementation used by mac80211 allocates memory using kmalloc(),
    which can fail; and Johannes reported that this actually happens in
    practice.
    
    To avoid this, switch the allocation to kvmalloc() instead; this also
    brings fq_impl in line with all the FQ qdiscs.
    
    Fixes: 557fc4a09803 ("fq: add fair queuing framework")
    Reported-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Link: https://lore.kernel.org/r/20191105155750.547379-1-toke@redhat.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cf642b6a6886a5b28d7ab5afab96708213ebc60
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Nov 5 15:41:11 2019 +0100

    mac80211: fix ieee80211_txq_setup_flows() failure path
    
    [ Upstream commit 6dd47d9754ff0589715054b11294771f2c9a16ac ]
    
    If ieee80211_txq_setup_flows() fails, we don't clean up LED
    state properly, leading to crashes later on, fix that.
    
    Fixes: dc8b274f0952 ("mac80211: Move up init of TXQs")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Link: https://lore.kernel.org/r/20191105154110.1ccf7112ba5d.I0ba865792446d051867b33153be65ce6b063d98c@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54183e1bd28df076b9561d03633dc6b240be0c5c
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Nov 7 09:39:32 2019 -0500

    ceph: return -EINVAL if given fsc mount option on kernel w/o support
    
    [ Upstream commit ff29fde84d1fc82f233c7da0daa3574a3942bec7 ]
    
    If someone requests fscache on the mount, and the kernel doesn't
    support it, it should fail the mount.
    
    [ Drop ceph prefix -- it's provided by pr_err. ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f206265997b729b5a78eb53007d127a540f3a482
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Nov 6 16:03:01 2019 +0100

    net: stmmac: xgmac: Disable Flow Control when 1 or more queues are in AV
    
    [ Upstream commit 132f2f20c9866325d12c155aca06d260f358d3cb ]
    
    When in AVB mode we need to disable flow control to prevent MAC from
    pausing in TX side.
    
    Fixes: ec6ea8e3eee9 ("net: stmmac: Add CBS support in XGMAC2")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a65416314cecd547177d7e72df56d81b4167737a
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Nov 6 16:02:59 2019 +0100

    net: stmmac: xgmac: Fix TSA selection
    
    [ Upstream commit 97add93fbcfa566735d6a4b96684110d356ebd35 ]
    
    When we change between Transmission Scheduling Algorithms, we need to
    clear previous values so that the new chosen algorithm is correctly
    selected.
    
    Fixes: ec6ea8e3eee9 ("net: stmmac: Add CBS support in XGMAC2")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 208d7c294d40c4325ac7aeef151c018506db1dee
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Nov 6 16:02:56 2019 +0100

    net: stmmac: xgmac: bitrev32 returns u32
    
    [ Upstream commit 3d00e45d498fd5347cea653ef494c56731b651e0 ]
    
    The bitrev32 function returns an u32 var, not an int. Fix it.
    
    Fixes: 0efedbf11f07 ("net: stmmac: xgmac: Fix XGMAC selftests")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91d8629eea01a5e8833c6cbd33fb4c839e4a99b3
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Nov 6 16:02:55 2019 +0100

    net: stmmac: gmac4: bitrev32 returns u32
    
    [ Upstream commit 4d7c47e34fab0d25790bb6e85b85e26fdf0090d5 ]
    
    The bitrev32 function returns an u32 var, not an int. Fix it.
    
    Fixes: 477286b53f55 ("stmmac: add GMAC4 core support")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c56d0cc9573a8e485a56409af0c5c01ca9229461
Author: changzhu <Changfeng.Zhu@amd.com>
Date:   Tue Nov 5 18:29:12 2019 +0800

    drm/amdgpu: add warning for GRBM 1-cycle delay issue in gfx9
    
    [ Upstream commit 440a7a54e7ec012ec8b27c27e460dfd6f9a24ddb ]
    
    It needs to add warning to update firmware in gfx9
    in case that firmware is too old to have function to
    realize dummy read in cp firmware.
    
    Signed-off-by: changzhu <Changfeng.Zhu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf2e5f0321247f4d6ce3f150f69f5d8bfb254066
Author: Evan Quan <evan.quan@amd.com>
Date:   Tue Nov 5 18:13:49 2019 +0800

    drm/amdgpu: register gpu instance before fan boost feature enablment
    
    [ Upstream commit 6a299d7aaa97dfde5988d8f9e2fa2c046b5793ff ]
    
    Otherwise, the feature enablement will be skipped due to wrong count.
    
    Fixes: beff74bc6e0fa91 ("drm/amdgpu: fix a race in GPU reset with IB test (v2)")
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 583dafc2d91b6f17931595824aa397536fccec5d
Author: Kevin Wang <kevin1.wang@amd.com>
Date:   Tue Nov 5 18:16:38 2019 +0800

    drm/amd/swSMU: fix smu workload bit map error
    
    [ Upstream commit 38264de0dce80d223f358ce47512378fae0de586 ]
    
    fix workload bit (WORKLOAD_PPLIB_COMPUTE_BIT) map error
    on vega20 and navi asic.
    
    fix commit:
    drm/amd/powerplay: add function get_workload_type_map for swsmu
    
    Signed-off-by: Kevin Wang <kevin1.wang@amd.com>
    Reviewed-by: Kenneth Feng <kenneth.feng@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da1666af3b853ec6de487645df5a18eee11260e4
Author: Vladimir Oltean <olteanv@gmail.com>
Date:   Wed Nov 6 00:01:40 2019 +0200

    net: mscc: ocelot: fix __ocelot_rmw_ix prototype
    
    [ Upstream commit 17fdd7638cb687cd7f15a48545f25d738f0101e0 ]
    
    The "read-modify-write register index" function is declared with a
    confusing prototype: the "mask" and "reg" arguments are swapped.
    
    Fortunately, this does not affect callers so far. Both arguments are
    u32, and the wrapper macros (ocelot_rmw_ix etc) have the arguments in
    the correct order (the one from ocelot_io.c).
    
    Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 045abdd46ed8fa1bb5fc02fe552066814f5298ab
Author: Dmytro Linkin <dmitrolin@mellanox.com>
Date:   Tue Oct 29 11:44:24 2019 +0200

    net/mlx5e: Use correct enum to determine uplink port
    
    [ Upstream commit 950d3af70ea89cf7ac51d734a634174013631192 ]
    
    For vlan push action, if eswitch flow source capability is enabled, flow
    source value compared with MLX5_VPORT_UPLINK enum, to determine uplink
    port. This lead to syndrome in dmesg if try to add vlan push action.
    For example:
     $ tc filter add dev vxlan0 ingress protocol ip prio 1 flower \
           enc_dst_port 4789 \
           action tunnel_key unset pipe \
           action vlan push id 20 pipe \
           action mirred egress redirect dev ens1f0_0
     $ dmesg
     ...
     [ 2456.883693] mlx5_core 0000:82:00.0: mlx5_cmd_check:756:(pid 5273): SET_FLOW_TABLE_ENTRY(0x936) op_mod(0x0) failed, status bad parameter(0x3), syndrome (0xa9c090)
    Use the correct enum value MLX5_FLOW_CONTEXT_FLOW_SOURCE_UPLINK.
    
    Fixes: bb204dcf39fe ("net/mlx5e: Determine source port properly for vlan push action")
    Signed-off-by: Dmytro Linkin <dmitrolin@mellanox.com>
    Reviewed-by: Vlad Buslov <vladbu@mellanox.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7829bd2b6b1eb48211287cabc114e1a8d15bc8e3
Author: Roi Dayan <roid@mellanox.com>
Date:   Mon Oct 28 19:13:58 2019 +0200

    net/mlx5e: Fix eswitch debug print of max fdb flow
    
    [ Upstream commit f382b0df6946d48fae80a2201ccff43b41382099 ]
    
    The value is already the calculation so remove the log prefix.
    
    Fixes: e52c28024008 ("net/mlx5: E-Switch, Add chains and priorities")
    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Eli Britstein <elibr@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40e95f9ae484cfe75daf158be49f49e2aa17ab41
Author: Shirish S <shirish.s@amd.com>
Date:   Wed Oct 30 14:20:46 2019 +0530

    drm/amdgpu: dont schedule jobs while in reset
    
    [ Upstream commit f2efc6e60089c99c342a6b7da47f1037e06c4296 ]
    
    [Why]
    
    doing kthread_park()/unpark() from drm_sched_entity_fini
    while GPU reset is in progress defeats all the purpose of
    drm_sched_stop->kthread_park.
    If drm_sched_entity_fini->kthread_unpark() happens AFTER
    drm_sched_stop->kthread_park nothing prevents from another
    (third) thread to keep submitting job to HW which will be
    picked up by the unparked scheduler thread and try to submit
    to HW but fail because the HW ring is deactivated.
    
    [How]
    grab the reset lock before calling drm_sched_entity_fini()
    
    Signed-off-by: Shirish S <shirish.s@amd.com>
    Suggested-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d100120fbc8122e6d418ff6ec64887b1e0209593
Author: Doug Berger <opendmb@gmail.com>
Date:   Tue Nov 5 11:07:26 2019 -0800

    net: bcmgenet: reapply manual settings to the PHY
    
    [ Upstream commit 0686bd9d5e6863f60e4bb1e78e6fe7bb217a0890 ]
    
    The phy_init_hw() function may reset the PHY to a configuration
    that does not match manual network settings stored in the phydev
    structure. If the phy state machine is polled rather than event
    driven this can create a timing hazard where the phy state machine
    might alter the settings stored in the phydev structure from the
    value read from the BMCR.
    
    This commit follows invocations of phy_init_hw() by the bcmgenet
    driver with invocations of the genphy_config_aneg() function to
    ensure that the BMCR is written to match the settings held in the
    phydev structure. This prevents the risk of manual settings being
    accidentally altered.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0a08ebb6668c5e9c7d538d5f86a4ba6c4114ed1
Author: Doug Berger <opendmb@gmail.com>
Date:   Tue Nov 5 11:07:24 2019 -0800

    net: bcmgenet: use RGMII loopback for MAC reset
    
    [ Upstream commit 3a55402c93877d291b0a612d25edb03d1b4b93ac ]
    
    As noted in commit 28c2d1a7a0bf ("net: bcmgenet: enable loopback
    during UniMAC sw_reset") the UniMAC must be clocked while sw_reset
    is asserted for its state machines to reset cleanly.
    
    The transmit and receive clocks used by the UniMAC are derived from
    the signals used on its PHY interface. The bcmgenet MAC can be
    configured to work with different PHY interfaces including MII,
    GMII, RGMII, and Reverse MII on internal and external interfaces.
    Unfortunately for the UniMAC, when configured for MII the Tx clock
    is always driven from the PHY which places it outside of the direct
    control of the MAC.
    
    The earlier commit enabled a local loopback mode within the UniMAC
    so that the receive clock would be derived from the transmit clock
    which addressed the observed issue with an external GPHY disabling
    it's Rx clock. However, when a Tx clock is not available this
    loopback is insufficient.
    
    This commit implements a workaround that leverages the fact that
    the MAC can reliably generate all of its necessary clocking by
    enterring the external GPHY RGMII interface mode with the UniMAC in
    local loopback during the sw_reset interval. Unfortunately, this
    has the undesirable side efect of the RGMII GTXCLK signal being
    driven during the same window.
    
    In most configurations this is a benign side effect as the signal
    is either not routed to a pin or is already expected to drive the
    pin. The one exception is when an external MII PHY is expected to
    drive the same pin with its TX_CLK output creating output driver
    contention.
    
    This commit exploits the IEEE 802.3 clause 22 standard defined
    isolate mode to force an external MII PHY to present a high
    impedance on its TX_CLK output during the window to prevent any
    contention at the pin.
    
    The MII interface is used internally with the 40nm internal EPHY
    which agressively disables its clocks for power savings leading to
    incomplete resets of the UniMAC and many instabilities observed
    over the years. The workaround of this commit is expected to put
    an end to those problems.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee3b7b35cb0dbb0683730ce86a84d6636f853ca4
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Tue Nov 5 21:17:06 2019 -0800

    scripts/gdb: fix debugging modules compiled with hot/cold partitioning
    
    [ Upstream commit 8731acc5068eb3f422a45c760d32198175c756f8 ]
    
    gcc's -freorder-blocks-and-partition option makes it group frequently
    and infrequently used code in .text.hot and .text.unlikely sections
    respectively.  At least when building modules on s390, this option is
    used by default.
    
    gdb assumes that all code is located in .text section, and that .text
    section is located at module load address.  With such modules this is no
    longer the case: there is code in .text.hot and .text.unlikely, and
    either of them might precede .text.
    
    Fix by explicitly telling gdb the addresses of code sections.
    
    It might be tempting to do this for all sections, not only the ones in
    the white list.  Unfortunately, gdb appears to have an issue, when
    telling it about e.g. loadable .note.gnu.build-id section causes it to
    think that non-loadable .note.Linux section is loaded at address 0,
    which in turn causes NULL pointers to be resolved to bogus symbols.  So
    keep using the white list approach for the time being.
    
    Link: http://lkml.kernel.org/r/20191028152734.13065-1-iii@linux.ibm.com
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Reviewed-by: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Kieran Bingham <kbingham@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c34e31d803663197c0cba4c44b61c205184e0d61
Author: John Hubbard <jhubbard@nvidia.com>
Date:   Tue Nov 5 21:16:24 2019 -0800

    mm/gup_benchmark: fix MAP_HUGETLB case
    
    [ Upstream commit 64801d19eba156170340c76f70ade743defcb8ce ]
    
    The MAP_HUGETLB ("-H" option) of gup_benchmark fails:
    
      $ sudo ./gup_benchmark -H
      mmap: Invalid argument
    
    This is because gup_benchmark.c is passing in a file descriptor to
    mmap(), but the fd came from opening up the /dev/zero file.  This
    confuses the mmap syscall implementation, which thinks that, if the
    caller did not specify MAP_ANONYMOUS, then the file must be a huge page
    file.  So it attempts to verify that the file really is a huge page
    file, as you can see here:
    
    ksys_mmap_pgoff()
    {
        if (!(flags & MAP_ANONYMOUS)) {
            retval = -EINVAL;
            if (unlikely(flags & MAP_HUGETLB && !is_file_hugepages(file)))
                goto out_fput; /* THIS IS WHERE WE END UP */
    
        else if (flags & MAP_HUGETLB) {
            ...proceed normally, /dev/zero is ok here...
    
    ...and of course is_file_hugepages() returns "false" for the /dev/zero
    file.
    
    The problem is that the user space program, gup_benchmark.c, really just
    wants anonymous memory here.  The simplest way to get that is to pass
    MAP_ANONYMOUS whenever MAP_HUGETLB is specified, so that's what this
    patch does.
    
    Link: http://lkml.kernel.org/r/20191021212435.398153-2-jhubbard@nvidia.com
    Signed-off-by: John Hubbard <jhubbard@nvidia.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Jérôme Glisse <jglisse@redhat.com>
    Cc: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c59159914ce403bc694ae6f3f22623a7083ef14e
Author: Dragos Tarcatu <dragos_tarcatu@mentor.com>
Date:   Wed Nov 6 08:58:16 2019 -0600

    ASoC: SOF: topology: Fix bytes control size checks
    
    [ Upstream commit 9508ef5a980f5d847cad9b932b6ada8f2a3466c1 ]
    
    When using the example SOF amp widget topology, KASAN dumps this
    when the AMP bytes kcontrol gets loaded:
    
    [ 9.579548] BUG: KASAN: slab-out-of-bounds in
    sof_control_load+0x8cc/0xac0 [snd_sof]
    [ 9.588194] Write of size 40 at addr ffff8882314559dc by task
    systemd-udevd/2411
    
    Fix that by rejecting the topology if the bytes data size > max_size
    
    Fixes: 311ce4fe7637d ("ASoC: SOF: Add support for loading topologies")
    Reviewed-by: Jaska Uimonen <jaska.uimonen@intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Dragos Tarcatu <dragos_tarcatu@mentor.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20191106145816.9367-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 904c854284168fe507b688d4d0d91550e60d9d48
Author: Christophe Roullier <christophe.roullier@st.com>
Date:   Mon Nov 4 15:31:45 2019 +0100

    ARM: dts: stm32: Fix CAN RAM mapping on stm32mp157c
    
    [ Upstream commit 9df50c2e16de7fd739d11d37303afec9e573b46f ]
    
    Split the 10Kbytes CAN message RAM to be able to use simultaneously
    FDCAN1 and FDCAN2 instances.
    First 5Kbytes are allocated to FDCAN1 and last 5Kbytes are used for
    FDCAN2. To do so, set the offset to 0x1400 in mram-cfg for FDCAN2.
    
    Fixes: d44d6e021301 ("ARM: dts: stm32: change CAN RAM mapping on stm32mp157c")
    Signed-off-by: Christophe Roullier <christophe.roullier@st.com>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f757951caa834e077b74b11dbff5c0bbf9dc7f2
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Tue Nov 5 18:10:53 2019 +0200

    ALSA: hda: hdmi - add Tigerlake support
    
    [ Upstream commit 9a11ba7388f165762549903492fc34d29bbb3c04 ]
    
    Add Tigerlake HDMI codec support.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205379
    BugLink: https://bugs.freedesktop.org/show_bug.cgi?id=112171
    Cc: Pan Xiuli <xiuli.pan@linux.intel.com>
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20191105161053.22958-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea4e29633d3d201f758d1448d3d3dbbf652eb940
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Mon Nov 4 14:36:54 2019 +0100

    ASoC: stm32: sai: add restriction on mmap support
    
    [ Upstream commit eaf072e512d54c95b0977eda06cbca3151ace1e5 ]
    
    Do not support mmap in S/PDIF mode. In S/PDIF mode
    the buffer has to be copied, to allow the channel status
    bits insertion.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Link: https://lore.kernel.org/r/20191104133654.28750-1-olivier.moysan@st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b76925dfad58aeea0cb3e4640970f7ee17f26a57
Author: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
Date:   Wed Oct 23 15:41:59 2019 +0300

    watchdog: bd70528: Add MODULE_ALIAS to allow module auto loading
    
    [ Upstream commit 81363f248aecd2b5f10547af268a4dfaf8963489 ]
    
    The bd70528 watchdog driver is probed by MFD driver. Add MODULE_ALIAS
    in order to allow udev to load the module when MFD sub-device cell for
    watchdog is added.
    
    Fixes: bbc88a0ec9f37 ("watchdog: bd70528: Initial support for ROHM BD70528 watchdog block")
    Signed-off-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 367a4cd185a2c3d119e8780741543ae0c517526c
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Wed Oct 9 15:37:47 2019 +0800

    watchdog: imx_sc_wdt: Pretimeout should follow SCU firmware format
    
    [ Upstream commit 2c50a6b825b3463a7600d6e6acadba73211c3d2c ]
    
    SCU firmware calculates pretimeout based on current time stamp
    instead of watchdog timeout stamp, need to convert the pretimeout
    to SCU firmware's timeout value.
    
    Fixes: 15f7d7fc5542 ("watchdog: imx_sc: Add pretimeout support")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3202b18e744e5c4c5558f792fbb462564a0f87e2
Author: Xingyu Chen <xingyu.chen@amlogic.com>
Date:   Sun Sep 29 18:53:49 2019 +0800

    watchdog: meson: Fix the wrong value of left time
    
    [ Upstream commit 2c77734642d52448aca673e889b39f981110828b ]
    
    The left time value is wrong when we get it by sysfs. The left time value
    should be equal to preset timeout value minus elapsed time value. According
    to the Meson-GXB/GXL datasheets which can be found at [0], the timeout value
    is saved to BIT[0-15] of the WATCHDOG_TCNT, and elapsed time value is saved
    to BIT[16-31] of the WATCHDOG_TCNT.
    
    [0]: http://linux-meson.com
    
    Fixes: 683fa50f0e18 ("watchdog: Add Meson GXBB Watchdog Driver")
    Signed-off-by: Xingyu Chen <xingyu.chen@amlogic.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f7842758a007ae9a6415603b40858796fe9947b
Author: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
Date:   Fri Sep 6 22:30:53 2019 +0200

    watchdog: pm8916_wdt: fix pretimeout registration flow
    
    [ Upstream commit 1993f1d7ca3f315e0459c58c8e7038039a96dd85 ]
    
    When an IRQ is present in the dts, the probe function shall fail if
    the interrupt can not be registered.
    
    The probe function shall also be retried if getting the irq is being
    deferred.
    
    Signed-off-by: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
    Reviewed-by: Loic Poulain <loic.poulain@linaro.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e713fc1fa1fb1584e73a68111a89aa2a4408788
Author: Anton Eidelman <anton@lightbitslabs.com>
Date:   Fri Nov 1 17:27:55 2019 -0700

    nvme-multipath: fix crash in nvme_mpath_clear_ctrl_paths
    
    [ Upstream commit 763303a83a095a88c3a8a0d1abf97165db2e8bf5 ]
    
    nvme_mpath_clear_ctrl_paths() iterates through
    the ctrl->namespaces list while holding ctrl->scan_lock.
    This does not seem to be the correct way of protecting
    from concurrent list modification.
    
    Specifically, nvme_scan_work() sorts ctrl->namespaces
    AFTER unlocking scan_lock.
    
    This may result in the following (rare) crash in ctrl disconnect
    during scan_work:
    
        BUG: kernel NULL pointer dereference, address: 0000000000000050
        Oops: 0000 [#1] SMP PTI
        CPU: 0 PID: 3995 Comm: nvme 5.3.5-050305-generic
        RIP: 0010:nvme_mpath_clear_current_path+0xe/0x90 [nvme_core]
        ...
        Call Trace:
         nvme_mpath_clear_ctrl_paths+0x3c/0x70 [nvme_core]
         nvme_remove_namespaces+0x35/0xe0 [nvme_core]
         nvme_do_delete_ctrl+0x47/0x90 [nvme_core]
         nvme_sysfs_delete+0x49/0x60 [nvme_core]
         dev_attr_store+0x17/0x30
         sysfs_kf_write+0x3e/0x50
         kernfs_fop_write+0x11e/0x1a0
         __vfs_write+0x1b/0x40
         vfs_write+0xb9/0x1a0
         ksys_write+0x67/0xe0
         __x64_sys_write+0x1a/0x20
         do_syscall_64+0x5a/0x130
         entry_SYSCALL_64_after_hwframe+0x44/0xa9
        RIP: 0033:0x7f8d02bfb154
    
    Fix:
    After taking scan_lock in nvme_mpath_clear_ctrl_paths()
    down_read(&ctrl->namespaces_rwsem) as well to make list traversal safe.
    This will not cause deadlocks because taking scan_lock never happens
    while holding the namespaces_rwsem.
    Moreover, scan work downs namespaces_rwsem in the same order.
    
    Alternative: sort ctrl->namespaces in nvme_scan_work()
    while still holding the scan_lock.
    This would leave nvme_mpath_clear_ctrl_paths() without correct protection
    against ctrl->namespaces modification by anyone other than scan_work.
    
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Anton Eidelman <anton@lightbitslabs.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 273374de121fbdd62d198b36eb469cf8550cd712
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Tue Oct 29 16:42:27 2019 +0200

    nvme-rdma: fix a segmentation fault during module unload
    
    [ Upstream commit 9ad9e8d6ca29c1446d81c6518ae634a2141dfd22 ]
    
    In case there are controllers that are not associated with any RDMA
    device (e.g. during unsuccessful reconnection) and the user will unload
    the module, these controllers will not be freed and will access already
    freed memory. The same logic appears in other fabric drivers as well.
    
    Fixes: 87fd125344d6 ("nvme-rdma: remove redundant reference between ib_device and tagset")
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f248c2b7e71c0bec5839bfc6be6d4450a8e47e66
Author: Timo Schlüßler <schluessler@krause.de>
Date:   Fri Oct 11 15:38:19 2019 +0200

    can: mcp251x: mcp251x_restart_work_handler(): Fix potential force_quit race condition
    
    [ Upstream commit 27a0e54bae09d2dd023a01254db506d61cc50ba1 ]
    
    In mcp251x_restart_work_handler() the variable to stop the interrupt
    handler (priv->force_quit) is reset after the chip is restarted and thus
    a interrupt might occur.
    
    This patch fixes the potential race condition by resetting force_quit
    before enabling interrupts.
    
    Signed-off-by: Timo Schlüßler <schluessler@krause.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9161071a6776637fe94696546ce0599256776f9
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Oct 17 17:05:22 2019 -0400

    perf scripting engines: Iterate on tep event arrays directly
    
    [ Upstream commit 443b0636ea7386d01dc460b4a4264e125f710b53 ]
    
    Instead of calling a useless (and broken) helper function to get the
    next event of a tep event array, just get the array directly and iterate
    over it.
    
    Note, the broken part was from trace_find_next_event() which after this
    will no longer be used, and can be removed.
    
    Committer notes:
    
    This fixes a segfault when generating python scripts from perf.data
    files with multiple tracepoint events, i.e. the following use case is
    fixed by this patch:
    
      # perf record -e sched:* sleep 1
      [ perf record: Woken up 31 times to write data ]
      [ perf record: Captured and wrote 0.031 MB perf.data (9 samples) ]
      # perf script -g python
      Segmentation fault (core dumped)
      #
    
    Reported-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Tzvetomir Stoyanov <tstoyanov@vmware.com>
    Cc: linux-trace-devel@vger.kernel.org
    Link: http://lkml.kernel.org/r/20191017153733.630cd5eb@gandalf.local.home
    Link: http://lore.kernel.org/lkml/20191017210636.061448713@goodmis.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5c92066656ef5d05667afc0d54356e335f9f540
Author: Michael Zhivich <mzhivich@akamai.com>
Date:   Thu Oct 24 13:59:45 2019 -0400

    x86/tsc: Respect tsc command line paraemeter for clocksource_tsc_early
    
    [ Upstream commit 63ec58b44fcc05efd1542045abd7faf056ac27d9 ]
    
    The introduction of clocksource_tsc_early broke the functionality of
    "tsc=reliable" and "tsc=nowatchdog" command line parameters, since
    clocksource_tsc_early is unconditionally registered with
    CLOCK_SOURCE_MUST_VERIFY and thus put on the watchdog list.
    
    This can cause the TSC to be declared unstable during boot:
    
      clocksource: timekeeping watchdog on CPU0: Marking clocksource
                   'tsc-early' as unstable because the skew is too large:
      clocksource: 'refined-jiffies' wd_now: fffb7018 wd_last: fffb6e9d
                   mask: ffffffff
      clocksource: 'tsc-early' cs_now: 68a6a7070f6a0 cs_last: 68a69ab6f74d6
                   mask: ffffffffffffffff
      tsc: Marking TSC unstable due to clocksource watchdog
    
    The corresponding elapsed times are cs_nsec=1224152026 and wd_nsec=378942392, so
    the watchdog differs from TSC by 0.84 seconds.
    
    This happens when HPET is not available and jiffies are used as the TSC
    watchdog instead and the jiffies update is not happening due to lost timer
    interrupts in periodic mode, which can happen e.g. with expensive debug
    mechanisms enabled or under massive overload conditions in virtualized
    environments.
    
    Before the introduction of the early TSC clocksource the command line
    parameters "tsc=reliable" and "tsc=nowatchdog" could be used to work around
    this issue.
    
    Restore the behaviour by disabling the watchdog if requested on the kernel
    command line.
    
    [ tglx: Clarify changelog ]
    
    Fixes: aa83c45762a24 ("x86/tsc: Introduce early tsc clocksource")
    Signed-off-by: Michael Zhivich <mzhivich@akamai.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20191024175945.14338-1-mzhivich@akamai.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 829d503216f57f5dc47bf2e811448cd7217a6d9c
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Mon Jul 15 20:53:08 2019 +0200

    can: flexcan: increase error counters if skb enqueueing via can_rx_offload_queue_sorted() fails
    
    [ Upstream commit 758124335a9dd649ab820bfb5b328170919ee7dc ]
    
    The call to can_rx_offload_queue_sorted() may fail and return an error
    (in the current implementation due to resource shortage). The passed skb
    is consumed.
    
    This patch adds incrementing of the appropriate error counters to let
    the device statistics reflect that there's a problem.
    
    Reported-by: Martin Hundebøll <martin@geanix.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58c1b54199cad58a6e9cbc1054073234a6e79311
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Sep 24 18:45:38 2019 +0000

    can: rx-offload: can_rx_offload_irq_offload_fifo(): continue on error
    
    [ Upstream commit 1f7f504dcd9d1262437bdcf4fa071e41dec1af03 ]
    
    In case of a resource shortage, i.e. the rx_offload queue will overflow
    or a skb fails to be allocated (due to OOM),
    can_rx_offload_offload_one() will call mailbox_read() to discard the
    mailbox and return an ERR_PTR.
    
    If the hardware FIFO is empty can_rx_offload_offload_one() will return
    NULL.
    
    In case a CAN frame was read from the hardware,
    can_rx_offload_offload_one() returns the skb containing it.
    
    Without this patch can_rx_offload_irq_offload_fifo() bails out if no skb
    returned, regardless of the reason.
    
    Similar to can_rx_offload_irq_offload_timestamp() in case of a resource
    shortage the whole FIFO should be discarded, to avoid an IRQ storm and
    give the system some time to recover. However if the FIFO is empty the
    loop can be left.
    
    With this patch the loop is left in case of empty FIFO, but not on
    errors.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1503706d4104004f6396ba9e390ec130bba25297
Author: Jeroen Hofstee <jhofstee@victronenergy.com>
Date:   Tue Sep 24 18:45:38 2019 +0000

    can: rx-offload: can_rx_offload_irq_offload_timestamp(): continue on error
    
    [ Upstream commit c2a9f74c9d18acfdcabd3361adc7eac82c537a66 ]
    
    In case of a resource shortage, i.e. the rx_offload queue will overflow
    or a skb fails to be allocated (due to OOM),
    can_rx_offload_offload_one() will call mailbox_read() to discard the
    mailbox and return an ERR_PTR.
    
    However can_rx_offload_irq_offload_timestamp() bails out in the error
    case. In case of a resource shortage all mailboxes should be discarded,
    to avoid an IRQ storm and give the system some time to recover.
    
    Since can_rx_offload_irq_offload_timestamp() is typically called from a
    while loop, all message will eventually be discarded. So let's continue
    on error instead to discard them directly.
    
    Signed-off-by: Jeroen Hofstee <jhofstee@victronenergy.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0540e9002466e63f2b1680921c41c79bca7f6230
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 21:00:32 2019 +0200

    can: rx-offload: can_rx_offload_offload_one(): use ERR_PTR() to propagate error value in case of errors
    
    [ Upstream commit d763ab3044f0bf50bd0e6179f6b2cf1c125d1d94 ]
    
    Before this patch can_rx_offload_offload_one() returns a pointer to a
    skb containing the read CAN frame or a NULL pointer.
    
    However the meaning of the NULL pointer is ambiguous, it can either mean
    the requested mailbox is empty or there was an error.
    
    This patch fixes this situation by returning:
    - pointer to skb on success
    - NULL pointer if mailbox is empty
    - ERR_PTR() in case of an error
    
    All users of can_rx_offload_offload_one() have been adopted, no
    functional change intended.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85c43d3c255cd637056d5364b2417da2e0006d66
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 15:15:07 2019 +0200

    can: rx-offload: can_rx_offload_offload_one(): increment rx_fifo_errors on queue overflow or OOM
    
    [ Upstream commit 4e9016bee3bf0c24963097edace034ff205b565c ]
    
    If the rx-offload skb_queue is full or the skb allocation fails (due to OOM),
    the mailbox contents is discarded.
    
    This patch adds the incrementing of the rx_fifo_errors statistics counter.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 881c0d8a5822f6ef63a3b96ebbd7d4305c390ccf
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 16:03:18 2019 +0200

    can: rx-offload: can_rx_offload_offload_one(): do not increase the skb_queue beyond skb_queue_len_max
    
    [ Upstream commit a2dc3f5e1022a5ede8af9ab89a144f1e69db8636 ]
    
    The skb_queue is a linked list, holding the skb to be processed in the
    next NAPI call.
    
    Without this patch, the queue length in can_rx_offload_offload_one() is
    limited to skb_queue_len_max + 1. As the skb_queue is a linked list, no
    array or other resources are accessed out-of-bound, however this
    behaviour is counterintuitive.
    
    This patch limits the rx-offload skb_queue length to skb_queue_len_max.
    
    Fixes: d254586c3453 ("can: rx-offload: Add support for HW fifo based irq offloading")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 289ad8529dcfce4e57cebac57e1a09cf07b15259
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 15:48:48 2019 +0200

    can: rx-offload: can_rx_offload_queue_tail(): fix error handling, avoid skb mem leak
    
    [ Upstream commit 6caf8a6d6586d44fd72f4aa1021d14aa82affafb ]
    
    If the rx-offload skb_queue is full can_rx_offload_queue_tail() will not
    queue the skb and return with an error.
    
    This patch frees the skb in case of a full queue, which brings
    can_rx_offload_queue_tail() in line with the
    can_rx_offload_queue_sorted() function, which has been adjusted in the
    previous patch.
    
    The return value is adjusted to -ENOBUFS to better reflect the actual
    problem.
    
    The device stats handling is left to the caller.
    
    Fixes: d254586c3453 ("can: rx-offload: Add support for HW fifo based irq offloading")
    Reported-by: Kurt Van Dijck <dev.kurt@vandijck-laurijssen.be>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad35f91a587be42b56053207d34f60ec9263cae9
Author: Jeroen Hofstee <jhofstee@victronenergy.com>
Date:   Tue Oct 1 21:01:20 2019 +0000

    can: c_can: D_CAN: c_can_chip_config(): perform a sofware reset on open
    
    [ Upstream commit 23c5a9488f076bab336177cd1d1a366bd8ddf087 ]
    
    When the CAN interface is closed it the hardwre is put in power down
    mode, but does not reset the error counters / state. Reset the D_CAN on
    open, so the reported state and the actual state match.
    
    According to [1], the C_CAN module doesn't have the software reset.
    
    [1] http://www.bosch-semiconductors.com/media/ip_modules/pdf_2/c_can_fd8/users_manual_c_can_fd8_r210_1.pdf
    
    Signed-off-by: Jeroen Hofstee <jhofstee@victronenergy.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06017e2828be3784706e107cbe87af6966202cea
Author: Jeroen Hofstee <jhofstee@victronenergy.com>
Date:   Wed Sep 25 08:58:45 2019 +0000

    can: peak_usb: report bus recovery as well
    
    [ Upstream commit 128a1b87d3ceb2ba449d5aadb222fe22395adeb0 ]
    
    While the state changes are reported when the error counters increase
    and decrease, there is no event when the bus recovers and the error
    counters decrease again. So add those as well.
    
    Change the state going downward to be ERROR_PASSIVE -> ERROR_WARNING ->
    ERROR_ACTIVE instead of directly to ERROR_ACTIVE again.
    
    Signed-off-by: Jeroen Hofstee <jhofstee@victronenergy.com>
    Cc: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 464637387ddee1a06b124bfd4a0eda681ad9f52d
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Oct 30 08:25:45 2019 +0100

    stacktrace: Don't skip first entry on noncurrent tasks
    
    [ Upstream commit b0c51f158455e31d5024100cf3580fcd88214b0e ]
    
    When doing cat /proc/<PID>/stack, the output is missing the first entry.
    When the current code walks the stack starting in stack_trace_save_tsk,
    it skips all scheduler functions (that's OK) plus one more function. But
    this one function should be skipped only for the 'current' task as it is
    stack_trace_save_tsk proper.
    
    The original code (before the common infrastructure) skipped one
    function only for the 'current' task -- see save_stack_trace_tsk before
    3599fe12a125. So do so also in the new infrastructure now.
    
    Fixes: 214d8ca6ee85 ("stacktrace: Provide common infrastructure")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Michal Suchanek <msuchanek@suse.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lkml.kernel.org/r/20191030072545.19462-1-jslaby@suse.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd73a78a6f91db5ebf038b5edc657e1f2ee8618c
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Nov 4 14:52:42 2019 +0100

    netfilter: nf_tables_offload: skip EBUSY on chain update
    
    [ Upstream commit 88c749840dff58e7a40e18bf9bdace15f27ef259 ]
    
    Do not try to bind a chain again if it exists, otherwise the driver
    returns EBUSY.
    
    Fixes: c9626a2cbdb2 ("netfilter: nf_tables: add hardware offload support")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7dea1a5961855c456da9ef7215723df346212729
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Nov 4 14:52:41 2019 +0100

    netfilter: nf_tables: bogus EOPNOTSUPP on basechain update
    
    [ Upstream commit 1ed012f6fd83e7ee7efd22e2c32f23efff015b30 ]
    
    Userspace never includes the NFT_BASE_CHAIN flag, this flag is inferred
    from the NFTA_CHAIN_HOOK atribute. The chain update path does not allow
    to update flags at this stage, the existing sanity check bogusly hits
    EOPNOTSUPP in the basechain case if the offload flag is set on.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78d98416abab00409d72f4c0f6fefcef7e07cd2f
Author: Florian Westphal <fw@strlen.de>
Date:   Sun Nov 3 20:54:28 2019 +0100

    bridge: ebtables: don't crash when using dnat target in output chains
    
    [ Upstream commit b23c0742c2ce7e33ed79d10e451f70fdb5ca85d1 ]
    
    xt_in() returns NULL in the output hook, skip the pkt_type change for
    that case, redirection only makes sense in broute/prerouting hooks.
    
    Reported-by: Tom Yan <tom.ty89@gmail.com>
    Cc: Linus Lüssing <linus.luessing@c0d3.blue>
    Fixes: cf3cb246e277d ("bridge: ebtables: fix reception of frames DNAT-ed to bridge device/port")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d78d5745afe7ac855b5869b0429c3e1a7545d629
Author: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
Date:   Fri Nov 1 17:13:18 2019 +0100

    netfilter: ipset: Fix nla_policies to fully support NL_VALIDATE_STRICT
    
    [ Upstream commit 1289975643f4cdecb071dc641059a47679fd170f ]
    
    Since v5.2 (commit "netlink: re-add parse/validate functions in strict
    mode") NL_VALIDATE_STRICT is enabled. Fix the ipset nla_policies which did
    not support strict mode and convert from deprecated parsings to verified ones.
    
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a41a61a52db7b011643bc4134b56c6704193f0e
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Mon Nov 4 23:50:00 2019 +0800

    net: fec: add missed clk_disable_unprepare in remove
    
    [ Upstream commit c43eab3eddb4c6742ac20138659a9b701822b274 ]
    
    This driver forgets to disable and unprepare clks when remove.
    Add calls to clk_disable_unprepare to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 035b3f8cf1917dca287af368731add05144fe4b7
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Sep 30 08:40:01 2019 -0700

    clk: ti: clkctrl: Fix failed to enable error with double udelay timeout
    
    [ Upstream commit 81a41901ffd46bac6df4c95b8290ac259e0feda8 ]
    
    Commit 3d8598fb9c5a ("clk: ti: clkctrl: use fallback udelay approach if
    timekeeping is suspended") added handling for cases when timekeeping is
    suspended. But looks like we can still get occasional "failed to enable"
    errors on the PM runtime resume path with udelay() returning faster than
    expected.
    
    With ti-sysc interconnect target module driver this leads into device
    failure with PM runtime failing with "failed to enable" clkctrl error.
    
    Let's fix the issue with a delay of two times the desired delay as in
    often done for udelay() to account for the inaccuracy.
    
    Fixes: 3d8598fb9c5a ("clk: ti: clkctrl: use fallback udelay approach if timekeeping is suspended")
    Cc: Keerthy <j-keerthy@ti.com>
    Cc: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lkml.kernel.org/r/20190930154001.46581-1-tony@atomide.com
    Tested-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7960cb94d9e1fa28c948a69e9866dd39aac0c9fa
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 2 11:34:36 2019 +0300

    clk: ti: dra7-atl-clock: Remove ti_clk_add_alias call
    
    [ Upstream commit 9982b0f69b49931b652d35f86f519be2ccfc7027 ]
    
    ti_clk_register() calls it already so the driver should not create
    duplicated alias.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lkml.kernel.org/r/20191002083436.10194-1-peter.ujfalusi@ti.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee5322e557201e43cd2c3435c2d6a1dfe0dfbcf4
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Fri Nov 1 12:06:35 2019 -0500

    ASoC: hdac_hda: fix race in device removal
    
    [ Upstream commit 5dc7d5bc9627eb26d33c7c7eefc467cf217f9326 ]
    
    When ASoC card instance is removed containing a HDA codec,
    hdac_hda_codec_remove() may run in parallel with codec resume.
    This will cause problems if the HDA link is freed with
    snd_hdac_ext_bus_link_put() while the codec is still in
    middle of its resume process.
    
    To fix this, change the order such that pm_runtime_disable()
    is called before the link is freed. This will ensure any
    pending runtime PM action is completed before proceeding
    to free the link.
    
    This issue can be easily hit with e.g. SOF driver by loading and
    unloading the drivers.
    
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20191101170635.26389-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23c91529cdaff8d61f122d766926c64444ac4fb8
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Fri Sep 27 11:47:08 2019 +0200

    fbdev: c2p: Fix link failure on non-inlining
    
    [ Upstream commit b330f3972f4f2a829d41fb9e9b552bec7d73a840 ]
    
    When the compiler decides not to inline the Chunky-to-Planar core
    functions, the build fails with:
    
        c2p_planar.c:(.text+0xd6): undefined reference to `c2p_unsupported'
        c2p_planar.c:(.text+0x1dc): undefined reference to `c2p_unsupported'
        c2p_iplan2.c:(.text+0xc4): undefined reference to `c2p_unsupported'
        c2p_iplan2.c:(.text+0x150): undefined reference to `c2p_unsupported'
    
    Fix this by marking the functions __always_inline.
    
    While this could be triggered before by manually enabling both
    CONFIG_OPTIMIZE_INLINING and CONFIG_CC_OPTIMIZE_FOR_SIZE, it was exposed
    in the m68k defconfig by commit ac7c3e4ff401b304 ("compiler: enable
    CONFIG_OPTIMIZE_INLINING forcibly").
    
    Fixes: 9012d011660ea5cf ("compiler: allow all arches to enable CONFIG_OPTIMIZE_INLINING")
    Reported-by: noreply@ellerman.id.au
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190927094708.11563-1-geert@linux-m68k.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fceb4f73a147560a7d06f65b67e4e9387250074e
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed Oct 30 17:46:23 2019 +0100

    arm64: dts: zii-ultra: fix ARM regulator GPIO handle
    
    [ Upstream commit f852497c9a07ec9913bb3f3db5f096a8e2ab7e03 ]
    
    The GPIO handle is referencing the wrong GPIO, so the voltage did not
    actually change as intended. The pinmux is already correct, so just
    correct the GPIO number.
    
    Fixes: 4a13b3bec3b4 (arm64: dts: imx: add Zii Ultra board support)
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f40d0b265efc8aa87e7082d3886613fdfa4ce3f
Author: Xiaochen Shen <xiaochen.shen@intel.com>
Date:   Tue Oct 29 13:25:02 2019 +0800

    x86/resctrl: Prevent NULL pointer dereference when reading mondata
    
    [ Upstream commit 26467b0f8407cbd628fa5b7bcfd156e772004155 ]
    
    When a mon group is being deleted, rdtgrp->flags is set to RDT_DELETED
    in rdtgroup_rmdir_mon() firstly. The structure of rdtgrp will be freed
    until rdtgrp->waitcount is dropped to 0 in rdtgroup_kn_unlock() later.
    
    During the window of deleting a mon group, if an application calls
    rdtgroup_mondata_show() to read mondata under this mon group,
    'rdtgrp' returned from rdtgroup_kn_lock_live() is a NULL pointer when
    rdtgrp->flags is RDT_DELETED. And then 'rdtgrp' is passed in this path:
    rdtgroup_mondata_show() --> mon_event_read() --> mon_event_count().
    Thus it results in NULL pointer dereference in mon_event_count().
    
    Check 'rdtgrp' in rdtgroup_mondata_show(), and return -ENOENT
    immediately when reading mondata during the window of deleting a mon
    group.
    
    Fixes: d89b7379015f ("x86/intel_rdt/cqm: Add mon_data")
    Signed-off-by: Xiaochen Shen <xiaochen.shen@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Fenghua Yu <fenghua.yu@intel.com>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: pei.p.jia@intel.com
    Cc: Reinette Chatre <reinette.chatre@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/1572326702-27577-1-git-send-email-xiaochen.shen@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 907c122b776898c9eb9b735beda594883d102c26
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Sat Nov 2 00:25:08 2019 -0400

    idr: Fix idr_alloc_u32 on 32-bit systems
    
    [ Upstream commit b7e9728f3d7fc5c5c8508d99f1675212af5cfd49 ]
    
    Attempting to allocate an entry at 0xffffffff when one is already
    present would succeed in allocating one at 2^32, which would confuse
    everything.  Return -ENOSPC in this case, as expected.
    
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bab23db2db133f3085da283cd729c17f9837949e
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Sun Nov 3 06:36:43 2019 -0500

    idr: Fix integer overflow in idr_for_each_entry
    
    [ Upstream commit f6341c5af4e6e15041be39976d16deca789555fa ]
    
    If there is an entry at INT_MAX then idr_for_each_entry() will increment
    id after handling it.  This is undefined behaviour, and is caught by
    UBSAN.  Adding 1U to id forces the operation to be carried out as an
    unsigned addition which (when assigned to id) will result in INT_MIN.
    Since there is never an entry stored at INT_MIN, idr_get_next() will
    return NULL, ending the loop as expected.
    
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 870d2c39cfa66ae37ee1c60375dfc985d34449c8
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Fri Nov 1 21:36:39 2019 -0400

    idr: Fix idr_get_next_ul race with idr_remove
    
    [ Upstream commit 5a74ac4c4a97bd8b7dba054304d598e2a882fea6 ]
    
    Commit 5c089fd0c734 ("idr: Fix idr_get_next race with idr_remove")
    neglected to fix idr_get_next_ul().  As far as I can tell, nobody's
    actually using this interface under the RCU read lock, but fix it now
    before anybody decides to use it.
    
    Fixes: 5c089fd0c734 ("idr: Fix idr_get_next race with idr_remove")
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4dc38650fd079a03dfe51828c7a0e7c9ca1ba776
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 31 20:34:44 2019 -0700

    powerpc/bpf: Fix tail call implementation
    
    [ Upstream commit 7de086909365cd60a5619a45af3f4152516fd75c ]
    
    We have seen many crashes on powerpc hosts while loading bpf programs.
    
    The problem here is that bpf_int_jit_compile() does a first pass
    to compute the program length.
    
    Then it allocates memory to store the generated program and
    calls bpf_jit_build_body() a second time (and a third time
    later)
    
    What I have observed is that the second bpf_jit_build_body()
    could end up using few more words than expected.
    
    If bpf_jit_binary_alloc() put the space for the program
    at the end of the allocated page, we then write on
    a non mapped memory.
    
    It appears that bpf_jit_emit_tail_call() calls
    bpf_jit_emit_common_epilogue() while ctx->seen might not
    be stable.
    
    Only after the second pass we can be sure ctx->seen wont be changed.
    
    Trying to avoid a second pass seems quite complex and probably
    not worth it.
    
    Fixes: ce0761419faef ("powerpc/bpf: Implement support for tail calls")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Naveen N. Rao <naveen.n.rao@linux.ibm.com>
    Cc: Sandipan Das <sandipan@linux.ibm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20191101033444.143741-1-edumazet@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea39e0260e564b48e4904882ef876e2c071b336e
Author: Björn Töpel <bjorn.topel@intel.com>
Date:   Tue Oct 29 16:43:07 2019 +0100

    bpf: Change size to u64 for bpf_map_{area_alloc, charge_init}()
    
    [ Upstream commit ff1c08e1f74b6864854c39be48aa799a6a2e4d2b ]
    
    The functions bpf_map_area_alloc() and bpf_map_charge_init() prior
    this commit passed the size parameter as size_t. In this commit this
    is changed to u64.
    
    All users of these functions avoid size_t overflows on 32-bit systems,
    by explicitly using u64 when calculating the allocation size and
    memory charge cost. However, since the result was narrowed by the
    size_t when passing size and cost to the functions, the overflow
    handling was in vain.
    
    Instead of changing all call sites to size_t and handle overflow at
    the call site, the parameter is changed to u64 and checked in the
    functions above.
    
    Fixes: d407bd25a204 ("bpf: don't trigger OOM killer under pressure with map alloc")
    Fixes: c85d69135a91 ("bpf: move memory size checks to bpf_map_charge_init()")
    Signed-off-by: Björn Töpel <bjorn.topel@intel.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Link: https://lore.kernel.org/bpf/20191029154307.23053-1-bjorn.topel@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1216a84d0b0f6dd50c2888fb64fc088f3753d827
Author: Björn Töpel <bjorn.topel@intel.com>
Date:   Tue Oct 1 13:33:07 2019 +0200

    samples/bpf: fix build by setting HAVE_ATTR_TEST to zero
    
    [ Upstream commit 04ec044b7d30800296824783df7d9728d16d7567 ]
    
    To remove that test_attr__{enabled/open} are used by perf-sys.h, we
    set HAVE_ATTR_TEST to zero.
    
    Signed-off-by: Björn Töpel <bjorn.topel@intel.com>
    Tested-by: KP Singh <kpsingh@google.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: bpf@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: http://lore.kernel.org/bpf/20191001113307.27796-3-bjorn.topel@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c4bf6791033aef1577c82aa9a644324b3931326
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Mon Oct 28 13:29:02 2019 +0100

    bpf: Allow narrow loads of bpf_sysctl fields with offset > 0
    
    [ Upstream commit 7541c87c9b7a7e07c84481f37f2c19063b44469b ]
    
    "ctx:file_pos sysctl:read read ok narrow" works on s390 by accident: it
    reads the wrong byte, which happens to have the expected value of 0.
    Improve the test by seeking to the 4th byte and expecting 4 instead of
    0.
    
    This makes the latent problem apparent: the test attempts to read the
    first byte of bpf_sysctl.file_pos, assuming this is the least-significant
    byte, which is not the case on big-endian machines: a non-zero offset is
    needed.
    
    The point of the test is to verify narrow loads, so we cannot cheat our
    way out by simply using BPF_W. The existence of the test means that such
    loads have to be supported, most likely because llvm can generate them.
    Fix the test by adding a big-endian variant, which uses an offset to
    access the least-significant byte of bpf_sysctl.file_pos.
    
    This reveals the final problem: verifier rejects accesses to bpf_sysctl
    fields with offset > 0. Such accesses are already allowed for a wide
    range of structs: __sk_buff, bpf_sock_addr and sk_msg_md to name a few.
    Extend this support to bpf_sysctl by using bpf_ctx_range instead of
    offsetof when matching field offsets.
    
    Fixes: 7b146cebe30c ("bpf: Sysctl hook")
    Fixes: e1550bfe0de4 ("bpf: Add file_pos field to bpf_sysctl ctx")
    Fixes: 9a1027e52535 ("selftests/bpf: Test file_pos field in bpf_sysctl ctx")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrey Ignatov <rdna@fb.com>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20191028122902.9763-1-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83e0b5fb2766fabdb52c03bf90acb8029da9a18f
Author: Ondrej Jirman <megous@megous.com>
Date:   Mon Oct 28 22:58:58 2019 +0100

    ARM: dts: sun8i-a83t-tbs-a711: Fix WiFi resume from suspend
    
    [ Upstream commit e614f341253f8541baf0230a8dc6a016b544b1e2 ]
    
    Without enabling keep-power-in-suspend, we can't wake the device
    up using WOL packet, and the log is flooded with these messages
    on resume:
    
    sunxi-mmc 1c10000.mmc: send stop command failed
    sunxi-mmc 1c10000.mmc: data error, sending stop command
    sunxi-mmc 1c10000.mmc: send stop command failed
    sunxi-mmc 1c10000.mmc: data error, sending stop command
    
    So to make the WiFi really a wakeup-source, we need to keep it powered
    during suspend.
    
    Fixes: 0e23372080def7 ("arm: dts: sun8i: Add the TBS A711 tablet devicetree")
    Signed-off-by: Ondrej Jirman <megous@megous.com>
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92df138f9b9d6f1d57e66d6c68a5f78989e36125
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Oct 23 12:28:09 2019 +0100

    clk: sunxi-ng: a80: fix the zero'ing of bits 16 and 18
    
    [ Upstream commit cdfc2e2086bf9c465f44e2db25561373b084a113 ]
    
    The zero'ing of bits 16 and 18 is incorrect. Currently the code
    is masking with the bitwise-and of BIT(16) & BIT(18) which is
    0, so the updated value for val is always zero. Fix this by bitwise
    and-ing value with the correct mask that will zero bits 16 and 18.
    
    Addresses-Coverity: (" Suspicious &= or |= constant expression")
    Fixes: b8eb71dcdd08 ("clk: sunxi-ng: Add A80 CCU")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 023407e6f73923b7d7482e427d4501f88f468c38
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Tue Oct 22 09:50:54 2019 -0700

    clk: sunxi: Fix operator precedence in sunxi_divs_clk_setup
    
    [ Upstream commit afdc74ed2d57e86c10b1d6831339770a802bab9a ]
    
    r375326 in Clang exposes an issue with operator precedence in
    sunxi_div_clk_setup:
    
    drivers/clk/sunxi/clk-sunxi.c:1083:30: warning: operator '?:' has lower
    precedence than '|'; '|' will be evaluated first
    [-Wbitwise-conditional-parentheses]
                                                     data->div[i].critical ?
                                                     ~~~~~~~~~~~~~~~~~~~~~ ^
    drivers/clk/sunxi/clk-sunxi.c:1083:30: note: place parentheses around
    the '|' expression to silence this warning
                                                     data->div[i].critical ?
                                                                           ^
                                                                          )
    drivers/clk/sunxi/clk-sunxi.c:1083:30: note: place parentheses around
    the '?:' expression to evaluate it first
                                                     data->div[i].critical ?
                                                                           ^
                                                     (
    1 warning generated.
    
    It appears that the intention was for ?: to be evaluated first so that
    CLK_IS_CRITICAL could be added to clkflags if the critical boolean was
    set; right now, | is being evaluated first. Add parentheses around the
    ?: block to have it be evaluated first.
    
    Fixes: 9919d44ff297 ("clk: sunxi: Use CLK_IS_CRITICAL flag for critical clks")
    Link: https://github.com/ClangBuiltLinux/linux/issues/745
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cedffa3dfe101260468a9408732014d43ec8e5d
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Fri Sep 20 17:39:06 2019 +0200

    clk: at91: avoid sleeping early
    
    [ Upstream commit 658fd65cf0b0d511de1718e48d9a28844c385ae0 ]
    
    It is not allowed to sleep to early in the boot process and this may lead
    to kernel issues if the bootloader didn't prepare the slow clock and main
    clock.
    
    This results in the following error and dump stack on the AriettaG25:
       bad: scheduling from the idle thread!
    
    Ensure it is possible to sleep, else simply have a delay.
    
    Reported-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lkml.kernel.org/r/20190920153906.20887-1-alexandre.belloni@bootlin.com
    Fixes: 80eded6ce8bb ("clk: at91: add slow clks driver")
    Tested-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33b121ca20e05002e6112509cd4946e7552895df
Author: Cheng-Yi Chiang <cychiang@chromium.org>
Date:   Mon Oct 28 17:52:29 2019 +0800

    ASoC: rockchip: rockchip_max98090: Enable SHDN to fix headset detection
    
    [ Upstream commit 07c1b73e2a027ea9a52677beeb6a943a3e357139 ]
    
    max98090 spec states that chip needs to be in turned-on state to supply
    mic bias. Enable SHDN dapm widget along with MICBIAS widget to
    actually turn on mic bias for proper headset button detection.
    This is similar to cht_ti_jack_event in
    sound/soc/intel/boards/cht_bsw_max98090_ti.c.
    
    Note that due to ts3a227e reports the jack event right away before the
    notifier is registered, if headset is plugged on boot, headset button
    will not get detected until headset is unplugged and plugged. This is
    still an issue to be fixed.
    
    Signed-off-by: Cheng-Yi Chiang <cychiang@chromium.org>
    Link: https://lore.kernel.org/r/20191028095229.99438-1-cychiang@chromium.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4bf2bbdc37c847bf2dfadcfcf2d3c489db5dc5f
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Mon Oct 28 13:52:07 2019 +0200

    ASoC: ti: sdma-pcm: Add back the flags parameter for non standard dma names
    
    [ Upstream commit dd7e8d903e1eef5a9234a2d69663dcbfeab79571 ]
    
    When non standard names are used it is possible that one of the directions
    are not provided, thus the flags needs to be present to tell the core that
    we have half duplex setup.
    
    Fixes: 642aafea8889 ("ASoC: ti: remove compat dma probing")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lore.kernel.org/r/20191028115207.5142-1-peter.ujfalusi@ti.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 621111112e6e21bcd7a6bee7cb86756c8c52da35
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Sun Oct 27 16:53:24 2019 -0500

    ASoC: SOF: ipc: Fix memory leak in sof_set_get_large_ctrl_data
    
    [ Upstream commit 45c1380358b12bf2d1db20a5874e9544f56b34ab ]
    
    In the implementation of sof_set_get_large_ctrl_data() there is a memory
    leak in case an error. Release partdata if sof_get_ctrl_copy_params()
    fails.
    
    Fixes: 54d198d5019d ("ASoC: SOF: Propagate sof_get_ctrl_copy_params() error properly")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Link: https://lore.kernel.org/r/20191027215330.12729-1-navid.emamdoost@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa6798dc1fc8900b2b18f4e029bd5ceee72aa8d0
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Oct 25 16:39:23 2019 +0800

    arm64: dts: imx8mm: fix compatible string for sdma
    
    [ Upstream commit e346ff93f02b1ba81e976d4e67ec56582dbdf7f1 ]
    
    SDMA in i.MX8MM should use same configuration as i.MX8MQ
    So need to change compatible string to be "fsl,imx8mq-sdma".
    
    Fixes: a05ea40eb384 ("arm64: dts: imx: Add i.mx8mm dtsi support")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3986fd164f5c75e6826a1984c2650d5ca0c8410b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Oct 22 20:57:06 2019 -0700

    reset: fix reset_control_ops kerneldoc comment
    
    [ Upstream commit f430c7ed8bc22992ed528b518da465b060b9223f ]
    
    Add a missing short description to the reset_control_ops documentation.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    [p.zabel@pengutronix.de: rebased and updated commit message]
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e00d5314faf401e54c2825b3a590daf600c5ea9
Author: Ben Dooks <ben.dooks@codethink.co.uk>
Date:   Tue Oct 15 15:09:09 2019 +0100

    soc: imx: gpc: fix initialiser format
    
    [ Upstream commit 96ed1044fa98ea9e164fc1e679cad61575bf4f32 ]
    
    Make the initialiers in imx_gpc_domains C99 format to fix the
    following sparse warnings:
    
    drivers/soc/imx/gpc.c:252:30: warning: obsolete array initializer, use C99 syntax
    drivers/soc/imx/gpc.c:258:29: warning: obsolete array initializer, use C99 syntax
    drivers/soc/imx/gpc.c:269:34: warning: obsolete array initializer, use C99 syntax
    drivers/soc/imx/gpc.c:278:30: warning: obsolete array initializer, use C99 syntax
    
    Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Fixes: b0682d485f12 ("soc: imx: gpc: use GPC_PGC_DOMAIN_* indexes")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46a19e3541702857c38296b42101c9dea36a7fd7
Author: Fabio Estevam <festevam@gmail.com>
Date:   Wed Oct 9 17:43:43 2019 -0300

    ARM: dts: imx6qdl-sabreauto: Fix storm of accelerometer interrupts
    
    [ Upstream commit 7e5d0bf6afcc7bd72f78e7f33570e2e0945624f0 ]
    
    Since commit a211b8c55f3c ("ARM: dts: imx6qdl-sabreauto: Add sensors")
    a storm of accelerometer interrupts is seen:
    
    [  114.211283] irq 260: nobody cared (try booting with the "irqpoll" option)
    [  114.218108] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.3.4 #1
    [  114.223960] Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
    [  114.230531] [<c0112858>] (unwind_backtrace) from [<c010cdc8>] (show_stack+0x10/0x14)
    [  114.238301] [<c010cdc8>] (show_stack) from [<c0c1aa1c>] (dump_stack+0xd8/0x110)
    [  114.245644] [<c0c1aa1c>] (dump_stack) from [<c0193594>] (__report_bad_irq+0x30/0xc0)
    [  114.253417] [<c0193594>] (__report_bad_irq) from [<c01933ac>] (note_interrupt+0x108/0x298)
    [  114.261707] [<c01933ac>] (note_interrupt) from [<c018ffe4>] (handle_irq_event_percpu+0x70/0x80)
    [  114.270433] [<c018ffe4>] (handle_irq_event_percpu) from [<c019002c>] (handle_irq_event+0x38/0x5c)
    [  114.279326] [<c019002c>] (handle_irq_event) from [<c019438c>] (handle_level_irq+0xc8/0x154)
    [  114.287701] [<c019438c>] (handle_level_irq) from [<c018eda0>] (generic_handle_irq+0x20/0x34)
    [  114.296166] [<c018eda0>] (generic_handle_irq) from [<c0534214>] (mxc_gpio_irq_handler+0x30/0xf0)
    [  114.304975] [<c0534214>] (mxc_gpio_irq_handler) from [<c0534334>] (mx3_gpio_irq_handler+0x60/0xb0)
    [  114.313955] [<c0534334>] (mx3_gpio_irq_handler) from [<c018eda0>] (generic_handle_irq+0x20/0x34)
    [  114.322762] [<c018eda0>] (generic_handle_irq) from [<c018f3ac>] (__handle_domain_irq+0x64/0xe0)
    [  114.331485] [<c018f3ac>] (__handle_domain_irq) from [<c05215a8>] (gic_handle_irq+0x4c/0xa8)
    [  114.339862] [<c05215a8>] (gic_handle_irq) from [<c0101a70>] (__irq_svc+0x70/0x98)
    [  114.347361] Exception stack(0xc1301ec0 to 0xc1301f08)
    [  114.352435] 1ec0: 00000001 00000006 00000000 c130c340 00000001 c130f688 9785636d c13ea2e8
    [  114.360635] 1ee0: 9784907d 0000001a eaf99d78 0000001a 00000000 c1301f10 c0182b00 c0878de4
    [  114.368830] 1f00: 20000013 ffffffff
    [  114.372349] [<c0101a70>] (__irq_svc) from [<c0878de4>] (cpuidle_enter_state+0x168/0x5f4)
    [  114.380464] [<c0878de4>] (cpuidle_enter_state) from [<c08792ac>] (cpuidle_enter+0x28/0x38)
    [  114.388751] [<c08792ac>] (cpuidle_enter) from [<c015ef9c>] (do_idle+0x224/0x2a8)
    [  114.396168] [<c015ef9c>] (do_idle) from [<c015f3b8>] (cpu_startup_entry+0x18/0x20)
    [  114.403765] [<c015f3b8>] (cpu_startup_entry) from [<c1200e54>] (start_kernel+0x43c/0x500)
    [  114.411958] handlers:
    [  114.414302] [<a01028b8>] irq_default_primary_handler threaded [<fd7a3b08>] mma8452_interrupt
    [  114.422974] Disabling IRQ #260
    
               CPU0       CPU1
    ....
    260:     100001          0  gpio-mxc  31 Level     mma8451
    
    The MMA8451 interrupt triggers as low level, so the GPIO6_IO31 pin
    needs to activate its pull up, otherwise it will stay always at low level
    generating multiple interrupts.
    
    The current device tree does not configure the IOMUX for this pin, so
    it uses whathever comes configured from the bootloader.
    
    The IOMUXC_SW_PAD_CTL_PAD_EIM_BCLK register value comes as 0x8000 from
    the bootloader, which has PKE bit cleared, hence disabling the
    pull-up.
    
    Instead of relying on a previous configuration from the bootloader,
    configure the GPIO6_IO31 pin with pull-up enabled in order to fix
    this problem.
    
    Fixes: a211b8c55f3c ("ARM: dts: imx6qdl-sabreauto: Add sensors")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Reviewed-By: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ebc2bb22d5a408dc2bec0a538b21e5d50a14d07
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Oct 24 16:34:41 2019 +0300

    pinctrl: cherryview: Allocate IRQ chip dynamic
    
    [ Upstream commit 67d33aecd030226f0a577eb683aaa6853ecf8f91 ]
    
    Keeping the IRQ chip definition static shares it with multiple instances
    of the GPIO chip in the system. This is bad and now we get this warning
    from GPIO library:
    
    "detected irqchip that is shared with multiple gpiochips: please fix the driver."
    
    Hence, move the IRQ chip definition from being driver static into the struct
    intel_pinctrl. So a unique IRQ chip is used for each GPIO chip instance.
    
    This patch is heavily based on the attachment to the bug by Christoph Marz.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=202543
    Fixes: 6e08d6bbebeb ("pinctrl: Add Intel Cherryview/Braswell pin controller support")
    Depends-on: 83b9dc11312f ("pinctrl: cherryview: Associate IRQ descriptors to irqdomain")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcbf7c2e1bb1d4e3bf01d84bb84a5ffc949b2c34
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Oct 25 11:02:01 2019 +0200

    clk: samsung: exynos5420: Preserve PLL configuration during suspend/resume
    
    [ Upstream commit e9323b664ce29547d996195e8a6129a351c39108 ]
    
    Properly save and restore all top PLL related configuration registers
    during suspend/resume cycle. So far driver only handled EPLL and RPLL
    clocks, all other were reset to default values after suspend/resume cycle.
    This caused for example lower G3D (MALI Panfrost) performance after system
    resume, even if performance governor has been selected.
    
    Reported-by: Reported-by: Marian Mihailescu <mihailescu2m@gmail.com>
    Fixes: 773424326b51 ("clk: samsung: exynos5420: add more registers to restore list")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e6d356ac7f882aac45f9f504d0837cf788e772e
Author: Yuantian Tang <andy.tang@nxp.com>
Date:   Thu Oct 10 16:33:34 2019 +0800

    arm64: dts: ls1028a: fix a compatible issue
    
    [ Upstream commit 7eb3894b2fac978f811684e3ccb3cb0ad7820bef ]
    
    The I2C multiplexer used on ls1028aqds is PCA9547, not PCA9847.
    If the wrong compatible was used, this chip will not be able to
    be probed correctly and hence fail to work.
    
    Signed-off-by: Yuantian Tang <andy.tang@nxp.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Fixes: 8897f3255c9c ("arm64: dts: Add support for NXP LS1028A SoC")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cded189f3c0c9a4001f1a41eba00692a7ac9d0fd
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Oct 23 14:46:49 2019 +0100

    ASoC: kirkwood: fix device remove ordering
    
    [ Upstream commit dc39596a906d5b604f4e64597b6e904fc14625e8 ]
    
    The devm conversion of kirkwood was incorrect; on removal, devm takes
    effect after the "remove" function has returned.  So, the effect of
    the conversion was to change the order during remove from:
    
      - snd_soc_unregister_component() (unpublishes interfaces)
      - clk_disable_unprepare()
      - cleanup resources
    
    After the conversion, this became:
    
      - clk_disable_unprepare() - while the device may still be active
      - snd_soc_unregister_component()
      - cleanup resources
    
    Hence, it introduces a bug, where the internal clock for the device
    may be shut down before the device itself has been shut down.  It is
    known that Marvell SoCs, including Dove, locks up if registers for a
    peripheral that has its clocks disabled are accessed.
    
    Fixes: f98fc0f8154e ("ASoC: kirkwood: replace platform to component")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/E1iNGyP-0004oN-BA@rmk-PC.armlinux.org.uk
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit add67381e925410beb0c9b055e11c5e7e8ad38c1
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Oct 23 14:46:44 2019 +0100

    ASoC: kirkwood: fix external clock probe defer
    
    [ Upstream commit 4523817d51bc3b2ef38da768d004fda2c8bc41de ]
    
    When our call to get the external clock fails, we forget to clean up
    the enabled internal clock correctly.  Enable the clock after we have
    obtained all our resources.
    
    Fixes: 84aac6c79bfd ("ASoC: kirkwood: fix loss of external clock at probe time")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/E1iNGyK-0004oF-6A@rmk-PC.armlinux.org.uk
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit face7380c98f8796b2dfab10d7bdfbba3cb76585
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Oct 23 09:41:18 2019 +0200

    clk: samsung: exynos542x: Move G3D subsystem clocks to its sub-CMU
    
    [ Upstream commit c9f7567aff31348a3dcf54845f7e389f5df0c0c1 ]
    
    G3D clocks require special handling of their parent bus clock during power
    domain on/off sequences. Those clocks were not initially added to the
    sub-CMU handler, because that time there was no open-source driver for the
    G3D (MALI Panfrost) hardware module and it was not possible to test it.
    
    This patch fixes this issue. Parent clock for G3D hardware block is now
    properly preserved during G3D power domain on/off sequence. This restores
    proper MALI Panfrost performance broken by commit 8686764fc071
    ("ARM: dts: exynos: Add G3D power domain to Exynos542x").
    
    Reported-by: Marian Mihailescu <mihailescu2m@gmail.com>
    Fixes: b06a532bf1fa ("clk: samsung: Add Exynos5 sub-CMU clock driver")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marian Mihailescu <mihailescu2m@gmail.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8edc9bf91f1415092295d1f0b9d494933d12f0fe
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Oct 2 10:53:09 2019 +0200

    clk: samsung: exynos5433: Fix error paths
    
    [ Upstream commit faac3604d05e8015567124e5ee79edc3f1568a89 ]
    
    Add checking the value returned by samsung_clk_alloc_reg_dump() and
    devm_kcalloc(). While fixing this, also release all gathered clocks.
    
    Fixes: 523d3de41f02 ("clk: samsung: exynos5433: Add support for runtime PM")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    [s.nawrocki: squashed patch from K. Kozlowski adding missing slab.h header]
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69821d9df01939cc20f4527ffdd7ee2e26943089
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Tue Oct 22 14:06:23 2019 +0530

    reset: Fix memory leak in reset_control_array_put()
    
    [ Upstream commit 532f9cd6ee994ed10403e856ca27501428048597 ]
    
    Memory allocated for 'struct reset_control_array' in
    of_reset_control_array_get() is never freed in
    reset_control_array_put() resulting in kmemleak showing
    the following backtrace.
    
      backtrace:
        [<00000000c5f17595>] __kmalloc+0x1b0/0x2b0
        [<00000000bd499e13>] of_reset_control_array_get+0xa4/0x180
        [<000000004cc02754>] 0xffff800008c669e4
        [<0000000050a83b24>] platform_drv_probe+0x50/0xa0
        [<00000000d3a0b0bc>] really_probe+0x108/0x348
        [<000000005aa458ac>] driver_probe_device+0x58/0x100
        [<000000008853626c>] device_driver_attach+0x6c/0x90
        [<0000000085308d19>] __driver_attach+0x84/0xc8
        [<00000000080d35f2>] bus_for_each_dev+0x74/0xc8
        [<00000000dd7f015b>] driver_attach+0x20/0x28
        [<00000000923ba6e6>] bus_add_driver+0x148/0x1f0
        [<0000000061473b66>] driver_register+0x60/0x110
        [<00000000c5bec167>] __platform_driver_register+0x40/0x48
        [<000000007c764b4f>] 0xffff800008c6c020
        [<0000000047ec2e8c>] do_one_initcall+0x5c/0x1b0
        [<0000000093d4b50d>] do_init_module+0x54/0x1d0
    
    Fixes: 17c82e206d2a ("reset: Add APIs to manage array of resets")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a271be45b0f713b19998492a33228d905bab247f
Author: Xiaojun Sang <xsang@codeaurora.org>
Date:   Mon Oct 21 10:54:32 2019 +0100

    ASoC: compress: fix unsigned integer overflow check
    
    [ Upstream commit d3645b055399538415586ebaacaedebc1e5899b0 ]
    
    Parameter fragments and fragment_size are type of u32. U32_MAX is
    the correct check.
    
    Signed-off-by: Xiaojun Sang <xsang@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Link: https://lore.kernel.org/r/20191021095432.5639-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24a68faaaa7809022532a1467ad34b23e6002bb9
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sun Oct 20 17:30:06 2019 +0200

    ASoC: msm8916-wcd-analog: Fix RX1 selection in RDAC2 MUX
    
    [ Upstream commit 9110d1b0e229cebb1ffce0c04db2b22beffd513d ]
    
    According to the PM8916 Hardware Register Description,
    CDC_D_CDC_CONN_HPHR_DAC_CTL has only a single bit (RX_SEL)
    to switch between RX1 (0) and RX2 (1). It is not possible to
    disable it entirely to achieve the "ZERO" state.
    
    However, at the moment the "RDAC2 MUX" mixer defines three possible
    values ("ZERO", "RX2" and "RX1"). Setting the mixer to "ZERO"
    actually configures it to RX1. Setting the mixer to "RX1" has
    (seemingly) no effect.
    
    Remove "ZERO" and replace it with "RX1" to fix this.
    
    Fixes: 585e881e5b9e ("ASoC: codecs: Add msm8916-wcd analog codec")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Acked-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20191020153007.206070-1-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d76b88b01c34fa4f812b097eefb3f59b6ea20dce
Author: Bard Liao <yung-chuan.liao@linux.intel.com>
Date:   Mon Sep 16 14:23:43 2019 -0500

    soundwire: intel: fix intel_register_dai PDI offsets and numbers
    
    [ Upstream commit cf9249626f72878b6d205a4965093cba5cce98df ]
    
    There are two issues, likely copy/paste:
    
    1. Use cdns->pcm.num_in instead of stream_num_in for consistency with
    the rest of the code. This was not detected earlier since platforms did
    not have input-only PDIs.
    
    2. use the correct offset for bi-dir PDM, based on IN and OUT
    PDIs. Again this was not detected since PDM was not supported earlier.
    
    Reported-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20190916192348.467-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be41821915c2464e0110eda55d012a9beef28985
Author: Fabien Parent <fparent@baylibre.com>
Date:   Thu Sep 19 21:13:15 2019 +0200

    clocksource/drivers/mediatek: Fix error handling
    
    [ Upstream commit 41d49e7939de5ec532d86494185b2ca2e99c848a ]
    
    When timer_of_init fails, it cleans up after itself by undoing
    everything it did during the initialization function.
    
    mtk_syst_init and mtk_gpt_init both call timer_of_cleanup if
    timer_of_init fails. timer_of_cleanup try to release the resource
    taken.  Since these resources have already been cleaned up by
    timer_of_init, we end up getting a few warnings printed:
    
    [    0.001935] WARNING: CPU: 0 PID: 0 at __clk_put+0xe8/0x128
    [    0.002650] Modules linked in:
    [    0.003058] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.19.67+ #1
    [    0.003852] Hardware name: MediaTek MT8183 (DT)
    [    0.004446] pstate: 20400085 (nzCv daIf +PAN -UAO)
    [    0.005073] pc : __clk_put+0xe8/0x128
    [    0.005555] lr : clk_put+0xc/0x14
    [    0.005988] sp : ffffff80090b3ea0
    [    0.006422] x29: ffffff80090b3ea0 x28: 0000000040e20018
    [    0.007121] x27: ffffffc07bfff780 x26: 0000000000000001
    [    0.007819] x25: ffffff80090bda80 x24: ffffff8008ec5828
    [    0.008517] x23: ffffff80090bd000 x22: ffffff8008d8b2e8
    [    0.009216] x21: 0000000000000001 x20: fffffffffffffdfb
    [    0.009914] x19: ffffff8009166180 x18: 00000000002bffa8
    [    0.010612] x17: ffffffc012996980 x16: 0000000000000000
    [    0.011311] x15: ffffffbf004a6800 x14: 3536343038393334
    [    0.012009] x13: 2079726576652073 x12: 7eb9c62c5c38f100
    [    0.012707] x11: ffffff80090b3ba0 x10: ffffff80090b3ba0
    [    0.013405] x9 : 0000000000000004 x8 : 0000000000000040
    [    0.014103] x7 : ffffffc079400270 x6 : 0000000000000000
    [    0.014801] x5 : ffffffc079400248 x4 : 0000000000000000
    [    0.015499] x3 : 0000000000000000 x2 : 0000000000000000
    [    0.016197] x1 : ffffff80091661c0 x0 : fffffffffffffdfb
    [    0.016896] Call trace:
    [    0.017218]  __clk_put+0xe8/0x128
    [    0.017654]  clk_put+0xc/0x14
    [    0.018048]  timer_of_cleanup+0x60/0x7c
    [    0.018551]  mtk_syst_init+0x8c/0x9c
    [    0.019020]  timer_probe+0x6c/0xe0
    [    0.019469]  time_init+0x14/0x44
    [    0.019893]  start_kernel+0x2d0/0x46c
    [    0.020378] ---[ end trace 8c1efabea1267649 ]---
    [    0.020982] ------------[ cut here ]------------
    [    0.021586] Trying to vfree() nonexistent vm area ((____ptrval____))
    [    0.022427] WARNING: CPU: 0 PID: 0 at __vunmap+0xd0/0xd8
    [    0.023119] Modules linked in:
    [    0.023524] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W         4.19.67+ #1
    [    0.024498] Hardware name: MediaTek MT8183 (DT)
    [    0.025091] pstate: 60400085 (nZCv daIf +PAN -UAO)
    [    0.025718] pc : __vunmap+0xd0/0xd8
    [    0.026176] lr : __vunmap+0xd0/0xd8
    [    0.026632] sp : ffffff80090b3e90
    [    0.027066] x29: ffffff80090b3e90 x28: 0000000040e20018
    [    0.027764] x27: ffffffc07bfff780 x26: 0000000000000001
    [    0.028462] x25: ffffff80090bda80 x24: ffffff8008ec5828
    [    0.029160] x23: ffffff80090bd000 x22: ffffff8008d8b2e8
    [    0.029858] x21: 0000000000000000 x20: 0000000000000000
    [    0.030556] x19: ffffff800800d000 x18: 00000000002bffa8
    [    0.031254] x17: 0000000000000000 x16: 0000000000000000
    [    0.031952] x15: ffffffbf004a6800 x14: 3536343038393334
    [    0.032651] x13: 2079726576652073 x12: 7eb9c62c5c38f100
    [    0.033349] x11: ffffff80090b3b40 x10: ffffff80090b3b40
    [    0.034047] x9 : 0000000000000005 x8 : 5f5f6c6176727470
    [    0.034745] x7 : 5f5f5f5f28282061 x6 : ffffff80091c86ef
    [    0.035443] x5 : ffffff800852b690 x4 : 0000000000000000
    [    0.036141] x3 : 0000000000000002 x2 : 0000000000000002
    [    0.036839] x1 : 7eb9c62c5c38f100 x0 : 7eb9c62c5c38f100
    [    0.037536] Call trace:
    [    0.037859]  __vunmap+0xd0/0xd8
    [    0.038271]  vunmap+0x24/0x30
    [    0.038664]  __iounmap+0x2c/0x34
    [    0.039088]  timer_of_cleanup+0x70/0x7c
    [    0.039591]  mtk_syst_init+0x8c/0x9c
    [    0.040060]  timer_probe+0x6c/0xe0
    [    0.040507]  time_init+0x14/0x44
    [    0.040932]  start_kernel+0x2d0/0x46c
    
    This commit remove the calls to timer_of_cleanup when timer_of_init
    fails since it is unnecessary and actually cause warnings to be printed.
    
    Fixes: a0858f937960 ("mediatek: Convert the driver to timer-of")
    Signed-off-by: Fabien Parent <fparent@baylibre.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/linux-arm-kernel/20190919191315.25190-1-fparent@baylibre.com/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5da2fb1c1d3fc468119e8520eeebab3589ec4b02
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Sep 19 15:28:58 2019 +0300

    thunderbolt: Fix lockdep circular locking depedency warning
    
    [ Upstream commit 6f6709734274aef75058356e029d5e8f86d0d53b ]
    
    When lockdep is enabled, plugging Thunderbolt dock on Dominik's laptop
    triggers following splat:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.3.0-rc6+ #1 Tainted: G                T
      ------------------------------------------------------
      pool-/usr/lib/b/1258 is trying to acquire lock:
      000000005ab0ad43 (pci_rescan_remove_lock){+.+.}, at: authorized_store+0xe8/0x210
    
      but task is already holding lock:
      00000000bfb796b5 (&tb->lock){+.+.}, at: authorized_store+0x7c/0x210
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #1 (&tb->lock){+.+.}:
             __mutex_lock+0xac/0x9a0
             tb_domain_add+0x2d/0x130
             nhi_probe+0x1dd/0x330
             pci_device_probe+0xd2/0x150
             really_probe+0xee/0x280
             driver_probe_device+0x50/0xc0
             bus_for_each_drv+0x84/0xd0
             __device_attach+0xe4/0x150
             pci_bus_add_device+0x4e/0x70
             pci_bus_add_devices+0x2e/0x66
             pci_bus_add_devices+0x59/0x66
             pci_bus_add_devices+0x59/0x66
             enable_slot+0x344/0x450
             acpiphp_check_bridge.part.0+0x119/0x150
             acpiphp_hotplug_notify+0xaa/0x140
             acpi_device_hotplug+0xa2/0x3f0
             acpi_hotplug_work_fn+0x1a/0x30
             process_one_work+0x234/0x580
             worker_thread+0x50/0x3b0
             kthread+0x10a/0x140
             ret_from_fork+0x3a/0x50
    
      -> #0 (pci_rescan_remove_lock){+.+.}:
             __lock_acquire+0xe54/0x1ac0
             lock_acquire+0xb8/0x1b0
             __mutex_lock+0xac/0x9a0
             authorized_store+0xe8/0x210
             kernfs_fop_write+0x125/0x1b0
             vfs_write+0xc2/0x1d0
             ksys_write+0x6c/0xf0
             do_syscall_64+0x50/0x180
             entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
      other info that might help us debug this:
       Possible unsafe locking scenario:
             CPU0                    CPU1
             ----                    ----
        lock(&tb->lock);
                                     lock(pci_rescan_remove_lock);
                                     lock(&tb->lock);
        lock(pci_rescan_remove_lock);
    
       *** DEADLOCK ***
      5 locks held by pool-/usr/lib/b/1258:
       #0: 000000003df1a1ad (&f->f_pos_lock){+.+.}, at: __fdget_pos+0x4d/0x60
       #1: 0000000095a40b02 (sb_writers#6){.+.+}, at: vfs_write+0x185/0x1d0
       #2: 0000000017a7d714 (&of->mutex){+.+.}, at: kernfs_fop_write+0xf2/0x1b0
       #3: 000000004f262981 (kn->count#208){.+.+}, at: kernfs_fop_write+0xfa/0x1b0
       #4: 00000000bfb796b5 (&tb->lock){+.+.}, at: authorized_store+0x7c/0x210
    
      stack backtrace:
      CPU: 0 PID: 1258 Comm: pool-/usr/lib/b Tainted: G                T 5.3.0-rc6+ #1
    
    On an system using ACPI hotplug the host router gets hotplugged first and then
    the firmware starts sending notifications about connected devices so the above
    scenario should not happen in reality. However, after taking a second
    look at commit a03e828915c0 ("thunderbolt: Serialize PCIe tunnel
    creation with PCI rescan") that introduced the locking, I don't think it
    is actually correct. It may have cured the symptom but probably the real
    root cause was somewhere closer to PCI stack and possibly is already
    fixed with recent kernels. I also tried to reproduce the original issue
    with the commit reverted but could not.
    
    So to keep lockdep happy and the code bit less complex drop calls to
    pci_lock_rescan_remove()/pci_unlock_rescan_remove() in
    tb_switch_set_authorized() effectively reverting a03e828915c0.
    
    Link: https://lkml.org/lkml/2019/8/30/513
    Fixes: a03e828915c0 ("thunderbolt: Serialize PCIe tunnel creation with PCI rescan")
    Reported-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ffdb0882baf04604dc3b6b83cbd0f95ddf20da7
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Sep 19 14:55:23 2019 +0300

    thunderbolt: Read DP IN adapter first two dwords in one go
    
    [ Upstream commit fd5c46b754d4799afda8dcdd6851e0390aa4961a ]
    
    When we discover existing DP tunnels the code checks whether DP IN
    adapter port is enabled by calling tb_dp_port_is_enabled() before it
    continues the discovery process. On Light Ridge (gen 1) controller
    reading only the first dword of the DP IN config space causes subsequent
    access to the same DP IN port path config space to fail or return
    invalid data as can be seen in the below splat:
    
      thunderbolt 0000:07:00.0: CFG_ERROR(0:d): Invalid config space or offset
      Call Trace:
       tb_cfg_read+0xb9/0xd0
       __tb_path_deactivate_hop+0x98/0x210
       tb_path_activate+0x228/0x7d0
       tb_tunnel_restart+0x95/0x200
       tb_handle_hotplug+0x30e/0x630
       process_one_work+0x1b4/0x340
       worker_thread+0x44/0x3d0
       kthread+0xeb/0x120
       ? process_one_work+0x340/0x340
       ? kthread_park+0xa0/0xa0
       ret_from_fork+0x1f/0x30
    
    If both DP In adapter config dwords are read in one go the issue does
    not reproduce. This is likely firmware bug but we can work it around by
    always reading the two dwords in one go. There should be no harm for
    other controllers either so can do it unconditionally.
    
    Link: https://lkml.org/lkml/2019/8/28/160
    Reported-by: Brad Campbell <lists2009@fnarfbargle.com>
    Tested-by: Brad Campbell <lists2009@fnarfbargle.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57ba0c13c291e4233d57908c4bf4ccb4fc81bbaf
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Tue Sep 24 10:39:09 2019 +0000

    clk: at91: sam9x60: fix programmable clock
    
    [ Upstream commit 2200ab6a7403f4fcd052c55ca328fc942f9392b6 ]
    
    The prescaler mask for sam9x60 must be 0xff (8 bits).
    Being set to 0, means that we cannot set any prescaler, thus the
    programmable clocks do not work (except the case with prescaler 0)
    Set the mask accordingly in layout struct.
    
    Fixes: 01e2113de9a5 ("clk: at91: add sam9x60 pmc driver")
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Link: https://lkml.kernel.org/r/1569321191-27606-1-git-send-email-eugen.hristev@microchip.com
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49c07fcd1ce7b4016995046420258725262f052c
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Sep 21 17:04:11 2019 +0200

    clk: meson: gxbb: let sar_adc_clk_div set the parent clock rate
    
    [ Upstream commit 44b09b11b813b8550e6b976ea51593bc23bba8d1 ]
    
    The meson-saradc driver manually sets the input clock for
    sar_adc_clk_sel. Update the GXBB clock driver (which is used on GXBB,
    GXL and GXM) so the rate settings on sar_adc_clk_div are propagated up
    to sar_adc_clk_sel which will let the common clock framework select the
    best matching parent clock if we want that.
    
    This makes sar_adc_clk_div consistent with the axg-aoclk and g12a-aoclk
    drivers, which both also specify CLK_SET_RATE_PARENT.
    
    Fixes: 33d0fcdfe0e870 ("clk: gxbb: add the SAR ADC clocks and expose them")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f2d6c13eeba9b231c946958e3352b8466c72b82
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Mon Jul 1 17:03:29 2019 -0400

    XArray: Fix xas_next() with a single entry at 0
    
    [ Upstream commit 91abab83839aa2eba073e4a63c729832fdb27ea1 ]
    
    If there is only a single entry at 0, the first time we call xas_next(),
    we return the entry.  Unfortunately, all subsequent times we call
    xas_next(), we also return the entry at 0 instead of noticing that the
    xa_index is now greater than zero.  This broke find_get_pages_contig().
    
    Fixes: 64d3e9a9e0cc ("xarray: Step through an XArray")
    Reported-by: Kent Overstreet <kent.overstreet@gmail.com>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39f13d4e91c7274fe34b9b9fde7077eb40ad8c7a
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Nov 25 17:04:13 2019 -0700

    net: disallow ancillary data for __sys_{send,recv}msg_file()
    
    [ Upstream commit d69e07793f891524c6bbf1e75b9ae69db4450953 ]
    
    Only io_uring uses (and added) these, and we want to disallow the
    use of sendmsg/recvmsg for anything but regular data transfers.
    Use the newly added prep helper to split the msghdr copy out from
    the core function, to check for msg_control and msg_controllen
    settings. If either is set, we return -EINVAL.
    
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 115107fd0959052a1043718d4ec9b6dedcb1904b
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Nov 25 14:27:34 2019 -0700

    net: separate out the msghdr copy from ___sys_{send,recv}msg()
    
    [ Upstream commit 4257c8ca13b084550574b8c9a667d9c90ff746eb ]
    
    This is in preparation for enabling the io_uring helpers for sendmsg
    and recvmsg to first copy the header for validation before continuing
    with the operation.
    
    There should be no functional changes in this patch.
    
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad700a7eb17dc3fc1f96152b4291532e5ba5a7ad
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Nov 25 08:52:30 2019 -0700

    io_uring: async workers should inherit the user creds
    
    [ Upstream commit 181e448d8709e517c9c7b523fcd209f24eb38ca7 ]
    
    If we don't inherit the original task creds, then we can confuse users
    like fuse that pass creds in the request header. See link below on
    identical aio issue.
    
    Link: https://lore.kernel.org/linux-fsdevel/26f0d78e-99ca-2f1b-78b9-433088053a61@scylladb.com/T/#u
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
