commit 84d5d3c9d3fbcee10bc16d3a3316af9a924c91c6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Mar 9 11:09:39 2021 +0100

    Linux 5.4.104
    
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkci@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210308122714.391917404@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d859388ea25a32ec1bbe60a0e40fd60c9a17353b
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sun Feb 14 17:38:30 2021 +0100

    r8169: fix resuming from suspend on RTL8105e if machine runs on battery
    
    commit d2a04370817fc7b0172dad2ef2decf907e1a304e upstream.
    
    Armin reported that after referenced commit his RTL8105e is dead when
    resuming from suspend and machine runs on battery. This patch has been
    confirmed to fix the issue.
    
    Fixes: e80bd76fbf56 ("r8169: work around power-saving bug on some chip versions")
    Reported-by: Armin Wolf <W_Armin@gmx.de>
    Tested-by: Armin Wolf <W_Armin@gmx.de>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fba84f3c4913a8065cf51f909c1cc09fb2c6c71
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 3 13:59:12 2021 +0300

    rsxx: Return -EFAULT if copy_to_user() fails
    
    [ Upstream commit 77516d25f54912a7baedeeac1b1b828b6f285152 ]
    
    The copy_to_user() function returns the number of bytes remaining but
    we want to return -EFAULT to the user if it can't complete the copy.
    The "st" variable only holds zero on success or negative error codes on
    failure so the type should be int.
    
    Fixes: 36f988e978f8 ("rsxx: Adding in debugfs entries.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77a81b10f894f5e41f519ed1721c381ee24e3507
Author: Chen Jun <chenjun102@huawei.com>
Date:   Mon Feb 22 13:58:40 2021 +0000

    ftrace: Have recordmcount use w8 to read relp->r_info in arm64_is_fake_mcount
    
    [ Upstream commit 999340d51174ce4141dd723105d4cef872b13ee9 ]
    
    On little endian system, Use aarch64_be(gcc v7.3) downloaded from
    linaro.org to build image with CONFIG_CPU_BIG_ENDIAN = y,
    CONFIG_FTRACE = y, CONFIG_DYNAMIC_FTRACE = y.
    
    gcc will create symbols of _mcount but recordmcount can not create
    mcount_loc for *.o.
    aarch64_be-linux-gnu-objdump -r fs/namei.o | grep mcount
    00000000000000d0 R_AARCH64_CALL26  _mcount
    ...
    0000000000007190 R_AARCH64_CALL26  _mcount
    
    The reason is than funciton arm64_is_fake_mcount can not work correctly.
    A symbol of _mcount in *.o compiled with big endian compiler likes:
    00 00 00 2d 00 00 01 1b
    w(rp->r_info) will return 0x2d instead of 0x011b. Because w() takes
    uint32_t as parameter, which truncates rp->r_info.
    
    Use w8() instead w() to read relp->r_info
    
    Link: https://lkml.kernel.org/r/20210222135840.56250-1-chenjun102@huawei.com
    
    Fixes: ea0eada45632 ("recordmcount: only record relocation of type R_AARCH64_CALL26 on arm64.")
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Chen Jun <chenjun102@huawei.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a20e5782d2dff78683f5871cbae55f67451290d
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Mon Mar 1 18:01:46 2021 -0600

    ALSA: hda: intel-nhlt: verify config type
    
    [ Upstream commit a864e8f159b13babf552aff14a5fbe11abc017e4 ]
    
    Multiple bug reports report issues with the SOF and SST drivers when
    dealing with single microphone cases.
    
    We currently read the DMIC array information unconditionally but we
    don't check that the configuration type is actually a mic array.
    
    When the DMIC link does not rely on a mic array configuration, the
    recommendation is to check the format information to infer the maximum
    number of channels, and map this to the number of microphones.
    
    This leaves a potential for a mismatch between actual microphones
    available in hardware and what the ACPI table contains, but we have no
    other source of information.
    
    Note that single microphone configurations can alternatively be
    handled with a 'mic array' configuration along with a 'vendor-defined'
    geometry.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201251
    BugLink: https://github.com/thesofproject/linux/issues/2725
    Fixes: 7a33ea70e1868 ('ALSA: hda: intel-nhlt: handle NHLT VENDOR_DEFINED DMIC geometry')
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@intel.com>
    Reviewed-by: Rander Wang <rander.wang@intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20210302000146.1177770-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86b3b62b81c569f4d2bf8363a2db894c5e57ed99
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Feb 22 20:23:43 2021 +0800

    IB/mlx5: Add missing error code
    
    [ Upstream commit 3a9b3d4536e0c25bd3906a28c1f584177e49dd0f ]
    
    Set err to -ENOMEM if kzalloc fails instead of 0.
    
    Fixes: 759738537142 ("IB/mlx5: Enable subscription for device events over DEVX")
    Link: https://lore.kernel.org/r/20210222122343.19720-1-yuehaibing@huawei.com
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 809ef2660c1be0b581d14d1aa6cf194a4ce709f0
Author: Julian Braha <julianbraha@gmail.com>
Date:   Fri Feb 19 18:32:26 2021 -0500

    RDMA/rxe: Fix missing kconfig dependency on CRYPTO
    
    [ Upstream commit 475f23b8c66d2892ad6acbf90ed757cafab13de7 ]
    
    When RDMA_RXE is enabled and CRYPTO is disabled, Kbuild gives the
    following warning:
    
     WARNING: unmet direct dependencies detected for CRYPTO_CRC32
       Depends on [n]: CRYPTO [=n]
       Selected by [y]:
       - RDMA_RXE [=y] && (INFINIBAND_USER_ACCESS [=y] || !INFINIBAND_USER_ACCESS [=y]) && INET [=y] && PCI [=y] && INFINIBAND [=y] && INFINIBAND_VIRT_DMA [=y]
    
    This is because RDMA_RXE selects CRYPTO_CRC32, without depending on or
    selecting CRYPTO, despite that config option being subordinate to CRYPTO.
    
    Fixes: cee2688e3cd6 ("IB/rxe: Offload CRC calculation when possible")
    Signed-off-by: Julian Braha <julianbraha@gmail.com>
    Link: https://lore.kernel.org/r/21525878.NYvzQUHefP@ubuntu-mate-laptop
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26a1af33c9cdd6c70c6e2e211e6778ead65d7918
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Feb 27 00:15:27 2021 +0000

    ALSA: ctxfi: cthw20k2: fix mask on conf to allow 4 bits
    
    [ Upstream commit 26a9630c72ebac7c564db305a6aee54a8edde70e ]
    
    Currently the mask operation on variable conf is just 3 bits so
    the switch statement case value of 8 is unreachable dead code.
    The function daio_mgr_dao_init can be passed a 4 bit value,
    function dao_rsc_init calls it with conf set to:
    
         conf = (desc->msr & 0x7) | (desc->passthru << 3);
    
    so clearly when desc->passthru is set to 1 then conf can be
    at least 8.
    
    Fix this by changing the mask to 0xf.
    
    Fixes: 8cc72361481f ("ALSA: SB X-Fi driver merge")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210227001527.1077484-1-colin.king@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6827415290abaebdb1313894b2262bbaad0496cd
Author: Antonio Borneo <borneo.antonio@gmail.com>
Date:   Thu Jun 18 02:08:44 2020 +0200

    usbip: tools: fix build error for multiple definition
    
    commit d5efc2e6b98fe661dbd8dd0d5d5bfb961728e57a upstream.
    
    With GCC 10, building usbip triggers error for multiple definition
    of 'udev_context', in:
    - libsrc/vhci_driver.c:18 and
    - libsrc/usbip_host_common.c:27.
    
    Declare as extern the definition in libsrc/usbip_host_common.c.
    
    Signed-off-by: Antonio Borneo <borneo.antonio@gmail.com>
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20200618000844.1048309-1-borneo.antonio@gmail.com
    Cc: Petr Å tetiar <ynezz@true.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 078170924d84fe8f695eece167541f642da629c5
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Jan 13 10:11:35 2021 +0100

    crypto - shash: reduce minimum alignment of shash_desc structure
    
    commit 660d2062190db131d2feaf19914e90f868fe285c upstream.
    
    Unlike many other structure types defined in the crypto API, the
    'shash_desc' structure is permitted to live on the stack, which
    implies its contents may not be accessed by DMA masters. (This is
    due to the fact that the stack may be located in the vmalloc area,
    which requires a different virtual-to-physical translation than the
    one implemented by the DMA subsystem)
    
    Our definition of CRYPTO_MINALIGN_ATTR is based on ARCH_KMALLOC_MINALIGN,
    which may take DMA constraints into account on architectures that support
    non-cache coherent DMA such as ARM and arm64. In this case, the value is
    chosen to reflect the largest cacheline size in the system, in order to
    ensure that explicit cache maintenance as required by non-coherent DMA
    masters does not affect adjacent, unrelated slab allocations. On arm64,
    this value is currently set at 128 bytes.
    
    This means that applying CRYPTO_MINALIGN_ATTR to struct shash_desc is both
    unnecessary (as it is never used for DMA), and undesirable, given that it
    wastes stack space (on arm64, performing the alignment costs 112 bytes in
    the worst case, and the hole between the 'tfm' and '__ctx' members takes
    up another 120 bytes, resulting in an increased stack footprint of up to
    232 bytes.) So instead, let's switch to the minimum SLAB alignment, which
    does not take DMA constraints into account.
    
    Note that this is a no-op for x86.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f8884d044809086b55bbc598b6ad324d4330237
Author: Timothy E Baldwin <T.E.Baldwin99@members.leeds.ac.uk>
Date:   Sat Jan 16 15:18:54 2021 +0000

    arm64: ptrace: Fix seccomp of traced syscall -1 (NO_SYSCALL)
    
    commit df84fe94708985cdfb78a83148322bcd0a699472 upstream.
    
    Since commit f086f67485c5 ("arm64: ptrace: add support for syscall
    emulation"), if system call number -1 is called and the process is being
    traced with PTRACE_SYSCALL, for example by strace, the seccomp check is
    skipped and -ENOSYS is returned unconditionally (unless altered by the
    tracer) rather than carrying out action specified in the seccomp filter.
    
    The consequence of this is that it is not possible to reliably strace
    a seccomp based implementation of a foreign system call interface in
    which r7/x8 is permitted to be -1 on entry to a system call.
    
    Also trace_sys_enter and audit_syscall_entry are skipped if a system
    call is skipped.
    
    Fix by removing the in_syscall(regs) check restoring the previous
    behaviour which is like AArch32, x86 (which uses generic code) and
    everything else.
    
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Catalin Marinas<catalin.marinas@arm.com>
    Cc: <stable@vger.kernel.org>
    Fixes: f086f67485c5 ("arm64: ptrace: add support for syscall emulation")
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Timothy E Baldwin <T.E.Baldwin99@members.leeds.ac.uk>
    Link: https://lore.kernel.org/r/90edd33b-6353-1228-791f-0336d94d5f8c@majoroak.me.uk
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e15b43fdaf3fe1882ad84397208cb9b6817a18f
Author: Kevin Wang <kevin1.wang@amd.com>
Date:   Tue Mar 2 15:54:00 2021 +0800

    drm/amdgpu: fix parameter error of RREG32_PCIE() in amdgpu_regs_pcie
    
    commit 1aa46901ee51c1c5779b3b239ea0374a50c6d9ff upstream.
    
    the register offset isn't needed division by 4 to pass RREG32_PCIE()
    
    Signed-off-by: Kevin Wang <kevin1.wang@amd.com>
    Reviewed-by: Lijo Lazar <lijo.lazar@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b367201430dd6f02202b217d9768ca329dbe7bc9
Author: Milan Broz <gmazyland@gmail.com>
Date:   Tue Feb 23 21:21:21 2021 +0100

    dm verity: fix FEC for RS roots unaligned to block size
    
    commit df7b59ba9245c4a3115ebaa905e3e5719a3810da upstream.
    
    Optional Forward Error Correction (FEC) code in dm-verity uses
    Reed-Solomon code and should support roots from 2 to 24.
    
    The error correction parity bytes (of roots lengths per RS block) are
    stored on a separate device in sequence without any padding.
    
    Currently, to access FEC device, the dm-verity-fec code uses dm-bufio
    client with block size set to verity data block (usually 4096 or 512
    bytes).
    
    Because this block size is not divisible by some (most!) of the roots
    supported lengths, data repair cannot work for partially stored parity
    bytes.
    
    This fix changes FEC device dm-bufio block size to "roots << SECTOR_SHIFT"
    where we can be sure that the full parity data is always available.
    (There cannot be partial FEC blocks because parity must cover whole
    sectors.)
    
    Because the optional FEC starting offset could be unaligned to this
    new block size, we have to use dm_bufio_set_sector_offset() to
    configure it.
    
    The problem is easily reproduced using veritysetup, e.g. for roots=13:
    
      # create verity device with RS FEC
      dd if=/dev/urandom of=data.img bs=4096 count=8 status=none
      veritysetup format data.img hash.img --fec-device=fec.img --fec-roots=13 | awk '/^Root hash/{ print $3 }' >roothash
    
      # create an erasure that should be always repairable with this roots setting
      dd if=/dev/zero of=data.img conv=notrunc bs=1 count=8 seek=4088 status=none
    
      # try to read it through dm-verity
      veritysetup open data.img test hash.img --fec-device=fec.img --fec-roots=13 $(cat roothash)
      dd if=/dev/mapper/test of=/dev/null bs=4096 status=noxfer
      # wait for possible recursive recovery in kernel
      udevadm settle
      veritysetup close test
    
    With this fix, errors are properly repaired.
      device-mapper: verity-fec: 7:1: FEC 0: corrected 8 errors
      ...
    
    Without it, FEC code usually ends on unrecoverable failure in RS decoder:
      device-mapper: verity-fec: 7:1: FEC 0: failed to correct: -74
      ...
    
    This problem is present in all kernels since the FEC code's
    introduction (kernel 4.5).
    
    It is thought that this problem is not visible in Android ecosystem
    because it always uses a default RS roots=2.
    
    Depends-on: a14e5ec66a7a ("dm bufio: subtract the number of initial sectors in dm_bufio_get_device_size")
    Signed-off-by: Milan Broz <gmazyland@gmail.com>
    Tested-by: JÃ©rÃ´me Carretero <cJ-ko@zougloub.eu>
    Reviewed-by: Sami Tolvanen <samitolvanen@google.com>
    Cc: stable@vger.kernel.org # 4.5+
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a4182923144cef912633a02f0ccdf25498949bc
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Feb 23 21:21:20 2021 +0100

    dm bufio: subtract the number of initial sectors in dm_bufio_get_device_size
    
    commit a14e5ec66a7a66e57b24e2469f9212a78460207e upstream.
    
    dm_bufio_get_device_size returns the device size in blocks. Before
    returning the value, we must subtract the nubmer of starting
    sectors. The number of starting sectors may not be divisible by block
    size.
    
    Note that currently, no target is using dm_bufio_set_sector_offset and
    dm_bufio_get_device_size simultaneously, so this change has no effect.
    However, an upcoming dm-verity-fec fix needs this change.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Milan Broz <gmazyland@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a6436801652d1ec4e77b47d78be92256a7692f
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Feb 25 19:23:27 2021 +0100

    PM: runtime: Update device status before letting suppliers suspend
    
    commit 44cc89f764646b2f1f2ea5d1a08b230131707851 upstream.
    
    Because the PM-runtime status of the device is not updated in
    __rpm_callback(), attempts to suspend the suppliers of the given
    device triggered by rpm_put_suppliers() called by it may fail.
    
    Fix this by making __rpm_callback() update the device's status to
    RPM_SUSPENDED before calling rpm_put_suppliers() if the current
    status of the device is RPM_SUSPENDING and the callback just invoked
    by it has returned 0 (success).
    
    While at it, modify the code in __rpm_callback() to always check
    the device's PM-runtime status under its PM lock.
    
    Link: https://lore.kernel.org/linux-pm/CAPDyKFqm06KDw_p8WXsM4dijDbho4bb6T4k50UqqvR1_COsp8g@mail.gmail.com/
    Fixes: 21d5c57b3726 ("PM / runtime: Use device links")
    Reported-by: Elaine Zhang <zhangqing@rock-chips.com>
    Diagnosed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Elaine Zhang <zhangiqng@rock-chips.com>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: 4.10+ <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e49baccfe29907cb26a82e29ded6797c638fed92
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Feb 26 17:51:44 2021 +0000

    btrfs: fix warning when creating a directory with smack enabled
    
    commit fd57a98d6f0c98fa295813087f13afb26c224e73 upstream.
    
    When we have smack enabled, during the creation of a directory smack may
    attempt to add a "smack transmute" xattr on the inode, which results in
    the following warning and trace:
    
      WARNING: CPU: 3 PID: 2548 at fs/btrfs/transaction.c:537 start_transaction+0x489/0x4f0
      Modules linked in: nft_objref nf_conntrack_netbios_ns (...)
      CPU: 3 PID: 2548 Comm: mkdir Not tainted 5.9.0-rc2smack+ #81
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-2.fc32 04/01/2014
      RIP: 0010:start_transaction+0x489/0x4f0
      Code: e9 be fc ff ff (...)
      RSP: 0018:ffffc90001887d10 EFLAGS: 00010202
      RAX: ffff88816f1e0000 RBX: 0000000000000201 RCX: 0000000000000003
      RDX: 0000000000000201 RSI: 0000000000000002 RDI: ffff888177849000
      RBP: ffff888177849000 R08: 0000000000000001 R09: 0000000000000004
      R10: ffffffff825e8f7a R11: 0000000000000003 R12: ffffffffffffffe2
      R13: 0000000000000000 R14: ffff88803d884270 R15: ffff8881680d8000
      FS:  00007f67317b8440(0000) GS:ffff88817bcc0000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f67247a22a8 CR3: 000000004bfbc002 CR4: 0000000000370ee0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       ? slab_free_freelist_hook+0xea/0x1b0
       ? trace_hardirqs_on+0x1c/0xe0
       btrfs_setxattr_trans+0x3c/0xf0
       __vfs_setxattr+0x63/0x80
       smack_d_instantiate+0x2d3/0x360
       security_d_instantiate+0x29/0x40
       d_instantiate_new+0x38/0x90
       btrfs_mkdir+0x1cf/0x1e0
       vfs_mkdir+0x14f/0x200
       do_mkdirat+0x6d/0x110
       do_syscall_64+0x2d/0x40
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f673196ae6b
      Code: 8b 05 11 (...)
      RSP: 002b:00007ffc3c679b18 EFLAGS: 00000246 ORIG_RAX: 0000000000000053
      RAX: ffffffffffffffda RBX: 00000000000001ff RCX: 00007f673196ae6b
      RDX: 0000000000000000 RSI: 00000000000001ff RDI: 00007ffc3c67a30d
      RBP: 00007ffc3c67a30d R08: 00000000000001ff R09: 0000000000000000
      R10: 000055d3e39fe930 R11: 0000000000000246 R12: 0000000000000000
      R13: 00007ffc3c679cd8 R14: 00007ffc3c67a30d R15: 00007ffc3c679ce0
      irq event stamp: 11029
      hardirqs last  enabled at (11037): [<ffffffff81153fe6>] console_unlock+0x486/0x670
      hardirqs last disabled at (11044): [<ffffffff81153c01>] console_unlock+0xa1/0x670
      softirqs last  enabled at (8864): [<ffffffff81e0102f>] asm_call_on_stack+0xf/0x20
      softirqs last disabled at (8851): [<ffffffff81e0102f>] asm_call_on_stack+0xf/0x20
    
    This happens because at btrfs_mkdir() we call d_instantiate_new() while
    holding a transaction handle, which results in the following call chain:
    
      btrfs_mkdir()
         trans = btrfs_start_transaction(root, 5);
    
         d_instantiate_new()
            smack_d_instantiate()
                __vfs_setxattr()
                    btrfs_setxattr_trans()
                       btrfs_start_transaction()
                          start_transaction()
                             WARN_ON()
                               --> a tansaction start has TRANS_EXTWRITERS
                                   set in its type
                             h->orig_rsv = h->block_rsv
                             h->block_rsv = NULL
    
         btrfs_end_transaction(trans)
    
    Besides the warning triggered at start_transaction, we set the handle's
    block_rsv to NULL which may cause some surprises later on.
    
    So fix this by making btrfs_setxattr_trans() not start a transaction when
    we already have a handle on one, stored in current->journal_info, and use
    that handle. We are good to use the handle because at btrfs_mkdir() we did
    reserve space for the xattr and the inode item.
    
    Reported-by: Casey Schaufler <casey@schaufler-ca.com>
    CC: stable@vger.kernel.org # 5.4+
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Tested-by: Casey Schaufler <casey@schaufler-ca.com>
    Link: https://lore.kernel.org/linux-btrfs/434d856f-bd7b-4889-a6ec-e81aaebfa735@schaufler-ca.com/
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a87911c26a1c98868f19642e324e863d81ca8cfd
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Feb 23 15:20:42 2021 +0200

    btrfs: unlock extents in btrfs_zero_range in case of quota reservation errors
    
    commit 4f6a49de64fd1b1dba5229c02047376da7cf24fd upstream.
    
    If btrfs_qgroup_reserve_data returns an error (i.e quota limit reached)
    the handling logic directly goes to the 'out' label without first
    unlocking the extent range between lockstart, lockend. This results in
    deadlocks as other processes try to lock the same extent.
    
    Fixes: a7f8b1c2ac21 ("btrfs: file: reserve qgroup space after the hole punch range is locked")
    CC: stable@vger.kernel.org # 5.10+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91bc3296bffb978d834b087daf6be022a9a06785
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Mon Feb 22 18:40:42 2021 +0200

    btrfs: free correct amount of space in btrfs_delayed_inode_reserve_metadata
    
    commit 0f9c03d824f6f522d3bc43629635c9765546ebc5 upstream.
    
    Following commit f218ea6c4792 ("btrfs: delayed-inode: Remove wrong
    qgroup meta reservation calls") this function now reserves num_bytes,
    rather than the fixed amount of nodesize. As such this requires the
    same amount to be freed in case of failure. Fix this by adjusting
    the amount we are freeing.
    
    Fixes: f218ea6c4792 ("btrfs: delayed-inode: Remove wrong qgroup meta reservation calls")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8674c1a72a693224f5e9520df419d600691c524a
Author: Dan Carpenter <dancarpenter@oracle.com>
Date:   Wed Feb 17 09:04:34 2021 +0300

    btrfs: validate qgroup inherit for SNAP_CREATE_V2 ioctl
    
    commit 5011c5a663b9c6d6aff3d394f11049b371199627 upstream.
    
    The problem is we're copying "inherit" from user space but we don't
    necessarily know that we're copying enough data for a 64 byte
    struct.  Then the next problem is that 'inherit' has a variable size
    array at the end, and we have to verify that array is the size we
    expected.
    
    Fixes: 6f72c7e20dba ("Btrfs: add qgroup inheritance")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c740d2b8c614a80cea4c0fd722191bb482053d8
Author: Ira Weiny <ira.weiny@intel.com>
Date:   Wed Jan 27 22:15:03 2021 -0800

    btrfs: fix raid6 qstripe kmap
    
    commit d70cef0d46729808dc53f145372c02b145c92604 upstream.
    
    When a qstripe is required an extra page is allocated and mapped.  There
    were 3 problems:
    
    1) There is no corresponding call of kunmap() for the qstripe page.
    2) There is no reason to map the qstripe page more than once if the
       number of bits set in rbio->dbitmap is greater than one.
    3) There is no reason to map the parity page and unmap it each time
       through the loop.
    
    The page memory can continue to be reused with a single mapping on each
    iteration by raid6_call.gen_syndrome() without remapping.  So map the
    page for the duration of the loop.
    
    Similarly, improve the algorithm by mapping the parity page just 1 time.
    
    Fixes: 5a6ac9eacb49 ("Btrfs, raid56: support parity scrub on raid56")
    CC: stable@vger.kernel.org # 4.4.x: c17af96554a8: btrfs: raid56: simplify tracking of Q stripe presence
    CC: stable@vger.kernel.org # 4.4.x
    Signed-off-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 909a8d2b1e7bb30711bb6c1504a656ee288adebc
Author: David Sterba <dsterba@suse.com>
Date:   Wed Feb 19 15:17:20 2020 +0100

    btrfs: raid56: simplify tracking of Q stripe presence
    
    commit c17af96554a8a8777cbb0fd53b8497250e548b43 upstream.
    
    There are temporary variables tracking the index of P and Q stripes, but
    none of them is really used as such, merely for determining if the Q
    stripe is present. This leads to compiler warnings with
    -Wunused-but-set-variable and has been reported several times.
    
    fs/btrfs/raid56.c: In function âfinish_rmwâ:
    fs/btrfs/raid56.c:1199:6: warning: variable âp_stripeâ set but not used [-Wunused-but-set-variable]
     1199 |  int p_stripe = -1;
          |      ^~~~~~~~
    fs/btrfs/raid56.c: In function âfinish_parity_scrubâ:
    fs/btrfs/raid56.c:2356:6: warning: variable âp_stripeâ set but not used [-Wunused-but-set-variable]
     2356 |  int p_stripe = -1;
          |      ^~~~~~~~
    
    Replace the two variables with one that has a clear meaning and also get
    rid of the warnings. The logic that verifies that there are only 2
    valid cases is unchanged.
    
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15726df8c09ad324d26f603ab724e31dc19d70a5
Author: Jarkko Sakkinen <jarkko@kernel.org>
Date:   Sat Feb 20 00:55:59 2021 +0200

    tpm, tpm_tis: Decorate tpm_get_timeouts() with request_locality()
    
    commit a5665ec2affdba21bff3b0d4d3aed83b3951e8ff upstream.
    
    This is shown with Samsung Chromebook Pro (Caroline) with TPM 1.2
    (SLB 9670):
    
    [    4.324298] TPM returned invalid status
    [    4.324806] WARNING: CPU: 2 PID: 1 at drivers/char/tpm/tpm_tis_core.c:275 tpm_tis_status+0x86/0x8f
    
    Background
    ==========
    
    TCG PC Client Platform TPM Profile (PTP) Specification, paragraph 6.1 FIFO
    Interface Locality Usage per Register, Table 39 Register Behavior Based on
    Locality Setting for FIFO - a read attempt to TPM_STS_x Registers returns
    0xFF in case of lack of locality.
    
    The fix
    =======
    
    Decorate tpm_get_timeouts() with request_locality() and release_locality().
    
    Fixes: a3fbfae82b4c ("tpm: take TPM chip power gating out of tpm_transmit()")
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Laurent Bigonville <bigon@debian.org>
    Cc: stable@vger.kernel.org
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d71cbc911047254ed4bc9ae36f3273cfa3944fd
Author: Lukasz Majczak <lma@semihalf.com>
Date:   Tue Feb 16 10:17:49 2021 +0200

    tpm, tpm_tis: Decorate tpm_tis_gen_interrupt() with request_locality()
    
    commit d53a6adfb553969809eb2b736a976ebb5146cd95 upstream.
    
    This is shown with Samsung Chromebook Pro (Caroline) with TPM 1.2
    (SLB 9670):
    
    [    4.324298] TPM returned invalid status
    [    4.324806] WARNING: CPU: 2 PID: 1 at drivers/char/tpm/tpm_tis_core.c:275 tpm_tis_status+0x86/0x8f
    
    Background
    ==========
    
    TCG PC Client Platform TPM Profile (PTP) Specification, paragraph 6.1 FIFO
    Interface Locality Usage per Register, Table 39 Register Behavior Based on
    Locality Setting for FIFO - a read attempt to TPM_STS_x Registers returns
    0xFF in case of lack of locality.
    
    The fix
    =======
    
    Decorate tpm_tis_gen_interrupt() with request_locality() and
    release_locality().
    
    Cc: Laurent Bigonville <bigon@debian.org>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: stable@vger.kernel.org
    Fixes: a3fbfae82b4c ("tpm: take TPM chip power gating out of tpm_transmit()")
    Signed-off-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
