commit 6e4548ea58e6a5ed2dd3a417d991742e2dec0246
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 3 10:24:39 2018 +0100

    Linux 4.14.24

commit ab5d9d1751bc539fe2b30bafe758d8ebd5d48a09
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Fri Dec 8 19:27:27 2017 +0100

    net: sched: fix use-after-free in tcf_block_put_ext
    
    commit df45bf84e4f5a48f23d4b1a07d21d566e8b587b2 upstream.
    
    Since the block is freed with last chain being put, once we reach the
    end of iteration of list_for_each_entry_safe, the block may be
    already freed. I'm hitting this only by creating and deleting clsact:
    
    [  202.171952] ==================================================================
    [  202.180182] BUG: KASAN: use-after-free in tcf_block_put_ext+0x240/0x390
    [  202.187590] Read of size 8 at addr ffff880225539a80 by task tc/796
    [  202.194508]
    [  202.196185] CPU: 0 PID: 796 Comm: tc Not tainted 4.15.0-rc2jiri+ #5
    [  202.203200] Hardware name: Mellanox Technologies Ltd. "MSN2100-CB2F"/"SA001017", BIOS 5.6.5 06/07/2016
    [  202.213613] Call Trace:
    [  202.216369]  dump_stack+0xda/0x169
    [  202.220192]  ? dma_virt_map_sg+0x147/0x147
    [  202.224790]  ? show_regs_print_info+0x54/0x54
    [  202.229691]  ? tcf_chain_destroy+0x1dc/0x250
    [  202.234494]  print_address_description+0x83/0x3d0
    [  202.239781]  ? tcf_block_put_ext+0x240/0x390
    [  202.244575]  kasan_report+0x1ba/0x460
    [  202.248707]  ? tcf_block_put_ext+0x240/0x390
    [  202.253518]  tcf_block_put_ext+0x240/0x390
    [  202.258117]  ? tcf_chain_flush+0x290/0x290
    [  202.262708]  ? qdisc_hash_del+0x82/0x1a0
    [  202.267111]  ? qdisc_hash_add+0x50/0x50
    [  202.271411]  ? __lock_is_held+0x5f/0x1a0
    [  202.275843]  clsact_destroy+0x3d/0x80 [sch_ingress]
    [  202.281323]  qdisc_destroy+0xcb/0x240
    [  202.285445]  qdisc_graft+0x216/0x7b0
    [  202.289497]  tc_get_qdisc+0x260/0x560
    
    Fix this by holding the block also by chain 0 and put chain 0
    explicitly, out of the list_for_each_entry_safe loop at the very
    end of tcf_block_put_ext.
    
    Fixes: efbf78973978 ("net_sched: get rid of rcu_barrier() in tcf_block_put_ext()")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac2be03ba64febc467e2df4fceb2a053408cc833
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Dec 4 10:48:18 2017 -0800

    net_sched: get rid of rcu_barrier() in tcf_block_put_ext()
    
    commit efbf78973978b0d25af59bc26c8013a942af6e64 upstream.
    
    Both Eric and Paolo noticed the rcu_barrier() we use in
    tcf_block_put_ext() could be a performance bottleneck when
    we have a lot of tc classes.
    
    Paolo provided the following to demonstrate the issue:
    
    tc qdisc add dev lo root htb
    for I in `seq 1 1000`; do
            tc class add dev lo parent 1: classid 1:$I htb rate 100kbit
            tc qdisc add dev lo parent 1:$I handle $((I + 1)): htb
            for J in `seq 1 10`; do
                    tc filter add dev lo parent $((I + 1)): u32 match ip src 1.1.1.$J
            done
    done
    time tc qdisc del dev root
    
    real    0m54.764s
    user    0m0.023s
    sys     0m0.000s
    
    The rcu_barrier() there is to ensure we free the block after all chains
    are gone, that is, to queue tcf_block_put_final() at the tail of workqueue.
    We can achieve this ordering requirement by refcnt'ing tcf block instead,
    that is, the tcf block is freed only when the last chain in this block is
    gone. This also simplifies the code.
    
    Paolo reported after this patch we get:
    
    real    0m0.017s
    user    0m0.000s
    sys     0m0.017s
    
    Tested-by: Paolo Abeni <pabeni@redhat.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jiri Pirko <jiri@mellanox.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c8e7e61cbdf8792cef437afe5c5cdb26f7773df
Author: Roman Kapl <code@rkapl.cz>
Date:   Fri Nov 24 12:27:58 2017 +0100

    net: sched: crash on blocks with goto chain action
    
    commit a60b3f515d30d0fe8537c64671926879a3548103 upstream.
    
    tcf_block_put_ext has assumed that all filters (and thus their goto
    actions) are destroyed in RCU callback and thus can not race with our
    list iteration. However, that is not true during netns cleanup (see
    tcf_exts_get_net comment).
    
    Prevent the user after free by holding all chains (except 0, that one is
    already held). foreach_safe is not enough in this case.
    
    To reproduce, run the following in a netns and then delete the ns:
        ip link add dtest type dummy
        tc qdisc add dev dtest ingress
        tc filter add dev dtest chain 1 parent ffff: handle 1 prio 1 flower action goto chain 2
    
    Fixes: 822e86d997 ("net_sched: remove tcf_block_put_deferred()")
    Signed-off-by: Roman Kapl <code@rkapl.cz>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6b42b3d2d9576dcaa0b4f1196117ad50b248b21
Author: Roman Kapl <code@rkapl.cz>
Date:   Mon Nov 20 22:21:13 2017 +0100

    net: sched: fix crash when deleting secondary chains
    
    commit d7aa04a5e82b4f254d306926c81eae8df69e5200 upstream.
    
    If you flush (delete) a filter chain other than chain 0 (such as when
    deleting the device), the kernel may run into a use-after-free. The
    chain refcount must not be decremented unless we are sure we are done
    with the chain.
    
    To reproduce the bug, run:
        ip link add dtest type dummy
        tc qdisc add dev dtest ingress
        tc filter add dev dtest chain 1  parent ffff: flower
        ip link del dtest
    
    Introduced in: commit f93e1cdcf42c ("net/sched: fix filter flushing"),
    but unless you have KAsan or luck, you won't notice it until
    commit 0dadc117ac8b ("cls_flower: use tcf_exts_get_net() before call_rcu()")
    
    Fixes: f93e1cdcf42c ("net/sched: fix filter flushing")
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Roman Kapl <code@rkapl.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc44a1bbd131b34fd69c140affe6866caf1e1a39
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Thu Sep 21 09:54:07 2017 +0200

    arm64: dts: marvell: mcbin: add comphy references to Ethernet ports
    
    commit 760b3843fcd88f2a46e66eec08e2e6023a425809 upstream.
    
    This patch adds comphy phandles to the Ethernet ports in the mcbin
    device tree. The comphy is used to configure the serdes PHYs used by
    these ports.
    
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8cf635c9142007dac8a3559d517bf33d4dbfd69
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Mon Sep 18 09:58:09 2017 +0200

    arm64: dts: marvell: add comphy nodes on cp110 master and slave
    
    commit 910d1bf2c68fa1d7dcde0316cb91f62758407e8d upstream.
    
    This patch describes the comphy available in the cp110 master and slave.
    This comphy provides serdes lanes used by various controllers such as
    the network one.
    
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27245fc6f7a8d4f4830f55b50341ae37d920d9a7
Author: Sam Bobroff <sam.bobroff@au1.ibm.com>
Date:   Mon Feb 12 11:19:29 2018 +1100

    powerpc/pseries: Enable RAS hotplug events later
    
    commit c9dccf1d074a67d36c510845f663980d69e3409b upstream.
    
    Currently if the kernel receives a memory hot-unplug event early
    enough, it may get stuck in an infinite loop in
    dissolve_free_huge_pages(). This appears as a stall just after:
    
      pseries-hotplug-mem: Attempting to hot-remove XX LMB(s) at YYYYYYYY
    
    It appears to be caused by "minimum_order" being uninitialized, due to
    init_ras_IRQ() executing before hugetlb_init().
    
    To correct this, extract the part of init_ras_IRQ() that enables
    hotplug event processing and place it in the machine_late_initcall
    phase, which is guaranteed to be after hugetlb_init() is called.
    
    Signed-off-by: Sam Bobroff <sam.bobroff@au1.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    [mpe: Reorder the functions to make the diff readable]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60190108f7e2643bb6dd6465eed69c9d18b26b37
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Dec 7 07:20:46 2017 +0000

    MIPS: Implement __multi3 for GCC7 MIPS64r6 builds
    
    commit ebabcf17bcd7ce968b1631ebe08236275698f39b upstream.
    
    GCC7 is a bit too eager to generate suboptimal __multi3 calls (128bit
    multiply with 128bit result) for MIPS64r6 builds, even in code which
    doesn't explicitly use 128bit types, such as the following:
    
    unsigned long func(unsigned long a, unsigned long b)
    {
            return a > (~0UL) / b;
    }
    
    Which GCC rearanges to:
    
    return (unsigned __int128)a * (unsigned __int128)b > 0xffffffffffffffff;
    
    Therefore implement __multi3, but only for MIPS64r6 with GCC7 as under
    normal circumstances we wouldn't expect any calls to __multi3 to be
    generated from kernel code.
    
    Reported-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Tested-by: Waldemar Brodkorb <wbx@openadk.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Maciej W. Rozycki <macro@mips.com>
    Cc: Matthew Fortune <matthew.fortune@mips.com>
    Cc: Florian Fainelli <florian@openwrt.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17890/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819cbaae314ed04f7bd530f0e34c96b9612940eb
Author: Yuval Mintz <yuvalm@mellanox.com>
Date:   Wed Jan 10 11:42:43 2018 +0100

    mlxsw: pci: Wait after reset before accessing HW
    
    
    [ Upstream commit 8e033a93b37f37aa9fca71a370a895155320af60 ]
    
    After performing reset driver polls on HW indication until learning
    that the reset is done, but immediately after reset the device becomes
    unresponsive which might lead to completion timeout on the first read.
    
    Wait for 100ms before starting the polling.
    
    Fixes: 233fa44bd67a ("mlxsw: pci: Implement reset done check")
    Signed-off-by: Yuval Mintz <yuvalm@mellanox.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d23aaff9e55227d9e786d3aee157c9df63f2efe
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Tue Jan 9 18:14:28 2018 -0800

    nfp: always unmask aux interrupts at init
    
    
    [ Upstream commit fc2336505fb49a8b932a0a67a9745c408b79992c ]
    
    The link state and exception interrupts may be masked when we probe.
    The firmware should in theory prevent sending (and automasking) those
    interrupts if the device is disabled, but if my reading of the FW code
    is correct there are firmwares out there with race conditions in this
    area.  The interrupt may also be masked if previous driver which used
    the device was malfunctioning and we didn't load the FW (there is no
    other good way to comprehensively reset the PF).
    
    Note that FW unmasks the data interrupts by itself when vNIC is
    enabled, such helpful operation is not performed for LSC/EXN interrupts.
    
    Always unmask the auxiliary interrupts after request_irq().  On the
    remove path add missing PCI write flush before free_irq().
    
    Fixes: 4c3523623dc0 ("net: add driver for Netronome NFP4000/NFP6000 NIC VFs")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e69660fdecda3bb58e8f3e9e7b0dc36efbad1b96
Author: Madalin Bucur <madalin.bucur@nxp.com>
Date:   Tue Jan 9 14:43:34 2018 +0200

    of_mdio: avoid MDIO bus removal when a PHY is missing
    
    
    [ Upstream commit 95f566de0269a0c59fd6a737a147731302136429 ]
    
    If one of the child devices is missing the of_mdiobus_register_phy()
    call will return -ENODEV. When a missing device is encountered the
    registration of the remaining PHYs is stopped and the MDIO bus will
    fail to register. Propagate all errors except ENODEV to avoid it.
    
    Signed-off-by: Madalin Bucur <madalin.bucur@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83d9e9c211fe885d03e9acb425be3cf55c1d3bd8
Author: Yangbo Lu <yangbo.lu@nxp.com>
Date:   Tue Jan 9 11:02:33 2018 +0800

    net: gianfar_ptp: move set_fipers() to spinlock protecting area
    
    
    [ Upstream commit 11d827a993a969c3c6ec56758ff63a44ba19b466 ]
    
    set_fipers() calling should be protected by spinlock in
    case that any interrupt breaks related registers setting
    and the function we expect. This patch is to move set_fipers()
    to spinlock protecting area in ptp_gianfar_adjtime().
    
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00c840f3b51cda42a3c48fa4067c4fa2091cdbcc
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jan 8 19:02:29 2018 -0200

    sctp: make use of pre-calculated len
    
    
    [ Upstream commit c76f97c99ae6d26d14c7f0e50e074382bfbc9f98 ]
    
    Some sockopt handling functions were calculating the length of the
    buffer to be written to userspace and then calculating it again when
    actually writing the buffer, which could lead to some write not using
    an up-to-date length.
    
    This patch updates such places to just make use of the len variable.
    
    Also, replace some sizeof(type) to sizeof(var).
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 413e58ac3d845144f9b70b85b2f4add7d3249948
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jan 8 19:02:28 2018 -0200

    sctp: add a ceiling to optlen in some sockopts
    
    
    [ Upstream commit 5960cefab9df76600a1a7d4ff592c59e14616e88 ]
    
    Hangbin Liu reported that some sockopt calls could cause the kernel to log
    a warning on memory allocation failure if the user supplied a large optlen
    value. That is because some of them called memdup_user() without a ceiling
    on optlen, allowing it to try to allocate really large buffers.
    
    This patch adds a ceiling by limiting optlen to the maximum allowed that
    would still make sense for these sockopt.
    
    Reported-by: Hangbin Liu <haliu@redhat.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd659881219d8a39a523d2a42ae04e3fc416d030
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:22 2018 +0000

    xen/gntdev: Fix partial gntdev_mmap() cleanup
    
    
    [ Upstream commit cf2acf66ad43abb39735568f55e1f85f9844e990 ]
    
    When cleaning up after a partially successful gntdev_mmap(), unmap the
    successfully mapped grant pages otherwise Xen will kill the domain if
    in debug mode (Attempt to implicitly unmap a granted PTE) or Linux will
    kill the process and emit "BUG: Bad page map in process" if Xen is in
    release mode.
    
    This is only needed when use_ptemod is true because gntdev_put_map()
    will unmap grant pages itself when use_ptemod is false.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aee2c142e3d7803cb8535fb92806b1f239390bc
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:21 2018 +0000

    xen/gntdev: Fix off-by-one error when unmapping with holes
    
    
    [ Upstream commit 951a010233625b77cde3430b4b8785a9a22968d1 ]
    
    If the requested range has a hole, the calculation of the number of
    pages to unmap is off by one. Fix it.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 197faf0c3a146bd61b0e0eeffec340a491786f7f
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Jan 6 21:53:26 2018 +0300

    SolutionEngine771x: fix Ether platform data
    
    
    [ Upstream commit 195e2addbce09e5afbc766efc1e6567c9ce840d3 ]
    
    The 'sh_eth' driver's probe() method would fail  on the SolutionEngine7710
    board and crash on SolutionEngine7712 board  as the platform code is
    hopelessly behind the driver's platform data --  it passes the PHY address
    instead of 'struct sh_eth_plat_data *'; pass the latter to the driver in
    order to fix the bug...
    
    Fixes: 71557a37adb5 ("[netdrvr] sh_eth: Add SH7619 support")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ac846ba15f8fc96c867e6e13b85d12b8b65515
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 6 09:00:09 2018 +0100

    mdio-sun4i: Fix a memory leak
    
    
    [ Upstream commit 56c0290202ab94a2f2780c449395d4ae8495fab4 ]
    
    If the probing of the regulator is deferred, the memory allocated by
    'mdiobus_alloc_size()' will be leaking.
    It should be freed before the next call to 'sun4i_mdio_probe()' which will
    reallocate it.
    
    Fixes: 4bdcb1dd9feb ("net: Add MDIO bus driver for the Allwinner EMAC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ada11975b7fd200f5ca6e263c8060ca4d636d9
Author: Eduardo Otubo <otubo@redhat.com>
Date:   Fri Jan 5 09:42:16 2018 +0100

    xen-netfront: enable device after manual module load
    
    
    [ Upstream commit b707fda2df4070785d0fa8a278aa13944c5f51f8 ]
    
    When loading the module after unloading it, the network interface would
    not be enabled and thus wouldn't have a backend counterpart and unable
    to be used by the guest.
    
    The guest would face errors like:
    
      [root@guest ~]# ethtool -i eth0
      Cannot get driver information: No such device
    
      [root@guest ~]# ifconfig eth0
      eth0: error fetching interface information: Device not found
    
    This patch initializes the state of the netfront device whenever it is
    loaded manually, this state would communicate the netback to create its
    device and establish the connection between them.
    
    Signed-off-by: Eduardo Otubo <otubo@redhat.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e29d0bac356de0cd04279ecbcd0384b4a4056b8
Author: Venkat Duvvuru <venkatkumar.duvvuru@broadcom.com>
Date:   Thu Jan 4 18:46:55 2018 -0500

    bnxt_en: Fix the 'Invalid VF' id check in bnxt_vf_ndo_prep routine.
    
    
    [ Upstream commit 78f300049335ae81a5cc6b4b232481dc5e1f9d41 ]
    
    In bnxt_vf_ndo_prep (which is called by bnxt_get_vf_config ndo), there is a
    check for "Invalid VF id". Currently, the check is done against max_vfs.
    However, the user doesn't always create max_vfs. So, the check should be
    against the created number of VFs. The number of bnxt_vf_info structures
    that are allocated in bnxt_alloc_vf_resources routine is the "number of
    requested VFs". So, if an "invalid VF id" falls between the requested
    number of VFs and the max_vfs, the driver will be dereferencing an invalid
    pointer.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Venkat Devvuru <venkatkumar.duvvuru@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a74e2cb46cdbc7b546d8552bc1e61bd43b960df6
Author: Sunil Challa <sunilkumar.challa@broadcom.com>
Date:   Thu Jan 4 18:46:54 2018 -0500

    bnxt_en: Fix population of flow_type in bnxt_hwrm_cfa_flow_alloc()
    
    
    [ Upstream commit 7deea450eb912f269d999de62c8ab922d1461748 ]
    
    flow_type in HWRM_FLOW_ALLOC is not being populated correctly due to
    incorrect passing of pointer and size of l3_mask argument of is_wildcard().
    Fixed this.
    
    Fixes: db1d36a27324 ("bnxt_en: add TC flower offload flow_alloc/free FW cmds")
    Signed-off-by: Sunil Challa <sunilkumar.challa@broadcom.com>
    Reviewed-by: Sathya Perla <sathya.perla@broadcom.com>
    Reviewed-by: Venkat Duvvuru <venkatkumar.duvvuru@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a33ecfb67b9c200feaa97b8854bf65414e5a27f
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Dec 28 14:25:23 2017 +0200

    x86/platform/intel-mid: Revert "Make 'bt_sfi_data' const"
    
    
    [ Upstream commit 9d0513d82f1a8fe17b41f113ac5922fa57dbaf5c ]
    
    So one of the constification patches unearthed a type casting fragility
    of the underlying code:
    
      276c87054751 ("x86/platform/intel-mid: Make 'bt_sfi_data' const")
    
    converted the struct to be const while it is also used as a temporary
    container for important data that is used to fill 'parent' and 'name'
    fields in struct platform_device_info.
    
    The compiler doesn't notice this due to an explicit type cast that loses
    the const - which fragility will be fixed separately.
    
    This type cast turned a seemingly trivial const propagation patch into a
    hard to debug data corruptor and crasher bug.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Bhumika Goyal <bhumirks@gmail.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: julia.lawall@lip6.fr
    Cc: platform-driver-x86@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171228122523.21802-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa10314f23bc9158137fc642034ee5042e89ceac
Author: Ewan D. Milne <emilne@redhat.com>
Date:   Fri Jan 5 12:44:06 2018 -0500

    nvme-fabrics: initialize default host->id in nvmf_host_default()
    
    
    [ Upstream commit 6b018235b4daabae96d855219fae59c3fb8be417 ]
    
    The field was uninitialized before use.
    
    Signed-off-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e1311a13449e77022608d95ffa6623a2cc084d0
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Jan 8 14:54:32 2018 +1100

    powerpc/pseries: Make RAS IRQ explicitly dependent on DLPAR WQ
    
    
    [ Upstream commit e2d5915293ffdff977ddcfc12b817b08c53ffa7a ]
    
    The hotplug code uses its own workqueue to handle IRQ requests
    (pseries_hp_wq), however that workqueue is initialized after
    init_ras_IRQ(). That can lead to a kernel panic if any hotplug
    interrupts fire after init_ras_IRQ() but before pseries_hp_wq is
    initialised. eg:
    
      UDP-Lite hash table entries: 2048 (order: 0, 65536 bytes)
      NET: Registered protocol family 1
      Unpacking initramfs...
      (qemu) object_add memory-backend-ram,id=mem1,size=10G
      (qemu) device_add pc-dimm,id=dimm1,memdev=mem1
      Unable to handle kernel paging request for data at address 0xf94d03007c421378
      Faulting instruction address: 0xc00000000012d744
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE SMP NR_CPUS=2048 NUMA pSeries
      Modules linked in:
      CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.15.0-rc2-ziviani+ #26
      task:         (ptrval) task.stack:         (ptrval)
      NIP:  c00000000012d744 LR: c00000000012d744 CTR: 0000000000000000
      REGS:         (ptrval) TRAP: 0380   Not tainted  (4.15.0-rc2-ziviani+)
      MSR:  8000000000009033 <SF,EE,ME,IR,DR,RI,LE>  CR: 28088042  XER: 20040000
      CFAR: c00000000012d3c4 SOFTE: 0
      ...
      NIP [c00000000012d744] __queue_work+0xd4/0x5c0
      LR [c00000000012d744] __queue_work+0xd4/0x5c0
      Call Trace:
      [c0000000fffefb90] [c00000000012d744] __queue_work+0xd4/0x5c0 (unreliable)
      [c0000000fffefc70] [c00000000012dce4] queue_work_on+0xb4/0xf0
    
    This commit makes the RAS IRQ registration explicitly dependent on the
    creation of the pseries_hp_wq.
    
    Reported-by: Min Deng <mdeng@redhat.com>
    Reported-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>
    Tested-by: Jose Ricardo Ziviani <joserz@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9024bb7e27d2684d71f06f4344c71c7924e8b80c
Author: Jacek Anaszewski <jacek.anaszewski@gmail.com>
Date:   Wed Jan 3 21:13:45 2018 +0100

    leds: core: Fix regression caused by commit 2b83ff96f51d
    
    
    [ Upstream commit 7b6af2c53192f1766892ef40c8f48a413509ed72 ]
    
    Commit 2b83ff96f51d ("led: core: Fix brightness setting when setting delay_off=0")
    replaced del_timer_sync(&led_cdev->blink_timer) with led_stop_software_blink()
    in led_blink_set(), which additionally clears LED_BLINK_SW flag as well as
    zeroes blink_delay_on and blink_delay_off properties of the struct led_classdev.
    
    Cleansing of the latter ones wasn't required to fix the original issue but
    wasn't considered harmful. It nonetheless turned out to be so in case when
    pointer to one or both props is passed to led_blink_set() like in the
    ledtrig-timer.c. In such cases zeroes are passed later in delay_on and/or
    delay_off arguments to led_blink_setup(), which results either in stopping
    the software blinking or setting blinking frequency always to 1Hz.
    
    Avoid using led_stop_software_blink() and add a single call required
    to clear LED_BLINK_SW flag, which was the only needed modification to
    fix the original issue.
    
    Fixes 2b83ff96f51d ("led: core: Fix brightness setting when setting delay_off=0")
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be2b86901a346d1fc2e496ce5823541ef3f82737
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Thu Jan 4 20:02:09 2018 -0800

    bpf: sockmap missing NULL psock check
    
    
    [ Upstream commit 5731a879d03bdaa00265f8ebc32dfd0e65d25276 ]
    
    Add psock NULL check to handle a racing sock event that can get the
    sk_callback_lock before this case but after xchg happens causing the
    refcnt to hit zero and sock user data (psock) to be null and queued
    for garbage collection.
    
    Also add a comment in the code because this is a bit subtle and
    not obvious in my opinion.
    
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ac98131312a0c16280e216e8ee6debceec11e0f
Author: Valentin Ilie <valentin.ilie@gmail.com>
Date:   Fri Jan 5 23:12:59 2018 +0000

    ia64, sched/cputime: Fix build error if CONFIG_VIRT_CPU_ACCOUNTING_NATIVE=y
    
    
    [ Upstream commit 7729bebc619307a0233c86f8585a4bf3eadc7ce4 ]
    
    Remove the extra parenthesis.
    
    This bug was introduced by:
    
      e2339a4caa5e: ("ia64: Convert vtime to use nsec units directly")
    
    Signed-off-by: Valentin Ilie <valentin.ilie@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: fenghua.yu@intel.com
    Cc: linux-ia64@vger.kernel.org
    Cc: tony.luck@intel.com
    Link: http://lkml.kernel.org/r/1515193979-24873-1-git-send-email-valentin.ilie@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e3acce11e08f33a96d024f8b185a1709d591475
Author: Ming Lei <ming.lei@redhat.com>
Date:   Thu Nov 30 07:56:35 2017 +0800

    block: drain queue before waiting for q_usage_counter becoming zero
    
    
    [ Upstream commit 454be724f6f99cc7e7bbf15067128be9868186c6 ]
    
    Now we track legacy requests with .q_usage_counter in commit 055f6e18e08f
    ("block: Make q_usage_counter also track legacy requests"), but that
    commit never runs and drains legacy queue before waiting for this counter
    becoming zero, then IO hang is caused in the test of pulling disk during IO.
    
    This patch fixes the issue by draining requests before waiting for
    q_usage_counter becoming zero, both Mauricio and chenxiang reported this
    issue, and observed that it can be fixed by this patch.
    
    Link: https://marc.info/?l=linux-block&m=151192424731797&w=2
    Fixes: 055f6e18e08f("block: Make q_usage_counter also track legacy requests")
    Cc: Wen Xiong <wenxiong@us.ibm.com>
    Tested-by: "chenxiang (M)" <chenxiang66@hisilicon.com>
    Tested-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91c12917d4a80ce4d31413937d88e8fb1f9096d3
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Mon Dec 11 09:52:22 2017 +0100

    wcn36xx: Fix dynamic power saving
    
    
    [ Upstream commit 0856655a25476d4431005e39d606e349050066b0 ]
    
    Since driver does not report hardware dynamic power saving cap,
    this is up to the mac80211 to manage power saving timeout and
    state machine, using the ieee80211 config callback to report
    PS changes. This patch enables/disables PS mode according to
    the new configuration.
    
    Remove old behaviour enabling PS mode in a static way, this make
    the device unusable when power save is enabled since device is
    forced to PS regardless RX/TX traffic.
    
    Acked-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f39cc7fe90b8f7fbf5ac700a29c416d8296b2fd
Author: Luu An Phu <phu.luuan@nxp.com>
Date:   Tue Jan 2 10:44:18 2018 +0700

    can: flex_can: Correct the checking for frame length in flexcan_start_xmit()
    
    
    [ Upstream commit 13454c14550065fcc1705d6bd4ee6d40e057099f ]
    
    The flexcan_start_xmit() function compares the frame length with data
    register length to write frame content into data[0] and data[1]
    register. Data register length is 4 bytes and frame maximum length is 8
    bytes.
    
    Fix the check that compares frame length with 3. Because the register
    length is 4.
    
    Signed-off-by: Luu An Phu <phu.luuan@nxp.com>
    Reviewed-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f258cc64f4ec4b933991fb24fa76deddc18fd92
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Jan 4 15:51:53 2018 +0100

    mac80211: mesh: drop frames appearing to be from us
    
    
    [ Upstream commit 736a80bbfda709fb3631f5f62056f250a38e5804 ]
    
    If there are multiple mesh stations with the same MAC address,
    they will both get confused and start throwing warnings.
    
    Obviously in this case nothing can actually work anyway, so just
    drop frames that look like they're from ourselves early on.
    
    Reported-by: Gui Iribarren <gui@altermundi.net>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c38bd3a9fe11720425771392edc0370cd0db0049
Author: Hao Chen <flank3rsky@gmail.com>
Date:   Wed Jan 3 11:00:31 2018 +0800

    nl80211: Check for the required netlink attribute presence
    
    
    [ Upstream commit 3ea15452ee85754f70f3b9fa1f23165ef2e77ba7 ]
    
    nl80211_nan_add_func() does not check if the required attribute
    NL80211_NAN_FUNC_FOLLOW_UP_DEST is present when processing
    NL80211_CMD_ADD_NAN_FUNCTION request. This request can be issued
    by users with CAP_NET_ADMIN privilege and may result in NULL dereference
    and a system crash. Add a check for the required attribute presence.
    
    Signed-off-by: Hao Chen <flank3rsky@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d66a35c2a1fa519467e9406be41451e997bbd2d1
Author: Netanel Belgazal <netanel@amazon.com>
Date:   Wed Jan 3 06:17:29 2018 +0000

    net: ena: unmask MSI-X only after device initialization is completed
    
    
    [ Upstream commit 7853b49ce8e0ef6364d24512b287463841d71bd3 ]
    
    Under certain conditions MSI-X interrupt might arrive right after it
    was unmasked in ena_up(). There is a chance it would be processed by
    the driver before device ENA_FLAG_DEV_UP flag is set. In such a case
    the interrupt is ignored.
    ENA device operates in auto-masked mode, therefore ignoring
    interrupt leaves it masked for good.
    Moving unmask of interrupt to be the last step in ena_up().
    
    Signed-off-by: Netanel Belgazal <netanel@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aae87222cc9c0b059b1f748c26f1f7482a6e21c6
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Dec 20 11:04:36 2017 -0500

    i40e: don't remove netdev->dev_addr when syncing uc list
    
    
    [ Upstream commit 458867b2ca0c987445c5d9adccd1642970e1ba07 ]
    
    In some circumstances, such as with bridging, it is possible that the
    stack will add a devices own MAC address to its unicast address list.
    
    If, later, the stack deletes this address, then the i40e driver will
    receive a request to remove this address.
    
    The driver stores its current MAC address as part of the MAC/VLAN hash
    array, since it is convenient and matches exactly how the hardware
    expects to be told which traffic to receive.
    
    This causes a problem, since for more devices, the MAC address is stored
    separately, and requests to delete a unicast address should not have the
    ability to remove the filter for the MAC address.
    
    Fix this by forcing a check on every address sync to ensure we do not
    remove the device address.
    
    There is a very narrow possibility of a race between .set_mac and
    .set_rx_mode, if we don't change netdev->dev_addr before updating our
    internal MAC list in .set_mac. This might be possible if .set_rx_mode is
    going to remove MAC "XYZ" from the list, at the same time as .set_mac
    changes our dev_addr to MAC "XYZ", we might possibly queue a delete,
    then an add in .set_mac, then queue a delete in .set_rx_mode's
    dev_uc_sync and then update netdev->dev_addr. We can avoid this by
    moving the copy into dev_addr prior to the changes to the MAC filter
    list.
    
    A similar race on the other side does not cause problems, as if we're
    changing our MAC form A to B, and we race with .set_rx_mode, it could
    queue a delete from A, we'd update our address, and allow the delete.
    This seems like a race, but in reality we're about to queue a delete of
    A anyways, so it would not cause any issues.
    
    A race in the initialization code is unlikely because the netdevice has
    not yet been fully initialized and the stack should not be adding or
    removing addresses yet.
    
    Note that we don't (yet) need similar code for the VF driver because it
    does not make use of __dev_uc_sync and __dev_mc_sync, but instead roles
    its own method for handling updates to the MAC/VLAN list, which already
    has code to protect against removal of the hardware address.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f51f3cf99dfb3eb55fa3b8fd7e96c8ed6ca7112
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Fri Dec 8 10:55:04 2017 -0800

    i40e/i40evf: Account for frags split over multiple descriptors in check linearize
    
    
    [ Upstream commit 248de22e638f10bd5bfc7624a357f940f66ba137 ]
    
    The original code for __i40e_chk_linearize didn't take into account the
    fact that if a fragment is 16K in size or larger it has to be split over 2
    descriptors and the smaller of those 2 descriptors will be on the trailing
    edge of the transmit. As a result we can get into situations where we didn't
    catch requests that could result in a Tx hang.
    
    This patch takes care of that by subtracting the length of all but the
    trailing edge of the stale fragment before we test for sum. By doing this
    we can guarantee that we have all cases covered, including the case of a
    fragment that spans multiple descriptors. We don't need to worry about
    checking the inner portions of this since 12K is the maximum aligned DMA
    size and that is larger than any MSS will ever be since the MTU limit for
    jumbos is something on the order of 9K.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1edfa41adb1001aec1d813f72d7adab65058308e
Author: Felix Janda <felix.janda@posteo.de>
Date:   Mon Jan 1 19:33:20 2018 +0100

    uapi libc compat: add fallback for unsupported libcs
    
    
    [ Upstream commit c0bace798436bca0fdc221ff61143f1376a9c3de ]
    
    libc-compat.h aims to prevent symbol collisions between uapi and libc
    headers for each supported libc. This requires continuous coordination
    between them.
    
    The goal of this commit is to improve the situation for libcs (such as
    musl) which are not yet supported and/or do not wish to be explicitly
    supported, while not affecting supported libcs. More precisely, with
    this commit, unsupported libcs can request the suppression of any
    specific uapi definition by defining the correspondings _UAPI_DEF_*
    macro as 0. This can fix symbol collisions for them, as long as the
    libc headers are included before the uapi headers. Inclusion in the
    other order is outside the scope of this commit.
    
    All infrastructure in order to enable this fallback for unsupported
    libcs is already in place, except that libc-compat.h unconditionally
    defines all _UAPI_DEF_* macros to 1 for all unsupported libcs so that
    any previous definitions are ignored. In order to fix this, this commit
    merely makes these definitions conditional.
    
    This commit together with the musl libc commit
    
    http://git.musl-libc.org/cgit/musl/commit/?id=04983f2272382af92eb8f8838964ff944fbb8258
    
    fixes for example the following compiler errors when <linux/in6.h> is
    included after musl's <netinet/in.h>:
    
    ./linux/in6.h:32:8: error: redefinition of 'struct in6_addr'
    ./linux/in6.h:49:8: error: redefinition of 'struct sockaddr_in6'
    ./linux/in6.h:59:8: error: redefinition of 'struct ipv6_mreq'
    
    The comments referencing glibc are still correct, but this file is not
    only used for glibc any more.
    
    Signed-off-by: Felix Janda <felix.janda@posteo.de>
    Reviewed-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c9da1201713478e14c25e2fa5a04123110785b2
Author: Dave Young <dyoung@redhat.com>
Date:   Tue Jan 2 17:21:09 2018 +0000

    x86/efi: Fix kernel param add_efi_memmap regression
    
    
    [ Upstream commit 835bcec5fdf3f9e880111b482177e7e70e3596da ]
    
    'add_efi_memmap' is an early param, but do_add_efi_memmap() has no
    chance to run because the code path is before parse_early_param().
    I believe it worked when the param was introduced but probably later
    some other changes caused the wrong order and nobody noticed it.
    
    Move efi_memblock_x86_reserve_range() after parse_early_param()
    to fix it.
    
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Cc: Ge Song <ge.song@hxt-semitech.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180102172110.17018-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 935454915c3387d7679375ad8386fa3f6401db8b
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Jan 1 13:07:15 2018 +0200

    RDMA/netlink: Fix locking around __ib_get_device_by_index
    
    
    [ Upstream commit f8978bd95cf92f869f3d9b34c1b699f49253b8c6 ]
    
    Holding locks is mandatory when calling __ib_device_get_by_index,
    otherwise there are races during the list iteration with device removal.
    
    Since the locks are static to device.c, __ib_device_get_by_index can
    never be called correctly by any user out side the file.
    
    Make the function static and provide a safe function that gets the
    correct locks and returns a kref'd pointer. Fix all callers.
    
    Fixes: e5c9469efcb1 ("RDMA/netlink: Add nldev device doit implementation")
    Fixes: c3f66f7b0052 ("RDMA/netlink: Implement nldev port doit callback")
    Fixes: 7d02f605f0dc ("RDMA/netlink: Add nldev port dumpit implementation")
    Reviewed-by: Mark Bloch <markb@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cbd67344e05aac1e29778f5724478eda8ac0626
Author: Xiongwei Song <sxwjean@gmail.com>
Date:   Tue Jan 2 21:24:55 2018 +0800

    drm/ttm: check the return value of kzalloc
    
    
    [ Upstream commit 19d859a7205bc59ffc38303eb25ae394f61d21dc ]
    
    In the function ttm_page_alloc_init, kzalloc call is made for variable
    _manager, we need to check its return value, it may return NULL.
    
    Signed-off-by: Xiongwei Song <sxwjean@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d31d0cf5a9803ea5ae3accc51bc5b3ce776c5c1f
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Fri Dec 29 17:02:17 2017 +0800

    NET: usb: qmi_wwan: add support for YUGA CLM920-NC5 PID 0x9625
    
    
    [ Upstream commit bd30ffc414e55194ed6149fad69a145550cb7c18 ]
    
    This patch adds support for PID 0x9625 of YUGA CLM920-NC5.
    
    YUGA CLM920-NC5 needs to enable QMI_WWAN_QUIRK_DTR before QMI operation.
    
    qmicli -d /dev/cdc-wdm0 -p --dms-get-revision
    [/dev/cdc-wdm0] Device revision retrieved:
            Revision: 'CLM920_NC5-V1  1  [Oct 23 2016 19:00:00]'
    
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49a8f703725e8d508f4add0042b59a3810ba7077
Author: Tushar Dave <tushar.n.dave@oracle.com>
Date:   Wed Dec 6 02:26:29 2017 +0530

    e1000: fix disabling already-disabled warning
    
    
    [ Upstream commit 0b76aae741abb9d16d2c0e67f8b1e766576f897d ]
    
    This patch adds check so that driver does not disable already
    disabled device.
    
    [   44.637743] advantechwdt: Unexpected close, not stopping watchdog!
    [   44.997548] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input6
    [   45.013419] e1000 0000:00:03.0: disabling already-disabled device
    [   45.013447] ------------[ cut here ]------------
    [   45.014868] WARNING: CPU: 1 PID: 71 at drivers/pci/pci.c:1641 pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.016171] CPU: 1 PID: 71 Comm: rcu_perf_shutdo Not tainted 4.14.0-01330-g3c07399 #1
    [   45.017197] task: ffff88011bee9e40 task.stack: ffffc90000860000
    [   45.017987] RIP: 0010:pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.018603] RSP: 0000:ffffc90000863e30 EFLAGS: 00010286
    [   45.019282] RAX: 0000000000000035 RBX: ffff88013a230008 RCX: 0000000000000000
    [   45.020182] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000203
    [   45.021084] RBP: ffff88013a3f31e8 R08: 0000000000000001 R09: 0000000000000000
    [   45.021986] R10: ffffffff827ec29c R11: 0000000000000002 R12: 0000000000000001
    [   45.022946] R13: ffff88013a230008 R14: ffff880117802b20 R15: ffffc90000863e8f
    [   45.023842] FS:  0000000000000000(0000) GS:ffff88013fd00000(0000) knlGS:0000000000000000
    [   45.024863] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   45.025583] CR2: ffffc900006d4000 CR3: 000000000220f000 CR4: 00000000000006a0
    [   45.026478] Call Trace:
    [   45.026811]  __e1000_shutdown+0x1d4/0x1e2:
                                                    __e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5162
    [   45.027344]  ? rcu_perf_cleanup+0x2a1/0x2a1:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:627
    [   45.027883]  e1000_shutdown+0x14/0x3a:
                                                    e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5235
    [   45.028351]  device_shutdown+0x110/0x1aa:
                                                    device_shutdown at drivers/base/core.c:2807
    [   45.028858]  kernel_power_off+0x31/0x64:
                                                    kernel_power_off at kernel/reboot.c:260
    [   45.029343]  rcu_perf_shutdown+0x9b/0xa7:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:637
    [   45.029852]  ? __wake_up_common_lock+0xa2/0xa2:
                                                    autoremove_wake_function at kernel/sched/wait.c:376
    [   45.030414]  kthread+0x126/0x12e:
                                                    kthread at kernel/kthread.c:233
    [   45.030834]  ? __kthread_bind_mask+0x8e/0x8e:
                                                    kthread at kernel/kthread.c:190
    [   45.031399]  ? ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.031883]  ? kernel_init+0xa/0xf5:
                                                    kernel_init at init/main.c:997
    [   45.032325]  ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.032777] Code: 00 48 85 ed 75 07 48 8b ab a8 00 00 00 48 8d bb 98 00 00 00 e8 aa d1 11 00 48 89 ea 48 89 c6 48 c7 c7 d8 e4 0b 82 e8 55 7d da ff <0f> ff b9 01 00 00 00 31 d2 be 01 00 00 00 48 c7 c7 f0 b1 61 82
    [   45.035222] ---[ end trace c257137b1b1976ef ]---
    [   45.037838] ACPI: Preparing to enter system sleep state S5
    
    Signed-off-by: Tushar Dave <tushar.n.dave@oracle.com>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f22fec25935dee1dd769c84f100b173e1565c335
Author: Gao Feng <gfree.wind@vip.163.com>
Date:   Tue Dec 26 21:44:32 2017 +0800

    macvlan: Fix one possible double free
    
    
    [ Upstream commit d02fd6e7d2933ede6478a15f9e4ce8a93845824e ]
    
    Because the macvlan_uninit would free the macvlan port, so there is one
    double free case in macvlan_common_newlink. When the macvlan port is just
    created, then register_netdevice or netdev_upper_dev_link failed and they
    would invoke macvlan_uninit. Then it would reach the macvlan_port_destroy
    which triggers the double free.
    
    Signed-off-by: Gao Feng <gfree.wind@vip.163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d3d428c56a04893782a8d0b1e2b4ad8b34a5f45
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: check result of register_shrinker()
    
    
    [ Upstream commit 3a3882ff26fbdbaf5f7e13f6a0bccfbf7121041d ]
    
    xfs_qm_init_quotainfo() does not check result of register_shrinker()
    which was tagged as __must_check recently, reported by sparse.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    [darrick: move xfs_qm_destroy_quotainos nearer xfs_qm_init_quotainos]
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4def40b2ee0281f1749f4d0a2dc13f06a8bf531f
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: fix missed destroy of qi_tree_lock
    
    
    [ Upstream commit 2196881566225f3c3428d1a5f847a992944daa5b ]
    
    xfs_qm_destroy_quotainfo() does not destroy quotainfo->qi_tree_lock
    while destroys quotainfo->qi_quotaofflock.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba28394c579b9864bd8114eae1f877835ea96b93
Author: Erez Shitrit <erezsh@mellanox.com>
Date:   Sun Dec 31 15:33:15 2017 +0200

    IB/ipoib: Fix race condition in neigh creation
    
    
    [ Upstream commit 16ba3defb8bd01a9464ba4820a487f5b196b455b ]
    
    When using enhanced mode for IPoIB, two threads may execute xmit in
    parallel to two different TX queues while the target is the same.
    In this case, both of them will add the same neighbor to the path's
    neigh link list and we might see the following message:
    
      list_add double add: new=ffff88024767a348, prev=ffff88024767a348...
      WARNING: lib/list_debug.c:31__list_add_valid+0x4e/0x70
      ipoib_start_xmit+0x477/0x680 [ib_ipoib]
      dev_hard_start_xmit+0xb9/0x3e0
      sch_direct_xmit+0xf9/0x250
      __qdisc_run+0x176/0x5d0
      __dev_queue_xmit+0x1f5/0xb10
      __dev_queue_xmit+0x55/0xb10
    
    Analysis:
    Two SKB are scheduled to be transmitted from two cores.
    In ipoib_start_xmit, both gets NULL when calling ipoib_neigh_get.
    Two calls to neigh_add_path are made. One thread takes the spin-lock
    and calls ipoib_neigh_alloc which creates the neigh structure,
    then (after the __path_find) the neigh is added to the path's neigh
    link list. When the second thread enters the critical section it also
    calls ipoib_neigh_alloc but in this case it gets the already allocated
    ipoib_neigh structure, which is already linked to the path's neigh
    link list and adds it again to the list. Which beside of triggering
    the list, it creates a loop in the linked list. This loop leads to
    endless loop inside path_rec_completion.
    
    Solution:
    Check list_empty(&neigh->list) before adding to the list.
    Add a similar fix in "ipoib_multicast.c::ipoib_mcast_send"
    
    Fixes: b63b70d87741 ('IPoIB: Use a private hash table for path lookup in xmit path')
    Signed-off-by: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67851c9381a1795fb089a775f8c0bce5435daa01
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Dec 31 15:33:14 2017 +0200

    IB/mlx4: Fix mlx4_ib_alloc_mr error flow
    
    
    [ Upstream commit 5a371cf87e145b86efd32007e46146e78c1eff6d ]
    
    ibmr.device is being set only after ib_alloc_mr() is successfully complete.
    Therefore, in case imlx4_mr_enable() returns with error, the error flow
    unwinder calls to mlx4_free_priv_pages(), which uses ibmr.device.
    
    Such usage causes to NULL dereference oops and to fix it, the IB device
    should be set in the mr struct earlier stage (e.g. prior to calling
    mlx4_free_priv_pages()).
    
    Fixes: 1b2cd0fc673c ("IB/mlx4: Support the new memory registration API")
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d27ab346384e72f32afbd72b75864bc8ab9675c
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Tue Jan 2 09:39:25 2018 -0800

    Input: xen-kbdfront - do not advertise multi-touch pressure support
    
    
    [ Upstream commit 02a0d9216d4daf6a58d88642bd2da2c78c327552 ]
    
    Some user-space applications expect multi-touch pressure
    on contact to be reported if it is advertised in device
    properties. Otherwise, such applications may treat reports
    not as actual touches, but hovering. Currently this is
    only advertised, but not reported.
    Fix this by not advertising that ABS_MT_PRESSURE is supported.
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Signed-off-by: Andrii Chepurnyi <andrii_chepurnyi@epam.com>
    Patchwork-Id: 10140017
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4132ec352700848531a90524226f7967d61a6809
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 25 14:45:12 2017 +0800

    ip6_tunnel: allow ip6gre dev mtu to be set below 1280
    
    
    [ Upstream commit 2fa771be953a17f8e0a9c39103464c2574444c62 ]
    
    Commit 582442d6d5bc ("ipv6: Allow the MTU of ipip6 tunnel to be set
    below 1280") fixed a mtu setting issue. It works for ipip6 tunnel.
    
    But ip6gre dev updates the mtu also with ip6_tnl_change_mtu. Since
    the inner packet over ip6gre can be ipv4 and it's mtu should also
    be allowed to set below 1280, the same issue also exists on ip6gre.
    
    This patch is to fix it by simply changing to check if parms.proto
    is IPPROTO_IPV6 in ip6_tnl_change_mtu instead, to make ip6gre to
    go to 'else' branch.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4727e485a1dcb43ca0bca62d7d35648a8441c74
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Wed Dec 13 13:50:07 2017 +0200

    btrfs: Fix flush bio leak
    
    
    [ Upstream commit beed9263f4000c48a5c48912f26576f6fa091181 ]
    
    Commit e0ae99941423 ("btrfs: preallocate device flush bio") reworked
    the way the flush bio is allocated and used. Concretely it allocates
    the bio in __alloc_device and then re-uses it multiple times with a
    very simple endio routine that just calls complete() without consuming
    a reference. Allocated bios by default come with a ref count of 1,
    which is then consumed by the endio routine (or not, in which case they
    should be bio_put by the caller). The way the impleementation works now
    is that the flush bio has a refcount of 2 and we only ever bio_put it
    once, leaving it to hang indefinitely. Fix this by removing the extra
    bio_get in __alloc_device.
    
    Fixes: e0ae99941423 ("btrfs: preallocate device flush bio")
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c6652a081394bbd388fdd3ca9fd889775f9890b
Author: Stefan Haberland <sth@linux.vnet.ibm.com>
Date:   Wed Dec 6 10:30:39 2017 +0100

    s390/dasd: fix wrongly assigned configuration data
    
    
    [ Upstream commit 8a9bd4f8ebc6800bfc0596e28631ff6809a2f615 ]
    
    We store per path and per device configuration data to identify the
    path or device correctly. The per path configuration data might get
    mixed up if the original request gets into error recovery and is
    started with a random path mask.
    
    This would lead to a wrong identification of a path in case of a CUIR
    event for example.
    
    Fix by copying the path mask from the original request to the error
    recovery request in case it is a path verification request.
    
    Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 622ded58410c69c821bd5e4b9b5be2dbc0af2c01
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jan 2 10:02:19 2018 +0000

    afs: Fix missing error handling in afs_write_end()
    
    
    [ Upstream commit afae457d874860a7e299d334f59eede5f3ad4b47 ]
    
    afs_write_end() is missing page unlock and put if afs_fill_page() fails.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ebaea9e65d20714120d92bc687bbf57f2f64a94
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Dec 2 09:13:04 2017 -0800

    genirq: Guard handle_bad_irq log messages
    
    
    [ Upstream commit 11bca0a83f83f6093d816295668e74ef24595944 ]
    
    An interrupt storm on a bad interrupt will cause the kernel
    log to be clogged.
    
    [   60.089234] ->handle_irq():  ffffffffbe2f803f,
    [   60.090455] 0xffffffffbf2af380
    [   60.090510] handle_bad_irq+0x0/0x2e5
    [   60.090522] ->irq_data.chip(): ffffffffbf2af380,
    [   60.090553]    IRQ_NOPROBE set
    [   60.090584] ->handle_irq():  ffffffffbe2f803f,
    [   60.090590] handle_bad_irq+0x0/0x2e5
    [   60.090596] ->irq_data.chip(): ffffffffbf2af380,
    [   60.090602] 0xffffffffbf2af380
    [   60.090608] ->action():           (null)
    [   60.090779] handle_bad_irq+0x0/0x2e5
    
    This was seen when running an upstream kernel on Acer Chromebook R11.  The
    system was unstable as result.
    
    Guard the log message with __printk_ratelimit to reduce the impact.  This
    won't prevent the interrupt storm from happening, but at least the system
    remains stable.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dmitry Torokhov <dtor@chromium.org>
    Cc: Joe Perches <joe@perches.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197953
    Link: https://lkml.kernel.org/r/1512234784-21038-1-git-send-email-linux@roeck-us.net
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fd2d40b4667e06087c4df3913e2fec68d9095ba
Author: Nitzan Carmi <nitzanc@mellanox.com>
Date:   Tue Dec 26 11:20:20 2017 +0200

    IB/mlx5: Fix mlx5_ib_alloc_mr error flow
    
    
    [ Upstream commit 45e6ae7ef21b907dacb18da62d5787d74a31d860 ]
    
    ibmr.device is being set only after ib_alloc_mr() is
    (successfully) complete. Therefore, in case mlx5_core_create_mkey()
    return with error, the error flow calls mlx5_free_priv_descs()
    which uses ibmr.device (which doesn't exist yet), causing
    a NULL dereference oops.
    
    To fix this, the IB device should be set in the mr struct earlier
    stage (e.g. prior to calling mlx5_core_create_mkey()).
    
    Fixes: 8a187ee52b04 ("IB/mlx5: Support the new memory registration API")
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2acc885913807ce4f6d21353d4d7525eaeb2c01
Author: Matthieu CASTET <matthieu.castet@parrot.com>
Date:   Tue Dec 12 11:10:44 2017 +0100

    led: core: Fix brightness setting when setting delay_off=0
    
    
    [ Upstream commit 2b83ff96f51d0b039c4561b9f95c824d7bddb85c ]
    
    With the current code, the following sequence won't work :
    echo timer > trigger
    
    echo 0 >  delay_off
    * at this point we call
    ** led_delay_off_store
    ** led_blink_set

commit 6b800ce9ee8452abfbbfe66bf9cdd13f4655e9a3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 27 19:45:31 2017 +0100

    perf/x86/intel: Plug memory leak in intel_pmu_init()
    
    
    [ Upstream commit 7ad1437d6ace0e450a6c1167720608ad660b191d ]
    
    A recent commit introduced an extra merge_attr() call in the skylake
    branch, which causes a memory leak.
    
    Store the pointer to the extra allocated memory and free it at the end of
    the function.
    
    Fixes: a5df70c354c2 ("perf/x86: Only show format attributes when supported")
    Reported-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f4c6c0453057d95ee910e65a0fec248f0cce5b8
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Fri Dec 22 13:01:39 2017 -0200

    bnx2x: Improve reliability in case of nested PCI errors
    
    
    [ Upstream commit f7084059a9cb9e56a186e1677b1dcffd76c2cd24 ]
    
    While in recovery process of PCI error (called EEH on PowerPC arch),
    another PCI transaction could be corrupted causing a situation of
    nested PCI errors. Also, this scenario could be reproduced with
    error injection mechanisms (for debug purposes).
    
    We observe that in case of nested PCI errors, bnx2x might attempt to
    initialize its shmem and cause a kernel crash due to bad addresses
    read from MCP. Multiple different stack traces were observed depending
    on the point the second PCI error happens.
    
    This patch avoids the crashes by:
    
     * failing PCI recovery in case of nested errors (since multiple
     PCI errors in a row are not expected to lead to a functional
     adapter anyway), and by,
    
     * preventing access to adapter FW when MCP is failed (we mark it as
     failed when shmem cannot get initialized properly).
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Acked-by: Shahed Shaikh <Shahed.Shaikh@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f00176d7c5ea0c22c107baece22be1a113c72cd
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:29 2017 +0530

    tg3: Enable PHY reset in MTU change path for 5720
    
    
    [ Upstream commit e60ee41aaf898584205a6af5c996860d0fe6a836 ]
    
    A customer noticed RX path hang when MTU is changed on the fly while
    running heavy traffic with NCSI enabled for 5717 and 5719. Since 5720
    belongs to same ASIC family, we observed same issue and same fix
    could solve this problem for 5720.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c0d89a2733597b57b7f138b5a586f380c881fdc
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:28 2017 +0530

    tg3: Add workaround to restrict 5762 MRRS to 2048
    
    
    [ Upstream commit 4419bb1cedcda0272e1dc410345c5a1d1da0e367 ]
    
    One of AMD based server with 5762 hangs with jumbo frame traffic.
    This AMD platform has southbridge limitation which is restricting MRRS
    to 4000. As a work around, driver to restricts the MRRS to 2048 for
    this particular 5762 NX1 card.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 575650b6566b3e4795e19f3f3f8abb88dca0c12e
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Fri Dec 22 09:35:17 2017 +0200

    tipc: fix tipc_mon_delete() oops in tipc_enable_bearer() error path
    
    
    [ Upstream commit 642a8439ddd8423b92f2e71960afe21ee1f66bb6 ]
    
    Calling tipc_mon_delete() before the monitor has been created will oops.
    This can happen in tipc_enable_bearer() error path if tipc_disc_create()
    fails.
    
    [   48.589074] BUG: unable to handle kernel paging request at 0000000000001008
    [   48.590266] IP: tipc_mon_delete+0xea/0x270 [tipc]
    [   48.591223] PGD 1e60c5067 P4D 1e60c5067 PUD 1eb0cf067 PMD 0
    [   48.592230] Oops: 0000 [#1] SMP KASAN
    [   48.595610] CPU: 5 PID: 1199 Comm: tipc Tainted: G    B            4.15.0-rc4-pc64-dirty #5
    [   48.597176] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-2.fc27 04/01/2014
    [   48.598489] RIP: 0010:tipc_mon_delete+0xea/0x270 [tipc]
    [   48.599347] RSP: 0018:ffff8801d827f668 EFLAGS: 00010282
    [   48.600705] RAX: ffff8801ee813f00 RBX: 0000000000000204 RCX: 0000000000000000
    [   48.602183] RDX: 1ffffffff1de6a75 RSI: 0000000000000297 RDI: 0000000000000297
    [   48.604373] RBP: 0000000000000000 R08: 0000000000000000 R09: fffffbfff1dd1533
    [   48.605607] R10: ffffffff8eafbb05 R11: fffffbfff1dd1534 R12: 0000000000000050
    [   48.607082] R13: dead000000000200 R14: ffffffff8e73f310 R15: 0000000000001020
    [   48.608228] FS:  00007fc686484800(0000) GS:ffff8801f5540000(0000) knlGS:0000000000000000
    [   48.610189] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   48.611459] CR2: 0000000000001008 CR3: 00000001dda70002 CR4: 00000000003606e0
    [   48.612759] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   48.613831] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   48.615038] Call Trace:
    [   48.615635]  tipc_enable_bearer+0x415/0x5e0 [tipc]
    [   48.620623]  tipc_nl_bearer_enable+0x1ab/0x200 [tipc]
    [   48.625118]  genl_family_rcv_msg+0x36b/0x570
    [   48.631233]  genl_rcv_msg+0x5a/0xa0
    [   48.631867]  netlink_rcv_skb+0x1cc/0x220
    [   48.636373]  genl_rcv+0x24/0x40
    [   48.637306]  netlink_unicast+0x29c/0x350
    [   48.639664]  netlink_sendmsg+0x439/0x590
    [   48.642014]  SYSC_sendto+0x199/0x250
    [   48.649912]  do_syscall_64+0xfd/0x2c0
    [   48.650651]  entry_SYSCALL64_slow_path+0x25/0x25
    [   48.651843] RIP: 0033:0x7fc6859848e3
    [   48.652539] RSP: 002b:00007ffd25dff938 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    [   48.654003] RAX: ffffffffffffffda RBX: 00007ffd25dff990 RCX: 00007fc6859848e3
    [   48.655303] RDX: 0000000000000054 RSI: 00007ffd25dff990 RDI: 0000000000000003
    [   48.656512] RBP: 00007ffd25dff980 R08: 00007fc685c35fc0 R09: 000000000000000c
    [   48.657697] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000d13010
    [   48.658840] R13: 00007ffd25e009c0 R14: 0000000000000000 R15: 0000000000000000
    [   48.662972] RIP: tipc_mon_delete+0xea/0x270 [tipc] RSP: ffff8801d827f668
    [   48.664073] CR2: 0000000000001008
    [   48.664576] ---[ end trace e811818d54d5ce88 ]---
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 831923622a595a047573c7ca38cb5d851fd1a87d
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Fri Dec 22 09:35:16 2017 +0200

    tipc: error path leak fixes in tipc_enable_bearer()
    
    
    [ Upstream commit 19142551b2be4a9e13838099fde1351386e5e007 ]
    
    Fix memory leak in tipc_enable_bearer() if enable_media() fails, and
    cleanup with bearer_disable() if tipc_mon_create() fails.
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbc3dbfe4f37d541d57c0acafa8bb463ed178ef5
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Mon Dec 25 11:34:54 2017 +0800

    netfilter: nf_tables: fix potential NULL-ptr deref in nf_tables_dump_obj_done()
    
    
    [ Upstream commit 8bea728dce8972e534e6b99fd550f7b5cc3864e8 ]
    
    If there is no NFTA_OBJ_TABLE and NFTA_OBJ_TYPE, the c.data will be NULL in
    nf_tables_getobj(). So before free filter->table in nf_tables_dump_obj_done(),
    we need to check if filter is NULL first.
    
    Fixes: e46abbcc05aa ("netfilter: nf_tables: Allow table names of up to 255 chars")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdbde4c04c5c63ccf7d91122d39ce0dbea71dbfa
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Mon Dec 11 12:10:57 2017 +0100

    crypto: inside-secure - fix request allocations in invalidation path
    
    
    [ Upstream commit 7cad2fabd5691dbb17762877d4e7f236fe4bc181 ]
    
    This patch makes use of the SKCIPHER_REQUEST_ON_STACK and
    AHASH_REQUEST_ON_STACK helpers to allocate enough memory to contain both
    the crypto request structures and their embedded context (__ctx).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Suggested-by: Ofer Heifetz <oferh@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cc6e8415d23807c06cf74618e9dc890f1ef21e1
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Mon Dec 11 12:10:56 2017 +0100

    crypto: inside-secure - free requests even if their handling failed
    
    
    [ Upstream commit 0a02dcca126280595950f3ea809f77c9cb0a235c ]
    
    This patch frees the request private data even if its handling failed,
    as it would never be freed otherwise.
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Suggested-by: Ofer Heifetz <oferh@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0971f188da94e84d768c37bb10384463aaa003d4
Author: Ofer Heifetz <oferh@marvell.com>
Date:   Mon Dec 11 12:10:55 2017 +0100

    crypto: inside-secure - per request invalidation
    
    
    [ Upstream commit 1eb7b40386c97f6c4d1c62931bf306f4535a4bd6 ]
    
    When an invalidation request is needed we currently override the context
    .send and .handle_result helpers. This is wrong as under high load other
    requests can already be queued and overriding the context helpers will
    make them execute the wrong .send and .handle_result functions.
    
    This commit fixes this by adding a needs_inv flag in the request to
    choose the action to perform when sending requests or handling their
    results. This flag will be set when needed (i.e. when the context flag
    will be set).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Ofer Heifetz <oferh@marvell.com>
    [Antoine: commit message, and removed non related changes from the
    original commit]
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0653ba0580aed7b4718115e97e3856f12fda7505
Author: Bogdan Mirea <Bogdan-Stefan_Mirea@mentor.com>
Date:   Thu Dec 21 17:18:59 2017 +0200

    arm64: dts: renesas: ulcb: Remove renesas, no-ether-link property
    
    
    [ Upstream commit 7d2901f809c110bd9a261e879d59efe62e3bc758 ]
    
    The present change is a bug fix for AVB link iteratively up/down.
    
    Steps to reproduce:
    - start AVB TX stream (Using aplay via MSE),
    - disconnect+reconnect the eth cable,
    - after a reconnection the eth connection goes iteratively up/down
      without user interaction,
    - this may heal after some seconds or even stay for minutes.
    
    As the documentation specifies, the "renesas,no-ether-link" option
    should be used when a board does not provide a proper AVB_LINK signal.
    There is no need for this option enabled on RCAR H3/M3 Salvator-X/XS
    and ULCB starter kits since the AVB_LINK is correctly handled by HW.
    
    Choosing to keep or remove the "renesas,no-ether-link" option will
    have impact on the code flow in the following ways:
    - keeping this option enabled may lead to unexpected behavior since
      the RX & TX are enabled/disabled directly from adjust_link function
      without any HW interrogation,
    - removing this option, the RX & TX will only be enabled/disabled after
      HW interrogation. The HW check is made through the LMON pin in PSR
      register which specifies AVB_LINK signal value (0 - at low level;
      1 - at high level).
    
    In conclusion, the present change is also a safety improvement because
    it removes the "renesas,no-ether-link" option leading to a proper way
    of detecting the link state based on HW interrogation and not on
    software heuristic.
    
    Fixes: dc36965a8905 ("arm64: dts: r8a7796: salvator-x: Enable EthernetAVB")
    Fixes: 6fa501c549aa ("arm64: dts: r8a7795: enable EthernetAVB on Salvator-X")
    Signed-off-by: Bogdan Mirea <Bogdan-Stefan_Mirea@mentor.com>
    Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22d5e20c6a5538ec69b499562299412c1c19291d
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Dec 5 23:31:35 2017 +0000

    lib/mpi: Fix umul_ppmm() for MIPS64r6
    
    
    [ Upstream commit bbc25bee37d2b32cf3a1fab9195b6da3a185614a ]
    
    Current MIPS64r6 toolchains aren't able to generate efficient
    DMULU/DMUHU based code for the C implementation of umul_ppmm(), which
    performs an unsigned 64 x 64 bit multiply and returns the upper and
    lower 64-bit halves of the 128-bit result. Instead it widens the 64-bit
    inputs to 128-bits and emits a __multi3 intrinsic call to perform a 128
    x 128 multiply. This is both inefficient, and it results in a link error
    since we don't include __multi3 in MIPS linux.
    
    For example commit 90a53e4432b1 ("cfg80211: implement regdb signature
    checking") merged in v4.15-rc1 recently broke the 64r6_defconfig and
    64r6el_defconfig builds by indirectly selecting MPILIB. The same build
    errors can be reproduced on older kernels by enabling e.g. CRYPTO_RSA:
    
    lib/mpi/generic_mpih-mul1.o: In function `mpihelp_mul_1':
    lib/mpi/generic_mpih-mul1.c:50: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul2.o: In function `mpihelp_addmul_1':
    lib/mpi/generic_mpih-mul2.c:49: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul3.o: In function `mpihelp_submul_1':
    lib/mpi/generic_mpih-mul3.c:49: undefined reference to `__multi3'
    lib/mpi/mpih-div.o In function `mpihelp_divrem':
    lib/mpi/mpih-div.c:205: undefined reference to `__multi3'
    lib/mpi/mpih-div.c:142: undefined reference to `__multi3'
    
    Therefore add an efficient MIPS64r6 implementation of umul_ppmm() using
    inline assembly and the DMULU/DMUHU instructions, to prevent __multi3
    calls being emitted.
    
    Fixes: 7fd08ca58ae6 ("MIPS: Add build support for the MIPS R6 ISA")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: linux-mips@linux-mips.org
    Cc: linux-crypto@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36d0a678fb25a7bce5bf9b2828c0d9395fa9a990
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Tue Dec 19 10:27:24 2017 +0000

    crypto: af_alg - Fix race around ctx->rcvused by making it atomic_t
    
    
    [ Upstream commit af955bf15d2c27496b0269b1f05c26f758c68314 ]
    
    This variable was increased and decreased without any protection.
    Result was an occasional misscount and negative wrap around resulting
    in false resource allocation failures.
    
    Fixes: 7d2c3f54e6f6 ("crypto: af_alg - remove locking in async callback")
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99b329b4611a17df15e7122fdf4bbfb8a1245d67
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 21 22:35:19 2017 +0100

    ARM: dts: ls1021a: fix incorrect clock references
    
    
    [ Upstream commit 506e8a912661c97b41adc8a286b875d01323ec45 ]
    
    dtc warns about two 'clocks' properties that have an extraneous '1'
    at the end:
    
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a:clocks[1])
    Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2190000/sgtl5000@a
    arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2190000/sgtl5000@a:clocks[1])
    
    The clocks that get referenced here are fixed-rate, so they do not
    take any argument, and dtc interprets the next cell as a phandle, which
    is invalid.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8164587e5262d106891fc97c1fa2c4342c7d6c94
Author: Bryan Tan <bryantan@vmware.com>
Date:   Wed Dec 20 09:49:03 2017 -0800

    RDMA/vmw_pvrdma: Call ib_umem_release on destroy QP path
    
    
    [ Upstream commit 17748056ce123ee37fb7382bc698fc721e3c4a09 ]
    
    The QP cleanup did not previously call ib_umem_release,
    resulting in a user-triggerable kernel resource leak.
    
    Fixes: 29c8d9eba550 ("IB: Add vmw_pvrdma driver")
    Reviewed-by: Adit Ranadive <aditr@vmware.com>
    Reviewed-by: Aditya Sarwade <asarwade@vmware.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Bryan Tan <bryantan@vmware.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 831c169c9bacec777ec210cd34575016ef2b6338
Author: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
Date:   Tue Dec 19 22:24:10 2017 -0200

    i915: Reject CCS modifiers for pipe C on Geminilake
    
    
    [ Upstream commit 8bc0d7ac934b6f2d0dc8f38a3104d281c9db1e98 ]
    
    Current code advertises (on the modifiers blob property) support for CCS
    modifier for pipe C on GLK, only to reject it later when validating the
    request before the atomic commit.
    
    This fixes the tests igt@kms_ccs@pipe-c-*, which should skip on GLK for
    pipe C (see bug 104096).
    
    A relevant discussion is archived at:
    
    https://lists.freedesktop.org/archives/intel-gfx/2017-December/150646.html
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=104096
    Signed-off-by: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Cc: Ben Widawsky <ben@bwidawsk.net>
    Reviewed-by: Ben Widawsky <ben@bwidawsk.net>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171220002410.5604-1-krisman@collabora.co.uk
    (cherry picked from commit f0cbd8bd877f3d8c5b80a6b1add9ca9010d7f9d8)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a5c84b1055a1882992de51f1b2bb5b0989cbbf6
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Dec 20 12:08:33 2017 +0100

    netfilter: uapi: correct UNTRACKED conntrack state bit number
    
    
    [ Upstream commit 4c82fd0abb87e20d0d68ef5237e74732352806c8 ]
    
    nft_ct exposes this bit to userspace.  This used to be
    
      #define NF_CT_STATE_UNTRACKED_BIT              (1 << (IP_CT_NUMBER + 1))
      (IP_CT_NUMBER is 5, so this was 0x40)
    
    .. but this got changed to 8 (0x100) when the untracked object got removed.
    Replace this with a literal 6 to prevent further incompatible changes
    in case IP_CT_NUMBER ever increases.
    
    Fixes: cc41c84b7e7f2 ("netfilter: kill the fake untracked conntrack objects")
    Reported-by: Li Shuang <shuali@redhat.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7b0385937fa163b8d8e68f38d90938143ef4feb
Author: Cathy Avery <cavery@redhat.com>
Date:   Tue Dec 19 13:32:48 2017 -0500

    scsi: storvsc: Fix scsi_cmd error assignments in storvsc_handle_error
    
    
    [ Upstream commit d1b8b2391c24751e44f618fcf86fb55d9a9247fd ]
    
    When an I/O is returned with an srb_status of SRB_STATUS_INVALID_LUN
    which has zero good_bytes it must be assigned an error. Otherwise the
    I/O will be continuously requeued and will cause a deadlock in the case
    where disks are being hot added and removed. sd_probe_async will wait
    forever for its I/O to complete while holding scsi_sd_probe_domain.
    
    Also returning the default error of DID_TARGET_FAILURE causes multipath
    to not retry the I/O resulting in applications receiving I/O errors
    before a failover can occur.
    
    Signed-off-by: Cathy Avery <cavery@redhat.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2f52fa3f8d6fa949afebbb4dc24f71bc0785803
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Dec 19 12:01:21 2017 +0100

    netfilter: nf_tables: fix chain filter in nf_tables_dump_rules()
    
    
    [ Upstream commit 24c0df82ef7919e4d10cf2e4e65d368eb2e8ea21 ]
    
    ctx->chain may be null now that we have very large object names,
    so we cannot check for ctx->chain[0] here.
    
    Fixes: b7263e071aba7 ("netfilter: nf_tables: Allow table names of up to 255 chars")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit def8d0ae4ac9a1dd9fb6e8a7ffe6aadf2893d848
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Tue Dec 12 15:08:21 2017 -0500

    xen/balloon: Mark unallocated host memory as UNUSABLE
    
    
    [ Upstream commit b3cf8528bb21febb650a7ecbf080d0647be40b9f ]
    
    Commit f5775e0b6116 ("x86/xen: discard RAM regions above the maximum
    reservation") left host memory not assigned to dom0 as available for
    memory hotplug.
    
    Unfortunately this also meant that those regions could be used by
    others. Specifically, commit fa564ad96366 ("x86/PCI: Enable a 64bit BAR
    on AMD Family 15h (Models 00-1f, 30-3f, 60-7f)") may try to map those
    addresses as MMIO.
    
    To prevent this mark unallocated host memory as E820_TYPE_UNUSABLE (thus
    effectively reverting f5775e0b6116) and keep track of that region as
    a hostmem resource that can be used for the hotplug.
    
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caca324f93736279bece65d54b6efe394d6e00d6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Dec 20 06:11:59 2017 +0000

    ASoC: rsnd: fixup ADG register mask
    
    
    [ Upstream commit d5aa24825da5711f8cb829f873160ddf1a29b19c ]
    
    BRGCKR should use 0x80770000, instead of 0x80FF0000.
    
    R-Car Gen2 xxx_TIMSEL should use 0x0F1F,
    R-Car Gen3 xxx_TIMSEL should use 0x1F1F.
    Here, Gen3 doesn't support AVD, thus, both case can use 0x0F1F.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43da2bcade2a05e0aef0ab26a879f9c9c246aa7d
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Mon Dec 4 15:23:51 2017 +0200

    net/mlx5: Stay in polling mode when command EQ destroy fails
    
    
    [ Upstream commit a2fba188fd5eadd6061bef4f2f2577a43231ebf3 ]
    
    During unload, on mlx5_stop_eqs we move command interface from events
    mode to polling mode, but if command interface EQ destroy fail we move
    back to events mode.
    That's wrong since even if we fail to destroy command interface EQ, we
    do release its irq, so no interrupts will be received.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2cfb1c664c31dc692736800c71b2a78ca0af1f7
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Tue Nov 21 15:15:51 2017 +0200

    net/mlx5: Cleanup IRQs in case of unload failure
    
    
    [ Upstream commit d6b2785cd55ee72e9608762650b3ef299f801b1b ]
    
    When mlx5_stop_eqs fails to destroy any of the eqs it returns with an error.
    In such failure flow the function will return without
    releasing all EQs irqs and then pci_free_irq_vectors will fail.
    Fix by only warn on destroy EQ failure and continue to release other
    EQs and their irqs.
    
    It fixes the following kernel trace:
    kernel: kernel BUG at drivers/pci/msi.c:352!
    ...
    ...
    kernel: Call Trace:
    kernel: pci_disable_msix+0xd3/0x100
    kernel: pci_free_irq_vectors+0xe/0x20
    kernel: mlx5_load_one.isra.17+0x9f5/0xec0 [mlx5_core]
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a472c21129100a3dbb6c77485876280d7729259
Author: Huy Nguyen <huyn@mellanox.com>
Date:   Thu Oct 26 09:56:34 2017 -0500

    net/mlx5e: Fix ETS BW check
    
    
    [ Upstream commit ff0891915cd7b24ab27eee9b360c0452853bf9f6 ]
    
    Fix bug that allows ets bw sum to be 0% when ets tc type exists.
    
    Fixes: 08fb1dacdd76 ('net/mlx5e: Support DCBNL IEEE ETS')
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Reviewed-by: Huy Nguyen <huyn@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11be1c24a60d31004d797bc976522be34ae233ed
Author: Fredrik Hallenberg <megahallon@gmail.com>
Date:   Mon Dec 18 23:34:00 2017 +0100

    net: stmmac: Fix bad RX timestamp extraction
    
    
    [ Upstream commit a1762456993893795030d911106a7650481db0ef ]
    
    As noted in dwmac4_wrback_get_rx_timestamp_status the timestamp is found
    in the context descriptor following the current descriptor. However the
    current code looks for the context descriptor in the current
    descriptor, which will always fail.
    
    Signed-off-by: Fredrik Hallenberg <megahallon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06dcd2d77a0108b82d4131aa76333d94b66c6cfc
Author: Fredrik Hallenberg <megahallon@gmail.com>
Date:   Mon Dec 18 23:33:59 2017 +0100

    net: stmmac: Fix TX timestamp calculation
    
    
    [ Upstream commit 200922c93f008e03ddc804c6dacdf26ca1ba86d7 ]
    
    When using GMAC4 the value written in PTP_SSIR should be shifted however
    the shifted value is also used in subsequent calculations which results
    in a bad timestamp value.
    
    Signed-off-by: Fredrik Hallenberg <megahallon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eeac1d10a1bd21ec210e77b9f3b08d2dc7e1d1f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:26:21 2017 +0800

    ip6_tunnel: get the min mtu properly in ip6_tnl_xmit
    
    
    [ Upstream commit c9fefa08190fc879fb2e681035d7774e0a8c5170 ]
    
    Now it's using IPV6_MIN_MTU as the min mtu in ip6_tnl_xmit, but
    IPV6_MIN_MTU actually only works when the inner packet is ipv6.
    
    With IPV6_MIN_MTU for ipv4 packets, the new pmtu for inner dst
    couldn't be set less than 1280. It would cause tx_err and the
    packet to be dropped when the outer dst pmtu is close to 1280.
    
    Jianlin found it by running ipv4 traffic with the topo:
    
      (client) gre6 <---> eth1 (route) eth2 <---> gre6 (server)
    
    After changing eth2 mtu to 1300, the performance became very
    low, or the connection was even broken. The issue also affects
    ip4ip6 and ip6ip6 tunnels.
    
    So if the inner packet is ipv4, 576 should be considered as the
    min mtu.
    
    Note that for ip4ip6 and ip6ip6 tunnels, the inner packet can
    only be ipv4 or ipv6, but for gre6 tunnel, it may also be ARP.
    This patch using 576 as the min mtu for non-ipv6 packet works
    for all those cases.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dc4cbcfb5f2b43656283835c564eeae1951bf4d
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:25:09 2017 +0800

    ip6_gre: remove the incorrect mtu limit for ipgre tap
    
    
    [ Upstream commit 2c52129a7d74d017320804c6928de770815c5f4a ]
    
    The same fix as the patch "ip_gre: remove the incorrect mtu limit for
    ipgre tap" is also needed for ip6_gre.
    
    Fixes: 61e84623ace3 ("net: centralize net_device min/max MTU checking")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 212ea3380bbb9f3915f2f7677cd0eae825711a94
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:24:35 2017 +0800

    ip_gre: remove the incorrect mtu limit for ipgre tap
    
    
    [ Upstream commit cfddd4c33c254954927942599d299b3865743146 ]
    
    ipgre tap driver calls ether_setup(), after commit 61e84623ace3
    ("net: centralize net_device min/max MTU checking"), the range
    of mtu is [min_mtu, max_mtu], which is [68, 1500] by default.
    
    It causes the dev mtu of the ipgre tap device to not be greater
    than 1500, this limit value is not correct for ipgre tap device.
    
    Besides, it's .change_mtu already does the right check. So this
    patch is just to set max_mtu as 0, and leave the check to it's
    .change_mtu.
    
    Fixes: 61e84623ace3 ("net: centralize net_device min/max MTU checking")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4699beb7712768c38d009301a2d20f1f1e567294
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:20:56 2017 +0800

    vxlan: update skb dst pmtu on tx path
    
    
    [ Upstream commit a93bf0ff449064e6b7f44e58522e940f88c0d966 ]
    
    Unlike ip tunnels, now vxlan doesn't do any pmtu update for
    upper dst pmtu, even if it doesn't match the lower dst pmtu
    any more.
    
    The problem can be reproduced when reducing the vxlan lower
    dev's pmtu when running netperf. In jianlin's testing, the
    performance went to 1/7 of the previous.
    
    This patch is to update the upper dst pmtu to match the lower
    dst pmtu on tx path so that packets can be sent out even when
    lower dev's pmtu has been changed.
    
    It also works for metadata dst.
    
    Note that this patch doesn't process any pmtu icmp packet.
    But even in the future, the support for pmtu icmp packets
    process of udp tunnels will also needs this.
    
    The same thing will be done for geneve in another patch.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26e6b9f0be83ae820d603bd1cfc6fdc77ea23193
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Fri Dec 15 20:20:06 2017 +0300

    net: arc_emac: fix arc_emac_rx() error paths
    
    
    [ Upstream commit e688822d035b494071ecbadcccbd6f3325fb0f59 ]
    
    arc_emac_rx() has some issues found by code review.
    
    In case netdev_alloc_skb_ip_align() or dma_map_single() failure
    rx fifo entry will not be returned to EMAC.
    
    In case dma_map_single() failure previously allocated skb became
    lost to driver. At the same time address of newly allocated skb
    will not be provided to EMAC.
    
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b72f8c448eceb2d0a683362f4a6f05b6f30c093
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Mon Dec 18 17:00:17 2017 +0800

    net: mediatek: setup proper state for disabled GMAC on the default
    
    
    [ Upstream commit 7352e252b5bf40d59342494a70354a2d436fd0cd ]
    
    The current solution would setup fixed and force link of 1Gbps to the both
    GMAC on the default. However, The GMAC should always be put to link down
    state when the GMAC is disabled on certain target boards. Otherwise,
    the driver possibly receives unexpected data from the floating hardware
    connection through the unused GMAC. Although the driver had been added
    certain protection in RX path to get rid of such kind of unexpected data
    sent to the upper stack.
    
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7f40ff40061bbf45a32a38100c4bddc0ab56840
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Dec 18 09:37:45 2017 -0700

    x86-64/Xen: eliminate W+X mappings
    
    
    [ Upstream commit 2cc42bac1c795f75fcc062b95c6ca7ac1b84d5d8 ]
    
    A few thousand such pages are usually left around due to the re-use of
    L1 tables having been provided by the hypervisor (Dom0) or tool stack
    (DomU). Set NX in the direct map variant, which needs to be done in L2
    due to the dual use of the re-used L1s.
    
    For x86_configure_nx() to actually do what it is supposed to do, call
    get_cpu_cap() first. This was broken by commit 4763ed4d45 ("x86, mm:
    Clean up and simplify NX enablement") when switching away from the
    direct EFER read.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54c153a0847bb13bf9f4131c7acfc8059461b597
Author: John Stultz <john.stultz@linaro.org>
Date:   Fri Dec 15 19:59:47 2017 -0800

    staging: ion: Fix ion_cma_heap allocations
    
    
    [ Upstream commit f292b9b28097d8fe870336108e91bd95a14294bf ]
    
    In trying to add support for drm_hwcomposer to HiKey,
    I've needed to utilize the ION CMA heap, and I've noticed
    problems with allocations on newer kernels failing.
    
    It seems back with 204f672255c2 ("ion: Use CMA APIs directly"),
    the ion_cma_heap code was modified to use the CMA API, but
    kept the arguments as buffer lengths rather then number of pages.
    
    This results in errors as we don't have enough pages in CMA to
    satisfy the exaggerated requests.
    
    This patch converts the ion_cma_heap CMA API usage to properly
    request pages.
    
    It also fixes a minor issue in the allocation where in the error
    path, the cma_release is called with the buffer->size value which
    hasn't yet been set.
    
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Archit Taneja <architt@codeaurora.org>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Dmitry Shmidt <dimitrysh@google.com>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Fixes: 204f672255c2 ("staging: android: ion: Use CMA APIs directly")
    Acked-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d61a373f4344abf10418fa1d41e41f64c82403e9
Author: Prateek Sood <prsood@codeaurora.org>
Date:   Tue Dec 19 12:56:57 2017 +0530

    cgroup: Fix deadlock in cpu hotplug path
    
    
    [ Upstream commit 116d2f7496c51b2e02e8e4ecdd2bdf5fb9d5a641 ]
    
    Deadlock during cgroup migration from cpu hotplug path when a task T is
    being moved from source to destination cgroup.
    
    kworker/0:0
    cpuset_hotplug_workfn()
       cpuset_hotplug_update_tasks()
          hotplug_update_tasks_legacy()
            remove_tasks_in_empty_cpuset()
              cgroup_transfer_tasks() // stuck in iterator loop
                cgroup_migrate()
                  cgroup_migrate_add_task()
    
    In cgroup_migrate_add_task() it checks for PF_EXITING flag of task T.
    Task T will not migrate to destination cgroup. css_task_iter_start()
    will keep pointing to task T in loop waiting for task T cg_list node
    to be removed.
    
    Task T
    do_exit()
      exit_signals() // sets PF_EXITING
      exit_task_namespaces()
        switch_task_namespaces()
          free_nsproxy()
            put_mnt_ns()
              drop_collected_mounts()
                namespace_unlock()
                  synchronize_rcu()
                    _synchronize_rcu_expedited()
                      schedule_work() // on cpu0 low priority worker pool
                      wait_event() // waiting for work item to execute
    
    Task T inserted a work item in the worklist of cpu0 low priority
    worker pool. It is waiting for expedited grace period work item
    to execute. This work item will only be executed once kworker/0:0
    complete execution of cpuset_hotplug_workfn().
    
    kworker/0:0 ==> Task T ==>kworker/0:0
    
    In case of PF_EXITING task being migrated from source to destination
    cgroup, migrate next available task in source cgroup.
    
    Signed-off-by: Prateek Sood <prsood@codeaurora.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56d80186a5ac8af22dc583f9db043a1a0c54c435
Author: Abhijeet Kumar <abhijeet.kumar@intel.com>
Date:   Tue Dec 12 00:40:25 2017 +0530

    ASoC: nau8825: fix issue that pop noise when start capture
    
    
    [ Upstream commit d070f7c703ef26e3db613f24206823f916272fc6 ]
    
    In skylake platform, we hear a loud pop noise(0 dB) at start of
    audio capture power up sequence. This patch removes the pop noise
    from the recording by adding a delay before enabling ADC.
    
    Signed-off-by: Abhijeet Kumar <abhijeet.kumar@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cf652bedcb9acd5491715adc7996f35d33c409a
Author: Radu Pirea <radu.pirea@microchip.com>
Date:   Fri Dec 15 17:40:17 2017 +0200

    spi: atmel: fixed spin_lock usage inside atmel_spi_remove
    
    
    [ Upstream commit 66e900a3d225575c8b48b59ae1fe74bb6e5a65cc ]
    
    The only part of atmel_spi_remove which needs to be atomic is hardware
    reset.
    
    atmel_spi_stop_dma calls dma_terminate_all and this needs interrupts
    enabled.
    atmel_spi_release_dma calls dma_release_channel and dma_release_channel
    locks a mutex inside of spin_lock.
    
    So the call of these functions can't be inside a spin_lock.
    
    Reported-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Radu Pirea <radu.pirea@microchip.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a63f35cd70fd2fdfdf148b1896d2659c5aa3ed
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Tue Dec 12 17:26:36 2017 +0800

    mac80211_hwsim: Fix a possible sleep-in-atomic bug in hwsim_get_radio_nl
    
    
    [ Upstream commit 162bd5e5fd921785077b5862d8f2ffabe2fe11e5 ]
    
    The driver may sleep under a spinlock.
    The function call path is:
    hwsim_get_radio_nl (acquire the spinlock)
      nlmsg_new(GFP_KERNEL) --> may sleep
    
    To fix it, GFP_KERNEL is replaced with GFP_ATOMIC.
    
    This bug is found by my static analysis tool(DSAC) and checked by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 647ed111f78ffc7fe6bd654c615ddbd013e2c44a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Dec 18 15:13:44 2017 -0600

    x86/stacktrace: Make zombie stack traces reliable
    
    
    [ Upstream commit 6454b3bdd138dfc640deb5e7b9a0668fca2d55dd ]
    
    Commit:
    
      1959a60182f4 ("x86/dumpstack: Pin the target stack when dumping it")
    
    changed the behavior of stack traces for zombies.  Before that commit,
    /proc/<pid>/stack reported the last execution path of the zombie before
    it died:
    
      [<ffffffff8105b877>] do_exit+0x6f7/0xa80
      [<ffffffff8105bc79>] do_group_exit+0x39/0xa0
      [<ffffffff8105bcf0>] __wake_up_parent+0x0/0x30
      [<ffffffff8152dd09>] system_call_fastpath+0x16/0x1b
      [<00007fd128f9c4f9>] 0x7fd128f9c4f9
      [<ffffffffffffffff>] 0xffffffffffffffff
    
    After the commit, it just reports an empty stack trace.
    
    The new behavior is actually probably more correct.  If the stack
    refcount has gone down to zero, then the task has already gone through
    do_exit() and isn't going to run anymore.  The stack could be freed at
    any time and is basically gone, so reporting an empty stack makes sense.
    
    However, save_stack_trace_tsk_reliable() treats such a missing stack
    condition as an error.  That can cause livepatch transition stalls if
    there are any unreaped zombies.  Instead, just treat it as a reliable,
    empty stack.
    
    Reported-and-tested-by: Miroslav Benes <mbenes@suse.cz>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: live-patching@vger.kernel.org
    Fixes: af085d9084b4 ("stacktrace/x86: add function for detecting reliable stack traces")
    Link: http://lkml.kernel.org/r/e4b09e630e99d0c1080528f0821fc9d9dbaeea82.1513631620.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e095ecaec6d94aa2156cceb98a85d409b51190f3
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Dec 15 16:40:44 2017 +1100

    xfrm: Reinject transport-mode packets through tasklet
    
    
    [ Upstream commit acf568ee859f098279eadf551612f103afdacb4e ]
    
    This is an old bugbear of mine:
    
    https://www.mail-archive.com/netdev@vger.kernel.org/msg03894.html
    
    By crafting special packets, it is possible to cause recursion
    in our kernel when processing transport-mode packets at levels
    that are only limited by packet size.
    
    The easiest one is with DNAT, but an even worse one is where
    UDP encapsulation is used in which case you just have to insert
    an UDP encapsulation header in between each level of recursion.
    
    This patch avoids this problem by reinjecting tranport-mode packets
    through a tasklet.
    
    Fixes: b05e106698d9 ("[IPV4/6]: Netfilter IPsec input hooks")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e677319068b07f7f00154e83a96b2501709e6dab
Author: Karol Herbst <kherbst@redhat.com>
Date:   Fri Nov 24 03:56:26 2017 +0100

    drm/nouveau/pci: do a msi rearm on init
    
    
    [ Upstream commit a121027d2747168df0aac0c3da35509eea39f61c ]
    
    On my GP107 when I load nouveau after unloading it, for some reason the
    GPU stopped sending or the CPU stopped receiving interrupts if MSI was
    enabled.
    
    Doing a rearm once before getting any interrupts fixes this.
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b9aeeb6070e5f618089e2f6cb7a1c1e352177ab
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Dec 16 00:52:39 2017 +0300

    net: phy: xgene: disable clk on error paths
    
    
    [ Upstream commit ab14436065c8066c265540312742390d6d07ddd2 ]
    
    There are several error paths in xgene_mdio_probe(),
    where clk is left undisabled. The patch fixes them.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac4dc9f1af33538ba475484b1dcb95bbbcef41a6
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Dec 18 15:05:07 2017 -0500

    sget(): handle failures of register_shrinker()
    
    
    [ Upstream commit 9ee332d99e4d5a97548943b81c54668450ce641b ]
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60f1c1f279925a5c3b68edc303c275ae50451c4b
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:07:25 2017 +0800

    sctp: fix the issue that a __u16 variable may overflow in sctp_ulpq_renege
    
    
    [ Upstream commit 5c468674d17056148da06218d4da5d04baf22eac ]
    
    Now when reneging events in sctp_ulpq_renege(), the variable freed
    could be increased by a __u16 value twice while freed is of __u16
    type. It means freed may overflow at the second addition.
    
    This patch is to fix it by using __u32 type for 'freed', while at
    it, also to remove 'if (chunk)' check, as all renege commands are
    generated in sctp_eat_data and it can't be NULL.
    
    Reported-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8b8dd735938be43afa6a2b6a9ea8c43441bcc09
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Dec 4 13:08:47 2017 -0300

    x86/asm: Allow again using asm.h when building for the 'bpf' clang target
    
    
    [ Upstream commit ca26cffa4e4aaeb09bb9e308f95c7835cb149248 ]
    
    Up to f5caf621ee35 ("x86/asm: Fix inline asm call constraints for Clang")
    we were able to use x86 headers to build to the 'bpf' clang target, as
    done by the BPF code in tools/perf/.
    
    With that commit, we ended up with following failure for 'perf test LLVM', this
    is because "clang ... -target bpf ..." fails since 4.0 does not have bpf inline
    asm support and 6.0 does not recognize the register 'esp', fix it by guarding
    that part with an #ifndef __BPF__, that is defined by clang when building to
    the "bpf" target.
    
      # perf test -v LLVM
      37: LLVM search and compile                               :
      37.1: Basic BPF llvm compile                              :
      --- start ---
      test child forked, pid 25526
      Kernel build dir is set to /lib/modules/4.14.0+/build
      set env: KBUILD_DIR=/lib/modules/4.14.0+/build
      unset env: KBUILD_OPTS
      include option is set to  -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: NR_CPUS=4
      set env: LINUX_VERSION_CODE=0x40e00
      set env: CLANG_EXEC=/usr/local/bin/clang
      set env: CLANG_OPTIONS=-xc
      set env: KERNEL_INC_OPTIONS= -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: WORKING_DIR=/lib/modules/4.14.0+/build
      set env: CLANG_SOURCE=-
      llvm compiling command template: echo '/*
       * bpf-script-example.c
       * Test basic LLVM building
       */
      #ifndef LINUX_VERSION_CODE
      # error Need LINUX_VERSION_CODE
      # error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
      #endif
      #define BPF_ANY 0
      #define BPF_MAP_TYPE_ARRAY 2
      #define BPF_FUNC_map_lookup_elem 1
      #define BPF_FUNC_map_update_elem 2
    
      static void *(*bpf_map_lookup_elem)(void *map, void *key) =
              (void *) BPF_FUNC_map_lookup_elem;
      static void *(*bpf_map_update_elem)(void *map, void *key, void *value, int flags) =
              (void *) BPF_FUNC_map_update_elem;
    
      struct bpf_map_def {
              unsigned int type;
              unsigned int key_size;
              unsigned int value_size;
              unsigned int max_entries;
      };
    
      #define SEC(NAME) __attribute__((section(NAME), used))
      struct bpf_map_def SEC("maps") flip_table = {
              .type = BPF_MAP_TYPE_ARRAY,
              .key_size = sizeof(int),
              .value_size = sizeof(int),
              .max_entries = 1,
      };
    
      SEC("func=SyS_epoll_wait")
      int bpf_func__SyS_epoll_wait(void *ctx)
      {
              int ind =0;
              int *flag = bpf_map_lookup_elem(&flip_table, &ind);
              int new_flag;
              if (!flag)
                      return 0;
              /* flip flag and store back */
              new_flag = !*flag;
              bpf_map_update_elem(&flip_table, &ind, &new_flag, BPF_ANY);
              return new_flag;
      }
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      ' | $CLANG_EXEC -D__KERNEL__ -D__NR_CPUS__=$NR_CPUS -DLINUX_VERSION_CODE=$LINUX_VERSION_CODE $CLANG_OPTIONS $KERNEL_INC_OPTIONS -Wno-unused-value -Wno-pointer-sign -working-directory $WORKING_DIR -c "$CLANG_SOURCE" -target bpf -O2 -o -
      test child finished with 0
      ---- end ----
      LLVM search and compile subtest 0: Ok
      37.2: kbuild searching                                    :
      --- start ---
      test child forked, pid 25950
      Kernel build dir is set to /lib/modules/4.14.0+/build
      set env: KBUILD_DIR=/lib/modules/4.14.0+/build
      unset env: KBUILD_OPTS
      include option is set to  -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: NR_CPUS=4
      set env: LINUX_VERSION_CODE=0x40e00
      set env: CLANG_EXEC=/usr/local/bin/clang
      set env: CLANG_OPTIONS=-xc
      set env: KERNEL_INC_OPTIONS= -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: WORKING_DIR=/lib/modules/4.14.0+/build
      set env: CLANG_SOURCE=-
      llvm compiling command template: echo '/*
       * bpf-script-test-kbuild.c
       * Test include from kernel header
       */
      #ifndef LINUX_VERSION_CODE
      # error Need LINUX_VERSION_CODE
      # error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
      #endif
      #define SEC(NAME) __attribute__((section(NAME), used))
    
      #include <uapi/linux/fs.h>
      #include <uapi/asm/ptrace.h>
    
      SEC("func=vfs_llseek")
      int bpf_func__vfs_llseek(void *ctx)
      {
              return 0;
      }
    
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      ' | $CLANG_EXEC -D__KERNEL__ -D__NR_CPUS__=$NR_CPUS -DLINUX_VERSION_CODE=$LINUX_VERSION_CODE $CLANG_OPTIONS $KERNEL_INC_OPTIONS -Wno-unused-value -Wno-pointer-sign -working-directory $WORKING_DIR -c "$CLANG_SOURCE" -target bpf -O2 -o -
      In file included from <stdin>:12:
      In file included from /home/acme/git/linux/arch/x86/include/uapi/asm/ptrace.h:5:
      In file included from /home/acme/git/linux/include/linux/compiler.h:242:
      In file included from /home/acme/git/linux/arch/x86/include/asm/barrier.h:5:
      In file included from /home/acme/git/linux/arch/x86/include/asm/alternative.h:10:
      /home/acme/git/linux/arch/x86/include/asm/asm.h:145:50: error: unknown register name 'esp' in asm
      register unsigned long current_stack_pointer asm(_ASM_SP);
                                                       ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:44:18: note: expanded from macro '_ASM_SP'
      #define _ASM_SP         __ASM_REG(sp)
                              ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:27:32: note: expanded from macro '__ASM_REG'
      #define __ASM_REG(reg)         __ASM_SEL_RAW(e##reg, r##reg)
                                     ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:18:29: note: expanded from macro '__ASM_SEL_RAW'
      # define __ASM_SEL_RAW(a,b) __ASM_FORM_RAW(a)
                                  ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:11:32: note: expanded from macro '__ASM_FORM_RAW'
      # define __ASM_FORM_RAW(x)     #x
                                     ^
      <scratch space>:4:1: note: expanded from here
      "esp"
      ^
      1 error generated.
      ERROR:        unable to compile -
      Hint: Check error message shown above.
      Hint: You can also pre-compile it into .o using:
                      clang -target bpf -O2 -c -
              with proper -I and -D options.
      Failed to compile test case: 'kbuild searching'
      test child finished with -1
      ---- end ----
      LLVM search and compile subtest 1: FAILED!
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Dmitriy Vyukov <dvyukov@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: Yonghong Song <yhs@fb.com>
    Link: https://lkml.kernel.org/r/20171128175948.GL3298@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba9443c55f36079cb61fb7bc4913766e9a519585
Author: Chunyan Zhang <zhang.lyra@gmail.com>
Date:   Fri Dec 1 03:51:04 2017 +0100

    ARM: 8731/1: Fix csum_partial_copy_from_user() stack mismatch
    
    
    [ Upstream commit 36b0cb84ee858f02c256d26f0cb4229c78e3399e ]
    
    An additional 'ip' will be pushed to the stack, for restoring the
    DACR later, if CONFIG_CPU_SW_DOMAIN_PAN defined.
    
    However, the fixup still get the err_ptr by add #8*4 to sp, which
    results in the fact that the code area pointed by the LR will be
    overwritten, or the kernel will crash if CONFIG_DEBUG_RODATA is enabled.
    
    This patch fixes the stack mismatch.
    
    Fixes: a5e090acbf54 ("ARM: software-based priviledged-no-access support")
    Signed-off-by: Lvqiang Huang <Lvqiang.Huang@spreadtrum.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae3471f65a04451f3670cbde6c59e384cca44dc8
Author: John David Anglin <dave.anglin@bell.net>
Date:   Mon Nov 13 19:35:33 2017 -0500

    parisc: Reduce thread stack to 16 kb
    
    
    [ Upstream commit da57c5414f49ef9e4bcb9ae0bbafd1d650b31411 ]
    
    In testing, I found that the thread stack can be 16 kB when using an irq
    stack.  Without it, the thread stack needs to be 32 kB. Currently, the irq
    stack is 32 kB. While it probably could be 16 kB, I would prefer to leave it
    as is for safety.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b2e0f0996197d7816f241b565f41ad77d403918
Author: Brendan McGrath <redmcg@redmandi.dyndns.org>
Date:   Wed Dec 13 22:14:57 2017 +1100

    ipv6: icmp6: Allow icmp messages to be looped back
    
    
    [ Upstream commit 588753f1eb18978512b1c9b85fddb457d46f9033 ]
    
    One example of when an ICMPv6 packet is required to be looped back is
    when a host acts as both a Multicast Listener and a Multicast Router.
    
    A Multicast Router will listen on address ff02::16 for MLDv2 messages.
    
    Currently, MLDv2 messages originating from a Multicast Listener running
    on the same host as the Multicast Router are not being delivered to the
    Multicast Router. This is due to dst.input being assigned the default
    value of dst_discard.
    
    This results in the packet being looped back but discarded before being
    delivered to the Multicast Router.
    
    This patch sets dst.input to ip6_input to ensure a looped back packet
    is delivered to the Multicast Router.
    
    Signed-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6de1b002a29f86982b8662941ad97eec0741d3f8
Author: Albert Hsieh <wen.hsieh@broadcom.com>
Date:   Mon Nov 20 11:26:26 2017 +0800

    mtd: nand: brcmnand: Zero bitflip is not an error
    
    
    [ Upstream commit e44b9a9c135727f3410e029910275f40681dc8bc ]
    
    A negative return value of brcmstb_nand_verify_erased_page() indicates a
    real bitflip error of an erased page, and other return values (>= 0) show
    the corrected bitflip number. Zero return value means no bitflip, but the
    current driver code treats it as an error, and eventually leads to
    falsely reported ECC error.
    
    Fixes: 02b88eea9f9c ("mtd: brcmnand: Add check for erased page bitflip")
    Signed-off-by: Albert Hsieh <wen.hsieh@broadcom.com>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f485259011ad644d91a7ccc40bfaaafea72974f9
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Dec 5 11:51:40 2017 +0100

    mtd: nand: gpmi: Fix failure when a erased page has a bitflip at BBM
    
    
    [ Upstream commit fdf2e821052958a114618a95ab18a300d0b080cb ]
    
    When erased subpages are read then the BCH decoder returns STATUS_ERASED
    if they are all empty, or STATUS_UNCORRECTABLE if there are bitflips.
    When there are bitflips, we have to set these bits again to show the
    upper layers a completely erased page. When a bitflip happens in the
    exact byte where the bad block marker is, then this byte is swapped
    with another byte in block_mark_swapping(). The correction code then
    detects a bitflip in another subpage and no longer corrects the bitflip
    where it really happens.
    
    Correct this behaviour by calling block_mark_swapping() after the
    bitflips have been corrected.
    
    In our case UBIFS failed with this bug because it expects erased
    pages to be really empty:
    
    UBIFS error (pid 187): ubifs_scan: corrupt empty space at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: corruption at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: first 8192 bytes from LEB 36:118735
    UBIFS error (pid 187): ubifs_scan: LEB 36 scanning failed
    UBIFS error (pid 187): do_commit: commit failed, error -117
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14862bfbffd90fd11b21273a7ef2778054c0ec1e
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Dec 14 16:56:14 2017 +0100

    net: usb: qmi_wwan: add Telit ME910 PID 0x1101 support
    
    
    [ Upstream commit c647c0d62c82eb3ddf78a0d8b3d58819d9f552aa ]
    
    This patch adds support for Telit ME910 PID 0x1101.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 043309fb5106c3fe9a45cd0637517b661d9dac61
Author: Igor Russkikh <igor.russkikh@aquantia.com>
Date:   Thu Dec 14 12:34:41 2017 +0300

    net: aquantia: Fix hardware DMA stream overload on large MRRS
    
    
    [ Upstream commit 1e366161510f266516107a69db91f1f2edaea11c ]
    
    Systems with large MRRS on device (2K, 4K) with high data rates and/or
    large MTU, atlantic observes DMA packet buffer overflow. On some systems
    that causes PCIe transaction errors, hardware NMIs or datapath freeze.
    This patch
    1) Limits MRRS from device side to 2K (thats maximum our hardware supports)
    2) Limit maximum size of outstanding TX DMA data read requests. This makes
    hardware buffers running fine.
    
    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>
    Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dabd233b757d11cb7dc7d76b3e5abd623ee437c9
Author: Igor Russkikh <igor.russkikh@aquantia.com>
Date:   Thu Dec 14 12:34:40 2017 +0300

    net: aquantia: Fix actual speed capabilities reporting
    
    
    [ Upstream commit e4d02ca04c6d48ab2226342a1c4ed54f1dbb72bd ]
    
    Different hardware device Ids correspond to different maximum speed
    available. Extra checks were added for devices D108 and D109 to
    remove unsupported speeds from these device capabilities list.
    
    Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbd047ffcccf07f1c24f96f8dd23add065c9cdbe
Author: Keith Busch <keith.busch@intel.com>
Date:   Thu Dec 14 11:20:14 2017 -0700

    nvme: check hw sectors before setting chunk sectors
    
    
    [ Upstream commit 249159c5f15812140fa216f9997d799ac0023a1f ]
    
    Some devices with IDs matching the "stripe" quirk don't actually have
    this quirk, and don't have an MDTS value. When MDTS is not set, the
    driver sets the max sectors to UINT_MAX, which is not a power of 2,
    hitting a BUG_ON from blk_queue_chunk_sectors. This patch skips setting
    chunk sectors for such devices.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1aef5ce2abef719d1881bd22e0e875cca8f7b6f
Author: James Smart <jsmart2021@gmail.com>
Date:   Wed Nov 29 15:11:37 2017 -0800

    nvme-fc: remove double put reference if admin connect fails
    
    
    [ Upstream commit 4596e752db02d47038cd7c965419789ab15d1985 ]
    
    There are two put references in the failure case of initial
    create_association. The first put actually frees the controller, thus the
    second put references freed memory.
    
    Remove the unnecessary 2nd put.
    
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d9f6272917815f5ac5821ab6163045e74903f0d
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Fri Nov 17 16:55:35 2017 +0530

    phy: cpcap-usb: Fix platform_get_irq_byname's error checking.
    
    
    [ Upstream commit e796cc6a3a9186c92092e2f5929cf8f65b56cf01 ]
    
    The platform_get_irq_byname() function returns negative if an error occurs.
    zero or positive number on success. platform_get_irq_byname() error
    checking for zero is not correct.
    
    Fixes: 6d6ce40f63af ("phy: cpcap-usb: Add CPCAP PMIC USB support")
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 959f6a0906d56ee0ea95862bce6bfae2bbc8a717
Author: Andreas Platschek <andreas.platschek@opentech.at>
Date:   Thu Dec 14 12:50:51 2017 +0100

    dmaengine: fsl-edma: disable clks on all error paths
    
    
    [ Upstream commit 2610acf46b9ed528ec2cacd717bc9d354e452b73 ]
    
    Previously enabled clks are only disabled if clk_prepare_enable() fails.
    However, there are other error paths were the previously enabled
    clocks are not disabled.
    
    To fix the problem, fsl_disable_clocks() now takes the number of clocks
    that shall be disabled + unprepared. For existing calls were all clocks
    were already successfully prepared + enabled, DMAMUX_NR is passed to
    disable + unprepare all clocks.
    
    In error paths were only some clocks were successfully prepared +
    enabled the loop counter is passed, in order to disable + unprepare
    all successfully prepared + enabled clocks.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Andreas Platschek <andreas.platschek@opentech.at>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cfa95893cbb1a7615385b2b66effc754aae9e6e
Author: Prasad B Munirathnam <prasad.munirathnam@microsemi.com>
Date:   Tue Dec 12 11:40:10 2017 -0800

    scsi: aacraid: Fix I/O drop during reset
    
    
    [ Upstream commit 5771cfffdffe709ae9b403b6f80438ca40bf850e ]
    
    "FIB_CONTEXT_FLAG_TIMEDOUT" flag is set in aac_eh_abort to indicate
    command timeout. Using the same flag in reset handler causes the command
    to time out and the I/Os were dropped.
    
    Define a new flag "FIB_CONTEXT_FLAG_EH_RESET" to make sure I/O is
    properly handled in eh_reset handler.
    
    [mkp: tweaked commit message]
    
    Signed-off-by: Prasad B Munirathnam <prasad.munirathnam@microsemi.com>
    Reviewed-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 647a37ec1a17c2710103d948a748f21453aabf21
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Dec 14 15:33:08 2017 -0800

    mm/frame_vector.c: release a semaphore in 'get_vaddr_frames()'
    
    
    [ Upstream commit 1f704fd0d14043e76e80f6b8b2251b9b2cedcca6 ]
    
    A semaphore is acquired before this check, so we must release it before
    leaving.
    
    Link: http://lkml.kernel.org/r/20171211211009.4971-1-christophe.jaillet@wanadoo.fr
    Fixes: b7f0554a56f2 ("mm: fail get_vaddr_frames() for filesystem-dax mappings")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: David Sterba <dsterba@suse.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7edaa9afb923dff77e173de2f3954bbbdd19d9d3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 14 15:32:41 2017 -0800

    exec: avoid gcc-8 warning for get_task_comm
    
    
    [ Upstream commit 3756f6401c302617c5e091081ca4d26ab604bec5 ]
    
    gcc-8 warns about using strncpy() with the source size as the limit:
    
      fs/exec.c:1223:32: error: argument to 'sizeof' in 'strncpy' call is the same expression as the source; did you mean to use the size of the destination? [-Werror=sizeof-pointer-memaccess]
    
    This is indeed slightly suspicious, as it protects us from source
    arguments without NUL-termination, but does not guarantee that the
    destination is terminated.
    
    This keeps the strncpy() to ensure we have properly padded target
    buffer, but ensures that we use the correct length, by passing the
    actual length of the destination buffer as well as adding a build-time
    check to ensure it is exactly TASK_COMM_LEN.
    
    There are only 23 callsites which I all reviewed to ensure this is
    currently the case.  We could get away with doing only the check or
    passing the right length, but it doesn't hurt to do both.
    
    Link: http://lkml.kernel.org/r/20171205151724.1764896-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Serge Hallyn <serge@hallyn.com>
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: Aleksa Sarai <asarai@suse.de>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Frederic Weisbecker <frederic@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f92679fee6ad1a13c8e82cf1f5769cef27343f78
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Thu Dec 21 11:41:35 2017 +0100

    hrtimer: Ensure POSIX compliance (relative CLOCK_REALTIME hrtimers)
    
    commit 48d0c9becc7f3c66874c100c126459a9da0fdced upstream.
    
    The POSIX specification defines that relative CLOCK_REALTIME timers are not
    affected by clock modifications. Those timers have to use CLOCK_MONOTONIC
    to ensure POSIX compliance.
    
    The introduction of the additional HRTIMER_MODE_PINNED mode broke this
    requirement for pinned timers.
    
    There is no user space visible impact because user space timers are not
    using pinned mode, but for consistency reasons this needs to be fixed.
    
    Check whether the mode has the HRTIMER_MODE_REL bit set instead of
    comparing with HRTIMER_MODE_ABS.
    
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: keescook@chromium.org
    Fixes: 597d0275736d ("timers: Framework for identifying pinned timers")
    Link: http://lkml.kernel.org/r/20171221104205.7269-7-anna-maria@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
