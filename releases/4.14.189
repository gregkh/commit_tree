commit 69b94dd6dcd14d9bfcba35a492f5e27c15cf4d0a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 22 09:22:29 2020 +0200

    Linux 4.14.189

commit 98f593aeade9298bcd44baa79f197716c515b1bf
Author: David Howells <dhowells@redhat.com>
Date:   Wed Jun 17 22:50:33 2020 +0100

    rxrpc: Fix trace string
    
    commit aadf9dcef9d4cd68c73a4ab934f93319c4becc47 upstream.
    
    The trace symbol printer (__print_symbolic()) ignores symbols that map to
    an empty string and prints the hex value instead.
    
    Fix the symbol for rxrpc_cong_no_change to " -" instead of "" to avoid
    this.
    
    Fixes: b54a134a7de4 ("rxrpc: Fix handling of enums-to-string translation in tracing")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 476f9cdeef69b024ed7e8f6060533bf2e04e03ef
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Tue Jun 9 11:57:56 2020 +0200

    libceph: don't omit recovery_deletes in target_copy()
    
    commit 2f3fead62144002557f322c2a7c15e1255df0653 upstream.
    
    Currently target_copy() is used only for sending linger pings, so
    this doesn't come up, but generally omitting recovery_deletes can
    result in unneeded resends (force_resend in calc_target()).
    
    Fixes: ae78dd8139ce ("libceph: make RECOVERY_DELETES feature create a new interval")
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d66595f01a434e1c794fae235aa3cbd11f52f44f
Author: Suraj Jitindar Singh <surajjs@amazon.com>
Date:   Tue Jul 14 22:05:28 2020 +0000

    x86/cpu: Move x86_cache_bits settings
    
    This patch is to fix the backport of the upstream patch:
    cc51e5428ea5 x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+
    
    When this was backported to the 4.9 and 4.14 stable branches the line
    +       c->x86_cache_bits = c->x86_phys_bits;
    was applied in the wrong place, being added to the
    identify_cpu_without_cpuid() function instead of the get_cpu_cap()
    function which it was correctly applied to in the 4.4 backport.
    
    This means that x86_cache_bits is not set correctly resulting in the
    following warning due to the cache bits being left uninitalised (zero).
    
     WARNING: CPU: 0 PID: 7566 at arch/x86/kvm/mmu.c:284 kvm_mmu_set_mmio_spte_mask+0x4e/0x60 [kvm
     Modules linked in: kvm_intel(+) kvm irqbypass ipv6 crc_ccitt binfmt_misc evdev lpc_ich mfd_core ioatdma pcc_cpufreq dca ena acpi_power_meter hwmon acpi_pad button ext4 crc16 mbcache jbd2 fscrypto nvme nvme_core dm_mirror dm_region_hash dm_log dm_mod dax
     Hardware name: Amazon EC2 i3.metal/Not Specified, BIOS 1.0 10/16/2017
     task: ffff88ff77704c00 task.stack: ffffc9000edac000
     RIP: 0010:kvm_mmu_set_mmio_spte_mask+0x4e/0x60 [kvm
     RSP: 0018:ffffc9000edafc60 EFLAGS: 00010206
     RAX: 0000000000000000 RBX: 0000000000000000 RCX: 00000000ffffff45
     RDX: 000000000000002e RSI: 0008000000000001 RDI: 0008000000000001
     RBP: ffffffffa036f000 R08: ffffffffffffff80 R09: ffffe8ffffccb3c0
     R10: 0000000000000038 R11: 0000000000000000 R12: 0000000000005b80
     R13: ffffffffa0370e40 R14: 0000000000000001 R15: ffff88bf7c0927e0
     FS:  00007fa316f24740(0000) GS:ffff88bf7f600000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007fa316ea0000 CR3: 0000003f7e986004 CR4: 00000000003606f0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      kvm_mmu_module_init+0x166/0x230 [kvm
      kvm_arch_init+0x5d/0x150 [kvm
      kvm_init+0x1c/0x2d0 [kvm
      ? hardware_setup+0x4a6/0x4a6 [kvm_intel
      vmx_init+0x23/0x6aa [kvm_intel
      ? hardware_setup+0x4a6/0x4a6 [kvm_intel
      do_one_initcall+0x3e/0x15d
      do_init_module+0x5b/0x1e5
      load_module+0x19e6/0x1dc0
      ? SYSC_init_module+0x13b/0x170
      SYSC_init_module+0x13b/0x170
      do_syscall_64+0x67/0x110
      entry_SYSCALL_64_after_hwframe+0x41/0xa6
     RIP: 0033:0x7fa316828f3a
     RSP: 002b:00007ffc9d65c1f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000af
     RAX: ffffffffffffffda RBX: 00007fa316b08849 RCX: 00007fa316828f3a
     RDX: 00007fa316b08849 RSI: 0000000000071328 RDI: 00007fa316e37000
     RBP: 0000000000b47e80 R08: 0000000000000003 R09: 0000000000000000
     R10: 00007fa316822dba R11: 0000000000000246 R12: 0000000000b46340
     R13: 0000000000b464c0 R14: 0000000000000000 R15: 0000000000040000
     Code: e9 65 06 00 75 25 48 b8 00 00 00 00 00 00 00 40 48 09 c6 48 09 c7 48 89 35 f8 65 06 00 48 89 3d f9 65 06 00 c3 0f 0b 0f 0b eb d2 <0f> 0b eb d7 0f 1f 40 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44
    
    Fixes: 4.9.x  ef3d45c95764 x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+
    Fixes: 4.14.x ec4034835eaf x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+
    Cc: stable@vger.kernel.org # 4.9.x-4.14.x
    Signed-off-by: Suraj Jitindar Singh <surajjs@amazon.com>
    Reviewed-by: Samuel Mendoza-Jonas <samjonas@amazon.com>
    Reviewed-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 731faecd5aeeaeae34d35daf130397eeacdd9fb1
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Fri Jul 10 17:24:26 2020 +0200

    sched/fair: handle case of task_h_load() returning 0
    
    commit 01cfcde9c26d8555f0e6e9aea9d6049f87683998 upstream.
    
    task_h_load() can return 0 in some situations like running stress-ng
    mmapfork, which forks thousands of threads, in a sched group on a 224 cores
    system. The load balance doesn't handle this correctly because
    env->imbalance never decreases and it will stop pulling tasks only after
    reaching loop_max, which can be equal to the number of running tasks of
    the cfs. Make sure that imbalance will be decreased by at least 1.
    
    misfit task is the other feature that doesn't handle correctly such
    situation although it's probably more difficult to face the problem
    because of the smaller number of CPUs and running tasks on heterogenous
    system.
    
    We can't simply ensure that task_h_load() returns at least one because it
    would imply to handle underflow in other places.
    
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Tested-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Cc: <stable@vger.kernel.org> # v4.4+
    Link: https://lkml.kernel.org/r/20200710152426.16981-1-vincent.guittot@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26ea911c0e78fa9d2b304b8d7bc93040c36212d8
Author: Will Deacon <will@kernel.org>
Date:   Thu Feb 13 12:06:26 2020 +0000

    arm64: ptrace: Override SPSR.SS when single-stepping is enabled
    
    commit 3a5a4366cecc25daa300b9a9174f7fdd352b9068 upstream.
    
    Luis reports that, when reverse debugging with GDB, single-step does not
    function as expected on arm64:
    
      | I've noticed, under very specific conditions, that a PTRACE_SINGLESTEP
      | request by GDB won't execute the underlying instruction. As a consequence,
      | the PC doesn't move, but we return a SIGTRAP just like we would for a
      | regular successful PTRACE_SINGLESTEP request.
    
    The underlying problem is that when the CPU register state is restored
    as part of a reverse step, the SPSR.SS bit is cleared and so the hardware
    single-step state can transition to the "active-pending" state, causing
    an unexpected step exception to be taken immediately if a step operation
    is attempted.
    
    In hindsight, we probably shouldn't have exposed SPSR.SS in the pstate
    accessible by the GPR regset, but it's a bit late for that now. Instead,
    simply prevent userspace from configuring the bit to a value which is
    inconsistent with the TIF_SINGLESTEP state for the task being traced.
    
    Cc: <stable@vger.kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Keno Fischer <keno@juliacomputing.com>
    Link: https://lore.kernel.org/r/1eed6d69-d53d-9657-1fc9-c089be07f98c@linaro.org
    Reported-by: Luis Machado <luis.machado@linaro.org>
    Tested-by: Luis Machado <luis.machado@linaro.org>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39e0651cac9c80865b2838f297f95ffc0f34a1d8
Author: Finley Xiao <finley.xiao@rock-chips.com>
Date:   Fri Jun 19 17:08:25 2020 +0800

    thermal/drivers/cpufreq_cooling: Fix wrong frequency converted from power
    
    commit 371a3bc79c11b707d7a1b7a2c938dc3cc042fffb upstream.
    
    The function cpu_power_to_freq is used to find a frequency and set the
    cooling device to consume at most the power to be converted. For example,
    if the power to be converted is 80mW, and the em table is as follow.
    struct em_cap_state table[] = {
            /* KHz     mW */
            { 1008000, 36, 0 },
            { 1200000, 49, 0 },
            { 1296000, 59, 0 },
            { 1416000, 72, 0 },
            { 1512000, 86, 0 },
    };
    The target frequency should be 1416000KHz, not 1512000KHz.
    
    Fixes: 349d39dc5739 ("thermal: cpu_cooling: merge frequency and power tables")
    Cc: <stable@vger.kernel.org> # v4.13+
    Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200619090825.32747-1-finley.xiao@rock-chips.com
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22a0ac3f0ae86dc2a5eace0b92ca8bef58106ba4
Author: Michał Mirosław <mirq-linux@rere.qmqm.pl>
Date:   Wed Jun 24 13:35:41 2020 +0200

    misc: atmel-ssc: lock with mutex instead of spinlock
    
    commit b037d60a3b1d1227609fd858fa34321f41829911 upstream.
    
    Uninterruptible context is not needed in the driver and causes lockdep
    warning because of mutex taken in of_alias_get_id(). Convert the lock to
    mutex to avoid the issue.
    
    Cc: stable@vger.kernel.org
    Fixes: 099343c64e16 ("ARM: at91: atmel-ssc: add device tree support")
    Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Link: https://lore.kernel.org/r/50f0d7fa107f318296afb49477c3571e4d6978c5.1592998403.git.mirq-linux@rere.qmqm.pl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba824d375a098d80d10f987d1c511673ef5d2c69
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Jun 11 14:17:41 2020 +0200

    dmaengine: fsl-edma: Fix NULL pointer exception in fsl_edma_tx_handler
    
    commit f5e5677c420346b4e9788051c2e4d750996c428c upstream.
    
    NULL pointer exception happens occasionally on serial output initiated
    by login timeout.  This was reproduced only if kernel was built with
    significant debugging options and EDMA driver is used with serial
    console.
    
        col-vf50 login: root
        Password:
        Login timed out after 60 seconds.
        Unable to handle kernel NULL pointer dereference at virtual address 00000044
        Internal error: Oops: 5 [#1] ARM
        CPU: 0 PID: 157 Comm: login Not tainted 5.7.0-next-20200610-dirty #4
        Hardware name: Freescale Vybrid VF5xx/VF6xx (Device Tree)
          (fsl_edma_tx_handler) from [<8016eb10>] (__handle_irq_event_percpu+0x64/0x304)
          (__handle_irq_event_percpu) from [<8016eddc>] (handle_irq_event_percpu+0x2c/0x7c)
          (handle_irq_event_percpu) from [<8016ee64>] (handle_irq_event+0x38/0x5c)
          (handle_irq_event) from [<801729e4>] (handle_fasteoi_irq+0xa4/0x160)
          (handle_fasteoi_irq) from [<8016ddcc>] (generic_handle_irq+0x34/0x44)
          (generic_handle_irq) from [<8016e40c>] (__handle_domain_irq+0x54/0xa8)
          (__handle_domain_irq) from [<80508bc8>] (gic_handle_irq+0x4c/0x80)
          (gic_handle_irq) from [<80100af0>] (__irq_svc+0x70/0x98)
        Exception stack(0x8459fe80 to 0x8459fec8)
        fe80: 72286b00 e3359f64 00000001 0000412d a0070013 85c98840 85c98840 a0070013
        fea0: 8054e0d4 00000000 00000002 00000000 00000002 8459fed0 8081fbe8 8081fbec
        fec0: 60070013 ffffffff
          (__irq_svc) from [<8081fbec>] (_raw_spin_unlock_irqrestore+0x30/0x58)
          (_raw_spin_unlock_irqrestore) from [<8056cb48>] (uart_flush_buffer+0x88/0xf8)
          (uart_flush_buffer) from [<80554e60>] (tty_ldisc_hangup+0x38/0x1ac)
          (tty_ldisc_hangup) from [<8054c7f4>] (__tty_hangup+0x158/0x2bc)
          (__tty_hangup) from [<80557b90>] (disassociate_ctty.part.1+0x30/0x23c)
          (disassociate_ctty.part.1) from [<8011fc18>] (do_exit+0x580/0xba0)
          (do_exit) from [<801214f8>] (do_group_exit+0x3c/0xb4)
          (do_group_exit) from [<80121580>] (__wake_up_parent+0x0/0x14)
    
    Issue looks like race condition between interrupt handler fsl_edma_tx_handler()
    (called as result of fsl_edma_xfer_desc()) and terminating the transfer with
    fsl_edma_terminate_all().
    
    The fsl_edma_tx_handler() handles interrupt for a transfer with already freed
    edesc and idle==true.
    
    Fixes: d6be34fbd39b ("dma: Add Freescale eDMA engine driver support")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Reviewed-by: Robin Gong <yibin.gong@nxp.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1591877861-28156-2-git-send-email-krzk@kernel.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d9549a2e42b2abb7592b765ff878cd652d30864
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Mon Jul 6 19:13:38 2020 +0300

    intel_th: pci: Add Emmitsburg PCH support
    
    commit fd73d74a32bfaaf259441322cc5a1c83caaa94f2 upstream.
    
    This adds support for the Trace Hub in Emmitsburg PCH.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lore.kernel.org/r/20200706161339.55468-4-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 769ddb9357e773a2a1de2c647a727324cb355065
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Mon Jul 6 19:13:37 2020 +0300

    intel_th: pci: Add Tiger Lake PCH-H support
    
    commit 6227585dc7b6a5405fc08dc322f98cb95e2f0eb4 upstream.
    
    This adds support for the Trace Hub in Tiger Lake PCH-H.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lore.kernel.org/r/20200706161339.55468-3-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91ea4f8d7b0111b0101021c0e1c93f4a61875bbb
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Mon Jul 6 19:13:36 2020 +0300

    intel_th: pci: Add Jasper Lake CPU support
    
    commit 203c1f615052921901b7a8fbe2005d8ea6add076 upstream.
    
    This adds support for the Trace Hub in Jasper Lake CPU.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lore.kernel.org/r/20200706161339.55468-2-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65c5f9648f86d680d34e0baf663a1f26aa1aca6c
Author: Vishwas M <vishwas.reddy.vr@gmail.com>
Date:   Tue Jul 7 19:57:47 2020 +0530

    hwmon: (emc2103) fix unable to change fan pwm1_enable attribute
    
    commit 14b0e83dc4f1e52b94acaeb85a18fd7fdd46d2dc upstream.
    
    This patch fixes a bug which does not let FAN mode to be changed from
    sysfs(pwm1_enable). i.e pwm1_enable can not be set to 3, it will always
    remain at 0.
    
    This is caused because the device driver handles the result of
    "read_u8_from_i2c(client, REG_FAN_CONF1, &conf_reg)" incorrectly. The
    driver thinks an error has occurred if the (result != 0). This has been
    fixed by changing the condition to (result < 0).
    
    Signed-off-by: Vishwas M <vishwas.reddy.vr@gmail.com>
    Link: https://lore.kernel.org/r/20200707142747.118414-1-vishwas.reddy.vr@gmail.com
    Fixes: 9df7305b5a86 ("hwmon: Add driver for SMSC EMC2103 temperature monitor and fan controller")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02a6eaa973e68b80d9ac16f2a7cefe16595a5407
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Jul 16 17:39:29 2020 +0800

    MIPS: Fix build for LTS kernel caused by backporting lpj adjustment
    
    Commit ed26aacfb5f71eecb20a ("mips: Add udelay lpj numbers adjustment")
    has backported to 4.4~5.4, but the "struct cpufreq_freqs" (and also the
    cpufreq notifier machanism) of 4.4~4.19 are different from the upstream
    kernel. These differences cause build errors, and this patch can fix the
    build.
    
    Cc: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Cc: Stable <stable@vger.kernel.org> # 4.4/4.9/4.14/4.19
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d6cc0e9def4a27178dde54c13ad532910893eb6
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri Jul 17 16:05:40 2020 +0200

    timer: Fix wheel index calculation on last level
    
    commit e2a71bdea81690b6ef11f4368261ec6f5b6891aa upstream.
    
    When an expiration delta falls into the last level of the wheel, that delta
    has be compared against the maximum possible delay and reduced to fit in if
    necessary.
    
    However instead of comparing the delta against the maximum, the code
    compares the actual expiry against the maximum. Then instead of fixing the
    delta to fit in, it sets the maximum delta as the expiry value.
    
    This can result in various undesired outcomes, the worst possible one
    being a timer expiring 15 days ahead to fire immediately.
    
    Fixes: 500462a9de65 ("timers: Switch to a non-cascading wheel")
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20200717140551.29076-2-frederic@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ef1216a9ed682fe1a02bdc8694d83711022d158
Author: Esben Haabendal <esben@geanix.com>
Date:   Wed Jul 1 16:56:58 2020 +0200

    uio_pdrv_genirq: fix use without device tree and no interrupt
    
    commit bf12fdf0ab728ca8e5933aac46dd972c0dd0421e upstream.
    
    While e3a3c3a20555 ("UIO: fix uio_pdrv_genirq with device tree but no
    interrupt") added support for using uio_pdrv_genirq for devices without
    interrupt for device tree platforms, the removal of uio_pdrv in
    26dac3c49d56 ("uio: Remove uio_pdrv and use uio_pdrv_genirq instead")
    broke the support for non device tree platforms.
    
    This change fixes this, so that uio_pdrv_genirq can be used without
    interrupt on all platforms.
    
    This still leaves the support that uio_pdrv had for custom interrupt
    handler lacking, as uio_pdrv_genirq does not handle it (yet).
    
    Fixes: 26dac3c49d56 ("uio: Remove uio_pdrv and use uio_pdrv_genirq instead")
    Signed-off-by: Esben Haabendal <esben@geanix.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200701145659.3978-3-esben@geanix.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3cf4f5cc6090b87f8add03768121f7a72f8fcb9
Author: David Pedersen <limero1337@gmail.com>
Date:   Mon Jul 6 18:48:51 2020 -0700

    Input: i8042 - add Lenovo XiaoXin Air 12 to i8042 nomux list
    
    commit 17d51429da722cd8fc77a365a112f008abf4f8b3 upstream.
    
    This fixes two finger trackpad scroll on the Lenovo XiaoXin Air 12.
    Without nomux, the trackpad behaves as if only one finger is present and
    moves the cursor when trying to scroll.
    
    Signed-off-by: David Pedersen <limero1337@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200625133754.291325-1-limero1337@gmail.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e184d12ac03b8432e7c68afdcd68fa95e1050bb
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Mon Jun 29 01:53:59 2020 +0300

    mei: bus: don't clean driver pointer
    
    commit e852c2c251ed9c23ae6e3efebc5ec49adb504207 upstream.
    
    It's not needed to set driver to NULL in mei_cl_device_remove()
    which is bus_type remove() handler as this is done anyway
    in __device_release_driver().
    
    Actually this is causing an endless loop in driver_detach()
    on ubuntu patched kernel, while removing (rmmod) the mei_hdcp module.
    The reason list_empty(&drv->p->klist_devices.k_list) is always not-empty.
    as the check is always true in  __device_release_driver()
            if (dev->driver != drv)
                    return;
    
    The non upstream patch is causing this behavior, titled:
    'vfio -- release device lock before userspace requests'
    
    Nevertheless the fix is correct also for the upstream.
    
    Link: https://patchwork.ozlabs.org/project/ubuntu-kernel/patch/20180912085046.3401-2-apw@canonical.com/
    Cc: <stable@vger.kernel.org>
    Cc: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20200628225359.2185929-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cd9ec70b9f6431fc3e60075c01bc00f08c5606b
Author: Wade Mealing <wmealing@redhat.com>
Date:   Wed Jun 17 13:49:47 2020 +0200

    Revert "zram: convert remaining CLASS_ATTR() to CLASS_ATTR_RO()"
    
    commit 853eab68afc80f59f36bbdeb715e5c88c501e680 upstream.
    
    Turns out that the permissions for 0400 really are what we want here,
    otherwise any user can read from this file.
    
    [fixed formatting, added changelog, and made attribute static - gregkh]
    
    Reported-by: Wade Mealing <wmealing@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Fixes: f40609d1591f ("zram: convert remaining CLASS_ATTR() to CLASS_ATTR_RO()")
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=1847832
    Reviewed-by: Steffen Maier <maier@linux.ibm.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Link: https://lore.kernel.org/r/20200617114946.GA2131650@kroah.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5612e29ba167709da72d2fb1e111b0a66b884659
Author: Chirantan Ekbote <chirantan@chromium.org>
Date:   Tue Jul 14 19:26:39 2020 +0900

    fuse: Fix parameter for FS_IOC_{GET,SET}FLAGS
    
    commit 31070f6ccec09f3bd4f1e28cd1e592fa4f3ba0b6 upstream.
    
    The ioctl encoding for this parameter is a long but the documentation says
    it should be an int and the kernel drivers expect it to be an int.  If the
    fuse driver treats this as a long it might end up scribbling over the stack
    of a userspace process that only allocated enough space for an int.
    
    This was previously discussed in [1] and a patch for fuse was proposed in
    [2].  From what I can tell the patch in [2] was nacked in favor of adding
    new, "fixed" ioctls and using those from userspace.  However there is still
    no "fixed" version of these ioctls and the fact is that it's sometimes
    infeasible to change all userspace to use the new one.
    
    Handling the ioctls specially in the fuse driver seems like the most
    pragmatic way for fuse servers to support them without causing crashes in
    userspace applications that call them.
    
    [1]: https://lore.kernel.org/linux-fsdevel/20131126200559.GH20559@hall.aurel32.net/T/
    [2]: https://sourceforge.net/p/fuse/mailman/message/31771759/
    
    Signed-off-by: Chirantan Ekbote <chirantan@chromium.org>
    Fixes: 59efec7b9039 ("fuse: implement ioctl support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57fb09c5bc3cefef8045670956af8082bb4f81a9
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Tue Jun 23 11:09:33 2020 +0000

    virtio: virtio_console: add missing MODULE_DEVICE_TABLE() for rproc serial
    
    commit 897c44f0bae574c5fb318c759b060bebf9dd6013 upstream.
    
    rproc_serial_id_table lacks an exposure to module devicetable, so
    when remoteproc firmware requests VIRTIO_ID_RPROC_SERIAL, no uevent
    is generated and no module autoloading occurs.
    Add missing MODULE_DEVICE_TABLE() annotation and move the existing
    one for VIRTIO_ID_CONSOLE right to the table itself.
    
    Fixes: 1b6370463e88 ("virtio_console: Add support for remoteproc serial")
    Cc: <stable@vger.kernel.org> # v3.8+
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Reviewed-by: Amit Shah <amit@kernel.org>
    Link: https://lore.kernel.org/r/x7C_CbeJtoGMy258nwAXASYz3xgFMFpyzmUvOyZzRnQrgWCREBjaqBOpAUS7ol4NnZYvSVwmTsCG0Ohyfvta-ygw6HMHcoeKK0C3QFiAO_Q=@pm.me
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92ac080ba3009e4c8f5aecb93cb1f16aa5cb8cb6
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Tue Jul 7 16:15:53 2020 +0800

    USB: serial: option: add Quectel EG95 LTE modem
    
    commit da6902e5b6dbca9081e3d377f9802d4fd0c5ea59 upstream.
    
    Add support for Quectel Wireless Solutions Co., Ltd. EG95 LTE modem
    
    T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  5 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0195 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41a9ae0b57160bff8de6e8f2779a4cc1a542c1b3
Author: Jörgen Storvist <jorgen.storvist@gmail.com>
Date:   Tue Jun 23 00:13:59 2020 +0200

    USB: serial: option: add GosunCn GM500 series
    
    commit 08d4ef5cc9203a113702f24725f6cf4db476c958 upstream.
    
    Add USB IDs for GosunCn GM500 series cellular modules.
    
    RNDIS config:
    usb-devices
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 12 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=305a ProdID=1404 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    S:  SerialNumber=
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=e0(wlcon) Sub=01 Prot=03 Driver=rndis_host
    I:  If#=0x1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=rndis_host
    I:  If#=0x2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    
    MBIM config:
    usb-devices
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 11 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=305a ProdID=1405 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    S:  SerialNumber=
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x4 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    
    ECM config:
    usb-devices
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 13 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=305a ProdID=1406 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    S:  SerialNumber=
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 1 Cls=02(commc) Sub=06 Prot=00 Driver=cdc_ether
    I:  If#=0x4 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=cdc_ether
    
    Signed-off-by: Jörgen Storvist <jorgen.storvist@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81b43218a5895681468b3743dfc4fd91cc8f5d2a
Author: Igor Moura <imphilippini@gmail.com>
Date:   Tue Jun 23 05:11:11 2020 -0300

    USB: serial: ch341: add new Product ID for CH340
    
    commit 5d0136f8e79f8287e6a36780601f0ce797cf11c2 upstream.
    
    Add PID for CH340 that's found on some ESP8266 dev boards made by
    LilyGO. The specific device that contains such serial converter can be
    seen here: https://github.com/LilyGO/LILYGO-T-OI.
    
    Apparently, it's a regular CH340, but I've confirmed with others that
    also bought this board that the PID found on this device (0x7522)
    differs from other devices with the "same" converter (0x7523).
    Simply adding its PID to the driver and rebuilding it made it work
    as expected.
    
    Signed-off-by: Igor Moura <imphilippini@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3992656af19eb2272c396c39e5bb59b086eaf491
Author: James Hilliard <james.hilliard1@gmail.com>
Date:   Tue Jun 16 16:04:03 2020 -0600

    USB: serial: cypress_m8: enable Simply Automated UPB PIM
    
    commit 5c45d04c5081c1830d674f4d22d4400ea2083afe upstream.
    
    This is a UPB (Universal Powerline Bus) PIM (Powerline Interface Module)
    which allows for controlling multiple UPB compatible devices from Linux
    using the standard serial interface.
    
    Based on vendor application source code there are two different models
    of USB based PIM devices in addition to a number of RS232 based PIM's.
    
    The vendor UPB application source contains the following USB ID's:
    
            #define USB_PCS_VENDOR_ID 0x04b4
            #define USB_PCS_PIM_PRODUCT_ID 0x5500
    
            #define USB_SAI_VENDOR_ID 0x17dd
            #define USB_SAI_PIM_PRODUCT_ID 0x5500
    
    The first set of ID's correspond to the PIM variant sold by Powerline
    Control Systems while the second corresponds to the Simply Automated
    Incorporated PIM. As the product ID for both of these match the default
    cypress HID->COM RS232 product ID it assumed that they both use an
    internal variant of this HID->COM RS232 converter hardware. However
    as the vendor ID for the Simply Automated variant is different we need
    to also add it to the cypress_M8 driver so that it is properly
    detected.
    
    Signed-off-by: James Hilliard <james.hilliard1@gmail.com>
    Link: https://lore.kernel.org/r/20200616220403.1807003-1-james.hilliard1@gmail.com
    Cc: stable@vger.kernel.org
    [ johan: amend VID define entry ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 386f58cb409458bfe8a9c855012a16573b152be5
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Jul 15 11:02:45 2020 +0200

    USB: serial: iuu_phoenix: fix memory corruption
    
    commit e7b931bee739e8a77ae216e613d3b99342b6dec0 upstream.
    
    The driver would happily overwrite its write buffer with user data in
    256 byte increments due to a removed buffer-space sanity check.
    
    Fixes: 5fcf62b0f1f2 ("tty: iuu_phoenix: fix locking.")
    Cc: stable <stable@vger.kernel.org>     # 2.6.31
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0689058968d4cf756d1fe887c62dc57edcefbc0
Author: Zhang Qiang <qiang.zhang@windriver.com>
Date:   Mon Jul 6 13:14:55 2020 +0800

    usb: gadget: function: fix missing spinlock in f_uac1_legacy
    
    commit 8778eb0927ddcd3f431805c37b78fa56481aeed9 upstream.
    
    Add a missing spinlock protection for play_queue, because
    the play_queue may be destroyed when the "playback_work"
    work func and "f_audio_out_ep_complete" callback func
    operate this paly_queue at the same time.
    
    Fixes: c6994e6f067cf ("USB: gadget: add USB Audio Gadget driver")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Zhang Qiang <qiang.zhang@windriver.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a3094db01722d06e1962b1e92293ba14317479e
Author: Peter Chen <peter.chen@nxp.com>
Date:   Tue Jul 7 14:06:01 2020 +0800

    usb: chipidea: core: add wakeup support for extcon
    
    commit 876d4e1e8298ad1f94d9e9392fc90486755437b4 upstream.
    
    If wakeup event occurred by extcon event, it needs to call
    ci_irq again since the first ci_irq calling at extcon notifier
    only wakes up controller, but do noop for event handling,
    it causes the extcon use case can't work well from low power mode.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 3ecb3e09b042 ("usb: chipidea: Use extcon framework for VBUS and ID detect")
    Reported-by: Philippe Schenker <philippe.schenker@toradex.com>
    Tested-by: Philippe Schenker <philippe.schenker@toradex.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20200707060601.31907-2-peter.chen@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 282d6b711ce87c3dc675d8bbac97b9f3052fe9d8
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Sat May 30 11:41:50 2020 +0400

    usb: dwc2: Fix shutdown callback in platform
    
    commit 4fdf228cdf6925af45a2066d403821e0977bfddb upstream.
    
    To avoid lot of interrupts from dwc2 core, which can be asserted in
    specific conditions need to disable interrupts on HW level instead of
    disable IRQs on Kernel level, because of IRQ can be shared between
    drivers.
    
    Cc: stable@vger.kernel.org
    Fixes: a40a00318c7fc ("usb: dwc2: add shutdown callback to platform variant")
    Tested-by: Frank Mori Hess <fmh6jj@gmail.com>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Reviewed-by: Doug Anderson <dianders@chromium.org>
    Reviewed-by: Frank Mori Hess <fmh6jj@gmail.com>
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c85bf94bd2b07ae251fc47e632a43f6e79f830b9
Author: Tom Rix <trix@redhat.com>
Date:   Wed Jul 8 06:12:43 2020 -0700

    USB: c67x00: fix use after free in c67x00_giveback_urb
    
    commit 211f08347355cba1f769bbf3355816a12b3ddd55 upstream.
    
    clang static analysis flags this error
    
    c67x00-sched.c:489:55: warning: Use of memory after it is freed [unix.Malloc]
            usb_hcd_giveback_urb(c67x00_hcd_to_hcd(c67x00), urb, urbp->status);
                                                                 ^~~~~~~~~~~~
    Problem happens in this block of code
    
            c67x00_release_urb(c67x00, urb);
            usb_hcd_unlink_urb_from_ep(c67x00_hcd_to_hcd(c67x00), urb);
            spin_unlock(&c67x00->lock);
            usb_hcd_giveback_urb(c67x00_hcd_to_hcd(c67x00), urb, urbp->status);
    
    In the call to c67x00_release_urb has this freeing of urbp
    
            urbp = urb->hcpriv;
            urb->hcpriv = NULL;
            list_del(&urbp->hep_node);
            kfree(urbp);
    
    And so urbp is freed before usb_hcd_giveback_urb uses it as its 3rd
    parameter.
    
    Since all is required is the status, pass the status directly as is
    done in c64x00_urb_dequeue
    
    Fixes: e9b29ffc519b ("USB: add Cypress c67x00 OTG controller HCD driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200708131243.24336-1-trix@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3186d50fbf70b34c9d2641b2579f5a0b42c30e30
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 10 18:06:56 2020 +0200

    ALSA: usb-audio: Fix race against the error recovery URB submission
    
    commit 9b7e5208a941e2e491a83eb5fa83d889e888fa2f upstream.
    
    USB MIDI driver has an error recovery mechanism to resubmit the URB in
    the delayed timer handler, and this may race with the standard start /
    stop operations.  Although both start and stop operations themselves
    don't race with each other due to the umidi->mutex protection, but
    this isn't applied to the timer handler.
    
    For fixing this potential race, the following changes are applied:
    
    - Since the timer handler can't use the mutex, we apply the
      umidi->disc_lock protection at each input stream URB submission;
      this also needs to change the GFP flag to GFP_ATOMIC
    - Add a check of the URB refcount and skip if already submitted
    - Move the timer cancel call at disconnection to the beginning of the
      procedure; this assures the in-flight timer handler is gone properly
      before killing all pending URBs
    
    Reported-by: syzbot+0f4ecfe6a2c322c81728@syzkaller.appspotmail.com
    Reported-by: syzbot+5f1d24c49c1d2c427497@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200710160656.16819-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 079bc25012d31c7eb3137d1cf3b3ce23c6050df8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 10 15:33:51 2020 +0200

    ALSA: line6: Perform sanity check for each URB creation
    
    commit 6e8a914ad619042c5f25a4feb663357c4170fd8d upstream.
    
    LINE6 drivers create stream URBs with a fixed pipe without checking
    its validity, and this may lead to a kernel WARNING at the submission
    when a malformed USB descriptor is passed.
    
    For avoiding the kernel warning, perform the similar sanity checks for
    each pipe type at creating a URB.
    
    Reported-by: syzbot+c190f6858a04ea7fbc52@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/s5hv9iv4hq8.wl-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55500ddcb7f0ceec507760ab544ba92543384e33
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Sun May 24 16:51:34 2020 -0700

    HID: magicmouse: do not set up autorepeat
    
    commit 6363d2065cd399cf9d6dc9d08c437f8658831100 upstream.
    
    Neither the trackpad, nor the mouse want input core to generate autorepeat
    events for their buttons, so let's reset the bit (as hid-input sets it for
    these devices based on the usage vendor code).
    
    Cc: stable@vger.kernel.org
    Reported-by: Yariv <oigevald+kernel@gmail.com>
    Tested-by: Yariv <oigevald+kernel@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0c31e97437de14c5f5a8174771454f95dd5a87b
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue May 19 15:00:11 2020 +0200

    mtd: rawnand: oxnas: Release all devices in the _remove() path
    
    commit 0a5f45e57e35d0840bedb816974ce2e63406cd8b upstream.
    
    oxnans_nand_remove() should release all MTD devices and clean all NAND
    devices, not only the first one registered.
    
    Fixes: 668592492409 ("mtd: nand: Add OX820 NAND Support")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200519130035.1883-39-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e206ea49c2bbae1a828cbe2a6cd77920dfa3d03
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue May 19 15:00:10 2020 +0200

    mtd: rawnand: oxnas: Unregister all devices on error
    
    commit b60391eb17b2956ff2fc4c348e5a464da21ff9cb upstream.
    
    On error, the oxnas probe path just frees the device which failed and
    aborts the probe, leaving unreleased resources.
    
    Fix this situation by calling mtd_device_unregister()/nand_cleanup()
    on these.
    
    Fixes: 668592492409 ("mtd: nand: Add OX820 NAND Support")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200519130035.1883-38-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d244b4f81448a2f3c921a21ba32eb6b6f4ad11fd
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue May 19 15:00:08 2020 +0200

    mtd: rawnand: oxnas: Keep track of registered devices
    
    commit 383fc3f613e7eac9f2e3c13b6f9fb8c1f39cb9d5 upstream.
    
    All initialized and registered devices should be listed somewhere so
    that we can unregister/free them in the _remove() path.
    
    This patch is not a fix per-se but is needed to apply three other
    fixes coming right after, explaining the Fixes/Cc: stable tags.
    
    Fixes: 668592492409 ("mtd: nand: Add OX820 NAND Support")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200519130035.1883-36-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18a2c0ba36ec9e7edf3750782d604bcf99f37689
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Fri May 22 14:15:21 2020 +0200

    mtd: rawnand: brcmnand: fix CS0 layout
    
    commit 3d3fb3c5be9ce07fa85d8f67fb3922e4613b955b upstream.
    
    Only v3.3-v5.0 have a different CS0 layout.
    Controllers before v3.3 use the same layout for every CS.
    
    Fixes: 27c5b17cd1b1 ("mtd: nand: add NAND driver "library" for Broadcom STB NAND controller")
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200522121524.4161539-3-noltari@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9417a3feaf6ccaff324a15577c63b0b283664c8
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Thu Apr 9 15:07:55 2020 +0800

    perf stat: Zero all the 'ena' and 'run' array slot stats for interval mode
    
    commit 0e0bf1ea1147fcf74eab19c2d3c853cc3740a72f upstream.
    
    As the code comments in perf_stat_process_counter() say, we calculate
    counter's data every interval, and the display code shows ps->res_stats
    avg value. We need to zero the stats for interval mode.
    
    But the current code only zeros the res_stats[0], it doesn't zero the
    res_stats[1] and res_stats[2], which are for ena and run of counter.
    
    This patch zeros the whole res_stats[] for interval mode.
    
    Fixes: 51fd2df1e882 ("perf stat: Fix interval output values")
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jin Yao <yao.jin@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20200409070755.17261-1-yao.jin@linux.intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 544304a48c582d2aa208361d0b93db8fa3b2d575
Author: Kevin Buettner <kevinb@redhat.com>
Date:   Sat Jul 18 00:20:03 2020 -0700

    copy_xstate_to_kernel: Fix typo which caused GDB regression
    
    commit 5714ee50bb4375bd586858ad800b1d9772847452 upstream.
    
    This fixes a regression encountered while running the
    gdb.base/corefile.exp test in GDB's test suite.
    
    In my testing, the typo prevented the sw_reserved field of struct
    fxregs_state from being output to the kernel XSAVES area.  Thus the
    correct mask corresponding to XCR0 was not present in the core file for
    GDB to interrogate, resulting in the following behavior:
    
       [kev@f32-1 gdb]$ ./gdb -q testsuite/outputs/gdb.base/corefile/corefile testsuite/outputs/gdb.base/corefile/corefile.core
       Reading symbols from testsuite/outputs/gdb.base/corefile/corefile...
       [New LWP 232880]
    
       warning: Unexpected size of section `.reg-xstate/232880' in core file.
    
    With the typo fixed, the test works again as expected.
    
    Signed-off-by: Kevin Buettner <kevinb@redhat.com>
    Fixes: 9e4636545933 ("copy_xstate_to_kernel(): don't leave parts of destination uninitialized")
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Dave Airlie <airlied@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05acadf9c356ccb3eb951a6ac3e7df0cfa87104e
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Fri Jun 26 10:06:02 2020 +0200

    ARM: dts: socfpga: Align L2 cache-controller nodename with dtschema
    
    [ Upstream commit d7adfe5ffed9faa05f8926223086b101e14f700d ]
    
    Fix dtschema validator warnings like:
        l2-cache@fffff000: $nodename:0:
            'l2-cache@fffff000' does not match '^(cache-controller|cpu)(@[0-9a-f,]+)*$'
    
    Fixes: 475dc86d08de ("arm: dts: socfpga: Add a base DTSI for Altera's Arria10 SOC")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5b5101aeb7a65a9b67ba3f4f7437b951cf2bc59
Author: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Date:   Tue Jul 7 12:34:12 2020 +0200

    Revert "thermal: mediatek: fix register index error"
    
    [ Upstream commit a8f62f183021be389561570ab5f8c701a5e70298 ]
    
    This reverts commit eb9aecd90d1a39601e91cd08b90d5fee51d321a6
    
    The above patch is supposed to fix a register index error on mt2701. It
    is not clear if the problem solved is a hang or just an invalid value
    returned, my guess is the second. The patch introduces, though, a new
    hang on MT8173 device making them unusable. So, seems reasonable, revert
    the patch because introduces a worst issue.
    
    The reason I send a revert instead of trying to fix the issue for MT8173
    is because the information needed to fix the issue is in the datasheet
    and is not public. So I am not really able to fix it.
    
    Fixes the following bug when CONFIG_MTK_THERMAL is set on MT8173
    devices.
    
    [    2.222488] Unable to handle kernel paging request at virtual address ffff8000125f5001
    [    2.230421] Mem abort info:
    [    2.233207]   ESR = 0x96000021
    [    2.236261]   EC = 0x25: DABT (current EL), IL = 32 bits
    [    2.241571]   SET = 0, FnV = 0
    [    2.244623]   EA = 0, S1PTW = 0
    [    2.247762] Data abort info:
    [    2.250640]   ISV = 0, ISS = 0x00000021
    [    2.254473]   CM = 0, WnR = 0
    [    2.257544] swapper pgtable: 4k pages, 48-bit VAs, pgdp=0000000041850000
    [    2.264251] [ffff8000125f5001] pgd=000000013ffff003, pud=000000013fffe003, pmd=000000013fff9003, pte=006800001100b707
    [    2.274867] Internal error: Oops: 96000021 [#1] PREEMPT SMP
    [    2.280432] Modules linked in:
    [    2.283483] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.7.0-rc6+ #162
    [    2.289914] Hardware name: Google Elm (DT)
    [    2.294003] pstate: 20000005 (nzCv daif -PAN -UAO)
    [    2.298792] pc : mtk_read_temp+0xb8/0x1c8
    [    2.302793] lr : mtk_read_temp+0x7c/0x1c8
    [    2.306794] sp : ffff80001003b930
    [    2.310100] x29: ffff80001003b930 x28: 0000000000000000
    [    2.315404] x27: 0000000000000002 x26: ffff0000f9550b10
    [    2.320709] x25: ffff0000f9550a80 x24: 0000000000000090
    [    2.326014] x23: ffff80001003ba24 x22: 00000000610344c0
    [    2.331318] x21: 0000000000002710 x20: 00000000000001f4
    [    2.336622] x19: 0000000000030d40 x18: ffff800011742ec0
    [    2.341926] x17: 0000000000000001 x16: 0000000000000001
    [    2.347230] x15: ffffffffffffffff x14: ffffff0000000000
    [    2.352535] x13: ffffffffffffffff x12: 0000000000000028
    [    2.357839] x11: 0000000000000003 x10: ffff800011295ec8
    [    2.363143] x9 : 000000000000291b x8 : 0000000000000002
    [    2.368447] x7 : 00000000000000a8 x6 : 0000000000000004
    [    2.373751] x5 : 0000000000000000 x4 : ffff800011295cb0
    [    2.379055] x3 : 0000000000000002 x2 : ffff8000125f5001
    [    2.384359] x1 : 0000000000000001 x0 : ffff0000f9550a80
    [    2.389665] Call trace:
    [    2.392105]  mtk_read_temp+0xb8/0x1c8
    [    2.395760]  of_thermal_get_temp+0x2c/0x40
    [    2.399849]  thermal_zone_get_temp+0x78/0x160
    [    2.404198]  thermal_zone_device_update.part.0+0x3c/0x1f8
    [    2.409589]  thermal_zone_device_update+0x34/0x48
    [    2.414286]  of_thermal_set_mode+0x58/0x88
    [    2.418375]  thermal_zone_of_sensor_register+0x1a8/0x1d8
    [    2.423679]  devm_thermal_zone_of_sensor_register+0x64/0xb0
    [    2.429242]  mtk_thermal_probe+0x690/0x7d0
    [    2.433333]  platform_drv_probe+0x5c/0xb0
    [    2.437335]  really_probe+0xe4/0x448
    [    2.440901]  driver_probe_device+0xe8/0x140
    [    2.445077]  device_driver_attach+0x7c/0x88
    [    2.449252]  __driver_attach+0xac/0x178
    [    2.453082]  bus_for_each_dev+0x78/0xc8
    [    2.456909]  driver_attach+0x2c/0x38
    [    2.460476]  bus_add_driver+0x14c/0x230
    [    2.464304]  driver_register+0x6c/0x128
    [    2.468131]  __platform_driver_register+0x50/0x60
    [    2.472831]  mtk_thermal_driver_init+0x24/0x30
    [    2.477268]  do_one_initcall+0x50/0x298
    [    2.481098]  kernel_init_freeable+0x1ec/0x264
    [    2.485450]  kernel_init+0x1c/0x110
    [    2.488931]  ret_from_fork+0x10/0x1c
    [    2.492502] Code: f9401081 f9400402 b8a67821 8b010042 (b9400042)
    [    2.498599] ---[ end trace e43e3105ed27dc99 ]---
    [    2.503367] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
    [    2.511020] SMP: stopping secondary CPUs
    [    2.514941] Kernel Offset: disabled
    [    2.518421] CPU features: 0x090002,25006005
    [    2.522595] Memory Limit: none
    [    2.525644] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b ]--
    
    Cc: Michael Kao <michael.kao@mediatek.com>
    Fixes: eb9aecd90d1a ("thermal: mediatek: fix register index error")
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200707103412.1010823-1-enric.balletbo@collabora.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 726deb8cd5fb9a9b0f14586f54ff4a7a850eff76
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 9 13:29:36 2020 +0300

    staging: comedi: verify array index is correct before using it
    
    [ Upstream commit ef75e14a6c935eec82abac07ab68e388514e39bc ]
    
    This code reads from the array before verifying that "trig" is a valid
    index.  If the index is wildly out of bounds then reading from an
    invalid address could lead to an Oops.
    
    Fixes: a8c66b684efa ("staging: comedi: addi_apci_1500: rewrite the subdevice support functions")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200709102936.GA20875@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0db15001a2d6b77e535ad4505a5e231106b95eb2
Author: Michał Mirosław <mirq-linux@rere.qmqm.pl>
Date:   Thu May 28 20:35:54 2020 +0200

    usb: gadget: udc: atmel: fix uninitialized read in debug printk
    
    [ Upstream commit 30517ffeb3bff842e1355cbc32f1959d9dbb5414 ]
    
    Fixed commit moved the assignment of 'req', but did not update a
    reference in the DBG() call. Use the argument as it was renamed.
    
    Fixes: 5fb694f96e7c ("usb: gadget: udc: atmel: fix possible oops when unloading module")
    Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e92597e7026d28322cd322d6adc622b8e7a4093
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Mon Jul 6 16:34:34 2020 +0200

    spi: spi-sun6i: sun6i_spi_transfer_one(): fix setting of clock rate
    
    [ Upstream commit ed7815db70d17b1741883f2da8e1d80bc2efe517 ]
    
    A SPI transfer defines the _maximum_ speed of the SPI transfer. However the
    driver doesn't take into account that the clock divider is always rounded down
    (due to integer arithmetics). This results in a too high clock rate for the SPI
    transfer.
    
    E.g.: with a mclk_rate of 24 MHz and a SPI transfer speed of 10 MHz, the
    original code calculates a reg of "0", which results in a effective divider of
    "2" and a 12 MHz clock for the SPI transfer.
    
    This patch fixes the issue by using DIV_ROUND_UP() instead of a plain
    integer division.
    
    While there simplify the divider calculation for the CDR1 case, use
    order_base_2() instead of two ilog2() calculations.
    
    Fixes: 3558fe900e8a ("spi: sunxi: Add Allwinner A31 SPI controller driver")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Link: https://lore.kernel.org/r/20200706143443.9855-2-mkl@pengutronix.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e41fd8df7a2eb0e73185996cdb55ba08623bd4f
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jun 17 14:53:46 2020 +0200

    arm64: dts: meson: add missing gxl rng clock
    
    [ Upstream commit 95ca6f06dd4827ff63be5154120c7a8511cd9a41 ]
    
    The peripheral clock of the RNG is missing for gxl while it is present
    for gxbb.
    
    Fixes: 1b3f6d148692 ("ARM64: dts: meson-gx: add clock CLKID_RNG0 to hwrng node")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20200617125346.1163527-1-jbrunet@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5738628f34a3c86f6f806750bc16cf30300c5723
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jun 25 13:44:28 2020 +0100

    phy: sun4i-usb: fix dereference of pointer phy0 before it is null checked
    
    [ Upstream commit 38b1927e5bf9bcad4a2e33189ef1c5569f9599ba ]
    
    Currently pointer phy0 is being dereferenced via the assignment of
    phy on the call to phy_get_drvdata before phy0 is null checked, this
    can lead to a null pointer dereference. Fix this by performing the
    null check on phy0 before the call to phy_get_drvdata. Also replace
    the phy0 == NULL check with the more usual !phy0 idiom.
    
    Addresses-Coverity: ("Dereference before null check")
    Fixes: e6f32efb1b12 ("phy: sun4i-usb: Make sure to disable PHY0 passby for peripheral mode")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20200625124428.83564-1-colin.king@canonical.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89922d5f2ee2696943635e3c8fd6fce71ce0b11c
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun May 17 18:29:57 2020 +0100

    iio:health:afe4404 Fix timestamp alignment and prevent data leak.
    
    [ Upstream commit f88ecccac4be348bbcc6d056bdbc622a8955c04d ]
    
    One of a class of bugs pointed out by Lars in a recent review.
    iio_push_to_buffers_with_timestamp assumes the buffer used is aligned
    to the size of the timestamp (8 bytes).  This is not guaranteed in
    this driver which uses a 40 byte array of smaller elements on the stack.
    As Lars also noted this anti pattern can involve a leak of data to
    userspace and that indeed can happen here.  We close both issues by
    moving to a suitable structure in the iio_priv() data with alignment
    explicitly requested.  This data is allocated with kzalloc so no
    data can leak appart from previous readings.
    
    Fixes: 87aec56e27ef ("iio: health: Add driver for the TI AFE4404 heart monitor")
    Reported-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Acked-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdd73b8ef420c4fb7ecd1e45f6e34181b79b2501
Author: Paul Menzel <pmenzel@molgen.mpg.de>
Date:   Fri May 22 14:22:28 2020 +0200

    ACPI: video: Use native backlight on Acer TravelMate 5735Z
    
    [ Upstream commit c41c36e900a337b4132b12ccabc97f5578248b44 ]
    
    Currently, changing the brightness of the internal display of the Acer
    TravelMate 5735Z does not work. Pressing the function keys or changing the
    slider, GNOME Shell 3.36.2 displays the OSD (five steps), but the
    brightness does not change.
    
    The Acer TravelMate 5735Z shipped with Windows 7 and as such does not
    trigger our "win8 ready" heuristic for preferring the native backlight
    interface.
    
    Still ACPI backlight control doesn't work on this model, where as the
    native (intel_video) backlight interface does work by adding
    `acpi_backlight=native` or `acpi_backlight=none` to Linux’ command line.
    
    So, add a quirk to force using native backlight control on this model.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=207835
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1f9dec9bb6686f12764ae39b41fc11cc4c59395
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Mar 31 14:36:23 2020 +0200

    ACPI: video: Use native backlight on Acer Aspire 5783z
    
    [ Upstream commit 1c8fbc1f9bfb804ef2f0d4ee9397ab800e33f23a ]
    
    The Acer Aspire 5783z shipped with Windows 7 and as such does not trigger
    our "win8 ready" heuristic for prefering the native backlight interface.
    
    Still ACPI backlight control doesn't work on this model, where as the
    native (intel_video) backlight interface does work. Add a quirk to
    force using native backlight control on this model.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b4801c57dd08ec432befe3318d632b72cfcfd7f
Author: Haibo Chen <haibo.chen@nxp.com>
Date:   Wed Feb 19 16:22:40 2020 +0800

    mmc: sdhci: do not enable card detect interrupt for gpio cd type
    
    [ Upstream commit e65bb38824711559844ba932132f417bc5a355e2 ]
    
    Except SDHCI_QUIRK_BROKEN_CARD_DETECTION and MMC_CAP_NONREMOVABLE,
    we also do not need to handle controller native card detect interrupt
    for gpio cd type.
    If we wrong enabled the card detect interrupt for gpio case, it will
    cause a lot of unexpected card detect interrupts during data transfer
    which should not happen.
    
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/1582100563-20555-2-git-send-email-haibo.chen@nxp.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0f07c3c2a1ff9404c67bc370b9ad8d0625ad924
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Fri Feb 21 10:15:30 2020 +0100

    doc: dt: bindings: usb: dwc3: Update entries for disabling SS instances in park mode
    
    [ Upstream commit 3d157c28d2289edf0439e8308e8de3a06acaaf0e ]
    
    This patch updates the documentation with the information related
    to the quirks that needs to be added for disabling all SuperSpeed XHCI
    instances in park mode.
    
    Cc: Dongjin Kim <tobetter@gmail.com>
    Cc: Jianxin Pan <jianxin.pan@amlogic.com>
    Cc: Thinh Nguyen <thinhn@synopsys.com>
    Cc: Jun Li <lijun.kernel@gmail.com>
    Reported-by: Tim <elatllat@gmail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bedfa0049d097532accf52b9cb168f2f8d62d16d
Author: Sasha Levin <sashal@kernel.org>
Date:   Fri Jul 17 12:57:16 2020 -0400

    Revert "usb/xhci-plat: Set PM runtime as active on resume"
    
    This reverts commit 9f33eff4958885f6fd64c18221c36d065ef8ba8a.
    
    Eugeniu Rosca writes:
    
    On Thu, Jul 09, 2020 at 09:00:23AM +0200, Eugeniu Rosca wrote:
    >After integrating v4.14.186 commit 5410d158ca2a50 ("usb/ehci-platform:
    >Set PM runtime as active on resume") into downstream v4.14.x, we started
    >to consistently experience below panic [1] on every second s2ram of
    >R-Car H3 Salvator-X Renesas reference board.
    >
    >After some investigations, we concluded the following:
    > - the issue does not exist in vanilla v5.8-rc4+
    > - [bisecting shows that] the panic on v4.14.186 is caused by the lack
    >   of v5.6-rc1 commit 987351e1ea7772 ("phy: core: Add consumer device
    >   link support"). Getting evidence for that is easy. Reverting
    >   987351e1ea7772 in vanilla leads to a similar backtrace [2].
    >
    >Questions:
    > - Backporting 987351e1ea7772 ("phy: core: Add consumer device
    >   link support") to v4.14.187 looks challenging enough, so probably not
    >   worth it. Anybody to contradict this?
    > - Assuming no plans to backport the missing mainline commit to v4.14.x,
    >   should the following three v4.14.186 commits be reverted on v4.14.x?
    >   * baef809ea497a4 ("usb/ohci-platform: Fix a warning when hibernating")
    >   * 9f33eff4958885 ("usb/xhci-plat: Set PM runtime as active on resume")
    >   * 5410d158ca2a50 ("usb/ehci-platform: Set PM runtime as active on resume")
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e35c3e47994e45db51a328db6d32c0e27f47680
Author: Sasha Levin <sashal@kernel.org>
Date:   Fri Jul 17 12:57:05 2020 -0400

    Revert "usb/ehci-platform: Set PM runtime as active on resume"
    
    This reverts commit 5410d158ca2a50bcf3f48c57f6cd73f4cf479e69.
    
    Eugeniu Rosca writes:
    
    On Thu, Jul 09, 2020 at 09:00:23AM +0200, Eugeniu Rosca wrote:
    >After integrating v4.14.186 commit 5410d158ca2a50 ("usb/ehci-platform:
    >Set PM runtime as active on resume") into downstream v4.14.x, we started
    >to consistently experience below panic [1] on every second s2ram of
    >R-Car H3 Salvator-X Renesas reference board.
    >
    >After some investigations, we concluded the following:
    > - the issue does not exist in vanilla v5.8-rc4+
    > - [bisecting shows that] the panic on v4.14.186 is caused by the lack
    >   of v5.6-rc1 commit 987351e1ea7772 ("phy: core: Add consumer device
    >   link support"). Getting evidence for that is easy. Reverting
    >   987351e1ea7772 in vanilla leads to a similar backtrace [2].
    >
    >Questions:
    > - Backporting 987351e1ea7772 ("phy: core: Add consumer device
    >   link support") to v4.14.187 looks challenging enough, so probably not
    >   worth it. Anybody to contradict this?
    > - Assuming no plans to backport the missing mainline commit to v4.14.x,
    >   should the following three v4.14.186 commits be reverted on v4.14.x?
    >   * baef809ea497a4 ("usb/ohci-platform: Fix a warning when hibernating")
    >   * 9f33eff4958885 ("usb/xhci-plat: Set PM runtime as active on resume")
    >   * 5410d158ca2a50 ("usb/ehci-platform: Set PM runtime as active on resume")
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48a3ceb7fc4bfe7c8fd927515f7b257b7a60536b
Author: Sasha Levin <sashal@kernel.org>
Date:   Fri Jul 17 12:56:32 2020 -0400

    Revert "usb/ohci-platform: Fix a warning when hibernating"
    
    This reverts commit baef809ea497a4f21fa67814b61094bbcc191c39.
    
    Eugeniu Rosca writes:
    
    On Thu, Jul 09, 2020 at 09:00:23AM +0200, Eugeniu Rosca wrote:
    >After integrating v4.14.186 commit 5410d158ca2a50 ("usb/ehci-platform:
    >Set PM runtime as active on resume") into downstream v4.14.x, we started
    >to consistently experience below panic [1] on every second s2ram of
    >R-Car H3 Salvator-X Renesas reference board.
    >
    >After some investigations, we concluded the following:
    > - the issue does not exist in vanilla v5.8-rc4+
    > - [bisecting shows that] the panic on v4.14.186 is caused by the lack
    >   of v5.6-rc1 commit 987351e1ea7772 ("phy: core: Add consumer device
    >   link support"). Getting evidence for that is easy. Reverting
    >   987351e1ea7772 in vanilla leads to a similar backtrace [2].
    >
    >Questions:
    > - Backporting 987351e1ea7772 ("phy: core: Add consumer device
    >   link support") to v4.14.187 looks challenging enough, so probably not
    >   worth it. Anybody to contradict this?
    > - Assuming no plans to backport the missing mainline commit to v4.14.x,
    >   should the following three v4.14.186 commits be reverted on v4.14.x?
    >   * baef809ea497a4 ("usb/ohci-platform: Fix a warning when hibernating")
    >   * 9f33eff4958885 ("usb/xhci-plat: Set PM runtime as active on resume")
    >   * 5410d158ca2a50 ("usb/ehci-platform: Set PM runtime as active on resume")
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e56c6a5915292459cca26fdac4b957109be0f7ad
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Jun 19 11:47:46 2020 -0700

    of: of_mdio: Correct loop scanning logic
    
    [ Upstream commit 5a8d7f126c97d04d893f5e5be2b286437a0d01b0 ]
    
    Commit 209c65b61d94 ("drivers/of/of_mdio.c:fix of_mdiobus_register()")
    introduced a break of the loop on the premise that a successful
    registration should exit the loop. The premise is correct but not to
    code, because rc && rc != -ENODEV is just a special error condition,
    that means we would exit the loop even with rc == -ENODEV which is
    absolutely not correct since this is the error code to indicate to the
    MDIO bus layer that scanning should continue.
    
    Fix this by explicitly checking for rc = 0 as the only valid condition
    to break out of the loop.
    
    Fixes: 209c65b61d94 ("drivers/of/of_mdio.c:fix of_mdiobus_register()")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3bc524e2d07307eb79f6e5b8860f1f81a3e1528
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Jun 17 20:42:44 2020 -0700

    net: dsa: bcm_sf2: Fix node reference count
    
    [ Upstream commit 8dbe4c5d5e40fe140221024f7b16bec9f310bf70 ]
    
    of_find_node_by_name() will do an of_node_put() on the "from" argument.
    With CONFIG_OF_DYNAMIC enabled which checks for device_node reference
    counts, we would be getting a warning like this:
    
    [    6.347230] refcount_t: increment on 0; use-after-free.
    [    6.352498] WARNING: CPU: 3 PID: 77 at lib/refcount.c:156
    refcount_inc_checked+0x38/0x44
    [    6.360601] Modules linked in:
    [    6.363661] CPU: 3 PID: 77 Comm: kworker/3:1 Tainted: G        W
    5.4.46-gb78b3e9956e6 #13
    [    6.372546] Hardware name: BCM97278SV (DT)
    [    6.376649] Workqueue: events deferred_probe_work_func
    [    6.381796] pstate: 60000005 (nZCv daif -PAN -UAO)
    [    6.386595] pc : refcount_inc_checked+0x38/0x44
    [    6.391133] lr : refcount_inc_checked+0x38/0x44
    ...
    [    6.478791] Call trace:
    [    6.481243]  refcount_inc_checked+0x38/0x44
    [    6.485433]  kobject_get+0x3c/0x4c
    [    6.488840]  of_node_get+0x24/0x34
    [    6.492247]  of_irq_find_parent+0x3c/0xe0
    [    6.496263]  of_irq_parse_one+0xe4/0x1d0
    [    6.500191]  irq_of_parse_and_map+0x44/0x84
    [    6.504381]  bcm_sf2_sw_probe+0x22c/0x844
    [    6.508397]  platform_drv_probe+0x58/0xa8
    [    6.512413]  really_probe+0x238/0x3fc
    [    6.516081]  driver_probe_device+0x11c/0x12c
    [    6.520358]  __device_attach_driver+0xa8/0x100
    [    6.524808]  bus_for_each_drv+0xb4/0xd0
    [    6.528650]  __device_attach+0xd0/0x164
    [    6.532493]  device_initial_probe+0x24/0x30
    [    6.536682]  bus_probe_device+0x38/0x98
    [    6.540524]  deferred_probe_work_func+0xa8/0xd4
    [    6.545061]  process_one_work+0x178/0x288
    [    6.549078]  process_scheduled_works+0x44/0x48
    [    6.553529]  worker_thread+0x218/0x270
    [    6.557285]  kthread+0xdc/0xe4
    [    6.560344]  ret_from_fork+0x10/0x18
    [    6.563925] ---[ end trace 68f65caf69bb152a ]---
    
    Fix this by adding a of_node_get() to increment the reference count
    prior to the call.
    
    Fixes: afa3b592953b ("net: dsa: bcm_sf2: Ensure correct sub-node is parsed")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4cd3429db50061392a1d2ff19df2a597a4c0eac
Author: Angelo Dureghello <angelo@sysam.it>
Date:   Wed Dec 26 22:45:06 2018 +0100

    spi: fix initial SPI_SR value in spi-fsl-dspi
    
    [ Upstream commit aa54c1c9d90e6db75190813907190fadcce1bf45 ]
    
    On ColdFire mcf54418, using DSPI_DMA_MODE mode, spi transfers
    at first boot stage are not succeding:
    
    m25p80 spi0.1: unrecognized JEDEC id bytes: 00, 00, 00
    
    The reason is the SPI_SR initial value set by the driver, that
    is not clearing (not setting to 1) the RF_DF flag. After a tour
    on the dspi hw modules that use this driver(Vybrid, ColdFire and
    ls1021a) a better init value for SR register has been set.
    
    Signed-off-by: Angelo Dureghello <angelo@sysam.it>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33b8d70cd3add1a4b69e08fc7e830a553f36ec50
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jun 22 13:05:41 2020 +0200

    spi: spi-fsl-dspi: Fix lockup if device is shutdown during SPI transfer
    
    [ Upstream commit 3c525b69e8c1a9a6944e976603c7a1a713e728f9 ]
    
    During shutdown, the driver should unregister the SPI controller
    and stop the hardware.  Otherwise the dspi_transfer_one_message() could
    wait on completion infinitely.
    
    Additionally, calling spi_unregister_controller() first in device
    shutdown reverse-matches the probe function, where SPI controller is
    registered at the end.
    
    Fixes: dc234825997e ("spi: spi-fsl-dspi: Adding shutdown hook")
    Reported-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Tested-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200622110543.5035-2-krzk@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2082ec69ab64751ce514c938e4820249a76bca0f
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun May 17 18:29:56 2020 +0100

    iio:health:afe4403 Fix timestamp alignment and prevent data leak.
    
    commit 3f9c6d38797e9903937b007a341dad0c251765d6 upstream.
    
    One of a class of bugs pointed out by Lars in a recent review.
    iio_push_to_buffers_with_timestamp assumes the buffer used is aligned
    to the size of the timestamp (8 bytes).  This is not guaranteed in
    this driver which uses a 32 byte array of smaller elements on the stack.
    As Lars also noted this anti pattern can involve a leak of data to
    userspace and that indeed can happen here.  We close both issues by
    moving to a suitable structure in the iio_priv() data with alignment
    explicitly requested.  This data is allocated with kzalloc so no
    data can leak appart from previous readings.
    
    Fixes: eec96d1e2d31 ("iio: health: Add driver for the TI AFE4403 heart monitor")
    Reported-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Acked-by: Andrew F. Davis <afd@ti.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb138abda64a0621d42950a997c5ec0075fa7e8f
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jun 7 16:53:57 2020 +0100

    iio:pressure:ms5611 Fix buffer element alignment
    
    commit 8db4afe163bbdd93dca6fcefbb831ef12ecc6b4d upstream.
    
    One of a class of bugs pointed out by Lars in a recent review.
    iio_push_to_buffers_with_timestamp assumes the buffer used is aligned
    to the size of the timestamp (8 bytes).  This is not guaranteed in
    this driver which uses an array of smaller elements on the stack.
    Here there is no data leak possibility so use an explicit structure
    on the stack to ensure alignment and nice readable fashion.
    
    The forced alignment of ts isn't strictly necessary in this driver
    as the padding will be correct anyway (there isn't any).  However
    it is probably less fragile to have it there and it acts as
    documentation of the requirement.
    
    Fixes: 713bbb4efb9dc ("iio: pressure: ms5611: Add triggered buffer support")
    Reported-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Acked-by: Tomasz Duszynski <tomasz.duszynski@octakon.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fd2f25df59c862a3a116003a63e0ac2cb45c5d6
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Thu Jun 4 21:44:44 2020 -0500

    iio: pressure: zpa2326: handle pm_runtime_get_sync failure
    
    commit d88de040e1df38414fc1e4380be9d0e997ab4d58 upstream.
    
    Calling pm_runtime_get_sync increments the counter even in case of
    failure, causing incorrect ref count. Call pm_runtime_put if
    pm_runtime_get_sync fails.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Fixes: 03b262f2bbf4 ("iio:pressure: initial zpa2326 barometer support")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46baa5cff47491569963a18e3abc2931185c5f83
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu May 28 14:41:21 2020 +0800

    iio: mma8452: Add missed iio_device_unregister() call in mma8452_probe()
    
    commit d7369ae1f4d7cffa7574d15e1f787dcca184c49d upstream.
    
    The function iio_device_register() was called in mma8452_probe().
    But the function iio_device_unregister() was not called after
    a call of the function mma8452_set_freefall_mode() failed.
    Thus add the missed function call for one error case.
    
    Fixes: 1a965d405fc6 ("drivers:iio:accel:mma8452: added cleanup provision in case of failure.")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40229eb48f992b569ca6eeff832b7fdbd7252450
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Tue May 26 18:47:17 2020 +0800

    iio: magnetometer: ak8974: Fix runtime PM imbalance on error
    
    commit 0187294d227dfc42889e1da8f8ce1e44fc25f147 upstream.
    
    When devm_regmap_init_i2c() returns an error code, a pairing
    runtime PM usage counter decrement is needed to keep the
    counter balanced. For error paths after ak8974_set_power(),
    ak8974_detect() and ak8974_reset(), things are the same.
    
    However, When iio_triggered_buffer_setup() returns an error
    code, there will be two PM usgae counter decrements.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Fixes: 7c94a8b2ee8c ("iio: magn: add a driver for AK8974")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21276e9d5627ca047268730160305d869f9072f4
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jun 7 16:53:52 2020 +0100

    iio:humidity:hdc100x Fix alignment and data leak issues
    
    commit ea5e7a7bb6205d24371373cd80325db1bc15eded upstream.
    
    One of a class of bugs pointed out by Lars in a recent review.
    iio_push_to_buffers_with_timestamp assumes the buffer used is aligned
    to the size of the timestamp (8 bytes).  This is not guaranteed in
    this driver which uses an array of smaller elements on the stack.
    As Lars also noted this anti pattern can involve a leak of data to
    userspace and that indeed can happen here.  We close both issues by
    moving to a suitable structure in the iio_priv() data.
    This data is allocated with kzalloc so no data can leak apart
    from previous readings.
    
    Fixes: 16bf793f86b2 ("iio: humidity: hdc100x: add triggered buffer support for HDC100X")
    Reported-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Cc: Alison Schofield <amsfield22@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2397589a2b588335ea56288e418507bedfdafdf1
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jun 7 16:53:49 2020 +0100

    iio:magnetometer:ak8974: Fix alignment and data leak issues
    
    commit 838e00b13bfd4cac8b24df25bfc58e2eb99bcc70 upstream.
    
    One of a class of bugs pointed out by Lars in a recent review.
    iio_push_to_buffers_with_timestamp assumes the buffer used is aligned
    to the size of the timestamp (8 bytes).  This is not guaranteed in
    this driver which uses an array of smaller elements on the stack.
    As Lars also noted this anti pattern can involve a leak of data to
    userspace and that indeed can happen here.  We close both issues by
    moving to a suitable structure in the iio_priv() data.
    
    This data is allocated with kzalloc so no data can leak appart from
    previous readings.
    
    Fixes: 7c94a8b2ee8cf ("iio: magn: add a driver for AK8974")
    Reported-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f29d784d4d6e65d8bc5b6608e09437ce59822474
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Jul 9 15:59:53 2020 +0300

    arm64/alternatives: don't patch up internal branches
    
    [ Upstream commit 5679b28142193a62f6af93249c0477be9f0c669b ]
    
    Commit f7b93d42945c ("arm64/alternatives: use subsections for replacement
    sequences") moved the alternatives replacement sequences into subsections,
    in order to keep the as close as possible to the code that they replace.
    
    Unfortunately, this broke the logic in branch_insn_requires_update,
    which assumed that any branch into kernel executable code was a branch
    that required updating, which is no longer the case now that the code
    sequences that are patched in are in the same section as the patch site
    itself.
    
    So the only way to discriminate branches that require updating and ones
    that don't is to check whether the branch targets the replacement sequence
    itself, and so we can drop the call to kernel_text_address() entirely.
    
    Fixes: f7b93d42945c ("arm64/alternatives: use subsections for replacement sequences")
    Reported-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Tested-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Link: https://lore.kernel.org/r/20200709125953.30918-1-ardb@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 072c638a2eb363d767c8bea1b9559ac0bdb389cf
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Aug 7 18:59:57 2018 -0500

    arm64: alternative: Use true and false for boolean values
    
    [ Upstream commit 3c4d9137eefecf273a520d392071ffc9df0a9a7a ]
    
    Return statements in functions returning bool should use true or false
    instead of an integer value. This code was detected with the help of
    Coccinelle.
    
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d9fb8c0c7d9c5093dd2be120781952ef753a206
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Jul 2 13:15:27 2020 +0300

    i2c: eg20t: Load module automatically if ID matches
    
    [ Upstream commit 5f90786b31fb7d1e199a8999d46c4e3aea672e11 ]
    
    The driver can't be loaded automatically because it misses
    module alias to be provided. Add corresponding MODULE_DEVICE_TABLE()
    call to the driver.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a9d2bbc1b32d18dccc4ba660aaa94a6cef896c2
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Thu Jun 25 13:30:18 2020 -0500

    gfs2: read-only mounts should grab the sd_freeze_gl glock
    
    [ Upstream commit b780cc615ba4795a7ef0e93b19424828a5ad456a ]
    
    Before this patch, only read-write mounts would grab the freeze
    glock in read-only mode, as part of gfs2_make_fs_rw. So the freeze
    glock was never initialized. That meant requests to freeze, which
    request the glock in EX, were granted without any state transition.
    That meant you could mount a gfs2 file system, which is currently
    frozen on a different cluster node, in read-only mode.
    
    This patch makes read-only mounts lock the freeze glock in SH mode,
    which will block for file systems that are frozen on another node.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f09eb6fa26287c4ad4baf0cbf16715624b5a8b76
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Sat Jun 13 17:18:33 2020 +0300

    tpm_tis: extra chip->ops check on error path in tpm_tis_core_init
    
    [ Upstream commit ccf6fb858e17a8f8a914a1c6444d277cfedfeae6 ]
    
    Found by smatch:
    drivers/char/tpm/tpm_tis_core.c:1088 tpm_tis_core_init() warn:
     variable dereferenced before check 'chip->ops' (see line 979)
    
    'chip->ops' is assigned in the beginning of function
    in tpmm_chip_alloc->tpm_chip_alloc
    and is used before first possible goto to error path.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7db1425326b663771049ac48e121dd3b31e708d1
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Jun 30 10:19:21 2020 +0200

    arm64/alternatives: use subsections for replacement sequences
    
    [ Upstream commit f7b93d42945cc71e1346dd5ae07c59061d56745e ]
    
    When building very large kernels, the logic that emits replacement
    sequences for alternatives fails when relative branches are present
    in the code that is emitted into the .altinstr_replacement section
    and patched in at the original site and fixed up. The reason is that
    the linker will insert veneers if relative branches go out of range,
    and due to the relative distance of the .altinstr_replacement from
    the .text section where its branch targets usually live, veneers
    may be emitted at the end of the .altinstr_replacement section, with
    the relative branches in the sequence pointed at the veneers instead
    of the actual target.
    
    The alternatives patching logic will attempt to fix up the branch to
    point to its original target, which will be the veneer in this case,
    but given that the patch site is likely to be far away as well, it
    will be out of range and so patching will fail. There are other cases
    where these veneers are problematic, e.g., when the target of the
    branch is in .text while the patch site is in .init.text, in which
    case putting the replacement sequence inside .text may not help either.
    
    So let's use subsections to emit the replacement code as closely as
    possible to the patch site, to ensure that veneers are only likely to
    be emitted if they are required at the patch site as well, in which
    case they will be in range for the replacement sequence both before
    and after it is transported to the patch site.
    
    This will prevent alternative sequences in non-init code from being
    released from memory after boot, but this is tolerable given that the
    entire section is only 512 KB on an allyesconfig build (which weighs in
    at 500+ MB for the entire Image). Also, note that modules today carry
    the replacement sequences in non-init sections as well, and any of
    those that target init code will be emitted into init sections after
    this change.
    
    This fixes an early crash when booting an allyesconfig kernel on a
    system where any of the alternatives sequences containing relative
    branches are activated at boot (e.g., ARM64_HAS_PAN on TX2)
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Andre Przywara <andre.przywara@arm.com>
    Cc: Dave P Martin <dave.martin@arm.com>
    Link: https://lore.kernel.org/r/20200630081921.13443-1-ardb@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9832ab86eb0ad97fed4c70d09cb03a2dfad8f244
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Mon Jun 15 00:49:28 2020 -0500

    drm/exynos: fix ref count leak in mic_pre_enable
    
    [ Upstream commit d4f5a095daf0d25f0b385e1ef26338608433a4c5 ]
    
    in mic_pre_enable, pm_runtime_get_sync is called which
    increments the counter even in case of failure, leading to incorrect
    ref count. In case of failure, decrement the ref count before returning.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38505206c8295d1ae13612ace94dce16950f621b
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Jul 9 16:28:44 2020 -0700

    cgroup: Fix sock_cgroup_data on big-endian.
    
    [ Upstream commit 14b032b8f8fce03a546dcf365454bec8c4a58d7d ]
    
    In order for no_refcnt and is_data to be the lowest order two
    bits in the 'val' we have to pad out the bitfield of the u8.
    
    Fixes: ad0f75e5f57c ("cgroup: fix cgroup_sk_alloc() for sk_clone_lock()")
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82fd2138a5ffd7e0d4320cdb669e115ee976a26e
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Jul 2 11:52:56 2020 -0700

    cgroup: fix cgroup_sk_alloc() for sk_clone_lock()
    
    [ Upstream commit ad0f75e5f57ccbceec13274e1e242f2b5a6397ed ]
    
    When we clone a socket in sk_clone_lock(), its sk_cgrp_data is
    copied, so the cgroup refcnt must be taken too. And, unlike the
    sk_alloc() path, sock_update_netprioidx() is not called here.
    Therefore, it is safe and necessary to grab the cgroup refcnt
    even when cgroup_sk_alloc is disabled.
    
    sk_clone_lock() is in BH context anyway, the in_interrupt()
    would terminate this function if called there. And for sk_alloc()
    skcd->val is always zero. So it's safe to factor out the code
    to make it more readable.
    
    The global variable 'cgroup_sk_alloc_disabled' is used to determine
    whether to take these reference counts. It is impossible to make
    the reference counting correct unless we save this bit of information
    in skcd->val. So, add a new bit there to record whether the socket
    has already taken the reference counts. This obviously relies on
    kmalloc() to align cgroup pointers to at least 4 bytes,
    ARCH_KMALLOC_MINALIGN is certainly larger than that.
    
    This bug seems to be introduced since the beginning, commit
    d979a39d7242 ("cgroup: duplicate cgroup reference when cloning sockets")
    tried to fix it but not compeletely. It seems not easy to trigger until
    the recent commit 090e28b229af
    ("netprio_cgroup: Fix unlimited memory leak of v2 cgroups") was merged.
    
    Fixes: bd1060a1d671 ("sock, cgroup: add sock->sk_cgroup")
    Reported-by: Cameron Berkenpas <cam@neo-zeon.de>
    Reported-by: Peter Geis <pgwipeout@gmail.com>
    Reported-by: Lu Fengqi <lufq.fnst@cn.fujitsu.com>
    Reported-by: Daniël Sonck <dsonck92@gmail.com>
    Reported-by: Zhang Qiang <qiang.zhang@windriver.com>
    Tested-by: Cameron Berkenpas <cam@neo-zeon.de>
    Tested-by: Peter Geis <pgwipeout@gmail.com>
    Tested-by: Thomas Lamprecht <t.lamprecht@proxmox.com>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Zefan Li <lizefan@huawei.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Roman Gushchin <guro@fb.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c38a32e30a33ba1db775f9b14246baddf405eb9d
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jul 1 12:41:23 2020 -0700

    tcp: md5: do not send silly options in SYNCOOKIES
    
    [ Upstream commit e114e1e8ac9d31f25b9dd873bab5d80c1fc482ca ]
    
    Whenever cookie_init_timestamp() has been used to encode
    ECN,SACK,WSCALE options, we can not remove the TS option in the SYNACK.
    
    Otherwise, tcp_synack_options() will still advertize options like WSCALE
    that we can not deduce later when receiving the packet from the client
    to complete 3WHS.
    
    Note that modern linux TCP stacks wont use MD5+TS+SACK in a SYN packet,
    but we can not know for sure that all TCP stacks have the same logic.
    
    Before the fix a tcpdump would exhibit this wrong exchange :
    
    10:12:15.464591 IP C > S: Flags [S], seq 4202415601, win 65535, options [nop,nop,md5 valid,mss 1400,sackOK,TS val 456965269 ecr 0,nop,wscale 8], length 0
    10:12:15.464602 IP S > C: Flags [S.], seq 253516766, ack 4202415602, win 65535, options [nop,nop,md5 valid,mss 1400,nop,nop,sackOK,nop,wscale 8], length 0
    10:12:15.464611 IP C > S: Flags [.], ack 1, win 256, options [nop,nop,md5 valid], length 0
    10:12:15.464678 IP C > S: Flags [P.], seq 1:13, ack 1, win 256, options [nop,nop,md5 valid], length 12
    10:12:15.464685 IP S > C: Flags [.], ack 13, win 65535, options [nop,nop,md5 valid], length 0
    
    After this patch the exchange looks saner :
    
    11:59:59.882990 IP C > S: Flags [S], seq 517075944, win 65535, options [nop,nop,md5 valid,mss 1400,sackOK,TS val 1751508483 ecr 0,nop,wscale 8], length 0
    11:59:59.883002 IP S > C: Flags [S.], seq 1902939253, ack 517075945, win 65535, options [nop,nop,md5 valid,mss 1400,sackOK,TS val 1751508479 ecr 1751508483,nop,wscale 8], length 0
    11:59:59.883012 IP C > S: Flags [.], ack 1, win 256, options [nop,nop,md5 valid,nop,nop,TS val 1751508483 ecr 1751508479], length 0
    11:59:59.883114 IP C > S: Flags [P.], seq 1:13, ack 1, win 256, options [nop,nop,md5 valid,nop,nop,TS val 1751508483 ecr 1751508479], length 12
    11:59:59.883122 IP S > C: Flags [.], ack 13, win 256, options [nop,nop,md5 valid,nop,nop,TS val 1751508483 ecr 1751508483], length 0
    11:59:59.883152 IP S > C: Flags [P.], seq 1:13, ack 13, win 256, options [nop,nop,md5 valid,nop,nop,TS val 1751508484 ecr 1751508483], length 12
    11:59:59.883170 IP C > S: Flags [.], ack 13, win 256, options [nop,nop,md5 valid,nop,nop,TS val 1751508484 ecr 1751508484], length 0
    
    Of course, no SACK block will ever be added later, but nothing should break.
    Technically, we could remove the 4 nops included in MD5+TS options,
    but again some stacks could break seeing not conventional alignment.
    
    Fixes: 4957faade11b ("TCPCT part 1g: Responder Cookie => Initiator")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Florian Westphal <fw@strlen.de>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27c4201992a641fea3221ed0cf3af7db14fc68df
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Wed Jul 8 16:18:34 2020 -0700

    tcp: make sure listeners don't initialize congestion-control state
    
    [ Upstream commit ce69e563b325f620863830c246a8698ccea52048 ]
    
    syzkaller found its way into setsockopt with TCP_CONGESTION "cdg".
    tcp_cdg_init() does a kcalloc to store the gradients. As sk_clone_lock
    just copies all the memory, the allocated pointer will be copied as
    well, if the app called setsockopt(..., TCP_CONGESTION) on the listener.
    If now the socket will be destroyed before the congestion-control
    has properly been initialized (through a call to tcp_init_transfer), we
    will end up freeing memory that does not belong to that particular
    socket, opening the door to a double-free:
    
    [   11.413102] ==================================================================
    [   11.414181] BUG: KASAN: double-free or invalid-free in tcp_cleanup_congestion_control+0x58/0xd0
    [   11.415329]
    [   11.415560] CPU: 3 PID: 4884 Comm: syz-executor.5 Not tainted 5.8.0-rc2 #80
    [   11.416544] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    [   11.418148] Call Trace:
    [   11.418534]  <IRQ>
    [   11.418834]  dump_stack+0x7d/0xb0
    [   11.419297]  print_address_description.constprop.0+0x1a/0x210
    [   11.422079]  kasan_report_invalid_free+0x51/0x80
    [   11.423433]  __kasan_slab_free+0x15e/0x170
    [   11.424761]  kfree+0x8c/0x230
    [   11.425157]  tcp_cleanup_congestion_control+0x58/0xd0
    [   11.425872]  tcp_v4_destroy_sock+0x57/0x5a0
    [   11.426493]  inet_csk_destroy_sock+0x153/0x2c0
    [   11.427093]  tcp_v4_syn_recv_sock+0xb29/0x1100
    [   11.427731]  tcp_get_cookie_sock+0xc3/0x4a0
    [   11.429457]  cookie_v4_check+0x13d0/0x2500
    [   11.433189]  tcp_v4_do_rcv+0x60e/0x780
    [   11.433727]  tcp_v4_rcv+0x2869/0x2e10
    [   11.437143]  ip_protocol_deliver_rcu+0x23/0x190
    [   11.437810]  ip_local_deliver+0x294/0x350
    [   11.439566]  __netif_receive_skb_one_core+0x15d/0x1a0
    [   11.441995]  process_backlog+0x1b1/0x6b0
    [   11.443148]  net_rx_action+0x37e/0xc40
    [   11.445361]  __do_softirq+0x18c/0x61a
    [   11.445881]  asm_call_on_stack+0x12/0x20
    [   11.446409]  </IRQ>
    [   11.446716]  do_softirq_own_stack+0x34/0x40
    [   11.447259]  do_softirq.part.0+0x26/0x30
    [   11.447827]  __local_bh_enable_ip+0x46/0x50
    [   11.448406]  ip_finish_output2+0x60f/0x1bc0
    [   11.450109]  __ip_queue_xmit+0x71c/0x1b60
    [   11.451861]  __tcp_transmit_skb+0x1727/0x3bb0
    [   11.453789]  tcp_rcv_state_process+0x3070/0x4d3a
    [   11.456810]  tcp_v4_do_rcv+0x2ad/0x780
    [   11.457995]  __release_sock+0x14b/0x2c0
    [   11.458529]  release_sock+0x4a/0x170
    [   11.459005]  __inet_stream_connect+0x467/0xc80
    [   11.461435]  inet_stream_connect+0x4e/0xa0
    [   11.462043]  __sys_connect+0x204/0x270
    [   11.465515]  __x64_sys_connect+0x6a/0xb0
    [   11.466088]  do_syscall_64+0x3e/0x70
    [   11.466617]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [   11.467341] RIP: 0033:0x7f56046dc469
    [   11.467844] Code: Bad RIP value.
    [   11.468282] RSP: 002b:00007f5604dccdd8 EFLAGS: 00000246 ORIG_RAX: 000000000000002a
    [   11.469326] RAX: ffffffffffffffda RBX: 000000000068bf00 RCX: 00007f56046dc469
    [   11.470379] RDX: 0000000000000010 RSI: 0000000020000000 RDI: 0000000000000004
    [   11.471311] RBP: 00000000ffffffff R08: 0000000000000000 R09: 0000000000000000
    [   11.472286] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
    [   11.473341] R13: 000000000041427c R14: 00007f5604dcd5c0 R15: 0000000000000003
    [   11.474321]
    [   11.474527] Allocated by task 4884:
    [   11.475031]  save_stack+0x1b/0x40
    [   11.475548]  __kasan_kmalloc.constprop.0+0xc2/0xd0
    [   11.476182]  tcp_cdg_init+0xf0/0x150
    [   11.476744]  tcp_init_congestion_control+0x9b/0x3a0
    [   11.477435]  tcp_set_congestion_control+0x270/0x32f
    [   11.478088]  do_tcp_setsockopt.isra.0+0x521/0x1a00
    [   11.478744]  __sys_setsockopt+0xff/0x1e0
    [   11.479259]  __x64_sys_setsockopt+0xb5/0x150
    [   11.479895]  do_syscall_64+0x3e/0x70
    [   11.480395]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [   11.481097]
    [   11.481321] Freed by task 4872:
    [   11.481783]  save_stack+0x1b/0x40
    [   11.482230]  __kasan_slab_free+0x12c/0x170
    [   11.482839]  kfree+0x8c/0x230
    [   11.483240]  tcp_cleanup_congestion_control+0x58/0xd0
    [   11.483948]  tcp_v4_destroy_sock+0x57/0x5a0
    [   11.484502]  inet_csk_destroy_sock+0x153/0x2c0
    [   11.485144]  tcp_close+0x932/0xfe0
    [   11.485642]  inet_release+0xc1/0x1c0
    [   11.486131]  __sock_release+0xc0/0x270
    [   11.486697]  sock_close+0xc/0x10
    [   11.487145]  __fput+0x277/0x780
    [   11.487632]  task_work_run+0xeb/0x180
    [   11.488118]  __prepare_exit_to_usermode+0x15a/0x160
    [   11.488834]  do_syscall_64+0x4a/0x70
    [   11.489326]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Wei Wang fixed a part of these CDG-malloc issues with commit c12014440750
    ("tcp: memset ca_priv data to 0 properly").
    
    This patch here fixes the listener-scenario: We make sure that listeners
    setting the congestion-control through setsockopt won't initialize it
    (thus CDG never allocates on listeners). For those who use AF_UNSPEC to
    reuse a socket, tcp_disconnect() is changed to cleanup afterwards.
    
    (The issue can be reproduced at least down to v4.4.x.)
    
    Cc: Wei Wang <weiwan@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Fixes: 2b0a8c9eee81 ("tcp: add CDG congestion control")
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06bb398e7e218f6e22c2663da13eb5c1324dafbe
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jul 8 20:13:59 2020 -0700

    net_sched: fix a memory leak in atm_tc_init()
    
    [ Upstream commit 306381aec7c2b5a658eebca008c8a1b666536cba ]
    
    When tcf_block_get() fails inside atm_tc_init(),
    atm_tc_put() is called to release the qdisc p->link.q.
    But the flow->ref prevents it to do so, as the flow->ref
    is still zero.
    
    Fix this by moving the p->link.ref initialization before
    tcf_block_get().
    
    Fixes: 6529eaba33f0 ("net: sched: introduce tcf block infractructure")
    Reported-and-tested-by: syzbot+d411cff6ab29cc2c311b@syzkaller.appspotmail.com
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31d1c0e9f06fa2c830b749a2f14d2a187e2a9a49
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jul 1 18:39:33 2020 -0700

    tcp: md5: allow changing MD5 keys in all socket states
    
    [ Upstream commit 1ca0fafd73c5268e8fc4b997094b8bb2bfe8deea ]
    
    This essentially reverts commit 721230326891 ("tcp: md5: reject TCP_MD5SIG
    or TCP_MD5SIG_EXT on established sockets")
    
    Mathieu reported that many vendors BGP implementations can
    actually switch TCP MD5 on established flows.
    
    Quoting Mathieu :
       Here is a list of a few network vendors along with their behavior
       with respect to TCP MD5:
    
       - Cisco: Allows for password to be changed, but within the hold-down
         timer (~180 seconds).
       - Juniper: When password is initially set on active connection it will
         reset, but after that any subsequent password changes no network
         resets.
       - Nokia: No notes on if they flap the tcp connection or not.
       - Ericsson/RedBack: Allows for 2 password (old/new) to co-exist until
         both sides are ok with new passwords.
       - Meta-Switch: Expects the password to be set before a connection is
         attempted, but no further info on whether they reset the TCP
         connection on a change.
       - Avaya: Disable the neighbor, then set password, then re-enable.
       - Zebos: Would normally allow the change when socket connected.
    
    We can revert my prior change because commit 9424e2e7ad93 ("tcp: md5: fix potential
    overestimation of TCP option space") removed the leak of 4 kernel bytes to
    the wire that was the main reason for my patch.
    
    While doing my investigations, I found a bug when a MD5 key is changed, leading
    to these commits that stable teams want to consider before backporting this revert :
    
     Commit 6a2febec338d ("tcp: md5: add missing memory barriers in tcp_md5_do_add()/tcp_md5_hash_key()")
     Commit e6ced831ef11 ("tcp: md5: refine tcp_md5_do_add()/tcp_md5_hash_key() barriers")
    
    Fixes: 721230326891 "tcp: md5: reject TCP_MD5SIG or TCP_MD5SIG_EXT on established sockets"
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e940e4baf9c3df9b8d8e0a89fa05032ea017d0d4
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jul 1 11:43:04 2020 -0700

    tcp: md5: refine tcp_md5_do_add()/tcp_md5_hash_key() barriers
    
    [ Upstream commit e6ced831ef11a2a06e8d00aad9d4fc05b610bf38 ]
    
    My prior fix went a bit too far, according to Herbert and Mathieu.
    
    Since we accept that concurrent TCP MD5 lookups might see inconsistent
    keys, we can use READ_ONCE()/WRITE_ONCE() instead of smp_rmb()/smp_wmb()
    
    Clearing all key->key[] is needed to avoid possible KMSAN reports,
    if key->keylen is increased. Since tcp_md5_do_add() is not fast path,
    using __GFP_ZERO to clear all struct tcp_md5sig_key is simpler.
    
    data_race() was added in linux-5.8 and will prevent KCSAN reports,
    this can safely be removed in stable backports, if data_race() is
    not yet backported.
    
    v2: use data_race() both in tcp_md5_hash_key() and tcp_md5_do_add()
    
    Fixes: 6a2febec338d ("tcp: md5: add missing memory barriers in tcp_md5_do_add()/tcp_md5_hash_key()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Marco Elver <elver@google.com>
    Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e5bc0380290898986bbb5630797aee6929dd24b
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jun 30 16:41:01 2020 -0700

    tcp: md5: add missing memory barriers in tcp_md5_do_add()/tcp_md5_hash_key()
    
    [ Upstream commit 6a2febec338df7e7699a52d00b2e1207dcf65b28 ]
    
    MD5 keys are read with RCU protection, and tcp_md5_do_add()
    might update in-place a prior key.
    
    Normally, typical RCU updates would allocate a new piece
    of memory. In this case only key->key and key->keylen might
    be updated, and we do not care if an incoming packet could
    see the old key, the new one, or some intermediate value,
    since changing the key on a live flow is known to be problematic
    anyway.
    
    We only want to make sure that in the case key->keylen
    is changed, cpus in tcp_md5_hash_key() wont try to use
    uninitialized data, or crash because key->keylen was
    read twice to feed sg_init_one() and ahash_request_set_crypt()
    
    Fixes: 9ea88a153001 ("tcp: md5: check md5 signature without socket lock")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3dc63c86d3f91399dbef0edf5509d9f9f4864b2
Author: AceLan Kao <acelan.kao@canonical.com>
Date:   Tue Jul 7 16:14:45 2020 +0800

    net: usb: qmi_wwan: add support for Quectel EG95 LTE modem
    
    [ Upstream commit f815dd5cf48b905eeecf0a2b990e9b7ab048b4f1 ]
    
    Add support for Quectel Wireless Solutions Co., Ltd. EG95 LTE modem
    
    T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  5 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0195 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    Signed-off-by: AceLan Kao <acelan.kao@canonical.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a23401578259b1bb33bce4d7f6c05f57ada557c
Author: Martin Varghese <martin.varghese@nokia.com>
Date:   Sun Jul 5 14:23:49 2020 +0530

    net: Added pointer check for dst->ops->neigh_lookup in dst_neigh_lookup_skb
    
    [ Upstream commit 394de110a73395de2ca4516b0de435e91b11b604 ]
    
    The packets from tunnel devices (eg bareudp) may have only
    metadata in the dst pointer of skb. Hence a pointer check of
    neigh_lookup is needed in dst_neigh_lookup_skb
    
    Kernel crashes when packets from bareudp device is processed in
    the kernel neighbour subsytem.
    
    [  133.384484] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [  133.385240] #PF: supervisor instruction fetch in kernel mode
    [  133.385828] #PF: error_code(0x0010) - not-present page
    [  133.386603] PGD 0 P4D 0
    [  133.386875] Oops: 0010 [#1] SMP PTI
    [  133.387275] CPU: 0 PID: 5045 Comm: ping Tainted: G        W         5.8.0-rc2+ #15
    [  133.388052] Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011
    [  133.391076] RIP: 0010:0x0
    [  133.392401] Code: Bad RIP value.
    [  133.394029] RSP: 0018:ffffb79980003d50 EFLAGS: 00010246
    [  133.396656] RAX: 0000000080000102 RBX: ffff9de2fe0d6600 RCX: ffff9de2fe5e9d00
    [  133.399018] RDX: 0000000000000000 RSI: ffff9de2fe5e9d00 RDI: ffff9de2fc21b400
    [  133.399685] RBP: ffff9de2fe5e9d00 R08: 0000000000000000 R09: 0000000000000000
    [  133.400350] R10: ffff9de2fbc6be22 R11: ffff9de2fe0d6600 R12: ffff9de2fc21b400
    [  133.401010] R13: ffff9de2fe0d6628 R14: 0000000000000001 R15: 0000000000000003
    [  133.401667] FS:  00007fe014918740(0000) GS:ffff9de2fec00000(0000) knlGS:0000000000000000
    [  133.402412] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  133.402948] CR2: ffffffffffffffd6 CR3: 000000003bb72000 CR4: 00000000000006f0
    [  133.403611] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  133.404270] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  133.404933] Call Trace:
    [  133.405169]  <IRQ>
    [  133.405367]  __neigh_update+0x5a4/0x8f0
    [  133.405734]  arp_process+0x294/0x820
    [  133.406076]  ? __netif_receive_skb_core+0x866/0xe70
    [  133.406557]  arp_rcv+0x129/0x1c0
    [  133.406882]  __netif_receive_skb_one_core+0x95/0xb0
    [  133.407340]  process_backlog+0xa7/0x150
    [  133.407705]  net_rx_action+0x2af/0x420
    [  133.408457]  __do_softirq+0xda/0x2a8
    [  133.408813]  asm_call_on_stack+0x12/0x20
    [  133.409290]  </IRQ>
    [  133.409519]  do_softirq_own_stack+0x39/0x50
    [  133.410036]  do_softirq+0x50/0x60
    [  133.410401]  __local_bh_enable_ip+0x50/0x60
    [  133.410871]  ip_finish_output2+0x195/0x530
    [  133.411288]  ip_output+0x72/0xf0
    [  133.411673]  ? __ip_finish_output+0x1f0/0x1f0
    [  133.412122]  ip_send_skb+0x15/0x40
    [  133.412471]  raw_sendmsg+0x853/0xab0
    [  133.412855]  ? insert_pfn+0xfe/0x270
    [  133.413827]  ? vvar_fault+0xec/0x190
    [  133.414772]  sock_sendmsg+0x57/0x80
    [  133.415685]  __sys_sendto+0xdc/0x160
    [  133.416605]  ? syscall_trace_enter+0x1d4/0x2b0
    [  133.417679]  ? __audit_syscall_exit+0x1d9/0x280
    [  133.418753]  ? __prepare_exit_to_usermode+0x5d/0x1a0
    [  133.419819]  __x64_sys_sendto+0x24/0x30
    [  133.420848]  do_syscall_64+0x4d/0x90
    [  133.421768]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  133.422833] RIP: 0033:0x7fe013689c03
    [  133.423749] Code: Bad RIP value.
    [  133.424624] RSP: 002b:00007ffc7288f418 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    [  133.425940] RAX: ffffffffffffffda RBX: 000056151fc63720 RCX: 00007fe013689c03
    [  133.427225] RDX: 0000000000000040 RSI: 000056151fc63720 RDI: 0000000000000003
    [  133.428481] RBP: 00007ffc72890b30 R08: 000056151fc60500 R09: 0000000000000010
    [  133.429757] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000040
    [  133.431041] R13: 000056151fc636e0 R14: 000056151fc616bc R15: 0000000000000080
    [  133.432481] Modules linked in: mpls_iptunnel act_mirred act_tunnel_key cls_flower sch_ingress veth mpls_router ip_tunnel bareudp ip6_udp_tunnel udp_tunnel macsec udp_diag inet_diag unix_diag af_packet_diag netlink_diag binfmt_misc xt_MASQUERADE iptable_nat xt_addrtype xt_conntrack nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 br_netfilter bridge stp llc ebtable_filter ebtables overlay ip6table_filter ip6_tables iptable_filter sunrpc ext4 mbcache jbd2 pcspkr i2c_piix4 virtio_balloon joydev ip_tables xfs libcrc32c ata_generic qxl pata_acpi drm_ttm_helper ttm drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm ata_piix libata virtio_net net_failover virtio_console failover virtio_blk i2c_core virtio_pci virtio_ring serio_raw floppy virtio dm_mirror dm_region_hash dm_log dm_mod
    [  133.444045] CR2: 0000000000000000
    [  133.445082] ---[ end trace f4aeee1958fd1638 ]---
    [  133.446236] RIP: 0010:0x0
    [  133.447180] Code: Bad RIP value.
    [  133.448152] RSP: 0018:ffffb79980003d50 EFLAGS: 00010246
    [  133.449363] RAX: 0000000080000102 RBX: ffff9de2fe0d6600 RCX: ffff9de2fe5e9d00
    [  133.450835] RDX: 0000000000000000 RSI: ffff9de2fe5e9d00 RDI: ffff9de2fc21b400
    [  133.452237] RBP: ffff9de2fe5e9d00 R08: 0000000000000000 R09: 0000000000000000
    [  133.453722] R10: ffff9de2fbc6be22 R11: ffff9de2fe0d6600 R12: ffff9de2fc21b400
    [  133.455149] R13: ffff9de2fe0d6628 R14: 0000000000000001 R15: 0000000000000003
    [  133.456520] FS:  00007fe014918740(0000) GS:ffff9de2fec00000(0000) knlGS:0000000000000000
    [  133.458046] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  133.459342] CR2: ffffffffffffffd6 CR3: 000000003bb72000 CR4: 00000000000006f0
    [  133.460782] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  133.462240] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  133.463697] Kernel panic - not syncing: Fatal exception in interrupt
    [  133.465226] Kernel Offset: 0xfa00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
    [  133.467025] ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---
    
    Fixes: aaa0c23cb901 ("Fix dst_neigh_lookup/dst_neigh_lookup_skb return value handling bug")
    Signed-off-by: Martin Varghese <martin.varghese@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf2c621c8d5e643eee02eea1d753a8743b742184
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Jun 27 13:31:50 2020 -0700

    llc: make sure applications use ARPHRD_ETHER
    
    [ Upstream commit a9b1110162357689a34992d5c925852948e5b9fd ]
    
    syzbot was to trigger a bug by tricking AF_LLC with
    non sensible addr->sllc_arphrd
    
    It seems clear LLC requires an Ethernet device.
    
    Back in commit abf9d537fea2 ("llc: add support for SO_BINDTODEVICE")
    Octavian Purdila added possibility for application to use a zero
    value for sllc_arphrd, convert it to ARPHRD_ETHER to not cause
    regressions on existing applications.
    
    BUG: KASAN: use-after-free in __read_once_size include/linux/compiler.h:199 [inline]
    BUG: KASAN: use-after-free in list_empty include/linux/list.h:268 [inline]
    BUG: KASAN: use-after-free in waitqueue_active include/linux/wait.h:126 [inline]
    BUG: KASAN: use-after-free in wq_has_sleeper include/linux/wait.h:160 [inline]
    BUG: KASAN: use-after-free in skwq_has_sleeper include/net/sock.h:2092 [inline]
    BUG: KASAN: use-after-free in sock_def_write_space+0x642/0x670 net/core/sock.c:2813
    Read of size 8 at addr ffff88801e0b4078 by task ksoftirqd/3/27
    
    CPU: 3 PID: 27 Comm: ksoftirqd/3 Not tainted 5.5.0-rc1-syzkaller #0
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x197/0x210 lib/dump_stack.c:118
     print_address_description.constprop.0.cold+0xd4/0x30b mm/kasan/report.c:374
     __kasan_report.cold+0x1b/0x41 mm/kasan/report.c:506
     kasan_report+0x12/0x20 mm/kasan/common.c:639
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:135
     __read_once_size include/linux/compiler.h:199 [inline]
     list_empty include/linux/list.h:268 [inline]
     waitqueue_active include/linux/wait.h:126 [inline]
     wq_has_sleeper include/linux/wait.h:160 [inline]
     skwq_has_sleeper include/net/sock.h:2092 [inline]
     sock_def_write_space+0x642/0x670 net/core/sock.c:2813
     sock_wfree+0x1e1/0x260 net/core/sock.c:1958
     skb_release_head_state+0xeb/0x260 net/core/skbuff.c:652
     skb_release_all+0x16/0x60 net/core/skbuff.c:663
     __kfree_skb net/core/skbuff.c:679 [inline]
     consume_skb net/core/skbuff.c:838 [inline]
     consume_skb+0xfb/0x410 net/core/skbuff.c:832
     __dev_kfree_skb_any+0xa4/0xd0 net/core/dev.c:2967
     dev_kfree_skb_any include/linux/netdevice.h:3650 [inline]
     e1000_unmap_and_free_tx_resource.isra.0+0x21b/0x3a0 drivers/net/ethernet/intel/e1000/e1000_main.c:1963
     e1000_clean_tx_irq drivers/net/ethernet/intel/e1000/e1000_main.c:3854 [inline]
     e1000_clean+0x4cc/0x1d10 drivers/net/ethernet/intel/e1000/e1000_main.c:3796
     napi_poll net/core/dev.c:6532 [inline]
     net_rx_action+0x508/0x1120 net/core/dev.c:6600
     __do_softirq+0x262/0x98c kernel/softirq.c:292
     run_ksoftirqd kernel/softirq.c:603 [inline]
     run_ksoftirqd+0x8e/0x110 kernel/softirq.c:595
     smpboot_thread_fn+0x6a3/0xa40 kernel/smpboot.c:165
     kthread+0x361/0x430 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    Allocated by task 8247:
     save_stack+0x23/0x90 mm/kasan/common.c:72
     set_track mm/kasan/common.c:80 [inline]
     __kasan_kmalloc mm/kasan/common.c:513 [inline]
     __kasan_kmalloc.constprop.0+0xcf/0xe0 mm/kasan/common.c:486
     kasan_slab_alloc+0xf/0x20 mm/kasan/common.c:521
     slab_post_alloc_hook mm/slab.h:584 [inline]
     slab_alloc mm/slab.c:3320 [inline]
     kmem_cache_alloc+0x121/0x710 mm/slab.c:3484
     sock_alloc_inode+0x1c/0x1d0 net/socket.c:240
     alloc_inode+0x68/0x1e0 fs/inode.c:230
     new_inode_pseudo+0x19/0xf0 fs/inode.c:919
     sock_alloc+0x41/0x270 net/socket.c:560
     __sock_create+0xc2/0x730 net/socket.c:1384
     sock_create net/socket.c:1471 [inline]
     __sys_socket+0x103/0x220 net/socket.c:1513
     __do_sys_socket net/socket.c:1522 [inline]
     __se_sys_socket net/socket.c:1520 [inline]
     __ia32_sys_socket+0x73/0xb0 net/socket.c:1520
     do_syscall_32_irqs_on arch/x86/entry/common.c:337 [inline]
     do_fast_syscall_32+0x27b/0xe16 arch/x86/entry/common.c:408
     entry_SYSENTER_compat+0x70/0x7f arch/x86/entry/entry_64_compat.S:139
    
    Freed by task 17:
     save_stack+0x23/0x90 mm/kasan/common.c:72
     set_track mm/kasan/common.c:80 [inline]
     kasan_set_free_info mm/kasan/common.c:335 [inline]
     __kasan_slab_free+0x102/0x150 mm/kasan/common.c:474
     kasan_slab_free+0xe/0x10 mm/kasan/common.c:483
     __cache_free mm/slab.c:3426 [inline]
     kmem_cache_free+0x86/0x320 mm/slab.c:3694
     sock_free_inode+0x20/0x30 net/socket.c:261
     i_callback+0x44/0x80 fs/inode.c:219
     __rcu_reclaim kernel/rcu/rcu.h:222 [inline]
     rcu_do_batch kernel/rcu/tree.c:2183 [inline]
     rcu_core+0x570/0x1540 kernel/rcu/tree.c:2408
     rcu_core_si+0x9/0x10 kernel/rcu/tree.c:2417
     __do_softirq+0x262/0x98c kernel/softirq.c:292
    
    The buggy address belongs to the object at ffff88801e0b4000
     which belongs to the cache sock_inode_cache of size 1152
    The buggy address is located 120 bytes inside of
     1152-byte region [ffff88801e0b4000, ffff88801e0b4480)
    The buggy address belongs to the page:
    page:ffffea0000782d00 refcount:1 mapcount:0 mapping:ffff88807aa59c40 index:0xffff88801e0b4ffd
    raw: 00fffe0000000200 ffffea00008e6c88 ffffea0000782d48 ffff88807aa59c40
    raw: ffff88801e0b4ffd ffff88801e0b4000 0000000100000003 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88801e0b3f00: fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
     ffff88801e0b3f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    >ffff88801e0b4000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                                    ^
     ffff88801e0b4080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88801e0b4100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    Fixes: abf9d537fea2 ("llc: add support for SO_BINDTODEVICE")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12dd6b12cb81836d8675b8ebe0774df762cd4ccf
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jul 7 02:02:32 2020 +0800

    l2tp: remove skb_dst_set() from l2tp_xmit_skb()
    
    [ Upstream commit 27d53323664c549b5bb2dfaaf6f7ad6e0376a64e ]
    
    In the tx path of l2tp, l2tp_xmit_skb() calls skb_dst_set() to set
    skb's dst. However, it will eventually call inet6_csk_xmit() or
    ip_queue_xmit() where skb's dst will be overwritten by:
    
       skb_dst_set_noref(skb, dst);
    
    without releasing the old dst in skb. Then it causes dst/dev refcnt leak:
    
      unregister_netdevice: waiting for eth0 to become free. Usage count = 1
    
    This can be reproduced by simply running:
    
      # modprobe l2tp_eth && modprobe l2tp_ip
      # sh ./tools/testing/selftests/net/l2tp.sh
    
    So before going to inet6_csk_xmit() or ip_queue_xmit(), skb's dst
    should be dropped. This patch is to fix it by removing skb_dst_set()
    from l2tp_xmit_skb() and moving skb_dst_drop() into l2tp_xmit_core().
    
    Fixes: 3557baabf280 ("[L2TP]: PPP over L2TP driver core")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: James Chapman <jchapman@katalix.com>
    Tested-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b99658d8d19997a271f95bed1611a443f76bb162
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Fri Jul 3 17:00:32 2020 +0200

    ipv4: fill fl4_icmp_{type,code} in ping_v4_sendmsg
    
    [ Upstream commit 5eff06902394425c722f0a44d9545909a8800f79 ]
    
    IPv4 ping sockets don't set fl4.fl4_icmp_{type,code}, which leads to
    incomplete IPsec ACQUIRE messages being sent to userspace. Currently,
    both raw sockets and IPv6 ping sockets set those fields.
    
    Expected output of "ip xfrm monitor":
        acquire proto esp
          sel src 10.0.2.15/32 dst 8.8.8.8/32 proto icmp type 8 code 0 dev ens4
          policy src 10.0.2.15/32 dst 8.8.8.8/32
            <snip>
    
    Currently with ping sockets:
        acquire proto esp
          sel src 10.0.2.15/32 dst 8.8.8.8/32 proto icmp type 0 code 0 dev ens4
          policy src 10.0.2.15/32 dst 8.8.8.8/32
            <snip>
    
    The Libreswan test suite found this problem after Fedora changed the
    value for the sysctl net.ipv4.ping_group_range.
    
    Fixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind")
    Reported-by: Paul Wouters <pwouters@redhat.com>
    Tested-by: Paul Wouters <pwouters@redhat.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 936d94fabbe705fa3b3870e539e9106444e18340
Author: Sean Tranchetti <stranche@codeaurora.org>
Date:   Tue Jun 30 11:50:17 2020 -0600

    genetlink: remove genl_bind
    
    [ Upstream commit 1e82a62fec613844da9e558f3493540a5b7a7b67 ]
    
    A potential deadlock can occur during registering or unregistering a
    new generic netlink family between the main nl_table_lock and the
    cb_lock where each thread wants the lock held by the other, as
    demonstrated below.
    
    1) Thread 1 is performing a netlink_bind() operation on a socket. As part
       of this call, it will call netlink_lock_table(), incrementing the
       nl_table_users count to 1.
    2) Thread 2 is registering (or unregistering) a genl_family via the
       genl_(un)register_family() API. The cb_lock semaphore will be taken for
       writing.
    3) Thread 1 will call genl_bind() as part of the bind operation to handle
       subscribing to GENL multicast groups at the request of the user. It will
       attempt to take the cb_lock semaphore for reading, but it will fail and
       be scheduled away, waiting for Thread 2 to finish the write.
    4) Thread 2 will call netlink_table_grab() during the (un)registration
       call. However, as Thread 1 has incremented nl_table_users, it will not
       be able to proceed, and both threads will be stuck waiting for the
       other.
    
    genl_bind() is a noop, unless a genl_family implements the mcast_bind()
    function to handle setting up family-specific multicast operations. Since
    no one in-tree uses this functionality as Cong pointed out, simply removing
    the genl_bind() function will remove the possibility for deadlock, as there
    is no attempt by Thread 1 above to take the cb_lock semaphore.
    
    Fixes: c380d9a7afff ("genetlink: pass multicast bind/unbind to families")
    Suggested-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Johannes Berg <johannes.berg@intel.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Sean Tranchetti <stranche@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3a77e7f5e00352ff0fa898c68bb2141e9a66e6d
Author: Janosch Frank <frankja@linux.ibm.com>
Date:   Tue Jul 7 15:38:54 2020 +0200

    s390/mm: fix huge pte soft dirty copying
    
    commit 528a9539348a0234375dfaa1ca5dbbb2f8f8e8d2 upstream.
    
    If the pmd is soft dirty we must mark the pte as soft dirty (and not dirty).
    This fixes some cases for guest migration with huge page backings.
    
    Cc: <stable@vger.kernel.org> # 4.8
    Fixes: bc29b7ac1d9f ("s390/mm: clean up pte/pmd encoding")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f11ae9a79ea5ba55a488f1ab17e795d599d82fa9
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Wed May 27 14:18:45 2020 -0700

    ARC: elf: use right ELF_ARCH
    
    commit b7faf971081a4e56147f082234bfff55135305cb upstream.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d939945a2a89ec6a6a31b158ae822f4e502324a8
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue May 19 22:28:32 2020 -0700

    ARC: entry: fix potential EFA clobber when TIF_SYSCALL_TRACE
    
    commit 00fdec98d9881bf5173af09aebd353ab3b9ac729 upstream.
    
    Trap handler for syscall tracing reads EFA (Exception Fault Address),
    in case strace wants PC of trap instruction (EFA is not part of pt_regs
    as of current code).
    
    However this EFA read is racy as it happens after dropping to pure
    kernel mode (re-enabling interrupts). A taken interrupt could
    context-switch, trigger a different task's trap, clobbering EFA for this
    execution context.
    
    Fix this by reading EFA early, before re-enabling interrupts. A slight
    side benefit is de-duplication of FAKE_RET_FROM_EXCPN in trap handler.
    The trap handler is common to both ARCompact and ARCv2 builds too.
    
    This just came out of code rework/review and no real problem was reported
    but is clearly a potential problem specially for strace.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5d07c5a0758bf28be89d3e41a0a414e4d8a2e36
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jul 8 12:25:20 2020 -0400

    dm: use noio when sending kobject event
    
    commit 6958c1c640af8c3f40fa8a2eee3b5b905d95b677 upstream.
    
    kobject_uevent may allocate memory and it may be called while there are dm
    devices suspended. The allocation may recurse into a suspended device,
    causing a deadlock. We must set the noio flag when sending a uevent.
    
    The observed deadlock was reported here:
    https://www.redhat.com/archives/dm-devel/2020-March/msg00025.html
    
    Reported-by: Khazhismel Kumykov <khazhy@google.com>
    Reported-by: Tahsin Erdogan <tahsin@google.com>
    Reported-by: Gabriel Krisman Bertazi <krisman@collabora.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8d95d0e7d0ba44b48c657154d32a18cd50e3c96
Author: Tom Rix <trix@redhat.com>
Date:   Mon Jul 6 05:28:57 2020 -0700

    drm/radeon: fix double free
    
    commit 41855a898650803e24b284173354cc3e44d07725 upstream.
    
    clang static analysis flags this error
    
    drivers/gpu/drm/radeon/ci_dpm.c:5652:9: warning: Use of memory after it is freed [unix.Malloc]
                    kfree(rdev->pm.dpm.ps[i].ps_priv);
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/radeon/ci_dpm.c:5654:2: warning: Attempt to free released memory [unix.Malloc]
            kfree(rdev->pm.dpm.ps);
            ^~~~~~~~~~~~~~~~~~~~~~
    
    problem is reported in ci_dpm_fini, with these code blocks.
    
            for (i = 0; i < rdev->pm.dpm.num_ps; i++) {
                    kfree(rdev->pm.dpm.ps[i].ps_priv);
            }
            kfree(rdev->pm.dpm.ps);
    
    The first free happens in ci_parse_power_table where it cleans up locally
    on a failure.  ci_dpm_fini also does a cleanup.
    
            ret = ci_parse_power_table(rdev);
            if (ret) {
                    ci_dpm_fini(rdev);
                    return ret;
            }
    
    So remove the cleanup in ci_parse_power_table and
    move the num_ps calculation to inside the loop so ci_dpm_fini
    will know how many array elements to free.
    
    Fixes: cc8dbbb4f62a ("drm/radeon: add dpm support for CI dGPUs (v2)")
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 332995cee4df953e51e908f54eabca2c7ef614c5
Author: Boris Burkov <boris@bur.io>
Date:   Wed Jun 17 11:35:19 2020 -0700

    btrfs: fix fatal extent_buffer readahead vs releasepage race
    
    commit 6bf9cd2eed9aee6d742bb9296c994a91f5316949 upstream.
    
    Under somewhat convoluted conditions, it is possible to attempt to
    release an extent_buffer that is under io, which triggers a BUG_ON in
    btrfs_release_extent_buffer_pages.
    
    This relies on a few different factors. First, extent_buffer reads done
    as readahead for searching use WAIT_NONE, so they free the local extent
    buffer reference while the io is outstanding. However, they should still
    be protected by TREE_REF. However, if the system is doing signficant
    reclaim, and simultaneously heavily accessing the extent_buffers, it is
    possible for releasepage to race with two concurrent readahead attempts
    in a way that leaves TREE_REF unset when the readahead extent buffer is
    released.
    
    Essentially, if two tasks race to allocate a new extent_buffer, but the
    winner who attempts the first io is rebuffed by a page being locked
    (likely by the reclaim itself) then the loser will still go ahead with
    issuing the readahead. The loser's call to find_extent_buffer must also
    race with the reclaim task reading the extent_buffer's refcount as 1 in
    a way that allows the reclaim to re-clear the TREE_REF checked by
    find_extent_buffer.
    
    The following represents an example execution demonstrating the race:
    
                CPU0                                                         CPU1                                           CPU2
    reada_for_search                                            reada_for_search
      readahead_tree_block                                        readahead_tree_block
        find_create_tree_block                                      find_create_tree_block
          alloc_extent_buffer                                         alloc_extent_buffer
                                                                      find_extent_buffer // not found
                                                                      allocates eb
                                                                      lock pages
                                                                      associate pages to eb
                                                                      insert eb into radix tree
                                                                      set TREE_REF, refs == 2
                                                                      unlock pages
                                                                  read_extent_buffer_pages // WAIT_NONE
                                                                    not uptodate (brand new eb)
                                                                                                                lock_page
                                                                    if !trylock_page
                                                                      goto unlock_exit // not an error
                                                                  free_extent_buffer
                                                                    release_extent_buffer
                                                                      atomic_dec_and_test refs to 1
            find_extent_buffer // found
                                                                                                                try_release_extent_buffer
                                                                                                                  take refs_lock
                                                                                                                  reads refs == 1; no io
              atomic_inc_not_zero refs to 2
              mark_buffer_accessed
                check_buffer_tree_ref
                  // not STALE, won't take refs_lock
                  refs == 2; TREE_REF set // no action
        read_extent_buffer_pages // WAIT_NONE
                                                                                                                  clear TREE_REF
                                                                                                                  release_extent_buffer
                                                                                                                    atomic_dec_and_test refs to 1
                                                                                                                    unlock_page
          still not uptodate (CPU1 read failed on trylock_page)
          locks pages
          set io_pages > 0
          submit io
          return
        free_extent_buffer
          release_extent_buffer
            dec refs to 0
            delete from radix tree
            btrfs_release_extent_buffer_pages
              BUG_ON(io_pages > 0)!!!
    
    We observe this at a very low rate in production and were also able to
    reproduce it in a test environment by introducing some spurious delays
    and by introducing probabilistic trylock_page failures.
    
    To fix it, we apply check_tree_ref at a point where it could not
    possibly be unset by a competing task: after io_pages has been
    incremented. All the codepaths that clear TREE_REF check for io, so they
    would not be able to clear it after this point until the io is done.
    
    Stack trace, for reference:
    [1417839.424739] ------------[ cut here ]------------
    [1417839.435328] kernel BUG at fs/btrfs/extent_io.c:4841!
    [1417839.447024] invalid opcode: 0000 [#1] SMP
    [1417839.502972] RIP: 0010:btrfs_release_extent_buffer_pages+0x20/0x1f0
    [1417839.517008] Code: ed e9 ...
    [1417839.558895] RSP: 0018:ffffc90020bcf798 EFLAGS: 00010202
    [1417839.570816] RAX: 0000000000000002 RBX: ffff888102d6def0 RCX: 0000000000000028
    [1417839.586962] RDX: 0000000000000002 RSI: ffff8887f0296482 RDI: ffff888102d6def0
    [1417839.603108] RBP: ffff88885664a000 R08: 0000000000000046 R09: 0000000000000238
    [1417839.619255] R10: 0000000000000028 R11: ffff88885664af68 R12: 0000000000000000
    [1417839.635402] R13: 0000000000000000 R14: ffff88875f573ad0 R15: ffff888797aafd90
    [1417839.651549] FS:  00007f5a844fa700(0000) GS:ffff88885f680000(0000) knlGS:0000000000000000
    [1417839.669810] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [1417839.682887] CR2: 00007f7884541fe0 CR3: 000000049f609002 CR4: 00000000003606e0
    [1417839.699037] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [1417839.715187] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [1417839.731320] Call Trace:
    [1417839.737103]  release_extent_buffer+0x39/0x90
    [1417839.746913]  read_block_for_search.isra.38+0x2a3/0x370
    [1417839.758645]  btrfs_search_slot+0x260/0x9b0
    [1417839.768054]  btrfs_lookup_file_extent+0x4a/0x70
    [1417839.778427]  btrfs_get_extent+0x15f/0x830
    [1417839.787665]  ? submit_extent_page+0xc4/0x1c0
    [1417839.797474]  ? __do_readpage+0x299/0x7a0
    [1417839.806515]  __do_readpage+0x33b/0x7a0
    [1417839.815171]  ? btrfs_releasepage+0x70/0x70
    [1417839.824597]  extent_readpages+0x28f/0x400
    [1417839.833836]  read_pages+0x6a/0x1c0
    [1417839.841729]  ? startup_64+0x2/0x30
    [1417839.849624]  __do_page_cache_readahead+0x13c/0x1a0
    [1417839.860590]  filemap_fault+0x6c7/0x990
    [1417839.869252]  ? xas_load+0x8/0x80
    [1417839.876756]  ? xas_find+0x150/0x190
    [1417839.884839]  ? filemap_map_pages+0x295/0x3b0
    [1417839.894652]  __do_fault+0x32/0x110
    [1417839.902540]  __handle_mm_fault+0xacd/0x1000
    [1417839.912156]  handle_mm_fault+0xaa/0x1c0
    [1417839.921004]  __do_page_fault+0x242/0x4b0
    [1417839.930044]  ? page_fault+0x8/0x30
    [1417839.937933]  page_fault+0x1e/0x30
    [1417839.945631] RIP: 0033:0x33c4bae
    [1417839.952927] Code: Bad RIP value.
    [1417839.960411] RSP: 002b:00007f5a844f7350 EFLAGS: 00010206
    [1417839.972331] RAX: 000000000000006e RBX: 1614b3ff6a50398a RCX: 0000000000000000
    [1417839.988477] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000002
    [1417840.004626] RBP: 00007f5a844f7420 R08: 000000000000006e R09: 00007f5a94aeccb8
    [1417840.020784] R10: 00007f5a844f7350 R11: 0000000000000000 R12: 00007f5a94aecc79
    [1417840.036932] R13: 00007f5a94aecc78 R14: 00007f5a94aecc90 R15: 00007f5a94aecc40
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Boris Burkov <boris@bur.io>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67ec42751b8023cb01ff8f87aad673e7360f2c82
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jul 14 14:03:44 2020 +0200

    Revert "ath9k: Fix general protection fault in ath9k_hif_usb_rx_cb"
    
    This reverts commit 97efdabe90f035d16d3f79218055e87c76ec02e6 which is
    commit 2bbcaaee1fcbd83272e29f31e2bb7e70d8c49e05 upstream.
    
    It is being reverted upstream, just hasn't made it there yet and is
    causing lots of problems.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Cc: Qiujun Huang <hqjagain@gmail.com>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69793a2f0563571f98a3a7e4645f237f129fb4d4
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jul 2 21:04:21 2020 -0700

    KVM: x86: Mark CR4.TSD as being possibly owned by the guest
    
    commit 7c83d096aed055a7763a03384f92115363448b71 upstream.
    
    Mark CR4.TSD as being possibly owned by the guest as that is indeed the
    case on VMX.  Without TSD being tagged as possibly owned by the guest, a
    targeted read of CR4 to get TSD could observe a stale value.  This bug
    is benign in the current code base as the sole consumer of TSD is the
    emulator (for RDTSC) and the emulator always "reads" the entirety of CR4
    when grabbing bits.
    
    Add a build-time assertion in to ensure VMX doesn't hand over more CR4
    bits without also updating x86.
    
    Fixes: 52ce3c21aec3 ("x86,kvm,vmx: Don't trap writes to CR4.TSD")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200703040422.31536-2-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63c9b8326701d77ac83632d4c100e9142f116617
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jul 2 19:17:14 2020 -0700

    KVM: x86: Inject #GP if guest attempts to toggle CR4.LA57 in 64-bit mode
    
    commit d74fcfc1f0ff4b6c26ecef1f9e48d8089ab4eaac upstream.
    
    Inject a #GP on MOV CR4 if CR4.LA57 is toggled in 64-bit mode, which is
    illegal per Intel's SDM:
    
      CR4.LA57
        57-bit linear addresses (bit 12 of CR4) ... blah blah blah ...
        This bit cannot be modified in IA-32e mode.
    
    Note, the pseudocode for MOV CR doesn't call out the fault condition,
    which is likely why the check was missed during initial development.
    This is arguably an SDM bug and will hopefully be fixed in future
    release of the SDM.
    
    Fixes: fd8cb433734ee ("KVM: MMU: Expose the LA57 feature to VM.")
    Cc: stable@vger.kernel.org
    Reported-by: Sebastien Boeuf <sebastien.boeuf@intel.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200703021714.5549-1-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 990c53fbbf456d6236af62aa14ccffc9e0002d21
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jun 30 07:07:20 2020 -0400

    KVM: x86: bit 8 of non-leaf PDPEs is not reserved
    
    commit 5ecad245de2ae23dc4e2dbece92f8ccfbaed2fa7 upstream.
    
    Bit 8 would be the "global" bit, which does not quite make sense for non-leaf
    page table entries.  Intel ignores it; AMD ignores it in PDEs and PDPEs, but
    reserves it in PML4Es.
    
    Probably, earlier versions of the AMD manual documented it as reserved in PDPEs
    as well, and that behavior made it into KVM as well as kvm-unit-tests; fix it.
    
    Cc: stable@vger.kernel.org
    Reported-by: Nadav Amit <namit@vmware.com>
    Fixes: a0c0feb57992 ("KVM: x86: reserve bit 8 of non-leaf PDPEs and PML4Es in 64-bit mode on AMD", 2014-09-03)
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20f40462638bbe972b7341b1cb1d0c1c0d2f5355
Author: Andrew Scull <ascull@google.com>
Date:   Mon Jul 6 10:52:59 2020 +0100

    KVM: arm64: Stop clobbering x0 for HVC_SOFT_RESTART
    
    commit b9e10d4a6c9f5cbe6369ce2c17ebc67d2e5a4be5 upstream.
    
    HVC_SOFT_RESTART is given values for x0-2 that it should installed
    before exiting to the new address so should not set x0 to stub HVC
    success or failure code.
    
    Fixes: af42f20480bf1 ("arm64: hyp-stub: Zero x0 on successful stub handling")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andrew Scull <ascull@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200706095259.1338221-1-ascull@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a47a77c4f6e16581a5ecdc0f20bef2ddccaafac
Author: Will Deacon <will@kernel.org>
Date:   Wed Jul 8 17:25:46 2020 +0100

    KVM: arm64: Fix definition of PAGE_HYP_DEVICE
    
    commit 68cf617309b5f6f3a651165f49f20af1494753ae upstream.
    
    PAGE_HYP_DEVICE is intended to encode attribute bits for an EL2 stage-1
    pte mapping a device. Unfortunately, it includes PROT_DEVICE_nGnRE which
    encodes attributes for EL1 stage-1 mappings such as UXN and nG, which are
    RES0 for EL2, and DBM which is meaningless as TCR_EL2.HD is not set.
    
    Fix the definition of PAGE_HYP_DEVICE so that it doesn't set RES0 bits
    at EL2.
    
    Acked-by: Marc Zyngier <maz@kernel.org>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200708162546.26176-1-will@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d12a5e9f1cb20d2f723ccaa2d5d4305a0f39f678
Author: Hector Martin <marcan@marcan.st>
Date:   Thu Jul 2 16:14:33 2020 +0900

    ALSA: usb-audio: add quirk for MacroSilicon MS2109
    
    commit e337bf19f6af38d5c3fa6d06cd594e0f890ca1ac upstream.
    
    These devices claim to be 96kHz mono, but actually are 48kHz stereo with
    swapped channels and unaligned transfers.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200702071433.237843-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ebc7dd07e85632de6908100c092b2eef48e3ec9
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Jun 25 16:38:33 2020 +0800

    ALSA: hda - let hs_mic be picked ahead of hp_mic
    
    commit 6a6ca7881b1ab1c13fe0d70bae29211a65dd90de upstream.
    
    We have a Dell AIO, there is neither internal speaker nor internal
    mic, only a multi-function audio jack on it.
    
    Users reported that after freshly installing the OS and plug
    a headset to the audio jack, the headset can't output sound. I
    reproduced this bug, at that moment, the Input Source is as below:
    Simple mixer control 'Input Source',0
      Capabilities: cenum
      Items: 'Headphone Mic' 'Headset Mic'
      Item0: 'Headphone Mic'
    
    That is because the patch_realtek will set this audio jack as mic_in
    mode if Input Source's value is hp_mic.
    
    If it is not fresh installing, this issue will not happen since the
    systemd will run alsactl restore -f /var/lib/alsa/asound.state, this
    will set the 'Input Source' according to history value.
    
    If there is internal speaker or internal mic, this issue will not
    happen since there is valid sink/source in the pulseaudio, the PA will
    set the 'Input Source' according to active_port.
    
    To fix this issue, change the parser function to let the hs_mic be
    stored ahead of hp_mic.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200625083833.11264-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 411c64c5c7761048e15c67e4407bf81bcc466bec
Author: xidongwang <wangxidong_97@163.com>
Date:   Sun Jul 5 20:27:38 2020 -0700

    ALSA: opl3: fix infoleak in opl3
    
    commit ad155712bb1ea2151944cf06a0e08c315c70c1e3 upstream.
    
    The stack object “info” in snd_opl3_ioctl() has a leaking problem.
    It has 2 padding bytes which are not initialized and leaked via
    “copy_to_user”.
    
    Signed-off-by: xidongwang <wangxidong_97@163.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1594006058-30362-1-git-send-email-wangxidong_97@163.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ca1fec1b45216158258c053d7898fd3245e6a7c
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Fri Jul 10 16:41:38 2020 +0300

    mlxsw: spectrum_router: Remove inappropriate usage of WARN_ON()
    
    [ Upstream commit d9d5420273997664a1c09151ca86ac993f2f89c1 ]
    
    We should not trigger a warning when a memory allocation fails. Remove
    the WARN_ON().
    
    The warning is constantly triggered by syzkaller when it is injecting
    faults:
    
    [ 2230.758664] FAULT_INJECTION: forcing a failure.
    [ 2230.758664] name failslab, interval 1, probability 0, space 0, times 0
    [ 2230.762329] CPU: 3 PID: 1407 Comm: syz-executor.0 Not tainted 5.8.0-rc2+ #28
    ...
    [ 2230.898175] WARNING: CPU: 3 PID: 1407 at drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c:6265 mlxsw_sp_router_fib_event+0xfad/0x13e0
    [ 2230.898179] Kernel panic - not syncing: panic_on_warn set ...
    [ 2230.898183] CPU: 3 PID: 1407 Comm: syz-executor.0 Not tainted 5.8.0-rc2+ #28
    [ 2230.898190] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    
    Fixes: 3057224e014c ("mlxsw: spectrum_router: Implement FIB offload in deferred work")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcfadeaa4abedb9ef9a9f48833c16ad3aeb858c9
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Fri Jul 10 14:46:42 2020 +0200

    net: macb: mark device wake capable when "magic-packet" property present
    
    [ Upstream commit ced4799d06375929e013eea04ba6908207afabbe ]
    
    Change the way the "magic-packet" DT property is handled in the
    macb_probe() function, matching DT binding documentation.
    Now we mark the device as "wakeup capable" instead of calling the
    device_init_wakeup() function that would enable the wakeup source.
    
    For Ethernet WoL, enabling the wakeup_source is done by
    using ethtool and associated macb_set_wol() function that
    already calls device_set_wakeup_enable() for this purpose.
    
    That would reduce power consumption by cutting more clocks if
    "magic-packet" property is set but WoL is not configured by ethtool.
    
    Fixes: 3e2a5e153906 ("net: macb: add wake-on-lan support via magic packet")
    Cc: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Harini Katakam <harini.katakam@xilinx.com>
    Cc: Sergio Prado <sergio.prado@e-labworks.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b20c7a106cf64558b90152eef627ca31a4047091
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Fri Jul 10 12:55:08 2020 +0200

    bnxt_en: fix NULL dereference in case SR-IOV configuration fails
    
    [ Upstream commit c8b1d7436045d3599bae56aef1682813ecccaad7 ]
    
    we need to set 'active_vfs' back to 0, if something goes wrong during the
    allocation of SR-IOV resources: otherwise, further VF configurations will
    wrongly assume that bp->pf.vf[x] are valid memory locations, and commands
    like the ones in the following sequence:
    
     # echo 2 >/sys/bus/pci/devices/${ADDR}/sriov_numvfs
     # ip link set dev ens1f0np0 up
     # ip link set dev ens1f0np0 vf 0 trust on
    
    will cause a kernel crash similar to this:
    
     bnxt_en 0000:3b:00.0: not enough MMIO resources for SR-IOV
     BUG: kernel NULL pointer dereference, address: 0000000000000014
     #PF: supervisor read access in kernel mode
     #PF: error_code(0x0000) - not-present page
     PGD 0 P4D 0
     Oops: 0000 [#1] SMP PTI
     CPU: 43 PID: 2059 Comm: ip Tainted: G          I       5.8.0-rc2.upstream+ #871
     Hardware name: Dell Inc. PowerEdge R740/08D89F, BIOS 2.2.11 06/13/2019
     RIP: 0010:bnxt_set_vf_trust+0x5b/0x110 [bnxt_en]
     Code: 44 24 58 31 c0 e8 f5 fb ff ff 85 c0 0f 85 b6 00 00 00 48 8d 1c 5b 41 89 c6 b9 0b 00 00 00 48 c1 e3 04 49 03 9c 24 f0 0e 00 00 <8b> 43 14 89 c2 83 c8 10 83 e2 ef 45 84 ed 49 89 e5 0f 44 c2 4c 89
     RSP: 0018:ffffac6246a1f570 EFLAGS: 00010246
     RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000000000000b
     RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff98b28f538900
     RBP: ffff98b28f538900 R08: 0000000000000000 R09: 0000000000000008
     R10: ffffffffb9515be0 R11: ffffac6246a1f678 R12: ffff98b28f538000
     R13: 0000000000000001 R14: 0000000000000000 R15: ffffffffc05451e0
     FS:  00007fde0f688800(0000) GS:ffff98baffd40000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000014 CR3: 000000104bb0a003 CR4: 00000000007606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     PKRU: 55555554
     Call Trace:
      do_setlink+0x994/0xfe0
      __rtnl_newlink+0x544/0x8d0
      rtnl_newlink+0x47/0x70
      rtnetlink_rcv_msg+0x29f/0x350
      netlink_rcv_skb+0x4a/0x110
      netlink_unicast+0x21d/0x300
      netlink_sendmsg+0x329/0x450
      sock_sendmsg+0x5b/0x60
      ____sys_sendmsg+0x204/0x280
      ___sys_sendmsg+0x88/0xd0
      __sys_sendmsg+0x5e/0xa0
      do_syscall_64+0x47/0x80
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: c0c050c58d840 ("bnxt_en: New Broadcom ethernet driver.")
    Reported-by: Fei Liu <feliu@redhat.com>
    CC: Jonathan Toppins <jtoppins@redhat.com>
    CC: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Reviewed-by: Michael Chan <michael.chan@broadcom.com>
    Acked-by: Jonathan Toppins <jtoppins@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3373994d658f6b4ed3b58b344ce0ab32f720e608
Author: Zheng Bin <zhengbin13@huawei.com>
Date:   Mon Jun 29 09:23:49 2020 +0800

    nbd: Fix memory leak in nbd_add_socket
    
    [ Upstream commit 579dd91ab3a5446b148e7f179b6596b270dace46 ]
    
    When adding first socket to nbd, if nsock's allocation failed, the data
    structure member "config->socks" was reallocated, but the data structure
    member "config->num_connections" was not updated. A memory leak will occur
    then because the function "nbd_config_put" will free "config->socks" only
    when "config->num_connections" is not zero.
    
    Fixes: 03bf73c315ed ("nbd: prevent memory leak")
    Reported-by: syzbot+934037347002901b8d2a@syzkaller.appspotmail.com
    Signed-off-by: Zheng Bin <zhengbin13@huawei.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f3efcf16a11c159824a3fb8c6fc99314d0f067b
Author: Wei Li <liwei391@huawei.com>
Date:   Sun May 10 05:41:56 2020 +0800

    arm64: kgdb: Fix single-step exception handling oops
    
    [ Upstream commit 8523c006264df65aac7d77284cc69aac46a6f842 ]
    
    After entering kdb due to breakpoint, when we execute 'ss' or 'go' (will
    delay installing breakpoints, do single-step first), it won't work
    correctly, and it will enter kdb due to oops.
    
    It's because the reason gotten in kdb_stub() is not as expected, and it
    seems that the ex_vector for single-step should be 0, like what arch
    powerpc/sh/parisc has implemented.
    
    Before the patch:
    Entering kdb (current=0xffff8000119e2dc0, pid 0) on processor 0 due to Keyboard Entry
    [0]kdb> bp printk
    Instruction(i) BP #0 at 0xffff8000101486cc (printk)
        is enabled   addr at ffff8000101486cc, hardtype=0 installed=0
    
    [0]kdb> g
    
    / # echo h > /proc/sysrq-trigger
    
    Entering kdb (current=0xffff0000fa878040, pid 266) on processor 3 due to Breakpoint @ 0xffff8000101486cc
    [3]kdb> ss
    
    Entering kdb (current=0xffff0000fa878040, pid 266) on processor 3 Oops: (null)
    due to oops @ 0xffff800010082ab8
    CPU: 3 PID: 266 Comm: sh Not tainted 5.7.0-rc4-13839-gf0e5ad491718 #6
    Hardware name: linux,dummy-virt (DT)
    pstate: 00000085 (nzcv daIf -PAN -UAO)
    pc : el1_irq+0x78/0x180
    lr : __handle_sysrq+0x80/0x190
    sp : ffff800015003bf0
    x29: ffff800015003d20 x28: ffff0000fa878040
    x27: 0000000000000000 x26: ffff80001126b1f0
    x25: ffff800011b6a0d8 x24: 0000000000000000
    x23: 0000000080200005 x22: ffff8000101486cc
    x21: ffff800015003d30 x20: 0000ffffffffffff
    x19: ffff8000119f2000 x18: 0000000000000000
    x17: 0000000000000000 x16: 0000000000000000
    x15: 0000000000000000 x14: 0000000000000000
    x13: 0000000000000000 x12: 0000000000000000
    x11: 0000000000000000 x10: 0000000000000000
    x9 : 0000000000000000 x8 : ffff800015003e50
    x7 : 0000000000000002 x6 : 00000000380b9990
    x5 : ffff8000106e99e8 x4 : ffff0000fadd83c0
    x3 : 0000ffffffffffff x2 : ffff800011b6a0d8
    x1 : ffff800011b6a000 x0 : ffff80001130c9d8
    Call trace:
     el1_irq+0x78/0x180
     printk+0x0/0x84
     write_sysrq_trigger+0xb0/0x118
     proc_reg_write+0xb4/0xe0
     __vfs_write+0x18/0x40
     vfs_write+0xb0/0x1b8
     ksys_write+0x64/0xf0
     __arm64_sys_write+0x14/0x20
     el0_svc_common.constprop.2+0xb0/0x168
     do_el0_svc+0x20/0x98
     el0_sync_handler+0xec/0x1a8
     el0_sync+0x140/0x180
    
    [3]kdb>
    
    After the patch:
    Entering kdb (current=0xffff8000119e2dc0, pid 0) on processor 0 due to Keyboard Entry
    [0]kdb> bp printk
    Instruction(i) BP #0 at 0xffff8000101486cc (printk)
        is enabled   addr at ffff8000101486cc, hardtype=0 installed=0
    
    [0]kdb> g
    
    / # echo h > /proc/sysrq-trigger
    
    Entering kdb (current=0xffff0000fa852bc0, pid 268) on processor 0 due to Breakpoint @ 0xffff8000101486cc
    [0]kdb> g
    
    Entering kdb (current=0xffff0000fa852bc0, pid 268) on processor 0 due to Breakpoint @ 0xffff8000101486cc
    [0]kdb> ss
    
    Entering kdb (current=0xffff0000fa852bc0, pid 268) on processor 0 due to SS trap @ 0xffff800010082ab8
    [0]kdb>
    
    Fixes: 44679a4f142b ("arm64: KGDB: Add step debugging support")
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20200509214159.19680-2-liwei391@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a117d00e86fe6ec856e72548e405169ab9dc78d
Author: Vinod Koul <vkoul@kernel.org>
Date:   Mon Jun 29 19:17:37 2020 +0530

    ALSA: compress: fix partial_drain completion state
    
    [ Upstream commit f79a732a8325dfbd570d87f1435019d7e5501c6d ]
    
    On partial_drain completion we should be in SNDRV_PCM_STATE_RUNNING
    state, so set that for partially draining streams in
    snd_compr_drain_notify() and use a flag for partially draining streams
    
    While at it, add locks for stream state change in
    snd_compr_drain_notify() as well.
    
    Fixes: f44f2a5417b2 ("ALSA: compress: fix drain calls blocking other compress functions (v6)")
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Link: https://lore.kernel.org/r/20200629134737.105993-4-vkoul@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2970348a38646e562dfae371c5bae52614dba99a
Author: Andre Edich <andre.edich@microchip.com>
Date:   Mon Jul 6 10:39:35 2020 +0200

    smsc95xx: avoid memory leak in smsc95xx_bind
    
    [ Upstream commit 3ed58f96a70b85ef646d5427258f677f1395b62f ]
    
    In a case where the ID_REV register read is failed, the memory for a
    private data structure has to be freed before returning error from the
    function smsc95xx_bind.
    
    Fixes: bbd9f9ee69242 ("smsc95xx: add wol support for more frame types")
    Signed-off-by: Andre Edich <andre.edich@microchip.com>
    Signed-off-by: Parthiban Veerasooran <Parthiban.Veerasooran@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9088f1ab90ddd09e57acd3c6a363f85a62a60fa8
Author: Andre Edich <andre.edich@microchip.com>
Date:   Mon Jul 6 10:39:34 2020 +0200

    smsc95xx: check return value of smsc95xx_reset
    
    [ Upstream commit 7c8b1e855f94f88a0c569be6309fc8d5c8844cd1 ]
    
    The return value of the function smsc95xx_reset() must be checked
    to avoid returning false success from the function smsc95xx_bind().
    
    Fixes: 2f7ca802bdae2 ("net: Add SMSC LAN9500 USB2.0 10/100 ethernet adapter driver")
    Signed-off-by: Andre Edich <andre.edich@microchip.com>
    Signed-off-by: Parthiban Veerasooran <Parthiban.Veerasooran@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d37e7f18781c6a88dfe9dffebc899aebfd382e0a
Author: Li Heng <liheng40@huawei.com>
Date:   Mon Jun 29 18:49:51 2020 +0800

    net: cxgb4: fix return error value in t4_prep_fw
    
    [ Upstream commit 8a259e6b73ad8181b0b2ef338b35043433db1075 ]
    
    t4_prep_fw goto bye tag with positive return value when something
    bad happened and which can not free resource in adap_init0.
    so fix it to return negative value.
    
    Fixes: 16e47624e76b ("cxgb4: Add new scheme to update T4/T5 firmware")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Li Heng <liheng40@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 319b533d658acdd8c5868de28ea693db4d419687
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jun 17 18:25:57 2020 +0200

    x86/entry: Increase entry_stack size to a full page
    
    [ Upstream commit c7aadc09321d8f9a1d3bd1e6d8a47222ecddf6c5 ]
    
    Marco crashed in bad_iret with a Clang11/KCSAN build due to
    overflowing the stack. Now that we run C code on it, expand it to a
    full page.
    
    Suggested-by: Andy Lutomirski <luto@amacapital.net>
    Reported-by: Marco Elver <elver@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Tested-by: Marco Elver <elver@google.com>
    Link: https://lkml.kernel.org/r/20200618144801.819246178@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8b306dcc57625e7bcb310fc25e2a125356ec60f
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Tue Jun 23 17:55:25 2020 +0300

    nvme-rdma: assign completion vector correctly
    
    [ Upstream commit 032a9966a22a3596addf81dacf0c1736dfedc32a ]
    
    The completion vector index that is given during CQ creation can't
    exceed the number of support vectors by the underlying RDMA device. This
    violation currently can accure, for example, in case one will try to
    connect with N regular read/write queues and M poll queues and the sum
    of N + M > num_supported_vectors. This will lead to failure in establish
    a connection to remote target. Instead, in that case, share a completion
    vector between queues.
    
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba1a0389b09085830138a88b829009aab366897f
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Tue Jun 16 17:04:46 2020 +0200

    scsi: mptscsih: Fix read sense data size
    
    [ Upstream commit afe89f115e84edbc76d316759e206580a06c6973 ]
    
    The sense data buffer in sense_buf_pool is allocated with size of
    MPT_SENSE_BUFFER_ALLOC(64) (multiplied by req_depth) while SNS_LEN(sc)(96)
    is used when reading the data.  That may lead to a read from unallocated
    area, sometimes from another (unallocated) page.  To fix this, limit the
    read size to MPT_SENSE_BUFFER_ALLOC.
    
    Link: https://lore.kernel.org/r/20200616150446.4840-1-thenzl@redhat.com
    Co-developed-by: Stanislav Saner <ssaner@redhat.com>
    Signed-off-by: Stanislav Saner <ssaner@redhat.com>
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e08c7faba0c6b3ed7d20d7fa08b63dd4debe6045
Author: yu kuai <yukuai3@huawei.com>
Date:   Thu Jun 4 20:54:49 2020 +0800

    ARM: imx6: add missing put_device() call in imx6q_suspend_init()
    
    [ Upstream commit 4845446036fc9c13f43b54a65c9b757c14f5141b ]
    
    if of_find_device_by_node() succeed, imx6q_suspend_init() doesn't have a
    corresponding put_device(). Thus add a jump target to fix the exception
    handling for this function implementation.
    
    Signed-off-by: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34a71f641f0b6ff78c3a3b58238958566af0cfe2
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Fri Jun 19 22:51:29 2020 -0400

    cifs: update ctime and mtime during truncate
    
    [ Upstream commit 5618303d8516f8ac5ecfe53ee8e8bc9a40eaf066 ]
    
    As the man description of the truncate, if the size changed,
    then the st_ctime and st_mtime fields should be updated. But
    in cifs, we doesn't do it.
    
    It lead the xfstests generic/313 failed.
    
    So, add the ATTR_MTIME|ATTR_CTIME flags on attrs when change
    the file size
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7038f9eb426c820422cc3f56f26001a3f4f6e1bc
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Jun 17 15:05:49 2020 +0200

    s390/kasan: fix early pgm check handler execution
    
    [ Upstream commit 998f5bbe3dbdab81c1cfb1aef7c3892f5d24f6c7 ]
    
    Currently if early_pgm_check_handler is called it ends up in pgm check
    loop. The problem is that early_pgm_check_handler is instrumented by
    KASAN but executed without DAT flag enabled which leads to addressing
    exception when KASAN checks try to access shadow memory.
    
    Fix that by executing early handlers with DAT flag on under KASAN as
    expected.
    
    Reported-and-tested-by: Alexander Egorenkov <egorenar@linux.ibm.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e2af3fbacc8e8a21ab620b9d47ffcb91acb758f
Author: Ciara Loftus <ciara.loftus@intel.com>
Date:   Tue Jun 9 13:19:43 2020 +0000

    ixgbe: protect ring accesses with READ- and WRITE_ONCE
    
    [ Upstream commit f140ad9fe2ae16f385f8fe4dc9cf67bb4c51d794 ]
    
    READ_ONCE should be used when reading rings prior to accessing the
    statistics pointer. Introduce this as well as the corresponding WRITE_ONCE
    usage when allocating and freeing the rings, to ensure protected access.
    
    Signed-off-by: Ciara Loftus <ciara.loftus@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea608f709fcfed5e659858079f187ffaa1c3ace1
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Thu Jun 18 11:21:25 2020 +0800

    spi: spidev: fix a potential use-after-free in spidev_release()
    
    [ Upstream commit 06096cc6c5a84ced929634b0d79376b94c65a4bd ]
    
    If an spi device is unbounded from the driver before the release
    process, there will be an NULL pointer reference when it's
    referenced in spi_slave_abort().
    
    Fix it by checking it's already freed before reference.
    
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Link: https://lore.kernel.org/r/20200618032125.4650-2-zhenzhong.duan@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3295b708de7f29bd9482eef38d11279ff207c422
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Thu Jun 18 11:21:24 2020 +0800

    spi: spidev: fix a race between spidev_release and spidev_remove
    
    [ Upstream commit abd42781c3d2155868821f1b947ae45bbc33330d ]
    
    Imagine below scene, spidev is referenced after it's freed.
    
    spidev_release()                spidev_remove()
    ...
                                    spin_lock_irq(&spidev->spi_lock);
                                        spidev->spi = NULL;
                                    spin_unlock_irq(&spidev->spi_lock);
    mutex_lock(&device_list_lock);
    dofree = (spidev->spi == NULL);
    if (dofree)
        kfree(spidev);
    mutex_unlock(&device_list_lock);
                                    mutex_lock(&device_list_lock);
                                    list_del(&spidev->device_entry);
                                    device_destroy(spidev_class, spidev->devt);
                                    clear_bit(MINOR(spidev->devt), minors);
                                    if (spidev->users == 0)
                                        kfree(spidev);
                                    mutex_unlock(&device_list_lock);
    
    Fix it by resetting spidev->spi in device_list_lock's protection.
    
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Link: https://lore.kernel.org/r/20200618032125.4650-1-zhenzhong.duan@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec6f451311a695172c2abe4f28751eb8669ddd02
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Apr 8 19:38:02 2020 +0200

    gpu: host1x: Detach driver on unregister
    
    [ Upstream commit d9a0a05bf8c76e6dc79230669a8b5d685b168c30 ]
    
    Currently when a host1x device driver is unregistered, it is not
    detached from the host1x controller, which means that the device
    will stay around and when the driver is registered again, it may
    bind to the old, stale device rather than the new one that was
    created from scratch upon driver registration. This in turn can
    cause various weird crashes within the driver core because it is
    confronted with a device that was already deleted.
    
    Fix this by detaching the driver from the host1x controller when
    it is unregistered. This ensures that the deleted device also is
    no longer present in the device list that drivers will bind to.
    
    Reported-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Tested-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adf926d133dec528756b041e4dc4129406acbf2d
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jun 1 17:18:56 2020 -0700

    ARM: dts: omap4-droid4: Fix spi configuration and increase rate
    
    [ Upstream commit 0df12a01f4857495816b05f048c4c31439446e35 ]
    
    We can currently sometimes get "RXS timed out" errors and "EOT timed out"
    errors with spi transfers.
    
    These errors can be made easy to reproduce by reading the cpcap iio
    values in a loop while keeping the CPUs busy by also reading /dev/urandom.
    
    The "RXS timed out" errors we can fix by adding spi-cpol and spi-cpha
    in addition to the spi-cs-high property we already have.
    
    The "EOT timed out" errors we can fix by increasing the spi clock rate
    to 9.6 MHz. Looks similar MC13783 PMIC says it works at spi clock rates
    up to 20 MHz, so let's assume we can pick any rate up to 20 MHz also
    for cpcap.
    
    Cc: maemo-leste@lists.dyne.org
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6ac3dee846da5d2378c8e1b21a3500041adfd5c
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jun 22 13:05:42 2020 +0200

    spi: spi-fsl-dspi: Fix external abort on interrupt in resume or exit paths
    
    [ Upstream commit 3d87b613d6a3c6f0980e877ab0895785a2dde581 ]
    
    If shared interrupt comes late, during probe error path or device remove
    (could be triggered with CONFIG_DEBUG_SHIRQ), the interrupt handler
    dspi_interrupt() will access registers with the clock being disabled.
    This leads to external abort on non-linefetch on Toradex Colibri VF50
    module (with Vybrid VF5xx):
    
        $ echo 4002d000.spi > /sys/devices/platform/soc/40000000.bus/4002d000.spi/driver/unbind
    
        Unhandled fault: external abort on non-linefetch (0x1008) at 0x8887f02c
        Internal error: : 1008 [#1] ARM
        Hardware name: Freescale Vybrid VF5xx/VF6xx (Device Tree)
        Backtrace:
          (regmap_mmio_read32le)
          (regmap_mmio_read)
          (_regmap_bus_reg_read)
          (_regmap_read)
          (regmap_read)
          (dspi_interrupt)
          (free_irq)
          (devm_irq_release)
          (release_nodes)
          (devres_release_all)
          (device_release_driver_internal)
    
    The resource-managed framework should not be used for shared interrupt
    handling, because the interrupt handler might be called after releasing
    other resources and disabling clocks.
    
    Similar bug could happen during suspend - the shared interrupt handler
    could be invoked after suspending the device.  Each device sharing this
    interrupt line should disable the IRQ during suspend so handler will be
    invoked only in following cases:
    1. None suspended,
    2. All devices resumed.
    
    Fixes: 349ad66c0ab0 ("spi:Add Freescale DSPI driver for Vybrid VF610 platform")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Tested-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200622110543.5035-3-krzk@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c75e886e1270b44c389bcc40e1e7d8016c825d97
Author: Chuanhua Han <chuanhua.han@nxp.com>
Date:   Mon Oct 29 11:11:16 2018 +0800

    spi: spi-fsl-dspi: use IRQF_SHARED mode to request IRQ
    
    [ Upstream commit 13aed23927414137a017ac2f7d567001f714293f ]
    
    Some SoC share one irq number between DSPI controllers.
    For example, on the LX2160 board, DSPI0 and DSPI1 share one irq number.
    In this case, only one DSPI controller can register successfully,
    and others will fail.
    
    Signed-off-by: Chuanhua Han <chuanhua.han@nxp.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac32fc47420327adb7ae7f891c5f1159d8353b8e
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jun 22 13:05:40 2020 +0200

    spi: spi-fsl-dspi: Fix lockup if device is removed during SPI transfer
    
    [ Upstream commit 7684580d45bd3d84ed9b453a4cadf7a9a5605a3f ]
    
    During device removal, the driver should unregister the SPI controller
    and stop the hardware.  Otherwise the dspi_transfer_one_message() could
    wait on completion infinitely.
    
    Additionally, calling spi_unregister_controller() first in device
    removal reverse-matches the probe function, where SPI controller is
    registered at the end.
    
    Fixes: 05209f457069 ("spi: fsl-dspi: add missing clk_disable_unprepare() in dspi_remove()")
    Reported-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200622110543.5035-1-krzk@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99ec7ac5d137d40d5188c44a633b6764749f6c82
Author: Peng Ma <peng.ma@nxp.com>
Date:   Fri Apr 24 14:12:16 2020 +0800

    spi: spi-fsl-dspi: Adding shutdown hook
    
    [ Upstream commit dc234825997ec6ff05980ca9e2204f4ac3f8d695 ]
    
    We need to ensure dspi controller could be stopped in order for kexec
    to start the next kernel.
    So add the shutdown operation support.
    
    Signed-off-by: Peng Ma <peng.ma@nxp.com>
    Link: https://lore.kernel.org/r/20200424061216.27445-1-peng.ma@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6de7d76d6850ec2f57ddeeeb71d6a727810dba51
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Wed Jun 17 10:36:20 2020 +0200

    KVM: s390: reduce number of IO pins to 1
    
    [ Upstream commit 774911290c589e98e3638e73b24b0a4d4530e97c ]
    
    The current number of KVM_IRQCHIP_NUM_PINS results in an order 3
    allocation (32kb) for each guest start/restart. This can result in OOM
    killer activity even with free swap when the memory is fragmented
    enough:
    
    kernel: qemu-system-s39 invoked oom-killer: gfp_mask=0x440dc0(GFP_KERNEL_ACCOUNT|__GFP_COMP|__GFP_ZERO), order=3, oom_score_adj=0
    kernel: CPU: 1 PID: 357274 Comm: qemu-system-s39 Kdump: loaded Not tainted 5.4.0-29-generic #33-Ubuntu
    kernel: Hardware name: IBM 8562 T02 Z06 (LPAR)
    kernel: Call Trace:
    kernel: ([<00000001f848fe2a>] show_stack+0x7a/0xc0)
    kernel:  [<00000001f8d3437a>] dump_stack+0x8a/0xc0
    kernel:  [<00000001f8687032>] dump_header+0x62/0x258
    kernel:  [<00000001f8686122>] oom_kill_process+0x172/0x180
    kernel:  [<00000001f8686abe>] out_of_memory+0xee/0x580
    kernel:  [<00000001f86e66b8>] __alloc_pages_slowpath+0xd18/0xe90
    kernel:  [<00000001f86e6ad4>] __alloc_pages_nodemask+0x2a4/0x320
    kernel:  [<00000001f86b1ab4>] kmalloc_order+0x34/0xb0
    kernel:  [<00000001f86b1b62>] kmalloc_order_trace+0x32/0xe0
    kernel:  [<00000001f84bb806>] kvm_set_irq_routing+0xa6/0x2e0
    kernel:  [<00000001f84c99a4>] kvm_arch_vm_ioctl+0x544/0x9e0
    kernel:  [<00000001f84b8936>] kvm_vm_ioctl+0x396/0x760
    kernel:  [<00000001f875df66>] do_vfs_ioctl+0x376/0x690
    kernel:  [<00000001f875e304>] ksys_ioctl+0x84/0xb0
    kernel:  [<00000001f875e39a>] __s390x_sys_ioctl+0x2a/0x40
    kernel:  [<00000001f8d55424>] system_call+0xd8/0x2c8
    
    As far as I can tell s390x does not use the iopins as we bail our for
    anything other than KVM_IRQ_ROUTING_S390_ADAPTER and the chip/pin is
    only used for KVM_IRQ_ROUTING_IRQCHIP. So let us use a small number to
    reduce the memory footprint.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Link: https://lore.kernel.org/r/20200617083620.5409-1-borntraeger@de.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
