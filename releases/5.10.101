commit 3969aba589d663b2a704f31555c2caead75a1646
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 16 12:54:31 2022 +0100

    Linux 5.10.101
    
    Link: https://lore.kernel.org/r/20220214092458.668376521@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>                              =
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb86e511e78e796de6947b8f3acca1b7c76fb2ff
Author: Vijayanand Jitta <quic_vjitta@quicinc.com>
Date:   Mon Jan 31 12:42:35 2022 +0530

    iommu: Fix potential use-after-free during probe
    
    commit b54240ad494300ff0994c4539a531727874381f4 upstream.
    
    Kasan has reported the following use after free on dev->iommu.
    when a device probe fails and it is in process of freeing dev->iommu
    in dev_iommu_free function, a deferred_probe_work_func runs in parallel
    and tries to access dev->iommu->fwspec in of_iommu_configure path thus
    causing use after free.
    
    BUG: KASAN: use-after-free in of_iommu_configure+0xb4/0x4a4
    Read of size 8 at addr ffffff87a2f1acb8 by task kworker/u16:2/153
    
    Workqueue: events_unbound deferred_probe_work_func
    Call trace:
     dump_backtrace+0x0/0x33c
     show_stack+0x18/0x24
     dump_stack_lvl+0x16c/0x1e0
     print_address_description+0x84/0x39c
     __kasan_report+0x184/0x308
     kasan_report+0x50/0x78
     __asan_load8+0xc0/0xc4
     of_iommu_configure+0xb4/0x4a4
     of_dma_configure_id+0x2fc/0x4d4
     platform_dma_configure+0x40/0x5c
     really_probe+0x1b4/0xb74
     driver_probe_device+0x11c/0x228
     __device_attach_driver+0x14c/0x304
     bus_for_each_drv+0x124/0x1b0
     __device_attach+0x25c/0x334
     device_initial_probe+0x24/0x34
     bus_probe_device+0x78/0x134
     deferred_probe_work_func+0x130/0x1a8
     process_one_work+0x4c8/0x970
     worker_thread+0x5c8/0xaec
     kthread+0x1f8/0x220
     ret_from_fork+0x10/0x18
    
    Allocated by task 1:
     ____kasan_kmalloc+0xd4/0x114
     __kasan_kmalloc+0x10/0x1c
     kmem_cache_alloc_trace+0xe4/0x3d4
     __iommu_probe_device+0x90/0x394
     probe_iommu_group+0x70/0x9c
     bus_for_each_dev+0x11c/0x19c
     bus_iommu_probe+0xb8/0x7d4
     bus_set_iommu+0xcc/0x13c
     arm_smmu_bus_init+0x44/0x130 [arm_smmu]
     arm_smmu_device_probe+0xb88/0xc54 [arm_smmu]
     platform_drv_probe+0xe4/0x13c
     really_probe+0x2c8/0xb74
     driver_probe_device+0x11c/0x228
     device_driver_attach+0xf0/0x16c
     __driver_attach+0x80/0x320
     bus_for_each_dev+0x11c/0x19c
     driver_attach+0x38/0x48
     bus_add_driver+0x1dc/0x3a4
     driver_register+0x18c/0x244
     __platform_driver_register+0x88/0x9c
     init_module+0x64/0xff4 [arm_smmu]
     do_one_initcall+0x17c/0x2f0
     do_init_module+0xe8/0x378
     load_module+0x3f80/0x4a40
     __se_sys_finit_module+0x1a0/0x1e4
     __arm64_sys_finit_module+0x44/0x58
     el0_svc_common+0x100/0x264
     do_el0_svc+0x38/0xa4
     el0_svc+0x20/0x30
     el0_sync_handler+0x68/0xac
     el0_sync+0x160/0x180
    
    Freed by task 1:
     kasan_set_track+0x4c/0x84
     kasan_set_free_info+0x28/0x4c
     ____kasan_slab_free+0x120/0x15c
     __kasan_slab_free+0x18/0x28
     slab_free_freelist_hook+0x204/0x2fc
     kfree+0xfc/0x3a4
     __iommu_probe_device+0x284/0x394
     probe_iommu_group+0x70/0x9c
     bus_for_each_dev+0x11c/0x19c
     bus_iommu_probe+0xb8/0x7d4
     bus_set_iommu+0xcc/0x13c
     arm_smmu_bus_init+0x44/0x130 [arm_smmu]
     arm_smmu_device_probe+0xb88/0xc54 [arm_smmu]
     platform_drv_probe+0xe4/0x13c
     really_probe+0x2c8/0xb74
     driver_probe_device+0x11c/0x228
     device_driver_attach+0xf0/0x16c
     __driver_attach+0x80/0x320
     bus_for_each_dev+0x11c/0x19c
     driver_attach+0x38/0x48
     bus_add_driver+0x1dc/0x3a4
     driver_register+0x18c/0x244
     __platform_driver_register+0x88/0x9c
     init_module+0x64/0xff4 [arm_smmu]
     do_one_initcall+0x17c/0x2f0
     do_init_module+0xe8/0x378
     load_module+0x3f80/0x4a40
     __se_sys_finit_module+0x1a0/0x1e4
     __arm64_sys_finit_module+0x44/0x58
     el0_svc_common+0x100/0x264
     do_el0_svc+0x38/0xa4
     el0_svc+0x20/0x30
     el0_sync_handler+0x68/0xac
     el0_sync+0x160/0x180
    
    Fix this by setting dev->iommu to NULL first and
    then freeing dev_iommu structure in dev_iommu_free
    function.
    
    Suggested-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Vijayanand Jitta <quic_vjitta@quicinc.com>
    Link: https://lore.kernel.org/r/1643613155-20215-1-git-send-email-quic_vjitta@quicinc.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6b5d51976fcefef5732da3e3feb3ccff680f7c8
Author: Song Liu <song@kernel.org>
Date:   Thu Feb 3 16:40:57 2022 -0800

    perf: Fix list corruption in perf_cgroup_switch()
    
    commit 5f4e5ce638e6a490b976ade4a40017b40abb2da0 upstream.
    
    There's list corruption on cgrp_cpuctx_list. This happens on the
    following path:
    
      perf_cgroup_switch: list_for_each_entry(cgrp_cpuctx_list)
          cpu_ctx_sched_in
             ctx_sched_in
                ctx_pinned_sched_in
                  merge_sched_in
                      perf_cgroup_event_disable: remove the event from the list
    
    Use list_for_each_entry_safe() to allow removing an entry during
    iteration.
    
    Fixes: 058fe1c0440e ("perf/core: Make cgroup switch visit only cpuctxs with cgroup events")
    Signed-off-by: Song Liu <song@kernel.org>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20220204004057.2961252-1-song@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce3ca12c632a6b3db26ad6995cf6cbadc344cbb0
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Sat Jan 29 14:39:05 2022 +0800

    arm64: dts: imx8mq: fix lcdif port node
    
    commit 91f6d5f181f6629dd74ab71759fe92d3f4eff966 upstream.
    
    The port node does not have a unit-address, remove it.
    This fixes the warnings:
    lcd-controller@30320000: 'port' is a required property
    lcd-controller@30320000: 'port@0' does not match any of the regexes:
    'pinctrl-[0-9]+'
    
    Fixes: commit d0081bd02a03 ("arm64: dts: imx8mq: Add NWL MIPI DSI controller")
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 759aeacdfe7082d17ecbfcae0dfc0e9740b9416d
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Feb 7 10:04:42 2022 -0800

    scsi: lpfc: Reduce log messages seen after firmware download
    
    commit 5852ed2a6a39c862c8a3fdf646e1f4e01b91d710 upstream.
    
    Messages around firmware download were incorrectly tagged as being related
    to discovery trace events. Thus, firmware download status ended up dumping
    the trace log as well as the firmware update message. As there were a
    couple of log messages in this state, the trace log was dumped multiple
    times.
    
    Resolve this by converting from trace events to SLI events.
    
    Link: https://lore.kernel.org/r/20220207180442.72836-1-jsmart2021@gmail.com
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57c5d7d42076c64ddbefcc6e5663ed8b8d62ae6d
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Feb 7 10:05:16 2022 -0800

    scsi: lpfc: Remove NVMe support if kernel has NVME_FC disabled
    
    commit c80b27cfd93ba9f5161383f798414609e84729f3 upstream.
    
    The driver is initiating NVMe PRLIs to determine device NVMe support.  This
    should not be occurring if CONFIG_NVME_FC support is disabled.
    
    Correct this by changing the default value for FC4 support. Currently it
    defaults to FCP and NVMe. With change, when NVME_FC support is not enabled
    in the kernel, the default value is just FCP.
    
    Link: https://lore.kernel.org/r/20220207180516.73052-1-jsmart2021@gmail.com
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 199dab00f0439f50e83c298ea464da179bd2432b
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Feb 9 08:36:01 2022 +0100

    can: isotp: fix error path in isotp_sendmsg() to unlock wait queue
    
    commit 8375dfac4f683e1b2c5956d919d36aeedad46699 upstream.
    
    Commit 43a08c3bdac4 ("can: isotp: isotp_sendmsg(): fix TX buffer concurrent
    access in isotp_sendmsg()") introduced a new locking scheme that may render
    the userspace application in a locking state when an error is detected.
    This issue shows up under high load on simultaneously running isotp channels
    with identical configuration which is against the ISO specification and
    therefore breaks any reasonable PDU communication anyway.
    
    Fixes: 43a08c3bdac4 ("can: isotp: isotp_sendmsg(): fix TX buffer concurrent access in isotp_sendmsg()")
    Link: https://lore.kernel.org/all/20220209073601.25728-1-socketcan@hartkopp.net
    Cc: stable@vger.kernel.org
    Cc: Ziyang Xuan <william.xuanziyang@huawei.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b10ebeb95d7e3ecfcd28c0450099245772d8805
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Feb 2 16:05:16 2022 -0700

    Makefile.extrawarn: Move -Wunaligned-access to W=1
    
    commit 1cf5f151d25fcca94689efd91afa0253621fb33a upstream.
    
    -Wunaligned-access is a new warning in clang that is default enabled for
    arm and arm64 under certain circumstances within the clang frontend (see
    LLVM commit below). On v5.17-rc2, an ARCH=arm allmodconfig build shows
    1284 total/70 unique instances of this warning (most of the instances
    are in header files), which is quite noisy.
    
    To keep a normal build green through CONFIG_WERROR, only show this
    warning with W=1, which will allow automated build systems to catch new
    instances of the warning so that the total number can be driven down to
    zero eventually since catching unaligned accesses at compile time would
    be generally useful.
    
    Cc: stable@vger.kernel.org
    Link: https://github.com/llvm/llvm-project/commit/35737df4dcd28534bd3090157c224c19b501278a
    Link: https://github.com/ClangBuiltLinux/linux/issues/1569
    Link: https://github.com/ClangBuiltLinux/linux/issues/1576
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad53060bdfc34bb2fcc5bfff8a6f56bd425b964a
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Thu Oct 21 21:05:31 2021 +0200

    hwmon: (dell-smm) Speed up setting of fan speed
    
    commit c0d79987a0d82671bff374c07f2201f9bdf4aaa2 upstream.
    
    When setting the fan speed, i8k_set_fan() calls i8k_get_fan_status(),
    causing an unnecessary SMM call since from the two users of this
    function, only i8k_ioctl_unlocked() needs to know the new fan status
    while dell_smm_write() ignores the new fan status.
    Since SMM calls can be very slow while also making error reporting
    difficult for dell_smm_write(), remove the function call from
    i8k_set_fan() and call it separately in i8k_ioctl_unlocked().
    
    Tested on a Dell Inspiron 3505.
    
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20211021190531.17379-6-W_Armin@gmx.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c75d1017cb362b6a4e0935746ef5da28250919f
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Mon Jan 17 16:31:08 2022 +0530

    phy: ti: Fix missing sentinel for clk_div_table
    
    commit 6d1e6bcb31663ee83aaea1f171f3dbfe95dd4a69 upstream.
    
    _get_table_maxdiv() tries to access "clk_div_table" array out of bound
    defined in phy-j721e-wiz.c. Add a sentinel entry to prevent
    the following global-out-of-bounds error reported by enabling KASAN.
    
    [    9.552392] BUG: KASAN: global-out-of-bounds in _get_maxdiv+0xc0/0x148
    [    9.558948] Read of size 4 at addr ffff8000095b25a4 by task kworker/u4:1/38
    [    9.565926]
    [    9.567441] CPU: 1 PID: 38 Comm: kworker/u4:1 Not tainted 5.16.0-116492-gdaadb3bd0e8d-dirty #360
    [    9.576242] Hardware name: Texas Instruments J721e EVM (DT)
    [    9.581832] Workqueue: events_unbound deferred_probe_work_func
    [    9.587708] Call trace:
    [    9.590174]  dump_backtrace+0x20c/0x218
    [    9.594038]  show_stack+0x18/0x68
    [    9.597375]  dump_stack_lvl+0x9c/0xd8
    [    9.601062]  print_address_description.constprop.0+0x78/0x334
    [    9.606830]  kasan_report+0x1f0/0x260
    [    9.610517]  __asan_load4+0x9c/0xd8
    [    9.614030]  _get_maxdiv+0xc0/0x148
    [    9.617540]  divider_determine_rate+0x88/0x488
    [    9.622005]  divider_round_rate_parent+0xc8/0x124
    [    9.626729]  wiz_clk_div_round_rate+0x54/0x68
    [    9.631113]  clk_core_determine_round_nolock+0x124/0x158
    [    9.636448]  clk_core_round_rate_nolock+0x68/0x138
    [    9.641260]  clk_core_set_rate_nolock+0x268/0x3a8
    [    9.645987]  clk_set_rate+0x50/0xa8
    [    9.649499]  cdns_sierra_phy_init+0x88/0x248
    [    9.653794]  phy_init+0x98/0x108
    [    9.657046]  cdns_pcie_enable_phy+0xa0/0x170
    [    9.661340]  cdns_pcie_init_phy+0x250/0x2b0
    [    9.665546]  j721e_pcie_probe+0x4b8/0x798
    [    9.669579]  platform_probe+0x8c/0x108
    [    9.673350]  really_probe+0x114/0x630
    [    9.677037]  __driver_probe_device+0x18c/0x220
    [    9.681505]  driver_probe_device+0xac/0x150
    [    9.685712]  __device_attach_driver+0xec/0x170
    [    9.690178]  bus_for_each_drv+0xf0/0x158
    [    9.694124]  __device_attach+0x184/0x210
    [    9.698070]  device_initial_probe+0x14/0x20
    [    9.702277]  bus_probe_device+0xec/0x100
    [    9.706223]  deferred_probe_work_func+0x124/0x180
    [    9.710951]  process_one_work+0x4b0/0xbc0
    [    9.714983]  worker_thread+0x74/0x5d0
    [    9.718668]  kthread+0x214/0x230
    [    9.721919]  ret_from_fork+0x10/0x20
    [    9.725520]
    [    9.727032] The buggy address belongs to the variable:
    [    9.732183]  clk_div_table+0x24/0x440
    
    Fixes: 091876cc355d ("phy: ti: j721e-wiz: Add support for WIZ module present in TI J721E SoC")
    Cc: stable@vger.kernel.org # v5.10+
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20220117110108.4117-1-kishon@ti.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6eabe53492c2f0a9c53a8cdd4393265ba82913d4
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sun Feb 6 02:56:26 2022 +0100

    speakup-dectlk: Restore pitch setting
    
    commit bca828ccdd6548d24613d0cede04ada4dfb2f89c upstream.
    
    d97a9d7aea04 ("staging/speakup: Add inflection synth parameter")
    introduced the inflection parameter, but happened to drop the pitch
    parameter from the dectlk driver. This restores it.
    
    Cc: stable@vger.kernel.org
    Fixes: d97a9d7aea04 ("staging/speakup: Add inflection synth parameter")
    Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Link: https://lore.kernel.org/r/20220206015626.aesbhvvdkmqsrbaw@begin
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3836a5ff4bb7f9dcd45735de0e0fb378b33ece01
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Feb 1 11:42:53 2022 +0100

    USB: serial: cp210x: add CPI Bulk Coin Recycler id
    
    commit 6ca0c6283340d819bf9c7d8e76be33c9fbd903ab upstream.
    
    Add the device id for the Crane Payment Innovation / Money Controls Bulk
    Coin Recycler:
    
            https://www.cranepi.com/en/system/files/Support/OM_BCR_EN_V1-04_0.pdf
    
    Reported-by: Scott Russell <Scott.Russell2@ncr.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51b03a9bcd99f6881e269b721a82e43257e3ea62
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Feb 1 11:42:52 2022 +0100

    USB: serial: cp210x: add NCR Retail IO box id
    
    commit b50f8f09c622297d3cf46e332e17ba8adedec9af upstream.
    
    Add the device id for NCR's Retail IO box (CP2105) used in NCR FastLane
    SelfServ Checkout - R6C:
    
            https://www.ncr.com/product-catalog/ncr-fastlane-selfserv-checkout-r6c
    
    Reported-by: Scott Russell <Scott.Russell2@ncr.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a21e6b2e0864877681936d30511ea1e7e6e0fc37
Author: Stephan Brunner <s.brunner@stephan-brunner.net>
Date:   Sat Jan 8 13:00:20 2022 +0100

    USB: serial: ch341: add support for GW Instek USB2.0-Serial devices
    
    commit fa77ce201f7f2d823b07753575122d1ae5597fbe upstream.
    
    Programmable lab power supplies made by GW Instek, such as the
    GPP-2323, have a USB port exposing a serial port to control the device.
    
    Stringing the supplied Windows driver, references to the ch341 chip are
    found. Binding the existing ch341 driver to the VID/PID of the GPP-2323
    ("GW Instek USB2.0-Serial" as per the USB product name) works out of the
    box, communication and control is now possible.
    
    This patch should work with any GPP series power supply due to
    similarities in the product line.
    
    Signed-off-by: Stephan Brunner <s.brunner@stephan-brunner.net>
    Link: https://lore.kernel.org/r/4a47b864-0816-6f6a-efee-aa20e74bcdc6@stephan-brunner.net
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7113440a36c741efd7c76e3d70b3634100120cdb
Author: Pawel Dembicki <paweldembicki@gmail.com>
Date:   Tue Jan 11 23:12:05 2022 +0100

    USB: serial: option: add ZTE MF286D modem
    
    commit d48384c7ed6c8fe4727eaa0f3048f62afd1cd715 upstream.
    
    Modem from ZTE MF286D is an Qualcomm MDM9250 based 3G/4G modem.
    
    T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  3 Spd=5000 MxCh= 0
    D:  Ver= 3.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS= 9 #Cfgs=  1
    P:  Vendor=19d2 ProdID=1485 Rev=52.87
    S:  Manufacturer=ZTE,Incorporated
    S:  Product=ZTE Technologies MSM
    S:  SerialNumber=MF286DZTED000000
    C:* #Ifs= 7 Cfg#= 1 Atr=80 MxPwr=896mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=06 Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=02 Prot=ff Driver=rndis_host
    E:  Ad=82(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=rndis_host
    E:  Ad=81(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=88(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=8e(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=0f(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=usbfs
    E:  Ad=05(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=89(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    
    Signed-off-by: Pawel Dembicki <paweldembicki@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7ed2f9619ccbf1bd70bdf02b68b5a9e0cdd15a1
Author: Cameron Williams <cang1@live.co.uk>
Date:   Tue Feb 1 10:12:51 2022 +0000

    USB: serial: ftdi_sio: add support for Brainboxes US-159/235/320
    
    commit fbb9b194e15a63c56c5664e76ccd0e85c6100cea upstream.
    
    This patch adds support for the Brainboxes US-159, US-235 and US-320
    USB-to-Serial devices.
    
    Signed-off-by: Cameron Williams <cang1@live.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e07dde31acc955f69d36f48283d071a8b1657f8b
Author: Jann Horn <jannh@google.com>
Date:   Wed Jan 26 21:52:14 2022 +0100

    usb: raw-gadget: fix handling of dual-direction-capable endpoints
    
    commit 292d2c82b105d92082c2120a44a58de9767e44f1 upstream.
    
    Under dummy_hcd, every available endpoint is *either* IN or OUT capable.
    But with some real hardware, there are endpoints that support both IN and
    OUT. In particular, the PLX 2380 has four available endpoints that each
    support both IN and OUT.
    
    raw-gadget currently gets confused and thinks that any endpoint that is
    usable as an IN endpoint can never be used as an OUT endpoint.
    
    Fix it by looking at the direction in the configured endpoint descriptor
    instead of looking at the hardware capabilities.
    
    With this change, I can use the PLX 2380 with raw-gadget.
    
    Fixes: f2c2e717642c ("usb: gadget: add raw-gadget interface")
    Cc: stable <stable@vger.kernel.org>
    Tested-by: Andrey Konovalov <andreyknvl@gmail.com>
    Reviewed-by: Andrey Konovalov <andreyknvl@gmail.com>
    Signed-off-by: Jann Horn <jannh@google.com>
    Link: https://lore.kernel.org/r/20220126205214.2149936-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9f9b877eb0ee6df626ac067ad428fdd689514f3
Author: Pavel Hofman <pavel.hofman@ivitera.com>
Date:   Mon Jan 31 08:18:13 2022 +0100

    usb: gadget: f_uac2: Define specific wTerminalType
    
    commit 5432184107cd0013761bdfa6cb6079527ef87b95 upstream.
    
    Several users have reported that their Win10 does not enumerate UAC2
    gadget with the existing wTerminalType set to
    UAC_INPUT_TERMINAL_UNDEFINED/UAC_INPUT_TERMINAL_UNDEFINED, e.g.
    https://github.com/raspberrypi/linux/issues/4587#issuecomment-926567213.
    While the constant is officially defined by the USB terminal types
    document, e.g. XMOS firmware for UAC2 (commonly used for Win10) defines
    no undefined output terminal type in its usbaudio20.h header.
    
    Therefore wTerminalType of EP-IN is set to
    UAC_INPUT_TERMINAL_MICROPHONE and wTerminalType of EP-OUT to
    UAC_OUTPUT_TERMINAL_SPEAKER for the UAC2 gadget.
    
    Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220131071813.7433-1-pavel.hofman@ivitera.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb4ff0f96de37c44236598e8b53fe43b1df36bf3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 9 16:37:53 2022 +0100

    usb: gadget: rndis: check size of RNDIS_MSG_SET command
    
    commit 38ea1eac7d88072bbffb630e2b3db83ca649b826 upstream.
    
    Check the size of the RNDIS_MSG_SET command given to us before
    attempting to respond to an invalid message size.
    
    Reported-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable@kernel.org
    Tested-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22ec1004728548598f4f5b4a079a7873409eacfd
Author: Szymon Heidrich <szymon.heidrich@gmail.com>
Date:   Mon Jan 24 12:14:00 2022 +0100

    USB: gadget: validate interface OS descriptor requests
    
    commit 75e5b4849b81e19e9efe1654b30d7f3151c33c2c upstream.
    
    Stall the control endpoint in case provided index exceeds array size of
    MAX_CONFIG_INTERFACES or when the retrieved function pointer is null.
    
    Signed-off-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 351159167cd8593311482148f64ca14715984544
Author: Adam Ford <aford173@gmail.com>
Date:   Fri Jan 28 16:36:03 2022 -0600

    usb: gadget: udc: renesas_usb3: Fix host to USB_ROLE_NONE transition
    
    commit 459702eea6132888b5c5b64c0e9c626da4ec2493 upstream.
    
    The support the external role switch a variety of situations were
    addressed, but the transition from USB_ROLE_HOST to USB_ROLE_NONE
    leaves the host up which can cause some error messages when
    switching from host to none, to gadget, to none, and then back
    to host again.
    
     xhci-hcd ee000000.usb: Abort failed to stop command ring: -110
     xhci-hcd ee000000.usb: xHCI host controller not responding, assume dead
     xhci-hcd ee000000.usb: HC died; cleaning up
     usb 4-1: device not accepting address 6, error -108
     usb usb4-port1: couldn't allocate usb_device
    
    After this happens it will not act as a host again.
    Fix this by releasing the host mode when transitioning to USB_ROLE_NONE.
    
    Fixes: 0604160d8c0b ("usb: gadget: udc: renesas_usb3: Enhance role switch support")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Link: https://lore.kernel.org/r/20220128223603.2362621-1-aford173@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bfca38914807293faa3d9b748bb1bec894e909a
Author: Udipto Goswami <quic_ugoswami@quicinc.com>
Date:   Mon Feb 7 09:55:58 2022 +0530

    usb: dwc3: gadget: Prevent core from processing stale TRBs
    
    commit 117b4e96c7f362eb6459543883fc07f77662472c upstream.
    
    With CPU re-ordering on write instructions, there might
    be a chance that the HWO is set before the TRB is updated
    with the new mapped buffer address.
    And in the case where core is processing a list of TRBs
    it is possible that it fetched the TRBs when the HWO is set
    but before the buffer address is updated.
    Prevent this by adding a memory barrier before the HWO
    is updated to ensure that the core always process the
    updated TRBs.
    
    Fixes: f6bafc6a1c9d ("usb: dwc3: convert TRBs into bitshifts")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
    Signed-off-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Link: https://lore.kernel.org/r/1644207958-18287-1-git-send-email-quic_ugoswami@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a17bd9f52104fc5c023499cf4c9bea3f10f2b1c
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jan 27 14:00:03 2022 -0500

    usb: ulpi: Call of_node_put correctly
    
    commit 0a907ee9d95e3ac35eb023d71f29eae0aaa52d1b upstream.
    
    of_node_put should always be called on device nodes gotten from
    of_get_*. Additionally, it should only be called after there are no
    remaining users. To address the first issue, call of_node_put if later
    steps in ulpi_register fail. To address the latter, call put_device if
    device_register fails, which will call ulpi_dev_release if necessary.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20220127190004.1446909-3-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b89a6916681a110403961a2bb923f1789340933
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jan 27 14:00:02 2022 -0500

    usb: ulpi: Move of_node_put to ulpi_dev_release
    
    commit 092f45b13e51666fe8ecbf2d6cd247aa7e6c1f74 upstream.
    
    Drivers are not unbound from the device when ulpi_unregister_interface
    is called. Move of_node-freeing code to ulpi_dev_release which is called
    only after all users are gone.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20220127190004.1446909-2-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 758290defe93a865a2880d10c5d5abd288b64b5d
Author: Jann Horn <jannh@google.com>
Date:   Wed Jan 26 14:14:52 2022 +0100

    net: usb: ax88179_178a: Fix out-of-bounds accesses in RX fixup
    
    commit 57bc3d3ae8c14df3ceb4e17d26ddf9eeab304581 upstream.
    
    ax88179_rx_fixup() contains several out-of-bounds accesses that can be
    triggered by a malicious (or defective) USB device, in particular:
    
     - The metadata array (hdr_off..hdr_off+2*pkt_cnt) can be out of bounds,
       causing OOB reads and (on big-endian systems) OOB endianness flips.
     - A packet can overlap the metadata array, causing a later OOB
       endianness flip to corrupt data used by a cloned SKB that has already
       been handed off into the network stack.
     - A packet SKB can be constructed whose tail is far beyond its end,
       causing out-of-bounds heap data to be considered part of the SKB's
       data.
    
    I have tested that this can be used by a malicious USB device to send a
    bogus ICMPv6 Echo Request and receive an ICMPv6 Echo Reply in response
    that contains random kernel heap data.
    It's probably also possible to get OOB writes from this on a
    little-endian system somehow - maybe by triggering skb_cow() via IP
    options processing -, but I haven't tested that.
    
    Fixes: e2ca90c276e1 ("ax88179_178a: ASIX AX88179_178A USB 3.0/2.0 to gigabit ethernet adapter driver")
    Cc: stable@kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a66a2b17b8c863b2351303adc38087ac89b8cc59
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Feb 12 10:08:54 2022 +0100

    Revert "usb: dwc2: drd: fix soft connect when gadget is unconfigured"
    
    commit 736e8d89044c1c330967fb938fa766cd9e0d8af0 upstream.
    
    This reverts commit 269cbcf7b72de6f0016806d4a0cec1d689b55a87.
    
    It causes build errors as reported by the kernel test robot.
    
    Link: https://lore.kernel.org/r/202202112236.AwoOTtHO-lkp@intel.com
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 269cbcf7b72d ("usb: dwc2: drd: fix soft connect when gadget is unconfigured")
    Cc: stable@kernel.org
    Cc: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Cc: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Cc: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73961057e9dcec90cedcc4a2dafa2a87749d6459
Author: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date:   Wed Feb 9 17:15:53 2022 +0100

    usb: dwc2: drd: fix soft connect when gadget is unconfigured
    
    commit 269cbcf7b72de6f0016806d4a0cec1d689b55a87 upstream.
    
    When the gadget driver hasn't been (yet) configured, and the cable is
    connected to a HOST, the SFTDISCON gets cleared unconditionally, so the
    HOST tries to enumerate it.
    At the host side, this can result in a stuck USB port or worse. When
    getting lucky, some dmesg can be observed at the host side:
     new high-speed USB device number ...
     device descriptor read/64, error -110
    
    Fix it in drd, by checking the enabled flag before calling
    dwc2_hsotg_core_connect(). It will be called later, once configured,
    by the normal flow:
    - udc_bind_to_driver
     - usb_gadget_connect
       - dwc2_hsotg_pullup
         - dwc2_hsotg_core_connect
    
    Fixes: 17f934024e84 ("usb: dwc2: override PHY input signals with usb role switch support")
    Cc: stable@kernel.org
    Reviewed-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/1644423353-17859-1-git-send-email-fabrice.gasnier@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a37960df7eac3cc8094bd1ab84864e9e32c91345
Author: Jonas Malaco <jonas@protocubo.io>
Date:   Thu Feb 3 13:49:52 2022 -0300

    eeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAX
    
    commit c0689e46be23160d925dca95dfc411f1a0462708 upstream.
    
    Commit effa453168a7 ("i2c: i801: Don't silently correct invalid transfer
    size") revealed that ee1004_eeprom_read() did not properly limit how
    many bytes to read at once.
    
    In particular, i2c_smbus_read_i2c_block_data_or_emulated() takes the
    length to read as an u8.  If count == 256 after taking into account the
    offset and page boundary, the cast to u8 overflows.  And this is common
    when user space tries to read the entire EEPROM at once.
    
    To fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, already
    the maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.
    
    Fixes: effa453168a7 ("i2c: i801: Don't silently correct invalid transfer size")
    Cc: stable@vger.kernel.org
    Reviewed-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Jonas Malaco <jonas@protocubo.io>
    Link: https://lore.kernel.org/r/20220203165024.47767-1-jonas@protocubo.io
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b99fe34e26dbfe675a8d41632957fb9b8ad96f7
Author: TATSUKAWA KOSUKE (立川 江介) <tatsu-ab1@nec.com>
Date:   Wed Jan 26 23:35:02 2022 +0000

    n_tty: wake up poll(POLLRDNORM) on receiving data
    
    commit c816b2e65b0e86b95011418cad334f0524fc33b8 upstream.
    
    The poll man page says POLLRDNORM is equivalent to POLLIN when used as
    an event.
    $ man poll
    <snip>
                  POLLRDNORM
                         Equivalent to POLLIN.
    
    However, in n_tty driver, POLLRDNORM does not return until timeout even
    if there is terminal input, whereas POLLIN returns.
    
    The following test program works until kernel-3.17, but the test stops
    in poll() after commit 57087d515441 ("tty: Fix spurious poll() wakeups").
    
    [Steps to run test program]
      $ cc -o test-pollrdnorm test-pollrdnorm.c
      $ ./test-pollrdnorm
      foo          <-- Type in something from the terminal followed by [RET].
                       The string should be echoed back.
    
      ------------------------< test-pollrdnorm.c >------------------------
      #include <stdio.h>
      #include <errno.h>
      #include <poll.h>
      #include <unistd.h>
    
      void main(void)
      {
            int             n;
            unsigned char   buf[8];
            struct pollfd   fds[1] = {{ 0, POLLRDNORM, 0 }};
    
            n = poll(fds, 1, -1);
            if (n < 0)
                    perror("poll");
            n = read(0, buf, 8);
            if (n < 0)
                    perror("read");
            if (n > 0)
                    write(1, buf, n);
      }
      ------------------------------------------------------------------------
    
    The attached patch fixes this problem.  Many calls to
    wake_up_interruptible_poll() in the kernel source code already specify
    "POLLIN | POLLRDNORM".
    
    Fixes: 57087d515441 ("tty: Fix spurious poll() wakeups")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kosuke Tatsukawa <tatsu-ab1@nec.com>
    Link: https://lore.kernel.org/r/TYCPR01MB81901C0F932203D30E452B3EA5209@TYCPR01MB8190.jpnprd01.prod.outlook.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b25737156c49d3bc353ee6d6d822fafca6954b
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:05 2022 +0100

    vt_ioctl: add array_index_nospec to VT_ACTIVATE
    
    commit 28cb138f559f8c1a1395f5564f86b8bbee83631b upstream.
    
    in vt_setactivate an almost identical code path has been patched
    with array_index_nospec. In the VT_ACTIVATE path the user input
    is from a system call argument instead of a usercopy.
    For consistency both code paths should have the same mitigations
    applied.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-2-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 778302ca09498b448620edd372dc908bebf80bdf
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:04 2022 +0100

    vt_ioctl: fix array_index_nospec in vt_setactivate
    
    commit 61cc70d9e8ef5b042d4ed87994d20100ec8896d9 upstream.
    
    array_index_nospec ensures that an out-of-bounds value is set to zero
    on the transient path. Decreasing the value by one afterwards causes
    a transient integer underflow. vsa.console should be decreased first
    and then sanitized with array_index_nospec.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-1-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22249886dc5bc3d6bcc212f07e65b49d85c582fe
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Thu Feb 10 19:40:17 2022 +0200

    net: dsa: mv88e6xxx: fix use-after-free in mv88e6xxx_mdios_unregister
    
    [ Upstream commit 51a04ebf21122d5c76a716ecd9bfc33ea44b2b39 ]
    
    Since struct mv88e6xxx_mdio_bus *mdio_bus is the bus->priv of something
    allocated with mdiobus_alloc_size(), this means that mdiobus_free(bus)
    will free the memory backing the mdio_bus as well. Therefore, the
    mdio_bus->list element is freed memory, but we continue to iterate
    through the list of MDIO buses using that list element.
    
    To fix this, use the proper list iterator that handles element deletion
    by keeping a copy of the list element next pointer.
    
    Fixes: f53a2ce893b2 ("net: dsa: mv88e6xxx: don't use devres for mdiobus")
    Reported-by: Rafael Richter <rafael.richter@gin.de>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Link: https://lore.kernel.org/r/20220210174017.3271099-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a3c65c487a48d813e393a017cff954fe499084b
Author: Colin Foster <colin.foster@in-advantage.com>
Date:   Thu Feb 10 07:04:51 2022 -0800

    net: mscc: ocelot: fix mutex lock error during ethtool stats read
    
    [ Upstream commit 7fbf6795d127a3b1bb39b0e42579904cf6db1624 ]
    
    An ongoing workqueue populates the stats buffer. At the same time, a user
    might query the statistics. While writing to the buffer is mutex-locked,
    reading from the buffer wasn't. This could lead to buggy reads by ethtool.
    
    This patch fixes the former blamed commit, but the bug was introduced in
    the latter.
    
    Signed-off-by: Colin Foster <colin.foster@in-advantage.com>
    Fixes: 1e1caa9735f90 ("ocelot: Clean up stats update deferred work")
    Fixes: a556c76adc052 ("net: mscc: Add initial Ocelot switch support")
    Reported-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Link: https://lore.kernel.org/all/20220210150451.416845-2-colin.foster@in-advantage.com/
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 809f030745b29ca3f6f8b4f0f9888da61500d2e7
Author: Jesse Brandeburg <jesse.brandeburg@intel.com>
Date:   Fri Jan 14 15:38:39 2022 -0800

    ice: fix IPIP and SIT TSO offload
    
    [ Upstream commit 46b699c50c0304cdbd725d7740073a7f9d5edb10 ]
    
    The driver was avoiding offload for IPIP (at least) frames due to
    parsing the inner header offsets incorrectly when trying to check
    lengths.
    
    This length check works for VXLAN frames but fails on IPIP frames
    because skb_transport_offset points to the inner header in IPIP
    frames, which meant the subtraction of transport_header from
    inner_network_header returns a negative value (-20).
    
    With the code before this patch, everything continued to work, but GSO
    was being used to segment, causing throughputs of 1.5Gb/s per thread.
    After this patch, throughput is more like 10Gb/s per thread for IPIP
    traffic.
    
    Fixes: e94d44786693 ("ice: Implement filter sync, NDO operations and bump version")
    Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Tested-by: Gurucharan G <gurucharanx.g@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf11949b916325ca925f9dd25ad649380c2adf04
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jan 7 11:02:06 2022 +0300

    ice: fix an error code in ice_cfg_phy_fec()
    
    [ Upstream commit 21338d58736ef70eaae5fd75d567a358ff7902f9 ]
    
    Propagate the error code from ice_get_link_default_override() instead
    of returning success.
    
    Fixes: ea78ce4dab05 ("ice: add link lenient and default override support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Tested-by: Gurucharan G <gurucharanx.g@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8edc6feab4d5c7c0b6c6bfdec6bf9e294b2dc3e
Author: Robert-Ionut Alexa <robert-ionut.alexa@nxp.com>
Date:   Wed Feb 9 17:57:43 2022 +0200

    dpaa2-eth: unregister the netdev before disconnecting from the PHY
    
    [ Upstream commit 9ccc6e0c8959a019bb40f6b18704b142c04b19a8 ]
    
    The netdev should be unregistered before we are disconnecting from the
    MAC/PHY so that the dev_close callback is called and the PHY and the
    phylink workqueues are actually stopped before we are disconnecting and
    destroying the phylink instance.
    
    Fixes: 719479230893 ("dpaa2-eth: add MAC/PHY support through phylink")
    Signed-off-by: Robert-Ionut Alexa <robert-ionut.alexa@nxp.com>
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff6c9e0fcee5481b491aab49d55660a59ead1a81
Author: Raju Rangoju <Raju.Rangoju@amd.com>
Date:   Wed Feb 9 10:02:01 2022 +0530

    net: amd-xgbe: disable interrupts during pci removal
    
    [ Upstream commit 68c2d6af1f1e469544d6cbe9a601d96fb9c00e7f ]
    
    Hardware interrupts are enabled during the pci probe, however,
    they are not disabled during pci removal.
    
    Disable all hardware interrupts during pci removal to avoid any
    issues.
    
    Fixes: e75377404726 ("amd-xgbe: Update PCI support to use new IRQ functions")
    Suggested-by: Selwin Sebastian <Selwin.Sebastian@amd.com>
    Signed-off-by: Raju Rangoju <Raju.Rangoju@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 657aea782887f6a55d6e2ad6ce82d8425b2e5bab
Author: Jon Maloy <jmaloy@redhat.com>
Date:   Tue Feb 8 22:22:37 2022 -0500

    tipc: rate limit warning for received illegal binding update
    
    [ Upstream commit c7223d687758462826a20e9735305d55bb874c70 ]
    
    It would be easy to craft a message containing an illegal binding table
    update operation. This is handled correctly by the code, but the
    corresponding warning printout is not rate limited as is should be.
    We fix this now.
    
    Fixes: b97bf3fd8f6a ("[TIPC] Initial merge")
    Signed-off-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef5cdae8bc00c37317b5375811457a6b46f8440b
Author: Joel Stanley <joel@jms.id.au>
Date:   Wed Feb 9 10:33:59 2022 +1030

    net: mdio: aspeed: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit bc1c3c3b10db4f37c41e6107751a8d450d9c431c ]
    
    Fix loading of the driver when built as a module.
    
    Fixes: f160e99462c6 ("net: phy: Add mdio-aspeed")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Acked-by: Andrew Jeffery <andrew@aj.id.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf99c144360dc0ba338eedc0917953157ce211ec
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Feb 8 15:28:22 2022 -0800

    veth: fix races around rq->rx_notify_masked
    
    [ Upstream commit 68468d8c4cd4222a4ca1f185ab5a1c14480d078c ]
    
    veth being NETIF_F_LLTX enabled, we need to be more careful
    whenever we read/write rq->rx_notify_masked.
    
    BUG: KCSAN: data-race in veth_xmit / veth_xmit
    
    write to 0xffff888133d9a9f8 of 1 bytes by task 23552 on cpu 0:
     __veth_xdp_flush drivers/net/veth.c:269 [inline]
     veth_xmit+0x307/0x470 drivers/net/veth.c:350
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     br_dev_queue_push_xmit+0x3ce/0x430 net/bridge/br_forward.c:53
     NF_HOOK include/linux/netfilter.h:307 [inline]
     br_forward_finish net/bridge/br_forward.c:66 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     __br_forward+0x2e4/0x400 net/bridge/br_forward.c:115
     br_flood+0x521/0x5c0 net/bridge/br_forward.c:242
     br_dev_xmit+0x8b6/0x960
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     neigh_hh_output include/net/neighbour.h:525 [inline]
     neigh_output include/net/neighbour.h:539 [inline]
     ip_finish_output2+0x6f8/0xb70 net/ipv4/ip_output.c:228
     ip_finish_output+0xfb/0x240 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out net/ipv4/ip_output.c:126 [inline]
     ip_send_skb+0x6e/0xe0 net/ipv4/ip_output.c:1570
     udp_send_skb+0x641/0x880 net/ipv4/udp.c:967
     udp_sendmsg+0x12ea/0x14c0 net/ipv4/udp.c:1254
     inet_sendmsg+0x5f/0x80 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553
     __do_sys_sendmmsg net/socket.c:2582 [inline]
     __se_sys_sendmmsg net/socket.c:2579 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff888133d9a9f8 of 1 bytes by task 23563 on cpu 1:
     __veth_xdp_flush drivers/net/veth.c:268 [inline]
     veth_xmit+0x2d6/0x470 drivers/net/veth.c:350
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     br_dev_queue_push_xmit+0x3ce/0x430 net/bridge/br_forward.c:53
     NF_HOOK include/linux/netfilter.h:307 [inline]
     br_forward_finish net/bridge/br_forward.c:66 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     __br_forward+0x2e4/0x400 net/bridge/br_forward.c:115
     br_flood+0x521/0x5c0 net/bridge/br_forward.c:242
     br_dev_xmit+0x8b6/0x960
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     neigh_hh_output include/net/neighbour.h:525 [inline]
     neigh_output include/net/neighbour.h:539 [inline]
     ip_finish_output2+0x6f8/0xb70 net/ipv4/ip_output.c:228
     ip_finish_output+0xfb/0x240 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out net/ipv4/ip_output.c:126 [inline]
     ip_send_skb+0x6e/0xe0 net/ipv4/ip_output.c:1570
     udp_send_skb+0x641/0x880 net/ipv4/udp.c:967
     udp_sendmsg+0x12ea/0x14c0 net/ipv4/udp.c:1254
     inet_sendmsg+0x5f/0x80 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553
     __do_sys_sendmmsg net/socket.c:2582 [inline]
     __se_sys_sendmmsg net/socket.c:2579 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 23563 Comm: syz-executor.5 Not tainted 5.17.0-rc2-syzkaller-00064-gc36c04c2e132 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 948d4f214fde ("veth: Add driver XDP")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00e6d6c3bc14dfe32824e2c515f0e0f2d6ecf2f1
Author: Antoine Tenart <atenart@kernel.org>
Date:   Mon Feb 7 18:13:19 2022 +0100

    net: fix a memleak when uncloning an skb dst and its metadata
    
    [ Upstream commit 9eeabdf17fa0ab75381045c867c370f4cc75a613 ]
    
    When uncloning an skb dst and its associated metadata, a new
    dst+metadata is allocated and later replaces the old one in the skb.
    This is helpful to have a non-shared dst+metadata attached to a specific
    skb.
    
    The issue is the uncloned dst+metadata is initialized with a refcount of
    1, which is increased to 2 before attaching it to the skb. When
    tun_dst_unclone returns, the dst+metadata is only referenced from a
    single place (the skb) while its refcount is 2. Its refcount will never
    drop to 0 (when the skb is consumed), leading to a memory leak.
    
    Fix this by removing the call to dst_hold in tun_dst_unclone, as the
    dst+metadata refcount is already 1.
    
    Fixes: fc4099f17240 ("openvswitch: Fix egress tunnel info.")
    Cc: Pravin B Shelar <pshelar@ovn.org>
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e9fd2d0f69e4cc82a9a497bb14c1d70e75cc430
Author: Antoine Tenart <atenart@kernel.org>
Date:   Mon Feb 7 18:13:18 2022 +0100

    net: do not keep the dst cache when uncloning an skb dst and its metadata
    
    [ Upstream commit cfc56f85e72f5b9c5c5be26dc2b16518d36a7868 ]
    
    When uncloning an skb dst and its associated metadata a new dst+metadata
    is allocated and the tunnel information from the old metadata is copied
    over there.
    
    The issue is the tunnel metadata has references to cached dst, which are
    copied along the way. When a dst+metadata refcount drops to 0 the
    metadata is freed including the cached dst entries. As they are also
    referenced in the initial dst+metadata, this ends up in UaFs.
    
    In practice the above did not happen because of another issue, the
    dst+metadata was never freed because its refcount never dropped to 0
    (this will be fixed in a subsequent patch).
    
    Fix this by initializing the dst cache after copying the tunnel
    information from the old metadata to also unshare the dst cache.
    
    Fixes: d71785ffc7e7 ("net: add dst_cache to ovs vxlan lwtunnel")
    Cc: Paolo Abeni <pabeni@redhat.com>
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bae953d7ab50cac38fd7a2332b0583f98b60430
Author: Louis Peens <louis.peens@corigine.com>
Date:   Tue Feb 8 11:14:53 2022 +0100

    nfp: flower: fix ida_idx not being released
    
    [ Upstream commit 7db788ad627aabff2b74d4f1a3b68516d0fee0d7 ]
    
    When looking for a global mac index the extra NFP_TUN_PRE_TUN_IDX_BIT
    that gets set if nfp_flower_is_supported_bridge is true is not taken
    into account. Consequently the path that should release the ida_index
    in cleanup is never triggered, causing messages like:
    
        nfp 0000:02:00.0: nfp: Failed to offload MAC on br-ex.
        nfp 0000:02:00.0: nfp: Failed to offload MAC on br-ex.
        nfp 0000:02:00.0: nfp: Failed to offload MAC on br-ex.
    
    after NFP_MAX_MAC_INDEX number of reconfigs. Ultimately this lead to
    new tunnel flows not being offloaded.
    
    Fix this by unsetting the NFP_TUN_PRE_TUN_IDX_BIT before checking if
    the port is of type OTHER.
    
    Fixes: 2e0bc7f3cb55 ("nfp: flower: encode mac indexes with pre-tunnel rule check")
    Signed-off-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20220208101453.321949-1-simon.horman@corigine.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09ac0fcb0a82d647f2c61d3d488d367b7ee5bd51
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 7 21:34:51 2022 -0800

    ipmr,ip6mr: acquire RTNL before calling ip[6]mr_free_table() on failure path
    
    [ Upstream commit 5611a00697c8ecc5aad04392bea629e9d6a20463 ]
    
    ip[6]mr_free_table() can only be called under RTNL lock.
    
    RTNL: assertion failed at net/core/dev.c (10367)
    WARNING: CPU: 1 PID: 5890 at net/core/dev.c:10367 unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367
    Modules linked in:
    CPU: 1 PID: 5890 Comm: syz-executor.2 Not tainted 5.16.0-syzkaller-11627-g422ee58dc0ef #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367
    Code: 0f 85 9b ee ff ff e8 69 07 4b fa ba 7f 28 00 00 48 c7 c6 00 90 ae 8a 48 c7 c7 40 90 ae 8a c6 05 6d b1 51 06 01 e8 8c 90 d8 01 <0f> 0b e9 70 ee ff ff e8 3e 07 4b fa 4c 89 e7 e8 86 2a 59 fa e9 ee
    RSP: 0018:ffffc900046ff6e0 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff888050f51d00 RSI: ffffffff815fa008 RDI: fffff520008dfece
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815f3d6e R11: 0000000000000000 R12: 00000000fffffff4
    R13: dffffc0000000000 R14: ffffc900046ff750 R15: ffff88807b7dc000
    FS:  00007f4ab736e700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fee0b4f8990 CR3: 000000001e7d2000 CR4: 00000000003506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     mroute_clean_tables+0x244/0xb40 net/ipv6/ip6mr.c:1509
     ip6mr_free_table net/ipv6/ip6mr.c:389 [inline]
     ip6mr_rules_init net/ipv6/ip6mr.c:246 [inline]
     ip6mr_net_init net/ipv6/ip6mr.c:1306 [inline]
     ip6mr_net_init+0x3f0/0x4e0 net/ipv6/ip6mr.c:1298
     ops_init+0xaf/0x470 net/core/net_namespace.c:140
     setup_net+0x54f/0xbb0 net/core/net_namespace.c:331
     copy_net_ns+0x318/0x760 net/core/net_namespace.c:475
     create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110
     copy_namespaces+0x391/0x450 kernel/nsproxy.c:178
     copy_process+0x2e0c/0x7300 kernel/fork.c:2167
     kernel_clone+0xe7/0xab0 kernel/fork.c:2555
     __do_sys_clone+0xc8/0x110 kernel/fork.c:2672
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f4ab89f9059
    Code: Unable to access opcode bytes at RIP 0x7f4ab89f902f.
    RSP: 002b:00007f4ab736e118 EFLAGS: 00000206 ORIG_RAX: 0000000000000038
    RAX: ffffffffffffffda RBX: 00007f4ab8b0bf60 RCX: 00007f4ab89f9059
    RDX: 0000000020000280 RSI: 0000000020000270 RDI: 0000000040200000
    RBP: 00007f4ab8a5308d R08: 0000000020000300 R09: 0000000020000300
    R10: 00000000200002c0 R11: 0000000000000206 R12: 0000000000000000
    R13: 00007ffc3977cc1f R14: 00007f4ab736e300 R15: 0000000000022000
     </TASK>
    
    Fixes: f243e5a7859a ("ipmr,ip6mr: call ip6mr_free_table() on failure path")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Cong Wang <cong.wang@bytedance.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220208053451.2885398-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e177d2e85ebcd3008c4b2abc293f4118e04eedef
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Feb 7 18:15:53 2022 +0200

    net: dsa: lantiq_gswip: don't use devres for mdiobus
    
    [ Upstream commit 0d120dfb5d67edc5bcd1804e167dba2b30809afd ]
    
    As explained in commits:
    74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
    5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")
    
    mdiobus_free() will panic when called from devm_mdiobus_free() <-
    devres_release_all() <- __device_release_driver(), and that mdiobus was
    not previously unregistered.
    
    The GSWIP switch is a platform device, so the initial set of constraints
    that I thought would cause this (I2C or SPI buses which call ->remove on
    ->shutdown) do not apply. But there is one more which applies here.
    
    If the DSA master itself is on a bus that calls ->remove from ->shutdown
    (like dpaa2-eth, which is on the fsl-mc bus), there is a device link
    between the switch and the DSA master, and device_links_unbind_consumers()
    will unbind the GSWIP switch driver on shutdown.
    
    So the same treatment must be applied to all DSA switch drivers, which
    is: either use devres for both the mdiobus allocation and registration,
    or don't use devres at all.
    
    The gswip driver has the code structure in place for orderly mdiobus
    removal, so just replace devm_mdiobus_alloc() with the non-devres
    variant, and add manual free where necessary, to ensure that we don't
    let devres free a still-registered bus.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95e5402f9430b3c7d885dd3ec4c8c02c17936923
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Feb 7 18:15:50 2022 +0200

    net: dsa: felix: don't use devres for mdiobus
    
    [ Upstream commit 209bdb7ec6a28c7cdf580a0a98afbc9fc3b98932 ]
    
    As explained in commits:
    74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
    5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")
    
    mdiobus_free() will panic when called from devm_mdiobus_free() <-
    devres_release_all() <- __device_release_driver(), and that mdiobus was
    not previously unregistered.
    
    The Felix VSC9959 switch is a PCI device, so the initial set of
    constraints that I thought would cause this (I2C or SPI buses which call
    ->remove on ->shutdown) do not apply. But there is one more which
    applies here.
    
    If the DSA master itself is on a bus that calls ->remove from ->shutdown
    (like dpaa2-eth, which is on the fsl-mc bus), there is a device link
    between the switch and the DSA master, and device_links_unbind_consumers()
    will unbind the felix switch driver on shutdown.
    
    So the same treatment must be applied to all DSA switch drivers, which
    is: either use devres for both the mdiobus allocation and registration,
    or don't use devres at all.
    
    The felix driver has the code structure in place for orderly mdiobus
    removal, so just replace devm_mdiobus_alloc_size() with the non-devres
    variant, and add manual free where necessary, to ensure that we don't
    let devres free a still-registered bus.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2770b795294ed312375c11ef1d0b810499c66b83
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Feb 7 18:15:49 2022 +0200

    net: dsa: bcm_sf2: don't use devres for mdiobus
    
    [ Upstream commit 08f1a20822349004bb9cc1b153ecb516e9f2889d ]
    
    As explained in commits:
    74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
    5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")
    
    mdiobus_free() will panic when called from devm_mdiobus_free() <-
    devres_release_all() <- __device_release_driver(), and that mdiobus was
    not previously unregistered.
    
    The Starfighter 2 is a platform device, so the initial set of
    constraints that I thought would cause this (I2C or SPI buses which call
    ->remove on ->shutdown) do not apply. But there is one more which
    applies here.
    
    If the DSA master itself is on a bus that calls ->remove from ->shutdown
    (like dpaa2-eth, which is on the fsl-mc bus), there is a device link
    between the switch and the DSA master, and device_links_unbind_consumers()
    will unbind the bcm_sf2 switch driver on shutdown.
    
    So the same treatment must be applied to all DSA switch drivers, which
    is: either use devres for both the mdiobus allocation and registration,
    or don't use devres at all.
    
    The bcm_sf2 driver has the code structure in place for orderly mdiobus
    removal, so just replace devm_mdiobus_alloc() with the non-devres
    variant, and add manual free where necessary, to ensure that we don't
    let devres free a still-registered bus.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 475ce5dcf2d88fd4f3c213a0ac944e3e40702970
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Feb 7 18:15:48 2022 +0200

    net: dsa: ar9331: register the mdiobus under devres
    
    [ Upstream commit 50facd86e9fbc4b93fe02e5fe05776047f45dbfb ]
    
    As explained in commits:
    74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
    5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")
    
    mdiobus_free() will panic when called from devm_mdiobus_free() <-
    devres_release_all() <- __device_release_driver(), and that mdiobus was
    not previously unregistered.
    
    The ar9331 is an MDIO device, so the initial set of constraints that I
    thought would cause this (I2C or SPI buses which call ->remove on
    ->shutdown) do not apply. But there is one more which applies here.
    
    If the DSA master itself is on a bus that calls ->remove from ->shutdown
    (like dpaa2-eth, which is on the fsl-mc bus), there is a device link
    between the switch and the DSA master, and device_links_unbind_consumers()
    will unbind the ar9331 switch driver on shutdown.
    
    So the same treatment must be applied to all DSA switch drivers, which
    is: either use devres for both the mdiobus allocation and registration,
    or don't use devres at all.
    
    The ar9331 driver doesn't have a complex code structure for mdiobus
    removal, so just replace of_mdiobus_register with the devres variant in
    order to be all-devres and ensure that we don't free a still-registered
    bus.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ccebe77df6e0d88c72ba5e69cf1835927e53b6c
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Feb 7 18:15:47 2022 +0200

    net: dsa: mv88e6xxx: don't use devres for mdiobus
    
    [ Upstream commit f53a2ce893b2c7884ef94471f170839170a4eba0 ]
    
    As explained in commits:
    74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
    5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")
    
    mdiobus_free() will panic when called from devm_mdiobus_free() <-
    devres_release_all() <- __device_release_driver(), and that mdiobus was
    not previously unregistered.
    
    The mv88e6xxx is an MDIO device, so the initial set of constraints that
    I thought would cause this (I2C or SPI buses which call ->remove on
    ->shutdown) do not apply. But there is one more which applies here.
    
    If the DSA master itself is on a bus that calls ->remove from ->shutdown
    (like dpaa2-eth, which is on the fsl-mc bus), there is a device link
    between the switch and the DSA master, and device_links_unbind_consumers()
    will unbind the Marvell switch driver on shutdown.
    
    systemd-shutdown[1]: Powering off.
    mv88e6085 0x0000000008b96000:00 sw_gl0: Link is Down
    fsl-mc dpbp.9: Removing from iommu group 7
    fsl-mc dpbp.8: Removing from iommu group 7
    ------------[ cut here ]------------
    kernel BUG at drivers/net/phy/mdio_bus.c:677!
    Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    Modules linked in:
    CPU: 0 PID: 1 Comm: systemd-shutdow Not tainted 5.16.5-00040-gdc05f73788e5 #15
    pc : mdiobus_free+0x44/0x50
    lr : devm_mdiobus_free+0x10/0x20
    Call trace:
     mdiobus_free+0x44/0x50
     devm_mdiobus_free+0x10/0x20
     devres_release_all+0xa0/0x100
     __device_release_driver+0x190/0x220
     device_release_driver_internal+0xac/0xb0
     device_links_unbind_consumers+0xd4/0x100
     __device_release_driver+0x4c/0x220
     device_release_driver_internal+0xac/0xb0
     device_links_unbind_consumers+0xd4/0x100
     __device_release_driver+0x94/0x220
     device_release_driver+0x28/0x40
     bus_remove_device+0x118/0x124
     device_del+0x174/0x420
     fsl_mc_device_remove+0x24/0x40
     __fsl_mc_device_remove+0xc/0x20
     device_for_each_child+0x58/0xa0
     dprc_remove+0x90/0xb0
     fsl_mc_driver_remove+0x20/0x5c
     __device_release_driver+0x21c/0x220
     device_release_driver+0x28/0x40
     bus_remove_device+0x118/0x124
     device_del+0x174/0x420
     fsl_mc_bus_remove+0x80/0x100
     fsl_mc_bus_shutdown+0xc/0x1c
     platform_shutdown+0x20/0x30
     device_shutdown+0x154/0x330
     kernel_power_off+0x34/0x6c
     __do_sys_reboot+0x15c/0x250
     __arm64_sys_reboot+0x20/0x30
     invoke_syscall.constprop.0+0x4c/0xe0
     do_el0_svc+0x4c/0x150
     el0_svc+0x24/0xb0
     el0t_64_sync_handler+0xa8/0xb0
     el0t_64_sync+0x178/0x17c
    
    So the same treatment must be applied to all DSA switch drivers, which
    is: either use devres for both the mdiobus allocation and registration,
    or don't use devres at all.
    
    The Marvell driver already has a good structure for mdiobus removal, so
    just plug in mdiobus_free and get rid of devres.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Reported-by: Rafael Richter <Rafael.Richter@gin.de>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Tested-by: Daniel Klauer <daniel.klauer@gin.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a384c1e4058fd8dd3d7d32eb16505191f5dfb92
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Mon Feb 7 14:29:01 2022 -0800

    bonding: pair enable_port with slave_arr_updates
    
    [ Upstream commit 23de0d7b6f0e3f9a6283a882594c479949da1120 ]
    
    When 803.2ad mode enables a participating port, it should update
    the slave-array. I have observed that the member links are participating
    and are part of the active aggregator while the traffic is egressing via
    only one member link (in a case where two links are participating). Via
    kprobes I discovered that slave-arr has only one link added while
    the other participating link wasn't part of the slave-arr.
    
    I couldn't see what caused that situation but the simple code-walk
    through provided me hints that the enable_port wasn't always associated
    with the slave-array update.
    
    Fixes: ee6377147409 ("bonding: Simplify the xmit function for modes that use xmit_hash")
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Link: https://lore.kernel.org/r/20220207222901.1795287-1-maheshb@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba45dd3266773852570a510020c4e0d695d3b87
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Fri Feb 4 13:02:25 2022 +0000

    gpio: sifive: use the correct register to read output values
    
    [ Upstream commit cc38ef936840ac29204d806deb4d1836ec509594 ]
    
    Setting the output of a GPIO to 1 using gpiod_set_value(), followed by
    reading the same GPIO using gpiod_get_value(), will currently yield an
    incorrect result.
    
    This is because the SiFive GPIO device stores the output values in reg_set,
    not reg_dat.
    
    Supply the flag BGPIOF_READ_OUTPUT_REG_SET to bgpio_init() so that the
    generic driver reads the correct register.
    
    Fixes: 96868dce644d ("gpio/sifive: Add GPIO driver for SiFive SoCs")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    [Bartosz: added the Fixes tag]
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48e413087de1bc688ad732839efc0a5627f38d34
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Feb 4 18:31:02 2022 +0100

    ACPI: PM: s2idle: Cancel wakeup before dispatching EC GPE
    
    [ Upstream commit dc0075ba7f387fe4c48a8c674b11ab6f374a6acc ]
    
    Commit 4a9af6cac050 ("ACPI: EC: Rework flushing of EC work while
    suspended to idle") made acpi_ec_dispatch_gpe() check
    pm_wakeup_pending(), but that is before canceling the SCI wakeup,
    so pm_wakeup_pending() is always true.  This causes the loop in
    acpi_ec_dispatch_gpe() to always terminate after one iteration which
    may not be correct.
    
    Address this issue by canceling the SCI wakeup earlier, from
    acpi_ec_dispatch_gpe() itself.
    
    Fixes: 4a9af6cac050 ("ACPI: EC: Rework flushing of EC work while suspended to idle")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b72d3f0205ed88bc1e1029022e88b9754f67759
Author: Christoph Niedermaier <cniedermaier@dh-electronics.com>
Date:   Tue Feb 1 12:01:53 2022 +0100

    drm/panel: simple: Assign data from panel_dpi_probe() correctly
    
    [ Upstream commit 6df4432a5eca101b5fd80fbee41d309f3d67928d ]
    
    In the function panel_simple_probe() the pointer panel->desc is
    assigned to the passed pointer desc. If function panel_dpi_probe()
    is called panel->desc will be updated, but further on only desc
    will be evaluated. So update the desc pointer to be able to use
    the data from the function panel_dpi_probe().
    
    Fixes: 4a1d0dbc8332 ("drm/panel: simple: add panel-dpi support")
    
    Signed-off-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Cc: Marek Vasut <marex@denx.de>
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    To: dri-devel@lists.freedesktop.org
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Marek Vasut <marex@denx.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220201110153.3479-1-cniedermaier@dh-electronics.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf35639192edb579db08828873903ba50072dbcb
Author: Samuel Mendoza-Jonas <samjonas@amazon.com>
Date:   Thu Feb 3 14:49:16 2022 -0800

    ixgbevf: Require large buffers for build_skb on 82599VF
    
    [ Upstream commit fe68195daf34d5dddacd3f93dd3eafc4beca3a0e ]
    
    From 4.17 onwards the ixgbevf driver uses build_skb() to build an skb
    around new data in the page buffer shared with the ixgbe PF.
    This uses either a 2K or 3K buffer, and offsets the DMA mapping by
    NET_SKB_PAD + NET_IP_ALIGN. When using a smaller buffer RXDCTL is set to
    ensure the PF does not write a full 2K bytes into the buffer, which is
    actually 2K minus the offset.
    
    However on the 82599 virtual function, the RXDCTL mechanism is not
    available. The driver attempts to work around this by using the SET_LPE
    mailbox method to lower the maximm frame size, but the ixgbe PF driver
    ignores this in order to keep the PF and all VFs in sync[0].
    
    This means the PF will write up to the full 2K set in SRRCTL, causing it
    to write NET_SKB_PAD + NET_IP_ALIGN bytes past the end of the buffer.
    With 4K pages split into two buffers, this means it either writes
    NET_SKB_PAD + NET_IP_ALIGN bytes past the first buffer (and into the
    second), or NET_SKB_PAD + NET_IP_ALIGN bytes past the end of the DMA
    mapping.
    
    Avoid this by only enabling build_skb when using "large" buffers (3K).
    These are placed in each half of an order-1 page, preventing the PF from
    writing past the end of the mapping.
    
    [0]: Technically it only ever raises the max frame size, see
    ixgbe_set_vf_lpe() in ixgbe_sriov.c
    
    Fixes: f15c5ba5b6cd ("ixgbevf: add support for using order 1 pages to receive large frames")
    Signed-off-by: Samuel Mendoza-Jonas <samjonas@amazon.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5a64f548a45be007feee22a85f1cf837bae7c95
Author: Dongjin Kim <tobetter@gmail.com>
Date:   Thu Jan 27 21:29:25 2022 +0900

    arm64: dts: meson-g12b-odroid-n2: fix typo 'dio2133'
    
    [ Upstream commit bc41099f060ea74ac8d02c51bd0f5f46d969bedf ]
    
    Typo in audio amplifier node, dioo2133 -> dio2133
    
    Signed-off-by: Dongjin Kim <tobetter@gmail.com>
    Fixes: ef599f5f3e10 ("arm64: dts: meson: convert ODROID-N2 to dtsi")
    Fixes: 67d141c1f8e6 ("arm64: dts: meson: odroid-n2: add jack audio output support")
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/YfKQJejh0bfGYvof@anyang
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04fe6569a7cfb1040a0f41b9e2a0d89d7f2d8529
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Feb 2 12:00:56 2022 +0100

    netfilter: ctnetlink: disable helper autoassign
    
    [ Upstream commit d1ca60efc53d665cf89ed847a14a510a81770b81 ]
    
    When userspace, e.g. conntrackd, inserts an entry with a specified helper,
    its possible that the helper is lost immediately after its added:
    
    ctnetlink_create_conntrack
      -> nf_ct_helper_ext_add + assign helper
        -> ctnetlink_setup_nat
          -> ctnetlink_parse_nat_setup
             -> parse_nat_setup -> nfnetlink_parse_nat_setup
                                   -> nf_nat_setup_info
                                     -> nf_conntrack_alter_reply
                                       -> __nf_ct_try_assign_helper
    
    ... and __nf_ct_try_assign_helper will zero the helper again.
    
    Set IPS_HELPER bit to bypass auto-assign logic, its unwanted, just like
    when helper is assigned via ruleset.
    
    Dropped old 'not strictly necessary' comment, it referred to use of
    rcu_assign_pointer() before it got replaced by RCU_INIT_POINTER().
    
    NB: Fixes tag intentionally incorrect, this extends the referenced commit,
    but this change won't build without IPS_HELPER introduced there.
    
    Fixes: 6714cf5465d280 ("netfilter: nf_conntrack: fix explicit helper attachment and NAT")
    Reported-by: Pham Thanh Tuyen <phamtyn@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5ce7ee5fcc07583159f54ab4af5164de00148f5
Author: Mathias Krause <minipli@grsecurity.net>
Date:   Thu Jan 27 14:02:18 2022 +0100

    misc: fastrpc: avoid double fput() on failed usercopy
    
    [ Upstream commit 46963e2e0629cb31c96b1d47ddd89dc3d8990b34 ]
    
    If the copy back to userland fails for the FASTRPC_IOCTL_ALLOC_DMA_BUFF
    ioctl(), we shouldn't assume that 'buf->dmabuf' is still valid. In fact,
    dma_buf_fd() called fd_install() before, i.e. "consumed" one reference,
    leaving us with none.
    
    Calling dma_buf_put() will therefore put a reference we no longer own,
    leading to a valid file descritor table entry for an already released
    'file' object which is a straight use-after-free.
    
    Simply avoid calling dma_buf_put() and rely on the process exit code to
    do the necessary cleanup, if needed, i.e. if the file descriptor is
    still valid.
    
    Fixes: 6cffd79504ce ("misc: fastrpc: Add support for dmabuf exporter")
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Mathias Krause <minipli@grsecurity.net>
    Link: https://lore.kernel.org/r/20220127130218.809261-1-minipli@grsecurity.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21c890ca8eaecea06cabb92be2a53a6f26f56383
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Thu Jan 27 14:51:16 2022 +0100

    drm/vc4: hdmi: Allow DBLCLK modes even if horz timing is odd.
    
    [ Upstream commit 1d118965965f89948236ebe23072bb1fca5e7832 ]
    
    The 2711 pixel valve can't produce odd horizontal timings, and
    checks were added to vc4_hdmi_encoder_atomic_check and
    vc4_hdmi_encoder_mode_valid to filter out/block selection of
    such modes.
    
    Modes with DRM_MODE_FLAG_DBLCLK double all the horizontal timing
    values before programming them into the PV. The PV values,
    therefore, can not be odd, and so the modes can be supported.
    
    Amend the filtering appropriately.
    
    Fixes: 57fb32e632be ("drm/vc4: hdmi: Block odd horizontal timings")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220127135116.298278-1-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70ea005626a941923fece8fcfd471ea1ba295295
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 31 11:35:53 2022 +0100

    gpio: aggregator: Fix calling into sleeping GPIO controllers
    
    [ Upstream commit 2cba05451a6d0c703bb74f1a250691404f27c4f1 ]
    
    If the parent GPIO controller is a sleeping controller (e.g. a GPIO
    controller connected to I2C), getting or setting a GPIO triggers a
    might_sleep() warning.  This happens because the GPIO Aggregator takes
    the can_sleep flag into account only for its internal locking, not for
    calling into the parent GPIO controller.
    
    Fix this by using the gpiod_[gs]et*_cansleep() APIs when calling into a
    sleeping GPIO controller.
    
    Reported-by: Mikko Salomäki <ms@datarespons.se>
    Fixes: 828546e24280f721 ("gpio: Add GPIO Aggregator")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0042178a69eb77a979e36a50dcce9794a3140ef8
Author: Udipto Goswami <quic_ugoswami@quicinc.com>
Date:   Thu Jan 27 09:39:55 2022 +0530

    usb: f_fs: Fix use-after-free for epfile
    
    [ Upstream commit ebe2b1add1055b903e2acd86b290a85297edc0b3 ]
    
    Consider a case where ffs_func_eps_disable is called from
    ffs_func_disable as part of composition switch and at the
    same time ffs_epfile_release get called from userspace.
    ffs_epfile_release will free up the read buffer and call
    ffs_data_closed which in turn destroys ffs->epfiles and
    mark it as NULL. While this was happening the driver has
    already initialized the local epfile in ffs_func_eps_disable
    which is now freed and waiting to acquire the spinlock. Once
    spinlock is acquired the driver proceeds with the stale value
    of epfile and tries to free the already freed read buffer
    causing use-after-free.
    
    Following is the illustration of the race:
    
          CPU1                                  CPU2
    
       ffs_func_eps_disable
       epfiles (local copy)
                                            ffs_epfile_release
                                            ffs_data_closed
                                            if (last file closed)
                                            ffs_data_reset
                                            ffs_data_clear
                                            ffs_epfiles_destroy
    spin_lock
    dereference epfiles
    
    Fix this races by taking epfiles local copy & assigning it under
    spinlock and if epfiles(local) is null then update it in ffs->epfiles
    then finally destroy it.
    Extending the scope further from the race, protecting the ep related
    structures, and concurrent accesses.
    
    Fixes: a9e6f83c2df1 ("usb: gadget: f_fs: stop sleeping in ffs_func_eps_disable")
    Co-developed-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Pratham Pratap <quic_ppratap@quicinc.com>
    Signed-off-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Link: https://lore.kernel.org/r/1643256595-10797-1-git-send-email-quic_ugoswami@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a37fd9fdcce3829607786f2fd1e14643016cd23
Author: Rob Herring <robh@kernel.org>
Date:   Thu Jan 20 11:23:55 2022 -0600

    ARM: dts: imx7ulp: Fix 'assigned-clocks-parents' typo
    
    [ Upstream commit 6d58c5e21a3fe355ce6d1808e96d02a610265218 ]
    
    The correct property name is 'assigned-clock-parents', not
    'assigned-clocks-parents'. Though if the platform works with the typo, one
    has to wonder if the property is even needed.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Fixes: 8b8c7d97e2c7 ("ARM: dts: imx7ulp: Add wdog1 node")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39bf132a6ed584e57a92012afc20d362a3a8f6c9
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 25 18:16:00 2022 -0600

    phy: xilinx: zynqmp: Fix bus width setting for SGMII
    
    [ Upstream commit 37291f60d0822f191748c2a54ce63b0bc669020f ]
    
    TX_PROT_BUS_WIDTH and RX_PROT_BUS_WIDTH are single registers with
    separate bit fields for each lane. The code in xpsgtr_phy_init_sgmii was
    not preserving the existing register value for other lanes, so enabling
    the PHY in SGMII mode on one lane zeroed out the settings for all other
    lanes, causing other PS-GTR peripherals such as USB3 to malfunction.
    
    Use xpsgtr_clr_set to only manipulate the desired bits in the register.
    
    Fixes: 4a33bea00314 ("phy: zynqmp: Add PHY driver for the Xilinx ZynqMP Gigabit Transceiver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Acked-by: Michal Simek <michal.simek@xilinx.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://lore.kernel.org/r/20220126001600.1592218-1-robert.hancock@calian.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 108868dae2ee352764c3e446450368d4fa4bf3d3
Author: Fabio Estevam <festevam@gmail.com>
Date:   Sun Dec 19 19:42:15 2021 -0300

    ARM: dts: imx6qdl-udoo: Properly describe the SD card detect
    
    [ Upstream commit 993d66140f8d1c1853a3b58b77b43b681eb64dee ]
    
    GPIO7_IO00 is used as SD card detect.
    
    Properly describe this in the devicetree.
    
    Fixes: 40cdaa542cf0 ("ARM: dts: imx6q-udoo: Add initial board support")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a7b5e8d8c1e762b0ca0ddfc74fffd584a30722c
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Jan 18 19:13:37 2022 +0100

    staging: fbtft: Fix error path in fbtft_driver_module_init()
    
    [ Upstream commit 426aca16e903b387a0b0001d62207a745c67cfd3 ]
    
    If registering the platform driver fails, the function must not return
    without undoing the spi driver registration first.
    
    Fixes: c296d5f9957c ("staging: fbtft: core support")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20220118181338.207943-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74cd5cb2190f1cb424d07be608149833eed27ebf
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Mon Dec 27 19:00:26 2021 +0100

    ARM: dts: meson8b: Fix the UART device-tree schema validation
    
    [ Upstream commit 3375aa77135f6aeb1107ed839a2050a4118444bc ]
    
    The dt-bindings for the UART controller only allow the following values
    for Meson8 SoCs:
    - "amlogic,meson8b-uart", "amlogic,meson-ao-uart"
    - "amlogic,meson8b-uart"
    
    Use the correct fallback compatible string "amlogic,meson-ao-uart" for
    AO UART. Drop the "amlogic,meson-uart" compatible string from the EE
    domain UART controllers.
    
    Also update the order of the clocks to match the order defined in the
    yaml bindings.
    
    Fixes: b02d6e73f5fc96 ("ARM: dts: meson8b: use stable UART bindings with correct gate clock")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211227180026.4068352-4-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 566b558e94297262cb4d58dc67c45ae4bf86a4e2
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Mon Dec 27 19:00:25 2021 +0100

    ARM: dts: meson8: Fix the UART device-tree schema validation
    
    [ Upstream commit 57007bfb5469ba31cacf69d52195e8b75f43e32d ]
    
    The dt-bindings for the UART controller only allow the following values
    for Meson8 SoCs:
    - "amlogic,meson8-uart", "amlogic,meson-ao-uart"
    - "amlogic,meson8-uart"
    
    Use the correct fallback compatible string "amlogic,meson-ao-uart" for
    AO UART. Drop the "amlogic,meson-uart" compatible string from the EE
    domain UART controllers.
    
    Also update the order of the clocks to match the order defined in the
    yaml schema.
    
    Fixes: 6ca77502050eff ("ARM: dts: meson8: use stable UART bindings with correct gate clock")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211227180026.4068352-3-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 210d70f08100c9d88843b2c457b9d0fd27e5ab3d
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Mon Dec 27 19:00:24 2021 +0100

    ARM: dts: meson: Fix the UART compatible strings
    
    [ Upstream commit 5225e1b87432dcf0d0fc3440824b91d04c1d6cc1 ]
    
    The dt-bindings for the UART controller only allow the following values
    for Meson6 SoCs:
    - "amlogic,meson6-uart", "amlogic,meson-ao-uart"
    - "amlogic,meson6-uart"
    
    Use the correct fallback compatible string "amlogic,meson-ao-uart" for
    AO UART. Drop the "amlogic,meson-uart" compatible string from the EE
    domain UART controllers.
    
    Fixes: ec9b59162fd831 ("ARM: dts: meson6: use stable UART bindings")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211227180026.4068352-2-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88f0e61354f4dc057a51651ec59935fd979d3bc3
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Nov 25 16:48:34 2021 +0200

    ARM: dts: Fix timer regression for beagleboard revision c
    
    [ Upstream commit 23885389dbbbbc698986e77a45c1fc44a6e3632e ]
    
    Commit e428e250fde6 ("ARM: dts: Configure system timers for omap3")
    caused a timer regression for beagleboard revision c where the system
    clockevent stops working if omap3isp module is unloaded.
    
    Turns out we still have beagleboard revisions a-b4 capacitor c70 quirks
    applied that limit the usable timers for no good reason. This also affects
    the power management as we use the system clock instead of the 32k clock
    source.
    
    Let's fix the issue by adding a new omap3-beagle-ab4.dts for the old timer
    quirks. This allows us to remove the timer quirks for later beagleboard
    revisions. We also need to update the related timer quirk check for the
    correct compatible property.
    
    Fixes: e428e250fde6 ("ARM: dts: Configure system timers for omap3")
    Cc: linux-kernel@vger.kernel.org
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Rob Herring <robh+dt@kernel.org>
    Reported-by: Jarkko Nikula <jarkko.nikula@bitmer.com>
    Tested-by: Jarkko Nikula <jarkko.nikula@bitmer.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c943a297ec3c71b01c004258aa3957517f1519eb
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Jan 19 16:11:22 2022 -0800

    drm/rockchip: vop: Correct RK3399 VOP register fields
    
    commit 9da1e9ab82c92d0e89fe44cad2cd7c2d18d64070 upstream.
    
    Commit 7707f7227f09 ("drm/rockchip: Add support for afbc") switched up
    the rk3399_vop_big[] register windows, but it did so incorrectly.
    
    The biggest problem is in rk3288_win23_data[] vs.
    rk3368_win23_data[] .format field:
    
      RK3288's format: VOP_REG(RK3288_WIN2_CTRL0, 0x7, 1)
      RK3368's format: VOP_REG(RK3368_WIN2_CTRL0, 0x3, 5)
    
    Bits 5:6 (i.e., shift 5, mask 0x3) are correct for RK3399, according to
    the TRM.
    
    There are a few other small differences between the 3288 and 3368
    definitions that were swapped in commit 7707f7227f09. I reviewed them to
    the best of my ability according to the RK3399 TRM and fixed them up.
    
    This fixes IOMMU issues (and display errors) when testing with BG24
    color formats.
    
    Fixes: 7707f7227f09 ("drm/rockchip: Add support for afbc")
    Cc: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Tested-by: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220119161104.1.I1d01436bef35165a8cdfe9308789c0badb5ff46a@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a941384fba3f1b14965be38c3351af78999307b7
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Feb 4 18:35:22 2022 +0100

    PM: s2idle: ACPI: Fix wakeup interrupts handling
    
    commit cb1f65c1e1424a4b5e4a86da8aa3b8fd8459c8ec upstream.
    
    After commit e3728b50cd9b ("ACPI: PM: s2idle: Avoid possible race
    related to the EC GPE") wakeup interrupts occurring immediately after
    the one discarded by acpi_s2idle_wake() may be missed.  Moreover, if
    the SCI triggers again immediately after the rearming in
    acpi_s2idle_wake(), that wakeup may be missed too.
    
    The problem is that pm_system_irq_wakeup() only calls pm_system_wakeup()
    when pm_wakeup_irq is 0, but that's not the case any more after the
    interrupt causing acpi_s2idle_wake() to run until pm_wakeup_irq is
    cleared by the pm_wakeup_clear() call in s2idle_loop().  However,
    there may be wakeup interrupts occurring in that time frame and if
    that happens, they will be missed.
    
    To address that issue first move the clearing of pm_wakeup_irq to
    the point at which it is known that the interrupt causing
    acpi_s2idle_wake() to tun will be discarded, before rearming the SCI
    for wakeup.  Moreover, because that only reduces the size of the
    time window in which the issue may manifest itself, allow
    pm_system_irq_wakeup() to register two second wakeup interrupts in
    a row and, when discarding the first one, replace it with the second
    one.  [Of course, this assumes that only one wakeup interrupt can be
    discarded in one go, but currently that is the case and I am not
    aware of any plans to change that.]
    
    Fixes: e3728b50cd9b ("ACPI: PM: s2idle: Avoid possible race related to the EC GPE")
    Cc: 5.4+ <stable@vger.kernel.org> # 5.4+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcbac51a64d35711e7a1dd1d17bfc975a368597b
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Feb 3 19:31:24 2022 +0000

    ACPI/IORT: Check node revision for PMCG resources
    
    commit da5fb9e1ad3fbf632dce735f1bdad257ca528499 upstream.
    
    The original version of the IORT PMCG definition had an oversight
    wherein there was no way to describe the second register page for an
    implementation using the recommended RELOC_CTRS feature. Although the
    spec was fixed, and the final patches merged to ACPICA and Linux written
    against the new version, it seems that some old firmware based on the
    original revision has survived and turned up in the wild.
    
    Add a check for the original PMCG definition, and avoid filling in the
    second memory resource with nonsense if so. Otherwise it is likely that
    something horrible will happen when the PMCG driver attempts to probe.
    
    Reported-by: Michael Petlan <mpetlan@redhat.com>
    Fixes: 24e516049360 ("ACPI/IORT: Add support for PMCG")
    Cc: <stable@vger.kernel.org> # 5.2.x
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Link: https://lore.kernel.org/r/75628ae41c257fb73588f7bf1c4459160e04be2b.1643916258.git.robin.murphy@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57ede0ce65000279ebc706e9ec5f770dc11d2801
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 7 00:40:13 2022 +0200

    nvme-tcp: fix bogus request completion when failing to send AER
    
    commit 63573807b27e0faf8065a28b1bbe1cbfb23c0130 upstream.
    
    AER is not backed by a real request, hence we should not incorrectly
    assume that when failing to send a nvme command, it is a normal request
    but rather check if this is an aer and if so complete the aer (similar
    to the normal completion path).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a669d77e5b34866a17ea1e5204fc635fd8813f7
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Mon Feb 7 09:44:04 2022 +0100

    ARM: socfpga: fix missing RESET_CONTROLLER
    
    commit 3037b174b1876aae6b2d1a27a878c681c78ccadc upstream.
    
    The SocFPGA machine since commit b3ca9888f35f ("reset: socfpga: add an
    early reset driver for SoCFPGA") uses reset controller, so it should
    select RESET_CONTROLLER explicitly.  Selecting ARCH_HAS_RESET_CONTROLLER
    is not enough because it affects only default choice still allowing a
    non-buildable configuration:
    
      /usr/bin/arm-linux-gnueabi-ld: arch/arm/mach-socfpga/socfpga.o: in function `socfpga_init_irq':
      arch/arm/mach-socfpga/socfpga.c:56: undefined reference to `socfpga_reset_init'
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: <stable@vger.kernel.org>
    Fixes: b3ca9888f35f ("reset: socfpga: add an early reset driver for SoCFPGA")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 435e62d5666a7909e3f5e5cfbdef5c94eed8430e
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Feb 6 00:53:12 2022 +0100

    ARM: dts: Fix boot regression on Skomer
    
    commit d9058d6a0e92d8e4a00855f8fe204792f42794db upstream.
    
    The signal routing on the Skomer board was incorrect making
    it impossible to mount root from the SD card. Fix this up.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Cc: Stefan Hansson <newbyte@disroot.org>
    Link: https://lore.kernel.org/r/20220205235312.446730-1-linus.walleij@linaro.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b217b89e607c9bc384740115a3236ab71fa8833e
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Dec 27 13:14:02 2021 -0300

    ARM: dts: imx23-evk: Remove MX23_PAD_SSP1_DETECT from hog group
    
    commit 42c9b28e6862d16db82a56f5667cf4d1f6658cf6 upstream.
    
    Currently, SD card fails to mount due to the following pinctrl error:
    
    [   11.170000] imx23-pinctrl 80018000.pinctrl: pin SSP1_DETECT already requested by 80018000.pinctrl; cannot claim for 80010000.spi
    [   11.180000] imx23-pinctrl 80018000.pinctrl: pin-65 (80010000.spi) status -22
    [   11.190000] imx23-pinctrl 80018000.pinctrl: could not request pin 65 (SSP1_DETECT) from group mmc0-pins-fixup.0  on device 80018000.pinctrl
    [   11.200000] mxs-mmc 80010000.spi: Error applying setting, reverse things back
    
    Fix it by removing the MX23_PAD_SSP1_DETECT pin from the hog group as it
    is already been used by the mmc0-pins-fixup pinctrl group.
    
    With this change the rootfs can be mounted and the imx23-evk board can
    boot successfully.
    
    Cc: <stable@vger.kernel.org>
    Fixes: bc3875f1a61e ("ARM: dts: mxs: modify mx23/mx28 dts files to use pinctrl headers")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f9843f2f65e9c9297d949cc57721cb9ca5947fd
Author: Aurelien Jarno <aurelien@aurel32.net>
Date:   Wed Jan 26 18:14:42 2022 +0100

    riscv: fix build with binutils 2.38
    
    commit 6df2a016c0c8a3d0933ef33dd192ea6606b115e3 upstream.
    
    From version 2.38, binutils default to ISA spec version 20191213. This
    means that the csr read/write (csrr*/csrw*) instructions and fence.i
    instruction has separated from the `I` extension, become two standalone
    extensions: Zicsr and Zifencei. As the kernel uses those instruction,
    this causes the following build failure:
    
      CC      arch/riscv/kernel/vdso/vgettimeofday.o
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h: Assembler messages:
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
    
    The fix is to specify those extensions explicitely in -march. However as
    older binutils version do not support this, we first need to detect
    that.
    
    Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
    Tested-by: Alexandre Ghiti <alexandre.ghiti@canonical.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aa5c8657292e05e6dfa8fe2316951001dab7e3a
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Jan 20 00:06:24 2022 +0000

    KVM: VMX: Set vmcs.PENDING_DBG.BS on #DB in STI/MOVSS blocking shadow
    
    [ Upstream commit b9bed78e2fa9571b7c983b20666efa0009030c71 ]
    
    Set vmcs.GUEST_PENDING_DBG_EXCEPTIONS.BS, a.k.a. the pending single-step
    breakpoint flag, when re-injecting a #DB with RFLAGS.TF=1, and STI or
    MOVSS blocking is active.  Setting the flag is necessary to make VM-Entry
    consistency checks happy, as VMX has an invariant that if RFLAGS.TF is
    set and STI/MOVSS blocking is true, then the previous instruction must
    have been STI or MOV/POP, and therefore a single-step #DB must be pending
    since the RFLAGS.TF cannot have been set by the previous instruction,
    i.e. the one instruction delay after setting RFLAGS.TF must have already
    expired.
    
    Normally, the CPU sets vmcs.GUEST_PENDING_DBG_EXCEPTIONS.BS appropriately
    when recording guest state as part of a VM-Exit, but #DB VM-Exits
    intentionally do not treat the #DB as "guest state" as interception of
    the #DB effectively makes the #DB host-owned, thus KVM needs to manually
    set PENDING_DBG.BS when forwarding/re-injecting the #DB to the guest.
    
    Note, although this bug can be triggered by guest userspace, doing so
    requires IOPL=3, and guest userspace running with IOPL=3 has full access
    to all I/O ports (from the guest's perspective) and can crash/reboot the
    guest any number of ways.  IOPL=3 is required because STI blocking kicks
    in if and only if RFLAGS.IF is toggled 0=>1, and if CPL>IOPL, STI either
    takes a #GP or modifies RFLAGS.VIF, not RFLAGS.IF.
    
    MOVSS blocking can be initiated by userspace, but can be coincident with
    a #DB if and only if DR7.GD=1 (General Detect enabled) and a MOV DR is
    executed in the MOVSS shadow.  MOV DR #GPs at CPL>0, thus MOVSS blocking
    is problematic only for CPL0 (and only if the guest is crazy enough to
    access a DR in a MOVSS shadow).  All other sources of #DBs are either
    suppressed by MOVSS blocking (single-step, code fetch, data, and I/O),
    are mutually exclusive with MOVSS blocking (T-bit task switch), or are
    already handled by KVM (ICEBP, a.k.a. INT1).
    
    This bug was originally found by running tests[1] created for XSA-308[2].
    Note that Xen's userspace test emits ICEBP in the MOVSS shadow, which is
    presumably why the Xen bug was deemed to be an exploitable DOS from guest
    userspace.  KVM already handles ICEBP by skipping the ICEBP instruction
    and thus clears MOVSS blocking as a side effect of its "emulation".
    
    [1] http://xenbits.xenproject.org/docs/xtf/xsa-308_2main_8c_source.html
    [2] https://xenbits.xen.org/xsa/advisory-308.html
    
    Reported-by: David Woodhouse <dwmw2@infradead.org>
    Reported-by: Alexander Graf <graf@amazon.de>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220120000624.655815-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd39fe29bbbba8ad84605f6ded5c570b24f6cf8b
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Jan 20 01:07:19 2022 +0000

    KVM: SVM: Don't kill SEV guest if SMAP erratum triggers in usermode
    
    [ Upstream commit cdf85e0c5dc766fc7fc779466280e454a6d04f87 ]
    
    Inject a #GP instead of synthesizing triple fault to try to avoid killing
    the guest if emulation of an SEV guest fails due to encountering the SMAP
    erratum.  The injected #GP may still be fatal to the guest, e.g. if the
    userspace process is providing critical functionality, but KVM should
    make every attempt to keep the guest alive.
    
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Liam Merwick <liam.merwick@oracle.com>
    Message-Id: <20220120010719.711476-10-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9efad4cb03658b62514d8f8992525b2912272b7b
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Jan 12 18:01:30 2022 +0100

    KVM: nVMX: Also filter MSR_IA32_VMX_TRUE_PINBASED_CTLS when eVMCS
    
    [ Upstream commit f80ae0ef089a09e8c18da43a382c3caac9a424a7 ]
    
    Similar to MSR_IA32_VMX_EXIT_CTLS/MSR_IA32_VMX_TRUE_EXIT_CTLS,
    MSR_IA32_VMX_ENTRY_CTLS/MSR_IA32_VMX_TRUE_ENTRY_CTLS pair,
    MSR_IA32_VMX_TRUE_PINBASED_CTLS needs to be filtered the same way
    MSR_IA32_VMX_PINBASED_CTLS is currently filtered as guests may solely rely
    on 'true' MSR data.
    
    Note, none of the currently existing Windows/Hyper-V versions are known
    to stumble upon the unfiltered MSR_IA32_VMX_TRUE_PINBASED_CTLS, the change
    is aimed at making the filtering future proof.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220112170134.1904308-2-vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db58a3d978b4c22472125e5e2e4aa554e5330757
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Jan 12 18:01:31 2022 +0100

    KVM: nVMX: eVMCS: Filter out VM_EXIT_SAVE_VMX_PREEMPTION_TIMER
    
    [ Upstream commit 7a601e2cf61558dfd534a9ecaad09f5853ad8204 ]
    
    Enlightened VMCS v1 doesn't have VMX_PREEMPTION_TIMER_VALUE field,
    PIN_BASED_VMX_PREEMPTION_TIMER is also filtered out already so it makes
    sense to filter out VM_EXIT_SAVE_VMX_PREEMPTION_TIMER too.
    
    Note, none of the currently existing Windows/Hyper-V versions are known
    to enable 'save VMX-preemption timer value' when eVMCS is in use, the
    change is aimed at making the filtering future proof.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220112170134.1904308-3-vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc129275a7f7076f2773d57061bca45af14396dd
Author: Hou Wenlong <houwenlong93@linux.alibaba.com>
Date:   Thu Jan 27 14:54:49 2022 +0800

    KVM: eventfd: Fix false positive RCU usage warning
    
    [ Upstream commit 6a0c61703e3a5d67845a4b275e1d9d7bc1b5aad7 ]
    
    Fix the following false positive warning:
     =============================
     WARNING: suspicious RCU usage
     5.16.0-rc4+ #57 Not tainted
     -----------------------------
     arch/x86/kvm/../../../virt/kvm/eventfd.c:484 RCU-list traversed in non-reader section!!
    
     other info that might help us debug this:
    
     rcu_scheduler_active = 2, debug_locks = 1
     3 locks held by fc_vcpu 0/330:
      #0: ffff8884835fc0b0 (&vcpu->mutex){+.+.}-{3:3}, at: kvm_vcpu_ioctl+0x88/0x6f0 [kvm]
      #1: ffffc90004c0bb68 (&kvm->srcu){....}-{0:0}, at: vcpu_enter_guest+0x600/0x1860 [kvm]
      #2: ffffc90004c0c1d0 (&kvm->irq_srcu){....}-{0:0}, at: kvm_notify_acked_irq+0x36/0x180 [kvm]
    
     stack backtrace:
     CPU: 26 PID: 330 Comm: fc_vcpu 0 Not tainted 5.16.0-rc4+
     Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
     Call Trace:
      <TASK>
      dump_stack_lvl+0x44/0x57
      kvm_notify_acked_gsi+0x6b/0x70 [kvm]
      kvm_notify_acked_irq+0x8d/0x180 [kvm]
      kvm_ioapic_update_eoi+0x92/0x240 [kvm]
      kvm_apic_set_eoi_accelerated+0x2a/0xe0 [kvm]
      handle_apic_eoi_induced+0x3d/0x60 [kvm_intel]
      vmx_handle_exit+0x19c/0x6a0 [kvm_intel]
      vcpu_enter_guest+0x66e/0x1860 [kvm]
      kvm_arch_vcpu_ioctl_run+0x438/0x7f0 [kvm]
      kvm_vcpu_ioctl+0x38a/0x6f0 [kvm]
      __x64_sys_ioctl+0x89/0xc0
      do_syscall_64+0x3a/0x90
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Since kvm_unregister_irq_ack_notifier() does synchronize_srcu(&kvm->irq_srcu),
    kvm->irq_ack_notifier_list is protected by kvm->irq_srcu. In fact,
    kvm->irq_srcu SRCU read lock is held in kvm_notify_acked_irq(), making it
    a false positive warning. So use hlist_for_each_entry_srcu() instead of
    hlist_for_each_entry_rcu().
    
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Hou Wenlong <houwenlong93@linux.alibaba.com>
    Message-Id: <f98bac4f5052bad2c26df9ad50f7019e40434512.1643265976.git.houwenlong.hwl@antgroup.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87bbd78a2cd1b40a607f55e5135b222e51f27b9c
Author: Jisheng Zhang <jszhang@kernel.org>
Date:   Thu Jan 27 00:52:15 2022 +0800

    net: stmmac: dwmac-sun8i: use return val of readl_poll_timeout()
    
    [ Upstream commit 9e0db41e7a0b6f1271cbcfb16dbf5b8641b4e440 ]
    
    When readl_poll_timeout() timeout, we'd better directly use its return
    value.
    
    Before this patch:
    [    2.145528] dwmac-sun8i: probe of 4500000.ethernet failed with error -14
    
    After this patch:
    [    2.138520] dwmac-sun8i: probe of 4500000.ethernet failed with error -110
    
    Signed-off-by: Jisheng Zhang <jszhang@kernel.org>
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9b8cc1046f0b869ff262060dc8b4538b044fc41
Author: Wu Zheng <wu.zheng@intel.com>
Date:   Mon Jun 21 19:07:01 2021 -0400

    nvme-pci: add the IGNORE_DEV_SUBNQN quirk for Intel P4500/P4600 SSDs
    
    [ Upstream commit 25e58af4be412d59e056da65cc1cefbd89185bd2 ]
    
    The Intel P4500/P4600 SSDs do not report a subsystem NQN despite claiming
    compliance to a standards version where reporting one is required.
    
    Add the IGNORE_DEV_SUBNQN quirk to not fail the initialization of a
    second such SSDs in a system.
    
    Signed-off-by: Zheng Wu <wu.zheng@intel.com>
    Signed-off-by: Ye Jinhe <jinhe.ye@intel.com>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0774cf730564a4306c0ef47f8966dfd4443435c
Author: James Clark <james.clark@arm.com>
Date:   Mon Dec 6 11:38:40 2021 +0000

    perf: Always wake the parent event
    
    [ Upstream commit 961c39121759ad09a89598ec4ccdd34ae0468a19 ]
    
    When using per-process mode and event inheritance is set to true,
    forked processes will create a new perf events via inherit_event() ->
    perf_event_alloc(). But these events will not have ring buffers
    assigned to them. Any call to wakeup will be dropped if it's called on
    an event with no ring buffer assigned because that's the object that
    holds the wakeup list.
    
    If the child event is disabled due to a call to
    perf_aux_output_begin() or perf_aux_output_end(), the wakeup is
    dropped leaving userspace hanging forever on the poll.
    
    Normally the event is explicitly re-enabled by userspace after it
    wakes up to read the aux data, but in this case it does not get woken
    up so the event remains disabled.
    
    This can be reproduced when using Arm SPE and 'stress' which forks once
    before running the workload. By looking at the list of aux buffers read,
    it's apparent that they stop after the fork:
    
      perf record -e arm_spe// -vvv -- stress -c 1
    
    With this patch applied they continue to be printed. This behaviour
    doesn't happen when using systemwide or per-cpu mode.
    
    Reported-by: Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>
    Signed-off-by: James Clark <james.clark@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20211206113840.130802-2-james.clark@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a117e986e9ccd8ebeaf2308b797707a2adcd3be3
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Tue Dec 7 14:01:01 2021 +0100

    usb: dwc2: gadget: don't try to disable ep0 in dwc2_hsotg_suspend
    
    [ Upstream commit ac55d163855924aa5af9f1560977da8f346963c8 ]
    
    Calling dwc2_hsotg_ep_disable on ep0 (in/out) will lead to the following
    logs before returning -EINVAL:
    dwc2 49000000.usb-otg: dwc2_hsotg_ep_disable: called for ep0
    dwc2 49000000.usb-otg: dwc2_hsotg_ep_disable: called for ep0
    
    To avoid these two logs while suspending, start disabling the endpoint
    from the index 1, as done in dwc2_hsotg_udc_stop:
    
            /* all endpoints should be shutdown */
            for (ep = 1; ep < hsotg->num_of_eps; ep++) {
                    if (hsotg->eps_in[ep])
                            dwc2_hsotg_ep_disable_lock(&hsotg->eps_in[ep]->ep);
                    if (hsotg->eps_out[ep])
                            dwc2_hsotg_ep_disable_lock(&hsotg->eps_out[ep]->ep);
            }
    
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211207130101.270314-1-amelie.delaunay@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4607218fde84a76973d3941999360360ff6e333a
Author: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Date:   Wed Jan 19 11:47:51 2022 +0100

    PM: hibernate: Remove register_nosave_region_late()
    
    [ Upstream commit 33569ef3c754a82010f266b7b938a66a3ccf90a4 ]
    
    It is an unused wrapper forcing kmalloc allocation for registering
    nosave regions. Also, rename __register_nosave_region() to
    register_nosave_region() now that there is no need for disambiguation.
    
    Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e42c4a3d732517edc3766dd45a14e60d29dd929
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Jan 23 14:57:17 2022 -0800

    scsi: myrs: Fix crash in error case
    
    [ Upstream commit 4db09593af0b0b4d7d4805ebb3273df51d7cc30d ]
    
    In myrs_detect(), cs->disable_intr is NULL when privdata->hw_init() fails
    with non-zero. In this case, myrs_cleanup(cs) will call a NULL ptr and
    crash the kernel.
    
    [    1.105606] myrs 0000:00:03.0: Unknown Initialization Error 5A
    [    1.105872] myrs 0000:00:03.0: Failed to initialize Controller
    [    1.106082] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [    1.110774] Call Trace:
    [    1.110950]  myrs_cleanup+0xe4/0x150 [myrs]
    [    1.111135]  myrs_probe.cold+0x91/0x56a [myrs]
    [    1.111302]  ? DAC960_GEM_intr_handler+0x1f0/0x1f0 [myrs]
    [    1.111500]  local_pci_probe+0x48/0x90
    
    Link: https://lore.kernel.org/r/20220123225717.1069538-1-ztong0001@gmail.com
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bc5b128b9a2efaf5d5e54f2197b2a01d2f79a27
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Fri Jan 21 14:37:55 2022 +0900

    scsi: ufs: Treat link loss as fatal error
    
    [ Upstream commit c99b9b2301492b665b6e51ba6c06ec362eddcd10 ]
    
    This event is raised when link is lost as specified in UFSHCI spec and that
    means communication is not possible. Thus initializing UFS interface needs
    to be done.
    
    Make UFS driver considers Link Lost as fatal in the INT_FATAL_ERRORS
    mask. This will trigger a host reset whenever a link lost interrupt occurs.
    
    Link: https://lore.kernel.org/r/1642743475-54275-1-git-send-email-kwmad.kim@samsung.com
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12cf1208035d72a0e6a0f4127b2cbc3961154240
Author: John Garry <john.garry@huawei.com>
Date:   Tue Jan 18 20:15:05 2022 +0800

    scsi: pm8001: Fix bogus FW crash for maxcpus=1
    
    [ Upstream commit 62afb379a0fee7e9c2f9f68e1abeb85ceddf51b9 ]
    
    According to the comment in check_fw_ready() we should not check the
    IOP1_READY field in register SCRATCH_PAD_1 for 8008 or 8009 controllers.
    
    However we check this very field in process_oq() for processing the highest
    index interrupt vector. The highest interrupt vector is checked as the FW
    is programmed to signal fatal errors through this irq.
    
    Change that function to not check IOP1_READY for those mentioned
    controllers, but do check ILA_READY in both cases.
    
    The reason I assume that this was not hit earlier was because we always
    allocated 64 MSI(X), and just did not pass the vector index check in
    process_oq(), i.e.  the handler never ran for vector index 63.
    
    Link: https://lore.kernel.org/r/1642508105-95432-1-git-send-email-john.garry@huawei.com
    Tested-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87f187e5265bc8e3b38faef8b9db864cdd61dde7
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Jan 17 05:53:10 2022 -0800

    scsi: qedf: Fix refcount issue when LOGO is received during TMF
    
    [ Upstream commit 5239ab63f17cee643bd4bf6addfedebaa7d4f41e ]
    
    Hung task call trace was seen during LOGO processing.
    
    [  974.309060] [0000:00:00.0]:[qedf_eh_device_reset:868]: 1:0:2:0: LUN RESET Issued...
    [  974.309065] [0000:00:00.0]:[qedf_initiate_tmf:2422]: tm_flags 0x10 sc_cmd 00000000c16b930f op = 0x2a target_id = 0x2 lun=0
    [  974.309178] [0000:00:00.0]:[qedf_initiate_tmf:2431]: portid=016900 tm_flags =LUN RESET
    [  974.309222] [0000:00:00.0]:[qedf_initiate_tmf:2438]: orig io_req = 00000000ec78df8f xid = 0x180 ref_cnt = 1.
    [  974.309625] host1: rport 016900: Received LOGO request while in state Ready
    [  974.309627] host1: rport 016900: Delete port
    [  974.309642] host1: rport 016900: work event 3
    [  974.309644] host1: rport 016900: lld callback ev 3
    [  974.313243] [0000:61:00.2]:[qedf_execute_tmf:2383]:1: fcport is uploading, not executing flush.
    [  974.313295] [0000:61:00.2]:[qedf_execute_tmf:2400]:1: task mgmt command success...
    [  984.031088] INFO: task jbd2/dm-15-8:7645 blocked for more than 120 seconds.
    [  984.031136]       Not tainted 4.18.0-305.el8.x86_64 #1
    
    [  984.031166] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [  984.031209] jbd2/dm-15-8    D    0  7645      2 0x80004080
    [  984.031212] Call Trace:
    [  984.031222]  __schedule+0x2c4/0x700
    [  984.031230]  ? unfreeze_partials.isra.83+0x16e/0x1a0
    [  984.031233]  ? bit_wait_timeout+0x90/0x90
    [  984.031235]  schedule+0x38/0xa0
    [  984.031238]  io_schedule+0x12/0x40
    [  984.031240]  bit_wait_io+0xd/0x50
    [  984.031243]  __wait_on_bit+0x6c/0x80
    [  984.031248]  ? free_buffer_head+0x21/0x50
    [  984.031251]  out_of_line_wait_on_bit+0x91/0xb0
    [  984.031257]  ? init_wait_var_entry+0x50/0x50
    [  984.031268]  jbd2_journal_commit_transaction+0x112e/0x19f0 [jbd2]
    [  984.031280]  kjournald2+0xbd/0x270 [jbd2]
    [  984.031284]  ? finish_wait+0x80/0x80
    [  984.031291]  ? commit_timeout+0x10/0x10 [jbd2]
    [  984.031294]  kthread+0x116/0x130
    [  984.031300]  ? kthread_flush_work_fn+0x10/0x10
    [  984.031305]  ret_from_fork+0x1f/0x40
    
    There was a ref count issue when LOGO is received during TMF. This leads to
    one of the I/Os hanging with the driver. Fix the ref count.
    
    Link: https://lore.kernel.org/r/20220117135311.6256-3-njavali@marvell.com
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa7352aa155e19815b41f09f114fe9f110fde4d8
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Jan 17 05:53:09 2022 -0800

    scsi: qedf: Add stag_work to all the vports
    
    [ Upstream commit b70a99fd13282d7885f69bf1372e28b7506a1613 ]
    
    Call trace seen when creating NPIV ports, only 32 out of 64 show online.
    stag work was not initialized for vport, hence initialize the stag work.
    
    WARNING: CPU: 8 PID: 645 at kernel/workqueue.c:1635 __queue_delayed_work+0x68/0x80
    CPU: 8 PID: 645 Comm: kworker/8:1 Kdump: loaded Tainted: G IOE    --------- --
     4.18.0-348.el8.x86_64 #1
    Hardware name: Dell Inc. PowerEdge MX740c/0177V9, BIOS 2.12.2 07/09/2021
    Workqueue: events fc_lport_timeout [libfc]
    RIP: 0010:__queue_delayed_work+0x68/0x80
    Code: 89 b2 88 00 00 00 44 89 82 90 00 00 00 48 01 c8 48 89 42 50 41 81
    f8 00 20 00 00 75 1d e9 60 24 07 00 44 89 c7 e9 98 f6 ff ff <0f> 0b eb
    c5 0f 0b eb a1 0f 0b eb a7 0f 0b eb ac 44 89 c6 e9 40 23
    RSP: 0018:ffffae514bc3be40 EFLAGS: 00010006
    RAX: ffff8d25d6143750 RBX: 0000000000000202 RCX: 0000000000000002
    RDX: ffff8d2e31383748 RSI: ffff8d25c000d600 RDI: ffff8d2e31383788
    RBP: ffff8d2e31380de0 R08: 0000000000002000 R09: ffff8d2e31383750
    R10: ffffffffc0c957e0 R11: ffff8d2624800000 R12: ffff8d2e31380a58
    R13: ffff8d2d915eb000 R14: ffff8d25c499b5c0 R15: ffff8d2e31380e18
    FS:  0000000000000000(0000) GS:ffff8d2d1fb00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000055fd0484b8b8 CR3: 00000008ffc10006 CR4: 00000000007706e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
      queue_delayed_work_on+0x36/0x40
      qedf_elsct_send+0x57/0x60 [qedf]
      fc_lport_enter_flogi+0x90/0xc0 [libfc]
      fc_lport_timeout+0xb7/0x140 [libfc]
      process_one_work+0x1a7/0x360
      ? create_worker+0x1a0/0x1a0
      worker_thread+0x30/0x390
      ? create_worker+0x1a0/0x1a0
      kthread+0x116/0x130
      ? kthread_flush_work_fn+0x10/0x10
      ret_from_fork+0x35/0x40
     ---[ end trace 008f00f722f2c2ff ]--
    
    Initialize stag work for all the vports.
    
    Link: https://lore.kernel.org/r/20220117135311.6256-2-njavali@marvell.com
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 150d448c663d5f01c25aeb31ca62b46525ef5010
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Sun Jan 16 11:06:49 2022 +0800

    scsi: ufs: ufshcd-pltfrm: Check the return value of devm_kstrdup()
    
    [ Upstream commit a65b32748f4566f986ba2495a8236c141fa42a26 ]
    
    devm_kstrdup() returns pointer to allocated string on success, NULL on
    failure. So it is better to check the return value of it.
    
    Link: https://lore.kernel.org/r/tencent_4257E15D4A94FF9020DDCC4BB9B21C041408@qq.com
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7dbda616fc64298cedfb5b6cd52049f8038234fb
Author: ZouMingzhe <mingzhe.zou@easystack.cn>
Date:   Tue Jan 11 13:47:42 2022 +0800

    scsi: target: iscsi: Make sure the np under each tpg is unique
    
    [ Upstream commit a861790afaa8b6369eee8a88c5d5d73f5799c0c6 ]
    
    iscsit_tpg_check_network_portal() has nested for_each loops and is supposed
    to return true when a match is found. However, the tpg loop will still
    continue after existing the tpg_np loop. If this tpg_np is not the last the
    match value will be changed.
    
    Break the outer loop after finding a match and make sure the np under each
    tpg is unique.
    
    Link: https://lore.kernel.org/r/20220111054742.19582-1-mingzhe.zou@easystack.cn
    Signed-off-by: ZouMingzhe <mingzhe.zou@easystack.cn>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67baac10dd5ad1e9f50e8f2659984b3b0728d54e
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Dec 6 11:11:51 2021 +0000

    powerpc/fixmap: Fix VM debug warning on unmap
    
    [ Upstream commit aec982603aa8cc0a21143681feb5f60ecc69d718 ]
    
    Unmapping a fixmap entry is done by calling __set_fixmap()
    with FIXMAP_PAGE_CLEAR as flags.
    
    Today, powerpc __set_fixmap() calls map_kernel_page().
    
    map_kernel_page() is not happy when called a second time
    for the same page.
    
            WARNING: CPU: 0 PID: 1 at arch/powerpc/mm/pgtable.c:194 set_pte_at+0xc/0x1e8
            CPU: 0 PID: 1 Comm: swapper Not tainted 5.16.0-rc3-s3k-dev-01993-g350ff07feb7d-dirty #682
            NIP:  c0017cd4 LR: c00187f0 CTR: 00000010
            REGS: e1011d50 TRAP: 0700   Not tainted  (5.16.0-rc3-s3k-dev-01993-g350ff07feb7d-dirty)
            MSR:  00029032 <EE,ME,IR,DR,RI>  CR: 42000208  XER: 00000000
    
            GPR00: c0165fec e1011e10 c14c0000 c0ee2550 ff800000 c0f3d000 00000000 c001686c
            GPR08: 00001000 b00045a9 00000001 c0f58460 c0f50000 00000000 c0007e10 00000000
            GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
            GPR24: 00000000 00000000 c0ee2550 00000000 c0f57000 00000ff8 00000000 ff800000
            NIP [c0017cd4] set_pte_at+0xc/0x1e8
            LR [c00187f0] map_kernel_page+0x9c/0x100
            Call Trace:
            [e1011e10] [c0736c68] vsnprintf+0x358/0x6c8 (unreliable)
            [e1011e30] [c0165fec] __set_fixmap+0x30/0x44
            [e1011e40] [c0c13bdc] early_iounmap+0x11c/0x170
            [e1011e70] [c0c06cb0] ioremap_legacy_serial_console+0x88/0xc0
            [e1011e90] [c0c03634] do_one_initcall+0x80/0x178
            [e1011ef0] [c0c0385c] kernel_init_freeable+0xb4/0x250
            [e1011f20] [c0007e34] kernel_init+0x24/0x140
            [e1011f30] [c0016268] ret_from_kernel_thread+0x5c/0x64
            Instruction dump:
            7fe3fb78 48019689 80010014 7c630034 83e1000c 5463d97e 7c0803a6 38210010
            4e800020 81250000 712a0001 41820008 <0fe00000> 9421ffe0 93e1001c 48000030
    
    Implement unmap_kernel_page() which clears an existing pte.
    
    Reported-by: Maxime Bizon <mbizon@freebox.fr>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Tested-by: Maxime Bizon <mbizon@freebox.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/b0b752f6f6ecc60653e873f385c6f0dce4e9ab6a.1638789098.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d0eafd459b2cd32c3044043addc4902c5911ffa
Author: Victor Nogueira <victor@mojatatu.com>
Date:   Tue Jan 18 14:19:09 2022 -0300

    net: sched: Clarify error message when qdisc kind is unknown
    
    [ Upstream commit 973bf8fdd12f0e70ea351c018e68edd377a836d1 ]
    
    When adding a tc rule with a qdisc kind that is not supported or not
    compiled into the kernel, the kernel emits the following error: "Error:
    Specified qdisc not found.". Found via tdc testing when ETS qdisc was not
    compiled in and it was not obvious right away what the message meant
    without looking at the kernel code.
    
    Change the error message to be more explicit and say the qdisc kind is
    unknown.
    
    Signed-off-by: Victor Nogueira <victor@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b569faabd2227025a4d0b9b9f18928d79d9d4ad
Author: Raymond Jay Golo <rjgolo@gmail.com>
Date:   Thu Jan 13 08:06:20 2022 +0800

    drm: panel-orientation-quirks: Add quirk for the 1Netbook OneXPlayer
    
    [ Upstream commit d3cbc6e323c9299d10c8d2e4127c77c7d05d07b1 ]
    
    The 1Netbook OneXPlayer uses a panel which has been mounted
    90 degrees rotated. Add a quirk for this.
    
    Signed-off-by: Raymond Jay Golo <rjgolo@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220113000619.90988-1-rjgolo@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d6b9d15ecb48be86d668af52030200469f21b8e
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Dec 15 12:40:29 2021 -0800

    x86/perf: Avoid warning for Arch LBR without XSAVE
    
    [ Upstream commit 8c16dc047b5dd8f7b3bf4584fa75733ea0dde7dc ]
    
    Some hypervisors support Arch LBR, but without the LBR XSAVE support.
    The current Arch LBR init code prints a warning when the xsave size (0) is
    unexpected. Avoid printing the warning for the "no LBR XSAVE" case.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20211215204029.150686-1-ak@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b37dd03f2fc6fa44ea19b0f273db97f00dc2e8d1
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:33 2021 -0500

    NFSv4 handle port presence in fs_location server string
    
    [ Upstream commit a8d54baba7c65db2d3278873def61f8d3753d766 ]
    
    An fs_location attribute returns a string that can be ipv4, ipv6,
    or DNS name. An ip location can have a port appended to it and if
    no port is present a default port needs to be set. If rpc_pton()
    fails to parse, try calling rpc_uaddr2socaddr() that can convert
    an universal address.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f2974b52b15a09cf3fbeb353ccdf2a2b737ca76
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:32 2021 -0500

    NFSv4 expose nfs_parse_server_name function
    
    [ Upstream commit f5b27cc6761e27ee6387a24df1a99ca77b360fea ]
    
    Make nfs_parse_server_name available outside of nfs4namespace.c.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a9c613a29e7ef8e64ede59e89dee9f1d87617ab
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:29 2021 -0500

    NFSv4 remove zero number of fs_locations entries error check
    
    [ Upstream commit 90e12a3191040bd3854d3e236c35921e4e92a044 ]
    
    Remove the check for the zero length fs_locations reply in the
    xdr decoding, and instead check for that in the migration code.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c79aad1186b8a1e70e6fc64dccd4939fc0fbcca
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jan 3 14:50:16 2022 -0500

    NFSv4.1: Fix uninitialised variable in devicenotify
    
    [ Upstream commit b05bf5c63b326ce1da84ef42498d8e0e292e694c ]
    
    When decode_devicenotify_args() exits with no entries, we need to
    ensure that the struct cb_devicenotifyargs is initialised to
    { 0, NULL } in order to avoid problems in
    nfs4_callback_devicenotify().
    
    Reported-by: <rtm@csail.mit.edu>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5619c510f04d7ceaa0136cd5fab9960c3d23b65
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Fri Dec 17 01:01:33 2021 +0800

    nfs: nfs4clinet: check the return value of kstrdup()
    
    [ Upstream commit fbd2057e5329d3502a27491190237b6be52a1cb6 ]
    
    kstrdup() returns NULL when some internal memory errors happen, it is
    better to check the return value of it so to catch the memory error in
    time.
    
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db053bdece3aa812d4da8c3aa2f15560618b9cc4
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Mon Nov 29 15:33:56 2021 -0500

    NFSv4 only print the label when its queried
    
    [ Upstream commit 2c52c8376db7160a1dd8a681c61c9258405ef143 ]
    
    When the bitmask of the attributes doesn't include the security label,
    don't bother printing it. Since the label might not be null terminated,
    adjust the printing format accordingly.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2b4435fd340f95a1424081bff52f25c1eb8ca99
Author: NeilBrown <neilb@suse.de>
Date:   Tue Sep 28 09:47:57 2021 +1000

    NFS: change nfs_access_get_cached to only report the mask
    
    [ Upstream commit b5e7b59c3480f355910f9d2c6ece5857922a5e54 ]
    
    Currently the nfs_access_get_cached family of functions report a
    'struct nfs_access_entry' as the result, with both .mask and .cred set.
    However the .cred is never used.  This is probably good and there is no
    guarantee that it won't be freed before use.
    
    Change to only report the 'mask' - as this is all that is used or needed.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4e0c9bcf142936f9fe43710587d4765152d8139
Author: Tom Zanussi <zanussi@kernel.org>
Date:   Thu Jan 27 15:44:17 2022 -0600

    tracing: Propagate is_signed to expression
    
    commit 097f1eefedeab528cecbd35586dfe293853ffb17 upstream.
    
    During expression parsing, a new expression field is created which
    should inherit the properties of the operands, such as size and
    is_signed.
    
    is_signed propagation was missing, causing spurious errors with signed
    operands.  Add it in parse_expr() and parse_unary() to fix the problem.
    
    Link: https://lkml.kernel.org/r/f4dac08742fd7a0920bf80a73c6c44042f5eaa40.1643319703.git.zanussi@kernel.org
    
    Cc: stable@vger.kernel.org
    Fixes: 100719dcef447 ("tracing: Add simple expression support to hist triggers")
    Reported-by: Yordan Karadzhov <ykaradzhov@vmware.com>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=215513
    Signed-off-by: Tom Zanussi <zanussi@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5234de6c797565815ece9321b1dfe2e6732b5090
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Tue Mar 30 23:33:33 2021 +0800

    drm/amdgpu: Set a suitable dev_info.gart_page_size
    
    commit f4d3da72a76a9ce5f57bba64788931686a9dc333 upstream.
    
    In Mesa, dev_info.gart_page_size is used for alignment and it was
    set to AMDGPU_GPU_PAGE_SIZE(4KB). However, the page table of AMDGPU
    driver requires an alignment on CPU pages.  So, for non-4KB page system,
    gart_page_size should be max_t(u32, PAGE_SIZE, AMDGPU_GPU_PAGE_SIZE).
    
    Signed-off-by: Rui Wang <wangr@lemote.com>
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Link: https://github.com/loongson-community/linux-stable/commit/caa9c0a1
    [Xi: rebased for drm-next, use max_t for checkpatch,
         and reworded commit message.]
    Signed-off-by: Xi Ruoyao <xry111@mengyan1223.wang>
    BugLink: https://gitlab.freedesktop.org/drm/amd/-/issues/1549
    Tested-by: Dan Horák <dan@danny.cz>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    [Salvatore Bonaccorso: Backport to 5.10.y which does not contain
    a5a52a43eac0 ("drm/amd/amdgpu/amdgpu_kms: Remove 'struct
    drm_amdgpu_info_device dev_info' from the stack") which removes dev_info
    from the stack and places it on the heap.]
    Tested-by: Timothy Pearson <tpearson@raptorengineering.com>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6215fb4558938695a63bb3e270ba6c0df9767409
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Feb 4 17:05:24 2022 -0500

    NFSD: Fix offset type in I/O trace points
    
    commit 6a4d333d540041d244b2fca29b8417bfde20af81 upstream.
    
    NFSv3 and NFSv4 use u64 offset values on the wire. Record these values
    verbatim without the implicit type case to loff_t.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a6a2d43e32a363a23e8ef60d57187aefaeef377
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Tue Jan 25 16:36:22 2022 -0500

    NFSD: Clamp WRITE offsets
    
    commit 6260d9a56ab352b54891ec66ab0eced57d55abc6 upstream.
    
    Ensure that a client cannot specify a WRITE range that falls in a
    byte range outside what the kernel's internal types (such as loff_t,
    which is signed) can represent. The kiocb iterators, invoked in
    nfsd_vfs_write(), should properly limit write operations to within
    the underlying file system's s_maxbytes.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c72f7c2ec3d4d53a15de0282c64e1235b12c95eb
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Feb 2 18:52:01 2022 -0500

    NFS: Fix initialisation of nfs_client cl_flags field
    
    commit 468d126dab45718feeb728319be20bd869a5eaa7 upstream.
    
    For some long forgotten reason, the nfs_client cl_flags field is
    initialised in nfs_get_client() instead of being initialised at
    allocation time. This quirk was harmless until we moved the call to
    nfs_create_rpc_client().
    
    Fixes: dd99e9f98fbf ("NFSv4: Initialise connection to the server in nfs4_alloc_client()")
    Cc: stable@vger.kernel.org # 4.8.x
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f47ee3a35ffb5a8534959ec82c7a0dda3f0d3249
Author: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
Date:   Sun Feb 6 00:49:51 2022 +0300

    net: phy: marvell: Fix MDI-x polarity setting in 88e1118-compatible PHYs
    
    commit aec12836e7196e4d360b2cbf20cf7aa5139ad2ec upstream.
    
    When setting up autonegotiation for 88E1118R and compatible PHYs,
    a software reset of PHY is issued before setting up polarity.
    This is incorrect as changes of MDI Crossover Mode bits are
    disruptive to the normal operation and must be followed by a
    software reset to take effect. Let's patch m88e1118_config_aneg()
    to fix the issue mentioned before by invoking software reset
    of the PHY just after setting up MDI-x polarity.
    
    Fixes: 605f196efbf8 ("phy: Add support for Marvell 88E1118 PHY")
    Signed-off-by: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Suggested-by: Andrew Lunn <andrew@lunn.ch>
    Cc: stable@vger.kernel.org
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a33aa711327e907349ead5a2ce9e476f1eae329
Author: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
Date:   Sat Feb 5 23:39:32 2022 +0300

    net: phy: marvell: Fix RGMII Tx/Rx delays setting in 88e1121-compatible PHYs
    
    commit fe4f57bf7b585dca58f1496c4e2481ecbae18126 upstream.
    
    It is mandatory for a software to issue a reset upon modifying RGMII
    Receive Timing Control and RGMII Transmit Timing Control bit fields of MAC
    Specific Control register 2 (page 2, register 21) otherwise the changes
    won't be perceived by the PHY (the same is applicable for a lot of other
    registers). Not setting the RGMII delays on the platforms that imply it'
    being done on the PHY side will consequently cause the traffic loss. We
    discovered that the denoted soft-reset is missing in the
    m88e1121_config_aneg() method for the case if the RGMII delays are
    modified but the MDIx polarity isn't changed or the auto-negotiation is
    left enabled, thus causing the traffic loss on our platform with Marvell
    Alaska 88E1510 installed. Let's fix that by issuing the soft-reset if the
    delays have been actually set in the m88e1121_config_aneg_rgmii_delays()
    method.
    
    Cc: stable@vger.kernel.org
    Fixes: d6ab93364734 ("net: phy: marvell: Avoid unnecessary soft reset")
    Signed-off-by: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Link: https://lore.kernel.org/r/20220205203932.26899-1-Pavel.Parkhomenko@baikalelectronics.ru
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b53d2204ce79b27a878074a77d64f40ec21dbca
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Tue Feb 8 21:00:26 2022 +0100

    can: isotp: fix potential CAN frame reception race in isotp_rcv()
    
    commit 7c759040c1dd03954f650f147ae7175476d51314 upstream.
    
    When receiving a CAN frame the current code logic does not consider
    concurrently receiving processes which do not show up in real world
    usage.
    
    Ziyang Xuan writes:
    
    The following syz problem is one of the scenarios. so->rx.len is
    changed by isotp_rcv_ff() during isotp_rcv_cf(), so->rx.len equals
    0 before alloc_skb() and equals 4096 after alloc_skb(). That will
    trigger skb_over_panic() in skb_put().
    
    =======================================================
    CPU: 1 PID: 19 Comm: ksoftirqd/1 Not tainted 5.16.0-rc8-syzkaller #0
    RIP: 0010:skb_panic+0x16c/0x16e net/core/skbuff.c:113
    Call Trace:
     <TASK>
     skb_over_panic net/core/skbuff.c:118 [inline]
     skb_put.cold+0x24/0x24 net/core/skbuff.c:1990
     isotp_rcv_cf net/can/isotp.c:570 [inline]
     isotp_rcv+0xa38/0x1e30 net/can/isotp.c:668
     deliver net/can/af_can.c:574 [inline]
     can_rcv_filter+0x445/0x8d0 net/can/af_can.c:635
     can_receive+0x31d/0x580 net/can/af_can.c:665
     can_rcv+0x120/0x1c0 net/can/af_can.c:696
     __netif_receive_skb_one_core+0x114/0x180 net/core/dev.c:5465
     __netif_receive_skb+0x24/0x1b0 net/core/dev.c:5579
    
    Therefore we make sure the state changes and data structures stay
    consistent at CAN frame reception time by adding a spin_lock in
    isotp_rcv(). This fixes the issue reported by syzkaller but does not
    affect real world operation.
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://lore.kernel.org/linux-can/d7e69278-d741-c706-65e1-e87623d9a8e8@huawei.com/T/
    Link: https://lore.kernel.org/all/20220208200026.13783-1-socketcan@hartkopp.net
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+4c63f36709a642f801c5@syzkaller.appspotmail.com
    Reported-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9cc027c55bb2d95dd14061d7a7175d497c929b7
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 12 16:31:56 2022 +0800

    mmc: sdhci-of-esdhc: Check for error num after setting mask
    
    commit 40c67c291a93f8846c4a972c9ef1b7ba4544c8d0 upstream.
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    And since the sdhci_setup_host() has already checked the return value of
    the enable_dma, we need not check it in sdhci_resume_host() again.
    
    Fixes: 5552d7ad596c ("mmc: sdhci-of-esdhc: set proper dma mask for ls104x chips")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220112083156.1124782-1-jiasheng@iscas.ac.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8027ba480c00d56b7dcedc8f2810c6a749ed907a
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Feb 1 15:37:10 2022 -0500

    ima: Do not print policy rule with inactive LSM labels
    
    commit 89677197ae709eb1ab3646952c44f6a171c9e74c upstream.
    
    Before printing a policy rule scan for inactive LSM labels in the policy
    rule. Inactive LSM labels are identified by args_p != NULL and
    rule == NULL.
    
    Fixes: 483ec26eed42 ("ima: ima/lsm policy rule loading logic bug fixes")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Cc: <stable@vger.kernel.org> # v5.6+
    Acked-by: Christian Brauner <brauner@kernel.org>
    [zohar@linux.ibm.com: Updated "Fixes" tag]
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8171c8a99feab7d476bcc5c48b87e285bb5650a0
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Mon Jan 31 18:11:39 2022 +0100

    ima: Allow template selection with ima_template[_fmt]= after ima_hash=
    
    commit bb8e52e4906f148c2faf6656b5106cf7233e9301 upstream.
    
    Commit c2426d2ad5027 ("ima: added support for new kernel cmdline parameter
    ima_template_fmt") introduced an additional check on the ima_template
    variable to avoid multiple template selection.
    
    Unfortunately, ima_template could be also set by the setup function of the
    ima_hash= parameter, when it calls ima_template_desc_current(). This causes
    attempts to choose a new template with ima_template= or with
    ima_template_fmt=, after ima_hash=, to be ignored.
    
    Achieve the goal of the commit mentioned with the new static variable
    template_setup_done, so that template selection requests after ima_hash=
    are not ignored.
    
    Finally, call ima_init_template_list(), if not already done, to initialize
    the list of templates before lookup_template_desc() is called.
    
    Reported-by: Guo Zihua <guozihua@huawei.com>
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Cc: stable@vger.kernel.org
    Fixes: c2426d2ad5027 ("ima: added support for new kernel cmdline parameter ima_template_fmt")
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0795b7100d25994080343b8dabb60e903747bf42
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Jan 25 17:46:23 2022 -0500

    ima: Remove ima_policy file before directory
    
    commit f7333b9572d0559e00352a926c92f29f061b4569 upstream.
    
    The removal of ima_dir currently fails since ima_policy still exists, so
    remove the ima_policy file before removing the directory.
    
    Fixes: 4af4662fa4a9 ("integrity: IMA policy")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Acked-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fea2e52000357abe4c2db94e177b72f02b5597f
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Sat Jan 15 09:11:11 2022 +0800

    integrity: check the return value of audit_log_start()
    
    commit 83230351c523b04ff8a029a4bdf97d881ecb96fc upstream.
    
    audit_log_start() returns audit_buffer pointer on success or NULL on
    error, so it is better to check the return value of it.
    
    Fixes: 3323eec921ef ("integrity: IMA as an integrity service provider")
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
