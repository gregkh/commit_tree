commit d36a8d2fb62c7c9415213bea9cf576d8b1f9071f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Aug 9 17:51:49 2019 +0200

    Linux 5.2.8

commit ceb205f829a216497330aa83d59e6aee4c62ecf7
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Jul 3 12:29:31 2019 +0200

    spi: bcm2835: Fix 3-wire mode if DMA is enabled
    
    commit 8d8bef50365847134b51c1ec46786bc2873e4e47 upstream.
    
    Commit 6935224da248 ("spi: bcm2835: enable support of 3-wire mode")
    added 3-wire support to the BCM2835 SPI driver by setting the REN bit
    (Read Enable) in the CS register when receiving data.  The REN bit puts
    the transmitter in high-impedance state.  The driver recognizes that
    data is to be received by checking whether the rx_buf of a transfer is
    non-NULL.
    
    Commit 3ecd37edaa2a ("spi: bcm2835: enable dma modes for transfers
    meeting certain conditions") subsequently broke 3-wire support because
    it set the SPI_MASTER_MUST_RX flag which causes spi_map_msg() to replace
    rx_buf with a dummy buffer if it is NULL.  As a result, rx_buf is
    *always* non-NULL if DMA is enabled.
    
    Reinstate 3-wire support by not only checking whether rx_buf is non-NULL,
    but also checking that it is not the dummy buffer.
    
    Fixes: 3ecd37edaa2a ("spi: bcm2835: enable dma modes for transfers meeting certain conditions")
    Reported-by: Nuno Sá <nuno.sa@analog.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org # v4.2+
    Cc: Martin Sperl <kernel@martin.sperl.org>
    Acked-by: Stefan Wahren <wahrenst@gmx.net>
    Link: https://lore.kernel.org/r/328318841455e505370ef8ecad97b646c033dc8a.1562148527.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a6ed22b78492dedc5517e3a03ef1b9579b42042
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Jul 30 14:52:07 2019 +0200

    Revert "mac80211: set NETIF_F_LLTX when using intermediate tx queues"
    
    commit eef347f846ee8f7296a6f84e3866c057ca6bcce0 upstream.
    
    Revert this for now, it has been reported multiple times that it
    completely breaks connectivity on various devices.
    
    Cc: stable@vger.kernel.org
    Fixes: 8dbb000ee73b ("mac80211: set NETIF_F_LLTX when using intermediate tx queues")
    Reported-by: Jean Delvare <jdelvare@suse.de>
    Reported-by: Peter Lebbing <peter@digitalbrains.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26e046e34a1523629cca8f6457a5477a09d9c3c5
Author: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Date:   Wed Jul 17 15:34:51 2019 -0700

    drm/i915/vbt: Fix VBT parsing for the PSR section
    
    commit 6d61f716a01ec0e134de38ae97e71d6fec5a6ff6 upstream.
    
    A single 32-bit PSR2 training pattern field follows the sixteen element
    array of PSR table entries in the VBT spec. But, we incorrectly define
    this PSR2 field for each of the PSR table entries. As a result, the PSR1
    training pattern duration for any panel_type != 0 will be parsed
    incorrectly. Secondly, PSR2 training pattern durations for VBTs with bdb
    version >= 226 will also be wrong.
    
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: stable@vger.kernel.org
    Cc: stable@vger.kernel.org #v5.2
    Fixes: 88a0d9606aff ("drm/i915/vbt: Parse and use the new field with PSR2 TP2/3 wakeup time")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=111088
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=204183
    Signed-off-by: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Acked-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Tested-by: François Guerraz <kubrick@fgv6.net>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190717223451.2595-1-dhinakaran.pandiyan@intel.com
    (cherry picked from commit b5ea9c9337007d6e700280c8a60b4e10d070fb53)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb930c0055dff9744eed47c4a35514a65529f519
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jul 30 21:25:20 2019 +0200

    compat_ioctl: pppoe: fix PPPOEIOCSFWD handling
    
    [ Upstream commit 055d88242a6046a1ceac3167290f054c72571cd9 ]
    
    Support for handling the PPPOEIOCSFWD ioctl in compat mode was added in
    linux-2.5.69 along with hundreds of other commands, but was always broken
    sincen only the structure is compatible, but the command number is not,
    due to the size being sizeof(size_t), or at first sizeof(sizeof((struct
    sockaddr_pppox)), which is different on 64-bit architectures.
    
    Guillaume Nault adds:
    
      And the implementation was broken until 2016 (see 29e73269aa4d ("pppoe:
      fix reference counting in PPPoE proxy")), and nobody ever noticed. I
      should probably have removed this ioctl entirely instead of fixing it.
      Clearly, it has never been used.
    
    Fix it by adding a compat_ioctl handler for all pppoe variants that
    translates the command number and then calls the regular ioctl function.
    
    All other ioctl commands handled by pppoe are compatible between 32-bit
    and 64-bit, and require compat_ptr() conversion.
    
    This should apply to all stable kernels.
    
    Acked-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ebdb49c68f0a8d5afa26400f29036c5c17d2bd3
Author: Aya Levin <ayal@mellanox.com>
Date:   Sun Jun 16 13:20:29 2019 +0300

    net/mlx5e: Fix matching of speed to PRM link modes
    
    [ Upstream commit 4b95840a6ced0634082f6d962ba9aa0ce797f12f ]
    
    Speed translation is performed based on legacy or extended PTYS
    register. Translate speed with respect to:
    1) Capability bit of extended PTYS table.
    2) User request:
     a) When auto-negotiation is turned on, inspect advertisement whether it
     contains extended link modes.
     b) When auto-negotiation is turned off, speed > 100Gbps (maximal
     speed supported in legacy mode).
    With both conditions fulfilled translation is done with extended PTYS
    table otherwise use legacy PTYS table.
    Without this patch 25/50/100 Gbps speed cannot be set, since try to
    configure in extended mode but read from legacy mode.
    
    Fixes: dd1b9e09c12b ("net/mlx5: ethtool, Allow legacy link-modes configuration via non-extended ptys")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b188e393bf30ecceed36cb38b06c925bd5851f1
Author: Maor Gottlieb <maorg@mellanox.com>
Date:   Sun Jul 14 11:33:07 2019 +0300

    net/mlx5: Add missing RDMA_RX capabilities
    
    [ Upstream commit 987f6c69dd923069d443f6a37225f5b1630a30f2 ]
    
    New flow table type RDMA_RX was added but the MLX5_CAP_FLOW_TABLE_TYPE
    didn't handle this new flow table type.
    This means that MLX5_CAP_FLOW_TABLE_TYPE returns an empty capability to
    this flow table type.
    
    Update both the macro and the maximum supported flow table type to
    RDMA_RX.
    
    Fixes: d83eb50e29de ("net/mlx5: Add support in RDMA RX steering")
    Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d573d5c7935dc1891cfc7f474a56b6dc00722ff1
Author: Petr Machata <petrm@mellanox.com>
Date:   Wed Jul 31 09:33:15 2019 +0300

    mlxsw: spectrum_buffers: Further reduce pool size on Spectrum-2
    
    [ Upstream commit 744ad9a357280d03d567538cee7e1e457dedd481 ]
    
    In commit e891ce1dd2a5 ("mlxsw: spectrum_buffers: Reduce pool size on
    Spectrum-2"), pool size was reduced to mitigate a problem in port buffer
    usage of ports split four ways. It turns out that this work around does not
    solve the issue, and a further reduction is required.
    
    Thus reduce the size of pool 0 by another 2.7 MiB, and round down to the
    whole number of cells.
    
    Fixes: e891ce1dd2a5 ("mlxsw: spectrum_buffers: Reduce pool size on Spectrum-2")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36e4bac39523e104a6d0eb0c685a18581d67f32a
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sun Jul 28 00:37:26 2019 +0100

    rocker: fix memory leaks of fib_work on two error return paths
    
    [ Upstream commit 011f175428d46461f94a65dacb9a416529d08dda ]
    
    Currently there are two error return paths that leak memory allocated
    to fib_work. Fix this by kfree'ing fib_work before returning.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: 19a9d136f198 ("ipv4: Flag fib_info with a fib_nh using IPv6 gateway")
    Fixes: dbcc4fa718ee ("rocker: Fail attempts to use routes with nexthop objects")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fd5ac854f572487adbbc4aff3ffe649bbb17728
Author: Ursula Braun <ubraun@linux.ibm.com>
Date:   Fri Aug 2 10:47:50 2019 +0200

    net/smc: avoid fallback in case of non-blocking connect
    
    [ Upstream commit cd2063604ea6a8c2683b4eb9b5f4c4da74592d87 ]
    
    FASTOPEN is not possible with SMC. sendmsg() with msg_flag MSG_FASTOPEN
    triggers a fallback to TCP if the socket is in state SMC_INIT.
    But if a nonblocking connect is already started, fallback to TCP
    is no longer possible, even though the socket may still be in state
    SMC_INIT.
    And if a nonblocking connect is already started, a listen() call
    does not make sense.
    
    Reported-by: syzbot+bd8cc73d665590a1fcad@syzkaller.appspotmail.com
    Fixes: 50717a37db032 ("net/smc: nonblocking connect rework")
    Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6dd739e2dcec39f4b17e9c29134cceea23fef0b
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Wed Jul 31 23:05:10 2019 +0200

    net: phy: fix race in genphy_update_link
    
    [ Upstream commit aa6b1956158f1afc52761137620d4b3f8a058d24 ]
    
    In phy_start_aneg() autoneg is started, and immediately after that
    link and autoneg status are read. As reported in [0] it can happen that
    at time of this read the PHY has reset the "aneg complete" bit but not
    yet the "link up" bit, what can result in a false link-up detection.
    To fix this don't report link as up if we're in aneg mode and PHY
    doesn't signal "aneg complete".
    
    [0] https://marc.info/?t=156413509900003&r=1&w=2
    
    Fixes: 4950c2ba49cc ("net: phy: fix autoneg mismatch case in genphy_read_status")
    Reported-by: liuyonglong <liuyonglong@huawei.com>
    Tested-by: liuyonglong <liuyonglong@huawei.com>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 987a8b65990bff218e41328012a11c73ff091bc8
Author: Dexuan Cui <decui@microsoft.com>
Date:   Wed Jul 31 01:25:45 2019 +0000

    hv_sock: Fix hang when a connection is closed
    
    [ Upstream commit 8c7885e5690be9a27231ebebf82ef29fbf46c4e4 ]
    
    There is a race condition for an established connection that is being closed
    by the guest: the refcnt is 4 at the end of hvs_release() (Note: here the
    'remove_sock' is false):
    
    1 for the initial value;
    1 for the sk being in the bound list;
    1 for the sk being in the connected list;
    1 for the delayed close_work.
    
    After hvs_release() finishes, __vsock_release() -> sock_put(sk) *may*
    decrease the refcnt to 3.
    
    Concurrently, hvs_close_connection() runs in another thread:
      calls vsock_remove_sock() to decrease the refcnt by 2;
      call sock_put() to decrease the refcnt to 0, and free the sk;
      next, the "release_sock(sk)" may hang due to use-after-free.
    
    In the above, after hvs_release() finishes, if hvs_close_connection() runs
    faster than "__vsock_release() -> sock_put(sk)", then there is not any issue,
    because at the beginning of hvs_close_connection(), the refcnt is still 4.
    
    The issue can be resolved if an extra reference is taken when the
    connection is established.
    
    Fixes: a9eeb998c28d ("hv_sock: Add support for delayed close")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Reviewed-by: Sunil Muthuswamy <sunilmut@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78407cb40864a21b677f9f9b28f62251a4146997
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Thu Aug 1 20:00:31 2019 +0200

    net: fix bpf_xdp_adjust_head regression for generic-XDP
    
    [ Upstream commit 065af355470519bd184019a93ac579f22b036045 ]
    
    When generic-XDP was moved to a later processing step by commit
    458bf2f224f0 ("net: core: support XDP generic on stacked devices.")
    a regression was introduced when using bpf_xdp_adjust_head.
    
    The issue is that after this commit the skb->network_header is now
    changed prior to calling generic XDP and not after. Thus, if the header
    is changed by XDP (via bpf_xdp_adjust_head), then skb->network_header
    also need to be updated again.  Fix by calling skb_reset_network_header().
    
    Fixes: 458bf2f224f0 ("net: core: support XDP generic on stacked devices.")
    Reported-by: Brandon Cazander <brandon.cazander@multapplied.net>
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0e50d6ddf454831f7f7b6aeacd5de3b815e3ecc
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Thu Aug 1 20:00:26 2019 +0200

    selftests/bpf: reduce time to execute test_xdp_vlan.sh
    
    [ Upstream commit 13978d1e73d2fcfb6addcf3392707ad68fa88ccb ]
    
    Given the increasing number of BPF selftests, it makes sense to
    reduce the time to execute these tests.  The ping parameters are
    adjusted to reduce the time from measures 9 sec to approx 2.8 sec.
    
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c0044c1eec3c26f8d0940d568124e14635e3df0
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Thu Aug 1 20:00:21 2019 +0200

    selftests/bpf: add wrapper scripts for test_xdp_vlan.sh
    
    [ Upstream commit d35661fcf95d8818c1f9acc818a1bad23dda4e1c ]
    
    In-order to test both native-XDP (xdpdrv) and generic-XDP (xdpgeneric)
    create two wrapper test scripts, that start the test_xdp_vlan.sh script
    with these modes.
    
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6841c633abaad18f24106e906d2609cea4f8e3cd
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Thu Aug 1 20:00:16 2019 +0200

    bpf: fix XDP vlan selftests test_xdp_vlan.sh
    
    [ Upstream commit 4de9c89a4982431c4a02739743fd360dc5581f22 ]
    
    Change BPF selftest test_xdp_vlan.sh to (default) use generic XDP.
    
    This selftest was created together with a fix for generic XDP, in commit
    297249569932 ("net: fix generic XDP to handle if eth header was
    mangled"). And was suppose to catch if generic XDP was broken again.
    
    The tests are using veth and assumed that veth driver didn't support
    native driver XDP, thus it used the (ip link set) 'xdp' attach that fell
    back to generic-XDP. But veth gained native-XDP support in 948d4f214fde
    ("veth: Add driver XDP"), which caused this test script to use
    native-XDP.
    
    Fixes: 948d4f214fde ("veth: Add driver XDP")
    Fixes: 97396ff0bc2d ("selftests/bpf: add XDP selftests for modifying and popping VLAN headers")
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9c42b1280d3e99e0329acf5e91e087b9a44032f
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sat Jul 27 12:45:10 2019 +0200

    r8169: don't use MSI before RTL8168d
    
    [ Upstream commit 003bd5b4a7b4a94b501e3a1e2e7c9df6b2a94ed4 ]
    
    It was reported that after resuming from suspend network fails with
    error "do_IRQ: 3.38 No irq handler for vector", see [0]. Enabling WoL
    can work around the issue, but the only actual fix is to disable MSI.
    So let's mimic the behavior of the vendor driver and disable MSI on
    all chip versions before RTL8168d.
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=204079
    
    Fixes: 6c6aa15fdea5 ("r8169: improve interrupt handling")
    Reported-by: Dušan Dragić <dragic.dusan@gmail.com>
    Tested-by: Dušan Dragić <dragic.dusan@gmail.com>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c8eb11fd3729e6f3b6763eafc88098989b6280d
Author: Ariel Levkovich <lariel@mellanox.com>
Date:   Sat Jul 6 18:06:15 2019 +0300

    net/mlx5e: Prevent encap flow counter update async to user query
    
    [ Upstream commit 90bb769291161cf25a818d69cf608c181654473e ]
    
    This patch prevents a race between user invoked cached counters
    query and a neighbor last usage updater.
    
    The cached flow counter stats can be queried by calling
    "mlx5_fc_query_cached" which provides the number of bytes and
    packets that passed via this flow since the last time this counter
    was queried.
    It does so by reducting the last saved stats from the current, cached
    stats and then updating the last saved stats with the cached stats.
    It also provide the lastuse value for that flow.
    
    Since "mlx5e_tc_update_neigh_used_value" needs to retrieve the
    last usage time of encapsulation flows, it calls the flow counter
    query method periodically and async to user queries of the flow counter
    using cls_flower.
    This call is causing the driver to update the last reported bytes and
    packets from the cache and therefore, future user queries of the flow
    stats will return lower than expected number for bytes and packets
    since the last saved stats in the driver was updated async to the last
    saved stats in cls_flower.
    
    This causes wrong stats presentation of encapsulation flows to user.
    
    Since the neighbor usage updater only needs the lastuse stats from the
    cached counter, the fix is to use a dedicated lastuse query call that
    returns the lastuse value without synching between the cached stats and
    the last saved stats.
    
    Fixes: f6dfb4c3f216 ("net/mlx5e: Update neighbour 'used' state using HW flow rules counters")
    Signed-off-by: Ariel Levkovich <lariel@mellanox.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 901092bf0afb955bb667eaf9cf8dbb5fbb95c51a
Author: Edward Srouji <edwards@mellanox.com>
Date:   Tue Jul 23 10:12:55 2019 +0300

    net/mlx5: Fix modify_cq_in alignment
    
    [ Upstream commit 7a32f2962c56d9d8a836b4469855caeee8766bd4 ]
    
    Fix modify_cq_in alignment to match the device specification.
    After this fix the 'cq_umem_valid' field will be in the right offset.
    
    Cc: <stable@vger.kernel.org> # 4.19
    Fixes: bd37197554eb ("net/mlx5: Update mlx5_ifc with DEVX UID bits")
    Signed-off-by: Edward Srouji <edwards@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b3d0b24b5d830a9eddc1bb5bcefd6c336cb3ecb
Author: Alexis Bauvin <abauvin@scaleway.com>
Date:   Tue Jul 23 16:23:01 2019 +0200

    tun: mark small packets as owned by the tap sock
    
    [ Upstream commit 4b663366246be1d1d4b1b8b01245b2e88ad9e706 ]
    
    - v1 -> v2: Move skb_set_owner_w to __tun_build_skb to reduce patch size
    
    Small packets going out of a tap device go through an optimized code
    path that uses build_skb() rather than sock_alloc_send_pskb(). The
    latter calls skb_set_owner_w(), but the small packet code path does not.
    
    The net effect is that small packets are not owned by the userland
    application's socket (e.g. QEMU), while large packets are.
    This can be seen with a TCP session, where packets are not owned when
    the window size is small enough (around PAGE_SIZE), while they are once
    the window grows (note that this requires the host to support virtio
    tso for the guest to offload segmentation).
    All this leads to inconsistent behaviour in the kernel, especially on
    netfilter modules that uses sk->socket (e.g. xt_owner).
    
    Fixes: 66ccbc9c87c2 ("tap: use build_skb() for small packet")
    Signed-off-by: Alexis Bauvin <abauvin@scaleway.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5a0a7f99a948327eedad8f5e307d8566e581751
Author: Jon Maloy <jon.maloy@ericsson.com>
Date:   Tue Jul 30 20:19:10 2019 +0200

    tipc: fix unitilized skb list crash
    
    [ Upstream commit 2948a1fcd77a8bb11604387e3fc52f0ebf5729e9 ]
    
    Our test suite somtimes provokes the following crash:
    
    Description of problem:
    [ 1092.597234] BUG: unable to handle kernel NULL pointer dereference at 00000000000000e8
    [ 1092.605072] PGD 0 P4D 0
    [ 1092.607620] Oops: 0000 [#1] SMP PTI
    [ 1092.611118] CPU: 37 PID: 0 Comm: swapper/37 Kdump: loaded Not tainted 4.18.0-122.el8.x86_64 #1
    [ 1092.619724] Hardware name: Dell Inc. PowerEdge R740/08D89F, BIOS 1.3.7 02/08/2018
    [ 1092.627215] RIP: 0010:tipc_mcast_filter_msg+0x93/0x2d0 [tipc]
    [ 1092.632955] Code: 0f 84 aa 01 00 00 89 cf 4d 01 ca 4c 8b 26 c1 ef 19 83 e7 0f 83 ff 0c 4d 0f 45 d1 41 8b 6a 10 0f cd 4c 39 e6 0f 84 81 01 00 00 <4d> 8b 9c 24 e8 00 00 00 45 8b 13 41 0f ca 44 89 d7 c1 ef 13 83 e7
    [ 1092.651703] RSP: 0018:ffff929e5fa83a18 EFLAGS: 00010282
    [ 1092.656927] RAX: ffff929e3fb38100 RBX: 00000000069f29ee RCX: 00000000416c0045
    [ 1092.664058] RDX: ffff929e5fa83a88 RSI: ffff929e31a28420 RDI: 0000000000000000
    [ 1092.671209] RBP: 0000000029b11821 R08: 0000000000000000 R09: ffff929e39b4407a
    [ 1092.678343] R10: ffff929e39b4407a R11: 0000000000000007 R12: 0000000000000000
    [ 1092.685475] R13: 0000000000000001 R14: ffff929e3fb38100 R15: ffff929e39b4407a
    [ 1092.692614] FS:  0000000000000000(0000) GS:ffff929e5fa80000(0000) knlGS:0000000000000000
    [ 1092.700702] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1092.706447] CR2: 00000000000000e8 CR3: 000000031300a004 CR4: 00000000007606e0
    [ 1092.713579] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 1092.720712] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 1092.727843] PKRU: 55555554
    [ 1092.730556] Call Trace:
    [ 1092.733010]  <IRQ>
    [ 1092.735034]  tipc_sk_filter_rcv+0x7ca/0xb80 [tipc]
    [ 1092.739828]  ? __kmalloc_node_track_caller+0x1cb/0x290
    [ 1092.744974]  ? dev_hard_start_xmit+0xa5/0x210
    [ 1092.749332]  tipc_sk_rcv+0x389/0x640 [tipc]
    [ 1092.753519]  tipc_sk_mcast_rcv+0x23c/0x3a0 [tipc]
    [ 1092.758224]  tipc_rcv+0x57a/0xf20 [tipc]
    [ 1092.762154]  ? ktime_get_real_ts64+0x40/0xe0
    [ 1092.766432]  ? tpacket_rcv+0x50/0x9f0
    [ 1092.770098]  tipc_l2_rcv_msg+0x4a/0x70 [tipc]
    [ 1092.774452]  __netif_receive_skb_core+0xb62/0xbd0
    [ 1092.779164]  ? enqueue_entity+0xf6/0x630
    [ 1092.783084]  ? kmem_cache_alloc+0x158/0x1c0
    [ 1092.787272]  ? __build_skb+0x25/0xd0
    [ 1092.790849]  netif_receive_skb_internal+0x42/0xf0
    [ 1092.795557]  napi_gro_receive+0xba/0xe0
    [ 1092.799417]  mlx5e_handle_rx_cqe+0x83/0xd0 [mlx5_core]
    [ 1092.804564]  mlx5e_poll_rx_cq+0xd5/0x920 [mlx5_core]
    [ 1092.809536]  mlx5e_napi_poll+0xb2/0xce0 [mlx5_core]
    [ 1092.814415]  ? __wake_up_common_lock+0x89/0xc0
    [ 1092.818861]  net_rx_action+0x149/0x3b0
    [ 1092.822616]  __do_softirq+0xe3/0x30a
    [ 1092.826193]  irq_exit+0x100/0x110
    [ 1092.829512]  do_IRQ+0x85/0xd0
    [ 1092.832483]  common_interrupt+0xf/0xf
    [ 1092.836147]  </IRQ>
    [ 1092.838255] RIP: 0010:cpuidle_enter_state+0xb7/0x2a0
    [ 1092.843221] Code: e8 3e 79 a5 ff 80 7c 24 03 00 74 17 9c 58 0f 1f 44 00 00 f6 c4 02 0f 85 d7 01 00 00 31 ff e8 a0 6b ab ff fb 66 0f 1f 44 00 00 <48> b8 ff ff ff ff f3 01 00 00 4c 29 f3 ba ff ff ff 7f 48 39 c3 7f
    [ 1092.861967] RSP: 0018:ffffaa5ec6533e98 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffdd
    [ 1092.869530] RAX: ffff929e5faa3100 RBX: 000000fe63dd2092 RCX: 000000000000001f
    [ 1092.876665] RDX: 000000fe63dd2092 RSI: 000000003a518aaa RDI: 0000000000000000
    [ 1092.883795] RBP: 0000000000000003 R08: 0000000000000004 R09: 0000000000022940
    [ 1092.890929] R10: 0000040cb0666b56 R11: ffff929e5faa20a8 R12: ffff929e5faade78
    [ 1092.898060] R13: ffffffffb59258f8 R14: 000000fe60f3228d R15: 0000000000000000
    [ 1092.905196]  ? cpuidle_enter_state+0x92/0x2a0
    [ 1092.909555]  do_idle+0x236/0x280
    [ 1092.912785]  cpu_startup_entry+0x6f/0x80
    [ 1092.916715]  start_secondary+0x1a7/0x200
    [ 1092.920642]  secondary_startup_64+0xb7/0xc0
    [...]
    
    The reason is that the skb list tipc_socket::mc_method.deferredq only
    is initialized for connectionless sockets, while nothing stops arriving
    multicast messages from being filtered by connection oriented sockets,
    with subsequent access to the said list.
    
    We fix this by initializing the list unconditionally at socket creation.
    This eliminates the crash, while the message still is dropped further
    down in tipc_sk_filter_rcv() as it should be.
    
    Reported-by: Li Shuang <shuali@redhat.com>
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afbd10a472fac1aa46ac1ed536cd195961478f02
Author: Taras Kondratiuk <takondra@cisco.com>
Date:   Mon Jul 29 22:15:07 2019 +0000

    tipc: compat: allow tipc commands without arguments
    
    [ Upstream commit 4da5f0018eef4c0de31675b670c80e82e13e99d1 ]
    
    Commit 2753ca5d9009 ("tipc: fix uninit-value in tipc_nl_compat_doit")
    broke older tipc tools that use compat interface (e.g. tipc-config from
    tipcutils package):
    
    % tipc-config -p
    operation not supported
    
    The commit started to reject TIPC netlink compat messages that do not
    have attributes. It is too restrictive because some of such messages are
    valid (they don't need any arguments):
    
    % grep 'tx none' include/uapi/linux/tipc_config.h
    #define  TIPC_CMD_NOOP              0x0000    /* tx none, rx none */
    #define  TIPC_CMD_GET_MEDIA_NAMES   0x0002    /* tx none, rx media_name(s) */
    #define  TIPC_CMD_GET_BEARER_NAMES  0x0003    /* tx none, rx bearer_name(s) */
    #define  TIPC_CMD_SHOW_PORTS        0x0006    /* tx none, rx ultra_string */
    #define  TIPC_CMD_GET_REMOTE_MNG    0x4003    /* tx none, rx unsigned */
    #define  TIPC_CMD_GET_MAX_PORTS     0x4004    /* tx none, rx unsigned */
    #define  TIPC_CMD_GET_NETID         0x400B    /* tx none, rx unsigned */
    #define  TIPC_CMD_NOT_NET_ADMIN     0xC001    /* tx none, rx none */
    
    This patch relaxes the original fix and rejects messages without
    arguments only if such arguments are expected by a command (reg_type is
    non zero).
    
    Fixes: 2753ca5d9009 ("tipc: fix uninit-value in tipc_nl_compat_doit")
    Cc: stable@vger.kernel.org
    Signed-off-by: Taras Kondratiuk <takondra@cisco.com>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dc83212e7af41cd87adfe8de3571fec8ca3edec
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Thu Jul 25 16:33:18 2019 +0300

    ocelot: Cancel delayed work before wq destruction
    
    [ Upstream commit c5d139697d5d9ecf9c7cd92d7d7838a173508900 ]
    
    Make sure the delayed work for stats update is not pending before
    wq destruction.
    This fixes the module unload path.
    The issue is there since day 1.
    
    Fixes: a556c76adc05 ("net: mscc: Add initial Ocelot switch support")
    
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Reviewed-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecda6f3769f9bd273504da81b0108df85afcb7d8
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 5 12:00:55 2019 +0200

    NFC: nfcmrvl: fix gpio-handling regression
    
    [ Upstream commit c3953a3c2d3175d2f9f0304c9a1ba89e7743c5e4 ]
    
    Fix two reset-gpio sanity checks which were never converted to use
    gpio_is_valid(), and make sure to use -EINVAL to indicate a missing
    reset line also for the UART-driver module parameter and for the USB
    driver.
    
    This specifically prevents the UART and USB drivers from incidentally
    trying to request and use gpio 0, and also avoids triggering a WARN() in
    gpio_to_desc() during probe when no valid reset line has been specified.
    
    Fixes: e33a3f84f88f ("NFC: nfcmrvl: allow gpio 0 for reset signalling")
    Reported-by: syzbot+cf35b76f35e068a1107f@syzkaller.appspotmail.com
    Tested-by: syzbot+cf35b76f35e068a1107f@syzkaller.appspotmail.com
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b28c977b32b1a363d3dece84734f08c945626ac4
Author: Frode Isaksen <fisaksen@baylibre.com>
Date:   Tue Jul 30 13:38:14 2019 +0200

    net: stmmac: Use netif_tx_napi_add() for TX polling function
    
    [ Upstream commit 4d97972b45f080db4c6d27cc0b54321d9cd7be17 ]
    
    This variant of netif_napi_add() should be used from drivers
    using NAPI to exclusively poll a TX queue.
    
    Signed-off-by: Frode Isaksen <fisaksen@baylibre.com>
    Tested-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dd3469363c73f6e5d3c47361c5254a88471724c
Author: Ursula Braun <ubraun@linux.ibm.com>
Date:   Fri Aug 2 10:16:38 2019 +0200

    net/smc: do not schedule tx_work in SMC_CLOSED state
    
    [ Upstream commit f9cedf1a9b1cdcfb0c52edb391d01771e43994a4 ]
    
    The setsockopts options TCP_NODELAY and TCP_CORK may schedule the
    tx worker. Make sure the socket is not yet moved into SMC_CLOSED
    state (for instance by a shutdown SHUT_RDWR call).
    
    Reported-by: syzbot+92209502e7aab127c75f@syzkaller.appspotmail.com
    Reported-by: syzbot+b972214bb803a343f4fe@syzkaller.appspotmail.com
    Fixes: 01d2f7e2cdd31 ("net/smc: sockopts TCP_NODELAY and TCP_CORK")
    Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22d487d30a6580cedd98a99a1ecfc755a19d481f
Author: Dmytro Linkin <dmitrolin@mellanox.com>
Date:   Thu Aug 1 13:02:51 2019 +0000

    net: sched: use temporary variable for actions indexes
    
    [ Upstream commit 7be8ef2cdbfe41a2e524b7c6cc3f8e6cfaa906e4 ]
    
    Currently init call of all actions (except ipt) init their 'parm'
    structure as a direct pointer to nla data in skb. This leads to race
    condition when some of the filter actions were initialized successfully
    (and were assigned with idr action index that was written directly
    into nla data), but then were deleted and retried (due to following
    action module missing or classifier-initiated retry), in which case
    action init code tries to insert action to idr with index that was
    assigned on previous iteration. During retry the index can be reused
    by another action that was inserted concurrently, which causes
    unintended action sharing between filters.
    To fix described race condition, save action idr index to temporary
    stack-allocated variable instead on nla data.
    
    Fixes: 0190c1d452a9 ("net: sched: atomically check-allocate action")
    Signed-off-by: Dmytro Linkin <dmitrolin@mellanox.com>
    Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f08d8c217a04b5dc83925a5dffe2410a5807ae3a
Author: Roman Mashak <mrv@mojatatu.com>
Date:   Fri Aug 2 15:16:46 2019 -0400

    net sched: update vlan action for batched events operations
    
    [ Upstream commit b35475c5491a14c8ce7a5046ef7bcda8a860581a ]
    
    Add get_fill_size() routine used to calculate the action size
    when building a batch of events.
    
    Fixes: c7e2b9689 ("sched: introduce vlan action")
    Signed-off-by: Roman Mashak <mrv@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a735cc5fbec67f8a21dd6b8ad935c488f4ad02a9
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Mon Jul 29 16:24:33 2019 +0800

    net: sched: Fix a possible null-pointer dereference in dequeue_func()
    
    [ Upstream commit 051c7b39be4a91f6b7d8c4548444e4b850f1f56c ]
    
    In dequeue_func(), there is an if statement on line 74 to check whether
    skb is NULL:
        if (skb)
    
    When skb is NULL, it is used on line 77:
        prefetch(&skb->end);
    
    Thus, a possible null-pointer dereference may occur.
    
    To fix this bug, skb->end is used when skb is not NULL.
    
    This bug is found by a static analysis tool STCheck written by us.
    
    Fixes: 76e3cc126bb2 ("codel: Controlled Delay AQM")
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3c26a6a67c2078956d4d244afb9d6d8685455d5
Author: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
Date:   Thu Jul 25 12:07:12 2019 -0600

    net: qualcomm: rmnet: Fix incorrect UL checksum offload logic
    
    [ Upstream commit a7cf3d24ee6081930feb4c830a7f6f16ebe31c49 ]
    
    The udp_ip4_ind bit is set only for IPv4 UDP non-fragmented packets
    so that the hardware can flip the checksum to 0xFFFF if the computed
    checksum is 0 per RFC768.
    
    However, this bit had to be set for IPv6 UDP non fragmented packets
    as well per hardware requirements. Otherwise, IPv6 UDP packets
    with computed checksum as 0 were transmitted by hardware and were
    dropped in the network.
    
    In addition to setting this bit for IPv6 UDP, the field is also
    appropriately renamed to udp_ind as part of this change.
    
    Fixes: 5eb5f8608ef1 ("net: qualcomm: rmnet: Add support for TX checksum offload")
    Cc: Sean Tranchetti <stranche@codeaurora.org>
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e9ff18e8ed450a499f31a5cf71cd2d83716c27a
Author: Andreas Schwab <schwab@suse.de>
Date:   Wed Jul 24 17:32:57 2019 +0200

    net: phy: mscc: initialize stats array
    
    [ Upstream commit f972037e71246c5e0916eef835174d58ffc517e4 ]
    
    The memory allocated for the stats array may contain arbitrary data.
    
    Fixes: e4f9ba642f0b ("net: phy: mscc: add support for VSC8514 PHY.")
    Fixes: 00d70d8e0e78 ("net: phy: mscc: add support for VSC8574 PHY")
    Fixes: a5afc1678044 ("net: phy: mscc: add support for VSC8584 PHY")
    Fixes: f76178dc5218 ("net: phy: mscc: add ethtool statistics counters")
    Signed-off-by: Andreas Schwab <schwab@suse.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 967b6c5d445d9bd99ee1960243af421fac206fca
Author: René van Dorst <opensource@vdorst.com>
Date:   Sat Jul 27 11:40:11 2019 +0200

    net: phylink: Fix flow control for fixed-link
    
    [ Upstream commit 8aace4f3eba2a3ceb431e18683ea0e1ecbade5cd ]
    
    In phylink_parse_fixedlink() the pl->link_config.advertising bits are AND
    with pl->supported, pl->supported is zeroed and only the speed/duplex
    modes and MII bits are set.
    So pl->link_config.advertising always loses the flow control/pause bits.
    
    By setting Pause and Asym_Pause bits in pl->supported, the flow control
    work again when devicetree "pause" is set in fixes-link node and the MAC
    advertise that is supports pause.
    
    Results with this patch.
    
    Legend:
    - DT = 'Pause' is set in the fixed-link in devicetree.
    - validate() = ‘Yes’ means phylink_set(mask, Pause) is set in the
      validate().
    - flow = results reported my link is Up line.
    
    +-----+------------+-------+
    | DT  | validate() | flow  |
    +-----+------------+-------+
    | Yes | Yes        | rx/tx |
    | No  | Yes        | off   |
    | Yes | No         | off   |
    +-----+------------+-------+
    
    Fixes: 9525ae83959b ("phylink: add phylink infrastructure")
    Signed-off-by: René van Dorst <opensource@vdorst.com>
    Acked-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46cceb125fdbf40605c73442128eeb41cdfc28d8
Author: Arseny Solokha <asolokha@kb.kras.ru>
Date:   Wed Jul 24 20:31:39 2019 +0700

    net: phylink: don't start and stop SGMII PHYs in SFP modules twice
    
    [ Upstream commit c7fa7f567cab6532be285a5df104617d80bce245 ]
    
    SFP modules connected using the SGMII interface have their own PHYs which
    are handled by the struct phylink's phydev field. On the other hand, for
    the modules connected using 1000Base-X interface that field is not set.
    
    Since commit ce0aa27ff3f6 ("sfp: add sfp-bus to bridge between network
    devices and sfp cages") phylink_start() ends up setting the phydev field
    using the sfp-bus infrastructure, which eventually calls phy_start() on it,
    and then calling phy_start() again on the same phydev from phylink_start()
    itself. Similar call sequence holds for phylink_stop(), only in the reverse
    order. This results in WARNs during network interface bringup and shutdown
    when a copper SFP module is connected, as phy_start() and phy_stop() are
    called twice in a row for the same phy_device:
    
      % ip link set up dev eth0
      ------------[ cut here ]------------
      called from state UP
      WARNING: CPU: 1 PID: 155 at drivers/net/phy/phy.c:895 phy_start+0x74/0xc0
      Modules linked in:
      CPU: 1 PID: 155 Comm: backend Not tainted 5.2.0+ #1
      NIP:  c0227bf0 LR: c0227bf0 CTR: c004d224
      REGS: df547720 TRAP: 0700   Not tainted  (5.2.0+)
      MSR:  00029000 <CE,EE,ME>  CR: 24002822  XER: 00000000
    
      GPR00: c0227bf0 df5477d8 df5d7080 00000014 df9d2370 df9d5ac4 1f4eb000 00000001
      GPR08: c061fe58 00000000 00000000 df5477d8 0000003c 100c8768 00000000 00000000
      GPR16: df486a00 c046f1c8 c046eea0 00000000 c046e904 c0239604 db68449c 00000000
      GPR24: e9083204 00000000 00000001 db684460 e9083404 00000000 db6dce00 db6dcc00
      NIP [c0227bf0] phy_start+0x74/0xc0
      LR [c0227bf0] phy_start+0x74/0xc0
      Call Trace:
      [df5477d8] [c0227bf0] phy_start+0x74/0xc0 (unreliable)
      [df5477e8] [c023cad0] startup_gfar+0x398/0x3f4
      [df547828] [c023cf08] gfar_enet_open+0x364/0x374
      [df547898] [c029d870] __dev_open+0xe4/0x140
      [df5478c8] [c029db70] __dev_change_flags+0xf0/0x188
      [df5478f8] [c029dc28] dev_change_flags+0x20/0x54
      [df547918] [c02ae304] do_setlink+0x310/0x818
      [df547a08] [c02b1eb8] __rtnl_newlink+0x384/0x6b0
      [df547c28] [c02b222c] rtnl_newlink+0x48/0x68
      [df547c48] [c02ad7c8] rtnetlink_rcv_msg+0x240/0x27c
      [df547c98] [c02cc068] netlink_rcv_skb+0x8c/0xf0
      [df547cd8] [c02cba3c] netlink_unicast+0x114/0x19c
      [df547d08] [c02cbd74] netlink_sendmsg+0x2b0/0x2c0
      [df547d58] [c027b668] sock_sendmsg_nosec+0x20/0x40
      [df547d68] [c027d080] ___sys_sendmsg+0x17c/0x1dc
      [df547e98] [c027df7c] __sys_sendmsg+0x68/0x84
      [df547ef8] [c027e430] sys_socketcall+0x1a0/0x204
      [df547f38] [c000d1d8] ret_from_syscall+0x0/0x38
      --- interrupt: c01 at 0xfd4e030
          LR = 0xfd4e010
      Instruction dump:
      813f0188 38800000 2b890005 419d0014 3d40c046 5529103a 394aa208 7c8a482e
      3c60c046 3863a1b8 4cc63182 4be009a1 <0fe00000> 48000030 3c60c046 3863a1d0
      ---[ end trace d4c095aeaf6ea998 ]---
    
    and
    
      % ip link set down dev eth0
      ------------[ cut here ]------------
      called from state HALTED
      WARNING: CPU: 1 PID: 184 at drivers/net/phy/phy.c:858 phy_stop+0x3c/0x88
    
      <...>
    
      Call Trace:
      [df581788] [c0228450] phy_stop+0x3c/0x88 (unreliable)
      [df581798] [c022d548] sfp_sm_phy_detach+0x1c/0x44
      [df5817a8] [c022e8cc] sfp_sm_event+0x4b0/0x87c
      [df581848] [c022f04c] sfp_upstream_stop+0x34/0x44
      [df581858] [c0225608] phylink_stop+0x7c/0xe4
      [df581868] [c023c57c] stop_gfar+0x7c/0x94
      [df581888] [c023c5b8] gfar_close+0x24/0x94
      [df5818a8] [c0298688] __dev_close_many+0xdc/0xf8
      [df5818c8] [c029db58] __dev_change_flags+0xd8/0x188
      [df5818f8] [c029dc28] dev_change_flags+0x20/0x54
      [df581918] [c02ae304] do_setlink+0x310/0x818
      [df581a08] [c02b1eb8] __rtnl_newlink+0x384/0x6b0
      [df581c28] [c02b222c] rtnl_newlink+0x48/0x68
      [df581c48] [c02ad7c8] rtnetlink_rcv_msg+0x240/0x27c
      [df581c98] [c02cc068] netlink_rcv_skb+0x8c/0xf0
      [df581cd8] [c02cba3c] netlink_unicast+0x114/0x19c
      [df581d08] [c02cbd74] netlink_sendmsg+0x2b0/0x2c0
      [df581d58] [c027b668] sock_sendmsg_nosec+0x20/0x40
      [df581d68] [c027d080] ___sys_sendmsg+0x17c/0x1dc
      [df581e98] [c027df7c] __sys_sendmsg+0x68/0x84
      [df581ef8] [c027e430] sys_socketcall+0x1a0/0x204
      [df581f38] [c000d1d8] ret_from_syscall+0x0/0x38
    
      <...>
    
      ---[ end trace d4c095aeaf6ea999 ]---
    
    SFP modules with the 1000Base-X interface are not affected.
    
    Place explicit calls to phy_start() and phy_stop() before enabling or after
    disabling an attached SFP module, where phydev is not yet set (or is
    already unset), so they will be made only from the inside of sfp-bus, if
    needed.
    
    Fixes: 217962615662 ("net: phy: warn if phy_start is called from invalid state")
    Signed-off-by: Arseny Solokha <asolokha@kb.kras.ru>
    Acked-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed1622025ea5638cbabed7d3da10b6dd6f4dac2b
Author: Hubert Feurstein <h.feurstein@gmail.com>
Date:   Tue Jul 30 11:46:23 2019 +0200

    net: phy: fixed_phy: print gpio error only if gpio node is present
    
    [ Upstream commit ab98c008ac761752cdc27f9eb053419feadeb2f7 ]
    
    It is perfectly ok to not have an gpio attached to the fixed-link node. So
    the driver should not throw an error message when the gpio is missing.
    
    Fixes: 5468e82f7034 ("net: phy: fixed-phy: Drop GPIO from fixed_phy_add()")
    Signed-off-by: Hubert Feurstein <h.feurstein@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f0196ed598c2fca1be420f181161b000792120
Author: Mark Zhang <markz@mellanox.com>
Date:   Tue Jul 9 05:37:12 2019 +0300

    net/mlx5: Use reversed order when unregister devices
    
    [ Upstream commit 08aa5e7da6bce1a1963f63cf32c2e7ad434ad578 ]
    
    When lag is active, which is controlled by the bonded mlx5e netdev, mlx5
    interface unregestering must happen in the reverse order where rdma is
    unregistered (unloaded) first, to guarantee all references to the lag
    context in hardware is removed, then remove mlx5e netdev interface which
    will cleanup the lag context from hardware.
    
    Without this fix during destroy of LAG interface, we observed following
    errors:
     * mlx5_cmd_check:752:(pid 12556): DESTROY_LAG(0x843) op_mod(0x0) failed,
       status bad parameter(0x3), syndrome (0xe4ac33)
     * mlx5_cmd_check:752:(pid 12556): DESTROY_LAG(0x843) op_mod(0x0) failed,
       status bad parameter(0x3), syndrome (0xa5aee8).
    
    Fixes: a31208b1e11d ("net/mlx5_core: New init and exit flow for mlx5_core")
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Mark Zhang <markz@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01c0a4707a8cd9dc5b0b1d597e40d007ca82c36a
Author: Qian Cai <cai@lca.pw>
Date:   Thu Aug 1 09:52:54 2019 -0400

    net/mlx5e: always initialize frag->last_in_page
    
    [ Upstream commit 60d60c8fbd8d1acf25b041ecd72ae4fa16e9405b ]
    
    The commit 069d11465a80 ("net/mlx5e: RX, Enhance legacy Receive Queue
    memory scheme") introduced an undefined behaviour below due to
    "frag->last_in_page" is only initialized in mlx5e_init_frags_partition()
    when,
    
    if (next_frag.offset + frag_info[f].frag_stride > PAGE_SIZE)
    
    or after bailed out the loop,
    
    for (i = 0; i < mlx5_wq_cyc_get_size(&rq->wqe.wq); i++)
    
    As the result, there could be some "frag" have uninitialized
    value of "last_in_page".
    
    Later, get_frag() obtains those "frag" and check "frag->last_in_page" in
    mlx5e_put_rx_frag() and triggers the error during boot. Fix it by always
    initializing "frag->last_in_page" to "false" in
    mlx5e_init_frags_partition().
    
    UBSAN: Undefined behaviour in
    drivers/net/ethernet/mellanox/mlx5/core/en_rx.c:325:12
    load of value 170 is not a valid value for type 'bool' (aka '_Bool')
    Call trace:
     dump_backtrace+0x0/0x264
     show_stack+0x20/0x2c
     dump_stack+0xb0/0x104
     __ubsan_handle_load_invalid_value+0x104/0x128
     mlx5e_handle_rx_cqe+0x8e8/0x12cc [mlx5_core]
     mlx5e_poll_rx_cq+0xca8/0x1a94 [mlx5_core]
     mlx5e_napi_poll+0x17c/0xa30 [mlx5_core]
     net_rx_action+0x248/0x940
     __do_softirq+0x350/0x7b8
     irq_exit+0x200/0x26c
     __handle_domain_irq+0xc8/0x128
     gic_handle_irq+0x138/0x228
     el1_irq+0xb8/0x140
     arch_cpu_idle+0x1a4/0x348
     do_idle+0x114/0x1b0
     cpu_startup_entry+0x24/0x28
     rest_init+0x1ac/0x1dc
     arch_call_rest_init+0x10/0x18
     start_kernel+0x4d4/0x57c
    
    Fixes: 069d11465a80 ("net/mlx5e: RX, Enhance legacy Receive Queue memory scheme")
    Signed-off-by: Qian Cai <cai@lca.pw>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abf0c1014c94a6bada7723fa08047ff86f9f0796
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Sun Jul 28 14:56:36 2019 +0200

    net: fix ifindex collision during namespace removal
    
    [ Upstream commit 55b40dbf0e76b4bfb9d8b3a16a0208640a9a45df ]
    
    Commit aca51397d014 ("netns: Fix arbitrary net_device-s corruptions
    on net_ns stop.") introduced a possibility to hit a BUG in case device
    is returning back to init_net and two following conditions are met:
    1) dev->ifindex value is used in a name of another "dev%d"
       device in init_net.
    2) dev->name is used by another device in init_net.
    
    Under real life circumstances this is hard to get. Therefore this has
    been present happily for over 10 years. To reproduce:
    
    $ ip a
    1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
        link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
        inet 127.0.0.1/8 scope host lo
           valid_lft forever preferred_lft forever
        inet6 ::1/128 scope host
           valid_lft forever preferred_lft forever
    2: dummy0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 86:89:3f:86:61:29 brd ff:ff:ff:ff:ff:ff
    3: enp0s2: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 52:54:00:12:34:56 brd ff:ff:ff:ff:ff:ff
    $ ip netns add ns1
    $ ip -n ns1 link add dummy1ns1 type dummy
    $ ip -n ns1 link add dummy2ns1 type dummy
    $ ip link set enp0s2 netns ns1
    $ ip -n ns1 link set enp0s2 name dummy0
    [  100.858894] virtio_net virtio0 dummy0: renamed from enp0s2
    $ ip link add dev4 type dummy
    $ ip -n ns1 a
    1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN group default qlen 1000
        link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    2: dummy1ns1: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 16:63:4c:38:3e:ff brd ff:ff:ff:ff:ff:ff
    3: dummy2ns1: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether aa:9e:86:dd:6b:5d brd ff:ff:ff:ff:ff:ff
    4: dummy0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 52:54:00:12:34:56 brd ff:ff:ff:ff:ff:ff
    $ ip a
    1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
        link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
        inet 127.0.0.1/8 scope host lo
           valid_lft forever preferred_lft forever
        inet6 ::1/128 scope host
           valid_lft forever preferred_lft forever
    2: dummy0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 86:89:3f:86:61:29 brd ff:ff:ff:ff:ff:ff
    4: dev4: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000
        link/ether 5a:e1:4a:b6:ec:f8 brd ff:ff:ff:ff:ff:ff
    $ ip netns del ns1
    [  158.717795] default_device_exit: failed to move dummy0 to init_net: -17
    [  158.719316] ------------[ cut here ]------------
    [  158.720591] kernel BUG at net/core/dev.c:9824!
    [  158.722260] invalid opcode: 0000 [#1] SMP KASAN PTI
    [  158.723728] CPU: 0 PID: 56 Comm: kworker/u2:1 Not tainted 5.3.0-rc1+ #18
    [  158.725422] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-2.fc30 04/01/2014
    [  158.727508] Workqueue: netns cleanup_net
    [  158.728915] RIP: 0010:default_device_exit.cold+0x1d/0x1f
    [  158.730683] Code: 84 e8 18 c9 3e fe 0f 0b e9 70 90 ff ff e8 36 e4 52 fe 89 d9 4c 89 e2 48 c7 c6 80 d6 25 84 48 c7 c7 20 c0 25 84 e8 f4 c8 3e
    [  158.736854] RSP: 0018:ffff8880347e7b90 EFLAGS: 00010282
    [  158.738752] RAX: 000000000000003b RBX: 00000000ffffffef RCX: 0000000000000000
    [  158.741369] RDX: 0000000000000000 RSI: ffffffff8128013d RDI: ffffed10068fcf64
    [  158.743418] RBP: ffff888033550170 R08: 000000000000003b R09: fffffbfff0b94b9c
    [  158.745626] R10: fffffbfff0b94b9b R11: ffffffff85ca5cdf R12: ffff888032f28000
    [  158.748405] R13: dffffc0000000000 R14: ffff8880335501b8 R15: 1ffff110068fcf72
    [  158.750638] FS:  0000000000000000(0000) GS:ffff888036000000(0000) knlGS:0000000000000000
    [  158.752944] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  158.755245] CR2: 00007fe8b45d21d0 CR3: 00000000340b4005 CR4: 0000000000360ef0
    [  158.757654] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  158.760012] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  158.762758] Call Trace:
    [  158.763882]  ? dev_change_net_namespace+0xbb0/0xbb0
    [  158.766148]  ? devlink_nl_cmd_set_doit+0x520/0x520
    [  158.768034]  ? dev_change_net_namespace+0xbb0/0xbb0
    [  158.769870]  ops_exit_list.isra.0+0xa8/0x150
    [  158.771544]  cleanup_net+0x446/0x8f0
    [  158.772945]  ? unregister_pernet_operations+0x4a0/0x4a0
    [  158.775294]  process_one_work+0xa1a/0x1740
    [  158.776896]  ? pwq_dec_nr_in_flight+0x310/0x310
    [  158.779143]  ? do_raw_spin_lock+0x11b/0x280
    [  158.780848]  worker_thread+0x9e/0x1060
    [  158.782500]  ? process_one_work+0x1740/0x1740
    [  158.784454]  kthread+0x31b/0x420
    [  158.786082]  ? __kthread_create_on_node+0x3f0/0x3f0
    [  158.788286]  ret_from_fork+0x3a/0x50
    [  158.789871] ---[ end trace defd6c657c71f936 ]---
    [  158.792273] RIP: 0010:default_device_exit.cold+0x1d/0x1f
    [  158.795478] Code: 84 e8 18 c9 3e fe 0f 0b e9 70 90 ff ff e8 36 e4 52 fe 89 d9 4c 89 e2 48 c7 c6 80 d6 25 84 48 c7 c7 20 c0 25 84 e8 f4 c8 3e
    [  158.804854] RSP: 0018:ffff8880347e7b90 EFLAGS: 00010282
    [  158.807865] RAX: 000000000000003b RBX: 00000000ffffffef RCX: 0000000000000000
    [  158.811794] RDX: 0000000000000000 RSI: ffffffff8128013d RDI: ffffed10068fcf64
    [  158.816652] RBP: ffff888033550170 R08: 000000000000003b R09: fffffbfff0b94b9c
    [  158.820930] R10: fffffbfff0b94b9b R11: ffffffff85ca5cdf R12: ffff888032f28000
    [  158.825113] R13: dffffc0000000000 R14: ffff8880335501b8 R15: 1ffff110068fcf72
    [  158.829899] FS:  0000000000000000(0000) GS:ffff888036000000(0000) knlGS:0000000000000000
    [  158.834923] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  158.838164] CR2: 00007fe8b45d21d0 CR3: 00000000340b4005 CR4: 0000000000360ef0
    [  158.841917] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  158.845149] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    
    Fix this by checking if a device with the same name exists in init_net
    and fallback to original code - dev%d to allocate name - in case it does.
    
    This was found using syzkaller.
    
    Fixes: aca51397d014 ("netns: Fix arbitrary net_device-s corruptions on net_ns stop.")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34491ab5ddb9f2f490d59735858ac11a341f1e13
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Fri Aug 2 13:57:36 2019 +0300

    net: bridge: move default pvid init/deinit to NETDEV_REGISTER/UNREGISTER
    
    [ Upstream commit 091adf9ba6cdb432cbcc217b47e4ffb8aa0d8865 ]
    
    Most of the bridge device's vlan init bugs come from the fact that its
    default pvid is created at the wrong time, way too early in ndo_init()
    before the device is even assigned an ifindex. It introduces a bug when the
    bridge's dev_addr is added as fdb during the initial default pvid creation
    the notification has ifindex/NDA_MASTER both equal to 0 (see example below)
    which really makes no sense for user-space[0] and is wrong.
    Usually user-space software would ignore such entries, but they are
    actually valid and will eventually have all necessary attributes.
    It makes much more sense to send a notification *after* the device has
    registered and has a proper ifindex allocated rather than before when
    there's a chance that the registration might still fail or to receive
    it with ifindex/NDA_MASTER == 0. Note that we can remove the fdb flush
    from br_vlan_flush() since that case can no longer happen. At
    NETDEV_REGISTER br->default_pvid is always == 1 as it's initialized by
    br_vlan_init() before that and at NETDEV_UNREGISTER it can be anything
    depending why it was called (if called due to NETDEV_REGISTER error
    it'll still be == 1, otherwise it could be any value changed during the
    device life time).
    
    For the demonstration below a small change to iproute2 for printing all fdb
    notifications is added, because it contained a workaround not to show
    entries with ifindex == 0.
    Command executed while monitoring: $ ip l add br0 type bridge
    Before (both ifindex and master == 0):
    $ bridge monitor fdb
    36:7e:8a:b3:56:ba dev * vlan 1 master * permanent
    
    After (proper br0 ifindex):
    $ bridge monitor fdb
    e6:2a:ae:7a:b7:48 dev br0 vlan 1 master br0 permanent
    
    v4: move only the default pvid init/deinit to NETDEV_REGISTER/UNREGISTER
    v3: send the correct v2 patch with all changes (stub should return 0)
    v2: on error in br_vlan_init set br->vlgrp to NULL and return 0 in
        the br_vlan_bridge_event stub when bridge vlans are disabled
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=204389
    
    Reported-by: michael-dev <michael-dev@fami-braun.de>
    Fixes: 5be5a2df40f0 ("bridge: Add filtering support for default_pvid")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e0486da6f9c762a9c27e57d5641ea3ecd88df5c
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Tue Jul 30 14:21:00 2019 +0300

    net: bridge: mcast: don't delete permanent entries when fast leave is enabled
    
    [ Upstream commit 5c725b6b65067909548ac9ca9bc777098ec9883d ]
    
    When permanent entries were introduced by the commit below, they were
    exempt from timing out and thus igmp leave wouldn't affect them unless
    fast leave was enabled on the port which was added before permanent
    entries existed. It shouldn't matter if fast leave is enabled or not
    if the user added a permanent entry it shouldn't be deleted on igmp
    leave.
    
    Before:
    $ echo 1 > /sys/class/net/eth4/brport/multicast_fast_leave
    $ bridge mdb add dev br0 port eth4 grp 229.1.1.1 permanent
    $ bridge mdb show
    dev br0 port eth4 grp 229.1.1.1 permanent
    
    < join and leave 229.1.1.1 on eth4 >
    
    $ bridge mdb show
    $
    
    After:
    $ echo 1 > /sys/class/net/eth4/brport/multicast_fast_leave
    $ bridge mdb add dev br0 port eth4 grp 229.1.1.1 permanent
    $ bridge mdb show
    dev br0 port eth4 grp 229.1.1.1 permanent
    
    < join and leave 229.1.1.1 on eth4 >
    
    $ bridge mdb show
    dev br0 port eth4 grp 229.1.1.1 permanent
    
    Fixes: ccb1c31a7a87 ("bridge: add flags to distinguish permanent mdb entires")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 016df08464ba7daa1ccb0a1c1038a78882c5996d
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Mon Jul 29 12:28:41 2019 +0300

    net: bridge: delete local fdb on device init failure
    
    [ Upstream commit d7bae09fa008c6c9a489580db0a5a12063b97f97 ]
    
    On initialization failure we have to delete the local fdb which was
    inserted due to the default pvid creation. This problem has been present
    since the inception of default_pvid. Note that currently there are 2 cases:
    1) in br_dev_init() when br_multicast_init() fails
    2) if register_netdevice() fails after calling ndo_init()
    
    This patch takes care of both since br_vlan_flush() is called on both
    occasions. Also the new fdb delete would be a no-op on normal bridge
    device destruction since the local fdb would've been already flushed by
    br_dev_delete(). This is not an issue for ports since nbp_vlan_init() is
    called last when adding a port thus nothing can fail after it.
    
    Reported-by: syzbot+88533dc8b582309bf3ee@syzkaller.appspotmail.com
    Fixes: 5be5a2df40f0 ("bridge: Add filtering support for default_pvid")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72c05a1fb798998d417fe8e451644921ac8ba931
Author: Matteo Croce <mcroce@redhat.com>
Date:   Sun Jul 28 02:46:45 2019 +0200

    mvpp2: refactor MTU change code
    
    [ Upstream commit 230bd958c2c846ee292aa38bc6b006296c24ca01 ]
    
    The MTU change code can call napi_disable() with the device already down,
    leading to a deadlock. Also, lot of code is duplicated unnecessarily.
    
    Rework mvpp2_change_mtu() to avoid the deadlock and remove duplicated code.
    
    Fixes: 3f518509dedc ("ethernet: Add new driver for Marvell Armada 375 network unit")
    Signed-off-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82f6b470062145473a400e03f8754d6416d20378
Author: Matteo Croce <mcroce@redhat.com>
Date:   Thu Aug 1 14:13:30 2019 +0200

    mvpp2: fix panic on module removal
    
    [ Upstream commit 944a83a2669ae8aa2c7664e79376ca7468eb0a2b ]
    
    mvpp2 uses a delayed workqueue to gather traffic statistics.
    On module removal the workqueue can be destroyed before calling
    cancel_delayed_work_sync() on its works.
    Fix it by moving the destroy_workqueue() call after mvpp2_port_remove().
    Also remove an unneeded call to flush_workqueue()
    
        # rmmod mvpp2
        [ 2743.311722] mvpp2 f4000000.ethernet eth1: phy link down 10gbase-kr/10Gbps/Full
        [ 2743.320063] mvpp2 f4000000.ethernet eth1: Link is Down
        [ 2743.572263] mvpp2 f4000000.ethernet eth2: phy link down sgmii/1Gbps/Full
        [ 2743.580076] mvpp2 f4000000.ethernet eth2: Link is Down
        [ 2744.102169] mvpp2 f2000000.ethernet eth0: phy link down 10gbase-kr/10Gbps/Full
        [ 2744.110441] mvpp2 f2000000.ethernet eth0: Link is Down
        [ 2744.115614] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
        [ 2744.115615] Mem abort info:
        [ 2744.115616]   ESR = 0x96000005
        [ 2744.115617]   Exception class = DABT (current EL), IL = 32 bits
        [ 2744.115618]   SET = 0, FnV = 0
        [ 2744.115619]   EA = 0, S1PTW = 0
        [ 2744.115620] Data abort info:
        [ 2744.115621]   ISV = 0, ISS = 0x00000005
        [ 2744.115622]   CM = 0, WnR = 0
        [ 2744.115624] user pgtable: 4k pages, 39-bit VAs, pgdp=0000000422681000
        [ 2744.115626] [0000000000000000] pgd=0000000000000000, pud=0000000000000000
        [ 2744.115630] Internal error: Oops: 96000005 [#1] SMP
        [ 2744.115632] Modules linked in: mvpp2(-) algif_hash af_alg nls_iso8859_1 nls_cp437 vfat fat xhci_plat_hcd m25p80 spi_nor xhci_hcd mtd usbcore i2c_mv64xxx sfp usb_common marvell10g phy_generic spi_orion mdio_i2c i2c_core mvmdio phylink sbsa_gwdt ip_tables x_tables autofs4 [last unloaded: mvpp2]
        [ 2744.115654] CPU: 3 PID: 8357 Comm: kworker/3:2 Not tainted 5.3.0-rc2 #1
        [ 2744.115655] Hardware name: Marvell 8040 MACCHIATOBin Double-shot (DT)
        [ 2744.115665] Workqueue: events_power_efficient phylink_resolve [phylink]
        [ 2744.115669] pstate: a0000085 (NzCv daIf -PAN -UAO)
        [ 2744.115675] pc : __queue_work+0x9c/0x4d8
        [ 2744.115677] lr : __queue_work+0x170/0x4d8
        [ 2744.115678] sp : ffffff801001bd50
        [ 2744.115680] x29: ffffff801001bd50 x28: ffffffc422597600
        [ 2744.115684] x27: ffffff80109ae6f0 x26: ffffff80108e4018
        [ 2744.115688] x25: 0000000000000003 x24: 0000000000000004
        [ 2744.115691] x23: ffffff80109ae6e0 x22: 0000000000000017
        [ 2744.115694] x21: ffffffc42c030000 x20: ffffffc42209e8f8
        [ 2744.115697] x19: 0000000000000000 x18: 0000000000000000
        [ 2744.115699] x17: 0000000000000000 x16: 0000000000000000
        [ 2744.115701] x15: 0000000000000010 x14: ffffffffffffffff
        [ 2744.115702] x13: ffffff8090e2b95f x12: ffffff8010e2b967
        [ 2744.115704] x11: ffffff8010906000 x10: 0000000000000040
        [ 2744.115706] x9 : ffffff80109223b8 x8 : ffffff80109223b0
        [ 2744.115707] x7 : ffffffc42bc00068 x6 : 0000000000000000
        [ 2744.115709] x5 : ffffffc42bc00000 x4 : 0000000000000000
        [ 2744.115710] x3 : 0000000000000000 x2 : 0000000000000000
        [ 2744.115712] x1 : 0000000000000008 x0 : ffffffc42c030000
        [ 2744.115714] Call trace:
        [ 2744.115716]  __queue_work+0x9c/0x4d8
        [ 2744.115718]  delayed_work_timer_fn+0x28/0x38
        [ 2744.115722]  call_timer_fn+0x3c/0x180
        [ 2744.115723]  expire_timers+0x60/0x168
        [ 2744.115724]  run_timer_softirq+0xbc/0x1e8
        [ 2744.115727]  __do_softirq+0x128/0x320
        [ 2744.115731]  irq_exit+0xa4/0xc0
        [ 2744.115734]  __handle_domain_irq+0x70/0xc0
        [ 2744.115735]  gic_handle_irq+0x58/0xa8
        [ 2744.115737]  el1_irq+0xb8/0x140
        [ 2744.115738]  console_unlock+0x3a0/0x568
        [ 2744.115740]  vprintk_emit+0x200/0x2a0
        [ 2744.115744]  dev_vprintk_emit+0x1c8/0x1e4
        [ 2744.115747]  dev_printk_emit+0x6c/0x7c
        [ 2744.115751]  __netdev_printk+0x104/0x1d8
        [ 2744.115752]  netdev_printk+0x60/0x70
        [ 2744.115756]  phylink_resolve+0x38c/0x3c8 [phylink]
        [ 2744.115758]  process_one_work+0x1f8/0x448
        [ 2744.115760]  worker_thread+0x54/0x500
        [ 2744.115762]  kthread+0x12c/0x130
        [ 2744.115764]  ret_from_fork+0x10/0x1c
        [ 2744.115768] Code: aa1403e0 97fffbbe aa0003f5 b4000700 (f9400261)
    
    Fixes: 118d6298f6f0 ("net: mvpp2: add ethtool GOP statistics")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Matteo Croce <mcroce@redhat.com>
    Acked-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 965f9337e4a83694ff5cf00e4ec70ead5e3d45a7
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Wed Jul 31 09:33:14 2019 +0300

    mlxsw: spectrum: Fix error path in mlxsw_sp_module_init()
    
    [ Upstream commit 28fe79000e9b0a6f99959869947f1ca305f14599 ]
    
    In case of sp2 pci driver registration fail, fix the error path to
    start with sp1 pci driver unregister.
    
    Fixes: c3ab435466d5 ("mlxsw: spectrum: Extend to support Spectrum-2 ASIC")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e481e85860c3daa2267c4c29d93a1c2bdbdcf308
Author: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
Date:   Thu Jul 25 11:07:56 2019 +0800

    ipip: validate header length in ipip_tunnel_xmit
    
    [ Upstream commit 47d858d0bdcd47cc1c6c9eeca91b091dd9e55637 ]
    
    We need the same checks introduced by commit cb9f1b783850
    ("ip: validate header length on virtual device xmit") for
    ipip tunnel.
    
    Fixes: cb9f1b783850b ("ip: validate header length on virtual device xmit")
    Signed-off-by: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfee863b3b46a270ded4b0701625fda3c6f0bec5
Author: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
Date:   Fri Jul 26 00:40:17 2019 +0800

    ip6_tunnel: fix possible use-after-free on xmit
    
    [ Upstream commit 01f5bffad555f8e22a61f4b1261fe09cf1b96994 ]
    
    ip4ip6/ip6ip6 tunnels run iptunnel_handle_offloads on xmit which
    can cause a possible use-after-free accessing iph/ipv6h pointer
    since the packet will be 'uncloned' running pskb_expand_head if
    it is a cloned gso skb.
    
    Fixes: 0e9a709560db ("ip6_tunnel, ip6_gre: fix setting of DSCP on encapsulated packets")
    Signed-off-by: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c83354c31ce8e95c34fd7a3910375f77bc27c77
Author: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
Date:   Wed Jul 24 20:00:42 2019 +0800

    ip6_gre: reload ipv6h in prepare_ip6gre_xmit_ipv6
    
    [ Upstream commit 3bc817d665ac6d9de89f59df522ad86f5b5dfc03 ]
    
    Since ip6_tnl_parse_tlv_enc_lim() can call pskb_may_pull()
    which may change skb->data, so we need to re-load ipv6h at
    the right place.
    
    Fixes: 898b29798e36 ("ip6_gre: Refactor ip6gre xmit codes")
    Cc: William Tu <u9012063@gmail.com>
    Signed-off-by: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
    Acked-by: William Tu <u9012063@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69e4523cc752cf9066fbb54e115f665b2365cba0
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Jul 22 21:43:00 2019 -0700

    ife: error out when nla attributes are empty
    
    [ Upstream commit c8ec4632c6ac9cda0e8c3d51aa41eeab66585bd5 ]
    
    act_ife at least requires TCA_IFE_PARMS, so we have to bail out
    when there is no attribute passed in.
    
    Reported-by: syzbot+fbb5b288c9cb6a2eeac4@syzkaller.appspotmail.com
    Fixes: ef6980b6becb ("introduce IFE action")
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd7a9d8d0aa1a5225ef1edad143e52ce7919a47c
Author: Arnaud Patard <arnaud.patard@rtp-net.org>
Date:   Fri Aug 2 10:32:40 2019 +0200

    drivers/net/ethernet/marvell/mvmdio.c: Fix non OF case
    
    [ Upstream commit d934423ac26ed373dfe089734d505dca5ff679b6 ]
    
    Orion5.x systems are still using machine files and not device-tree.
    Commit 96cb4342382290c9 ("net: mvmdio: allow up to three clocks to be
    specified for orion-mdio") has replaced devm_clk_get() with of_clk_get(),
    leading to a oops at boot and not working network, as reported in
    https://lists.debian.org/debian-arm/2019/07/msg00088.html and possibly in
    https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=908712.
    
    Link: https://lists.debian.org/debian-arm/2019/07/msg00088.html
    Fixes: 96cb4342382290c9 ("net: mvmdio: allow up to three clocks to be specified for orion-mdio")
    Signed-off-by: Arnaud Patard <arnaud.patard@rtp-net.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bd9197d30118523dba164a59d6337fc7c0c068a
Author: Sudarsana Reddy Kalluru <skalluru@marvell.com>
Date:   Tue Jul 23 19:32:41 2019 -0700

    bnx2x: Disable multi-cos feature.
    
    [ Upstream commit d1f0b5dce8fda09a7f5f04c1878f181d548e42f5 ]
    
    Commit 3968d38917eb ("bnx2x: Fix Multi-Cos.") which enabled multi-cos
    feature after prolonged time in driver added some regression causing
    numerous issues (sudden reboots, tx timeout etc.) reported by customers.
    We plan to backout this commit and submit proper fix once we have root
    cause of issues reported with this feature enabled.
    
    Fixes: 3968d38917eb ("bnx2x: Fix Multi-Cos.")
    Signed-off-by: Sudarsana Reddy Kalluru <skalluru@marvell.com>
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea2767a385d5c97182e5d4632231b682b3ce484b
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Jul 30 22:21:41 2019 -0500

    atm: iphase: Fix Spectre v1 vulnerability
    
    [ Upstream commit ea443e5e98b5b74e317ef3d26bcaea54931ccdee ]
    
    board is controlled by user-space, hence leading to a potential
    exploitation of the Spectre variant 1 vulnerability.
    
    This issue was detected with the help of Smatch:
    
    drivers/atm/iphase.c:2765 ia_ioctl() warn: potential spectre issue 'ia_dev' [r] (local cap)
    drivers/atm/iphase.c:2774 ia_ioctl() warn: possible spectre second half.  'iadev'
    drivers/atm/iphase.c:2782 ia_ioctl() warn: possible spectre second half.  'iadev'
    drivers/atm/iphase.c:2816 ia_ioctl() warn: possible spectre second half.  'iadev'
    drivers/atm/iphase.c:2823 ia_ioctl() warn: possible spectre second half.  'iadev'
    drivers/atm/iphase.c:2830 ia_ioctl() warn: potential spectre issue '_ia_dev' [r] (local cap)
    drivers/atm/iphase.c:2845 ia_ioctl() warn: possible spectre second half.  'iadev'
    drivers/atm/iphase.c:2856 ia_ioctl() warn: possible spectre second half.  'iadev'
    
    Fix this by sanitizing board before using it to index ia_dev and _ia_dev
    
    Notice that given that speculation windows are large, the policy is
    to kill the speculation on the first load and not worry if it can be
    completed with a dependent load/store [1].
    
    [1] https://lore.kernel.org/lkml/20180423164740.GY17484@dhcp22.suse.cz/
    
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d55ec68c5d0d7cdc00d05252ace1354fa964552b
Author: Sebastian Parschauer <s.parschauer@gmx.de>
Date:   Wed Jul 24 20:40:03 2019 +0200

    HID: Add quirk for HP X1200 PIXART OEM mouse
    
    commit 49869d2ea9eecc105a10724c1abf035151a3c4e2 upstream.
    
    The PixArt OEM mice are known for disconnecting every minute in
    runlevel 1 or 3 if they are not always polled. So add quirk
    ALWAYS_POLL for this one as well.
    
    Jonathan Teh (@jonathan-teh) reported and tested the quirk.
    Reference: https://github.com/sriemer/fix-linux-mouse/issues/15
    
    Signed-off-by: Sebastian Parschauer <s.parschauer@gmx.de>
    CC: stable@vger.kernel.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d7641f41966efe4e75ee2321a4336eb011b7a1b
Author: Aaron Armstrong Skomra <skomra@gmail.com>
Date:   Tue Jul 23 11:09:15 2019 -0700

    HID: wacom: fix bit shift for Cintiq Companion 2
    
    commit 693c3dab4e50403f91bca4b52fc6d8562a3180f6 upstream.
    
    The bit indicating BTN_6 on this device is overshifted
    by 2 bits, resulting in the incorrect button being
    reported.
    
    Also fix copy-paste mistake in comments.
    
    Signed-off-by: Aaron Armstrong Skomra <aaron.skomra@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Link: https://github.com/linuxwacom/xf86-input-wacom/issues/71
    Fixes: c7f0522a1ad1 ("HID: wacom: Slim down wacom_intuos_pad processing")
    Cc: <stable@vger.kernel.org> # v4.5+
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcbfb3efab0671590a14c7baf104173e49b7b248
Author: Hillf Danton <hdanton@sina.com>
Date:   Tue Jul 30 17:24:36 2019 +0800

    ALSA: usb-audio: Fix gpf in snd_usb_pipe_sanity_check
    
    [ Upstream commit 5d78e1c2b7f4be00bbe62141603a631dc7812f35 ]
    
    syzbot found the following crash on:
    
      general protection fault: 0000 [#1] SMP KASAN
      RIP: 0010:snd_usb_pipe_sanity_check+0x80/0x130 sound/usb/helper.c:75
      Call Trace:
        snd_usb_motu_microbookii_communicate.constprop.0+0xa0/0x2fb  sound/usb/quirks.c:1007
        snd_usb_motu_microbookii_boot_quirk sound/usb/quirks.c:1051 [inline]
        snd_usb_apply_boot_quirk.cold+0x163/0x370 sound/usb/quirks.c:1280
        usb_audio_probe+0x2ec/0x2010 sound/usb/card.c:576
        usb_probe_interface+0x305/0x7a0 drivers/usb/core/driver.c:361
        really_probe+0x281/0x650 drivers/base/dd.c:548
        ....
    
    It was introduced in commit 801ebf1043ae for checking pipe and endpoint
    types. It is fixed by adding a check of the ep pointer in question.
    
    BugLink: https://syzkaller.appspot.com/bug?extid=d59c4387bfb6eced94e2
    Reported-by: syzbot <syzbot+d59c4387bfb6eced94e2@syzkaller.appspotmail.com>
    Fixes: 801ebf1043ae ("ALSA: usb-audio: Sanity checks for each pipe and EP types")
    Cc: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7795140ac4aaf867e84d202f6107921a358e50f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jun 24 15:08:28 2019 +0200

    ALSA: usb-audio: Sanity checks for each pipe and EP types
    
    [ Upstream commit 801ebf1043ae7b182588554cc9b9ad3c14bc2ab5 ]
    
    The recent USB core code performs sanity checks for the given pipe and
    EP types, and it can be hit by manipulated USB descriptors by syzbot.
    For making syzbot happier, this patch introduces a local helper for a
    sanity check in the driver side and calls it at each place before the
    message handling, so that we can avoid the WARNING splats.
    
    Reported-by: syzbot+d952e5e28f5fb7718d23@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24841c7eff3fdcd1f3f9dbe42cccd3f856854117
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Aug 5 18:29:09 2019 -0700

    libnvdimm/bus: Fix wait_nvdimm_bus_probe_idle() ABBA deadlock
    
    commit ca6bf264f6d856f959c4239cda1047b587745c67 upstream.
    
    A multithreaded namespace creation/destruction stress test currently
    deadlocks with the following lockup signature:
    
        INFO: task ndctl:2924 blocked for more than 122 seconds.
              Tainted: G           OE     5.2.0-rc4+ #3382
        "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
        ndctl           D    0  2924   1176 0x00000000
        Call Trace:
         ? __schedule+0x27e/0x780
         schedule+0x30/0xb0
         wait_nvdimm_bus_probe_idle+0x8a/0xd0 [libnvdimm]
         ? finish_wait+0x80/0x80
         uuid_store+0xe6/0x2e0 [libnvdimm]
         kernfs_fop_write+0xf0/0x1a0
         vfs_write+0xb7/0x1b0
         ksys_write+0x5c/0xd0
         do_syscall_64+0x60/0x240
    
         INFO: task ndctl:2923 blocked for more than 122 seconds.
               Tainted: G           OE     5.2.0-rc4+ #3382
         "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
         ndctl           D    0  2923   1175 0x00000000
         Call Trace:
          ? __schedule+0x27e/0x780
          ? __mutex_lock+0x489/0x910
          schedule+0x30/0xb0
          schedule_preempt_disabled+0x11/0x20
          __mutex_lock+0x48e/0x910
          ? nvdimm_namespace_common_probe+0x95/0x4d0 [libnvdimm]
          ? __lock_acquire+0x23f/0x1710
          ? nvdimm_namespace_common_probe+0x95/0x4d0 [libnvdimm]
          nvdimm_namespace_common_probe+0x95/0x4d0 [libnvdimm]
          __dax_pmem_probe+0x5e/0x210 [dax_pmem_core]
          ? nvdimm_bus_probe+0x1d0/0x2c0 [libnvdimm]
          dax_pmem_probe+0xc/0x20 [dax_pmem]
          nvdimm_bus_probe+0x90/0x2c0 [libnvdimm]
          really_probe+0xef/0x390
          driver_probe_device+0xb4/0x100
    
    In this sequence an 'nd_dax' device is being probed and trying to take
    the lock on its backing namespace to validate that the 'nd_dax' device
    indeed has exclusive access to the backing namespace. Meanwhile, another
    thread is trying to update the uuid property of that same backing
    namespace. So one thread is in the probe path trying to acquire the
    lock, and the other thread has acquired the lock and tries to flush the
    probe path.
    
    Fix this deadlock by not holding the namespace device_lock over the
    wait_nvdimm_bus_probe_idle() synchronization step. In turn this requires
    the device_lock to be held on entry to wait_nvdimm_bus_probe_idle() and
    subsequently dropped internally to wait_nvdimm_bus_probe_idle().
    
    Cc: <stable@vger.kernel.org>
    Fixes: bf9bccc14c05 ("libnvdimm: pmem label sets and namespace instantiation")
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Tested-by: Jane Chu <jane.chu@oracle.com>
    Link: https://lore.kernel.org/r/156341210094.292348.2384694131126767789.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a90d58b048af842d28100651ae264b217a1ec77f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Aug 5 18:29:04 2019 -0700

    libnvdimm/bus: Prepare the nd_ioctl() path to be re-entrant
    
    commit 6de5d06e657acdbcf9637dac37916a4a5309e0f4 upstream.
    
    In preparation for not holding a lock over the execution of nd_ioctl(),
    update the implementation to allow multiple threads to be attempting
    ioctls at the same time. The bus lock still prevents multiple in-flight
    ->ndctl() invocations from corrupting each other's state, but static
    global staging buffers are moved to the heap.
    
    Reported-by: Vishal Verma <vishal.l.verma@intel.com>
    Reviewed-by: Vishal Verma <vishal.l.verma@intel.com>
    Tested-by: Vishal Verma <vishal.l.verma@intel.com>
    Link: https://lore.kernel.org/r/156341208947.292348.10560140326807607481.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d9de04646e7accf8522f5740690a365667c76b8
Author: Hannes Reinecke <hare@suse.de>
Date:   Wed Jul 24 11:00:55 2019 +0200

    scsi: fcoe: Embed fc_rport_priv in fcoe_rport structure
    
    commit 023358b136d490ca91735ac6490db3741af5a8bd upstream.
    
    Gcc-9 complains for a memset across pointer boundaries, which happens as
    the code tries to allocate a flexible array on the stack.  Turns out we
    cannot do this without relying on gcc-isms, so with this patch we'll embed
    the fc_rport_priv structure into fcoe_rport, can use the normal
    'container_of' outcast, and will only have to do a memset over one
    structure.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
