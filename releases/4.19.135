commit 205a42ce2861f2d0dea8eb5090d05262e1cfa049
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 29 10:16:59 2020 +0200

    Linux 4.19.135
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3c154542ff7bda1ce2c398fce0181f9ab70a29b
Author: Mark O'Donovan <shiftee@posteo.net>
Date:   Sat Jul 11 05:33:24 2020 +0100

    ath9k: Fix regression with Atheros 9271
    
    commit 92f53e2fda8bb9a559ad61d57bfb397ce67ed0ab upstream.
    
    This fix allows ath9k_htc modules to connect to WLAN once again.
    
    Fixes: 2bbcaaee1fcb ("ath9k: Fix general protection fault in ath9k_hif_usb_rx_cb")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=208251
    Signed-off-by: Mark O'Donovan <shiftee@posteo.net>
    Reported-by: Roman Mamedov <rm@romanrm.net>
    Tested-by: Viktor Jägersküpper <viktor_jaegerskuepper@freenet.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200711043324.8079-1-shiftee@posteo.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 654ae85f1e1823688cda33cba130220d52a57989
Author: Qiujun Huang <hqjagain@gmail.com>
Date:   Sat Apr 4 12:18:38 2020 +0800

    ath9k: Fix general protection fault in ath9k_hif_usb_rx_cb
    
    commit 2bbcaaee1fcbd83272e29f31e2bb7e70d8c49e05 upstream.
    
    In ath9k_hif_usb_rx_cb interface number is assumed to be 0.
    usb_ifnum_to_if(urb->dev, 0)
    But it isn't always true.
    
    The case reported by syzbot:
    https://lore.kernel.org/linux-usb/000000000000666c9c05a1c05d12@google.com
    usb 2-1: new high-speed USB device number 2 using dummy_hcd
    usb 2-1: config 1 has an invalid interface number: 2 but max is 0
    usb 2-1: config 1 has no interface number 0
    usb 2-1: New USB device found, idVendor=0cf3, idProduct=9271, bcdDevice=
    1.08
    usb 2-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3
    general protection fault, probably for non-canonical address
    0xdffffc0000000015: 0000 [#1] SMP KASAN
    KASAN: null-ptr-deref in range [0x00000000000000a8-0x00000000000000af]
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.6.0-rc5-syzkaller #0
    
    Call Trace
    __usb_hcd_giveback_urb+0x29a/0x550 drivers/usb/core/hcd.c:1650
    usb_hcd_giveback_urb+0x368/0x420 drivers/usb/core/hcd.c:1716
    dummy_timer+0x1258/0x32ae drivers/usb/gadget/udc/dummy_hcd.c:1966
    call_timer_fn+0x195/0x6f0 kernel/time/timer.c:1404
    expire_timers kernel/time/timer.c:1449 [inline]
    __run_timers kernel/time/timer.c:1773 [inline]
    __run_timers kernel/time/timer.c:1740 [inline]
    run_timer_softirq+0x5f9/0x1500 kernel/time/timer.c:1786
    __do_softirq+0x21e/0x950 kernel/softirq.c:292
    invoke_softirq kernel/softirq.c:373 [inline]
    irq_exit+0x178/0x1a0 kernel/softirq.c:413
    exiting_irq arch/x86/include/asm/apic.h:546 [inline]
    smp_apic_timer_interrupt+0x141/0x540 arch/x86/kernel/apic/apic.c:1146
    apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:829
    
    Reported-and-tested-by: syzbot+40d5d2e8a4680952f042@syzkaller.appspotmail.com
    Signed-off-by: Qiujun Huang <hqjagain@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200404041838.10426-6-hqjagain@gmail.com
    Cc: Viktor Jägersküpper <viktor_jaegerskuepper@freenet.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cab7ef0066401efb5ab2dea1d85f490ce9c626f3
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jul 23 10:42:09 2020 -0400

    dm integrity: fix integrity recalculation that is improperly skipped
    
    commit 5df96f2b9f58a5d2dc1f30fe7de75e197f2c25f2 upstream.
    
    Commit adc0daad366b62ca1bce3e2958a40b0b71a8b8b3 ("dm: report suspended
    device during destroy") broke integrity recalculation.
    
    The problem is dm_suspended() returns true not only during suspend,
    but also during resume. So this race condition could occur:
    1. dm_integrity_resume calls queue_work(ic->recalc_wq, &ic->recalc_work)
    2. integrity_recalc (&ic->recalc_work) preempts the current thread
    3. integrity_recalc calls if (unlikely(dm_suspended(ic->ti))) goto unlock_ret;
    4. integrity_recalc exits and no recalculating is done.
    
    To fix this race condition, add a function dm_post_suspending that is
    only true during the postsuspend phase and use it instead of
    dm_suspended().
    
    Signed-off-by: Mikulas Patocka <mpatocka redhat com>
    Fixes: adc0daad366b ("dm: report suspended device during destroy")
    Cc: stable vger kernel org # v4.18+
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d034bb300f9ac8e567f67015466485e0556fd09
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Mon Jun 29 14:24:43 2020 +0200

    ASoC: qcom: Drop HAS_DMA dependency to fix link failure
    
    commit b6aa06de7757667bac88997a8807b143b8436035 upstream.
    
    When building on allyesconfig kernel for a NO_DMA=y platform (e.g.
    Sun-3), CONFIG_SND_SOC_QCOM_COMMON=y, but CONFIG_SND_SOC_QDSP6_AFE=n,
    leading to a link failure:
    
        sound/soc/qcom/common.o: In function `qcom_snd_parse_of':
        common.c:(.text+0x2e2): undefined reference to `q6afe_is_rx_port'
    
    While SND_SOC_QDSP6 depends on HAS_DMA, SND_SOC_MSM8996 and SND_SOC_SDM845
    don't, so the following warning is seen:
    
        WARNING: unmet direct dependencies detected for SND_SOC_QDSP6
          Depends on [n]: SOUND [=y] && !UML && SND [=y] && SND_SOC [=y] && QCOM_APR [=y] && HAS_DMA [=n]
          Selected by [y]:
          - SND_SOC_MSM8996 [=y] && SOUND [=y] && !UML && SND [=y] && SND_SOC [=y] && QCOM_APR [=y]
          - SND_SOC_SDM845 [=y] && SOUND [=y] && !UML && SND [=y] && SND_SOC [=y] && QCOM_APR [=y] && CROS_EC [=y] && I2C [=y] && SOUNDWIRE [=y]
    
    Until recently, this warning was harmless (from a compile-testing
    point-of-view), but the new user of q6afe_is_rx_port() turned this into
    a hard failure.
    
    As the QDSP6 driver itself builds fine if NO_DMA=y, and it depends on
    QCOM_APR (which in turns depends on ARCH_QCOM || COMPILE_TEST), it is
    safe to increase compile testing coverage.  Hence fix the link failure
    by dropping the HAS_DMA dependency of SND_SOC_QDSP6.
    
    Fixes: a2120089251f1fe2 ("ASoC: qcom: common: set correct directions for dailinks")
    Fixes: 6b1687bf76ef84cb ("ASoC: qcom: add sdm845 sound card support")
    Fixes: a6f933f63f2ffdb2 ("ASoC: qcom: apq8096: Add db820c machine driver")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://lore.kernel.org/r/20200629122443.21736-1-geert@linux-m68k.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2005c8285cb99db5ee24243d09db31321cc8381f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jun 28 17:52:28 2020 +0200

    ASoC: rt5670: Add new gpio1_is_ext_spk_en quirk and enable it on the Lenovo Miix 2 10
    
    commit 85ca6b17e2bb96b19caac3b02c003d670b66de96 upstream.
    
    The Lenovo Miix 2 10 has a keyboard dock with extra speakers in the dock.
    Rather then the ACL5672's GPIO1 pin being used as IRQ to the CPU, it is
    actually used to enable the amplifier for these speakers
    (the IRQ to the CPU comes directly from the jack-detect switch).
    
    Add a quirk for having an ext speaker-amplifier enable pin on GPIO1
    and replace the Lenovo Miix 2 10's dmi_system_id table entry's wrong
    GPIO_DEV quirk (which needs to be renamed to GPIO1_IS_IRQ) with the
    new RT5670_GPIO1_IS_EXT_SPK_EN quirk, so that we enable the external
    speaker-amplifier as necessary.
    
    Also update the ident field for the dmi_system_id table entry, the
    Miix models are not Thinkpads.
    
    Fixes: 67e03ff3f32f ("ASoC: codecs: rt5670: add Thinkpad Tablet 10 quirk")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1786723
    Link: https://lore.kernel.org/r/20200628155231.71089-4-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 159bcd5488602e893a6f0130140885457485afee
Author: Joerg Roedel <jroedel@suse.de>
Date:   Tue Jul 21 11:34:48 2020 +0200

    x86, vmlinux.lds: Page-align end of ..page_aligned sections
    
    commit de2b41be8fcccb2f5b6c480d35df590476344201 upstream.
    
    On x86-32 the idt_table with 256 entries needs only 2048 bytes. It is
    page-aligned, but the end of the .bss..page_aligned section is not
    guaranteed to be page-aligned.
    
    As a result, objects from other .bss sections may end up on the same 4k
    page as the idt_table, and will accidentially get mapped read-only during
    boot, causing unexpected page-faults when the kernel writes to them.
    
    This could be worked around by making the objects in the page aligned
    sections page sized, but that's wrong.
    
    Explicit sections which store only page aligned objects have an implicit
    guarantee that the object is alone in the page in which it is placed. That
    works for all objects except the last one. That's inconsistent.
    
    Enforcing page sized objects for these sections would wreckage memory
    sanitizers, because the object becomes artificially larger than it should
    be and out of bound access becomes legit.
    
    Align the end of the .bss..page_aligned and .data..page_aligned section on
    page-size so all objects places in these sections are guaranteed to have
    their own page.
    
    [ tglx: Amended changelog ]
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20200721093448.10417-1-joro@8bytes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69f77566c2a635efa2acb5ddca8108de189e6c08
Author: John David Anglin <dave.anglin@bell.net>
Date:   Tue Jul 21 07:36:59 2020 -0400

    parisc: Add atomic64_set_release() define to avoid CPU soft lockups
    
    commit be6577af0cef934ccb036445314072e8cb9217b9 upstream.
    
    Stalls are quite frequent with recent kernels. I enabled
    CONFIG_SOFTLOCKUP_DETECTOR and I caught the following stall:
    
    watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [cc1:22803]
    CPU: 0 PID: 22803 Comm: cc1 Not tainted 5.6.17+ #3
    Hardware name: 9000/800/rp3440
     IAOQ[0]: d_alloc_parallel+0x384/0x688
     IAOQ[1]: d_alloc_parallel+0x388/0x688
     RP(r2): d_alloc_parallel+0x134/0x688
    Backtrace:
     [<000000004036974c>] __lookup_slow+0xa4/0x200
     [<0000000040369fc8>] walk_component+0x288/0x458
     [<000000004036a9a0>] path_lookupat+0x88/0x198
     [<000000004036e748>] filename_lookup+0xa0/0x168
     [<000000004036e95c>] user_path_at_empty+0x64/0x80
     [<000000004035d93c>] vfs_statx+0x104/0x158
     [<000000004035dfcc>] __do_sys_lstat64+0x44/0x80
     [<000000004035e5a0>] sys_lstat64+0x20/0x38
     [<0000000040180054>] syscall_exit+0x0/0x14
    
    The code was stuck in this loop in d_alloc_parallel:
    
        4037d414:   0e 00 10 dc     ldd 0(r16),ret0
        4037d418:   c7 fc 5f ed     bb,< ret0,1f,4037d414 <d_alloc_parallel+0x384>
        4037d41c:   08 00 02 40     nop
    
    This is the inner loop of bit_spin_lock which is called by hlist_bl_unlock in
    d_alloc_parallel:
    
    static inline void bit_spin_lock(int bitnum, unsigned long *addr)
    {
            /*
             * Assuming the lock is uncontended, this never enters
             * the body of the outer loop. If it is contended, then
             * within the inner loop a non-atomic test is used to
             * busywait with less bus contention for a good time to
             * attempt to acquire the lock bit.
             */
            preempt_disable();
    #if defined(CONFIG_SMP) || defined(CONFIG_DEBUG_SPINLOCK)
            while (unlikely(test_and_set_bit_lock(bitnum, addr))) {
                    preempt_enable();
                    do {
                            cpu_relax();
                    } while (test_bit(bitnum, addr));
                    preempt_disable();
            }
    #endif
            __acquire(bitlock);
    }
    
    After consideration, I realized that we must be losing bit unlocks.
    Then, I noticed that we missed defining atomic64_set_release().
    Adding this define fixes the stalls in bit operations.
    
    Signed-off-by: Dave Anglin <dave.anglin@bell.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c24131ef099a065e4b9263440b03031b9328809c
Author: Qiu Wenbo <qiuwenbo@phytium.com.cn>
Date:   Fri Jul 17 15:09:57 2020 +0800

    drm/amd/powerplay: fix a crash when overclocking Vega M
    
    commit 88bb16ad998a0395fe4b346b7d3f621aaa0a2324 upstream.
    
    Avoid kernel crash when vddci_control is SMU7_VOLTAGE_CONTROL_NONE and
    vddci_voltage_table is empty. It has been tested on Intel Hades Canyon
    (i7-8809G).
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=208489
    Fixes: ac7822b0026f ("drm/amd/powerplay: add smumgr support for VEGAM (v2)")
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Qiu Wenbo <qiuwenbo@phytium.com.cn>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9468cf97910aea551c0d8f423cc30a13bda7490e
Author: Paweł Gronowski <me@woland.xyz>
Date:   Sun Jul 19 17:54:53 2020 +0200

    drm/amdgpu: Fix NULL dereference in dpm sysfs handlers
    
    commit 38e0c89a19fd13f28d2b4721035160a3e66e270b upstream.
    
    NULL dereference occurs when string that is not ended with space or
    newline is written to some dpm sysfs interface (for example pp_dpm_sclk).
    This happens because strsep replaces the tmp with NULL if the delimiter
    is not present in string, which is then dereferenced by tmp[0].
    
    Reproduction example:
    sudo sh -c 'echo -n 1 > /sys/class/drm/card0/device/pp_dpm_sclk'
    
    Signed-off-by: Paweł Gronowski <me@woland.xyz>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4daa403143be80d373f520029a5220602db2e4cd
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Thu Jul 23 21:15:46 2020 -0700

    io-mapping: indicate mapping failure
    
    commit e0b3e0b1a04367fc15c07f44e78361545b55357c upstream.
    
    The !ATOMIC_IOMAP version of io_maping_init_wc will always return
    success, even when the ioremap fails.
    
    Since the ATOMIC_IOMAP version returns NULL when the init fails, and
    callers check for a NULL return on error this is unexpected.
    
    During a device probe, where the ioremap failed, a crash can look like
    this:
    
        BUG: unable to handle page fault for address: 0000000000210000
         #PF: supervisor write access in kernel mode
         #PF: error_code(0x0002) - not-present page
         Oops: 0002 [#1] PREEMPT SMP
         CPU: 0 PID: 177 Comm:
         RIP: 0010:fill_page_dma [i915]
           gen8_ppgtt_create [i915]
           i915_ppgtt_create [i915]
           intel_gt_init [i915]
           i915_gem_init [i915]
           i915_driver_probe [i915]
           pci_device_probe
           really_probe
           driver_probe_device
    
    The remap failure occurred much earlier in the probe.  If it had been
    propagated, the driver would have exited with an error.
    
    Return NULL on ioremap failure.
    
    [akpm@linux-foundation.org: detect ioremap_wc() errors earlier]
    
    Fixes: cafaf14a5d8f ("io-mapping: Always create a struct to hold metadata about the io-mapping")
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200721171936.81563-1-michael.j.ruhl@intel.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d87ddcdb2daab79085efe71a8f547aebb5ca9b05
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Thu Jul 23 21:15:27 2020 -0700

    mm: memcg/slab: fix memory leak at non-root kmem_cache destroy
    
    commit d38a2b7a9c939e6d7329ab92b96559ccebf7b135 upstream.
    
    If the kmem_cache refcount is greater than one, we should not mark the
    root kmem_cache as dying.  If we mark the root kmem_cache dying
    incorrectly, the non-root kmem_cache can never be destroyed.  It
    resulted in memory leak when memcg was destroyed.  We can use the
    following steps to reproduce.
    
      1) Use kmem_cache_create() to create a new kmem_cache named A.
      2) Coincidentally, the kmem_cache A is an alias for kmem_cache B,
         so the refcount of B is just increased.
      3) Use kmem_cache_destroy() to destroy the kmem_cache A, just
         decrease the B's refcount but mark the B as dying.
      4) Create a new memory cgroup and alloc memory from the kmem_cache
         B. It leads to create a non-root kmem_cache for allocating memory.
      5) When destroy the memory cgroup created in the step 4), the
         non-root kmem_cache can never be destroyed.
    
    If we repeat steps 4) and 5), this will cause a lot of memory leak.  So
    only when refcount reach zero, we mark the root kmem_cache as dying.
    
    Fixes: 92ee383f6daa ("mm: fix race between kmem_cache destroy, create and deactivate")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200716165103.83462-1-songmuchun@bytedance.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 763b04c6b26bc12c2df36390210e5377b241a8a8
Author: Roman Gushchin <guro@fb.com>
Date:   Thu Jul 11 20:56:24 2019 -0700

    mm: memcg/slab: synchronize access to kmem_cache dying flag using a spinlock
    
    [ Upstream commit 63b02ef7dc4ec239df45c018ac0adbd02ba30a0c ]
    
    Currently the memcg_params.dying flag and the corresponding workqueue used
    for the asynchronous deactivation of kmem_caches is synchronized using the
    slab_mutex.
    
    It makes impossible to check this flag from the irq context, which will be
    required in order to implement asynchronous release of kmem_caches.
    
    So let's switch over to the irq-save flavor of the spinlock-based
    synchronization.
    
    Link: http://lkml.kernel.org/r/20190611231813.3148843-8-guro@fb.com
    Signed-off-by: Roman Gushchin <guro@fb.com>
    Acked-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Waiman Long <longman@redhat.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Andrei Vagin <avagin@gmail.com>
    Cc: Qian Cai <cai@lca.pw>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91404e91eb85fdb8b6d5d6c01a53cbc63b057e10
Author: Hugh Dickins <hughd@google.com>
Date:   Thu Jul 23 21:15:24 2020 -0700

    mm/memcg: fix refcount error while moving and swapping
    
    commit 8d22a9351035ef2ff12ef163a1091b8b8cf1e49c upstream.
    
    It was hard to keep a test running, moving tasks between memcgs with
    move_charge_at_immigrate, while swapping: mem_cgroup_id_get_many()'s
    refcount is discovered to be 0 (supposedly impossible), so it is then
    forced to REFCOUNT_SATURATED, and after thousands of warnings in quick
    succession, the test is at last put out of misery by being OOM killed.
    
    This is because of the way moved_swap accounting was saved up until the
    task move gets completed in __mem_cgroup_clear_mc(), deferred from when
    mem_cgroup_move_swap_account() actually exchanged old and new ids.
    Concurrent activity can free up swap quicker than the task is scanned,
    bringing id refcount down 0 (which should only be possible when
    offlining).
    
    Just skip that optimization: do that part of the accounting immediately.
    
    Fixes: 615d66c37c75 ("mm: memcontrol: fix memcg id ref counter on swap charge move")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Alex Shi <alex.shi@linux.alibaba.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Alex Shi <alex.shi@linux.alibaba.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.2007071431050.4726@eggly.anvils
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69c122751164c3c343eea205fd5c3e1d5132f967
Author: Fangrui Song <maskray@google.com>
Date:   Tue Jul 21 10:31:23 2020 -0700

    Makefile: Fix GCC_TOOLCHAIN_DIR prefix for Clang cross compilation
    
    commit ca9b31f6bb9c6aa9b4e5f0792f39a97bbffb8c51 upstream.
    
    When CROSS_COMPILE is set (e.g. aarch64-linux-gnu-), if
    $(CROSS_COMPILE)elfedit is found at /usr/bin/aarch64-linux-gnu-elfedit,
    GCC_TOOLCHAIN_DIR will be set to /usr/bin/.  --prefix= will be set to
    /usr/bin/ and Clang as of 11 will search for both
    $(prefix)aarch64-linux-gnu-$needle and $(prefix)$needle.
    
    GCC searchs for $(prefix)aarch64-linux-gnu/$version/$needle,
    $(prefix)aarch64-linux-gnu/$needle and $(prefix)$needle. In practice,
    $(prefix)aarch64-linux-gnu/$needle rarely contains executables.
    
    To better model how GCC's -B/--prefix takes in effect in practice, newer
    Clang (since
    https://github.com/llvm/llvm-project/commit/3452a0d8c17f7166f479706b293caf6ac76ffd90)
    only searches for $(prefix)$needle. Currently it will find /usr/bin/as
    instead of /usr/bin/aarch64-linux-gnu-as.
    
    Set --prefix= to $(GCC_TOOLCHAIN_DIR)$(notdir $(CROSS_COMPILE))
    (/usr/bin/aarch64-linux-gnu-) so that newer Clang can find the
    appropriate cross compiling GNU as (when -no-integrated-as is in
    effect).
    
    Cc: stable@vger.kernel.org
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1099
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74752b81eae8ae64e97de222320026367e92c4b5
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Sun Jul 12 20:10:12 2020 +0900

    vt: Reject zero-sized screen buffer size.
    
    commit ce684552a266cb1c7cc2f7e623f38567adec6653 upstream.
    
    syzbot is reporting general protection fault in do_con_write() [1] caused
    by vc->vc_screenbuf == ZERO_SIZE_PTR caused by vc->vc_screenbuf_size == 0
    caused by vc->vc_cols == vc->vc_rows == vc->vc_size_row == 0 caused by
    fb_set_var() from ioctl(FBIOPUT_VSCREENINFO) on /dev/fb0 , for
    gotoxy(vc, 0, 0) from reset_terminal() from vc_init() from vc_allocate()
     from con_install() from tty_init_dev() from tty_open() on such console
    causes vc->vc_pos == 0x10000000e due to
    ((unsigned long) ZERO_SIZE_PTR) + -1U * 0 + (-1U << 1).
    
    I don't think that a console with 0 column or 0 row makes sense. And it
    seems that vc_do_resize() does not intend to allow resizing a console to
    0 column or 0 row due to
    
      new_cols = (cols ? cols : vc->vc_cols);
      new_rows = (lines ? lines : vc->vc_rows);
    
    exception.
    
    Theoretically, cols and rows can be any range as long as
    0 < cols * rows * 2 <= KMALLOC_MAX_SIZE is satisfied (e.g.
    cols == 1048576 && rows == 2 is possible) because of
    
      vc->vc_size_row = vc->vc_cols << 1;
      vc->vc_screenbuf_size = vc->vc_rows * vc->vc_size_row;
    
    in visual_init() and kzalloc(vc->vc_screenbuf_size) in vc_allocate().
    
    Since we can detect cols == 0 or rows == 0 via screenbuf_size = 0 in
    visual_init(), we can reject kzalloc(0). Then, vc_allocate() will return
    an error, and con_write() will not be called on a console with 0 column
    or 0 row.
    
    We need to make sure that integer overflow in visual_init() won't happen.
    Since vc_do_resize() restricts cols <= 32767 and rows <= 32767, applying
    1 <= cols <= 32767 and 1 <= rows <= 32767 restrictions to vc_allocate()
    will be practically fine.
    
    This patch does not touch con_init(), for returning -EINVAL there
    does not help when we are not returning -ENOMEM.
    
    [1] https://syzkaller.appspot.com/bug?extid=017265e8553724e514e8
    
    Reported-and-tested-by: syzbot <syzbot+017265e8553724e514e8@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200712111013.11881-1-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd58bd1b95b7127bb975942e14c4a9bd878c28db
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Jul 15 10:51:02 2020 +0900

    fbdev: Detect integer underflow at "struct fbcon_ops"->clear_margins.
    
    commit 033724d6864245a11f8e04c066002e6ad22b3fd0 upstream.
    
    syzbot is reporting general protection fault in bitfill_aligned() [1]
    caused by integer underflow in bit_clear_margins(). The cause of this
    problem is when and how do_vc_resize() updates vc->vc_{cols,rows}.
    
    If vc_do_resize() fails (e.g. kzalloc() fails) when var.xres or var.yres
    is going to shrink, vc->vc_{cols,rows} will not be updated. This allows
    bit_clear_margins() to see info->var.xres < (vc->vc_cols * cw) or
    info->var.yres < (vc->vc_rows * ch). Unexpectedly large rw or bh will
    try to overrun the __iomem region and causes general protection fault.
    
    Also, vc_resize(vc, 0, 0) does not set vc->vc_{cols,rows} = 0 due to
    
      new_cols = (cols ? cols : vc->vc_cols);
      new_rows = (lines ? lines : vc->vc_rows);
    
    exception. Since cols and lines are calculated as
    
      cols = FBCON_SWAP(ops->rotate, info->var.xres, info->var.yres);
      rows = FBCON_SWAP(ops->rotate, info->var.yres, info->var.xres);
      cols /= vc->vc_font.width;
      rows /= vc->vc_font.height;
      vc_resize(vc, cols, rows);
    
    in fbcon_modechanged(), var.xres < vc->vc_font.width makes cols = 0
    and var.yres < vc->vc_font.height makes rows = 0. This means that
    
      const int fd = open("/dev/fb0", O_ACCMODE);
      struct fb_var_screeninfo var = { };
      ioctl(fd, FBIOGET_VSCREENINFO, &var);
      var.xres = var.yres = 1;
      ioctl(fd, FBIOPUT_VSCREENINFO, &var);
    
    easily reproduces integer underflow bug explained above.
    
    Of course, callers of vc_resize() are not handling vc_do_resize() failure
    is bad. But we can't avoid vc_resize(vc, 0, 0) which returns 0. Therefore,
    as a band-aid workaround, this patch checks integer underflow in
    "struct fbcon_ops"->clear_margins call, assuming that
    vc->vc_cols * vc->vc_font.width and vc->vc_rows * vc->vc_font.heigh do not
    cause integer overflow.
    
    [1] https://syzkaller.appspot.com/bug?id=a565882df74fa76f10d3a6fec4be31098dbb37c6
    
    Reported-and-tested-by: syzbot <syzbot+e5fd3e65515b48c02a30@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200715015102.3814-1-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ccfaf3878968fbf40134ab5c6e3f3addd24ceb8
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Tue Jul 14 15:41:12 2020 +0300

    serial: 8250_mtk: Fix high-speed baud rates clamping
    
    commit 551e553f0d4ab623e2a6f424ab5834f9c7b5229c upstream.
    
    Commit 7b668c064ec3 ("serial: 8250: Fix max baud limit in generic 8250
    port") fixed limits of a baud rate setting for a generic 8250 port.
    In other words since that commit the baud rate has been permitted to be
    within [uartclk / 16 / UART_DIV_MAX; uartclk / 16], which is absolutely
    normal for a standard 8250 UART port. But there are custom 8250 ports,
    which provide extended baud rate limits. In particular the Mediatek 8250
    port can work with baud rates up to "uartclk" speed.
    
    Normally that and any other peculiarity is supposed to be handled in a
    custom set_termios() callback implemented in the vendor-specific
    8250-port glue-driver. Currently that is how it's done for the most of
    the vendor-specific 8250 ports, but for some reason for Mediatek a
    solution has been spread out to both the glue-driver and to the generic
    8250-port code. Due to that a bug has been introduced, which permitted the
    extended baud rate limit for all even for standard 8250-ports. The bug
    has been fixed by the commit 7b668c064ec3 ("serial: 8250: Fix max baud
    limit in generic 8250 port") by narrowing the baud rates limit back down to
    the normal bounds. Unfortunately by doing so we also broke the
    Mediatek-specific extended bauds feature.
    
    A fix of the problem described above is twofold. First since we can't get
    back the extended baud rate limits feature to the generic set_termios()
    function and that method supports only a standard baud rates range, the
    requested baud rate must be locally stored before calling it and then
    restored back to the new termios structure after the generic set_termios()
    finished its magic business. By doing so we still use the
    serial8250_do_set_termios() method to set the LCR/MCR/FCR/etc. registers,
    while the extended baud rate setting procedure will be performed later in
    the custom Mediatek-specific set_termios() callback. Second since a true
    baud rate is now fully calculated in the custom set_termios() method we
    need to locally update the port timeout by calling the
    uart_update_timeout() function. After the fixes described above are
    implemented in the 8250_mtk.c driver, the Mediatek 8250-port should
    get back to normally working with extended baud rates.
    
    Link: https://lore.kernel.org/linux-serial/20200701211337.3027448-1-danielwinkler@google.com
    
    Fixes: 7b668c064ec3 ("serial: 8250: Fix max baud limit in generic 8250 port")
    Reported-by: Daniel Winkler <danielwinkler@google.com>
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Cc: stable <stable@vger.kernel.org>
    Tested-by: Claire Chang <tientzu@chromium.org>
    Link: https://lore.kernel.org/r/20200714124113.20918-1-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c358255ff1dfa51ddbcbc8dfcc4eaa5719008daa
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Jul 21 14:38:52 2020 +0000

    serial: 8250: fix null-ptr-deref in serial8250_start_tx()
    
    commit f4c23a140d80ef5e6d3d1f8f57007649014b60fa upstream.
    
    I got null-ptr-deref in serial8250_start_tx():
    
    [   78.114630] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
    [   78.123778] Mem abort info:
    [   78.126560]   ESR = 0x86000007
    [   78.129603]   EC = 0x21: IABT (current EL), IL = 32 bits
    [   78.134891]   SET = 0, FnV = 0
    [   78.137933]   EA = 0, S1PTW = 0
    [   78.141064] user pgtable: 64k pages, 48-bit VAs, pgdp=00000027d41a8600
    [   78.147562] [0000000000000000] pgd=00000027893f0003, p4d=00000027893f0003, pud=00000027893f0003, pmd=00000027c9a20003, pte=0000000000000000
    [   78.160029] Internal error: Oops: 86000007 [#1] SMP
    [   78.164886] Modules linked in: sunrpc vfat fat aes_ce_blk crypto_simd cryptd aes_ce_cipher crct10dif_ce ghash_ce sha2_ce sha256_arm64 sha1_ce ses enclosure sg sbsa_gwdt ipmi_ssif spi_dw_mmio sch_fq_codel vhost_net tun vhost vhost_iotlb tap ip_tables ext4 mbcache jbd2 ahci hisi_sas_v3_hw libahci hisi_sas_main libsas hns3 scsi_transport_sas hclge libata megaraid_sas ipmi_si hnae3 ipmi_devintf ipmi_msghandler br_netfilter bridge stp llc nvme nvme_core xt_sctp sctp libcrc32c dm_mod nbd
    [   78.207383] CPU: 11 PID: 23258 Comm: null-ptr Not tainted 5.8.0-rc6+ #48
    [   78.214056] Hardware name: Huawei TaiShan 2280 V2/BC82AMDC, BIOS 2280-V2 CS V3.B210.01 03/12/2020
    [   78.222888] pstate: 80400089 (Nzcv daIf +PAN -UAO BTYPE=--)
    [   78.228435] pc : 0x0
    [   78.230618] lr : serial8250_start_tx+0x160/0x260
    [   78.235215] sp : ffff800062eefb80
    [   78.238517] x29: ffff800062eefb80 x28: 0000000000000fff
    [   78.243807] x27: ffff800062eefd80 x26: ffff202fd83b3000
    [   78.249098] x25: ffff800062eefd80 x24: ffff202fd83b3000
    [   78.254388] x23: ffff002fc5e50be8 x22: 0000000000000002
    [   78.259679] x21: 0000000000000001 x20: 0000000000000000
    [   78.264969] x19: ffffa688827eecc8 x18: 0000000000000000
    [   78.270259] x17: 0000000000000000 x16: 0000000000000000
    [   78.275550] x15: ffffa68881bc67a8 x14: 00000000000002e6
    [   78.280841] x13: ffffa68881bc67a8 x12: 000000000000c539
    [   78.286131] x11: d37a6f4de9bd37a7 x10: ffffa68881cccff0
    [   78.291421] x9 : ffffa68881bc6000 x8 : ffffa688819daa88
    [   78.296711] x7 : ffffa688822a0f20 x6 : ffffa688819e0000
    [   78.302002] x5 : ffff800062eef9d0 x4 : ffffa68881e707a8
    [   78.307292] x3 : 0000000000000000 x2 : 0000000000000002
    [   78.312582] x1 : 0000000000000001 x0 : ffffa688827eecc8
    [   78.317873] Call trace:
    [   78.320312]  0x0
    [   78.322147]  __uart_start.isra.9+0x64/0x78
    [   78.326229]  uart_start+0xb8/0x1c8
    [   78.329620]  uart_flush_chars+0x24/0x30
    [   78.333442]  n_tty_receive_buf_common+0x7b0/0xc30
    [   78.338128]  n_tty_receive_buf+0x44/0x2c8
    [   78.342122]  tty_ioctl+0x348/0x11f8
    [   78.345599]  ksys_ioctl+0xd8/0xf8
    [   78.348903]  __arm64_sys_ioctl+0x2c/0xc8
    [   78.352812]  el0_svc_common.constprop.2+0x88/0x1b0
    [   78.357583]  do_el0_svc+0x44/0xd0
    [   78.360887]  el0_sync_handler+0x14c/0x1d0
    [   78.364880]  el0_sync+0x140/0x180
    [   78.368185] Code: bad PC value
    
    SERIAL_PORT_DFNS is not defined on each arch, if it's not defined,
    serial8250_set_defaults() won't be called in serial8250_isa_init_ports(),
    so the p->serial_in pointer won't be initialized, and it leads a null-ptr-deref.
    Fix this problem by calling serial8250_set_defaults() after init uart port.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200721143852.4058352-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f96ab42f29656efef6cd3cb1a68d8757e4286df1
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Jul 17 15:52:56 2020 +0100

    staging: comedi: addi_apci_1564: check INSN_CONFIG_DIGITAL_TRIG shift
    
    commit 926234f1b8434c4409aa4c53637aa3362ca07cea upstream.
    
    The `INSN_CONFIG` comedi instruction with sub-instruction code
    `INSN_CONFIG_DIGITAL_TRIG` includes a base channel in `data[3]`. This is
    used as a right shift amount for other bitmask values without being
    checked.  Shift amounts greater than or equal to 32 will result in
    undefined behavior.  Add code to deal with this.
    
    Fixes: 1e15687ea472 ("staging: comedi: addi_apci_1564: add Change-of-State interrupt subdevice and required functions")
    Cc: <stable@vger.kernel.org> #3.17+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200717145257.112660-4-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3027b255ebfbce099279f9dc0ae16448a5966dad
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Jul 17 15:52:57 2020 +0100

    staging: comedi: addi_apci_1500: check INSN_CONFIG_DIGITAL_TRIG shift
    
    commit fc846e9db67c7e808d77bf9e2ef3d49e3820ce5d upstream.
    
    The `INSN_CONFIG` comedi instruction with sub-instruction code
    `INSN_CONFIG_DIGITAL_TRIG` includes a base channel in `data[3]`. This is
    used as a right shift amount for other bitmask values without being
    checked.  Shift amounts greater than or equal to 32 will result in
    undefined behavior.  Add code to deal with this, adjusting the checks
    for invalid channels so that enabled channel bits that would have been
    lost by shifting are also checked for validity.  Only channels 0 to 15
    are valid.
    
    Fixes: a8c66b684efaf ("staging: comedi: addi_apci_1500: rewrite the subdevice support functions")
    Cc: <stable@vger.kernel.org> #4.0+: ef75e14a6c93: staging: comedi: verify array index is correct before using it
    Cc: <stable@vger.kernel.org> #4.0+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200717145257.112660-5-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f6e8ce1dbb240314b56a9cd57c2a6249ce9522e
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Jul 17 15:52:54 2020 +0100

    staging: comedi: ni_6527: fix INSN_CONFIG_DIGITAL_TRIG support
    
    commit f07804ec77d77f8a9dcf570a24154e17747bc82f upstream.
    
    `ni6527_intr_insn_config()` processes `INSN_CONFIG` comedi instructions
    for the "interrupt" subdevice.  When `data[0]` is
    `INSN_CONFIG_DIGITAL_TRIG` it is configuring the digital trigger.  When
    `data[2]` is `COMEDI_DIGITAL_TRIG_ENABLE_EDGES` it is configuring rising
    and falling edge detection for the digital trigger, using a base channel
    number (or shift amount) in `data[3]`, a rising edge bitmask in
    `data[4]` and falling edge bitmask in `data[5]`.
    
    If the base channel number (shift amount) is greater than or equal to
    the number of channels (24) of the digital input subdevice, there are no
    changes to the rising and falling edges, so the mask of channels to be
    changed can be set to 0, otherwise the mask of channels to be changed,
    and the rising and falling edge bitmasks are shifted by the base channel
    number before calling `ni6527_set_edge_detection()` to change the
    appropriate registers.  Unfortunately, the code is comparing the base
    channel (shift amount) to the interrupt subdevice's number of channels
    (1) instead of the digital input subdevice's number of channels (24).
    Fix it by comparing to 32 because all shift amounts for an `unsigned
    int` must be less than that and everything from bit 24 upwards is
    ignored by `ni6527_set_edge_detection()` anyway.
    
    Fixes: 110f9e687c1a8 ("staging: comedi: ni_6527: support INSN_CONFIG_DIGITAL_TRIG")
    Cc: <stable@vger.kernel.org> # 3.17+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200717145257.112660-2-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97ab1fd6d47f2f3c66b4f8e221e440fdd348cb14
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Jul 17 15:52:55 2020 +0100

    staging: comedi: addi_apci_1032: check INSN_CONFIG_DIGITAL_TRIG shift
    
    commit 0bd0db42a030b75c20028c7ba6e327b9cb554116 upstream.
    
    The `INSN_CONFIG` comedi instruction with sub-instruction code
    `INSN_CONFIG_DIGITAL_TRIG` includes a base channel in `data[3]`. This is
    used as a right shift amount for other bitmask values without being
    checked.  Shift amounts greater than or equal to 32 will result in
    undefined behavior.  Add code to deal with this.
    
    Fixes: 33cdce6293dcc ("staging: comedi: addi_apci_1032: conform to new INSN_CONFIG_DIGITAL_TRIG")
    Cc: <stable@vger.kernel.org> #3.8+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200717145257.112660-3-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7d38ab3aa11e267983d9bc6046db2f073fc1de3
Author: Rustam Kovhaev <rkovhaev@gmail.com>
Date:   Wed Jul 22 09:10:52 2020 -0700

    staging: wlan-ng: properly check endpoint types
    
    commit faaff9765664009c1c7c65551d32e9ed3b1dda8f upstream.
    
    As syzkaller detected, wlan-ng driver does not do sanity check of
    endpoints in prism2sta_probe_usb(), add check for xfer direction and type
    
    Reported-and-tested-by: syzbot+c2a1fa67c02faa0de723@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=c2a1fa67c02faa0de723
    Signed-off-by: Rustam Kovhaev <rkovhaev@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200722161052.999754-1-rkovhaev@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1913ba0d5284f71812829dbb7053db69887711a
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Jul 23 14:41:29 2020 -0500

    Revert "cifs: Fix the target file was deleted when rename failed."
    
    commit 0e6705182d4e1b77248a93470d6d7b3013d59b30 upstream.
    
    This reverts commit 9ffad9263b467efd8f8dc7ae1941a0a655a2bab2.
    
    Upon additional testing with older servers, it was found that
    the original commit introduced a regression when using the old SMB1
    dialect and rsyncing over an existing file.
    
    The patch will need to be respun to address this, likely including
    a larger refactoring of the SMB1 and SMB3 rename code paths to make
    it less confusing and also to address some additional rename error
    cases that SMB3 may be able to workaround.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reported-by: Patrick Fernie <patrick.fernie@gmail.com>
    CC: Stable <stable@vger.kernel.org>
    Acked-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Acked-by: Pavel Shilovsky <pshilov@microsoft.com>
    Acked-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fffb773c4d93f1415a46192057a8c940917606e4
Author: Forest Crossman <cyrozap@gmail.com>
Date:   Fri Jul 17 06:27:34 2020 -0500

    usb: xhci: Fix ASM2142/ASM3142 DMA addressing
    
    commit dbb0897e805f2ab1b8bc358f6c3d878a376b8897 upstream.
    
    The ASM2142/ASM3142 (same PCI IDs) does not support full 64-bit DMA
    addresses, which can cause silent memory corruption or IOMMU errors on
    platforms that use the upper bits. Add the XHCI_NO_64BIT_SUPPORT quirk
    to fix this issue.
    
    Signed-off-by: Forest Crossman <cyrozap@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200717112734.328432-1-cyrozap@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1db23a67fb7a864be8d161f71448ce00127ef5e
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Fri Jul 10 13:57:52 2020 +0800

    usb: xhci-mtk: fix the failure of bandwidth allocation
    
    commit 5ce1a24dd98c00a57a8fa13660648abf7e08e3ef upstream.
    
    The wMaxPacketSize field of endpoint descriptor may be zero
    as default value in alternate interface, and they are not
    actually selected when start stream, so skip them when try to
    allocate bandwidth.
    
    Cc: stable <stable@vger.kernel.org>
    Fixes: 0cbd4b34cda9 ("xhci: mediatek: support MTK xHCI host controller")
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/1594360672-2076-1-git-send-email-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1e622d0d979ac6da15ba929834263cd0190d0f3
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Fri Jul 17 00:12:15 2020 +0900

    binder: Don't use mmput() from shrinker function.
    
    commit f867c771f98891841c217fa8459244ed0dd28921 upstream.
    
    syzbot is reporting that mmput() from shrinker function has a risk of
    deadlock [1], for delayed_uprobe_add() from update_ref_ctr() calls
    kzalloc(GFP_KERNEL) with delayed_uprobe_lock held, and
    uprobe_clear_state() from __mmput() also holds delayed_uprobe_lock.
    
    Commit a1b2289cef92ef0e ("android: binder: drop lru lock in isolate
    callback") replaced mmput() with mmput_async() in order to avoid sleeping
    with spinlock held. But this patch replaces mmput() with mmput_async() in
    order not to start __mmput() from shrinker context.
    
    [1] https://syzkaller.appspot.com/bug?id=bc9e7303f537c41b2b0cc2dfcea3fc42964c2d45
    
    Reported-by: syzbot <syzbot+1068f09c44d151250c33@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+e5344baa319c9a96edec@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reviewed-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/4ba9adb2-43f5-2de0-22de-f6075c1fab50@i-love.sakura.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77c14a5e4db6d3b09ff665ebae85706317ff8af0
Author: Palmer Dabbelt <palmerdabbelt@google.com>
Date:   Thu Jul 16 11:57:26 2020 -0700

    RISC-V: Upgrade smp_mb__after_spinlock() to iorw,iorw
    
    [ Upstream commit 38b7c2a3ffb1fce8358ddc6006cfe5c038ff9963 ]
    
    While digging through the recent mmiowb preemption issue it came up that
    we aren't actually preventing IO from crossing a scheduling boundary.
    While it's a bit ugly to overload smp_mb__after_spinlock() with this
    behavior, it's what PowerPC is doing so there's some precedent.
    
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57880846a2860f8edf2d5fd8051055b76ee78149
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed May 27 15:53:46 2020 +0200

    x86: math-emu: Fix up 'cmp' insn for clang ias
    
    [ Upstream commit 81e96851ea32deb2c921c870eecabf335f598aeb ]
    
    The clang integrated assembler requires the 'cmp' instruction to
    have a length prefix here:
    
    arch/x86/math-emu/wm_sqrt.S:212:2: error: ambiguous instructions require an explicit suffix (could be 'cmpb', 'cmpw', or 'cmpl')
     cmp $0xffffffff,-24(%ebp)
     ^
    
    Make this a 32-bit comparison, which it was clearly meant to be.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lkml.kernel.org/r/20200527135352.1198078-1-arnd@arndb.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 768ae54563b7347f5c6bb97100a3161b726705e9
Author: Will Deacon <will@kernel.org>
Date:   Thu Feb 13 12:12:26 2020 +0000

    arm64: Use test_tsk_thread_flag() for checking TIF_SINGLESTEP
    
    [ Upstream commit 5afc78551bf5d53279036e0bf63314e35631d79f ]
    
    Rather than open-code test_tsk_thread_flag() at each callsite, simply
    replace the couple of offenders with calls to test_tsk_thread_flag()
    directly.
    
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e687db5f29739ab58428f45e50ba90a5b50992a
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Wed Jul 15 13:13:38 2020 +0100

    hwmon: (scmi) Fix potential buffer overflow in scmi_hwmon_probe()
    
    [ Upstream commit 3ce17cd2b94907f6d91b81b32848044b84c97606 ]
    
    SMATCH detected a potential buffer overflow in the manipulation of
    hwmon_attributes array inside the scmi_hwmon_probe function:
    
    drivers/hwmon/scmi-hwmon.c:226
     scmi_hwmon_probe() error: buffer overflow 'hwmon_attributes' 6 <= 9
    
    Fix it by statically declaring the size of the array as the maximum
    possible as defined by hwmon_max define.
    
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Link: https://lore.kernel.org/r/20200715121338.GA18761@e119603-lin.cambridge.arm.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebb591b87216e3ecda00d0938e23ecba152f5dc3
Author: Chu Lin <linchuyuan@google.com>
Date:   Thu Jul 9 04:06:12 2020 +0000

    hwmon: (adm1275) Make sure we are reading enough data for different chips
    
    [ Upstream commit 6d1d41c075a1a54ba03370e268171fec20e06563 ]
    
    Issue:
    When PEC is enabled, binding adm1272 to the adm1275 would
    fail due to PEC error. See below:
    adm1275: probe of xxxx failed with error -74
    
    Diagnosis:
    Per the datasheet of adm1272, adm1278, adm1293 and amd1294,
    PMON_CONFIG (0xd4) is 16bits wide. On the other hand,
    PMON_CONFIG (0xd4) for adm1275 is 8bits wide. The driver should not
    assume everything is 8bits wide and read only 8bits from it.
    
    Solution:
    If it is adm1272, adm1278, adm1293 and adm1294, use i2c_read_word.
    Else, use i2c_read_byte
    
    Testing:
    Binding adm1272 to the driver.
    The change is only tested on adm1272.
    
    Signed-off-by: Chu Lin <linchuyuan@google.com>
    Link: https://lore.kernel.org/r/20200709040612.3977094-1-linchuyuan@google.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2579a988647534ae5a45a243af4e123a3ede1f6f
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Fri Jun 26 16:17:47 2020 +0300

    usb: gadget: udc: gr_udc: fix memleak on error handling path in gr_ep_init()
    
    [ Upstream commit c8f8529e2c4141afa2ebb487ad48e8a6ec3e8c99 ]
    
    gr_ep_init() does not assign the allocated request anywhere if allocation
    of memory for the buffer fails. This is a memory leak fixed by the given
    patch.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70f61966ca82f68583463a1184968e5f9e6d5cc1
Author: Ilya Katsnelson <me@0upti.me>
Date:   Mon Jul 6 15:27:43 2020 -0700

    Input: synaptics - enable InterTouch for ThinkPad X1E 1st gen
    
    [ Upstream commit dcb00fc799dc03fd320e123e4c81b3278c763ea5 ]
    
    Tested on my own laptop, touchpad feels slightly more responsive with
    this on, though it might just be placebo.
    
    Signed-off-by: Ilya Katsnelson <me@0upti.me>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Link: https://lore.kernel.org/r/20200703143457.132373-1-me@0upti.me
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d30ad089eef0cf6e34353f5aae29be8118f04e2b
Author: Leonid Ravich <Leonid.Ravich@emc.com>
Date:   Wed Jul 1 21:48:12 2020 +0300

    dmaengine: ioat setting ioat timeout as module parameter
    
    [ Upstream commit 87730ccbddcb48478b1b88e88b14e73424130764 ]
    
    DMA transaction time to completion is a function of PCI bandwidth,
    transaction size and a queue depth.  So hard coded value for timeouts
    might be wrong for some scenarios.
    
    Signed-off-by: Leonid Ravich <Leonid.Ravich@emc.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20200701184816.29138-1-leonid.ravich@dell.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73ebf5be54b108e71ceb18ef46b7d343d8bfb2e6
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Fri Jul 3 14:15:18 2020 +0300

    hwmon: (aspeed-pwm-tacho) Avoid possible buffer overflow
    
    [ Upstream commit bc4071aafcf4d0535ee423b69167696d6c03207d ]
    
    aspeed_create_fan() reads a pwm_port value using of_property_read_u32().
    If pwm_port will be more than ARRAY_SIZE(pwm_port_params), there will be
    a buffer overflow in
    aspeed_create_pwm_port()->aspeed_set_pwm_port_enable(). The patch fixes
    the potential buffer overflow.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Link: https://lore.kernel.org/r/20200703111518.9644-1-novikov@ispras.ru
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 545f4f98e29e2c8346b83c3f42df0a3d907c4df9
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Fri Jul 3 12:33:15 2020 +0200

    regmap: dev_get_regmap_match(): fix string comparison
    
    [ Upstream commit e84861fec32dee8a2e62bbaa52cded6b05a2a456 ]
    
    This function is used by dev_get_regmap() to retrieve a regmap for the
    specified device. If the device has more than one regmap, the name parameter
    can be used to specify one.
    
    The code here uses a pointer comparison to check for equal strings. This
    however will probably always fail, as the regmap->name is allocated via
    kstrdup_const() from the regmap's config->name.
    
    Fix this by using strcmp() instead.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Link: https://lore.kernel.org/r/20200703103315.267996-1-mkl@pengutronix.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3703082e838681cdb98700b9c1cceefc644e5cc
Author: leilk.liu <leilk.liu@mediatek.com>
Date:   Wed Jul 1 17:00:20 2020 +0800

    spi: mediatek: use correct SPI_CFG2_REG MACRO
    
    [ Upstream commit 44b37eb79e16a56cb30ba55b2da452396b941e7a ]
    
    this patch use correct SPI_CFG2_REG offset.
    
    Signed-off-by: leilk.liu <leilk.liu@mediatek.com>
    Link: https://lore.kernel.org/r/20200701090020.7935-1-leilk.liu@mediatek.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8af9e4d7063bcb3801dffeb7db4d0eb24aeeaff
Author: Merlijn Wajer <merlijn@wizzup.org>
Date:   Tue Jun 30 11:47:04 2020 -0700

    Input: add `SW_MACHINE_COVER`
    
    [ Upstream commit c463bb2a8f8d7d97aa414bf7714fc77e9d3b10df ]
    
    This event code represents the state of a removable cover of a device.
    Value 0 means that the cover is open or removed, value 1 means that the
    cover is closed.
    
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Merlijn Wajer <merlijn@wizzup.org>
    Link: https://lore.kernel.org/r/20200612125402.18393-2-merlijn@wizzup.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f1feb34df8d1d9c2883daf7ea853949c70d39ea
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Jun 24 14:46:26 2020 +0800

    dmaengine: tegra210-adma: Fix runtime PM imbalance on error
    
    [ Upstream commit 5b78fac4b1ba731cf4177fdbc1e3a4661521bcd0 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus a pairing decrement is needed on
    the error handling path to keep the counter balanced.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20200624064626.19855-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 652af511538d46ea6e6359c78675363698dc49e9
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Jun 20 14:32:29 2020 +0200

    HID: apple: Disable Fn-key key-re-mapping on clone keyboards
    
    [ Upstream commit a5d81646fa294eed57786a9310b06ca48902adf8 ]
    
    The Maxxter KB-BT-001 Bluetooth keyboard, which looks somewhat like the
    Apple Wireless Keyboard, is using the vendor and product IDs (05AC:0239)
    of the Apple Wireless Keyboard (2009 ANSI version) <sigh>.
    
    But its F1 - F10 keys are marked as sending F1 - F10, not the special
    functions hid-apple.c maps them too; and since its descriptors do not
    contain the HID_UP_CUSTOM | 0x0003 usage apple-hid looks for for the
    Fn-key, apple_setup_input() never gets called, so F1 - F6 are mapped
    to key-codes which have not been set in the keybit array causing them
    to not send any events at all.
    
    The lack of a usage code matching the Fn key in the clone is actually
    useful as this allows solving this problem in a generic way.
    
    This commits adds a fn_found flag and it adds a input_configured
    callback which checks if this flag is set once all usages have been
    mapped. If it is not set, then assume this is a clone and clear the
    quirks bitmap so that the hid-apple code does not add any special
    handling to this keyboard.
    
    This fixes F1 - F6 not sending anything at all and F7 - F12 sending
    the wrong codes on the Maxxter KB-BT-001 Bluetooth keyboard and on
    similar clones.
    
    Cc: Joao Moreno <mail@joaomoreno.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77e1ed91b139c5578bdb6f7ef2297f87c3d42558
Author: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
Date:   Tue Jun 16 18:44:18 2020 +0200

    HID: steam: fixes race in handling device list.
    
    [ Upstream commit 2d3f53a80e4eed078669853a178ed96d88f74143 ]
    
    Using uhid and KASAN this driver crashed because it was getting
    several connection events where it only expected one. Then the
    device was added several times to the static device list and it got
    corrupted.
    
    This patch checks if the device is already in the list before adding
    it.
    
    Signed-off-by: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
    Tested-by: Siarhei Vishniakou <svv@google.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a72743c26580d6ff24082d66e65a6ffb49b7617
Author: Caiyuan Xie <caiyuan.xie@cn.alps.com>
Date:   Fri May 22 05:06:10 2020 -0400

    HID: alps: support devices with report id 2
    
    [ Upstream commit aa3c439c144f0a465ed1f28f11c772886fb02b35 ]
    
    Add support for devices which that have reports with id == 2
    
    Signed-off-by: Caiyuan Xie <caiyuan.xie@cn.alps.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3384b7b0b47c3b5fca770bba16ae36e2ac694e48
Author: Federico Ricchiuto <fed.ricchiuto@gmail.com>
Date:   Mon Jun 15 22:49:11 2020 +0200

    HID: i2c-hid: add Mediacom FlexBook edge13 to descriptor override
    
    [ Upstream commit 43e666acb79f3d355dd89bf20f4d25d3b15da13e ]
    
    The Mediacom FlexBook edge13 uses the SIPODEV SP1064 touchpad, which does not
    supply descriptors, so it has to be added to the override list.
    
    Signed-off-by: Federico Ricchiuto <fed.ricchiuto@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0387da429a3470d33ac374f91ab93bf621983d62
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Thu Jul 23 21:15:52 2020 -0700

    scripts/gdb: fix lx-symbols 'gdb.error' while loading modules
    
    [ Upstream commit 7359608a271ce81803de148befefd309baf88c76 ]
    
    Commit ed66f991bb19 ("module: Refactor section attr into bin attribute")
    removed the 'name' field from 'struct module_sect_attr' triggering the
    following error when invoking lx-symbols:
    
      (gdb) lx-symbols
      loading vmlinux
      scanning for modules in linux/build
      loading @0xffffffffc014f000: linux/build/drivers/net/tun.ko
      Python Exception <class 'gdb.error'> There is no member named name.:
      Error occurred in Python: There is no member named name.
    
    This patch fixes the issue taking the module name from the 'struct
    attribute'.
    
    Fixes: ed66f991bb19 ("module: Refactor section attr into bin attribute")
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Jan Kiszka <jan.kiszka@siemens.com>
    Reviewed-by: Kieran Bingham <kbingham@kernel.org>
    Link: http://lkml.kernel.org/r/20200722102239.313231-1-sgarzare@redhat.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b031bbd729d31722ec085dfadc20f9985d2f2af
Author: Pi-Hsun Shih <pihsun@chromium.org>
Date:   Thu Jul 23 21:15:43 2020 -0700

    scripts/decode_stacktrace: strip basepath from all paths
    
    [ Upstream commit d178770d8d21489abf5bafefcbb6d5243b482e9a ]
    
    Currently the basepath is removed only from the beginning of the string.
    When the symbol is inlined and there's multiple line outputs of
    addr2line, only the first line would have basepath removed.
    
    Change to remove the basepath prefix from all lines.
    
    Fixes: 31013836a71e ("scripts/decode_stacktrace: match basepath using shell prefix operator, not regex")
    Co-developed-by: Shik Chen <shik@chromium.org>
    Signed-off-by: Pi-Hsun Shih <pihsun@chromium.org>
    Signed-off-by: Shik Chen <shik@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Nicolas Boichat <drinkcat@chromium.org>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Link: http://lkml.kernel.org/r/20200720082709.252805-1-pihsun@chromium.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fede296d5243931d84f9842243e2316fbb8ab90
Author: Matthew Howell <matthew.howell@sealevel.com>
Date:   Wed Jul 22 16:11:24 2020 -0400

    serial: exar: Fix GPIO configuration for Sealevel cards based on XR17V35X
    
    [ Upstream commit 5fdbe136ae19ab751daaa4d08d9a42f3e30d17f9 ]
    
    Sealevel XR17V35X based devices are inoperable on kernel versions
    4.11 and above due to a change in the GPIO preconfiguration introduced in
    commit
    7dea8165f1d. This patch fixes this by preconfiguring the GPIO on Sealevel
    cards to the value (0x00) used prior to commit 7dea8165f1d
    
    With GPIOs preconfigured as per commit 7dea8165f1d all ports on
    Sealevel XR17V35X based devices become stuck in high impedance
    mode, regardless of dip-switch or software configuration. This
    causes the device to become effectively unusable. This patch (in
    various forms) has been distributed to our customers and no issues
    related to it have been reported.
    
    Fixes: 7dea8165f1d6 ("serial: exar: Preconfigure xr17v35x MPIOs as output")
    Signed-off-by: Matthew Howell <matthew.howell@sealevel.com>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2007221605270.13247@tstest-VirtualBox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ca307f3fa591bc29b67356a501d3de4b106399c
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jul 22 16:31:54 2020 -0700

    bonding: check return value of register_netdevice() in bond_newlink()
    
    [ Upstream commit c75d1d5248c0c97996051809ad0e9f154ba5d76e ]
    
    Very similar to commit 544f287b8495
    ("bonding: check error value of register_netdevice() immediately"),
    we should immediately check the return value of register_netdevice()
    before doing anything else.
    
    Fixes: 005db31d5f5f ("bonding: set carrier off for devices created through netlink")
    Reported-and-tested-by: syzbot+bbc3a11c4da63c1b74d6@syzkaller.appspotmail.com
    Cc: Beniamino Galvani <bgalvani@redhat.com>
    Cc: Taehee Yoo <ap420073@gmail.com>
    Cc: Jay Vosburgh <j.vosburgh@gmail.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c3f2d342b90c24d8fc5dd9cb66f51fba058c566
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sat Jul 4 15:38:29 2020 +0200

    i2c: rcar: always clear ICSAR to avoid side effects
    
    [ Upstream commit eb01597158ffb1853a7a7fc2c57d4c844640f75e ]
    
    On R-Car Gen2, we get a timeout when reading from the address set in
    ICSAR, even though the slave interface is disabled. Clearing it fixes
    this situation. Note that Gen3 is not affected.
    
    To reproduce: bind and undbind an I2C slave on some bus, run
    'i2cdetect' on that bus.
    
    Fixes: de20d1857dd6 ("i2c: rcar: add slave support")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 535f366f079650db7f2de9e526fa9d82e3c618ac
Author: Wang Hai <wanghai38@huawei.com>
Date:   Fri Jul 17 10:50:49 2020 +0800

    net: ethernet: ave: Fix error returns in ave_init
    
    [ Upstream commit 1264d7fa3a64d8bea7aebb77253f917947ffda25 ]
    
    When regmap_update_bits failed in ave_init(), calls of the functions
    reset_control_assert() and clk_disable_unprepare() were missed.
    Add goto out_reset_assert to do this.
    
    Fixes: 57878f2f4697 ("net: ethernet: ave: add support for phy-mode setting of system controller")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Reviewed-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a330edef54f270c440034419f0694cee64c3075
Author: guodeqing <geffrey.guo@huawei.com>
Date:   Thu Jul 16 16:12:08 2020 +0800

    ipvs: fix the connection sync failed in some cases
    
    [ Upstream commit 8210e344ccb798c672ab237b1a4f241bda08909b ]
    
    The sync_thread_backup only checks sk_receive_queue is empty or not,
    there is a situation which cannot sync the connection entries when
    sk_receive_queue is empty and sk_rmem_alloc is larger than sk_rcvbuf,
    the sync packets are dropped in __udp_enqueue_schedule_skb, this is
    because the packets in reader_queue is not read, so the rmem is
    not reclaimed.
    
    Here I add the check of whether the reader_queue of the udp sock is
    empty or not to solve this problem.
    
    Fixes: 2276f58ac589 ("udp: use a separate rx queue for packet reception")
    Reported-by: zhouxudong <zhouxudong8@huawei.com>
    Signed-off-by: guodeqing <geffrey.guo@huawei.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66bc6762be1958ecb31577e033224e009fe7137e
Author: Alexander Lobakin <alobakin@marvell.com>
Date:   Tue Jul 21 17:41:42 2020 +0300

    qed: suppress "don't support RoCE & iWARP" flooding on HW init
    
    [ Upstream commit 1ea999039fe7c7953da2fbb7ca7c3ef00064d328 ]
    
    Change the verbosity of the "don't support RoCE & iWARP simultaneously"
    warning to debug level to stop flooding on driver/hardware initialization:
    
    [    4.783230] qede 01:00.00: Storm FW 8.37.7.0, Management FW 8.52.9.0
    [MBI 15.10.6] [eth0]
    [    4.810020] [qed_rdma_set_pf_params:2076()]Current day drivers don't
    support RoCE & iWARP simultaneously on the same PF. Default to RoCE-only
    [    4.861186] qede 01:00.01: Storm FW 8.37.7.0, Management FW 8.52.9.0
    [MBI 15.10.6] [eth1]
    [    4.893311] [qed_rdma_set_pf_params:2076()]Current day drivers don't
    support RoCE & iWARP simultaneously on the same PF. Default to RoCE-only
    [    5.181713] qede a1:00.00: Storm FW 8.37.7.0, Management FW 8.52.9.0
    [MBI 15.10.6] [eth2]
    [    5.224740] [qed_rdma_set_pf_params:2076()]Current day drivers don't
    support RoCE & iWARP simultaneously on the same PF. Default to RoCE-only
    [    5.276449] qede a1:00.01: Storm FW 8.37.7.0, Management FW 8.52.9.0
    [MBI 15.10.6] [eth3]
    [    5.318671] [qed_rdma_set_pf_params:2076()]Current day drivers don't
    support RoCE & iWARP simultaneously on the same PF. Default to RoCE-only
    [    5.369548] qede a1:00.02: Storm FW 8.37.7.0, Management FW 8.52.9.0
    [MBI 15.10.6] [eth4]
    [    5.411645] [qed_rdma_set_pf_params:2076()]Current day drivers don't
    support RoCE & iWARP simultaneously on the same PF. Default to RoCE-only
    
    Fixes: e0a8f9de16fc ("qed: Add iWARP enablement support")
    Signed-off-by: Alexander Lobakin <alobakin@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20d385250f884e6a9fcfb492ff7f2fff50aade30
Author: Liu Jian <liujian56@huawei.com>
Date:   Mon Jul 20 22:31:49 2020 +0800

    mlxsw: destroy workqueue when trap_register in mlxsw_emad_init
    
    [ Upstream commit 5dbaeb87f2b309936be0aeae00cbc9e7f20ab296 ]
    
    When mlxsw_core_trap_register fails in mlxsw_emad_init,
    destroy_workqueue() shouled be called to destroy mlxsw_core->emad_wq.
    
    Fixes: d965465b60ba ("mlxsw: core: Fix possible deadlock")
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b54cf8734d9ac4cfc428f864e7a2fae70880cf1a
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Sun Jul 19 12:11:24 2020 +0000

    bonding: check error value of register_netdevice() immediately
    
    [ Upstream commit 544f287b84959203367cd29e16e772717612fab4 ]
    
    If register_netdevice() is failed, net_device should not be used
    because variables are uninitialized or freed.
    So, the routine should be stopped immediately.
    But, bond_create() doesn't check return value of register_netdevice()
    immediately. That will result in a panic because of using uninitialized
    or freed memory.
    
    Test commands:
        modprobe netdev-notifier-error-inject
        echo -22 > /sys/kernel/debug/notifier-error-inject/netdev/\
    actions/NETDEV_REGISTER/error
        modprobe bonding max_bonds=3
    
    Splat looks like:
    [  375.028492][  T193] general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b6b: 0000 [#1] SMP DEBUG_PAGEALLOC PTI
    [  375.033207][  T193] CPU: 2 PID: 193 Comm: kworker/2:2 Not tainted 5.8.0-rc4+ #645
    [  375.036068][  T193] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    [  375.039673][  T193] Workqueue: events linkwatch_event
    [  375.041557][  T193] RIP: 0010:dev_activate+0x4a/0x340
    [  375.043381][  T193] Code: 40 a8 04 0f 85 db 00 00 00 8b 83 08 04 00 00 85 c0 0f 84 0d 01 00 00 31 d2 89 d0 48 8d 04 40 48 c1 e0 07 48 03 83 00 04 00 00 <48> 8b 48 10 f6 41 10 01 75 08 f0 80 a1 a0 01 00 00 fd 48 89 48 08
    [  375.050267][  T193] RSP: 0018:ffff9f8facfcfdd8 EFLAGS: 00010202
    [  375.052410][  T193] RAX: 6b6b6b6b6b6b6b6b RBX: ffff9f8fae6ea000 RCX: 0000000000000006
    [  375.055178][  T193] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff9f8fae6ea000
    [  375.057762][  T193] RBP: ffff9f8fae6ea000 R08: 0000000000000000 R09: 0000000000000000
    [  375.059810][  T193] R10: 0000000000000001 R11: 0000000000000000 R12: ffff9f8facfcfe08
    [  375.061892][  T193] R13: ffffffff883587e0 R14: 0000000000000000 R15: ffff9f8fae6ea580
    [  375.063931][  T193] FS:  0000000000000000(0000) GS:ffff9f8fbae00000(0000) knlGS:0000000000000000
    [  375.066239][  T193] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  375.067841][  T193] CR2: 00007f2f542167a0 CR3: 000000012cee6002 CR4: 00000000003606e0
    [  375.069657][  T193] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  375.071471][  T193] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  375.073269][  T193] Call Trace:
    [  375.074005][  T193]  linkwatch_do_dev+0x4d/0x50
    [  375.075052][  T193]  __linkwatch_run_queue+0x10b/0x200
    [  375.076244][  T193]  linkwatch_event+0x21/0x30
    [  375.077274][  T193]  process_one_work+0x252/0x600
    [  375.078379][  T193]  ? process_one_work+0x600/0x600
    [  375.079518][  T193]  worker_thread+0x3c/0x380
    [  375.080534][  T193]  ? process_one_work+0x600/0x600
    [  375.081668][  T193]  kthread+0x139/0x150
    [  375.082567][  T193]  ? kthread_park+0x90/0x90
    [  375.083567][  T193]  ret_from_fork+0x22/0x30
    
    Fixes: e826eafa65c6 ("bonding: Call netif_carrier_off after register_netdevice")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac26692f7c92b811712c11696308f5ad391c77fc
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Jul 16 11:50:38 2020 +0800

    net: smc91x: Fix possible memory leak in smc_drv_probe()
    
    [ Upstream commit bca9749b1aa23d964d3ab930938af66dbf887f15 ]
    
    If try_toggle_control_gpio() failed in smc_drv_probe(), free_netdev(ndev)
    should be called to free the ndev created earlier. Otherwise, a memleak
    will occur.
    
    Fixes: 7d2911c43815 ("net: smc91x: Fix gpios for device tree based booting")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2781ec63dfd2ff93fb5e6800d8927070b11b55c1
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sat Jul 11 09:10:30 2020 +0800

    drm: sun4i: hdmi: Fix inverted HPD result
    
    [ Upstream commit baa1841eb797eadce6c907bdaed7cd6f01815404 ]
    
    When the extra HPD polling in sun4i_hdmi was removed, the result of
    HPD was accidentally inverted.
    
    Fix this by inverting the check.
    
    Fixes: bda8eaa6dee7 ("drm: sun4i: hdmi: Remove extra HPD polling")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Tested-by: Mans Rullgard <mans@mansr.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200711011030.21997-1-wens@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b42dd75d6d65a7910465a47f2b16d0e6db8f8fe
Author: Liu Jian <liujian56@huawei.com>
Date:   Fri Jul 17 17:01:21 2020 +0800

    ieee802154: fix one possible memleak in adf7242_probe
    
    [ Upstream commit 66673f96f0f968b991dc38be06102246919c663c ]
    
    When probe fail, we should destroy the workqueue.
    
    Fixes: 2795e8c25161 ("net: ieee802154: fix a potential NULL pointer dereference")
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Link: https://lore.kernel.org/r/20200717090121.2143-1-liujian56@huawei.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4adc5fb3183f8262e99bb61078d273fd58de5378
Author: Sergey Organov <sorganov@gmail.com>
Date:   Wed Jul 15 19:10:00 2020 +0300

    net: dp83640: fix SIOCSHWTSTAMP to update the struct with actual configuration
    
    [ Upstream commit 473309fb8372365ad211f425bca760af800e10a7 ]
    
    From Documentation/networking/timestamping.txt:
    
      A driver which supports hardware time stamping shall update the
      struct with the actual, possibly more permissive configuration.
    
    Do update the struct passed when we upscale the requested time
    stamping mode.
    
    Fixes: cb646e2b02b2 ("ptp: Added a clock driver for the National Semiconductor PHYTER.")
    Signed-off-by: Sergey Organov <sorganov@gmail.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97ae6f4703a781d62e3d8016da9cdfb4261b803a
Author: George Kennedy <george.kennedy@oracle.com>
Date:   Wed Jul 15 09:59:31 2020 -0400

    ax88172a: fix ax88172a_unbind() failures
    
    [ Upstream commit c28d9a285668c799eeae2f7f93e929a6028a4d6d ]
    
    If ax88172a_unbind() fails, make sure that the return code is
    less than zero so that cleanup is done properly and avoid UAF.
    
    Fixes: a9a51bd727d1 ("ax88172a: fix information leak on short answers")
    Signed-off-by: George Kennedy <george.kennedy@oracle.com>
    Reported-by: syzbot+4cd84f527bf4a10fc9c1@syzkaller.appspotmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db81667f31bbff9a96460d793872899d6ed13abe
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Jul 14 13:00:27 2020 +0200

    hippi: Fix a size used in a 'pci_free_consistent()' in an error handling path
    
    [ Upstream commit 3195c4706b00106aa82c73acd28340fa8fc2bfc1 ]
    
    The size used when calling 'pci_alloc_consistent()' and
    'pci_free_consistent()' should match.
    
    Fix it and have it consistent with the corresponding call in 'rr_close()'.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit deae6e3a4257d72e583b241c3d458a090fdb7e77
Author: Matthew Gerlach <matthew.gerlach@linux.intel.com>
Date:   Mon Jul 13 14:10:03 2020 +0800

    fpga: dfl: fix bug in port reset handshake
    
    [ Upstream commit 8614afd689df59d9ce019439389be20bd788a897 ]
    
    When putting the port in reset, driver must wait for the soft reset
    acknowledgment bit instead of the soft reset bit.
    
    Fixes: 47c1b19c160f (fpga: dfl: afu: add port ops support)
    Signed-off-by: Matthew Gerlach <matthew.gerlach@linux.intel.com>
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Acked-by: Wu Hao <hao.wu@intel.com>
    Reviewed-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 060a740baf3a48002fa4a3249d05989eb519e5b8
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Sat Jul 11 20:48:23 2020 -0400

    bnxt_en: Fix race when modifying pause settings.
    
    [ Upstream commit 163e9ef63641a02de4c95cd921577265c52e1ce2 ]
    
    The driver was modified to not rely on rtnl lock to protect link
    settings about 2 years ago.  The pause setting was missed when
    making that change.  Fix it by acquiring link_lock mutex before
    calling bnxt_hwrm_set_pause().
    
    Fixes: e2dc9b6e38fa ("bnxt_en: Don't use rtnl lock to protect link change logic in workqueue.")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Reviewed-by: Edwin Peer <edwin.peer@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf93dda2fd397fcb05d4425010f35f53ec747dac
Author: Robbie Ko <robbieko@synology.com>
Date:   Mon Jul 20 09:42:09 2020 +0800

    btrfs: fix page leaks after failure to lock page for delalloc
    
    commit 5909ca110b29aa16b23b52b8de8d3bb1035fd738 upstream.
    
    When locking pages for delalloc, we check if it's dirty and mapping still
    matches. If it does not match, we need to return -EAGAIN and release all
    pages. Only the current page was put though, iterate over all the
    remaining pages too.
    
    CC: stable@vger.kernel.org # 4.14+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Robbie Ko <robbieko@synology.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fae5cc5af3e29b1e439414e10089ca7ef520b69
Author: Boris Burkov <boris@bur.io>
Date:   Thu Jul 16 13:29:46 2020 -0700

    btrfs: fix mount failure caused by race with umount
    
    commit 48cfa61b58a1fee0bc49eef04f8ccf31493b7cdd upstream.
    
    It is possible to cause a btrfs mount to fail by racing it with a slow
    umount. The crux of the sequence is generic_shutdown_super not yet
    calling sop->put_super before btrfs_mount_root calls btrfs_open_devices.
    If that occurs, btrfs_open_devices will decide the opened counter is
    non-zero, increment it, and skip resetting fs_devices->total_rw_bytes to
    0. From here, mount will call sget which will result in grab_super
    trying to take the super block umount semaphore. That semaphore will be
    held by the slow umount, so mount will block. Before up-ing the
    semaphore, umount will delete the super block, resulting in mount's sget
    reliably allocating a new one, which causes the mount path to dutifully
    fill it out, and increment total_rw_bytes a second time, which causes
    the mount to fail, as we see double the expected bytes.
    
    Here is the sequence laid out in greater detail:
    
    CPU0                                                    CPU1
    down_write sb->s_umount
    btrfs_kill_super
      kill_anon_super(sb)
        generic_shutdown_super(sb);
          shrink_dcache_for_umount(sb);
          sync_filesystem(sb);
          evict_inodes(sb); // SLOW
    
                                                  btrfs_mount_root
                                                    btrfs_scan_one_device
                                                    fs_devices = device->fs_devices
                                                    fs_info->fs_devices = fs_devices
                                                    // fs_devices-opened makes this a no-op
                                                    btrfs_open_devices(fs_devices, mode, fs_type)
                                                    s = sget(fs_type, test, set, flags, fs_info);
                                                      find sb in s_instances
                                                      grab_super(sb);
                                                        down_write(&s->s_umount); // blocks
    
          sop->put_super(sb)
            // sb->fs_devices->opened == 2; no-op
          spin_lock(&sb_lock);
          hlist_del_init(&sb->s_instances);
          spin_unlock(&sb_lock);
          up_write(&sb->s_umount);
                                                        return 0;
                                                      retry lookup
                                                      don't find sb in s_instances (deleted by CPU0)
                                                      s = alloc_super
                                                      return s;
                                                    btrfs_fill_super(s, fs_devices, data)
                                                      open_ctree // fs_devices total_rw_bytes improperly set!
                                                        btrfs_read_chunk_tree
                                                          read_one_dev // increment total_rw_bytes again!!
                                                          super_total_bytes < fs_devices->total_rw_bytes // ERROR!!!
    
    To fix this, we clear total_rw_bytes from within btrfs_read_chunk_tree
    before the calls to read_one_dev, while holding the sb umount semaphore
    and the uuid mutex.
    
    To reproduce, it is sufficient to dirty a decent number of inodes, then
    quickly umount and mount.
    
      for i in $(seq 0 500)
      do
        dd if=/dev/zero of="/mnt/foo/$i" bs=1M count=1
      done
      umount /mnt/foo&
      mount /mnt/foo
    
    does the trick for me.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Boris Burkov <boris@bur.io>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18a1602c2de19aa2d38b7932b7fc4cd15cb063bc
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Jul 13 15:11:56 2020 +0100

    btrfs: fix double free on ulist after backref resolution failure
    
    commit 580c079b5766ac706f56eec5c79aee4bf929fef6 upstream.
    
    At btrfs_find_all_roots_safe() we allocate a ulist and set the **roots
    argument to point to it. However if later we fail due to an error returned
    by find_parent_nodes(), we free that ulist but leave a dangling pointer in
    the **roots argument. Upon receiving the error, a caller of this function
    can attempt to free the same ulist again, resulting in an invalid memory
    access.
    
    One such scenario is during qgroup accounting:
    
    btrfs_qgroup_account_extents()
    
     --> calls btrfs_find_all_roots() passes &new_roots (a stack allocated
         pointer) to btrfs_find_all_roots()
    
       --> btrfs_find_all_roots() just calls btrfs_find_all_roots_safe()
           passing &new_roots to it
    
         --> allocates ulist and assigns its address to **roots (which
             points to new_roots from btrfs_qgroup_account_extents())
    
         --> find_parent_nodes() returns an error, so we free the ulist
             and leave **roots pointing to it after returning
    
     --> btrfs_qgroup_account_extents() sees btrfs_find_all_roots() returned
         an error and jumps to the label 'cleanup', which just tries to
         free again the same ulist
    
    Stack trace example:
    
     ------------[ cut here ]------------
     BTRFS: tree first key check failed
     WARNING: CPU: 1 PID: 1763215 at fs/btrfs/disk-io.c:422 btrfs_verify_level_key+0xe0/0x180 [btrfs]
     Modules linked in: dm_snapshot dm_thin_pool (...)
     CPU: 1 PID: 1763215 Comm: fsstress Tainted: G        W         5.8.0-rc3-btrfs-next-64 #1
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
     RIP: 0010:btrfs_verify_level_key+0xe0/0x180 [btrfs]
     Code: 28 5b 5d (...)
     RSP: 0018:ffffb89b473779a0 EFLAGS: 00010286
     RAX: 0000000000000000 RBX: ffff90397759bf08 RCX: 0000000000000000
     RDX: 0000000000000001 RSI: 0000000000000027 RDI: 00000000ffffffff
     RBP: ffff9039a419c000 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000000 R11: ffffb89b43301000 R12: 000000000000005e
     R13: ffffb89b47377a2e R14: ffffb89b473779af R15: 0000000000000000
     FS:  00007fc47e1e1000(0000) GS:ffff9039ac200000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007fc47e1df000 CR3: 00000003d9e4e001 CR4: 00000000003606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      read_block_for_search+0xf6/0x350 [btrfs]
      btrfs_next_old_leaf+0x242/0x650 [btrfs]
      resolve_indirect_refs+0x7cf/0x9e0 [btrfs]
      find_parent_nodes+0x4ea/0x12c0 [btrfs]
      btrfs_find_all_roots_safe+0xbf/0x130 [btrfs]
      btrfs_qgroup_account_extents+0x9d/0x390 [btrfs]
      btrfs_commit_transaction+0x4f7/0xb20 [btrfs]
      btrfs_sync_file+0x3d4/0x4d0 [btrfs]
      do_fsync+0x38/0x70
      __x64_sys_fdatasync+0x13/0x20
      do_syscall_64+0x5c/0xe0
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
     RIP: 0033:0x7fc47e2d72e3
     Code: Bad RIP value.
     RSP: 002b:00007fffa32098c8 EFLAGS: 00000246 ORIG_RAX: 000000000000004b
     RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fc47e2d72e3
     RDX: 00007fffa3209830 RSI: 00007fffa3209830 RDI: 0000000000000003
     RBP: 000000000000072e R08: 0000000000000001 R09: 0000000000000003
     R10: 0000000000000000 R11: 0000000000000246 R12: 00000000000003e8
     R13: 0000000051eb851f R14: 00007fffa3209970 R15: 00005607c4ac8b50
     irq event stamp: 0
     hardirqs last  enabled at (0): [<0000000000000000>] 0x0
     hardirqs last disabled at (0): [<ffffffffb8eb5e85>] copy_process+0x755/0x1eb0
     softirqs last  enabled at (0): [<ffffffffb8eb5e85>] copy_process+0x755/0x1eb0
     softirqs last disabled at (0): [<0000000000000000>] 0x0
     ---[ end trace 8639237550317b48 ]---
     BTRFS error (device sdc): tree first key mismatch detected, bytenr=62324736 parent_transid=94 key expected=(262,108,1351680) has=(259,108,1921024)
     general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI
     CPU: 2 PID: 1763215 Comm: fsstress Tainted: G        W         5.8.0-rc3-btrfs-next-64 #1
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
     RIP: 0010:ulist_release+0x14/0x60 [btrfs]
     Code: c7 07 00 (...)
     RSP: 0018:ffffb89b47377d60 EFLAGS: 00010282
     RAX: 6b6b6b6b6b6b6b6b RBX: ffff903959b56b90 RCX: 0000000000000000
     RDX: 0000000000000001 RSI: 0000000000270024 RDI: ffff9036e2adc840
     RBP: ffff9036e2adc848 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000000 R11: 0000000000000000 R12: ffff9036e2adc840
     R13: 0000000000000015 R14: ffff9039a419ccf8 R15: ffff90395d605840
     FS:  00007fc47e1e1000(0000) GS:ffff9039ac600000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007f8c1c0a51c8 CR3: 00000003d9e4e004 CR4: 00000000003606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      ulist_free+0x13/0x20 [btrfs]
      btrfs_qgroup_account_extents+0xf3/0x390 [btrfs]
      btrfs_commit_transaction+0x4f7/0xb20 [btrfs]
      btrfs_sync_file+0x3d4/0x4d0 [btrfs]
      do_fsync+0x38/0x70
      __x64_sys_fdatasync+0x13/0x20
      do_syscall_64+0x5c/0xe0
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
     RIP: 0033:0x7fc47e2d72e3
     Code: Bad RIP value.
     RSP: 002b:00007fffa32098c8 EFLAGS: 00000246 ORIG_RAX: 000000000000004b
     RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fc47e2d72e3
     RDX: 00007fffa3209830 RSI: 00007fffa3209830 RDI: 0000000000000003
     RBP: 000000000000072e R08: 0000000000000001 R09: 0000000000000003
     R10: 0000000000000000 R11: 0000000000000246 R12: 00000000000003e8
     R13: 0000000051eb851f R14: 00007fffa3209970 R15: 00005607c4ac8b50
     Modules linked in: dm_snapshot dm_thin_pool (...)
     ---[ end trace 8639237550317b49 ]---
     RIP: 0010:ulist_release+0x14/0x60 [btrfs]
     Code: c7 07 00 (...)
     RSP: 0018:ffffb89b47377d60 EFLAGS: 00010282
     RAX: 6b6b6b6b6b6b6b6b RBX: ffff903959b56b90 RCX: 0000000000000000
     RDX: 0000000000000001 RSI: 0000000000270024 RDI: ffff9036e2adc840
     RBP: ffff9036e2adc848 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000000 R11: 0000000000000000 R12: ffff9036e2adc840
     R13: 0000000000000015 R14: ffff9039a419ccf8 R15: ffff90395d605840
     FS:  00007fc47e1e1000(0000) GS:ffff9039ad200000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007f6a776f7d40 CR3: 00000003d9e4e002 CR4: 00000000003606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    
    Fix this by making btrfs_find_all_roots_safe() set *roots to NULL after
    it frees the ulist.
    
    Fixes: 8da6d5815c592b ("Btrfs: added btrfs_find_all_roots()")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4cbe15b501c504a19cce869c605c5e93f3e414e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jun 28 17:52:27 2020 +0200

    ASoC: rt5670: Correct RT5670_LDO_SEL_MASK
    
    commit 5cacc6f5764e94fa753b2c1f5f7f1f3f74286e82 upstream.
    
    The RT5670_PWR_ANLG1 register has 3 bits to select the LDO voltage,
    so the correct mask is 0x7 not 0x3.
    
    Because of this wrong mask we were programming the ldo bits
    to a setting of binary 001 (0x05 & 0x03) instead of binary 101
    when moving to SND_SOC_BIAS_PREPARE.
    
    According to the datasheet 001 is a reserved value, so no idea
    what it did, since the driver was working fine before I guess we
    got lucky and it does something which is ok.
    
    Fixes: 5e8351de740d ("ASoC: add RT5670 CODEC driver")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200628155231.71089-3-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c9d4b18bb8af4fa94e8db5fa4f465bdc2dbaddd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 17 10:40:23 2020 +0200

    ALSA: info: Drop WARN_ON() from buffer NULL sanity check
    
    commit 60379ba08532eca861e933b389526a4dc89e0c42 upstream.
    
    snd_info_get_line() has a sanity check of NULL buffer -- both buffer
    itself being NULL and buffer->buffer being NULL.  Basically both
    checks are valid and necessary, but the problem is that it's with
    snd_BUG_ON() macro that triggers WARN_ON().  The latter condition
    (NULL buffer->buffer) can be met arbitrarily by user since the buffer
    is allocated at the first write, so it means that user can trigger
    WARN_ON() at will.
    
    This patch addresses it by simply moving buffer->buffer NULL check out
    of snd_BUG_ON() so that spurious WARNING is no longer triggered.
    
    Reported-by: syzbot+e42d0746c3c3699b6061@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200717084023.5928-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2297df90b23b783ad3849a1301e22c1284d347dd
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Thu Jul 23 17:44:20 2020 +0200

    uprobes: Change handle_swbp() to send SIGTRAP with si_code=SI_KERNEL, to fix GDB regression
    
    commit fe5ed7ab99c656bd2f5b79b49df0e9ebf2cead8a upstream.
    
    If a tracee is uprobed and it hits int3 inserted by debugger, handle_swbp()
    does send_sig(SIGTRAP, current, 0) which means si_code == SI_USER. This used
    to work when this code was written, but then GDB started to validate si_code
    and now it simply can't use breakpoints if the tracee has an active uprobe:
    
            # cat test.c
            void unused_func(void)
            {
            }
            int main(void)
            {
                    return 0;
            }
    
            # gcc -g test.c -o test
            # perf probe -x ./test -a unused_func
            # perf record -e probe_test:unused_func gdb ./test -ex run
            GNU gdb (GDB) 10.0.50.20200714-git
            ...
            Program received signal SIGTRAP, Trace/breakpoint trap.
            0x00007ffff7ddf909 in dl_main () from /lib64/ld-linux-x86-64.so.2
            (gdb)
    
    The tracee hits the internal breakpoint inserted by GDB to monitor shared
    library events but GDB misinterprets this SIGTRAP and reports a signal.
    
    Change handle_swbp() to use force_sig(SIGTRAP), this matches do_int3_user()
    and fixes the problem.
    
    This is the minimal fix for -stable, arch/x86/kernel/uprobes.c is equally
    wrong; it should use send_sigtrap(TRAP_TRACE) instead of send_sig(SIGTRAP),
    but this doesn't confuse GDB and needs another x86-specific patch.
    
    Reported-by: Aaron Merey <amerey@redhat.com>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200723154420.GA32043@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a987f7ba02c97c731a1a96e148910b54734ebea
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Jul 14 14:56:39 2020 +0000

    IB/umem: fix reference count leak in ib_umem_odp_get()
    
    Add missing mmput() on error path to avoid ref-count leak.
    
    This problem is introduced by 79bb5b7ee177 ("RDMA/umem: Fix missing mmap_sem in get umem ODP call")
    and resolved by f27a0d50a4bc ("RDMA/umem: Use umem->owning_mm inside ODP").
    So, it's only needed in stable-4.14 and stable-4.19.
    
    Fixes: 79bb5b7ee177 ("RDMA/umem: Fix missing mmap_sem in get umem ODP call")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 675f4bbcd68330d2d0c96e1f716886727ad7dd1a
Author: Jon Maloy <jon.maloy@ericsson.com>
Date:   Thu Aug 15 16:42:50 2019 +0200

    tipc: clean up skb list lock handling on send path
    
    commit e654f9f53b45fde3fcc8051830b212c7a8f36148 upstream.
    
    The policy for handling the skb list locks on the send and receive paths
    is simple.
    
    - On the send path we never need to grab the lock on the 'xmitq' list
      when the destination is an exernal node.
    
    - On the receive path we always need to grab the lock on the 'inputq'
      list, irrespective of source node.
    
    However, when transmitting node local messages those will eventually
    end up on the receive path of a local socket, meaning that the argument
    'xmitq' in tipc_node_xmit() will become the 'ínputq' argument in  the
    function tipc_sk_rcv(). This has been handled by always initializing
    the spinlock of the 'xmitq' list at message creation, just in case it
    may end up on the receive path later, and despite knowing that the lock
    in most cases never will be used.
    
    This approach is inaccurate and confusing, and has also concealed the
    fact that the stated 'no lock grabbing' policy for the send path is
    violated in some cases.
    
    We now clean up this by never initializing the lock at message creation,
    instead doing this at the moment we find that the message actually will
    enter the receive path. At the same time we fix the four locations
    where we incorrectly access the spinlock on the send/error path.
    
    This patch also reverts commit d12cffe9329f ("tipc: ensure head->lock
    is initialised") which has now become redundant.
    
    CC: Eric Dumazet <edumazet@google.com>
    Reported-by: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [acj: backport v4.19 -stable
    - adjust context
    - skipped the hunk modifying non-existent function tipc_mcast_send_sync
    - additional comment ]
    Signed-off-by: Aviraj CJ <acj@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd6049a895a4d2287b0c9fd0fd8ea4c105d1a5b9
Author: Vladimir Oltean <olteanv@gmail.com>
Date:   Fri Aug 23 00:24:50 2019 +0300

    spi: spi-fsl-dspi: Exit the ISR with IRQ_NONE when it's not ours
    
    commit d41f36a6464a85c06ad920703d878e4491d2c023 upstream.
    
    The DSPI interrupt can be shared between two controllers at least on the
    LX2160A. In that case, the driver for one controller might misbehave and
    consume the other's interrupt. Fix this by actually checking if any of
    the bits in the status register have been asserted.
    
    Fixes: 13aed2392741 ("spi: spi-fsl-dspi: use IRQF_SHARED mode to request IRQ")
    Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
    Link: https://lore.kernel.org/r/20190822212450.21420-2-olteanv@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f0d0b36cec3dc51e978af069574eb1efac04ec9
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Wed Jul 15 13:04:15 2020 -0400

    SUNRPC reverting d03727b248d0 ("NFSv4 fix CLOSE not waiting for direct IO compeletion")
    
    commit 65caafd0d2145d1dd02072c4ced540624daeab40 upstream.
    
    Reverting commit d03727b248d0 "NFSv4 fix CLOSE not waiting for
    direct IO compeletion". This patch made it so that fput() by calling
    inode_dio_done() in nfs_file_release() would wait uninterruptably
    for any outstanding directIO to the file (but that wait on IO should
    be killable).
    
    The problem the patch was also trying to address was REMOVE returning
    ERR_ACCESS because the file is still opened, is supposed to be resolved
    by server returning ERR_FILE_OPEN and not ERR_ACCESS.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0c489e5430530a7021f4c889cd5931597e4b200
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jul 9 11:53:06 2020 +0200

    irqdomain/treewide: Keep firmware node unconditionally allocated
    
    [ Upstream commit e3beca48a45b5e0e6e6a4e0124276b8248dcc9bb ]
    
    Quite some non OF/ACPI users of irqdomains allocate firmware nodes of type
    IRQCHIP_FWNODE_NAMED or IRQCHIP_FWNODE_NAMED_ID and free them right after
    creating the irqdomain. The only purpose of these FW nodes is to convey
    name information. When this was introduced the core code did not store the
    pointer to the node in the irqdomain. A recent change stored the firmware
    node pointer in irqdomain for other reasons and missed to notice that the
    usage sites which do the alloc_fwnode/create_domain/free_fwnode sequence
    are broken by this. Storing a dangling pointer is dangerous itself, but in
    case that the domain is destroyed later on this leads to a double free.
    
    Remove the freeing of the firmware node after creating the irqdomain from
    all affected call sites to cure this.
    
    Fixes: 711419e504eb ("irqdomain: Add the missing assignment of domain->fwnode for named fwnode")
    Reported-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/873661qakd.fsf@nanos.tec.linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02c4ddf1896324e1ad50e72ad2d467d2c85cf75c
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Tue Jul 21 15:54:59 2020 -0300

    fuse: fix weird page warning
    
    commit a5005c3cda6eeb6b95645e6cc32f58dafeffc976 upstream.
    
    When PageWaiters was added, updating this check was missed.
    
    Reported-by: Nikolaus Rath <Nikolaus@rath.org>
    Reported-by: Hugh Dickins <hughd@google.com>
    Fixes: 62906027091f ("mm: add PageWaiters indicating tasks are waiting for a page bit")
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: André Almeida <andrealmeid@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ab0bb841556edec284762d72043c3b30df4c080
Author: Gavin Shan <gshan@redhat.com>
Date:   Tue Jun 30 17:52:27 2020 +1000

    drivers/firmware/psci: Fix memory leakage in alloc_init_cpu_groups()
    
    [ Upstream commit c377e67c6271954969384f9be1b1b71de13eba30 ]
    
    The CPU mask (@tmp) should be released on failing to allocate
    @cpu_groups or any of its elements. Otherwise, it leads to memory
    leakage because the CPU mask variable is dynamically allocated
    when CONFIG_CPUMASK_OFFSTACK is enabled.
    
    Signed-off-by: Gavin Shan <gshan@redhat.com>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Link: https://lore.kernel.org/r/20200630075227.199624-1-gshan@redhat.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07904836043b7059c2dee83f5e4db4b2f91a8dae
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Jun 23 16:39:13 2020 +1000

    drm/nouveau/i2c/g94-: increase NV_PMGR_DP_AUXCTL_TRANSACTREQ timeout
    
    [ Upstream commit 0156e76d388310a490aeb0f2fbb5b284ded3aecc ]
    
    Tegra TRM says worst-case reply time is 1216us, and this should fix some
    spurious timeouts that have been popping up.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ada9695a52ca79749c89af972db28f83dfe970b
Author: Tom Rix <trix@redhat.com>
Date:   Fri Jul 3 06:33:59 2020 -0700

    net: sky2: initialize return of gm_phy_read
    
    [ Upstream commit 28b18e4eb515af7c6661c3995c6e3c34412c2874 ]
    
    clang static analysis flags this garbage return
    
    drivers/net/ethernet/marvell/sky2.c:208:2: warning: Undefined or garbage value returned to caller [core.uninitialized.UndefReturn]
            return v;
            ^~~~~~~~
    
    static inline u16 gm_phy_read( ...
    {
            u16 v;
            __gm_phy_read(hw, port, reg, &v);
            return v;
    }
    
    __gm_phy_read can return without setting v.
    
    So handle similar to skge.c's gm_phy_read, initialize v.
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52359c2c8c08e45d6e291d88a4351bf76403e657
Author: Xie He <xie.he.0141@gmail.com>
Date:   Sun Jul 5 17:45:21 2020 -0700

    drivers/net/wan/lapbether: Fixed the value of hard_header_len
    
    [ Upstream commit 9dc829a135fb5927f1519de11286e2bbb79f5b66 ]
    
    When this driver transmits data,
      first this driver will remove a pseudo header of 1 byte,
      then the lapb module will prepend the LAPB header of 2 or 3 bytes,
      then this driver will prepend a length field of 2 bytes,
      then the underlying Ethernet device will prepend its own header.
    
    So, the header length required should be:
      -1 + 3 + 2 + "the header length needed by the underlying device".
    
    This patch fixes kernel panic when this driver is used with AF_PACKET
    SOCK_DGRAM sockets.
    
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdc6bf7b1da14f482f84297010cec0e61335c5d8
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Thu Jul 2 08:32:25 2020 -0700

    xtensa: update *pos in cpuinfo_op.next
    
    [ Upstream commit 0d5ab144429e8bd80889b856a44d56ab4a5cd59b ]
    
    Increment *pos in the cpuinfo_op.next to fix the following warning
    triggered by cat /proc/cpuinfo:
    
      seq_file: buggy .next function c_next did not update position index
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe9827577310fe60e3b1716ea7faef96546e44b0
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Thu Jun 4 13:37:10 2020 -0700

    xtensa: fix __sync_fetch_and_{and,or}_4 declarations
    
    [ Upstream commit 73f9941306d5ce030f3ffc7db425c7b2a798cf8e ]
    
    Building xtensa kernel with gcc-10 produces the following warnings:
      arch/xtensa/kernel/xtensa_ksyms.c:90:15: warning: conflicting types
        for built-in function ‘__sync_fetch_and_and_4’;
        expected ‘unsigned int(volatile void *, unsigned int)’
        [-Wbuiltin-declaration-mismatch]
      arch/xtensa/kernel/xtensa_ksyms.c:96:15: warning: conflicting types
        for built-in function ‘__sync_fetch_and_or_4’;
        expected ‘unsigned int(volatile void *, unsigned int)’
        [-Wbuiltin-declaration-mismatch]
    
    Fix declarations of these functions to avoid the warning.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fba1b38af76dec291d1519055d1efe14bc095d3
Author: Tom Rix <trix@redhat.com>
Date:   Sat Jun 27 06:32:42 2020 -0700

    scsi: scsi_transport_spi: Fix function pointer check
    
    [ Upstream commit 5aee52c44d9170591df65fafa1cd408acc1225ce ]
    
    clang static analysis flags several null function pointer problems.
    
    drivers/scsi/scsi_transport_spi.c:374:1: warning: Called function pointer is null (null dereference) [core.CallAndMessage]
    spi_transport_max_attr(offset, "%d\n");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Reviewing the store_spi_store_max macro
    
            if (i->f->set_##field)
                    return -EINVAL;
    
    should be
    
            if (!i->f->set_##field)
                    return -EINVAL;
    
    Link: https://lore.kernel.org/r/20200627133242.21618-1-trix@redhat.com
    Reviewed-by: James Bottomley <jejb@linux.ibm.com>
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95234da3124046837bb9d622eb426969b6fbe73c
Author: Markus Theil <markus.theil@tu-ilmenau.de>
Date:   Thu Jun 25 12:42:14 2020 +0200

    mac80211: allow rx of mesh eapol frames with default rx key
    
    [ Upstream commit 0b467b63870d9c05c81456aa9bfee894ab2db3b6 ]
    
    Without this patch, eapol frames cannot be received in mesh
    mode, when 802.1X should be used. Initially only a MGTK is
    defined, which is found and set as rx->key, when there are
    no other keys set. ieee80211_drop_unencrypted would then
    drop these eapol frames, as they are data frames without
    encryption and there exists some rx->key.
    
    Fix this by differentiating between mesh eapol frames and
    other data frames with existing rx->key. Allow mesh mesh
    eapol frames only if they are for our vif address.
    
    With this patch in-place, ieee80211_rx_h_mesh_fwding continues
    after the ieee80211_drop_unencrypted check and notices, that
    these eapol frames have to be delivered locally, as they should.
    
    Signed-off-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Link: https://lore.kernel.org/r/20200625104214.50319-1-markus.theil@tu-ilmenau.de
    [small code cleanups]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e556ea763de7c2d9d3dc938e7aefe599563cd5f
Author: Jacky Hu <hengqing.hu@gmail.com>
Date:   Tue Jun 16 09:50:24 2020 +0800

    pinctrl: amd: fix npins for uart0 in kerncz_groups
    
    [ Upstream commit 69339d083dfb7786b0e0b3fc19eaddcf11fabdfb ]
    
    uart0_pins is defined as:
    static const unsigned uart0_pins[] = {135, 136, 137, 138, 139};
    
    which npins is wronly specified as 9 later
            {
                    .name = "uart0",
                    .pins = uart0_pins,
                    .npins = 9,
            },
    
    npins should be 5 instead of 9 according to the definition.
    
    Signed-off-by: Jacky Hu <hengqing.hu@gmail.com>
    Link: https://lore.kernel.org/r/20200616015024.287683-1-hengqing.hu@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed041997ca6fe7be16f966b5ff661d0cb7d990de
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Thu Jun 4 22:00:52 2020 -0500

    gpio: arizona: put pm_runtime in case of failure
    
    [ Upstream commit 861254d826499944cb4d9b5a15f5a794a6b99a69 ]
    
    Calling pm_runtime_get_sync increments the counter even in case of
    failure, causing incorrect ref count if pm_runtime_put is not called in
    error handling paths. Call pm_runtime_put if pm_runtime_get_sync fails.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200605030052.78235-1-navid.emamdoost@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd1e0a7b37ffa72d115c024c88b3f61f1ed73b44
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Thu Jun 4 21:52:07 2020 -0500

    gpio: arizona: handle pm_runtime_get_sync failure case
    
    [ Upstream commit e6f390a834b56583e6fc0949822644ce92fbb107 ]
    
    Calling pm_runtime_get_sync increments the counter even in case of
    failure, causing incorrect ref count. Call pm_runtime_put if
    pm_runtime_get_sync fails.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200605025207.65719-1-navid.emamdoost@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6463694592ff00e5f7e058681842691d828ed5a
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri Apr 17 14:15:47 2020 -0700

    soc: qcom: rpmh: Dirt can only make you dirtier, not cleaner
    
    commit 35bb4b22f606c0cc8eedf567313adc18161b1af4 upstream.
    
    Adding an item into the cache should never be able to make the cache
    cleaner.  Use "|=" rather than "=" to update the dirty flag.
    
    Reviewed-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Maulik Shah <mkshah@codeaurora.org> Thanks, Maulik
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Fixes: bb7000677a1b ("soc: qcom: rpmh: Update dirty flag only when data changes")
    Reported-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20200417141531.1.Ia4b74158497213eabad7c3d474c50bfccb3f342e@changeid
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
