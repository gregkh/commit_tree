commit 8067fa23092f2c4e18c29c90f7d5bb765dbf8954
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Aug 9 08:32:11 2012 -0700

    Linux 3.4.8

commit b3f9576e98e0dfb4f9be87618da4c5f6e8640ee0
Author: Darren Hart <dvhart@linux.intel.com>
Date:   Fri Jul 20 11:53:31 2012 -0700

    futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()
    
    commit 6f7b0a2a5c0fb03be7c25bd1745baa50582348ef upstream.
    
    If uaddr == uaddr2, then we have broken the rule of only requeueing
    from a non-pi futex to a pi futex with this call. If we attempt this,
    as the trinity test suite manages to do, we miss early wakeups as
    q.key is equal to key2 (because they are the same uaddr). We will then
    attempt to dereference the pi_mutex (which would exist had the futex_q
    been properly requeued to a pi futex) and trigger a NULL pointer
    dereference.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Cc: Dave Jones <davej@redhat.com>
    Link: http://lkml.kernel.org/r/ad82bfe7f7d130247fbe2b5b4275654807774227.1342809673.git.dvhart@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b6ff731a701d898c732e2f2dd67c5178fc0960
Author: Darren Hart <dvhart@linux.intel.com>
Date:   Fri Jul 20 11:53:30 2012 -0700

    futex: Fix bug in WARN_ON for NULL q.pi_state
    
    commit f27071cb7fe3e1d37a9dbe6c0dfc5395cd40fa43 upstream.
    
    The WARN_ON in futex_wait_requeue_pi() for a NULL q.pi_state was testing
    the address (&q.pi_state) of the pointer instead of the value
    (q.pi_state) of the pointer. Correct it accordingly.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Cc: Dave Jones <davej@redhat.com>
    Link: http://lkml.kernel.org/r/1c85d97f6e5f79ec389a4ead3e367363c74bd09a.1342809673.git.dvhart@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d48c1ba2979634ecbbe344a8bd65035f32777f1b
Author: Darren Hart <dvhart@linux.intel.com>
Date:   Fri Jul 20 11:53:29 2012 -0700

    futex: Test for pi_mutex on fault in futex_wait_requeue_pi()
    
    commit b6070a8d9853eda010a549fa9a09eb8d7269b929 upstream.
    
    If fixup_pi_state_owner() faults, pi_mutex may be NULL. Test
    for pi_mutex != NULL before testing the owner against current
    and possibly unlocking it.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Link: http://lkml.kernel.org/r/dc59890338fc413606f04e5c5b131530734dae3d.1342809673.git.dvhart@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef2e080c19599e3d0844f3bc599ee5dd627fc850
Author: Mikael Pettersson <mikpe@it.uu.se>
Date:   Thu Apr 19 00:53:36 2012 +0200

    m68k: Correct the Atari ALLOWINT definition
    
    commit c663600584a596b5e66258cc10716fb781a5c2c9 upstream.
    
    Booting a 3.2, 3.3, or 3.4-rc4 kernel on an Atari using the
    `nfeth' ethernet device triggers a WARN_ONCE() in generic irq
    handling code on the first irq for that device:
    
    WARNING: at kernel/irq/handle.c:146 handle_irq_event_percpu+0x134/0x142()
    irq 3 handler nfeth_interrupt+0x0/0x194 enabled interrupts
    Modules linked in:
    Call Trace: [<000299b2>] warn_slowpath_common+0x48/0x6a
     [<000299c0>] warn_slowpath_common+0x56/0x6a
     [<00029a4c>] warn_slowpath_fmt+0x2a/0x32
     [<0005b34c>] handle_irq_event_percpu+0x134/0x142
     [<0005b34c>] handle_irq_event_percpu+0x134/0x142
     [<0000a584>] nfeth_interrupt+0x0/0x194
     [<001ba0a8>] schedule_preempt_disabled+0x0/0xc
     [<0005b37a>] handle_irq_event+0x20/0x2c
     [<0005add4>] generic_handle_irq+0x2c/0x3a
     [<00002ab6>] do_IRQ+0x20/0x32
     [<0000289e>] auto_irqhandler_fixup+0x4/0x6
     [<00003144>] cpu_idle+0x22/0x2e
     [<001b8a78>] printk+0x0/0x18
     [<0024d112>] start_kernel+0x37a/0x386
     [<0003021d>] __do_proc_dointvec+0xb1/0x366
     [<0003021d>] __do_proc_dointvec+0xb1/0x366
     [<0024c31e>] _sinittext+0x31e/0x9c0
    
    After invoking the irq's handler the kernel sees !irqs_disabled()
    and concludes that the handler erroneously enabled interrupts.
    
    However, debugging shows that !irqs_disabled() is true even before
    the handler is invoked, which indicates a problem in the platform
    code rather than the specific driver.
    
    The warning does not occur in 3.1 or older kernels.
    
    It turns out that the ALLOWINT definition for Atari is incorrect.
    
    The Atari definition of ALLOWINT is ~0x400, the stated purpose of
    that is to avoid taking HSYNC interrupts.  irqs_disabled() returns
    true if the 3-bit ipl & 4 is non-zero.  The nfeth interrupt runs at
    ipl 3 (it's autovector 3), but 3 & 4 is zero so irqs_disabled() is
    false, and the warning above is generated.
    
    When interrupts are explicitly disabled, ipl is set to 7.  When they
    are enabled, ipl is masked with ALLOWINT.  On Atari this will result
    in ipl = 3, which blocks interrupts at ipl 3 and below.  So how come
    nfeth interrupts at ipl 3 are received at all?  That's because ipl
    is reset to 2 by Atari-specific code in default_idle(), again with
    the stated purpose of blocking HSYNC interrupts.  This discrepancy
    means that ipl 3 can remain blocked for longer than intended.
    
    Both default_idle() and falcon_hblhandler() identify HSYNC with
    ipl 2, and the "Atari ST/.../F030 Hardware Register Listing" agrees,
    but ALLOWINT is defined as if HSYNC was ipl 3.
    
    [As an experiment I modified default_idle() to reset ipl to 3, and
    as expected that resulted in all nfeth interrupts being blocked.]
    
    The fix is simple: define ALLOWINT as ~0x500 instead.  This makes
    arch_local_irq_enable() consistent with default_idle(), and prevents
    the !irqs_disabled() problems for ipl 3 interrupts.
    
    Tested on Atari running in an Aranym VM.
    
    Signed-off-by: Mikael Pettersson <mikpe@it.uu.se>
    Tested-by: Michael Schmitz <schmitzmic@googlemail.com>
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 727cda365f7007f75a402f38ecd8bbf88a874e8f
Author: Andreas Schwab <schwab@linux-m68k.org>
Date:   Sat Jul 28 00:20:34 2012 +0200

    m68k: Make sys_atomic_cmpxchg_32 work on classic m68k
    
    commit 9e2760d18b3cf179534bbc27692c84879c61b97c upstream.
    
    User space access must always go through uaccess accessors, since on
    classic m68k user space and kernel space are completely separate.
    
    Signed-off-by: Andreas Schwab <schwab@linux-m68k.org>
    Tested-by: Thorsten Glaser <tg@debian.org>
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f32469c980654a17e935dae06a3557b488910a4
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jun 22 17:21:17 2012 +0100

    ASoC: wm8994: Ensure there are enough BCLKs for four channels
    
    commit b8edf3e5522735c8ce78b81845f7a1a2d4a08626 upstream.
    
    Otherwise if someone tries to use all four channels on AIF1 with the
    device in master mode we won't be able to clock out all the data.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9966af8a7ac83cdc9aa5a054e843fdecc6689aa0
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jul 30 18:24:19 2012 +0100

    ASoC: wm8962: Allow VMID time to fully ramp
    
    commit 9d40e5582c9c4cfb6977ba2a0ca9c2ed82c56f21 upstream.
    
    Required for reliable power up from cold.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dcb3c5de76a8516e7f2391dfbab2727f69ed010
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Aug 2 09:04:39 2012 +0200

    ALSA: hda - Support dock on Lenovo Thinkpad T530 with ALC269VC
    
    commit 707fba3fa76a4c8855552f5d4c1a12430c09bce8 upstream.
    
    Lenovo Thinkpad T530 with ALC269VC codec has a dock port but BIOS
    doesn't set up the pins properly.  Enable the pins as well as on
    Thinkpad X230 Tablet.
    
    Reported-and-tested-by: Mario <anyc@hadiko.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a69bac35f3667f380d83ca5ed5b880ee7133154
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jul 31 10:40:05 2012 +0200

    ALSA: hda - Fix mute-LED GPIO initialization for IDT codecs
    
    commit 1f43f6c1bc8d740e75b4177eb29110858bb5fea2 upstream.
    
    The IDT codecs initializes the GPIO setup for mute LEDs via
    snd_hda_sync_vmaster_hook().  This works in most cases except for the
    very first call, which is called before PCM and control creations.
    Thus before Master switch is set manually via alsactl, the mute LED
    may show the wrong state, depending on the polarity.
    
    Now it's fixed by calling the LED-status update function manually when
    no vmaster is set yet.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22e0422852d3aa14ad9f1793b8d7cb9e74b81608
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jul 31 10:16:59 2012 +0200

    ALSA: hda - Fix polarity of mute LED on HP Mini 210
    
    commit ff8a1e274cbc11da6b57849f925b895a212b56c9 upstream.
    
    The commit a3e199732b made the LED working again on HP Mini 210 but
    with a wrong polarity.  This patch fixes the polarity for this
    machine, and also introduce a new model string "hp-inv-led".
    
    Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=772923
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09f7d3b6fa3511eb0975fb40cda48f032942f49d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 26 08:17:20 2012 +0200

    ALSA: hda - Fix mute-LED GPIO setup for HP Mini 210
    
    commit a3e199732b8e2b272e82cc1ccc49c35239ed6c5a upstream.
    
    BIOS on HP Mini 210 doesn't provide the proper "HP_Mute_LED" DMI
    string, thus the driver doesn't initialize the GPIO, too.  In the
    earlier kernel, the driver falls back to GPIO1, but since 3.3 we've
    stopped this due to other wrongly advertised machines.
    
    For fixing this particular case, add a new model type to specify the
    default polarity explicitly so that the fallback to GPIO1 is handled.
    
    Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=772923
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac1d1b446e2e93305611126caa2252c8243f087f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jul 25 13:54:55 2012 +0200

    ALSA: hda - Fix invalid D3 of headphone DAC on VT202x codecs
    
    commit 6162552b0de6ba80937c3dd53e084967851cd199 upstream.
    
    We've got a bug report about the silent output from the headphone on a
    mobo with VT2021, and spotted out that this was because of the wrong
    D3 state on the DAC for the headphone output.  The bug is triggered by
    the incomplete check for this DAC in set_widgets_power_state_vt1718S().
    It checks only the connectivity of the primary output (0x27) but
    doesn't consider the path from the headphone pin (0x28).
    
    Now this patch fixes the problem by checking both pins for DAC 0x0b.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e25824fa92d90e667b4285eddf7da11c541691a0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jul 23 11:35:55 2012 +0200

    ALSA: mpu401: Fix missing initialization of irq field
    
    commit bc733d495267a23ef8660220d696c6e549ce30b3 upstream.
    
    The irq field of struct snd_mpu401 is supposed to be initialized to -1.
    Since it's set to zero as of now, a probing error before the irq
    installation results in a kernel warning "Trying to free already-free
    IRQ 0".
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=44821
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fc6d9aea32a459f96ac8678f3e25170a6a8cfa9
Author: Daniel Mack <zonque@gmail.com>
Date:   Wed Aug 1 10:16:53 2012 +0200

    ALSA: snd-usb: fix clock source validity index
    
    commit aff252a848ce21b431ba822de3dab9c4c94571cb upstream.
    
    uac_clock_source_is_valid() uses the control selector value to access
    the bmControls bitmap of the clock source unit. This is wrong, as
    control selector values start from 1, while the bitmap uses all
    available bits.
    
    In other words, "Clock Validity Control" is stored in D3..2, not D5..4
    of the clock selector unit's bmControls.
    
    Signed-off-by: Daniel Mack <zonque@gmail.com>
    Reported-by: Andreas Koch <andreas@akdesigninc.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6091e5bc36cc2d74b2c5ab1ae2dcf32cf82e242f
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Jul 30 16:06:42 2012 +0100

    USB: echi-dbgp: increase the controller wait time to come out of halt.
    
    commit f96a4216e85050c0a9d41a41ecb0ae9d8e39b509 upstream.
    
    The default 10 microsecond delay for the controller to come out of
    halt in dbgp_ehci_startup is too short, so increase it to 1 millisecond.
    
    This is based on emperical testing on various USB debug ports on
    modern machines such as a Lenovo X220i and an Ivybridge development
    platform that needed to wait ~450-950 microseconds.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 143d9963df6580491f9a5c38c9d4883786f78123
Author: Mathias Krause <minipli@googlemail.com>
Date:   Sun Jul 29 19:45:14 2012 +0000

    net/tun: fix ioctl() based info leaks
    
    [ Upstream commits a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc
      and 8bbb181308bc348e02bfdbebdedd4e4ec9d452ce ]
    
    The tun module leaks up to 36 bytes of memory by not fully initializing
    a structure located on the stack that gets copied to user memory by the
    TUNGETIFF and SIOCGIFHWADDR ioctl()s.
    
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce42ec4ef551b08d2e5d26775d838ac640f82ad
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Fri Jul 27 10:38:50 2012 +0000

    tcp: perform DMA to userspace only if there is a task waiting for it
    
    [ Upstream commit 59ea33a68a9083ac98515e4861c00e71efdc49a1 ]
    
    Back in 2006, commit 1a2449a87b ("[I/OAT]: TCP recv offload to I/OAT")
    added support for receive offloading to IOAT dma engine if available.
    
    The code in tcp_rcv_established() tries to perform early DMA copy if
    applicable. It however does so without checking whether the userspace
    task is actually expecting the data in the buffer.
    
    This is not a problem under normal circumstances, but there is a corner
    case where this doesn't work -- and that's when MSG_TRUNC flag to
    recvmsg() is used.
    
    If the IOAT dma engine is not used, the code properly checks whether
    there is a valid ucopy.task and the socket is owned by userspace, but
    misses the check in the dmaengine case.
    
    This problem can be observed in real trivially -- for example 'tbench' is a
    good reproducer, as it makes a heavy use of MSG_TRUNC. On systems utilizing
    IOAT, you will soon find tbench waiting indefinitely in sk_wait_data(), as they
    have been already early-copied in tcp_rcv_established() using dma engine.
    
    This patch introduces the same check we are performing in the simple
    iovec copy case to the IOAT case as well. It fixes the indefinite
    recvmsg(MSG_TRUNC) hangs.
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 202a3667cfc09edca2338a1fb5d6ffb0dddc9bcc
Author: Jiri Benc <jbenc@redhat.com>
Date:   Fri Jul 27 02:58:22 2012 +0000

    net: fix rtnetlink IFF_PROMISC and IFF_ALLMULTI handling
    
    [ Upstream commit b1beb681cba5358f62e6187340660ade226a5fcc ]
    
    When device flags are set using rtnetlink, IFF_PROMISC and IFF_ALLMULTI
    flags are handled specially. Function dev_change_flags sets IFF_PROMISC and
    IFF_ALLMULTI bits in dev->gflags according to the passed value but
    do_setlink passes a result of rtnl_dev_combine_flags which takes those bits
    from dev->flags.
    
    This can be easily trigerred by doing:
    
    tcpdump -i eth0 &
    ip l s up eth0
    
    ip sets IFF_UP flag in ifi_flags and ifi_change, which is combined with
    IFF_PROMISC by rtnl_dev_combine_flags, causing __dev_change_flags to set
    IFF_PROMISC in gflags.
    
    Reported-by: Max Matveev <makc@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5481652427aa25fc74b45d755ff678df33601c1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jul 27 01:46:51 2012 +0000

    USB: kaweth.c: use GFP_ATOMIC under spin_lock
    
    [ Upstream commit e4c7f259c5be99dcfc3d98f913590663b0305bf8 ]
    
    The problem is that we call this with a spin lock held.  The call tree
    is:
            kaweth_start_xmit() holds kaweth->device_lock.
            -> kaweth_async_set_rx_mode()
               -> kaweth_control()
                  -> kaweth_internal_control_msg()
    
    The kaweth_internal_control_msg() function is only called from
    kaweth_control() which used GFP_ATOMIC for its allocations.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac6b310c5f5ecd6154e07069c6b6b67b7e768d8b
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Jul 26 22:52:21 2012 +0000

    tcp: Add TCP_USER_TIMEOUT negative value check
    
    [ Upstream commit 42493570100b91ef663c4c6f0c0fdab238f9d3c2 ]
    
    TCP_USER_TIMEOUT is a TCP level socket option that takes an unsigned int. But
    patch "tcp: Add TCP_USER_TIMEOUT socket option"(dca43c75) didn't check the negative
    values. If a user assign -1 to it, the socket will set successfully and wait
    for 4294967295 miliseconds. This patch add a negative value check to avoid
    this issue.
    
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a8634186c17426f79c3bfcbc4fab75aa0f53c3b
Author: Alan Cox <alan@linux.intel.com>
Date:   Tue Jul 24 08:16:25 2012 +0000

    wanmain: comparing array with NULL
    
    [ Upstream commit 8b72ff6484fe303e01498b58621810a114f3cf09 ]
    
    gcc really should warn about these !
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2138dede8c23f5646c81381c71aac37e67b491b0
Author: Alan Cox <alan@linux.intel.com>
Date:   Tue Jul 24 02:42:14 2012 +0000

    caif: fix NULL pointer check
    
    [ Upstream commit c66b9b7d365444b433307ebb18734757cb668a02 ]
    
    Reported-by: <rucsoftsec@gmail.com>
    Resolves-bug: http://bugzilla.kernel.org/show_bug?44441
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f63b1d926016ce39e06a9a39084d205e072541e2
Author: Francois Romieu <romieu@fr.zoreil.com>
Date:   Mon Jul 23 22:55:55 2012 +0200

    r8169: revert "add byte queue limit support".
    
    [ Upstream commit 17bcb684f08649a2ab6a7dcd8288332e72d208f1 ]
    
    This reverts commit 036dafa28da1e2565a8529de2ae663c37b7a0060.
    
    First it appears in bisection, then reverting it solves the usual
    netdev watchdog problem for different people. I don't have a proper
    fix yet so get rid of it.
    
    Bisected-and-reported-by: Alex Villacís Lasso <a_villacis@palosanto.com>
    Signed-off-by: Francois Romieu <romieu@fr.zoreil.com>
    Cc: Josh Boyer <jwboyer@redhat.com>
    Cc: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4deb65e759dd2ff7dd5e40bd6d4bf0dad6d88269
Author: Jesper Juhl <jj@chaosbits.net>
Date:   Sun Jul 22 11:37:20 2012 +0000

    net: Fix references to out-of-scope variables in put_cmsg_compat()
    
    [ Upstream commit 818810472b129004c16fc51bf0a570b60776bfb7 ]
    
    In net/compat.c::put_cmsg_compat() we may assign 'data' the address of
    either the 'ctv' or 'cts' local variables inside the 'if
    (!COMPAT_USE_64BIT_TIME)' branch.
    
    Those variables go out of scope at the end of the 'if' statement, so
    when we use 'data' further down in 'copy_to_user(CMSG_COMPAT_DATA(cm),
    data, cmlen - sizeof(struct compat_cmsghdr))' there's no telling what
    it may be refering to - not good.
    
    Fix the problem by simply giving 'ctv' and 'cts' function scope.
    
    Signed-off-by: Jesper Juhl <jj@chaosbits.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a080e65186d367508e2b4e68290656ddce493136
Author: Paul Moore <pmoore@redhat.com>
Date:   Tue Jul 17 11:07:47 2012 +0000

    cipso: don't follow a NULL pointer when setsockopt() is called
    
    [ Upstream commit 89d7ae34cdda4195809a5a987f697a517a2a3177 ]
    
    As reported by Alan Cox, and verified by Lin Ming, when a user
    attempts to add a CIPSO option to a socket using the CIPSO_V4_TAG_LOCAL
    tag the kernel dies a terrible death when it attempts to follow a NULL
    pointer (the skb argument to cipso_v4_validate() is NULL when called via
    the setsockopt() syscall).
    
    This patch fixes this by first checking to ensure that the skb is
    non-NULL before using it to find the incoming network interface.  In
    the unlikely case where the skb is NULL and the user attempts to add
    a CIPSO option with the _TAG_LOCAL tag we return an error as this is
    not something we want to allow.
    
    A simple reproducer, kindly supplied by Lin Ming, although you must
    have the CIPSO DOI #3 configure on the system first or you will be
    caught early in cipso_v4_validate():
    
            #include <sys/types.h>
            #include <sys/socket.h>
            #include <linux/ip.h>
            #include <linux/in.h>
            #include <string.h>
    
            struct local_tag {
                    char type;
                    char length;
                    char info[4];
            };
    
            struct cipso {
                    char type;
                    char length;
                    char doi[4];
                    struct local_tag local;
            };
    
            int main(int argc, char **argv)
            {
                    int sockfd;
                    struct cipso cipso = {
                            .type = IPOPT_CIPSO,
                            .length = sizeof(struct cipso),
                            .local = {
                                    .type = 128,
                                    .length = sizeof(struct local_tag),
                            },
                    };
    
                    memset(cipso.doi, 0, 4);
                    cipso.doi[3] = 3;
    
                    sockfd = socket(AF_INET, SOCK_DGRAM, 0);
                    #define SOL_IP 0
                    setsockopt(sockfd, SOL_IP, IP_OPTIONS,
                            &cipso, sizeof(struct cipso));
    
                    return 0;
            }
    
    CC: Lin Ming <mlin@ss.pku.edu.cn>
    Reported-by: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Paul Moore <pmoore@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60d2aa556cc3f00f1276ae363dc6601359180ddc
Author: Sjur Brændeland <sjur.brandeland@stericsson.com>
Date:   Sun Jul 15 10:10:14 2012 +0000

    caif: Fix access to freed pernet memory
    
    [ Upstream commit 96f80d123eff05c3cd4701463786b87952a6c3ac ]
    
    unregister_netdevice_notifier() must be called before
    unregister_pernet_subsys() to avoid accessing already freed
    pernet memory. This fixes the following oops when doing rmmod:
    
    Call Trace:
     [<ffffffffa0f802bd>] caif_device_notify+0x4d/0x5a0 [caif]
     [<ffffffff81552ba9>] unregister_netdevice_notifier+0xb9/0x100
     [<ffffffffa0f86dcc>] caif_device_exit+0x1c/0x250 [caif]
     [<ffffffff810e7734>] sys_delete_module+0x1a4/0x300
     [<ffffffff810da82d>] ? trace_hardirqs_on_caller+0x15d/0x1e0
     [<ffffffff813517de>] ? trace_hardirqs_on_thunk+0x3a/0x3
     [<ffffffff81696bad>] system_call_fastpath+0x1a/0x1f
    
    RIP
     [<ffffffffa0f7f561>] caif_get+0x51/0xb0 [caif]
    
    Signed-off-by: Sjur Brændeland <sjur.brandeland@stericsson.com>
    Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2936d35db07cc3c9e3f2d60ed90f9a72f2031130
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Mon Jul 16 09:13:51 2012 +0000

    sctp: Fix list corruption resulting from freeing an association on a list
    
    [ Upstream commit 2eebc1e188e9e45886ee00662519849339884d6d ]
    
    A few days ago Dave Jones reported this oops:
    
    [22766.294255] general protection fault: 0000 [#1] PREEMPT SMP
    [22766.295376] CPU 0
    [22766.295384] Modules linked in:
    [22766.387137]  ffffffffa169f292 6b6b6b6b6b6b6b6b ffff880147c03a90
    ffff880147c03a74
    [22766.387135] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 00000000000
    [22766.387136] Process trinity-watchdo (pid: 10896, threadinfo ffff88013e7d2000,
    [22766.387137] Stack:
    [22766.387140]  ffff880147c03a10
    [22766.387140]  ffffffffa169f2b6
    [22766.387140]  ffff88013ed95728
    [22766.387143]  0000000000000002
    [22766.387143]  0000000000000000
    [22766.387143]  ffff880003fad062
    [22766.387144]  ffff88013c120000
    [22766.387144]
    [22766.387145] Call Trace:
    [22766.387145]  <IRQ>
    [22766.387150]  [<ffffffffa169f292>] ? __sctp_lookup_association+0x62/0xd0
    [sctp]
    [22766.387154]  [<ffffffffa169f2b6>] __sctp_lookup_association+0x86/0xd0 [sctp]
    [22766.387157]  [<ffffffffa169f597>] sctp_rcv+0x207/0xbb0 [sctp]
    [22766.387161]  [<ffffffff810d4da8>] ? trace_hardirqs_off_caller+0x28/0xd0
    [22766.387163]  [<ffffffff815827e3>] ? nf_hook_slow+0x133/0x210
    [22766.387166]  [<ffffffff815902fc>] ? ip_local_deliver_finish+0x4c/0x4c0
    [22766.387168]  [<ffffffff8159043d>] ip_local_deliver_finish+0x18d/0x4c0
    [22766.387169]  [<ffffffff815902fc>] ? ip_local_deliver_finish+0x4c/0x4c0
    [22766.387171]  [<ffffffff81590a07>] ip_local_deliver+0x47/0x80
    [22766.387172]  [<ffffffff8158fd80>] ip_rcv_finish+0x150/0x680
    [22766.387174]  [<ffffffff81590c54>] ip_rcv+0x214/0x320
    [22766.387176]  [<ffffffff81558c07>] __netif_receive_skb+0x7b7/0x910
    [22766.387178]  [<ffffffff8155856c>] ? __netif_receive_skb+0x11c/0x910
    [22766.387180]  [<ffffffff810d423e>] ? put_lock_stats.isra.25+0xe/0x40
    [22766.387182]  [<ffffffff81558f83>] netif_receive_skb+0x23/0x1f0
    [22766.387183]  [<ffffffff815596a9>] ? dev_gro_receive+0x139/0x440
    [22766.387185]  [<ffffffff81559280>] napi_skb_finish+0x70/0xa0
    [22766.387187]  [<ffffffff81559cb5>] napi_gro_receive+0xf5/0x130
    [22766.387218]  [<ffffffffa01c4679>] e1000_receive_skb+0x59/0x70 [e1000e]
    [22766.387242]  [<ffffffffa01c5aab>] e1000_clean_rx_irq+0x28b/0x460 [e1000e]
    [22766.387266]  [<ffffffffa01c9c18>] e1000e_poll+0x78/0x430 [e1000e]
    [22766.387268]  [<ffffffff81559fea>] net_rx_action+0x1aa/0x3d0
    [22766.387270]  [<ffffffff810a495f>] ? account_system_vtime+0x10f/0x130
    [22766.387273]  [<ffffffff810734d0>] __do_softirq+0xe0/0x420
    [22766.387275]  [<ffffffff8169826c>] call_softirq+0x1c/0x30
    [22766.387278]  [<ffffffff8101db15>] do_softirq+0xd5/0x110
    [22766.387279]  [<ffffffff81073bc5>] irq_exit+0xd5/0xe0
    [22766.387281]  [<ffffffff81698b03>] do_IRQ+0x63/0xd0
    [22766.387283]  [<ffffffff8168ee2f>] common_interrupt+0x6f/0x6f
    [22766.387283]  <EOI>
    [22766.387284]
    [22766.387285]  [<ffffffff8168eed9>] ? retint_swapgs+0x13/0x1b
    [22766.387285] Code: c0 90 5d c3 66 0f 1f 44 00 00 4c 89 c8 5d c3 0f 1f 00 55 48
    89 e5 48 83
    ec 20 48 89 5d e8 4c 89 65 f0 4c 89 6d f8 66 66 66 66 90 <0f> b7 87 98 00 00 00
    48 89 fb
    49 89 f5 66 c1 c0 08 66 39 46 02
    [22766.387307]
    [22766.387307] RIP
    [22766.387311]  [<ffffffffa168a2c9>] sctp_assoc_is_match+0x19/0x90 [sctp]
    [22766.387311]  RSP <ffff880147c039b0>
    [22766.387142]  ffffffffa16ab120
    [22766.599537] ---[ end trace 3f6dae82e37b17f5 ]---
    [22766.601221] Kernel panic - not syncing: Fatal exception in interrupt
    
    It appears from his analysis and some staring at the code that this is likely
    occuring because an association is getting freed while still on the
    sctp_assoc_hashtable.  As a result, we get a gpf when traversing the hashtable
    while a freed node corrupts part of the list.
    
    Nominally I would think that an mibalanced refcount was responsible for this,
    but I can't seem to find any obvious imbalance.  What I did note however was
    that the two places where we create an association using
    sctp_primitive_ASSOCIATE (__sctp_connect and sctp_sendmsg), have failure paths
    which free a newly created association after calling sctp_primitive_ASSOCIATE.
    sctp_primitive_ASSOCIATE brings us into the sctp_sf_do_prm_asoc path, which
    issues a SCTP_CMD_NEW_ASOC side effect, which in turn adds a new association to
    the aforementioned hash table.  the sctp command interpreter that process side
    effects has not way to unwind previously processed commands, so freeing the
    association from the __sctp_connect or sctp_sendmsg error path would lead to a
    freed association remaining on this hash table.
    
    I've fixed this but modifying sctp_[un]hash_established to use hlist_del_init,
    which allows us to proerly use hlist_unhashed to check if the node is on a
    hashlist safely during a delete.  That in turn alows us to safely call
    sctp_unhash_established in the __sctp_connect and sctp_sendmsg error paths
    before freeing them, regardles of what the associations state is on the hash
    list.
    
    I noted, while I was doing this, that the __sctp_unhash_endpoint was using
    hlist_unhsashed in a simmilar fashion, but never nullified any removed nodes
    pointers to make that function work properly, so I fixed that up in a simmilar
    fashion.
    
    I attempted to test this using a virtual guest running the SCTP_RR test from
    netperf in a loop while running the trinity fuzzer, both in a loop.  I wasn't
    able to recreate the problem prior to this fix, nor was I able to trigger the
    failure after (neither of which I suppose is suprising).  Given the trace above
    however, I think its likely that this is what we hit.
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: davej@redhat.com
    CC: davej@redhat.com
    CC: "David S. Miller" <davem@davemloft.net>
    CC: Vlad Yasevich <vyasevich@gmail.com>
    CC: Sridhar Samudrala <sri@us.ibm.com>
    CC: linux-sctp@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5eeca5f5c19c472f8f221a81bb27f15a7aeed6c
Author: Alan Cox <alan@linux.intel.com>
Date:   Thu Jul 12 03:39:11 2012 +0000

    sch_sfb: Fix missing NULL check
    
    [ Upstream commit 7ac2908e4b2edaec60e9090ddb4d9ceb76c05e7d ]
    
    Resolves-bug: https://bugzilla.kernel.org/show_bug.cgi?id=44461
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af8ca6ddbb2928d5fb26f0a78710971e1210a299
Author: Michael Chan <mchan@broadcom.com>
Date:   Tue Jul 10 10:04:40 2012 +0000

    bnx2: Fix bug in bnx2_free_tx_skbs().
    
    [ Upstream commit c1f5163de417dab01fa9daaf09a74bbb19303f3c ]
    
    In rare cases, bnx2x_free_tx_skbs() can unmap the wrong DMA address
    when it gets to the last entry of the tx ring.  We were not using
    the proper macro to skip the last entry when advancing the tx index.
    
    Reported-by: Zongyun Lai <zlai@vmware.com>
    Reviewed-by: Jeffrey Huang <huangjw@broadcom.com>
    Signed-off-by: Michael Chan <mchan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5b4b62d8517f12c77f912b8c249e36019d31a0c
Author: Amir Hanania <amir.hanania@intel.com>
Date:   Mon Jul 9 20:47:19 2012 +0000

    net: Fix memory leak - vlan_info struct
    
    [ Upstream commit efc73f4bbc238d4f579fb612c04c8e1dd8a82979 ]
    
    In driver reload test there is a memory leak.
    The structure vlan_info was not freed when the driver was removed.
    It was not released since the nr_vids var is one after last vlan was removed.
    The nr_vids is one, since vlan zero is added to the interface when the interface
    is being set, but the vlan zero is not deleted at unregister.
    Fix - delete vlan zero when we unregister the device.
    
    Signed-off-by: Amir Hanania <amir.hanania@intel.com>
    Acked-by: John Fastabend <john.r.fastabend@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d680c0462d9f4d96b255853364fb0bcd5c202553
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jul 5 11:45:13 2012 +0000

    gianfar: fix potential sk_wmem_alloc imbalance
    
    [ Upstream commit 313b037cf054ec908de92fb4c085403ffd7420d4 ]
    
    commit db83d136d7f753 (gianfar: Fix missing sock reference when
    processing TX time stamps) added a potential sk_wmem_alloc imbalance
    
    If the new skb has a different truesize than old one, we can get a
    negative sk_wmem_alloc once new skb is orphaned at TX completion.
    
    Now we no longer early orphan skbs in dev_hard_start_xmit(), this
    probably can lead to fatal bugs.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Tested-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Manfred Rudigier <manfred.rudigier@omicron.at>
    Cc: Claudiu Manoil <claudiu.manoil@freescale.com>
    Cc: Jiajun Wu <b06378@freescale.com>
    Cc: Andy Fleming <afleming@freescale.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7a47ee34686694148f6d34a4576385853c5e33f
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jul 3 20:55:21 2012 +0000

    netem: add limitation to reordered packets
    
    [ Upstream commit 960fb66e520a405dde39ff883f17ff2669c13d85 ]
    
    Fix two netem bugs :
    
    1) When a frame was dropped by tfifo_enqueue(), drop counter
       was incremented twice.
    
    2) When reordering is triggered, we enqueue a packet without
       checking queue limit. This can OOM pretty fast when this
       is repeated enough, since skbs are orphaned, no socket limit
       can help in this situation.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Mark Gordon <msg@google.com>
    Cc: Andreas Terzis <aterzis@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Hagen Paul Pfeifer <hagen@jauu.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa505bba77961634215eb8bdd8ab9f4bd0c6f1d1
Author: Cloud Ren <cjren@qca.qualcomm.com>
Date:   Tue Jul 3 16:51:48 2012 +0000

    atl1c: fix issue of transmit queue 0 timed out
    
    [ Upstream commit b94e52f62683dc0b00c6d1b58b80929a078c0fd5 ]
    
    some people report atl1c could cause system hang with following
    kernel trace info:
    ---------------------------------------
    WARNING: at.../net/sched/sch_generic.c:258 dev_watchdog+0x1db/0x1d0()
    ...
    NETDEV WATCHDOG: eth0 (atl1c): transmit queue 0 timed out
    ...
    ---------------------------------------
    This is caused by netif_stop_queue calling when cable Link is down.
    So remove netif_stop_queue, because link_watch will take it over.
    
    Signed-off-by: xiong <xiong@qca.qualcomm.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Cloud Ren <cjren@qca.qualcomm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0ce1fd51e122606d555dfd57f5c703b2af12146
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jul 23 00:00:20 2012 -0400

    ext4: undo ext4_calc_metadata_amount if we fail to claim space
    
    commit 03179fe92318e7934c180d96f12eff2cb36ef7b6 upstream.
    
    The function ext4_calc_metadata_amount() has side effects, although
    it's not obvious from its function name.  So if we fail to claim
    space, regardless of whether we retry to claim the space again, or
    return an error, we need to undo these side effects.
    
    Otherwise we can end up incorrectly calculating the number of metadata
    blocks needed for the operation, which was responsible for an xfstests
    failure for test #271 when using an ext2 file system with delalloc
    enabled.
    
    Reported-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dd71727e4bf6787caa56770b99a9102ac9a65f4
Author: Brian Foster <bfoster@redhat.com>
Date:   Sun Jul 22 23:59:40 2012 -0400

    ext4: don't let i_reserved_meta_blocks go negative
    
    commit 97795d2a5b8d3c8dc4365d4bd3404191840453ba upstream.
    
    If we hit a condition where we have allocated metadata blocks that
    were not appropriately reserved, we risk underflow of
    ei->i_reserved_meta_blocks.  In turn, this can throw
    sbi->s_dirtyclusters_counter significantly out of whack and undermine
    the nondelalloc fallback logic in ext4_nonda_switch().  Warn if this
    occurs and set i_allocated_meta_blocks to avoid this problem.
    
    This condition is reproduced by xfstests 270 against ext2 with
    delalloc enabled:
    
    Mar 28 08:58:02 localhost kernel: [  171.526344] EXT4-fs (loop1): delayed block allocation failed for inode 14 at logical offset 64486 with max blocks 64 with error -28
    Mar 28 08:58:02 localhost kernel: [  171.526346] EXT4-fs (loop1): This should not happen!! Data will be lost
    
    270 ultimately fails with an inconsistent filesystem and requires an
    fsck to repair.  The cause of the error is an underflow in
    ext4_da_update_reserve_space() due to an unreserved meta block
    allocation.
    
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6918ff0bf4ba47ce863813fe5010796718219f8f
Author: Ashish Sangwan <ashishsangwan2@gmail.com>
Date:   Sun Jul 22 22:49:08 2012 -0400

    ext4: fix hole punch failure when depth is greater than 0
    
    commit 968dee77220768a5f52cf8b21d0bdb73486febef upstream.
    
    Whether to continue removing extents or not is decided by the return
    value of function ext4_ext_more_to_rm() which checks 2 conditions:
    a) if there are no more indexes to process.
    b) if the number of entries are decreased in the header of "depth -1".
    
    In case of hole punch, if the last block to be removed is not part of
    the last extent index than this index will not be deleted, hence the
    number of valid entries in the extent header of "depth - 1" will
    remain as it is and ext4_ext_more_to_rm will return 0 although the
    required blocks are not yet removed.
    
    This patch fixes the above mentioned problem as instead of removing
    the extents from the end of file, it starts removing the blocks from
    the particular extent from which removing blocks is actually required
    and continue backward until done.
    
    Signed-off-by: Ashish Sangwan <ashish.sangwan2@gmail.com>
    Signed-off-by: Namjae Jeon <linkinjeon@gmail.com>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25471391e7a0acace5821318fc0123a0a5cfdbbe
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jul 9 16:27:05 2012 -0400

    ext4: fix overhead calculation used by ext4_statfs()
    
    commit 952fc18ef9ec707ebdc16c0786ec360295e5ff15 upstream.
    
    Commit f975d6bcc7a introduced bug which caused ext4_statfs() to
    miscalculate the number of file system overhead blocks.  This causes
    the f_blocks field in the statfs structure to be larger than it should
    be.  This would in turn cause the "df" output to show the number of
    data blocks in the file system and the number of data blocks used to
    be larger than they should be.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a271d6a66d1d10f001c5653da68c1f72d0ded59
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Jun 30 19:14:57 2012 -0400

    ext4: pass a char * to ext4_count_free() instead of a buffer_head ptr
    
    commit f6fb99cadcd44660c68e13f6eab28333653621e6 upstream.
    
    Make it possible for ext4_count_free to operate on buffers and not
    just data in buffer_heads.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66b68d2374b0c251224c28c69fc25eeef343e122
Author: Maarten Lankhorst <maarten.lankhorst@canonical.com>
Date:   Mon Jun 4 12:00:31 2012 +0200

    nouveau: Fix alignment requirements on src and dst addresses
    
    commit ce806a30470bcd846d148bf39d46de3ad7748228 upstream.
    
    Linear copy works by adding the offset to the buffer address,
    which may end up not being 16-byte aligned.
    
    Some tests I've written for prime_pcopy show that the engine
    allows this correctly, so the restriction on lowest 4 bits of
    address can be lifted safely.
    
    The comments added were by envyas, I think because I used
    a newer version.
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d71d5a6b6931f82fa9db44214019839a0ebbb4a
Author: David Howells <dhowells@redhat.com>
Date:   Wed Jul 25 16:53:36 2012 +0100

    NFS: Fix a number of bugs in the idmapper
    
    commit a427b9ec4eda8cd6e641ea24541d30b641fc3140 upstream.
    
    Fix a number of bugs in the NFS idmapper code:
    
     (1) Only registered key types can be passed to the core keys code, so
         register the legacy idmapper key type.
    
         This is a requirement because the unregister function cleans up keys
         belonging to that key type so that there aren't dangling pointers to the
         module left behind - including the key->type pointer.
    
     (2) Rename the legacy key type.  You can't have two key types with the same
         name, and (1) would otherwise require that.
    
     (3) complete_request_key() must be called in the error path of
         nfs_idmap_legacy_upcall().
    
     (4) There is one idmap struct for each nfs_client struct.  This means that
         idmap->idmap_key_cons is shared without the use of a lock.  This is a
         problem because key_instantiate_and_link() - as called indirectly by
         idmap_pipe_downcall() - releases anyone waiting for the key to be
         instantiated.
    
         What happens is that idmap_pipe_downcall() running in the rpc.idmapd
         thread, releases the NFS filesystem in whatever thread that is running in
         to continue.  This may then make another idmapper call, overwriting
         idmap_key_cons before idmap_pipe_downcall() gets the chance to call
         complete_request_key().
    
         I *think* that reading idmap_key_cons only once, before
         key_instantiate_and_link() is called, and then caching the result in a
         variable is sufficient.
    
    Bug (4) is the cause of:
    
    BUG: unable to handle kernel NULL pointer dereference at           (null)
    IP: [<          (null)>]           (null)
    PGD 0
    Oops: 0010 [#1] SMP
    CPU 1
    Modules linked in: ppdev parport_pc lp parport ip6table_filter ip6_tables ebtable_nat ebtables ipt_MASQUERADE iptable_nat nf_nat nf_conntrack_ipv4 nf_defrag_ipv4 xt_state nf_conntrack nfs fscache xt_CHECKSUM auth_rpcgss iptable_mangle nfs_acl bridge stp llc lockd be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i libcxgbi cxgb3 mdio ib_iser rdma_cm ib_cm iw_cm ib_sa ib_mad ib_core ib_addr iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi snd_hda_codec_realtek snd_usb_audio snd_hda_intel snd_hda_codec snd_seq snd_pcm snd_hwdep snd_usbmidi_lib snd_rawmidi snd_timer uvcvideo videobuf2_core videodev media videobuf2_vmalloc snd_seq_device videobuf2_memops e1000e vhost_net iTCO_wdt joydev coretemp snd soundcore macvtap macvlan i2c_i801 snd_page_alloc tun iTCO_vendor_support microcode kvm_intel kvm sunrpc hid_logitech_dj usb_storage i915 drm_kms_helper drm i2c_algo_bit i2c_core video [last unloaded: scsi_wait_scan]
    Pid: 1229, comm: rpc.idmapd Not tainted 3.4.2-1.fc16.x86_64 #1 Gateway DX4710-UB801A/G33M05G1
    RIP: 0010:[<0000000000000000>]  [<          (null)>]           (null)
    RSP: 0018:ffff8801a3645d40  EFLAGS: 00010246
    RAX: ffff880077707e30 RBX: ffff880077707f50 RCX: ffff8801a18ccd80
    RDX: 0000000000000006 RSI: ffff8801a3645e75 RDI: ffff880077707f50
    RBP: ffff8801a3645d88 R08: ffff8801a430f9c0 R09: ffff8801a3645db0
    R10: 000000000000000a R11: 0000000000000246 R12: ffff8801a18ccd80
    R13: ffff8801a3645e75 R14: ffff8801a430f9c0 R15: 0000000000000006
    FS:  00007fb6fb51a700(0000) GS:ffff8801afc80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000000 CR3: 00000001a49b0000 CR4: 00000000000027e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Process rpc.idmapd (pid: 1229, threadinfo ffff8801a3644000, task ffff8801a3bf9710)
    Stack:
     ffffffff81260878 ffff8801a3645db0 ffff8801a3645db0 ffff880077707a90
     ffff880077707f50 ffff8801a18ccd80 0000000000000006 ffff8801a3645e75
     ffff8801a430f9c0 ffff8801a3645dd8 ffffffff81260983 ffff8801a3645de8
    Call Trace:
     [<ffffffff81260878>] ? __key_instantiate_and_link+0x58/0x100
     [<ffffffff81260983>] key_instantiate_and_link+0x63/0xa0
     [<ffffffffa057062b>] idmap_pipe_downcall+0x1cb/0x1e0 [nfs]
     [<ffffffffa0107f57>] rpc_pipe_write+0x67/0x90 [sunrpc]
     [<ffffffff8117f833>] vfs_write+0xb3/0x180
     [<ffffffff8117fb5a>] sys_write+0x4a/0x90
     [<ffffffff81600329>] system_call_fastpath+0x16/0x1b
    Code:  Bad RIP value.
    RIP  [<          (null)>]           (null)
     RSP <ffff8801a3645d40>
    CR2: 0000000000000000
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Steve Dickson <steved@redhat.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 032da6abbc34272959c790941ce8705337061dbf
Author: Jeff Layton <jlayton@kernel.org>
Date:   Mon Jul 23 13:58:51 2012 -0400

    nfs: skip commit in releasepage if we're freeing memory for fs-related reasons
    
    commit 5cf02d09b50b1ee1c2d536c9cf64af5a7d433f56 upstream.
    
    We've had some reports of a deadlock where rpciod ends up with a stack
    trace like this:
    
        PID: 2507   TASK: ffff88103691ab40  CPU: 14  COMMAND: "rpciod/14"
         #0 [ffff8810343bf2f0] schedule at ffffffff814dabd9
         #1 [ffff8810343bf3b8] nfs_wait_bit_killable at ffffffffa038fc04 [nfs]
         #2 [ffff8810343bf3c8] __wait_on_bit at ffffffff814dbc2f
         #3 [ffff8810343bf418] out_of_line_wait_on_bit at ffffffff814dbcd8
         #4 [ffff8810343bf488] nfs_commit_inode at ffffffffa039e0c1 [nfs]
         #5 [ffff8810343bf4f8] nfs_release_page at ffffffffa038bef6 [nfs]
         #6 [ffff8810343bf528] try_to_release_page at ffffffff8110c670
         #7 [ffff8810343bf538] shrink_page_list.clone.0 at ffffffff81126271
         #8 [ffff8810343bf668] shrink_inactive_list at ffffffff81126638
         #9 [ffff8810343bf818] shrink_zone at ffffffff8112788f
        #10 [ffff8810343bf8c8] do_try_to_free_pages at ffffffff81127b1e
        #11 [ffff8810343bf958] try_to_free_pages at ffffffff8112812f
        #12 [ffff8810343bfa08] __alloc_pages_nodemask at ffffffff8111fdad
        #13 [ffff8810343bfb28] kmem_getpages at ffffffff81159942
        #14 [ffff8810343bfb58] fallback_alloc at ffffffff8115a55a
        #15 [ffff8810343bfbd8] ____cache_alloc_node at ffffffff8115a2d9
        #16 [ffff8810343bfc38] kmem_cache_alloc at ffffffff8115b09b
        #17 [ffff8810343bfc78] sk_prot_alloc at ffffffff81411808
        #18 [ffff8810343bfcb8] sk_alloc at ffffffff8141197c
        #19 [ffff8810343bfce8] inet_create at ffffffff81483ba6
        #20 [ffff8810343bfd38] __sock_create at ffffffff8140b4a7
        #21 [ffff8810343bfd98] xs_create_sock at ffffffffa01f649b [sunrpc]
        #22 [ffff8810343bfdd8] xs_tcp_setup_socket at ffffffffa01f6965 [sunrpc]
        #23 [ffff8810343bfe38] worker_thread at ffffffff810887d0
        #24 [ffff8810343bfee8] kthread at ffffffff8108dd96
        #25 [ffff8810343bff48] kernel_thread at ffffffff8100c1ca
    
    rpciod is trying to allocate memory for a new socket to talk to the
    server. The VM ends up calling ->releasepage to get more memory, and it
    tries to do a blocking commit. That commit can't succeed however without
    a connected socket, so we deadlock.
    
    Fix this by setting PF_FSTRANS on the workqueue task prior to doing the
    socket allocation, and having nfs_release_page check for that flag when
    deciding whether to do a commit call. Also, set PF_FSTRANS
    unconditionally in rpc_async_schedule since that function can also do
    allocations sometimes.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0f5dcc0020b78983061a2a674491f4eaa03e386
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Jun 5 16:52:06 2012 -0400

    nfsd4: our filesystems are normally case sensitive
    
    commit 2930d381d22b9c56f40dd4c63a8fa59719ca2c3c upstream.
    
    Actually, xfs and jfs can optionally be case insensitive; we'll handle
    that case in later patches.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a647f0df62cc4eaa0f42b85c71843ed90e150536
Author: Boaz Harrosh <bharrosh@panasas.com>
Date:   Fri Jun 8 02:02:30 2012 +0300

    pnfs-obj: Fix __r4w_get_page when offset is beyond i_size
    
    commit c999ff68029ebd0f56ccae75444f640f6d5a27d2 upstream.
    
    It is very common for the end of the file to be unaligned on
    stripe size. But since we know it's beyond file's end then
    the XOR should be preformed with all zeros.
    
    Old code used to just read zeros out of the OSD devices, which is a great
    waist. But what scares me more about this situation is that, we now have
    pages attached to the file's mapping that are beyond i_size. I don't
    like the kind of bugs this calls for.
    
    Fix both birds, by returning a global zero_page, if offset is beyond
    i_size.
    
    TODO:
            Change the API to ->__r4w_get_page() so a NULL can be
            returned without being considered as error, since XOR API
            treats NULL entries as zero_pages.
    
    [Bug since 3.2. Should apply the same way to all Kernels since]
    Signed-off-by: Boaz Harrosh <bharrosh@panasas.com>
    [bwh: Backported to 3.2: adjust for lack of wdata->header]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e73b09d8f258df200adb6383c77c38c31f6f4baa
Author: Joe Thornber <ejt@redhat.com>
Date:   Fri Jul 27 15:08:05 2012 +0100

    dm thin: fix memory leak in process_prepared_mapping error paths
    
    commit 905386f82d08f66726912f303f3e6605248c60a3 upstream.
    
    Fix memory leak in process_prepared_mapping by always freeing
    the dm_thin_new_mapping structs from the mapping_pool mempool on
    the error paths.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4ce163953a4baab2341ba42386904a7199d11af
Author: Alasdair G Kergon <agk@redhat.com>
Date:   Fri Jul 27 15:07:57 2012 +0100

    dm thin: reduce endio_hook pool size
    
    commit 7768ed33ccdc02801c4483fc5682dc66ace14aea upstream.
    
    Reduce the slab size used for the dm_thin_endio_hook mempool.
    
    Allocation has been seen to fail on machines with smaller amounts
    of memory due to fragmentation.
    
      lvm: page allocation failure. order:5, mode:0xd0
      device-mapper: table: 253:38: thin-pool: Error creating pool's endio_hook mempool
    
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27cd8f51344dcf4799c7a092c1797402b833126a
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Wed Jul 25 10:40:34 2012 -0400

    posix_types.h: Cleanup stale __NFDBITS and related definitions
    
    commit 8ded2bbc1845e19c771eb55209aab166ef011243 upstream.
    
    Recently, glibc made a change to suppress sign-conversion warnings in
    FD_SET (glibc commit ceb9e56b3d1).  This uncovered an issue with the
    kernel's definition of __NFDBITS if applications #include
    <linux/types.h> after including <sys/select.h>.  A build failure would
    be seen when passing the -Werror=sign-compare and -D_FORTIFY_SOURCE=2
    flags to gcc.
    
    It was suggested that the kernel should either match the glibc
    definition of __NFDBITS or remove that entirely.  The current in-kernel
    uses of __NFDBITS can be replaced with BITS_PER_LONG, and there are no
    uses of the related __FDELT and __FDMASK defines.  Given that, we'll
    continue the cleanup that was started with commit 8b3d1cda4f5f
    ("posix_types: Remove fd_set macros") and drop the remaining unused
    macros.
    
    Additionally, linux/time.h has similar macros defined that expand to
    nothing so we'll remove those at the same time.
    
    Reported-by: Jeff Law <law@redhat.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Josh Boyer <jwboyer@redhat.com>
    [ .. and fix up whitespace as per akpm ]
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6e9ffcdb09fbf28665e025aa31fda702689786c
Author: Jerome Glisse <jglisse@redhat.com>
Date:   Tue Jul 24 17:06:11 2012 -0400

    drm/radeon: fix dpms on/off on trinity/aruba v2
    
    commit fcedac670c3da0d17aaa5db1708694971e8024a9 upstream.
    
    The external encoder need to be setup again before enabling the
    transmiter. This seems to be only needed on some trinity/aruba
    to fix dpms on.
    
    v2: Add comment, only setup again on dce6 ie aruba or newer.
    
    Signed-off-by: Jerome Glisse <jglisse@redhat.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de5b1c0849465404f94ffc0574e9ec9e8dc97570
Author: Jerome Glisse <jglisse@redhat.com>
Date:   Thu Jul 19 17:25:55 2012 -0400

    drm/radeon: on hotplug force link training to happen (v2)
    
    commit ca2ccde5e2f24a792caa4cca919fc5c6f65d1887 upstream.
    
    To have DP behave like VGA/DVI we need to retrain the link
    on hotplug. For this to happen we need to force link
    training to happen by setting connector dpms to off
    before asking it turning it on again.
    
    v2: agd5f
    - drop the dp_get_link_status() change in atombios_dp.c
      for now.  We still need the dpms OFF change.
    
    Signed-off-by: Jerome Glisse <jglisse@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7ea4b8363e16630219674b9b8178dc07e7e6022
Author: Jerome Glisse <jglisse@redhat.com>
Date:   Thu Jul 19 17:15:56 2012 -0400

    drm/radeon: fix hotplug of DP to DVI|HDMI passive adapters (v2)
    
    commit 266dcba541a1ef7e5d82d9e67c67fde2910636e8 upstream.
    
    No need to retrain the link for passive adapters.
    
    v2: agd5f
    - no passive DP to VGA adapters, update comments
    - assign radeon_connector_atom_dig after we are sure
      we have a digital connector as analog connectors
      have different private data.
    - get new sink type before checking for retrain.  No
      need to check if it's no longer a DP connection.
    
    Signed-off-by: Jerome Glisse <jglisse@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 108c49a5cd65e2edc904212e6bd365db8d2f29e8
Author: Jerome Glisse <jglisse@redhat.com>
Date:   Tue Jul 17 17:17:16 2012 -0400

    drm/radeon: fix non revealent error message
    
    commit 8d1c702aa0b2c4b22b0742b72a1149d91690674b upstream.
    
    We want to print link status query failed only if it's
    an unexepected fail. If we query to see if we need
    link training it might be because there is nothing
    connected and thus link status query have the right
    to fail in that case.
    
    To avoid printing failure when it's expected, move the
    failure message to proper place.
    
    Signed-off-by: Jerome Glisse <jglisse@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bec6d04dc715ad9fbc0d86abb3eea125109cf98f
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Tue Jul 17 19:02:09 2012 +0200

    drm/radeon: Try harder to avoid HW cursor ending on a multiple of 128 columns.
    
    commit f60ec4c7df043df81e62891ac45383d012afe0da upstream.
    
    This could previously fail if either of the enabled displays was using a
    horizontal resolution that is a multiple of 128, and only the leftmost column
    of the cursor was (supposed to be) visible at the right edge of that display.
    
    The solution is to move the cursor one pixel to the left in that case.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=33183
    
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47be757968b4344dd3e46f4e62c842cc201e830d
Author: Jerome Glisse <jglisse@redhat.com>
Date:   Thu Jul 12 18:23:05 2012 -0400

    drm/radeon: fix bo creation retry path
    
    commit d1c7871ddb1f588b8eb35affd9ee1a3d5e11cd0c upstream.
    
    Retry label was at wrong place in function leading to memory
    leak.
    
    Signed-off-by: Jerome Glisse <jglisse@redhat.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d11fb27d2f819d61df7e6dc36eb27374a92abe8
Author: Christian König <deathsimple@vodafone.de>
Date:   Tue Jul 3 14:05:41 2012 +0200

    drm/radeon: fix fence related segfault in CS
    
    commit 93bf888c5c730605e3470f5d2381f296eda88d79 upstream.
    
    Don't return success if scheduling the IB fails, otherwise
    we end up with an oops in ttm_eu_fence_buffer_objects.
    
    Signed-off-by: Christian König <deathsimple@vodafone.de>
    Reviewed-by: Jerome Glisse <jglisse@redhat.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbb9e89c375e167d012058c82fa69dd17ec17d4c
Author: Michael Chan <mchan@broadcom.com>
Date:   Sun Jul 29 19:15:44 2012 +0000

    tg3: Fix race condition in tg3_get_stats64()
    
    commit 0f566b208b41918053b2e67399673aaec02dde5d upstream.
    
    Spinlock should be taken before checking for tp->hw_stats.
    
    Signed-off-by: Michael Chan <mchan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4593e510277fec9fbe8708b1276301ead59470f0
Author: Michael Chan <mchan@broadcom.com>
Date:   Sun Jul 29 19:15:42 2012 +0000

    tg3: Fix Read DMA workaround for 5719 A0.
    
    commit 10ce95d6ef36c65df7dcd3b8fcf86913f8b298bd upstream.
    
    The workaround was mis-applied to all 5719 and 5720 chips.
    
    Signed-off-by: Michael Chan <mchan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e49e6d039117405be1c4de6ac9cce196f9aea22e
Author: Greg KH <gregkh@linuxfoundation.org>
Date:   Thu Jul 12 15:39:44 2012 +0000

    tg3: add device id of Apple Thunderbolt Ethernet device
    
    commit 02eca3f5f5e458c3a5d7b772bc8042ee2a4ebedf upstream.
    
    The Apple Thunderbolt ethernet device is already listed in the driver,
    but not hooked up in the MODULE_DEVICE_TABLE().  This fixes that and
    allows it to work properly.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Michael Chan <mchan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit bfc41a820b085dff6048aab510a4dcb48b570d3b
Author: Frank Blaschka <frank.blaschka@de.ibm.com>
Date:   Tue Jul 24 22:34:29 2012 +0000

    qeth: repair crash in qeth_l3_vlan_rx_kill_vid()
    
    commit eabfbe6230ee7363681e7a561948d362b87169f0 upstream.
    
    Commit efc73f4b "net: Fix memory leak - vlan_info struct" adds deletion of
    VLAN 0 for devices with feature NETIF_F_HW_VLAN_FILTER. For driver
    qeth these are the layer 3 devices. Usually there exists no
    separate vlan net_device for VLAN 0. Thus the qeth functions
    qeth_l3_free_vlan_addresses4() and qeth_l3_free_vlan_addresses6()
    require an extra checking if function __vlan_find_dev_deep()
    returns with a net_device.
    
    Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com>
    Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e7a57b3ea066e3caf149feb37c6487d8423c772
Author: Virupax Sadashivpetimath <virupax.sadashivpetimath@stericsson.com>
Date:   Tue Jun 12 15:10:58 2012 +0200

    spi/pl022: disable port when unused
    
    commit fd316941cfee1fbd12746afea83720fb7823888a upstream.
    
    Commit ffbbdd21329f3e15eeca6df2d4bc11c04d9d91c0
    "spi: create a message queueing infrastructure"
    Accidentally deleted the logic to disable the port
    when unused leading to higher power consumption.
    Fix this up.
    
    Cc: Vinit Shenoy <vinit.shenoy@st.com>
    Signed-off-by: Virupax Sadashivpetimath <virupax.sadashivpetimath@stericsson.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da49dbd95a28bd166f8935f53ed76d406cd891ca
Author: Jeff Layton <jlayton@kernel.org>
Date:   Mon Jul 23 20:34:17 2012 -0400

    cifs: reinstate sec=ntlmv2 mount option
    
    commit 7659624ffb550d69c87f9af9ae63e717daa874bd upstream.
    
    sec=ntlmv2 as a mount option got dropped in the mount option overhaul.
    
    Cc: Sachin Prabhu <sprabhu@redhat.com>
    Reported-by: Günter Kukkukk <linux@kukkukk.com>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d458a00f17bd1c883eaf0192e1cc33a2ae530750
Author: Chris Mason <chris.mason@fusionio.com>
Date:   Wed Jul 25 15:57:13 2012 -0400

    Btrfs: call the ordered free operation without any locks held
    
    commit e9fbcb42201c862fd6ab45c48ead4f47bb2dea9d upstream.
    
    Each ordered operation has a free callback, and this was called with the
    worker spinlock held.  Josef made the free callback also call iput,
    which we can't do with the spinlock.
    
    This drops the spinlock for the free operation and grabs it again before
    moving through the rest of the list.  We'll circle back around to this
    and find a cleaner way that doesn't bounce the lock around so much.
    
    Signed-off-by: Chris Mason <chris.mason@fusionio.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1542109ac67110d3072fabb23e4604be0ff7554
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Fri Jul 20 13:29:16 2012 +0800

    ACPI/AC: prevent OOPS on some boxes due to missing check power_supply_register() return value check
    
    commit f197ac13f6eeb351b31250b9ab7d0da17434ea36 upstream.
    
    In the ac.c, power_supply_register()'s return value is not checked.
    
    As a result, the driver's add() ops may return success
    even though the device failed to initialize.
    
    For example, some BIOS may describe two ACADs in the same DSDT.
    The second ACAD device will fail to register,
    but ACPI driver's add() ops returns sucessfully.
    The ACPI device will receive ACPI notification and cause OOPS.
    
    https://bugzilla.redhat.com/show_bug.cgi?id=772730
    
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ebdf76ba264031c60e8dc720775833e0ab6512d
Author: Jean Delvare <jdelvare@suse.de>
Date:   Tue Jun 12 10:43:28 2012 +0200

    ACPI, APEI: Fixup common access width firmware bug
    
    commit f712c71f7b2b43b894d1e92e1b77385fcad8815f upstream.
    
    Many firmwares have a common register definition bug where 8-bit
    access width is specified for a 32-bit register. Ideally this should
    be fixed in the BIOS, but earlier versions of the kernel did not
    complain, so fix that up silently.
    
    This closes kernel bug #43282:
    https://bugzilla.kernel.org/show_bug.cgi?id=43282
    
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Acked-by: Huang Ying <ying.huang@intel.com>
    Acked-by: Gary Hade <garyhade@us.ibm.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3b42543cf269243ccf2add49008db879ff7f146
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Jul 17 12:39:26 2012 -0700

    workqueue: perform cpu down operations from low priority cpu_notifier()
    
    commit 6575820221f7a4dd6eadecf7bf83cdd154335eda upstream.
    
    Currently, all workqueue cpu hotplug operations run off
    CPU_PRI_WORKQUEUE which is higher than normal notifiers.  This is to
    ensure that workqueue is up and running while bringing up a CPU before
    other notifiers try to use workqueue on the CPU.
    
    Per-cpu workqueues are supposed to remain working and bound to the CPU
    for normal CPU_DOWN_PREPARE notifiers.  This holds mostly true even
    with workqueue offlining running with higher priority because
    workqueue CPU_DOWN_PREPARE only creates a bound trustee thread which
    runs the per-cpu workqueue without concurrency management without
    explicitly detaching the existing workers.
    
    However, if the trustee needs to create new workers, it creates
    unbound workers which may wander off to other CPUs while
    CPU_DOWN_PREPARE notifiers are in progress.  Furthermore, if the CPU
    down is cancelled, the per-CPU workqueue may end up with workers which
    aren't bound to the CPU.
    
    While reliably reproducible with a convoluted artificial test-case
    involving scheduling and flushing CPU burning work items from CPU down
    notifiers, this isn't very likely to happen in the wild, and, even
    when it happens, the effects are likely to be hidden by the following
    successful CPU down.
    
    Fix it by using different priorities for up and down notifiers - high
    priority for up operations and low priority for down operations.
    
    Workqueue cpu hotplug operations will soon go through further cleanup.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: "Rafael J. Wysocki" <rjw@sisk.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7815406caf7efdd805e893caef4a63e61b7645e
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Jun 20 02:31:11 2012 +0100

    staging: zsmalloc: Finish conversion to a separate module
    
    commit 069f101fa463351f528773d73b74e9b606b3f66a upstream.
    
    ZSMALLOC is tristate, but the code has no MODULE_LICENSE and since it
    depends on GPL-only symbols it cannot be loaded as a module.  This in
    turn breaks zram which now depends on it.  I assume it's meant to be
    Dual BSD/GPL like the other z-stuff.
    
    There is also no module_exit, which will make it impossible to unload.
    Add the appropriate module_init and module_exit declarations suggested
    by comments.
    
    Reported-by: Christian Ohm <chr.ohm@gmx.net>
    References: http://bugs.debian.org/677273
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Reviewed-by: Jonathan Nieder <jrnieder@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02f5c5d768faf0417b6801a1bfebc866a6db7878
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Tue Jun 5 11:15:50 2012 -0400

    stable: update references to older 2.6 versions for 3.x
    
    commit 2584f5212d97b664be250ad5700a2d0fee31a10d upstream.
    
    Also add information on where the respective trees are.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Acked-by: Rob Landley <rob@landley.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 664634f8a03e721a7fffb5f1e21cbdd806598cda
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jul 10 17:58:04 2012 +0200

    udf: Improve table length check to avoid possible overflow
    
    commit 57b9655d01ef057a523e810d29c37ac09b80eead upstream.
    
    When a partition table length is corrupted to be close to 1 << 32, the
    check for its length may overflow on 32-bit systems and we will think
    the length is valid. Later on the kernel can crash trying to read beyond
    end of buffer. Fix the check to avoid possible overflow.
    
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06e619c5073d1830f58039cd97e95ae184cf7bbb
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Thu Jul 19 13:42:54 2012 +0200

    iommu/amd: Fix hotplug with iommu=pt
    
    commit 2c9195e990297068d0f1f1bd8e2f1d09538009da upstream.
    
    This did not work because devices are not put into the
    pt_domain. Fix this.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6c1b59aaa759ae5374dedf8508ee14aff2f967f
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Thu Jul 19 10:56:10 2012 +0200

    iommu/amd: Add missing spin_lock initialization
    
    commit 2c13d47a1a7ee8808796016c617aef25fd1d1925 upstream.
    
    Add missing spin_lock initialization in
    amd_iommu_bind_pasid() function and make lockdep happy
    again.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 351bb0ecc5b0b9dc60d07a44078fa16971c7f3e7
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Fri Jul 27 09:45:39 2012 +0200

    s390/mm: fix fault handling for page table walk case
    
    commit 008c2e8f247f0a8db1e8e26139da12f3a3abcda0 upstream.
    
    Make sure the kernel does not incorrectly create a SIGBUS signal during
    user space accesses:
    
    For user space accesses in the switched addressing mode case the kernel
    may walk page tables and access user address space via the kernel
    mapping. If a page table entry is invalid the function __handle_fault()
    gets called in order to emulate a page fault and trigger all the usual
    actions like paging in a missing page etc. by calling handle_mm_fault().
    
    If handle_mm_fault() returns with an error fixup handling is necessary.
    For the switched addressing mode case all errors need to be mapped to
    -EFAULT, so that the calling uaccess function can return -EFAULT to
    user space.
    
    Unfortunately the __handle_fault() incorrectly calls do_sigbus() if
    VM_FAULT_SIGBUS is set. This however should only happen if a page fault
    was triggered by a user space instruction. For kernel mode uaccesses
    the correct action is to only return -EFAULT.
    So user space may incorrectly see SIGBUS signals because of this bug.
    
    For current machines this would only be possible for the switched
    addressing mode case in conjunction with futex operations.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd1af8b7d386e6b3991252650c16b3e9d5a03b65
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Thu Jul 26 08:53:06 2012 +0200

    s390/mm: downgrade page table after fork of a 31 bit process
    
    commit 0f6f281b731d20bfe75c13f85d33f3f05b440222 upstream.
    
    The downgrade of the 4 level page table created by init_new_context is
    currently done only in start_thread31. If a 31 bit process forks the
    new mm uses a 4 level page table, including the task size of 2<<42
    that goes along with it. This is incorrect as now a 31 bit process
    can map memory beyond 2GB. Define arch_dup_mmap to do the downgrade
    after fork.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 554c9a0c6f72a8a5c44962b82f495d95e547b4b3
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Fri Jul 13 15:45:33 2012 +0200

    s390/idle: fix sequence handling vs cpu hotplug
    
    commit 0008204ffe85d23382d6fd0f971f3f0fbe70bae2 upstream.
    
    The s390 idle accounting code uses a sequence counter which gets used
    when the per cpu idle statistics get updated and read.
    
    One assumption on read access is that only when the sequence counter is
    even and did not change while reading all values the result is valid.
    On cpu hotplug however the per cpu data structure gets initialized via
    a cpu hotplug notifier on CPU_ONLINE.
    CPU_ONLINE however is too late, since the onlined cpu is already running
    and might access the per cpu data. Worst case is that the data structure
    gets initialized while an idle thread is updating its idle statistics.
    This will result in an uneven sequence counter after an update.
    
    As a result user space tools like top, which access /proc/stat in order
    to get idle stats, will busy loop waiting for the sequence counter to
    become even again, which will never happen until the queried cpu will
    update its idle statistics again. And even then the sequence counter
    will only have an even value for a couple of cpu cycles.
    
    Fix this by moving the initialization of the per cpu idle statistics
    to cpu_init(). I prefer that solution in favor of changing the
    notifier to CPU_UP_PREPARE, which would be a different solution to
    the problem.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c3fea5b8591cd8c539bff95108efc2a1f9c5f20
Author: Amitkumar Karwar <akarwar@marvell.com>
Date:   Wed Jul 11 18:12:57 2012 -0700

    mwifiex: correction in mcs index check
    
    commit fe020120cb863ba918c6d603345342a880272c4d upstream.
    
    mwifiex driver supports 2x2 chips as well. Hence valid mcs values
    are 0 to 15. The check for mcs index is corrected in this patch.
    
    For example: if 40MHz is enabled and mcs index is 11, "iw link"
    command would show "tx bitrate: 108.0 MBit/s" without this patch.
    Now it shows "tx bitrate: 108.0 MBit/s MCS 11 40Mhz" with the patch.
    
    Signed-off-by: Amitkumar Karwar <akarwar@marvell.com>
    Signed-off-by: Bing Zhao <bzhao@marvell.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae9bc43cfc53968dd628052d1c225ace8560da64
Author: Forest Bond <forest.bond@rapidrollout.com>
Date:   Fri Jul 13 12:26:06 2012 -0400

    rtlwifi: rtl8192de: Fix phy-based version calculation
    
    commit f1b00f4dab29b57bdf1bc03ef12020b280fd2a72 upstream.
    
    Commit d83579e2a50ac68389e6b4c58b845c702cf37516 incorporated some
    changes from the vendor driver that made it newly important that the
    calculated hardware version correctly include the CHIP_92D bit, as all
    of the IS_92D_* macros were changed to depend on it.  However, this bit
    was being unset for dual-mac, dual-phy devices.  The vendor driver
    behavior was modified to not do this, but unfortunately this change was
    not picked up along with the others.  This caused scanning in the 2.4GHz
    band to be broken, and possibly other bugs as well.
    
    This patch brings the version calculation logic in parity with the
    vendor driver in this regard, and in doing so fixes the regression.
    However, the version calculation code in general continues to be largely
    incoherent and messy, and needs to be cleaned up.
    
    Signed-off-by: Forest Bond <forest.bond@rapidrollout.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74ec52aa07788b9bce2edd6ce9763c0d79bad38a
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Wed Jul 11 14:37:28 2012 -0500

    rtlwifi: rtl8192cu: Change buffer allocation for synchronous reads
    
    commit 3ce4d85b76010525adedcc2555fa164bf706a2f3 upstream.
    
    In commit a7959c1, the USB part of rtlwifi was switched to convert
    _usb_read_sync() to using a preallocated buffer rather than one
    that has been acquired using kmalloc. Although this routine is named
    as though it were synchronous, there seem to be simultaneous users,
    and the selection of the index to the data buffer is not multi-user
    safe. This situation is addressed by adding a new spinlock. The routine
    cannot sleep, thus a mutex is not allowed.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a75b6122aacd06507cae1010e0fb6b06fe53336a
Author: Meenakshi Venkataraman <meenakshi.venkataraman@intel.com>
Date:   Wed May 16 22:40:50 2012 +0200

    iwlwifi: fix debug print in iwl_sta_calc_ht_flags
    
    commit a35e270881a5db1ec9ac8bc6d61ebc3e85c14f33 upstream.
    
    We missed passing an argument to the
    debug print. Fix it.
    
    Signed-off-by: Meenakshi Venkataraman <meenakshi.venkataraman@intel.com>
    Reviewed-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79746484cab1dede1480580efe9edde68de06770
Author: Eliad Peller <eliad@wizery.com>
Date:   Sun May 13 18:07:04 2012 +0300

    mac80211: fail authentication when AP denied authentication
    
    commit dac211ec10d268b9d09000093a9fa2ac1773894f upstream.
    
    ieee80211_rx_mgmt_auth() doesn't handle denied authentication
    properly - it authenticates the station and waits for association
    (for 5 seconds) instead of failing the authentication.
    
    Fix it by destroying auth_data and bailing out instead.
    
    Signed-off-by: Eliad Peller <eliad@wizery.com>
    Acked-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20855fe2097ccfde927c6997101ae35340f1d278
Author: Mikulas Patocka <mikulas@artax.karlin.mff.cuni.cz>
Date:   Thu Jul 19 06:13:36 2012 +0000

    tun: fix a crash bug and a memory leak
    
    commit b09e786bd1dd66418b69348cb110f3a64764626a upstream.
    
    This patch fixes a crash
    tun_chr_close -> netdev_run_todo -> tun_free_netdev -> sk_release_kernel ->
    sock_release -> iput(SOCK_INODE(sock))
    introduced by commit 1ab5ecb90cb6a3df1476e052f76a6e8f6511cb3d
    
    The problem is that this socket is embedded in struct tun_struct, it has
    no inode, iput is called on invalid inode, which modifies invalid memory
    and optionally causes a crash.
    
    sock_release also decrements sockets_in_use, this causes a bug that
    "sockets: used" field in /proc/*/net/sockstat keeps on decreasing when
    creating and closing tun devices.
    
    This patch introduces a flag SOCK_EXTERNALLY_ALLOCATED that instructs
    sock_release to not free the inode and not decrement sockets_in_use,
    fixing both memory corruption and sockets_in_use underflow.
    
    It should be backported to 3.3 an 3.4 stabke.
    
    Signed-off-by: Mikulas Patocka <mikulas@artax.karlin.mff.cuni.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecbd55f98e07e25d4017077d0a611ce6c766257b
Author: Rajiv Andrade <srajiv@linux.vnet.ibm.com>
Date:   Tue Apr 24 17:38:17 2012 -0300

    TPM: chip disabled state erronously being reported as error
    
    commit 24ebe6670de3d1f0dca11c9eb372134c7ab05503 upstream.
    
    tpm_do_selftest() attempts to read a PCR in order to
    decide if one can rely on the TPM being used or not.
    The function that's used by __tpm_pcr_read() does not
    expect the TPM to be disabled or deactivated, and if so,
    reports an error.
    
    It's fine if the TPM returns this error when trying to
    use it for the first time after a power cycle, but it's
    definitely not if it already returned success for a
    previous attempt to read one of its PCRs.
    
    The tpm_do_selftest() was modified so that the driver only
    reports this return code as an error when it really is.
    
    Reported-and-tested-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46dbb0f5903b71e3c7b37e4ad707a9aa70fe3eed
Author: Colin Cross <ccross@android.com>
Date:   Thu Jul 19 10:38:06 2012 +0200

    PM / Sleep: call early resume handlers when suspend_noirq fails
    
    commit 064b021fbe470ecc9ca10f9f87af48c0fc0865fb upstream.
    
    Commit cf579dfb82550e34de7ccf3ef090d8b834ccd3a9 (PM / Sleep: Introduce
    "late suspend" and "early resume" of devices) introduced a bug where
    suspend_late handlers would be called, but if dpm_suspend_noirq returned
    an error the early_resume handlers would never be called.  All devices
    would end up on the dpm_late_early_list, and would never be resumed
    again.
    
    Fix it by calling dpm_resume_early when dpm_suspend_noirq returns
    an error.
    
    Signed-off-by: Colin Cross <ccross@android.com>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3dd392851e014c90ce9e26d03a93188840a5a0b
Author: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Date:   Sat Jun 16 15:30:45 2012 +0200

    ftrace: Disable function tracing during suspend/resume and hibernation, again
    
    commit 443772d408a25af62498793f6f805ce3c559309a upstream.
    
    If function tracing is enabled for some of the low-level suspend/resume
    functions, it leads to triple fault during resume from suspend, ultimately
    ending up in a reboot instead of a resume (or a total refusal to come out
    of suspended state, on some machines).
    
    This issue was explained in more detail in commit f42ac38c59e0a03d (ftrace:
    disable tracing for suspend to ram). However, the changes made by that commit
    got reverted by commit cbe2f5a6e84eebb (tracing: allow tracing of
    suspend/resume & hibernation code again). So, unfortunately since things are
    not yet robust enough to allow tracing of low-level suspend/resume functions,
    suspend/resume is still broken when ftrace is enabled.
    
    So fix this by disabling function tracing during suspend/resume & hibernation.
    
    Signed-off-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd3cca0a4e6ac0512e9122f59dfe0214b74049fb
Author: J. Bruce Fields <bfields@fieldses.org>
Date:   Mon Jul 23 15:17:17 2012 -0400

    locks: fix checking of fcntl_setlease argument
    
    commit 0ec4f431eb56d633da3a55da67d5c4b88886ccc7 upstream.
    
    The only checks of the long argument passed to fcntl(fd,F_SETLEASE,.)
    are done after converting the long to an int.  Thus some illegal values
    may be let through and cause problems in later code.
    
    [ They actually *don't* cause problems in mainline, as of Dave Jones's
      commit 8d657eb3b438 "Remove easily user-triggerable BUG from
      generic_setlease", but we should fix this anyway.  And this patch will
      be necessary to fix real bugs on earlier kernels. ]
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b689c5d930f281e417597af9f817ba03dc9d898
Author: Tony Luck <tony.luck@intel.com>
Date:   Wed Jul 11 10:20:47 2012 -0700

    x86/mce: Fix siginfo_t->si_addr value for non-recoverable memory faults
    
    commit 6751ed65dc6642af64f7b8a440a75563c8aab7ae upstream.
    
    In commit dad1743e5993f1 ("x86/mce: Only restart instruction after machine
    check recovery if it is safe") we fixed mce_notify_process() to force a
    signal to the current process if it was not restartable (RIPV bit not
    set in MCG_STATUS). But doing it here means that the process doesn't
    get told the virtual address of the fault via siginfo_t->si_addr. This
    would prevent application level recovery from the fault.
    
    Make a new MF_MUST_KILL flag bit for memory_failure() et al. to use so
    that we will provide the right information with the signal.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Acked-by: Borislav Petkov <borislav.petkov@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2830f9a08c084bcf40819942f04d0ca500faf4b8
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Fri Jul 20 10:37:25 2012 +0200

    ALSA: hda - add dock support for Thinkpad X230 Tablet
    
    commit 108cc108a3bb42fe4705df1317ff98e1e29428a6 upstream.
    
    Also add a model/fixup string "lenovo-dock", so that other Thinkpad
    users will be able to test this fixup easily, to see if it enables
    dock I/O for them as well.
    
    BugLink: https://bugs.launchpad.net/bugs/1026953
    Tested-by: John McCarron <john.mccarron@canonical.com>
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22dacbd152e98dfd627664f5ee3c21d2bd32430b
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Tue Jun 19 09:54:48 2012 +0200

    Revert "usb/uas: make sure data urb is gone if we receive status before that"
    
    commit c621a81edecdee85da32c566c21836332c764fda upstream.
    
    This reverts commit e4d8318a85779b25b880187b1b1c44e797bd7d4b.
    
    This patch makes uas.c call usb_unlink_urb on data urbs.  The data urbs
    get freed in the completion callback.  This is illegal according to the
    usb_unlink_urb documentation.
    
    This patch also makes the code expect the data completion callback
    being called before the status completion callback.  This isn't
    guaranteed to be the case, even though the actual data transfer should
    be finished by the time the status is received.
    
    Background:  The ehci irq handler for example only know that there are
    finished transfers, it then has go check the QHs & TDs to see which
    transfers did actually finish.  It has no way to figure in which order
    the transfers did complete.  The xhci driver can call the callbacks in
    completion order thanks to the event queue.  This does nicely explain
    why the driver is solid on a (usb2) xhci port whereas it goes crazy on
    ehci in my testing.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11ca5d15e7a84181788c01adc4049a36e387dd84
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Jul 12 12:37:32 2012 +0200

    USB: option: add ZTE MF821D
    
    commit 09110529780890804b22e997ae6b4fe3f0b3b158 upstream.
    
    Sold by O2 (telefonica germany) under the name "LTE4G"
    
    Tested-by: Thomas Schäfer <tschaefer@t-online.de>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cfe89c15298554d5cf9160bf6d8eef290d34041
Author: Kevin Cernekee <cernekee@gmail.com>
Date:   Sun Jun 24 21:11:22 2012 -0700

    usb: gadget: Fix g_ether interface link status
    
    commit 31bde1ceaa873bcaecd49e829bfabceacc4c512d upstream.
    
    A "usb0" interface that has never been connected to a host has an unknown
    operstate, and therefore the IFF_RUNNING flag is (incorrectly) asserted
    when queried by ifconfig, ifplugd, etc.  This is a result of calling
    netif_carrier_off() too early in the probe function; it should be called
    after register_netdev().
    
    Similar problems have been fixed in many other drivers, e.g.:
    
        e826eafa6 (bonding: Call netif_carrier_off after register_netdevice)
        0d672e9f8 (drivers/net: Call netif_carrier_off at the end of the probe)
        6a3c869a6 (cxgb4: fix reported state of interfaces without link)
    
    Fix is to move netif_carrier_off() to the end of the function.
    
    Signed-off-by: Kevin Cernekee <cernekee@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2af3ad34568307d037dc7ab8f923b51e068b33c4
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jul 4 09:18:01 2012 +0200

    usbdevfs: Correct amount of data copied to user in processcompl_compat
    
    commit 2102e06a5f2e414694921f23591f072a5ba7db9f upstream.
    
    iso data buffers may have holes in them if some packets were short, so for
    iso urbs we should always copy the entire buffer, just like the regular
    processcompl does.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 761f186a0f94f7bd1c9c844f96cf0b8bbb6e2abb
Author: Dylan Reid <dgreid@chromium.org>
Date:   Thu Jul 19 17:52:58 2012 -0700

    ALSA: hda - Turn on PIN_OUT from hdmi playback prepare.
    
    commit 9e76e6d031482194a5b24d8e9ab88063fbd6b4b5 upstream.
    
    Turn on the pin widget's PIN_OUT bit from playback prepare. The pin is
    enabled in open, but is disabled in hdmi_init_pin which is called during
    system resume.  This causes a system suspend/resume during playback to
    mute HDMI/DP. Enabling the pin in prepare instead of open allows calling
    snd_pcm_prepare after a system resume to restore audio.
    
    Signed-off-by: Dylan Reid <dgreid@chromium.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e613aa6c586c99341a3ca40fd7f872b7dee1749
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Wed Jul 18 07:38:46 2012 +0200

    ALSA: hda - Add support for Realtek ALC282
    
    commit 4e01ec636e64707d202a1ca21a47bbc6d53085b7 upstream.
    
    This codec has a separate dmic path (separate dmic only ADC),
    and thus it looks mostly like ALC275.
    
    BugLink: https://bugs.launchpad.net/bugs/1025377
    Tested-by: Ray Chen <ray.chen@canonical.com>
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f1b438887c47d3b65fc64ca23821d69ba69ddd7
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jul 11 19:03:48 2012 +0100

    ASoC: wm8962: Redo early init of the part on resume
    
    commit e4dd76788c7e5b27165890d712c8c4f6f0abd645 upstream.
    
    Ensure robust startup of the part by going through the reset procedure
    prior to resyncing the full register cache, avoiding potential intermittent
    faults in some designs.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a73185355e3d19694b655528811e54cc086a5bcf
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jul 20 17:29:34 2012 +0100

    ASoC: dapm: Fix _PRE and _POST events for DAPM performance improvements
    
    commit 0ff97ebf0804d2e519d578fcb4db03f104d2ca8c upstream.
    
    Ever since the DAPM performance improvements we've been marking all widgets
    as not dirty after each DAPM run. Since _PRE and _POST events aren't part
    of the DAPM graph this has rendered them non-functional, they will never be
    marked dirty again and thus will never be run again.
    
    Fix this by skipping them when marking widgets as not dirty.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0706b27d2ff206bdbeb457a56944ca372e6a9d8e
Author: Nishanth Menon <nm@ti.com>
Date:   Fri May 18 12:26:19 2012 -0500

    ARM: OMAP2+: OPP: Fix to ensure check of right oppdef after bad one
    
    commit b110547e586eb5825bc1d04aa9147bff83b57672 upstream.
    
    Commit 9fa2df6b90786301b175e264f5fa9846aba81a65
    (ARM: OMAP2+: OPP: allow OPP enumeration to continue if device is not present)
    makes the logic:
    for (i = 0; i < opp_def_size; i++) {
            <snip>
            if (!oh || !oh->od) {
                    <snip>
                    continue;
            }
    <snip>
    opp_def++;
    }
    
    In short, the moment we hit a "Bad OPP", we end up looping the list
    comparing against the bad opp definition pointer for the rest of the
    iteration count. Instead, increment opp_def in the for loop itself
    and allow continue to be used in code without much thought so that
    we check the next set of OPP definition pointers :)
    
    Cc: Steve Sakoman <steve@sakoman.com>
    Cc: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4c3d44ab775fa457c49d7fce906df0a310bb347
Author: Albert Pool <albertpool@solcon.nl>
Date:   Mon May 14 18:08:32 2012 +0200

    rt2800usb: 2001:3c17 is an RT3370 device
    
    commit 8fd9d059af12786341dec5a688e607bcdb372238 upstream.
    
    D-Link DWA-123 rev A1
    
    Signed-off-by: Albert Pool<albertpool@solcon.nl>
    Acked-by: Gertjan van Wingerde <gwingerde@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ecccfc25f7dda4f1d2aeb6db0658368d3ef185
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Jun 29 15:34:26 2012 +0000

    SCSI: Avoid dangling pointer in scsi_requeue_command()
    
    commit 940f5d47e2f2e1fa00443921a0abf4822335b54d upstream.
    
    When we call scsi_unprep_request() the command associated with the request
    gets destroyed and therefore drops its reference on the device.  If this was
    the only reference, the device may get released and we end up with a NULL
    pointer deref when we call blk_requeue_request.
    
    Reported-by: Mike Christie <michaelc@cs.wisc.edu>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Tejun Heo <tj@kernel.org>
    [jejb: enhance commend and add commit log for stable]
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb0f467989fd14bd4bf41b9a30b49900f9223e47
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Jun 29 15:33:22 2012 +0000

    SCSI: Fix device removal NULL pointer dereference
    
    commit 67bd94130015c507011af37858989b199c52e1de upstream.
    
    Use blk_queue_dead() to test whether the queue is dead instead
    of !sdev. Since scsi_prep_fn() may be invoked concurrently with
    __scsi_remove_device(), keep the queuedata (sdev) pointer in
    __scsi_remove_device(). This patch fixes a kernel oops that
    can be triggered by USB device removal. See also
    http://www.spinics.net/lists/linux-scsi/msg56254.html.
    
    Other changes included in this patch:
    - Swap the blk_cleanup_queue() and kfree() calls in
      scsi_host_dev_release() to make that code easier to grasp.
    - Remove the queue dead check from scsi_run_queue() since the
      queue state can change anyway at any point in that function
      where the queue lock is not held.
    - Remove the queue dead check from the start of scsi_request_fn()
      since it is redundant with the scsi_device_online() check.
    
    Reported-by: Jun'ichi Nomura <j-nomura@ce.jp.nec.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Reviewed-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f07d3f59e35eb0fc8847587f601f84b8cfa8dd38
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Jun 21 23:47:28 2012 -0700

    SCSI: fix hot unplug vs async scan race
    
    commit 3b661a92e869ebe2358de8f4b3230ad84f7fce51 upstream.
    
    The following crash results from cases where the end_device has been
    removed before scsi_sysfs_add_sdev has had a chance to run.
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000098
     IP: [<ffffffff8115e100>] sysfs_create_dir+0x32/0xb6
     ...
     Call Trace:
      [<ffffffff8125e4a8>] kobject_add_internal+0x120/0x1e3
      [<ffffffff81075149>] ? trace_hardirqs_on+0xd/0xf
      [<ffffffff8125e641>] kobject_add_varg+0x41/0x50
      [<ffffffff8125e70b>] kobject_add+0x64/0x66
      [<ffffffff8131122b>] device_add+0x12d/0x63a
      [<ffffffff814b65ea>] ? _raw_spin_unlock_irqrestore+0x47/0x56
      [<ffffffff8107de15>] ? module_refcount+0x89/0xa0
      [<ffffffff8132f348>] scsi_sysfs_add_sdev+0x4e/0x28a
      [<ffffffff8132dcbb>] do_scan_async+0x9c/0x145
    
    ...teach scsi_sysfs_add_devices() to check for deleted devices() before
    trying to add them, and teach scsi_remove_target() how to remove targets
    that have not been added via device_add().
    
    Reported-by: Dariusz Majchrzak <dariusz.majchrzak@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb12049078a3a69f750779a19287cd4ac5f2bc3e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Jun 21 23:25:32 2012 -0700

    SCSI: fix eh wakeup (scsi_schedule_eh vs scsi_restart_operations)
    
    commit 57fc2e335fd3c2f898ee73570dc81426c28dc7b4 upstream.
    
    Rapid ata hotplug on a libsas controller results in cases where libsas
    is waiting indefinitely on eh to perform an ata probe.
    
    A race exists between scsi_schedule_eh() and scsi_restart_operations()
    in the case when scsi_restart_operations() issues i/o to other devices
    in the sas domain.  When this happens the host state transitions from
    SHOST_RECOVERY (set by scsi_schedule_eh) back to SHOST_RUNNING and
    ->host_busy is non-zero so we put the eh thread to sleep even though
    ->host_eh_scheduled is active.
    
    Before putting the error handler to sleep we need to check if the
    host_state needs to return to SHOST_RECOVERY for another trip through
    eh.  Since i/o that is released by scsi_restart_operations has been
    blocked for at least one eh cycle, this implementation allows those
    i/o's to run before another eh cycle starts to discourage hung task
    timeouts.
    
    Reported-by: Tom Jackson <thomas.p.jackson@intel.com>
    Tested-by: Tom Jackson <thomas.p.jackson@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c06102701a00d42f2c690d97cc2203d561ea6a4
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Jun 21 23:36:20 2012 -0700

    SCSI: libsas: fix sas_discover_devices return code handling
    
    commit b17caa174a7e1fd2e17b26e210d4ee91c4c28b37 upstream.
    
    commit 198439e4 [SCSI] libsas: do not set res = 0 in sas_ex_discover_dev()
    commit 19252de6 [SCSI] libsas: fix wide port hotplug issues
    
    The above commits seem to have confused the return value of
    sas_ex_discover_dev which is non-zero on failure and
    sas_ex_join_wide_port which just indicates short circuiting discovery on
    already established ports.  The result is random discovery failures
    depending on configuration.
    
    Calls to sas_ex_join_wide_port are the source of the trouble as its
    return value is errantly assigned to 'res'.  Convert it to bool and stop
    returning its result up the stack.
    
    Tested-by: Dan Melnic <dan.melnic@amd.com>
    Reported-by: Dan Melnic <dan.melnic@amd.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Jack Wang <jack_wang@usish.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de0449fd59c6c6a9a523c625a014c8d8cd73810f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Jun 21 23:36:15 2012 -0700

    SCSI: libsas: continue revalidation
    
    commit 26f2f199ff150d8876b2641c41e60d1c92d2fb81 upstream.
    
    Continue running revalidation until no more broadcast devices are
    discovered.  Fixes cases where re-discovery completes too early in a
    domain with multiple expanders with pending re-discovery events.
    Servicing BCNs can get backed up behind error recovery.
    
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 753e14ef13311122aa5a819657d17940969a6f80
Author: Timur Tabi <timur@freescale.com>
Date:   Thu Jul 5 10:08:28 2012 -0500

    powerpc/85xx: use the BRx registers to enable indirect mode on the P1022DS
    
    commit 6bd825f02966be8ba544047cab313d6032c23819 upstream.
    
    In order to enable the DIU video controller on the P1022DS, the FPGA needs
    to be switched to "indirect mode", where the localbus is disabled and
    the FPGA is accessed via writes to localbus chip select signals CS0 and CS1.
    
    To obtain the address of CS0 and CS1, the platform driver uses an "indirect
    pixis mode" device tree node.  This node assumes that the localbus 'ranges'
    property is sorted in chip-select order.  That is, reg value 0 maps to
    CS0, reg value 1 maps to CS1, etc.  This is how the 'ranges' property is
    supposed to be arranged.
    
    Unfortunately, the 'ranges' property is often mis-arranged, and not just on
    the P1022DS.  Linux normally does not care, since it does not program the
    localbus.  But the indirect-mode code on the P1022DS does care.
    
    The "proper" fix is to have U-Boot fix the 'ranges' property, but this would
    be too cumbersome.  The names and 'reg' properties of all the localbus
    devices would also need to be updated, and determining which localbus device
    maps to which chip select is board-specific.
    
    Instead, we determine the CS0/CS1 base addresses the same way that U-boot
    does -- by reading the BRx registers directly and mapping them to physical
    addresses.  This code is simpler and more reliable, and it does not require
    a U-boot or device tree change.
    
    Since the indirect pixis device tree node is no longer needed, the node is
    deleted from the DTS.
    
    Signed-off-by: Timur Tabi <timur@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f18e28667a2a26d0ead02cc730524fa6203ec818
Author: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
Date:   Thu Jul 12 17:14:36 2012 +0000

    powerpc/eeh: Check handle_eeh_events() return value
    
    commit 10db8d212864cb6741df7d7fafda5ab6661f6f88 upstream.
    
    Function eeh_event_handler() dereferences the pointer returned by
    handle_eeh_events() without checking, causing a crash if NULL was
    returned, which is expected in some situations.
    
    This patch fixes this bug by checking for the value returned by
    handle_eeh_events() before dereferencing it.
    
    Signed-off-by: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a461394c31c5aa3c8cfe98dd0dc35f6b56047770
Author: Tiejun Chen <tiejun.chen@windriver.com>
Date:   Wed Jul 11 14:22:46 2012 +1000

    powerpc: Add "memory" attribute for mfmsr()
    
    commit b416c9a10baae6a177b4f9ee858b8d309542fbef upstream.
    
    Add "memory" attribute in inline assembly language as a compiler
    barrier to make sure 4.6.x GCC don't reorder mfmsr().
    
    Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cdb31f3c09f2bdd10d520a24def87d90c0030ba
Author: roger blofeld <blofeldus@yahoo.com>
Date:   Thu Jun 21 05:27:14 2012 +0000

    powerpc/ftrace: Fix assembly trampoline register usage
    
    commit fd5a42980e1cf327b7240adf5e7b51ea41c23437 upstream.
    
    Just like the module loader, ftrace needs to be updated to use r12
    instead of r11 with newer gcc's.
    
    Signed-off-by: Roger Blofeld <blofeldus@yahoo.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94c73bbcec6a77eb8a526a1230631a2cc18bf18b
Author: Aaron Lu <aaron.lu@amd.com>
Date:   Tue Jul 3 17:27:49 2012 +0800

    mmc: sdhci: fix incorrect command used in tuning
    
    commit 473b095a72a95ba719905b1f2e82cd18d099a427 upstream.
    
    For SD hosts using retuning mode 1, when retuning timer expired, it will
    need to do retuning in sdhci_request before processing the actual
    request. But the retuning command is fixed: cmd19 for SD card and cmd21
    for eMMC card, so we can't use the original request's command to do the
    tuning.
    
    And since the tuning command depends on the card type attached to the
    host, we will need to know the card type to use the correct tuning
    command.
    
    Signed-off-by: Aaron Lu <aaron.lu@amd.com>
    Reviewed-by: Philip Rakity <prakity@marvell.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5b5af98489f4db8025baee2fc0cae7dd0d19ac3
Author: Daniel Drake <dsd@laptop.org>
Date:   Tue Jul 3 23:13:39 2012 +0100

    mmc: sdhci-pci: CaFe has broken card detection
    
    commit 55fc05b7414274f17795cd0e8a3b1546f3649d5e upstream.
    
    At http://dev.laptop.org/ticket/11980 we have determined that the
    Marvell CaFe SDHCI controller reports bad card presence during
    resume. It reports that no card is present even when it is.
    This is a regression -- resume worked back around 2.6.37.
    
    Around 400ms after resuming, a "card inserted" interrupt is
    generated, at which point it starts reporting presence.
    
    Work around this hardware oddity by setting the
    SDHCI_QUIRK_BROKEN_CARD_DETECTION flag.
    Thanks to Chris Ball for helping with diagnosis.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1377fddb346729aa2fe9cdbfc54aaf2ca463bd5
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Sat Jul 21 08:55:18 2012 +0100

    iscsi-target: Drop bogus struct file usage for iSCSI/SCTP
    
    commit bf6932f44a7b3fa7e2246a8b18a44670e5eab6c2 upstream.
    
    From Al Viro:
    
            BTW, speaking of struct file treatment related to sockets -
            there's this piece of code in iscsi:
            /*
             * The SCTP stack needs struct socket->file.
             */
            if ((np->np_network_transport == ISCSI_SCTP_TCP) ||
                (np->np_network_transport == ISCSI_SCTP_UDP)) {
                    if (!new_sock->file) {
                            new_sock->file = kzalloc(
                                            sizeof(struct file), GFP_KERNEL);
    
    For one thing, as far as I can see it'not true - sctp does *not* depend on
    socket->file being non-NULL; it does, in one place, check socket->file->f_flags
    for O_NONBLOCK, but there it treats NULL socket->file as "flag not set".
    Which is the case here anyway - the fake struct file created in
    __iscsi_target_login_thread() (and in iscsi_target_setup_login_socket(), with
    the same excuse) do *not* get that flag set.
    
    Moreover, it's a bloody serious violation of a bunch of asserts in VFS;
    all struct file instances should come from filp_cachep, via get_empty_filp()
    (or alloc_file(), which is a wrapper for it).  FWIW, I'm very tempted to
    do this and be done with the entire mess:
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 480692b1562b07a4bb8e4d6e49bf7fd2acefbea2
Author: Roland Dreier <roland@purestorage.com>
Date:   Mon Jul 16 15:34:21 2012 -0700

    target: Add generation of LOGICAL BLOCK ADDRESS OUT OF RANGE
    
    commit e2397c704429025bc6b331a970f699e52f34283e upstream.
    
    Many SCSI commands are defined to return a CHECK CONDITION / ILLEGAL
    REQUEST with ASC set to LOGICAL BLOCK ADDRESS OUT OF RANGE if the
    initiator sends a command that accesses a too-big LBA.  Add an enum
    value and case entries so that target code can return this status.
    
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
