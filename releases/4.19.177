commit 2d19be4653f5e74ed95560b69f94eb6791d49af3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 23 15:01:00 2021 +0100

    Linux 4.19.177
    
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Igor Matheus Andrade Torrente <igormtorrente@gmail.com>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210222121019.925481519@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc1e3f5d1d7f77be91f85d7d4ce94ebfe3d8d284
Author: Lai Jiangshan <laijs@linux.alibaba.com>
Date:   Thu Dec 17 23:41:18 2020 +0800

    kvm: check tlbs_dirty directly
    
    commit 88bf56d04bc3564542049ec4ec168a8b60d0b48c upstream
    
    In kvm_mmu_notifier_invalidate_range_start(), tlbs_dirty is used as:
            need_tlb_flush |= kvm->tlbs_dirty;
    with need_tlb_flush's type being int and tlbs_dirty's type being long.
    
    It means that tlbs_dirty is always used as int and the higher 32 bits
    is useless.  We need to check tlbs_dirty in a correct way and this
    change checks it directly without propagating it to need_tlb_flush.
    
    Note: it's _extremely_ unlikely this neglecting of higher 32 bits can
    cause problems in practice.  It would require encountering tlbs_dirty
    on a 4 billion count boundary, and KVM would need to be using shadow
    paging or be running a nested guest.
    
    Cc: stable@vger.kernel.org
    Fixes: a4ee1ca4a36e ("KVM: MMU: delay flush all tlbs on sync_page path")
    Signed-off-by: Lai Jiangshan <laijs@linux.alibaba.com>
    Message-Id: <20201217154118.16497-1-jiangshanlai@gmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c68bb33dad9f3cab171bb64e1766bc5a7e9b7e8
Author: Arun Easi <aeasi@marvell.com>
Date:   Wed Dec 2 05:23:04 2020 -0800

    scsi: qla2xxx: Fix crash during driver load on big endian machines
    
    commit 8de309e7299a00b3045fb274f82b326f356404f0 upstream
    
    Crash stack:
            [576544.715489] Unable to handle kernel paging request for data at address 0xd00000000f970000
            [576544.715497] Faulting instruction address: 0xd00000000f880f64
            [576544.715503] Oops: Kernel access of bad area, sig: 11 [#1]
            [576544.715506] SMP NR_CPUS=2048 NUMA pSeries
            :
            [576544.715703] NIP [d00000000f880f64] .qla27xx_fwdt_template_valid+0x94/0x100 [qla2xxx]
            [576544.715722] LR [d00000000f7952dc] .qla24xx_load_risc_flash+0x2fc/0x590 [qla2xxx]
            [576544.715726] Call Trace:
            [576544.715731] [c0000004d0ffb000] [c0000006fe02c350] 0xc0000006fe02c350 (unreliable)
            [576544.715750] [c0000004d0ffb080] [d00000000f7952dc] .qla24xx_load_risc_flash+0x2fc/0x590 [qla2xxx]
            [576544.715770] [c0000004d0ffb170] [d00000000f7aa034] .qla81xx_load_risc+0x84/0x1a0 [qla2xxx]
            [576544.715789] [c0000004d0ffb210] [d00000000f79f7c8] .qla2x00_setup_chip+0xc8/0x910 [qla2xxx]
            [576544.715808] [c0000004d0ffb300] [d00000000f7a631c] .qla2x00_initialize_adapter+0x4dc/0xb00 [qla2xxx]
            [576544.715826] [c0000004d0ffb3e0] [d00000000f78ce28] .qla2x00_probe_one+0xf08/0x2200 [qla2xxx]
    
    Link: https://lore.kernel.org/r/20201202132312.19966-8-njavali@marvell.com
    Fixes: f73cb695d3ec ("[SCSI] qla2xxx: Add support for ISP2071.")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98f16e171e2849dba76e2e0346e914452c030dc5
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:56:44 2021 +0100

    xen-blkback: fix error handling in xen_blkbk_map()
    
    commit 871997bc9e423f05c7da7c9178e62dde5df2a7f8 upstream.
    
    The function uses a goto-based loop, which may lead to an earlier error
    getting discarded by a later iteration. Exit this ad-hoc loop when an
    error was encountered.
    
    The out-of-memory error path additionally fails to fill a structure
    field looked at by xen_blkbk_unmap_prepare() before inspecting the
    handle which does get properly set (to BLKBACK_INVALID_HANDLE).
    
    Since the earlier exiting from the ad-hoc loop requires the same field
    filling (invalidation) as that on the out-of-memory path, fold both
    paths. While doing so, drop the pr_alert(), as extra log messages aren't
    going to help the situation (the kernel will log oom conditions already
    anyway).
    
    This is XSA-365.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f84c00fbd27b043fa42a56eaaa14e293877bc69b
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:55:57 2021 +0100

    xen-scsiback: don't "handle" error by BUG()
    
    commit 7c77474b2d22176d2bfb592ec74e0f2cb71352c9 upstream.
    
    In particular -ENOMEM may come back here, from set_foreign_p2m_mapping().
    Don't make problems worse, the more that handling elsewhere (together
    with map's status fields now indicating whether a mapping wasn't even
    attempted, and hence has to be considered failed) doesn't require this
    odd way of dealing with errors.
    
    This is part of XSA-362.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 717faa776ca2163119239ea58bb78c4d732d8a4f
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:55:31 2021 +0100

    xen-netback: don't "handle" error by BUG()
    
    commit 3194a1746e8aabe86075fd3c5e7cf1f4632d7f16 upstream.
    
    In particular -ENOMEM may come back here, from set_foreign_p2m_mapping().
    Don't make problems worse, the more that handling elsewhere (together
    with map's status fields now indicating whether a mapping wasn't even
    attempted, and hence has to be considered failed) doesn't require this
    odd way of dealing with errors.
    
    This is part of XSA-362.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a01b49a9bf91a723f541139c063c1ff681ac536a
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:54:51 2021 +0100

    xen-blkback: don't "handle" error by BUG()
    
    commit 5a264285ed1cd32e26d9de4f3c8c6855e467fd63 upstream.
    
    In particular -ENOMEM may come back here, from set_foreign_p2m_mapping().
    Don't make problems worse, the more that handling elsewhere (together
    with map's status fields now indicating whether a mapping wasn't even
    attempted, and hence has to be considered failed) doesn't require this
    odd way of dealing with errors.
    
    This is part of XSA-362.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 271a3984f73c485f4c1b796a61cc5bd3994a0463
Author: Stefano Stabellini <stefano.stabellini@xilinx.com>
Date:   Mon Feb 15 08:53:44 2021 +0100

    xen/arm: don't ignore return errors from set_phys_to_machine
    
    commit 36bf1dfb8b266e089afa9b7b984217f17027bf35 upstream.
    
    set_phys_to_machine can fail due to lack of memory, see the kzalloc call
    in arch/arm/xen/p2m.c:__set_phys_to_machine_multi.
    
    Don't ignore the potential return error in set_foreign_p2m_mapping,
    returning it to the caller instead.
    
    This is part of XSA-361.
    
    Signed-off-by: Stefano Stabellini <stefano.stabellini@xilinx.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e07f06f6bbeed5bf47fed79ac6a57ec62b33304a
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:52:27 2021 +0100

    Xen/gntdev: correct error checking in gntdev_map_grant_pages()
    
    commit ebee0eab08594b2bd5db716288a4f1ae5936e9bc upstream.
    
    Failure of the kernel part of the mapping operation should also be
    indicated as an error to the caller, or else it may assume the
    respective kernel VA is okay to access.
    
    Furthermore gnttab_map_refs() failing still requires recording
    successfully mapped handles, so they can be unmapped subsequently. This
    in turn requires there to be a way to tell full hypercall failure from
    partial success - preset map_op status fields such that they won't
    "happen" to look as if the operation succeeded.
    
    Also again use GNTST_okay instead of implying its value (zero).
    
    This is part of XSA-361.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba75f4393225c4049797388329313d1d9a5ef480
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:51:07 2021 +0100

    Xen/gntdev: correct dev_bus_addr handling in gntdev_map_grant_pages()
    
    commit dbe5283605b3bc12ca45def09cc721a0a5c853a2 upstream.
    
    We may not skip setting the field in the unmap structure when
    GNTMAP_device_map is in use - such an unmap would fail to release the
    respective resources (a page ref in the hypervisor). Otoh the field
    doesn't need setting at all when GNTMAP_device_map is not in use.
    
    To record the value for unmapping, we also better don't use our local
    p2m: In particular after a subsequent change it may not have got updated
    for all the batch elements. Instead it can simply be taken from the
    respective map's results.
    
    We can additionally avoid playing this game altogether for the kernel
    part of the mappings in (x86) PV mode.
    
    This is part of XSA-361.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3d586afdb4474f9389eeddf6c9259e33cc0a321
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:50:08 2021 +0100

    Xen/x86: also check kernel mapping in set_foreign_p2m_mapping()
    
    commit b512e1b077e5ccdbd6e225b15d934ab12453b70a upstream.
    
    We should not set up further state if either mapping failed; paying
    attention to just the user mapping's status isn't enough.
    
    Also use GNTST_okay instead of implying its value (zero).
    
    This is part of XSA-361.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfed59ee4b41b0937163dfed36752d29e72d0712
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Feb 15 08:49:34 2021 +0100

    Xen/x86: don't bail early from clear_foreign_p2m_mapping()
    
    commit a35f2ef3b7376bfd0a57f7844bd7454389aae1fc upstream.
    
    Its sibling (set_foreign_p2m_mapping()) as well as the sibling of its
    only caller (gnttab_map_refs()) don't clean up after themselves in case
    of error. Higher level callers are expected to do so. However, in order
    for that to really clean up any partially set up state, the operation
    should not terminate upon encountering an entry in unexpected state. It
    is particularly relevant to notice here that set_foreign_p2m_mapping()
    would skip setting up a p2m entry if its grant mapping failed, but it
    would continue to set up further p2m entries as long as their mappings
    succeeded.
    
    Arguably down the road set_foreign_p2m_mapping() may want its page state
    related WARN_ON() also converted to an error return.
    
    This is part of XSA-361.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cbb6f2332c56d15389e9ea70a3ab6152de234cb
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Fri Nov 6 18:33:26 2020 +0100

    net: qrtr: Fix port ID for control messages
    
    [ Upstream commit ae068f561baa003d260475c3e441ca454b186726 ]
    
    The port ID for control messages was uncorrectly set with broadcast
    node ID value, causing message to be dropped on remote side since
    not passing packet filtering (cb->dst_port != QRTR_PORT_CTRL).
    
    Fixes: d27e77a3de28 ("net: qrtr: Reset the node and port ID of broadcast messages")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0761d31d1d2bf90b952af823af87e16f954753ec
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Feb 18 13:40:58 2021 -0500

    KVM: SEV: fix double locking due to incorrect backport
    
    Fix an incorrect line in the 5.4.y and 4.19.y backports of commit
    19a23da53932bc ("Fix unsynchronized access to sev members through
    svm_register_enc_region"), first applied to 5.4.98 and 4.19.176.
    
    Fixes: 1e80fdc09d12 ("KVM: SVM: Pin guest memory when SEV is active")
    Reported-by: Dov Murik <dovmurik@linux.vnet.ibm.com>
    Cc: stable@vger.kernel.org # 5.4.x
    Cc: stable@vger.kernel.org # 4.19.x
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac91b8b8eb697e517d5fe40cce815a7dca1a1168
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Feb 8 16:43:30 2021 +0100

    x86/build: Disable CET instrumentation in the kernel for 32-bit too
    
    commit 256b92af784d5043eeb7d559b6d5963dcc2ecb10 upstream.
    
    Commit
    
      20bf2b378729 ("x86/build: Disable CET instrumentation in the kernel")
    
    disabled CET instrumentation which gets added by default by the Ubuntu
    gcc9 and 10 by default, but did that only for 64-bit builds. It would
    still fail when building a 32-bit target. So disable CET for all x86
    builds.
    
    Fixes: 20bf2b378729 ("x86/build: Disable CET instrumentation in the kernel")
    Reported-by: AC <achirvasub@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Tested-by: AC <achirvasub@gmail.com>
    Link: https://lkml.kernel.org/r/YCCIgMHkzh/xT4ex@arch-chirva.localdomain
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d775f15e900453c78eb43f5b9ff0bc10f229119
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Nov 12 11:31:55 2020 +0100

    ovl: expand warning in ovl_d_real()
    
    commit cef4cbff06fbc3be54d6d79ee139edecc2ee8598 upstream.
    
    There was a syzbot report with this warning but insufficient information...
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e86f8f885907a7c41d238c4994a34712d958ce03
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Tue Feb 2 15:20:59 2021 +0600

    net/qrtr: restrict user-controlled length in qrtr_tun_write_iter()
    
    commit 2a80c15812372e554474b1dba0b1d8e467af295d upstream.
    
    syzbot found WARNING in qrtr_tun_write_iter [1] when write_iter length
    exceeds KMALLOC_MAX_SIZE causing order >= MAX_ORDER condition.
    
    Additionally, there is no check for 0 length write.
    
    [1]
    WARNING: mm/page_alloc.c:5011
    [..]
    Call Trace:
     alloc_pages_current+0x18c/0x2a0 mm/mempolicy.c:2267
     alloc_pages include/linux/gfp.h:547 [inline]
     kmalloc_order+0x2e/0xb0 mm/slab_common.c:837
     kmalloc_order_trace+0x14/0x120 mm/slab_common.c:853
     kmalloc include/linux/slab.h:557 [inline]
     kzalloc include/linux/slab.h:682 [inline]
     qrtr_tun_write_iter+0x8a/0x180 net/qrtr/tun.c:83
     call_write_iter include/linux/fs.h:1901 [inline]
    
    Reported-by: syzbot+c2a7e5c5211605a90865@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Link: https://lore.kernel.org/r/20210202092059.1361381-1-snovitoll@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 335bacb523e6207dac471e68488c7804923f0514
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Tue Feb 2 02:32:33 2021 +0600

    net/rds: restrict iovecs length for RDS_CMSG_RDMA_ARGS
    
    commit a11148e6fcce2ae53f47f0a442d098d860b4f7db upstream.
    
    syzbot found WARNING in rds_rdma_extra_size [1] when RDS_CMSG_RDMA_ARGS
    control message is passed with user-controlled
    0x40001 bytes of args->nr_local, causing order >= MAX_ORDER condition.
    
    The exact value 0x40001 can be checked with UIO_MAXIOV which is 0x400.
    So for kcalloc() 0x400 iovecs with sizeof(struct rds_iovec) = 0x10
    is the closest limit, with 0x10 leftover.
    
    Same condition is currently done in rds_cmsg_rdma_args().
    
    [1] WARNING: mm/page_alloc.c:5011
    [..]
    Call Trace:
     alloc_pages_current+0x18c/0x2a0 mm/mempolicy.c:2267
     alloc_pages include/linux/gfp.h:547 [inline]
     kmalloc_order+0x2e/0xb0 mm/slab_common.c:837
     kmalloc_order_trace+0x14/0x120 mm/slab_common.c:853
     kmalloc_array include/linux/slab.h:592 [inline]
     kcalloc include/linux/slab.h:621 [inline]
     rds_rdma_extra_size+0xb2/0x3b0 net/rds/rdma.c:568
     rds_rm_size net/rds/send.c:928 [inline]
    
    Reported-by: syzbot+1bd2b07f93745fa38425@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Link: https://lore.kernel.org/r/20210201203233.1324704-1-snovitoll@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3c91763e2e40cad3cf7753e0a1c8045ec31985b
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Tue Feb 9 09:52:19 2021 +0100

    vsock: fix locking in vsock_shutdown()
    
    commit 1c5fae9c9a092574398a17facc31c533791ef232 upstream.
    
    In vsock_shutdown() we touched some socket fields without holding the
    socket lock, such as 'state' and 'sk_flags'.
    
    Also, after the introduction of multi-transport, we are accessing
    'vsk->transport' in vsock_send_shutdown() without holding the lock
    and this call can be made while the connection is in progress, so
    the transport can change in the meantime.
    
    To avoid issues, we hold the socket lock when we enter in
    vsock_shutdown() and release it when we leave.
    
    Among the transports that implement the 'shutdown' callback, only
    hyperv_transport acquired the lock. Since the caller now holds it,
    we no longer take it.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afb1f8a1ea17cd156ee8e17ad76fb5fc3e1d332b
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Mon Feb 8 15:44:54 2021 +0100

    vsock/virtio: update credit only if socket is not closed
    
    commit ce7536bc7398e2ae552d2fabb7e0e371a9f1fe46 upstream.
    
    If the socket is closed or is being released, some resources used by
    virtio_transport_space_update() such as 'vsk->trans' may be released.
    
    To avoid a use after free bug we should only update the available credit
    when we are sure the socket is still open and we have the lock held.
    
    Fixes: 06a8fc78367d ("VSOCK: Introduce virtio_vsock_common.ko")
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20210208144454.84438-1-sgarzare@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb7addea77224d0c6e471f6b7290f5b609416319
Author: Edwin Peer <edwin.peer@broadcom.com>
Date:   Fri Feb 5 17:37:32 2021 -0800

    net: watchdog: hold device global xmit lock during tx disable
    
    commit 3aa6bce9af0e25b735c9c1263739a5639a336ae8 upstream.
    
    Prevent netif_tx_disable() running concurrently with dev_watchdog() by
    taking the device global xmit lock. Otherwise, the recommended:
    
            netif_carrier_off(dev);
            netif_tx_disable(dev);
    
    driver shutdown sequence can happen after the watchdog has already
    checked carrier, resulting in possible false alarms. This is because
    netif_tx_lock() only sets the frozen bit without maintaining the locks
    on the individual queues.
    
    Fixes: c3f26a269c24 ("netdev: Fix lockdep warnings in multiqueue configurations.")
    Signed-off-by: Edwin Peer <edwin.peer@broadcom.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52862c2fe8e76d7ff23e6e48f310d5b9113603e1
Author: Norbert Slusarek <nslusarek@gmx.net>
Date:   Fri Feb 5 13:14:05 2021 +0100

    net/vmw_vsock: improve locking in vsock_connect_timeout()
    
    commit 3d0bc44d39bca615b72637e340317b7899b7f911 upstream.
    
    A possible locking issue in vsock_connect_timeout() was recognized by
    Eric Dumazet which might cause a null pointer dereference in
    vsock_transport_cancel_pkt(). This patch assures that
    vsock_transport_cancel_pkt() will be called within the lock, so a race
    condition won't occur which could result in vsk->transport to be set to NULL.
    
    Fixes: 380feae0def7 ("vsock: cancel packets when failing to connect")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Norbert Slusarek <nslusarek@gmx.net>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Link: https://lore.kernel.org/r/trinity-f8e0937a-cf0e-4d80-a76e-d9a958ba3ef1-1612535522360@3c-app-gmx-bap12
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7436ceb2b78f334e292d72bb3d2ca4d5deb367df
Author: NeilBrown <neilb@suse.de>
Date:   Fri Feb 5 11:36:30 2021 +1100

    net: fix iteration for sctp transport seq_files
    
    commit af8085f3a4712c57d0dd415ad543bac85780375c upstream.
    
    The sctp transport seq_file iterators take a reference to the transport
    in the ->start and ->next functions and releases the reference in the
    ->show function.  The preferred handling for such resources is to
    release them in the subsequent ->next or ->stop function call.
    
    Since Commit 1f4aace60b0e ("fs/seq_file.c: simplify seq_file iteration
    code and interface") there is no guarantee that ->show will be called
    after ->next, so this function can now leak references.
    
    So move the sctp_transport_put() call to ->next and ->stop.
    
    Fixes: 1f4aace60b0e ("fs/seq_file.c: simplify seq_file iteration code and interface")
    Reported-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: NeilBrown <neilb@suse.de>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c8bae3a527ba8ca1adf2abe1147d3cc9c3dd684
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Thu Dec 10 11:50:07 2020 +0300

    usb: dwc3: ulpi: Replace CPU-based busyloop with Protocol-based one
    
    commit fca3f138105727c3a22edda32d02f91ce1bf11c9 upstream
    
    Originally the procedure of the ULPI transaction finish detection has been
    developed as a simple busy-loop with just decrementing counter and no
    delays. It's wrong since on different systems the loop will take a
    different time to complete. So if the system bus and CPU are fast enough
    to overtake the ULPI bus and the companion PHY reaction, then we'll get to
    take a false timeout error. Fix this by converting the busy-loop procedure
    to take the standard bus speed, address value and the registers access
    mode into account for the busy-loop delay calculation.
    
    Here is the way the fix works. It's known that the ULPI bus is clocked
    with 60MHz signal. In accordance with [1] the ULPI bus protocol is created
    so to spend 5 and 6 clock periods for immediate register write and read
    operations respectively, and 6 and 7 clock periods - for the extended
    register writes and reads. Based on that we can easily pre-calculate the
    time which will be needed for the controller to perform a requested IO
    operation. Note we'll still preserve the attempts counter in case if the
    DWC USB3 controller has got some internals delays.
    
    [1] UTMI+ Low Pin Interface (ULPI) Specification, Revision 1.1,
        October 20, 2004, pp. 30 - 36.
    
    Fixes: 88bc9d194ff6 ("usb: dwc3: add ULPI interface support")
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Link: https://lore.kernel.org/r/20201210085008.13264-3-Sergey.Semin@baikalelectronics.ru
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11dbd20aff2bf7adead7c4fcef9324403a541ff0
Author: Felipe Balbi <balbi@kernel.org>
Date:   Thu Aug 13 08:30:38 2020 +0300

    usb: dwc3: ulpi: fix checkpatch warning
    
    commit 2a499b45295206e7f3dc76edadde891c06cc4447 upstream
    
    no functional changes.
    
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df2bae81600ef84b28b29c97090a8d2b7d8148f1
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Feb 12 20:52:54 2021 -0800

    h8300: fix PREEMPTION build, TI_PRE_COUNT undefined
    
    [ Upstream commit ade9679c159d5bbe14fb7e59e97daf6062872e2b ]
    
    Fix a build error for undefined 'TI_PRE_COUNT' by adding it to
    asm-offsets.c.
    
      h8300-linux-ld: arch/h8300/kernel/entry.o: in function `resume_kernel': (.text+0x29a): undefined reference to `TI_PRE_COUNT'
    
    Link: https://lkml.kernel.org/r/20210212021650.22740-1-rdunlap@infradead.org
    Fixes: df2078b8daa7 ("h8300: Low level entry")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ec198bd1d6c820f3a608a270cdd67dd51a7e1df
Author: Alain Volmat <alain.volmat@foss.st.com>
Date:   Fri Feb 5 09:51:40 2021 +0100

    i2c: stm32f7: fix configuration of the digital filter
    
    [ Upstream commit 3d6a3d3a2a7a3a60a824e7c04e95fd50dec57812 ]
    
    The digital filter related computation are present in the driver
    however the programming of the filter within the IP is missing.
    The maximum value for the DNF is wrong and should be 15 instead of 16.
    
    Fixes: aeb068c57214 ("i2c: i2c-stm32f7: add driver")
    
    Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
    Signed-off-by: Pierre-Yves MORDRET <pierre-yves.mordret@foss.st.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b6e3fb49d3d46fa9613fb04acb7bcd88fc16295
Author: Fangrui Song <maskray@google.com>
Date:   Tue Feb 9 13:42:07 2021 -0800

    firmware_loader: align .builtin_fw to 8
    
    [ Upstream commit 793f49a87aae24e5bcf92ad98d764153fc936570 ]
    
    arm64 references the start address of .builtin_fw (__start_builtin_fw)
    with a pair of R_AARCH64_ADR_PREL_PG_HI21/R_AARCH64_LDST64_ABS_LO12_NC
    relocations.  The compiler is allowed to emit the
    R_AARCH64_LDST64_ABS_LO12_NC relocation because struct builtin_fw in
    include/linux/firmware.h is 8-byte aligned.
    
    The R_AARCH64_LDST64_ABS_LO12_NC relocation requires the address to be a
    multiple of 8, which may not be the case if .builtin_fw is empty.
    Unconditionally align .builtin_fw to fix the linker error.  32-bit
    architectures could use ALIGN(4) but that would add unnecessary
    complexity, so just use ALIGN(8).
    
    Link: https://lkml.kernel.org/r/20201208054646.2913063-1-maskray@google.com
    Link: https://github.com/ClangBuiltLinux/linux/issues/1204
    Fixes: 5658c76 ("firmware: allow firmware files to be built into kernel image")
    Signed-off-by: Fangrui Song <maskray@google.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Acked-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55e3a8395b611a0232558afe4715f299f3a3e804
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Tue Feb 9 17:03:05 2021 +0800

    net: hns3: add a check for queue_id in hclge_reset_vf_queue()
    
    [ Upstream commit 67a69f84cab60484f02eb8cbc7a76edffbb28a25 ]
    
    The queue_id is received from vf, if use it directly,
    an out-of-bound issue may be caused, so add a check for
    this queue_id before using it in hclge_reset_vf_queue().
    
    Fixes: 1a426f8b40fc ("net: hns3: fix the VF queue reset flow error")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f7c3c838aed35c1aa54e1eaf3430ed018e578d5
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Feb 5 12:56:43 2021 +0100

    netfilter: conntrack: skip identical origin tuple in same zone only
    
    [ Upstream commit 07998281c268592963e1cd623fe6ab0270b65ae4 ]
    
    The origin skip check needs to re-test the zone. Else, we might skip
    a colliding tuple in the reply direction.
    
    This only occurs when using 'directional zones' where origin tuples
    reside in different zones but the reply tuples share the same zone.
    
    This causes the new conntrack entry to be dropped at confirmation time
    because NAT clash resolution was elided.
    
    Fixes: 4e35c1cb9460240 ("netfilter: nf_nat: skip nat clash resolution for same-origin entries")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ff5f8da1556e577f6f04ebabdeb00675aed3259
Author: Mohammad Athari Bin Ismail <mohammad.athari.ismail@intel.com>
Date:   Thu Feb 4 22:03:16 2021 +0800

    net: stmmac: set TxQ mode back to DCB after disabling CBS
    
    [ Upstream commit f317e2ea8c88737aa36228167b2292baef3f0430 ]
    
    When disable CBS, mode_to_use parameter is not updated even the operation
    mode of Tx Queue is changed to Data Centre Bridging (DCB). Therefore,
    when tc_setup_cbs() function is called to re-enable CBS, the operation
    mode of Tx Queue remains at DCB, which causing CBS fails to work.
    
    This patch updates the value of mode_to_use parameter to MTL_QUEUE_DCB
    after operation mode of Tx Queue is changed to DCB in stmmac_dma_qmode()
    callback function.
    
    Fixes: 1f705bc61aee ("net: stmmac: Add support for CBS QDISC")
    Suggested-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Signed-off-by: Mohammad Athari Bin Ismail <mohammad.athari.ismail@intel.com>
    Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Acked-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Link: https://lore.kernel.org/r/1612447396-20351-1-git-send-email-yoong.siang.song@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7740c404d0680293e42a0a17e4af1f5952165bdd
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Feb 2 08:09:38 2021 +0100

    xen/netback: avoid race in xenvif_rx_ring_slots_available()
    
    [ Upstream commit ec7d8e7dd3a59528e305a18e93f1cb98f7faf83b ]
    
    Since commit 23025393dbeb3b8b3 ("xen/netback: use lateeoi irq binding")
    xenvif_rx_ring_slots_available() is no longer called only from the rx
    queue kernel thread, so it needs to access the rx queue with the
    associated queue held.
    
    Reported-by: Igor Druzhinin <igor.druzhinin@citrix.com>
    Fixes: 23025393dbeb3b8b3 ("xen/netback: use lateeoi irq binding")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Acked-by: Wei Liu <wl@xen.org>
    Link: https://lore.kernel.org/r/20210202070938.7863-1-jgross@suse.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99109999f7c63ef833deaa8ebaa8e5a7bc6de15c
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Tue Feb 2 18:01:16 2021 +0100

    netfilter: flowtable: fix tcp and udp header checksum update
    
    [ Upstream commit 8d6bca156e47d68551750a384b3ff49384c67be3 ]
    
    When updating the tcp or udp header checksum on port nat the function
    inet_proto_csum_replace2 with the last parameter pseudohdr as true.
    This leads to an error in the case that GRO is used and packets are
    split up in GSO. The tcp or udp checksum of all packets is incorrect.
    
    The error is probably masked due to the fact the most network driver
    implement tcp/udp checksum offloading. It also only happens when GRO is
    applied and not on single packets.
    
    The error is most visible when using a pppoe connection which is not
    triggering the tcp/udp checksum offload.
    
    Fixes: ac2a66665e23 ("netfilter: add generic flow table infrastructure")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28198be7e5f50d66a60ccf27fe518f55813e1b32
Author: Jozsef Kadlecsik <kadlec@mail.kfki.hu>
Date:   Fri Jan 29 20:57:43 2021 +0100

    netfilter: xt_recent: Fix attempt to update deleted entry
    
    [ Upstream commit b1bdde33b72366da20d10770ab7a49fe87b5e190 ]
    
    When both --reap and --update flag are specified, there's a code
    path at which the entry to be updated is reaped beforehand,
    which then leads to kernel crash. Reap only entries which won't be
    updated.
    
    Fixes kernel bugzilla #207773.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=207773
    Reported-by: Reindl Harald <h.reindl@thelounge.net>
    Fixes: 0079c5aee348 ("netfilter: xt_recent: add an entry reaper")
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 063c722dd9d285d877e6fd499e753d6224f4c046
Author: Bui Quang Minh <minhquangbui99@gmail.com>
Date:   Wed Jan 27 06:36:53 2021 +0000

    bpf: Check for integer overflow when using roundup_pow_of_two()
    
    [ Upstream commit 6183f4d3a0a2ad230511987c6c362ca43ec0055f ]
    
    On 32-bit architecture, roundup_pow_of_two() can return 0 when the argument
    has upper most bit set due to resulting 1UL << 32. Add a check for this case.
    
    Fixes: d5a3b1f69186 ("bpf: introduce BPF_MAP_TYPE_STACK_TRACE")
    Signed-off-by: Bui Quang Minh <minhquangbui99@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210127063653.3576-1-minhquangbui99@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df15368f519c0eed76429fcc344ca3cadc5bb46e
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Jan 26 12:02:13 2021 +0100

    mt76: dma: fix a possible memory leak in mt76_add_fragment()
    
    [ Upstream commit 93a1d4791c10d443bc67044def7efee2991d48b7 ]
    
    Fix a memory leak in mt76_add_fragment routine returning the buffer
    to the page_frag_cache when we receive a new fragment and the
    skb_shared_info frag array is full.
    
    Fixes: b102f0c522cf6 ("mt76: fix array overflow on receiving too many fragments for a packet")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Acked-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/4f9dd73407da88b2a552517ce8db242d86bf4d5c.1611616130.git.lorenzo@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 196d7e7c02edbd72c932f6e39c7ec948d0045f77
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Feb 1 19:40:01 2021 +0000

    ARM: kexec: fix oops after TLB are invalidated
    
    [ Upstream commit 4d62e81b60d4025e2dfcd5ea531cc1394ce9226f ]
    
    Giancarlo Ferrari reports the following oops while trying to use kexec:
    
     Unable to handle kernel paging request at virtual address 80112f38
     pgd = fd7ef03e
     [80112f38] *pgd=0001141e(bad)
     Internal error: Oops: 80d [#1] PREEMPT SMP ARM
     ...
    
    This is caused by machine_kexec() trying to set the kernel text to be
    read/write, so it can poke values into the relocation code before
    copying it - and an interrupt occuring which changes the page tables.
    The subsequent writes then hit read-only sections that trigger a
    data abort resulting in the above oops.
    
    Fix this by copying the relocation code, and then writing the variables
    into the destination, thereby avoiding the need to make the kernel text
    read/write.
    
    Reported-by: Giancarlo Ferrari <giancarlo.ferrari89@gmail.com>
    Tested-by: Giancarlo Ferrari <giancarlo.ferrari89@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80ef523d2cb719c3de66787e922a96b5099d2fbb
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Jan 29 10:19:07 2021 +0000

    ARM: ensure the signal page contains defined contents
    
    [ Upstream commit 9c698bff66ab4914bb3d71da7dc6112519bde23e ]
    
    Ensure that the signal page contains our poison instruction to increase
    the protection against ROP attacks and also contains well defined
    contents.
    
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3502f652931cb728d0eeaf9aa919ab7d2cb24d1d
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Wed Feb 3 10:03:20 2021 +0100

    ARM: dts: lpc32xx: Revert set default clock rate of HCLK PLL
    
    [ Upstream commit 5638159f6d93b99ec9743ac7f65563fca3cf413d ]
    
    This reverts commit c17e9377aa81664d94b4f2102559fcf2a01ec8e7.
    
    The lpc32xx clock driver is not able to actually change the PLL rate as
    this would require reparenting ARM_CLK, DDRAM_CLK, PERIPH_CLK to SYSCLK,
    then stop the PLL, update the register, restart the PLL and wait for the
    PLL to lock and finally reparent ARM_CLK, DDRAM_CLK, PERIPH_CLK to HCLK
    PLL.
    
    Currently, the HCLK driver simply updates the registers but this has no
    real effect and all the clock rate calculation end up being wrong. This is
    especially annoying for the peripheral (e.g. UARTs, I2C, SPI).
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Tested-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Link: https://lore.kernel.org/r/20210203090320.GA3760268@piout.net'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c869f173158aaf01a7445212420356247a8974b7
Author: Lin Feng <linf@wangsu.com>
Date:   Tue Feb 2 07:18:23 2021 -0700

    bfq-iosched: Revert "bfq: Fix computation of shallow depth"
    
    [ Upstream commit 388c705b95f23f317fa43e6abf9ff07b583b721a ]
    
    This reverts commit 6d4d273588378c65915acaf7b2ee74e9dd9c130a.
    
    bfq.limit_depth passes word_depths[] as shallow_depth down to sbitmap core
    sbitmap_get_shallow, which uses just the number to limit the scan depth of
    each bitmap word, formula:
    scan_percentage_for_each_word = shallow_depth / (1 << sbimap->shift) * 100%
    
    That means the comments's percentiles 50%, 75%, 18%, 37% of bfq are correct.
    But after commit patch 'bfq: Fix computation of shallow depth', we use
    sbitmap.depth instead, as a example in following case:
    
    sbitmap.depth = 256, map_nr = 4, shift = 6; sbitmap_word.depth = 64.
    The resulsts of computed bfqd->word_depths[] are {128, 192, 48, 96}, and
    three of the numbers exceed core dirver's 'sbitmap_word.depth=64' limit
    nothing.
    
    Signed-off-by: Lin Feng <linf@wangsu.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 996344d9fcbb72d761221d7728aca8b6aa123f2d
Author: Alexandre Ghiti <alex@ghiti.fr>
Date:   Fri Jan 29 12:31:05 2021 -0500

    riscv: virt_addr_valid must check the address belongs to linear mapping
    
    [ Upstream commit 2ab543823322b564f205cb15d0f0302803c87d11 ]
    
    virt_addr_valid macro checks that a virtual address is valid, ie that
    the address belongs to the linear mapping and that the corresponding
     physical page exists.
    
    Add the missing check that ensures the virtual address belongs to the
    linear mapping, otherwise __virt_to_phys, when compiled with
    CONFIG_DEBUG_VIRTUAL enabled, raises a WARN that is interpreted as a
    kernel bug by syzbot.
    
    Signed-off-by: Alexandre Ghiti <alex@ghiti.fr>
    Reviewed-by: Atish Patra <atish.patra@wdc.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ac2adcc9577b23609a6321789928109310984fa
Author: Victor Lu <victorchengchi.lu@amd.com>
Date:   Thu Jan 14 16:27:07 2021 -0500

    drm/amd/display: Free atomic state after drm_atomic_commit
    
    [ Upstream commit 2abaa323d744011982b20b8f3886184d56d23946 ]
    
    [why]
    drm_atomic_commit was changed so that the caller must free their
    drm_atomic_state reference on successes.
    
    [how]
    Add drm_atomic_commit_put after drm_atomic_commit call in
    dm_force_atomic_commit.
    
    Signed-off-by: Victor Lu <victorchengchi.lu@amd.com>
    Reviewed-by: Roman Li <Roman.Li@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac9d6094a925169defba6cd4692c1aab2aff6132
Author: Victor Lu <victorchengchi.lu@amd.com>
Date:   Thu Jan 14 22:24:14 2021 -0500

    drm/amd/display: Fix dc_sink kref count in emulated_link_detect
    
    [ Upstream commit 3ddc818d9bb877c64f5c649beab97af86c403702 ]
    
    [why]
    prev_sink is not used anywhere else in the function and the reference to
    it from dc_link is replaced with a new dc_sink.
    
    [how]
    Change dc_sink_retain(prev_sink) to dc_sink_release(prev_sink).
    
    Signed-off-by: Victor Lu <victorchengchi.lu@amd.com>
    Reviewed-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45f86fe44ef2d4e85c0ea795ec438e9761e04ad9
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Sat Dec 19 12:16:08 2020 +0200

    ovl: skip getxattr of security labels
    
    [ Upstream commit 03fedf93593c82538b18476d8c4f0e8f8435ea70 ]
    
    When inode has no listxattr op of its own (e.g. squashfs) vfs_listxattr
    calls the LSM inode_listsecurity hooks to list the xattrs that LSMs will
    intercept in inode_getxattr hooks.
    
    When selinux LSM is installed but not initialized, it will list the
    security.selinux xattr in inode_listsecurity, but will not intercept it
    in inode_getxattr.  This results in -ENODATA for a getxattr call for an
    xattr returned by listxattr.
    
    This situation was manifested as overlayfs failure to copy up lower
    files from squashfs when selinux is built-in but not initialized,
    because ovl_copy_xattr() iterates the lower inode xattrs by
    vfs_listxattr() and vfs_getxattr().
    
    ovl_copy_xattr() skips copy up of security labels that are indentified by
    inode_copy_up_xattr LSM hooks, but it does that after vfs_getxattr().
    Since we are not going to copy them, skip vfs_getxattr() of the security
    labels.
    
    Reported-by: Michael Labriola <michael.d.labriola@gmail.com>
    Tested-by: Michael Labriola <michael.d.labriola@gmail.com>
    Link: https://lore.kernel.org/linux-unionfs/2nv9d47zt7.fsf@aldarion.sourceruckus.org/
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31a8d90f7cda828e1b48d8eb40ec1c6345ef5b7e
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jan 28 10:22:48 2021 +0100

    cap: fix conversions on getxattr
    
    [ Upstream commit f2b00be488730522d0fb7a8a5de663febdcefe0a ]
    
    If a capability is stored on disk in v2 format cap_inode_getsecurity() will
    currently return in v2 format unconditionally.
    
    This is wrong: v2 cap should be equivalent to a v3 cap with zero rootid,
    and so the same conversions performed on it.
    
    If the rootid cannot be mapped, v3 is returned unconverted.  Fix this so
    that both v2 and v3 return -EOVERFLOW if the rootid (or the owner of the fs
    user namespace in case of v2) cannot be mapped into the current user
    namespace.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1cb5984909ce2737caa205b63509c59141bcf49
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jan 28 10:22:48 2021 +0100

    ovl: perform vfs_getxattr() with mounter creds
    
    [ Upstream commit 554677b97257b0b69378bd74e521edb7e94769ff ]
    
    The vfs_getxattr() in ovl_xattr_set() is used to check whether an xattr
    exist on a lower layer file that is to be removed.  If the xattr does not
    exist, then no need to copy up the file.
    
    This call of vfs_getxattr() wasn't wrapped in credential override, and this
    is probably okay.  But for consitency wrap this instance as well.
    
    Reported-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26abce4fab8e68fc9f2a5c21d20aecf3ffc40a07
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jan 20 13:49:41 2021 +0100

    platform/x86: hp-wmi: Disable tablet-mode reporting by default
    
    [ Upstream commit 67fbe02a5cebc3c653610f12e3c0424e58450153 ]
    
    Recently userspace has started making more use of SW_TABLET_MODE
    (when an input-dev reports this).
    
    Specifically recent GNOME3 versions will:
    
    1.  When SW_TABLET_MODE is reported and is reporting 0:
    1.1 Disable accelerometer-based screen auto-rotation
    1.2 Disable automatically showing the on-screen keyboard when a
        text-input field is focussed
    
    2.  When SW_TABLET_MODE is reported and is reporting 1:
    2.1 Ignore input-events from the builtin keyboard and touchpad
        (this is for 360° hinges style 2-in-1s where the keyboard and
         touchpads are accessible on the back of the tablet when folded
         into tablet-mode)
    
    This means that claiming to support SW_TABLET_MODE when it does not
    actually work / reports correct values has bad side-effects.
    
    The check in the hp-wmi code which is used to decide if the input-dev
    should claim SW_TABLET_MODE support, only checks if the
    HPWMI_HARDWARE_QUERY is supported. It does *not* check if the hardware
    actually is capable of reporting SW_TABLET_MODE.
    
    This leads to the hp-wmi input-dev claiming SW_TABLET_MODE support,
    while in reality it will always report 0 as SW_TABLET_MODE value.
    This has been seen on a "HP ENVY x360 Convertible 15-cp0xxx" and
    this likely is the case on a whole lot of other HP models.
    
    This problem causes both auto-rotation and on-screen keyboard
    support to not work on affected x360 models.
    
    There is no easy fix for this, but since userspace expects
    SW_TABLET_MODE reporting to be reliable when advertised it is
    better to not claim/report SW_TABLET_MODE support at all, then
    to claim to support it while it does not work.
    
    To avoid the mentioned problems, add a new enable_tablet_mode_sw
    module-parameter which defaults to false.
    
    Note I've made this an int using the standard -1=auto, 0=off, 1=on
    triplett, with the hope that in the future we can come up with a
    better way to detect SW_TABLET_MODE support. ATM the default
    auto option just does the same as off.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1918255
    Cc: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Mark Gross <mgross@linux.intel.com>
    Link: https://lore.kernel.org/r/20210120124941.73409-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e6fd46df5c6a4ff6f1239f165603f62914c92d9
Author: Marc Zyngier <maz@kernel.org>
Date:   Sat Aug 15 13:51:12 2020 +0100

    arm64: dts: rockchip: Fix PCIe DT properties on rk3399
    
    [ Upstream commit 43f20b1c6140896916f4e91aacc166830a7ba849 ]
    
    It recently became apparent that the lack of a 'device_type = "pci"'
    in the PCIe root complex node for rk3399 is a violation of the PCI
    binding, as documented in IEEE Std 1275-1994. Changes to the kernel's
    parsing of the DT made such violation fatal, as drivers cannot
    probe the controller anymore.
    
    Add the missing property makes the PCIe node compliant. While we
    are at it, drop the pointless linux,pci-domain property, which only
    makes sense when there are multiple host bridges.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200815125112.462652-3-maz@kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4f3e2507313be2dac9397c46d3e379e09653f35
Author: Julien Grall <jgrall@amazon.com>
Date:   Wed Feb 10 17:06:54 2021 +0000

    arm/xen: Don't probe xenbus as part of an early initcall
    
    commit c4295ab0b485b8bc50d2264bcae2acd06f25caaf upstream.
    
    After Commit 3499ba8198cad ("xen: Fix event channel callback via
    INTX/GSI"), xenbus_probe() will be called too early on Arm. This will
    recent to a guest hang during boot.
    
    If the hang wasn't there, we would have ended up to call
    xenbus_probe() twice (the second time is in xenbus_probe_initcall()).
    
    We don't need to initialize xenbus_probe() early for Arm guest.
    Therefore, the call in xen_guest_init() is now removed.
    
    After this change, there is no more external caller for xenbus_probe().
    So the function is turned to a static one. Interestingly there were two
    prototypes for it.
    
    Cc: stable@vger.kernel.org
    Fixes: 3499ba8198cad ("xen: Fix event channel callback via INTX/GSI")
    Reported-by: Ian Jackson <iwj@xenproject.org>
    Signed-off-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Link: https://lore.kernel.org/r/20210210170654.5377-1-julien@xen.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0572fc6a510add9029b113239eaabf4b5bce8ec9
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Feb 10 11:53:22 2021 -0500

    tracing: Check length before giving out the filter buffer
    
    commit b220c049d5196dd94d992dd2dc8cba1a5e6123bf upstream.
    
    When filters are used by trace events, a page is allocated on each CPU and
    used to copy the trace event fields to this page before writing to the ring
    buffer. The reason to use the filter and not write directly into the ring
    buffer is because a filter may discard the event and there's more overhead
    on discarding from the ring buffer than the extra copy.
    
    The problem here is that there is no check against the size being allocated
    when using this page. If an event asks for more than a page size while being
    filtered, it will get only a page, leading to the caller writing more that
    what was allocated.
    
    Check the length of the request, and if it is more than PAGE_SIZE minus the
    header default back to allocating from the ring buffer directly. The ring
    buffer may reject the event if its too big anyway, but it wont overflow.
    
    Link: https://lore.kernel.org/ath10k/1612839593-2308-1-git-send-email-wgong@codeaurora.org/
    
    Cc: stable@vger.kernel.org
    Fixes: 0fc1b09ff1ff4 ("tracing: Use temp buffer when filtering events")
    Reported-by: Wen Gong <wgong@codeaurora.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 334d216dfe0700f9e043e6f29dcf20b8f0d13558
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Feb 5 15:40:04 2021 -0500

    tracing: Do not count ftrace events in top level enable output
    
    commit 256cfdd6fdf70c6fcf0f7c8ddb0ebd73ce8f3bc9 upstream.
    
    The file /sys/kernel/tracing/events/enable is used to enable all events by
    echoing in "1", or disabling all events when echoing in "0". To know if all
    events are enabled, disabled, or some are enabled but not all of them,
    cating the file should show either "1" (all enabled), "0" (all disabled), or
    "X" (some enabled but not all of them). This works the same as the "enable"
    files in the individule system directories (like tracing/events/sched/enable).
    
    But when all events are enabled, the top level "enable" file shows "X". The
    reason is that its checking the "ftrace" events, which are special events
    that only exist for their format files. These include the format for the
    function tracer events, that are enabled when the function tracer is
    enabled, but not by the "enable" file. The check includes these events,
    which will always be disabled, and even though all true events are enabled,
    the top level "enable" file will show "X" instead of "1".
    
    To fix this, have the check test the event's flags to see if it has the
    "IGNORE_ENABLE" flag set, and if so, not test it.
    
    Cc: stable@vger.kernel.org
    Fixes: 553552ce1796c ("tracing: Combine event filter_active and enable into single flags field")
    Reported-by: "Yordan Karadzhov (VMware)" <y.karadz@gmail.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
