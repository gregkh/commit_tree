commit e8d9b740a5503f5bd2948a51a0c3fa564c82cfe3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jul 11 12:52:08 2021 +0200

    Linux 5.4.131
    
    Link: https://lore.kernel.org/r/20210709131531.277334979@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2f8a8a07ee3e6c692d714b48e9d2ad5ca825a66
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Jun 23 15:09:13 2021 +0200

    xen/events: reset active flag for lateeoi events later
    
    commit 3de218ff39b9e3f0d453fe3154f12a174de44b25 upstream.
    
    In order to avoid a race condition for user events when changing
    cpu affinity reset the active flag only when EOI-ing the event.
    
    This is working fine as all user events are lateeoi events. Note that
    lateeoi_ack_mask_dynirq() is not modified as there is no explicit call
    to xen_irq_lateeoi() expected later.
    
    Cc: stable@vger.kernel.org
    Reported-by: Julien Grall <julien@xen.org>
    Fixes: b6622798bc50b62 ("xen/events: avoid handling the same event on two cpus at the same time")
    Tested-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrvsky@oracle.com>
    Link: https://lore.kernel.org/r/20210623130913.9405-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a05499b29a6e7f0e62ac3980e9c90b099bfa4697
Author: Alper Gun <alpergun@google.com>
Date:   Thu Jun 10 17:46:04 2021 +0000

    KVM: SVM: Call SEV Guest Decommission if ASID binding fails
    
    commit 934002cd660b035b926438244b4294e647507e13 upstream.
    
    Send SEV_CMD_DECOMMISSION command to PSP firmware if ASID binding
    fails. If a failure happens after  a successful LAUNCH_START command,
    a decommission command should be executed. Otherwise, guest context
    will be unfreed inside the AMD SP. After the firmware will not have
    memory to allocate more SEV guest context, LAUNCH_START command will
    begin to fail with SEV_RET_RESOURCE_LIMIT error.
    
    The existing code calls decommission inside sev_unbind_asid, but it is
    not called if a failure happens before guest activation succeeds. If
    sev_bind_asid fails, decommission is never called. PSP firmware has a
    limit for the number of guests. If sev_asid_binding fails many times,
    PSP firmware will not have resources to create another guest context.
    
    Cc: stable@vger.kernel.org
    Fixes: 59414c989220 ("KVM: SVM: Add support for KVM_SEV_LAUNCH_START command")
    Reported-by: Peter Gonda <pgonda@google.com>
    Signed-off-by: Alper Gun <alpergun@google.com>
    Reviewed-by: Marc Orr <marcorr@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20210610174604.2554090-1-alpergun@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58356f448b61c9c532af863a981243c47ce4b9e5
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Fri Jun 18 16:58:47 2021 +0200

    s390/stack: fix possible register corruption with stack switch helper
    
    commit 67147e96a332b56c7206238162771d82467f86c0 upstream.
    
    The CALL_ON_STACK macro is used to call a C function from inline
    assembly, and therefore must consider the C ABI, which says that only
    registers 6-13, and 15 are non-volatile (restored by the called
    function).
    
    The inline assembly incorrectly marks all registers used to pass
    parameters to the called function as read-only input operands, instead
    of operands that are read and written to. This might result in
    register corruption depending on usage, compiler, and compile options.
    
    Fix this by marking all operands used to pass parameters as read/write
    operands. To keep the code simple even register 6, if used, is marked
    as read-write operand.
    
    Fixes: ff340d2472ec ("s390: add stack switch helper")
    Cc: <stable@kernel.org> # 4.20
    Reviewed-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abbd42939db646f7210e1473e9cb17c6bc6f184c
Author: David Rientjes <rientjes@google.com>
Date:   Tue Aug 25 12:56:28 2020 -0700

    KVM: SVM: Periodically schedule when unregistering regions on destroy
    
    commit 7be74942f184fdfba34ddd19a0d995deb34d4a03 upstream.
    
    There may be many encrypted regions that need to be unregistered when a
    SEV VM is destroyed.  This can lead to soft lockups.  For example, on a
    host running 4.15:
    
    watchdog: BUG: soft lockup - CPU#206 stuck for 11s! [t_virtual_machi:194348]
    CPU: 206 PID: 194348 Comm: t_virtual_machi
    RIP: 0010:free_unref_page_list+0x105/0x170
    ...
    Call Trace:
     [<0>] release_pages+0x159/0x3d0
     [<0>] sev_unpin_memory+0x2c/0x50 [kvm_amd]
     [<0>] __unregister_enc_region_locked+0x2f/0x70 [kvm_amd]
     [<0>] svm_vm_destroy+0xa9/0x200 [kvm_amd]
     [<0>] kvm_arch_destroy_vm+0x47/0x200
     [<0>] kvm_put_kvm+0x1a8/0x2f0
     [<0>] kvm_vm_release+0x25/0x30
     [<0>] do_exit+0x335/0xc10
     [<0>] do_group_exit+0x3f/0xa0
     [<0>] get_signal+0x1bc/0x670
     [<0>] do_signal+0x31/0x130
    
    Although the CLFLUSH is no longer issued on every encrypted region to be
    unregistered, there are no other changes that can prevent soft lockups for
    very large SEV VMs in the latest kernel.
    
    Periodically schedule if necessary.  This still holds kvm->lock across the
    resched, but since this only happens when the VM is destroyed this is
    assumed to be acceptable.
    
    Signed-off-by: David Rientjes <rientjes@google.com>
    Message-Id: <alpine.DEB.2.23.453.2008251255240.2987727@chino.kir.corp.google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [iwamatsu: adjust filename.]
    Reference: CVE-2020-36311
    Signed-off-by: Nobuhiro Iwamatsu (CIP) <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
