commit 129ea38d9c66e0df4556168b1c57a9119c157d9a
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Tue Apr 7 14:49:46 2015 +0200

    Linux 3.12.40

commit a340cc2053605bc77423d6c2ff166762935170d7
Author: Sergei Antonov <saproj@gmail.com>
Date:   Wed Mar 25 15:55:34 2015 -0700

    hfsplus: fix B-tree corruption after insertion at position 0
    
    commit 98cf21c61a7f5419d82f847c4d77bf6e96a76f5f upstream.
    
    Fix B-tree corruption when a new record is inserted at position 0 in the
    node in hfs_brec_insert().  In this case a hfs_brec_update_parent() is
    called to update the parent index node (if exists) and it is passed
    hfs_find_data with a search_key containing a newly inserted key instead
    of the key to be updated.  This results in an inconsistent index node.
    The bug reproduces on my machine after an extents overflow record for
    the catalog file (CNID=4) is inserted into the extents overflow B-tree.
    Because of a low (reserved) value of CNID=4, it has to become the first
    record in the first leaf node.
    
    The resulting first leaf node is correct:
    
      ----------------------------------------------------
      | key0.CNID=4 | key1.CNID=123 | key2.CNID=456, ... |
      ----------------------------------------------------
    
    But the parent index key0 still contains the previous key CNID=123:
    
      -----------------------
      | key0.CNID=123 | ... |
      -----------------------
    
    A change in hfs_brec_insert() makes hfs_brec_update_parent() work
    correctly by preventing it from getting fd->record=-1 value from
    __hfs_brec_find().
    
    Along the way, I removed duplicate code with unification of the if
    condition.  The resulting code is equivalent to the original code
    because node is never 0.
    
    Also hfs_brec_update_parent() will now return an error after getting a
    negative fd->record value.  However, the return value of
    hfs_brec_update_parent() is not checked anywhere in the file and I'm
    leaving it unchanged by this patch.  brec.c lacks error checking after
    some other calls too, but this issue is of less importance than the one
    being fixed by this patch.
    
    Signed-off-by: Sergei Antonov <saproj@gmail.com>
    Cc: Joe Perches <joe@perches.com>
    Reviewed-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Acked-by: Hin-Tak Leung <htl10@users.sourceforge.net>
    Cc: Anton Altaparmakov <aia21@cam.ac.uk>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Christoph Hellwig <hch@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 4d6657eb5a935217fa557fc7a346d24d38adf098
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Fri Feb 27 10:44:38 2015 -0800

    dm io: deal with wandering queue limits when handling REQ_DISCARD and REQ_WRITE_SAME
    
    commit e5db29806b99ce2b2640d2e4d4fcb983cea115c5 upstream.
    
    Since it's possible for the discard and write same queue limits to
    change while the upper level command is being sliced and diced, fix up
    both of them (a) to reject IO if the special command is unsupported at
    the start of the function and (b) read the limits once and let the
    commands error out on their own if the status happens to change.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c83510f1ec1eb63d944fbe4113d72f7c6f2b6fe5
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Feb 27 14:04:27 2015 -0500

    dm: hold suspend_lock while suspending device during device deletion
    
    commit ab7c7bb6f4ab95dbca96fcfc4463cd69843e3e24 upstream.
    
    __dm_destroy() must take the suspend_lock so that its presuspend and
    postsuspend calls do not race with an internal suspend.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 52b64c8b06f3d59e54a22aa37aca20f7bf67481a
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Mar 9 12:16:42 2015 +0200

    dmaengine: dw: append MODULE_ALIAS for platform driver
    
    commit a104a45ba7a51b5b4c5e8437020d9d48edf22f89 upstream.
    
    The commit 9cade1a46c77 (dma: dw: split driver to library part and platform
    code) introduced a separate platform driver but missed to add a
    MODULE_ALIAS("platform:dw_dmac"); to that module.
    
    The patch adds this to get driver loaded automatically if platform device is
    registered.
    
    Reported-by: "Blin, Jerome" <jerome.blin@intel.com>
    Fixes: 9cade1a46c77 (dma: dw: split driver to library part and platform code)
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit b5992b8c3c8b350763d33b0b044a098af2632bc9
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Sat Mar 7 17:04:54 2015 +0000

    vt6655: RFbSetPower fix missing rate RATE_12M
    
    commit 40c8790bcb7ac74f3038153cd09310e220c6a1df upstream.
    
    When the driver sets this rate a power of zero value is set causing
    data flow stoppage until another rate is tried.
    
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit b360928219bee1a0fefed6c43cbd5e5f3db7f9af
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Feb 19 18:03:11 2015 +0100

    perf: Fix irq_work 'tail' recursion
    
    commit d525211f9d1be8b523ec7633f080f2116f5ea536 upstream.
    
    Vince reported a watchdog lockup like:
    
            [<ffffffff8115e114>] perf_tp_event+0xc4/0x210
            [<ffffffff810b4f8a>] perf_trace_lock+0x12a/0x160
            [<ffffffff810b7f10>] lock_release+0x130/0x260
            [<ffffffff816c7474>] _raw_spin_unlock_irqrestore+0x24/0x40
            [<ffffffff8107bb4d>] do_send_sig_info+0x5d/0x80
            [<ffffffff811f69df>] send_sigio_to_task+0x12f/0x1a0
            [<ffffffff811f71ce>] send_sigio+0xae/0x100
            [<ffffffff811f72b7>] kill_fasync+0x97/0xf0
            [<ffffffff8115d0b4>] perf_event_wakeup+0xd4/0xf0
            [<ffffffff8115d103>] perf_pending_event+0x33/0x60
            [<ffffffff8114e3fc>] irq_work_run_list+0x4c/0x80
            [<ffffffff8114e448>] irq_work_run+0x18/0x40
            [<ffffffff810196af>] smp_trace_irq_work_interrupt+0x3f/0xc0
            [<ffffffff816c99bd>] trace_irq_work_interrupt+0x6d/0x80
    
    Which is caused by an irq_work generating new irq_work and therefore
    not allowing forward progress.
    
    This happens because processing the perf irq_work triggers another
    perf event (tracepoint stuff) which in turn generates an irq_work ad
    infinitum.
    
    Avoid this by raising the recursion counter in the irq_work -- which
    effectively disables all software events (including tracepoints) from
    actually triggering again.
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Tested-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Link: http://lkml.kernel.org/r/20150219170311.GH21418@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit ece2f78311f6370ac91e79cac57376f21e545fd6
Author: Bob Copeland <me@bobcopeland.com>
Date:   Mon Mar 2 14:28:52 2015 -0500

    mac80211: drop unencrypted frames in mesh fwding
    
    commit d0c22119f574b851e63360c6b8660fe9593bbc3c upstream.
    
    The mesh forwarding path was not checking that data
    frames were protected when running an encrypted network;
    add the necessary check.
    
    Reported-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Bob Copeland <me@bobcopeland.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 12b6060a75b6c2609adf5c6824c0a29fa7c47963
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Tue Feb 10 12:48:44 2015 +0100

    mac80211: disable u-APSD queues by default
    
    commit aa75ebc275b2a91b193654a177daf900ad6703f0 upstream.
    
    Some APs experience problems when working with
    U-APSD. Decreasing the probability of that
    happening by using legacy mode for all ACs but VO
    isn't enough.
    
    Cisco 4410N originally forced us to enable VO by
    default only because it treated non-VO ACs as
    legacy.
    
    However some APs (notably Netgear R7000) silently
    reclassify packets to different ACs. Since u-APSD
    ACs require trigger frames for frame retrieval
    clients would never see some frames (e.g. ARP
    responses) or would fetch them accidentally after
    a long time.
    
    It makes little sense to enable u-APSD queues by
    default because it needs userspace applications to
    be aware of it to actually take advantage of the
    possible additional powersavings. Implicitly
    depending on driver autotrigger frame support
    doesn't make much sense.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9e779a572705c7400070bb42dfc6651cc8ff3c90
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Mar 12 08:53:27 2015 +0200

    nl80211: ignore HT/VHT capabilities without QoS/WMM
    
    commit 496fcc294daab18799e190c0264863d653588d1f upstream.
    
    As HT/VHT depend heavily on QoS/WMM, it's not a good idea to
    let userspace add clients that have HT/VHT but not QoS/WMM.
    Since it does so in certain cases we've observed (client is
    using HT IEs but not QoS/WMM) just ignore the HT/VHT info at
    this point and don't pass it down to the drivers which might
    unconditionally use it.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 27454f094cdc9571564d3edf335cd78e9ed8b9e8
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Mar 19 22:25:16 2015 -0700

    tcm_qla2xxx: Fix incorrect use of __transport_register_session
    
    commit 75c3d0bf9caebb502e96683b2bc37f9692437e68 upstream.
    
    This patch fixes the incorrect use of __transport_register_session()
    in tcm_qla2xxx_check_initiator_node_acl() code, that does not perform
    explicit se_tpg->session_lock when accessing se_tpg->tpg_sess_list
    to add new se_sess nodes.
    
    Given that tcm_qla2xxx_check_initiator_node_acl() is not called with
    qla_hw->hardware_lock held for all accesses of ->tpg_sess_list, the
    code should be using transport_register_session() instead.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Giridhar Malavali <giridhar.malavali@qlogic.com>
    Cc: Quinn Tran <quinn.tran@qlogic.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 587959936850fb22f787af167f4ac982d605f5b0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 25 16:21:03 2015 +0300

    tcm_fc: missing curly braces in ft_invl_hw_context()
    
    commit d556546e7ecd9fca199df4698943024d40044f8e upstream.
    
    This patch adds a missing set of conditional check braces in
    ft_invl_hw_context() originally introduced by commit dcd998ccd
    when handling DDP failures in ft_recv_write_data() code.
    
     commit dcd998ccdbf74a7d8fe0f0a44e85da1ed5975946
     Author: Kiran Patil <kiran.patil@intel.com>
     Date:   Wed Aug 3 09:20:01 2011 +0000
    
        tcm_fc: Handle DDP/SW fc_frame_payload_get failures in ft_recv_write_data
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Kiran Patil <kiran.patil@intel.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 7a6ee3fd4a4ac11f94c0ae51747662349f379d54
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Mar 7 17:10:01 2015 +0100

    regmap: regcache-rbtree: Fix present bitmap resize
    
    commit 328f494d95aac8bd4896aea2328bc281053bcb71 upstream.
    
    When inserting a new register into a block at the lower end the present
    bitmap is currently shifted into the wrong direction. The effect of this is
    that the bitmap becomes corrupted and registers which are present might be
    reported as not present and vice versa.
    
    Fix this by shifting left rather than right.
    
    Fixes: 472fdec7380c("regmap: rbtree: Reduce number of nodes, take 2")
    Reported-by: Daniel Baluta <daniel.baluta@gmail.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8b4158cbdcc04c9ef1609725b6deb31821a3993c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:13 2015 +0100

    ASoC: wm8955: Fix wrong value references for boolean kctl
    
    commit 07892b10356f17717abdc578acbef72db86c880e upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0a62e30bd1dd5c75d38dce141f5cb785c7a08bda
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:03 2015 +0100

    ASoC: adav80x: Fix wrong value references for boolean kctl
    
    commit 2bf4c1d483d911cda5dd385527194d23e5cea73d upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 85f91218f6ac79c8ce1d449ab49f7fd97e0fd5cb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:04 2015 +0100

    ASoC: ak4641: Fix wrong value references for boolean kctl
    
    commit 08641d9b7bf915144a57a736b42642e13eb1167f upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit fb16e05fa49c1ce56b77979099bf1f05df502e54
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:12 2015 +0100

    ASoC: wm8904: Fix wrong value references for boolean kctl
    
    commit eaddf6fd959074f6a6e71deffe079c71eef35da6 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 63d887109a15e3bad3fbe2d6475044cbbf0c457f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:11 2015 +0100

    ASoC: wm8903: Fix wrong value references for boolean kctl
    
    commit 24cc883c1fd16df34211ae41624aa6d3cd906693 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f18d6628aa7d5d25703528673f4bb499cf43e438
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:09 2015 +0100

    ASoC: wm2000: Fix wrong value references for boolean kctl
    
    commit 00a14c2968e3d55817e0fa35c78106ca840537bf upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 21592fdfb9c5a1b0d635cf3b481d27b2b54bebaf
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:10 2015 +0100

    ASoC: wm8731: Fix wrong value references for boolean kctl
    
    commit bd14016fbf31aa199026f1e2358eab695f374eb1 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 186ac0df1d829caf12cd26511fdd065dd37d3c42
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:08 2015 +0100

    ASoC: tas5086: Fix wrong value references for boolean kctl
    
    commit 4c523ef61160b7d478371ddc9f48c8ce0a00d675 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a68537c9ff050013e1d1da4c4a1cd6c3a17f916c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:14 2015 +0100

    ASoC: wm8960: Fix wrong value references for boolean kctl
    
    commit b4a18c8b1af15ebfa9054a3d2aef7b0a7e6f2a05 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e235580b7600d6d84c9cda7949788841a6732b6c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:05 2015 +0100

    ASoC: cs4271: Fix wrong value references for boolean kctl
    
    commit e8371aa0fecb73fb8a4b2e0296b025b11e7d6229 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Paul Handrigan <Paul.Handrigan@cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 7aadbb35fd6342785c9fd87cf2b57eceaa550046
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 10 12:39:07 2015 +0100

    ASoC: pcm1681: Fix wrong value references for boolean kctl
    
    commit d7f58db49d9ad92bdb12d21fdc2308b76bc2ed38 upstream.
    
    The correct values referred by a boolean control are
    value.integer.value[], not value.enumerated.item[].
    The former is long while the latter is int, so it's even incompatible
    on 64bit architectures.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit eb1fde56dd4c8d02776f11931c2a3a23ad018fb5
Author: Eric Nelson <eric.nelson@boundarydevices.com>
Date:   Fri Feb 27 08:06:45 2015 -0700

    ASoC: sgtl5000: remove useless register write clearing CHRGPUMP_POWERUP
    
    commit c7d910b87d3c8e9fcf4077089ca4327c12eee099 upstream.
    
    The SGTL5000_CHIP_ANA_POWER register is cached. Update the cached
    value instead of writing it directly.
    
    Patch inspired by Russell King's more colorful remarks in this
    patch:
            https://github.com/SolidRun/linux-imx6-3.14/commit/dd4bf6a
    
    Signed-off-by: Eric Nelson <eric.nelson@boundarydevices.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a9987afab81124074654de1237944f3f72723f69
Author: willy tarreau <w@1wt.eu>
Date:   Thu Jan 16 08:20:11 2014 +0100

    net: mvneta: replace Tx timer with a real interrupt
    
    commit 71f6d1b31fb1f278a345a30a2180515adc7d80ae upstream.
    
    Right now the mvneta driver doesn't handle Tx IRQ, and relies on two
    mechanisms to flush Tx descriptors : a flush at the end of mvneta_tx()
    and a timer. If a burst of packets is emitted faster than the device
    can send them, then the queue is stopped until next wake-up of the
    timer 10ms later. This causes jerky output traffic with bursts and
    pauses, making it difficult to reach line rate with very few streams.
    
    A test on UDP traffic shows that it's not possible to go beyond 134
    Mbps / 12 kpps of outgoing traffic with 1500-bytes IP packets. Routed
    traffic tends to observe pauses as well if the traffic is bursty,
    making it even burstier after the wake-up.
    
    It seems that this feature was inherited from the original driver but
    nothing there mentions any reason for not using the interrupt instead,
    which the chip supports.
    
    Thus, this patch enables Tx interrupts and removes the timer. It does
    the two at once because it's not really possible to make the two
    mechanisms coexist, so a split patch doesn't make sense.
    
    First tests performed on a Mirabox (Armada 370) show that less CPU
    seems to be used when sending traffic. One reason might be that we now
    call the mvneta_tx_done_gbe() with a mask indicating which queues have
    been done instead of looping over all of them.
    
    The same UDP test above now happily reaches 987 Mbps / 87.7 kpps.
    Single-stream TCP traffic can now more easily reach line rate. HTTP
    transfers of 1 MB objects over a single connection went from 730 to
    840 Mbps. It is even possible to go significantly higher (>900 Mbps)
    by tweaking tcp_tso_win_divisor.
    
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Arnaud Ebalard <arno@natisbad.org>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Tested-by: Arnaud Ebalard <arno@natisbad.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 604cd053934a47f863efd523dd3cb28195289397
Author: willy tarreau <w@1wt.eu>
Date:   Thu Jan 16 08:20:10 2014 +0100

    net: mvneta: add missing bit descriptions for interrupt masks and causes
    
    commit 40ba35e74fa56866918d2f3bc0528b5b92725d5e upstream.
    
    Marvell has not published the chip's datasheet yet, so it's very hard
    to find the relevant bits to manipulate to change the IRQ behaviour.
    Fortunately, these bits are described in the proprietary LSP patch set
    which is publicly available here :
    
        http://www.plugcomputer.org/downloads/mirabox/
    
    So let's put them back in the driver in order to reduce the burden of
    current and future maintenance.
    
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Tested-by: Arnaud Ebalard <arno@natisbad.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 5ad3cba367d29929cb72b9ec731524e04b22b7dc
Author: willy tarreau <w@1wt.eu>
Date:   Thu Jan 16 08:20:09 2014 +0100

    net: mvneta: do not schedule in mvneta_tx_timeout
    
    commit 290213667ab53a95456397763205e4b1e30f46b5 upstream.
    
    If a queue timeout is reported, we can oops because of some
    schedules while the caller is atomic, as shown below :
    
      mvneta d0070000.ethernet eth0: tx timeout
      BUG: scheduling while atomic: bash/1528/0x00000100
      Modules linked in: slhttp_ethdiv(C) [last unloaded: slhttp_ethdiv]
      CPU: 2 PID: 1528 Comm: bash Tainted: G        WC   3.13.0-rc4-mvebu-nf #180
      [<c0011bd9>] (unwind_backtrace+0x1/0x98) from [<c000f1ab>] (show_stack+0xb/0xc)
      [<c000f1ab>] (show_stack+0xb/0xc) from [<c02ad323>] (dump_stack+0x4f/0x64)
      [<c02ad323>] (dump_stack+0x4f/0x64) from [<c02abe67>] (__schedule_bug+0x37/0x4c)
      [<c02abe67>] (__schedule_bug+0x37/0x4c) from [<c02ae261>] (__schedule+0x325/0x3ec)
      [<c02ae261>] (__schedule+0x325/0x3ec) from [<c02adb97>] (schedule_timeout+0xb7/0x118)
      [<c02adb97>] (schedule_timeout+0xb7/0x118) from [<c0020a67>] (msleep+0xf/0x14)
      [<c0020a67>] (msleep+0xf/0x14) from [<c01dcbe5>] (mvneta_stop_dev+0x21/0x194)
      [<c01dcbe5>] (mvneta_stop_dev+0x21/0x194) from [<c01dcfe9>] (mvneta_tx_timeout+0x19/0x24)
      [<c01dcfe9>] (mvneta_tx_timeout+0x19/0x24) from [<c024afc7>] (dev_watchdog+0x18b/0x1c4)
      [<c024afc7>] (dev_watchdog+0x18b/0x1c4) from [<c0020b53>] (call_timer_fn.isra.27+0x17/0x5c)
      [<c0020b53>] (call_timer_fn.isra.27+0x17/0x5c) from [<c0020cad>] (run_timer_softirq+0x115/0x170)
      [<c0020cad>] (run_timer_softirq+0x115/0x170) from [<c001ccb9>] (__do_softirq+0xbd/0x1a8)
      [<c001ccb9>] (__do_softirq+0xbd/0x1a8) from [<c001cfad>] (irq_exit+0x61/0x98)
      [<c001cfad>] (irq_exit+0x61/0x98) from [<c000d4bf>] (handle_IRQ+0x27/0x60)
      [<c000d4bf>] (handle_IRQ+0x27/0x60) from [<c000843b>] (armada_370_xp_handle_irq+0x33/0xc8)
      [<c000843b>] (armada_370_xp_handle_irq+0x33/0xc8) from [<c000fba9>] (__irq_usr+0x49/0x60)
    
    Ben Hutchings attempted to propose a better fix consisting in using a
    scheduled work for this, but while it fixed this panic, it caused other
    random freezes and panics proving that the reset sequence in the driver
    is unreliable and that additional fixes should be investigated.
    
    When sending multiple streams over a link limited to 100 Mbps, Tx timeouts
    happen from time to time, and the driver correctly recovers only when the
    function is disabled.
    
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Tested-by: Arnaud Ebalard <arno@natisbad.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 25223a8ffa6114ee405ec4c8a623743998be17e1
Author: willy tarreau <w@1wt.eu>
Date:   Thu Jan 16 08:20:08 2014 +0100

    net: mvneta: use per_cpu stats to fix an SMP lock up
    
    commit 74c41b048db1073a04827d7f39e95ac1935524cc upstream.
    
    Stats writers are mvneta_rx() and mvneta_tx(). They don't lock anything
    when they update the stats, and as a result, it randomly happens that
    the stats freeze on SMP if two updates happen during stats retrieval.
    This is very easily reproducible by starting two HTTP servers and binding
    each of them to a different CPU, then consulting /proc/net/dev in loops
    during transfers, the interface should immediately lock up. This issue
    also randomly happens upon link state changes during transfers, because
    the stats are collected in this situation, but it takes more attempts to
    reproduce it.
    
    The comments in netdevice.h suggest using per_cpu stats instead to get
    rid of this issue.
    
    This patch implements this. It merges both rx_stats and tx_stats into
    a single "stats" member with a single syncp. Both mvneta_rx() and
    mvneta_rx() now only update the a single CPU's counters.
    
    In turn, mvneta_get_stats64() does the summing by iterating over all CPUs
    to get their respective stats.
    
    With this change, stats are still correct and no more lockup is encountered.
    
    Note that this bug was present since the first import of the mvneta
    driver.  It might make sense to backport it to some stable trees. If
    so, it depends on "d33dc73 net: mvneta: increase the 64-bit rx/tx stats
    out of the hot path".
    
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Tested-by: Arnaud Ebalard <arno@natisbad.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [wt: port to 3.10 : u64_stats_init() does not exist in 3.10 and is not needed]
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit dbdd0da3f80f628c25b8b592814a849e90dcebc8
Author: willy tarreau <w@1wt.eu>
Date:   Thu Jan 16 08:20:07 2014 +0100

    net: mvneta: increase the 64-bit rx/tx stats out of the hot path
    
    commit dc4277dd41a80fd5f29a90412ea04bc3ba54fbf1 upstream.
    
    Better count packets and bytes in the stack and on 32 bit then
    accumulate them at the end for once. This saves two memory writes
    and two memory barriers per packet. The incoming packet rate was
    increased by 4.7% on the Openblocks AX3 thanks to this.
    
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Tested-by: Arnaud Ebalard <arno@natisbad.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e63a44010451b777374f4e651abe7307b8cab90b
Author: Wei Yang <weiyang@linux.vnet.ibm.com>
Date:   Sun Jun 1 15:24:35 2014 +0800

    net/mlx4_core: Preserve pci_dev_data after __mlx4_remove_one()
    
    [ Upstream commit befdf8978accecac2e0739e6b5075afc62db37fe ]
    
    pci_match_id() just match the static pci_device_id, which may return NULL if
    someone binds the driver to a device manually using
    /sys/bus/pci/drivers/.../new_id.
    
    This patch wrap up a helper function __mlx4_remove_one() which does the tear
    down function but preserve the drv_data. Functions like
    mlx4_pci_err_detected() and mlx4_restart_one() will call this one with out
    releasing drvdata.
    
    Fixes: 97a5221 "net/mlx4_core: pass pci_device_id.driver_data to __mlx4_init_one during reset".
    
    CC: Bjorn Helgaas <bhelgaas@google.com>
    CC: Amir Vadai <amirv@mellanox.com>
    CC: Jack Morgenstein <jackm@dev.mellanox.co.il>
    CC: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Wei Yang <weiyang@linux.vnet.ibm.com>
    Acked-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e359cc96c842315dde963e7b83aae82bb4722db2
Author: Wei Yang <weiyang@linux.vnet.ibm.com>
Date:   Sun Jun 1 15:24:59 2014 +0800

    net/mlx4_core: pass pci_device_id.driver_data to __mlx4_init_one during reset
    
    commit 97a5221f56bad2e1c7e8ab55da4ac4748ef59c64 upstream.
    
    The second parameter of __mlx4_init_one() is used to identify whether the
    pci_dev is a PF or VF. Currently, when it is invoked in mlx4_pci_slot_reset()
    this information is missed.
    
    This patch match the pci_dev with mlx4_pci_table and passes the
    pci_device_id.driver_data to __mlx4_init_one() in mlx4_pci_slot_reset().
    
    Signed-off-by: Wei Yang <weiyang@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 1f2251ec984761b34036316a43a5eb2dc6e9df90
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jul 2 02:39:38 2014 -0700

    net: fix sparse warning in sk_dst_set()
    
    commit 5925a0555bdaf0b396a84318cbc21ba085f6c0d3 upstream.
    
    sk_dst_cache has __rcu annotation, so we need a cast to avoid
    following sparse error :
    
    include/net/sock.h:1774:19: warning: incorrect type in initializer (different address spaces)
    include/net/sock.h:1774:19:    expected struct dst_entry [noderef] <asn:4>*__ret
    include/net/sock.h:1774:19:    got struct dst_entry *dst
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Fixes: 7f502361531e ("ipv4: irq safe sk_dst_[re]set() and ipv4_sk_update_pmtu() fix")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 12ea1092de881c1634d0ddc1e6004b1ae848895b
Author: Thomas Fitzsimmons <fitzsim@fitzsim.org>
Date:   Tue Jul 8 19:44:07 2014 -0400

    net: mvneta: Fix big endian issue in mvneta_txq_desc_csum()
    
    commit 0a1985879437d14bda8c90d0dae3455c467d7642 upstream.
    
    This commit fixes the command value generated for CSUM calculation
    when running in big endian mode.  The Ethernet protocol ID for IP was
    being unconditionally byte-swapped in the layer 3 protocol check (with
    swab16), which caused the mvneta driver to not function correctly in
    big endian mode.  This patch byte-swaps the ID conditionally with
    htons.
    
    Cc: <stable@vger.kernel.org> # v3.13+
    Signed-off-by: Thomas Fitzsimmons <fitzsim@fitzsim.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit fa53db808062ff867f0cae5348e427ad9845f3d9
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Jul 21 00:06:48 2014 +0100

    dns_resolver: Null-terminate the right string
    
    commit 640d7efe4c08f06c4ae5d31b79bd8740e7f6790a upstream.
    
    *_result[len] is parsed as *(_result[len]) which is not at all what we
    want to touch here.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Fixes: 84a7c0b1db1c ("dns_resolver: assure that dns_query() result is null-terminated")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 67cfe124ce1a22e0b069da5fb1d337bb2b32d978
Author: Gao feng <gaofeng@cn.fujitsu.com>
Date:   Fri Jan 24 16:29:11 2014 +0800

    ipv6: reallocate addrconf router for ipv6 address when lo device up
    
    commit 33d99113b1102c2d2f8603b9ba72d89d915c13f5 upstream.
    
    commit 25fb6ca4ed9cad72f14f61629b68dc03c0d9713f
    "net IPv6 : Fix broken IPv6 routing table after loopback down-up"
    allocates addrconf router for ipv6 address when lo device up.
    but commit a881ae1f625c599b460cc8f8a7fcb1c438f699ad
    "ipv6:don't call addrconf_dst_alloc again when enable lo" breaks
    this behavior.
    
    Since the addrconf router is moved to the garbage list when
    lo device down, we should release this router and rellocate
    a new one for ipv6 address when lo device up.
    
    This patch solves bug 67951 on bugzilla
    https://bugzilla.kernel.org/show_bug.cgi?id=67951
    
    change from v1:
    use ip6_rt_put to repleace ip6_del_rt, thanks Hannes!
    change code style, suggested by Sergei.
    
    CC: Sabrina Dubroca <sd@queasysnail.net>
    CC: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Reported-by: Weilong Chen <chenweilong@huawei.com>
    Signed-off-by: Weilong Chen <chenweilong@huawei.com>
    Signed-off-by: Gao feng <gaofeng@cn.fujitsu.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 1674b4bf3eea3cac51b70778e89f8025f7cfe695
Author: Zoltan Kiss <zoltan.kiss@citrix.com>
Date:   Wed Mar 26 22:37:45 2014 +0000

    core, nfqueue, openvswitch: Orphan frags in skb_zerocopy and handle errors
    
    commit 36d5fe6a000790f56039afe26834265db0a3ad4c upstream.
    
    skb_zerocopy can copy elements of the frags array between skbs, but it doesn't
    orphan them. Also, it doesn't handle errors, so this patch takes care of that
    as well, and modify the callers accordingly. skb_tx_error() is also added to
    the callers so they will signal the failed delivery towards the creator of the
    skb.
    
    Signed-off-by: Zoltan Kiss <zoltan.kiss@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.13: skb_zerocopy() is new in 3.14, but was moved from a
     static function in nfnetlink_queue.  We need to patch that and its caller, but
     not openvswitch.]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0a4cfd28fbfa6acb4db7588b5d74c906575b27ed
Author: Joerg Roedel <jroedel@suse.de>
Date:   Wed Feb 4 13:33:33 2015 +0100

    x86/irq: Check for valid irq descriptor in check_irq_vectors_for_cpu_disable()
    
    commit d97eb8966c91f2c9d05f0a22eb89ed5b76d966d1 upstream.
    
    When an interrupt is migrated away from a cpu it will stay
    in its vector_irq array until smp_irq_move_cleanup_interrupt
    succeeded. The cfg->move_in_progress flag is cleared already
    when the IPI was sent.
    
    When the interrupt is destroyed after migration its 'struct
    irq_desc' is freed and the vector_irq arrays are cleaned up.
    But since cfg->move_in_progress is already 0 the references
    at cpus before the last migration will not be cleared. So
    this would leave a reference to an already destroyed irq
    alive.
    
    When the cpu is taken down at this point, the
    check_irq_vectors_for_cpu_disable() function finds a valid irq
    number in the vector_irq array, but gets NULL for its
    descriptor and dereferences it, causing a kernel panic.
    
    This has been observed on real systems at shutdown. Add a
    check to check_irq_vectors_for_cpu_disable() for a valid
    'struct irq_desc' to prevent this issue.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Prarit Bhargava <prarit@redhat.com>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: alnovak@suse.com
    Cc: joro@8bytes.org
    Link: http://lkml.kernel.org/r/20150204132754.GA10078@suse.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c45f743a171baa54cc18783f954799e2b30452e8
Author: Joerg Roedel <jroedel@suse.de>
Date:   Tue Aug 19 00:19:26 2014 +0200

    iommu/core: Check for the right function pointer in iommu_map()
    
    commit 9db4ad9183aad0e9567f6afb23db1bdc9aa6c2a9 upstream.
    
    Check for the ->map and not the ->unmap pointer.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f22ce19ac3c767fbf4467bc02fa216ec329f007f
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Sat Jan 25 22:24:22 2014 +0100

    intel_idle: Add CPU model 54 (Atom N2000 series)
    
    commit acead1b0fac5b10d0ae3f1cc5f7820b9f9f924f5 upstream.
    
    Add CPU ID for Atom N2600/N2800 processors. Datasheets indicate support
    for this, detailed information about potential quirks or limitations are
    missing, though. So we just reuse the definition for the previous ATOM
    series. Tests on N2800 systems showed that this addition is fine an can
    reduce power consumption by about 0.25 W (personally confirmed on Intel
    DN2800MT).
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 45a252f53c832c715b468c0987be0a27f509cde7
Author: Romeo Cane <romeo.cane.ext@coriant.com>
Date:   Thu Oct 2 15:41:39 2014 +0100

    powerpc: Fix sys_call_table declaration to enable syscall tracing
    
    commit 1028ccf560b97adbf272381a61a67e17d44d1054 upstream.
    
    Declaring sys_call_table as a pointer causes the compiler to generate
    the wrong lookup code in arch_syscall_addr().
    
         <arch_syscall_addr>:
            lis     r9,-16384
            rlwinm  r3,r3,2,0,29
      -     lwz     r11,30640(r9)
      -     lwzx    r3,r11,r3
      +     addi    r9,r9,30640
      +     lwzx    r3,r9,r3
            blr
    
    The actual sys_call_table symbol, declared in assembler, is an
    array. If we lie about that to the compiler we get the wrong code
    generated, as above.
    
    This definition seems only to be used by the syscall tracing code in
    kernel/trace/trace_syscalls.c. With this patch I can successfully use
    the syscall tracepoints:
    
      bash-3815  [002] ....   333.239082: sys_write -> 0x2
      bash-3815  [002] ....   333.239087: sys_dup2(oldfd: a, newfd: 1)
      bash-3815  [002] ....   333.239088: sys_dup2 -> 0x1
      bash-3815  [002] ....   333.239092: sys_fcntl(fd: a, cmd: 1, arg: 0)
      bash-3815  [002] ....   333.239093: sys_fcntl -> 0x1
      bash-3815  [002] ....   333.239094: sys_close(fd: a)
      bash-3815  [002] ....   333.239094: sys_close -> 0x0
    
    Signed-off-by: Romeo Cane <romeo.cane.ext@coriant.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c5988181af3b41381c4d20e08ca6852f99f95417
Author: Quentin Casasnovas <quentin.casasnovas@oracle.com>
Date:   Tue Feb 3 13:00:22 2015 +0100

    x86/microcode/intel: Guard against stack overflow in the loader
    
    commit f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4 upstream.
    
    mc_saved_tmp is a static array allocated on the stack, we need to make
    sure mc_saved_count stays within its bounds, otherwise we're overflowing
    the stack in _save_mc(). A specially crafted microcode header could lead
    to a kernel crash or potentially kernel execution.
    
    Signed-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Link: http://lkml.kernel.org/r/1422964824-22056-1-git-send-email-quentin.casasnovas@oracle.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 17e7f51dec81495e6571ce8617e3da8ee2e47e78
Author: Andy Lutomirski <luto@amacapital.net>
Date:   Sat Aug 16 04:13:37 2014 +0930

    module: Clean up ro/nx after early module load failures
    
    commit ff7e0055bb5ddbbb320cdd8dfd3e18672bddd2ad upstream.
    
    The commit
    
        4982223e51e8 module: set nx before marking module MODULE_STATE_COMING.
    
    introduced a regression: if a module fails to parse its arguments or
    if mod_sysfs_setup fails, then the module's memory will be freed
    while still read-only.  Anything that reuses that memory will crash
    as soon as it tries to write to it.
    
    Cc: stable@vger.kernel.org # v3.16
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9dde9641037a74e968b79685ddaf2ed1311152e8
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Wed May 14 10:54:19 2014 +0930

    module: set nx before marking module MODULE_STATE_COMING.
    
    commit 4982223e51e8ea9d09bb33c8323b5ec1877b2b51 upstream.
    
    We currently set RO & NX on modules very late: after we move them from
    MODULE_STATE_UNFORMED to MODULE_STATE_COMING, and after we call
    parse_args() (which can exec code in the module).
    
    Much better is to do it in complete_formation() and then call
    the notifier.
    
    This means that the notifiers will be called on a module which
    is already RO & NX, so that may cause problems (ftrace already
    changed so they're unaffected).
    
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f80c5f13970259005e64365c80c8d8f00d787c79
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Feb 24 17:58:02 2015 +1100

    powerpc/smp: Wait until secondaries are active & online
    
    commit 875ebe940d77a41682c367ad799b4f39f128d3fa upstream.
    
    Anton has a busy ppc64le KVM box where guests sometimes hit the infamous
    "kernel BUG at kernel/smpboot.c:134!" issue during boot:
    
      BUG_ON(td->cpu != smp_processor_id());
    
    Basically a per CPU hotplug thread scheduled on the wrong CPU. The oops
    output confirms it:
    
      CPU: 0
      Comm: watchdog/130
    
    The problem is that we aren't ensuring the CPU active bit is set for the
    secondary before allowing the master to continue on. The master unparks
    the secondary CPU's kthreads and the scheduler looks for a CPU to run
    on. It calls select_task_rq() and realises the suggested CPU is not in
    the cpus_allowed mask. It then ends up in select_fallback_rq(), and
    since the active bit isnt't set we choose some other CPU to run on.
    
    This seems to have been introduced by 6acbfb96976f "sched: Fix hotplug
    vs. set_cpus_allowed_ptr()", which changed from setting active before
    online to setting active after online. However that was in turn fixing a
    bug where other code assumed an active CPU was also online, so we can't
    just revert that fix.
    
    The simplest fix is just to spin waiting for both active & online to be
    set. We already have a barrier prior to set_cpu_online() (which also
    sets active), to ensure all other setup is completed before online &
    active are set.
    
    Fixes: 6acbfb96976f ("sched: Fix hotplug vs. set_cpus_allowed_ptr()")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f0cd84895484b4ab98701654bc02791c472c7465
Author: Steven Capper <steve.capper@linaro.org>
Date:   Fri Jul 18 16:16:15 2014 +0100

    ARM: 8109/1: mm: Modify pte_write and pmd_write logic for LPAE
    
    commit ded9477984690d026e46dd75e8157392cea3f13f upstream.
    
    For LPAE, we have the following means for encoding writable or dirty
    ptes:
                                  L_PTE_DIRTY       L_PTE_RDONLY
        !pte_dirty && !pte_write        0               1
        !pte_dirty && pte_write         0               1
        pte_dirty && !pte_write         1               1
        pte_dirty && pte_write          1               0
    
    So we can't distinguish between writeable clean ptes and read only
    ptes. This can cause problems with ptes being incorrectly flagged as
    read only when they are writeable but not dirty.
    
    This patch renumbers L_PTE_RDONLY from AP[2] to a software bit #58,
    and adds additional logic to set AP[2] whenever the pte is read only
    or not dirty. That way we can distinguish between clean writeable ptes
    and read only ptes.
    
    HugeTLB pages will use this new logic automatically.
    
    We need to add some logic to Transparent HugePages to ensure that they
    correctly interpret the revised pgprot permissions (L_PTE_RDONLY has
    moved and no longer matches PMD_SECT_AP2). In the process of revising
    THP, the names of the PMD software bits have been prefixed with L_ to
    make them easier to distinguish from their hardware bit counterparts.
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz> [dump.c is not in 3.12]

commit aaca16dc9198d855b58bccd200918b9af138d6be
Author: Steven Capper <steve.capper@linaro.org>
Date:   Fri Jul 18 16:15:27 2014 +0100

    ARM: 8108/1: mm: Introduce {pte,pmd}_isset and {pte,pmd}_isclear
    
    commit f2950706871c4b6e8c0f0d7c3f62d35930b8de63 upstream.
    
    Long descriptors on ARM are 64 bits, and some pte functions such as
    pte_dirty return a bitwise-and of a flag with the pte value. If the
    flag to be tested resides in the upper 32 bits of the pte, then we run
    into the danger of the result being dropped if downcast.
    
    For example:
            gather_stats(page, md, pte_dirty(*pte), 1);
    where pte_dirty(*pte) is downcast to an int.
    
    This patch introduces a new macro pte_isset which performs the bitwise
    and, then performs a double logical invert (where needed) to ensure
    predictable downcasting. The logical inverse pte_isclear is also
    introduced.
    
    Equivalent pmd functions for Transparent HugePages have also been
    added.
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit eec585a2565ee1d56e92e1e80d612cd00ba05887
Author: Laura Abbott <lauraa@codeaurora.org>
Date:   Sat Dec 21 01:03:06 2013 +0100

    ARM: 7931/1: Correct virt_addr_valid
    
    commit efea3403d4b7c6d1dd5d5ac3234c161e8b314d66 upstream.
    
    The definition of virt_addr_valid is that virt_addr_valid should
    return true if and only if virt_to_page returns a valid pointer.
    The current definition of virt_addr_valid only checks against the
    virtual address range. There's no guarantee that just because a
    virtual address falls bewteen PAGE_OFFSET and high_memory the
    associated physical memory has a valid backing struct page. Follow
    the example of other architectures and convert to pfn_valid to
    verify that the virtual address is actually valid. The check for
    an address between PAGE_OFFSET and high_memory is still necessary
    as vmalloc/highmem addresses are not valid with virt_to_page.
    
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Nicolas Pitre <nico@linaro.org>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Laura Abbott <lauraa@codeaurora.org>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 69f8bfe920fe43ea08fbd41dfdb5c0dad337ac46
Author: Chen Gang <gang.chen@asianux.com>
Date:   Sat Oct 26 15:07:25 2013 +0100

    ARM: 7867/1: include: asm: use 'int' instead of 'unsigned long' for 'oldval' in atomic_cmpxchg().
    
    commit 4dcc1cf7316a26e112f5c9fcca531ff98ef44700 upstream.
    
    For atomic_cmpxchg(), the type of 'oldval' need be 'int' to match the
    type of "*ptr" (used by 'ldrex' instruction) and 'old' (used by 'teq'
    instruction).
    
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 63448427542cdfbfcb1c84e1cfbbcef137bd4173
Author: Chen Gang <gang.chen@asianux.com>
Date:   Sat Oct 26 15:07:04 2013 +0100

    ARM: 7866/1: include: asm: use 'long long' instead of 'u64' within atomic.h
    
    commit 237f12337cfa2175474e4dd015bc07a25eb9080d upstream.
    
    atomic* value is signed value, and atomic* functions need also process
    signed value (parameter value, and return value), so 32-bit arm need
    use 'long long' instead of 'u64'.
    
    After replacement, it will also fix a bug for atomic64_add_negative():
    "u64 is never less than 0".
    
    The modifications are:
    
      in vim, use "1,% s/\<u64\>/long long/g" command.
      remove '__aligned(8)' which is useless for 64-bit.
      be sure of 80 column limitation after replacement.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 4fd4c6b42691a657dd28b02cc7b66f01e87cb492
Author: Jouni Malinen <jouni@qca.qualcomm.com>
Date:   Thu Dec 11 23:48:55 2014 +0200

    cfg80211: Fix 160 MHz channels with 80+80 and 160 MHz drivers
    
    commit 08f6f147773b23b765b94633a8eaa82e7defcf4c upstream.
    
    The VHT supported channel width field is a two bit integer, not a
    bitfield. cfg80211_chandef_usable() was interpreting it incorrectly and
    ended up rejecting 160 MHz channel width if the driver indicated support
    for both 160 and 80+80 MHz channels.
    
    Cc: stable@vger.kernel.org (3.16+)
    Fixes: 3d9d1d6656a73 ("nl80211/cfg80211: support VHT channel configuration")
           (however, no real drivers had 160 MHz support it until 3.16)
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 7ad45878fff07f03049e1c2cd11eca03a27122f7
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Wed Oct 1 14:28:36 2014 +0530

    ARC: [nsimosci] move peripherals to match model to FPGA
    
    commit e8ef060b37c2d3cc5fd0c0edbe4e42ec1cb9768b upstream.
    
    This allows the sdplite/Zebu images to run on OSCI simulation platform
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Cc: <stable@vger.kernel.org> #3.10, 3.12, 3.14, 3.16
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 644d10716875b24388680925d6c7502420987bfe
Author: Chris Mason <clm@fb.com>
Date:   Wed Dec 31 12:18:29 2014 -0500

    Btrfs: don't delay inode ref updates during log replay
    
    commit 6f8960541b1eb6054a642da48daae2320fddba93 upstream.
    
    Commit 1d52c78afbb (Btrfs: try not to ENOSPC on log replay) added a
    check to skip delayed inode updates during log replay because it
    confuses the enospc code.  But the delayed processing will end up
    ignoring delayed refs from log replay because the inode itself wasn't
    put through the delayed code.
    
    This can end up triggering a warning at commit time:
    
    WARNING: CPU: 2 PID: 778 at fs/btrfs/delayed-inode.c:1410 btrfs_assert_delayed_root_empty+0x32/0x34()
    
    Which is repeated for each commit because we never process the delayed
    inode ref update.
    
    The fix used here is to change btrfs_delayed_delete_inode_ref to return
    an error if we're currently in log replay.  The caller will do the ref
    deletion immediately and everything will work properly.
    
    Signed-off-by: Chris Mason <clm@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 3f1d2f15e95c422dfec90853fa687e93c6a88c9d
Author: NeilBrown <neilb@suse.de>
Date:   Tue Sep 9 14:13:51 2014 +1000

    md/bitmap: always wait for writes on unplug.
    
    commit 4b5060ddae2b03c5387321fafc089d242225697a upstream.
    
    If two threads call bitmap_unplug at the same time, then
    one might schedule all the writes, and the other might
    decide that it doesn't need to wait.  But really it does.
    
    It rarely hurts to wait when it isn't absolutely necessary,
    and the current code doesn't really focus on 'absolutely necessary'
    anyway.  So just wait always.
    
    This can potentially lead to data corruption if a crash happens
    at an awkward time and data was written before the bitmap was
    updated.  It is very unlikely, but this should go to -stable
    just to be safe.  Appropriate for any -stable.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Cc: stable@vger.kernel.org (please delay until 3.18 is released)
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c35d584129f4dcb1ef167427475e5452e456431e
Author: Ben Dooks <ben.dooks@codethink.co.uk>
Date:   Thu Jul 25 14:38:03 2013 +0100

    ARM: Correct BUG() assembly to ensure it is endian-agnostic
    
    commit 63328070eff2f4fd730c86966a0dbc976147c39f upstream.
    
    Currently BUG() uses .word or .hword to create the necessary illegal
    instructions. However if we are building BE8 then these get swapped
    by the linker into different illegal instructions in the text. This
    means that the BUG() macro does not get trapped properly.
    
    Change to using <asm/opcodes.h> to provide the necessary ARM instruction
    building as we cannot rely on gcc/gas having the `.inst` instructions
    which where added to try and resolve this issue (reported by Dave Martin
    <Dave.Martin@arm.com>).
    
    Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Reviewed-by: Dave Martin <Dave.Martin@arm.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a2752656378c13d38a719a67a05299950137f7da
Author: Anton Kolesov <Anton.Kolesov@synopsys.com>
Date:   Thu Sep 25 13:23:24 2014 +0400

    ARC: Update order of registers in KGDB to match GDB 7.5
    
    commit ebc0c74e76cec9c4dd860eb0ca1c0b39dc63c482 upstream.
    
    Order of registers has changed in GDB moving from 6.8 to 7.5. This patch
    updates KGDB to work properly with GDB 7.5, though makes it incompatible
    with 6.8.
    
    Signed-off-by: Anton Kolesov <Anton.Kolesov@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Cc: <stable@vger.kernel.org> #3.10, 3.12, 3.14, 3.16
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit d26da89dc65301b86891ffce51bbacc965cda2ed
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Jun 20 16:24:49 2014 +0530

    ARC: [nsimosci] Allow "headless" models to boot
    
    commit 5c05483e2db91890faa9a7be0a831701a3f442d6 upstream.
    
    There are certain test configuration of virtual platform which don't
    have any real console device (uart/pgu). So add tty0 as a fallback console
    device to allow system to boot and be accessible via telnet
    
    Otherwise with ttyS0 as only console, but 8250 disabled in kernel build,
    init chokes.
    
    Reported-by: Anton Kolesov <akolesov@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Cc: <stable@vger.kernel.org> #3.10, 3.12, 3.14, 3.16
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit b0f017f75dee6ee88baa55ead0c14dc797d5a4e1
Author: Anton Blanchard <anton@samba.org>
Date:   Tue Aug 26 12:44:15 2014 +1000

    powerpc/perf: Fix ABIv2 kernel backtraces
    
    commit 85101af13bb854a6572fa540df7c7201958624b9 upstream.
    
    ABIv2 kernels are failing to backtrace through the kernel. An example:
    
    39.30%  readseek2_proce  [kernel.kallsyms]    [k] find_get_entry
                |
                --- find_get_entry
                   __GI___libc_read
    
    The problem is in valid_next_sp() where we check that the new stack
    pointer is at least STACK_FRAME_OVERHEAD below the previous one.
    
    ABIv1 has a minimum stack frame size of 112 bytes consisting of 48 bytes
    and 64 bytes of parameter save area. ABIv2 changes that to 32 bytes
    with no paramter save area.
    
    STACK_FRAME_OVERHEAD is in theory the minimum stack frame size,
    but we over 240 uses of it, some of which assume that it includes
    space for the parameter area.
    
    We need to work through all our stack defines and rationalise them
    but let's fix perf now by creating STACK_FRAME_MIN_SIZE and using
    in valid_next_sp(). This fixes the issue:
    
    30.64%  readseek2_proce  [kernel.kallsyms]    [k] find_get_entry
                |
                --- find_get_entry
                   pagecache_get_page
                   generic_file_read_iter
                   new_sync_read
                   vfs_read
                   sys_read
                   syscall_exit
                   __GI___libc_read
    
    Cc: stable@vger.kernel.org # 3.16+
    Reported-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 05436bbe5e062cf91c79143eb01fd5006b653cbb
Author: Bob Moore <Robert.Moore@intel.com>
Date:   Tue Sep 23 10:35:47 2014 +0800

    ACPICA: Update to GPIO region handler interface.
    
    commit 75ec6e55f1384548311a13ce4fcb39c516053314 upstream.
    
    Changes to correct several GPIO issues:
    
    1) The update_rule in a GPIO field definition is now ignored;
    a read-modify-write operation is never performed for GPIO fields.
    (Internally, this means that the field assembly/disassembly
    code is completely bypassed for GPIO.)
    
    2) The Address parameter passed to a GPIO region handler is
    now the bit offset of the field from a previous Connection()
    operator. Thus, it becomes a "Pin Number Index" into the
    Connection() resource descriptor.
    
    3) The bit_width parameter passed to a GPIO region handler is
    now the exact bit width of the GPIO field. Thus, it can be
    interpreted as "number of pins".
    
    Overall, we can now say that the region handler interface
    to GPIO handlers is a raw "bit/pin" addressed interface, not
    a byte-addressed interface like the system_memory handler interface.
    
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Cc: 3.15+ <stable@vger.kernel.org> # 3.15+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 10b98d53f150f146e115d1c17d870b21274e2fdb
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Aug 28 12:46:54 2014 +0200

    USB: zte_ev: fix removed PIDs
    
    commit 3096691011d01cef56b243a5e65431405c07d574 upstream.
    
    Add back some PIDs that were mistakingly remove when reverting commit
    73228a0538a7 ("USB: option,zte_ev: move most ZTE CDMA devices to
    zte_ev"), which apparently did more than its commit message claimed in
    that it not only moved some PIDs from option to zte_ev but also added
    some new ones.
    
    Fixes: 63a901c06e3c ("Revert "USB: option,zte_ev: move most ZTE CDMA
    devices to zte_ev"")
    
    Reported-by: Lei Liu <lei35151@163.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c084542fe8a21054da221cb9caff8976bd1972f3
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Tue Aug 26 01:29:24 2014 +0200

    ACPI: Run fixed event device notifications in process context
    
    commit 236105db632c6279a020f78c83e22eaef746006b upstream.
    
    Currently, notify callbacks for fixed button events are run from
    interrupt context.  That is not necessary and after commit 0bf6368ee8f2
    (ACPI / button: Add ACPI Button event via netlink routine) it causes
    netlink routines to be called from interrupt context which is not
    correct.
    
    Also, that is different from non-fixed device events (including
    non-fixed button events) whose notify callbacks are all executed from
    process context.
    
    For the above reasons, make fixed button device notify callbacks run
    in process context which will avoid the deadlock when using netlink
    to report button events to user space.
    
    Fixes: 0bf6368ee8f2 (ACPI / button: Add ACPI Button event via netlink routine)
    Link: https://lkml.org/lkml/2014/8/21/606
    Reported-by: Benjamin Block <bebl@mageta.org>
    Reported-by: Knut Petersen <Knut_Petersen@t-online.de>
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    [rjw: Function names, subject and changelog.]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 65aa3aa330f8974f89ee359352ceebd375dff4eb
Author: Alex Smith <alex@alex-smith.me.uk>
Date:   Wed Jul 23 14:40:08 2014 +0100

    MIPS: asm/reg.h: Make 32- and 64-bit definitions available at the same time
    
    commit bcec7c8da6b092b1ff3327fd83c2193adb12f684 upstream.
    
    Get rid of the WANT_COMPAT_REG_H test and instead define both the 32-
    and 64-bit register offset definitions at the same time with
    MIPS{32,64}_ prefixes, then define the existing EF_* names to the
    correct definitions for the kernel's bitness.
    
    This patch is a prerequisite of the following bug fix patch.
    
    Signed-off-by: Alex Smith <alex@alex-smith.me.uk>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/7451/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit cd68970599d2f48a6176e4de5a3abc7c87db9a21
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Aug 25 16:15:35 2014 -0700

    ARM: OMAP2+: hwmod: Rearm wake-up interrupts for DT when MUSB is idled
    
    commit cc824534d4fef0e46e4486d5c1e10d3c6b1ebadc upstream.
    
    Looks like MUSB cable removal can cause wake-up interrupts to
    stop working for device tree based booting at least for UART3
    even as nothing is dynamically remuxed. This can be fixed by
    calling reconfigure_io_chain() for device tree based booting
    in hwmod code. Note that we already do that for legacy booting
    if the legacy mux is configured.
    
    My guess is that this is related to UART3 and MUSB ULPI
    hsusb0_data0 and hsusb0_data1 support for Carkit mode that
    somehow affect the configured IO chain for UART3 and require
    rearming the wake-up interrupts.
    
    In general, for device tree based booting, pinctrl-single
    calls the rearm hook that in turn calls reconfigure_io_chain
    so calling reconfigure_io_chain should not be needed from the
    hwmod code for other events.
    
    So let's limit the hwmod rearming of iochain only to
    HWMOD_FORCE_MSTANDBY where MUSB is currently the only user
    of it. If we see other devices needing similar changes we can
    add more checks for it.
    
    Cc: Paul Walmsley <paul@pwsan.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 1b39e9323cfb25aa4e0f2f3aaa8edbdba72556fa
Author: Dave Chiluk <chiluk@canonical.com>
Date:   Tue Jun 24 10:11:26 2014 -0500

    stable_kernel_rules: Add pointer to netdev-FAQ for network patches
    
    commit b76fc285337b6b256e9ba20a40cfd043f70c27af upstream.
    
    Stable_kernel_rules should point submitters of network stable patches to the
    netdev_FAQ.txt as requests for stable network patches should go to netdev
    first.
    
    Signed-off-by: Dave Chiluk <chiluk@canonical.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f2c34bc638019781776f8c26529baac9463bde15
Author: Helge Deller <deller@gmx.de>
Date:   Sat Jun 28 17:44:51 2014 +0200

    parisc: add serial ports of C8000/1GHz machine to hardware database
    
    commit eadcc7208a2237016be7bdff4551ba7614da85c8 upstream.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f9408990ef27999e556cb08e21386140637a323f
Author: Jonathan Cameron <jic23@kernel.org>
Date:   Sat May 24 12:52:10 2014 +0100

    iio:adc:max1363 incorrect resolutions for max11604, max11605, max11610 and max11611.
    
    commit a91a73c8b39a6b8bcc53fafa5372c65387c81233 upstream.
    
    Reported-by: Erik Habbinga <Erik.Habbinga@schneider-electric.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Acked-by: Hartmut Knaack <knaack.h@gmx.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f1fc0fe0607018b435ba2ce8156e0f30033a53f4
Author: Ben Collins <ben.c@servergy.com>
Date:   Fri Sep 13 12:46:44 2013 -0400

    [SCSI] megaraid: Use resource_size_t for PCI resources, not long
    
    commit 11f8a7b31f2140b0dc164bb484281235ffbe51d3 upstream.
    
    The assumption that sizeof(long) >= sizeof(resource_size_t) can lead to
    truncation of the PCI resource address, meaning this driver didn't work
    on 32-bit systems with 64-bit PCI adressing ranges.
    
    Signed-off-by: Ben Collins <ben.c@servergy.com>
    Acked-by: Sumit Saxena <sumit.saxena@lsi.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0a8212ca85d0d9dc64faaf23b9fce5ca0b2c2fd2
Author: Roland Dreier <roland@purestorage.com>
Date:   Thu May 29 13:32:30 2014 -0700

    iscsi-target: Fix wrong buffer / buffer overrun in iscsi_change_param_value()
    
    commit 79d59d08082dd0a0a18f8ceb78c99f9f321d72aa upstream.
    
    In non-leading connection login, iscsi_login_non_zero_tsih_s1() calls
    iscsi_change_param_value() with the buffer it uses to hold the login
    PDU, not a temporary buffer.  This leads to the login header getting
    corrupted and login failing for non-leading connections in MC/S.
    
    Fix this by adding a wrapper iscsi_change_param_sprintf() that handles
    the temporary buffer itself to avoid confusion.  Also handle sending a
    reject in case of failure in the wrapper, which lets the calling code
    get quite a bit smaller and easier to read.
    
    Finally, bump the size of the temporary buffer from 32 to 64 bytes to be
    safe, since "MaxRecvDataSegmentLength=" by itself is 25 bytes; with a
    trailing NUL, a value >= 1M will lead to a buffer overrun.  (This isn't
    the default but we don't need to run right at the ragged edge here)
    
    Reported-by: Santosh Kulkarni <santosh.kulkarni@calsoftinc.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2b4adc0309ebf94aca809c0bb5e366d5e9e49530
Author: Santosh Shilimkar <santosh.shilimkar@ti.com>
Date:   Mon May 12 17:37:59 2014 -0400

    ARM: OMAP4: Fix the boot regression with CPU_IDLE enabled
    
    commit 4b353a706a86598ba47307c47301c3c428b79e09 upstream.
    
    On OMAP4 panda board, there have been several bug reports about boot
    hang and lock-ups with CPU_IDLE enabled. The root cause of the issue
    is missing interrupts while in idle state. Commit cb7094e8 {cpuidle / omap4 :
    use CPUIDLE_FLAG_TIMER_STOP flag} moved the broadcast notifiers to common
    code for right reasons but on OMAP4 which suffers from a nasty ROM code
    bug with GIC, commit ff999b8a {ARM: OMAP4460: Workaround for ROM bug ..},
    we loose interrupts which leads to issues like lock-up, hangs etc.
    
    Patch reverts commit cb7094 {cpuidle / omap4 : use CPUIDLE_FLAG_TIMER_STOP
    flag} and 54769d6 {cpuidle: OMAP4: remove timer broadcast initialization} to
    avoid the issue. With this change, OMAP4 panda boards, the mentioned
    issues are getting fixed. We no longer loose interrupts which was the cause
    of the regression.
    
    Fixes: cb7094e8 (cpuidle / omap4 : use CPUIDLE_FLAG_TIMER_STOP flag)
    Fixes: ff999b8a (cpuidle: OMAP4: remove timer broadcast initialization)
    Cc: Roger Quadros <rogerq@ti.com>
    Cc: Kevin Hilman <khilman@linaro.org>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reported-tested-by: Roger Quadros <rogerq@ti.com>
    Reported-tested-by: Kevin Hilman <khilman@linaro.org>
    Tested-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit bbcf0e59a6e8ae5943f53ca1e47daa04f6236f3d
Author: Harald Freudenberger <freude@linux.vnet.ibm.com>
Date:   Wed May 7 16:51:29 2014 +0200

    crypto: s390 - fix aes,des ctr mode concurrency finding.
    
    commit 3901c1124ec5099254a9396085f7798153a7293f upstream.
    
    An additional testcase found an issue with the last
    series of patches applied: the fallback solution may
    not save the iv value after operation. This very small
    fix just makes sure the iv is copied back to the
    walk/desc struct.
    
    Cc: <stable@vger.kernel.org> # 3.14+
    Signed-off-by: Harald Freudenberger <freude@linux.vnet.ibm.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c00a93cb65b884921ee80d4a16fbd64302f80cf0
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Tue Oct 29 18:31:14 2013 +0100

    xen-blkfront: restore the non-persistent data path
    
    commit bfe11d6de1c416cea4f3f0f35f864162063ce3fa upstream.
    
    When persistent grants were added they were always used, even if the
    backend doesn't have this feature (there's no harm in always using the
    same set of pages). This restores the old data path when the backend
    doesn't have persistent grants, removing the burden of doing a memcpy
    when it is not actually needed.
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reported-by: Felipe Franciosi <felipe.franciosi@citrix.com>
    Cc: Felipe Franciosi <felipe.franciosi@citrix.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    [v2: Fix up whitespace issues]
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 30ea67254a61e0389575970068f806c400d75daa
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Mon Aug 12 12:53:44 2013 +0200

    xen-blkfront: revoke foreign access for grants not mapped by the backend
    
    commit fbe363c476afe8ec992d3baf682670a4bd1b6ce6 upstream.
    
    There's no need to keep the foreign access in a grant if it is not
    persistently mapped by the backend. This allows us to free grants that
    are not mapped by the backend, thus preventing blkfront from hoarding
    all grants.
    
    The main effect of this is that blkfront will only persistently map
    the same grants as the backend, and it will always try to use grants
    that are already mapped by the backend. Also the number of persistent
    grants in blkfront is the same as in blkback (and is controlled by the
    value in blkback).
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: David Vrabel <david.vrabel@citrix.com>
    Acked-by: Matt Wilson <msw@amazon.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8f2f5f1e02f8f280b70e7e50d3f40c1eb279c5d4
Author: Vincent Stehlé <vincent.stehle@laposte.net>
Date:   Fri Apr 4 08:43:18 2014 +0200

    topology: Fix compilation warning when not in SMP
    
    commit 53974e06603977f348ed978d75c426b0532daa67 upstream.
    
    The topology_##name() macro does not use its argument when CONFIG_SMP is not
    set, as it ultimately calls the cpu_data() macro.
    
    So we avoid maintaining a possibly unused `cpu' variable, to avoid the
    following compilation warning:
    
      drivers/base/topology.c: In function ‘show_physical_package_id’:
      drivers/base/topology.c:103:118: warning: unused variable ‘cpu’ [-Wunused-variable]
       define_id_show_func(physical_package_id);
    
      drivers/base/topology.c: In function ‘show_core_id’:
      drivers/base/topology.c:106:106: warning: unused variable ‘cpu’ [-Wunused-variable]
       define_id_show_func(core_id);
    
    This can be seen with e.g. x86 defconfig and CONFIG_SMP not set.
    
    Signed-off-by: Vincent Stehlé <vincent.stehle@laposte.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 51f4c06ed494ed6e01894a5d04ba3ce5cb9cd3dd
Author: Liu Hua <sdu.liu@huawei.com>
Date:   Mon Apr 7 15:38:57 2014 -0700

    hung_task: check the value of "sysctl_hung_task_timeout_sec"
    
    commit 80df28476505ed4e6701c3448c63c9229a50c655 upstream.
    
    As sysctl_hung_task_timeout_sec is unsigned long, when this value is
    larger then LONG_MAX/HZ, the function schedule_timeout_interruptible in
    watchdog will return immediately without sleep and with print :
    
      schedule_timeout: wrong timeout value ffffffffffffff83
    
    and then the funtion watchdog will call schedule_timeout_interruptible
    again and again.  The screen will be filled with
    
            "schedule_timeout: wrong timeout value ffffffffffffff83"
    
    This patch does some check and correction in sysctl, to let the function
    schedule_timeout_interruptible allways get the valid parameter.
    
    Signed-off-by: Liu Hua <sdu.liu@huawei.com>
    Tested-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8d30871bfd929e5d931f51caf831b3c318ffcabe
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon Feb 9 23:30:36 2015 -0800

    ntp: Fixup adjtimex freq validation on 32-bit systems
    
    commit 29183a70b0b828500816bd794b3fe192fce89f73 upstream.
    
    Additional validation of adjtimex freq values to avoid
    potential multiplication overflows were added in commit
    5e5aeb4367b (time: adjtimex: Validate the ADJ_FREQUENCY values)
    
    Unfortunately the patch used LONG_MAX/MIN instead of
    LLONG_MAX/MIN, which was fine on 64-bit systems, but being
    much smaller on 32-bit systems caused false positives
    resulting in most direct frequency adjustments to fail w/
    EINVAL.
    
    ntpd only does direct frequency adjustments at startup, so
    the issue was not as easily observed there, but other time
    sync applications like ptpd and chrony were more effected by
    the bug.
    
    See bugs:
    
      https://bugzilla.kernel.org/show_bug.cgi?id=92481
      https://bugzilla.redhat.com/show_bug.cgi?id=1188074
    
    This patch changes the checks to use LLONG_MAX for
    clarity, and additionally the checks are disabled
    on 32-bit systems since LLONG_MAX/PPM_SCALE is always
    larger then the 32-bit long freq value, so multiplication
    overflows aren't possible there.
    
    Reported-by: Josh Boyer <jwboyer@fedoraproject.org>
    Reported-by: George Joseph <george.joseph@fairview5.com>
    Tested-by: George Joseph <george.joseph@fairview5.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Link: http://lkml.kernel.org/r/1423553436-29747-1-git-send-email-john.stultz@linaro.org
    [ Prettified the changelog and the comments a bit. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Christian Riesch <christian.riesch@omicron.at>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit db9e4643a103945a7ce6880f14b751845e0eb988
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Feb 26 16:09:04 2015 -0500

    NFS: Add attribute update barriers to nfs_setattr_update_inode()
    
    commit f044636d972246d451e06226cc1675d5da389762 upstream.
    
    Ensure that other operations which raced with our setattr RPC call
    cannot revert the file attribute changes that were made on the server.
    To do so, we artificially bump the attribute generation counter on
    the inode so that all calls to nfs_fattr_init() that precede ours
    will be dropped.
    
    The motivation for the patch came from Chuck Lever's reports of readaheads
    racing with truncate operations and causing the file size to be reverted.
    
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Acked-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit ace3fc1e3f3a85ec705805146247231b11e1babe
Author: Rabin Vincent <rabin.vincent@axis.com>
Date:   Fri Jan 9 16:25:28 2015 +0100

    crypto: testmgr - don't use interruptible wait in tests
    
    commit 8a45ac12ec5b6ee67f8559c78ae11d9af8b821ee upstream.
    
    tcrypt/testmgr uses wait_for_completion_interruptible() everywhere when
    it waits for a request to be completed.  If it's interrupted, then the
    test is aborted and the request is freed.
    
    However, if any of these calls actually do get interrupted, the result
    will likely be a kernel crash, when the driver handles the now-freed
    request.  Use wait_for_completion() instead.
    
    Signed-off-by: Rabin Vincent <rabin.vincent@axis.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0edeff6752d09d09df3535d34ba6c86c43d3d369
Author: David S. Miller <davem@davemloft.net>
Date:   Thu Oct 2 14:52:37 2014 +0800

    crypto: sha - Handle unaligned input data in generic sha256 and sha512.
    
    commit be34c4ef693ff5c10f55606dbd656ddf0b4a8340 upstream.
    
    Like SHA1, use get_unaligned_be*() on the raw input data.
    
    Reported-by: Bob Picco <bob.picco@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 3301500b05e0b060ccc1eb870355530ec7da6778
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Dec 12 16:58:22 2014 -0800

    shmdt: use i_size_read() instead of ->i_size
    
    commit 07a46ed27dc6344de831a450df82336270a157a9 upstream.
    
    Andrew Morton noted
    
            http://lkml.kernel.org/r/20141104142027.a7a0d010772d84560b445f59@linux-foundation.org
    
    that the shmdt uses inode->i_size outside of i_mutex being held.
    There is one more case in shm.c in shm_destroy().  This converts
    both users over to use i_size_read().
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a540d0b8efe895a738793c1f08b6eec12df0bf7c
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Dec 12 16:58:19 2014 -0800

    ipc/shm.c: fix overly aggressive shmdt() when calls span multiple segments
    
    commit d3c97900b427b8d5a476fdfe484267f09df418d6 upstream.
    
    This is a highly-contrived scenario.  But, a single shmdt() call can be
    induced in to unmapping memory from mulitple shm segments.  Example code
    is here:
    
            http://www.sr71.net/~dave/intel/shmfun.c
    
    The fix is pretty simple: Record the 'struct file' for the first VMA we
    encounter and then stick to it.  Decline to unmap anything not from the
    same file and thus the same segment.
    
    I found this by inspection and the odds of anyone hitting this in practice
    are pretty darn small.
    
    Lightly tested, but it's a pretty small patch.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Reviewed-by: Davidlohr Bueso <dave@stgolabs.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit dd06a9623b7e811b362f248bfc1d3886b0e8add1
Author: Manfred Spraul <manfred@colorfullife.com>
Date:   Tue Dec 2 15:59:34 2014 -0800

    ipc/sem.c: fully initialize sem_array before making it visible
    
    commit e8577d1f0329d4842e8302e289fb2c22156abef4 upstream.
    
    ipc_addid() makes a new ipc identifier visible to everyone.  New objects
    start as locked, so that the caller can complete the initialization
    after the call.  Within struct sem_array, at least sma->sem_base and
    sma->sem_nsems are accessed without any locks, therefore this approach
    doesn't work.
    
    Thus: Move the ipc_addid() to the end of the initialization.
    
    Signed-off-by: Manfred Spraul <manfred@colorfullife.com>
    Reported-by: Rik van Riel <riel@redhat.com>
    Acked-by: Rik van Riel <riel@redhat.com>
    Acked-by: Davidlohr Bueso <dave@stgolabs.net>
    Acked-by: Rafael Aquini <aquini@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit da95a0de5c59732c942e9753ecc9c03c3783d33d
Author: David Jeffery <djeffery@redhat.com>
Date:   Thu Feb 12 16:45:31 2015 +0000

    Don't leak a key reference if request_key() tries to use a revoked keyring
    
    commit d0709f1e66e8066c4ac6a54620ec116aa41937c0 upstream.
    
    If a request_key() call to allocate and fill out a key attempts to insert the
    key structure into a revoked keyring, the key will leak, using memory and part
    of the user's key quota until the system reboots. This is from a failure of
    construct_alloc_key() to decrement the key's reference count after the attempt
    to insert into the requested keyring is rejected.
    
    key_put() needs to be called in the link_prealloc_failed callpath to ensure
    the unused key is released.
    
    Signed-off-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c4b022d10d4a79badf377d6229258dc390598325
Author: Michael Wang <wangyun@linux.vnet.ibm.com>
Date:   Tue Apr 8 11:19:36 2014 +0800

    power, sched: stop updating inside arch_update_cpu_topology() when nothing to be update
    
    commit 9a0133613e4412b2caaaf0d9dd81f213bcededf1 upstream.
    
    Since v1:
            Edited the comment according to Srivatsa's suggestion.
    
    During the testing, we encounter below WARN followed by Oops:
    
            WARNING: at kernel/sched/core.c:6218
            ...
            NIP [c000000000101660] .build_sched_domains+0x11d0/0x1200
            LR [c000000000101358] .build_sched_domains+0xec8/0x1200
            PACATMSCRATCH [800000000000f032]
            Call Trace:
            [c00000001b103850] [c000000000101358] .build_sched_domains+0xec8/0x1200
            [c00000001b1039a0] [c00000000010aad4] .partition_sched_domains+0x484/0x510
            [c00000001b103aa0] [c00000000016d0a8] .rebuild_sched_domains+0x68/0xa0
            [c00000001b103b30] [c00000000005cbf0] .topology_work_fn+0x10/0x30
            ...
            Oops: Kernel access of bad area, sig: 11 [#1]
            ...
            NIP [c00000000045c000] .__bitmap_weight+0x60/0xf0
            LR [c00000000010132c] .build_sched_domains+0xe9c/0x1200
            PACATMSCRATCH [8000000000029032]
            Call Trace:
            [c00000001b1037a0] [c000000000288ff4] .kmem_cache_alloc_node_trace+0x184/0x3a0
            [c00000001b103850] [c00000000010132c] .build_sched_domains+0xe9c/0x1200
            [c00000001b1039a0] [c00000000010aad4] .partition_sched_domains+0x484/0x510
            [c00000001b103aa0] [c00000000016d0a8] .rebuild_sched_domains+0x68/0xa0
            [c00000001b103b30] [c00000000005cbf0] .topology_work_fn+0x10/0x30
            ...
    
    This was caused by that 'sd->groups == NULL' after building groups, which
    was caused by the empty 'sd->span'.
    
    The cpu's domain contained nothing because the cpu was assigned to a wrong
    node, due to the following unfortunate sequence of events:
    
    1. The hypervisor sent a topology update to the guest OS, to notify changes
       to the cpu-node mapping. However, the update was actually redundant - i.e.,
       the "new" mapping was exactly the same as the old one.
    
    2. Due to this, the 'updated_cpus' mask turned out to be empty after exiting
       the 'for-loop' in arch_update_cpu_topology().
    
    3. So we ended up calling stop-machine() with an empty cpumask list, which made
       stop-machine internally elect cpumask_first(cpu_online_mask), i.e., CPU0 as
       the cpu to run the payload (the update_cpu_topology() function).
    
    4. This causes update_cpu_topology() to be run by CPU0. And since 'updates'
       is kzalloc()'ed inside arch_update_cpu_topology(), update_cpu_topology()
       finds update->cpu as well as update->new_nid to be 0. In other words, we
       end up assigning CPU0 (and eventually its siblings) to node 0, incorrectly.
    
    Along with the following wrong updating, it causes the sched-domain rebuild
    code to break and crash the system.
    
    Fix this by skipping the topology update in cases where we find that
    the topology has not actually changed in reality (ie., spurious updates).
    
    CC: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    CC: Paul Mackerras <paulus@samba.org>
    CC: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    CC: Stephen Rothwell <sfr@canb.auug.org.au>
    CC: Andrew Morton <akpm@linux-foundation.org>
    CC: Robert Jennings <rcj@linux.vnet.ibm.com>
    CC: Jesse Larrew <jlarrew@linux.vnet.ibm.com>
    CC: "Srivatsa S. Bhat" <srivatsa.bhat@linux.vnet.ibm.com>
    CC: Alistair Popple <alistair@popple.id.au>
    Suggested-by: "Srivatsa S. Bhat" <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Michael Wang <wangyun@linux.vnet.ibm.com>
    Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e007687cc30fce23db509de2392794526d3c51b0
Author: Lee Duncan <lduncan@suse.com>
Date:   Mon Jan 5 10:49:44 2015 -0800

    target: Allow Write Exclusive non-reservation holders to READ
    
    commit 1ecc7586922662e3ca2f3f0c3f17fec8749fc621 upstream.
    
    For PGR reservation of type Write Exclusive Access, allow all non
    reservation holding I_T nexuses with active registrations to READ
    from the device.
    
    This addresses a bug where active registrations that attempted
    to READ would result in an reservation conflict.
    
    Signed-off-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 84d0034c5f825a7ce219a64e52976a45eb490e4d
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Dec 19 00:49:23 2014 +0000

    target: Allow AllRegistrants to re-RESERVE existing reservation
    
    commit ae450e246e8540300699480a3780a420a028b73f upstream.
    
    This patch changes core_scsi3_pro_release() logic to allow an
    existing AllRegistrants type reservation to be re-reserved by
    any registered I_T nexus.
    
    This addresses a issue where AllRegistrants type RESERVE was
    receiving RESERVATION_CONFLICT status if dev_pr_res_holder did
    not match the same I_T nexus, instead of just returning GOOD
    status following spc4r34 Section 5.9.9:
    
    "If the device server receives a PERSISTENT RESERVE OUT command
     with RESERVE service action where the TYPE field and the SCOPE
     field contain the same values as the existing type and scope
     from a persistent reservation holder, it shall not make any
     change to the existing persistent reservation and shall complete
     the command with GOOD status."
    
    Reported-by: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: Lee Duncan <lduncan@suse.com>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 24987ee3a7ed7d8c853b8c2f10d2c37253558c13
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Dec 15 11:50:26 2014 -0800

    target: Avoid dropping AllRegistrants reservation during unregister
    
    commit 6c3c9baa0debeb4bcc52a78c4463a0a97518de10 upstream.
    
    This patch fixes an issue with AllRegistrants reservations where
    an unregister operation by the I_T nexus reservation holder would
    incorrectly drop the reservation, instead of waiting until the
    last active I_T nexus is unregistered as per SPC-4.
    
    This includes updating __core_scsi3_complete_pro_release() to reset
    dev->dev_pr_res_holder with another pr_reg for this special case,
    as well as a new 'unreg' parameter to determine when the release
    is occuring from an implicit unregister, vs. explicit RELEASE.
    
    It also adds special handling in core_scsi3_free_pr_reg_from_nacl()
    to release the left-over pr_res_holder, now that pr_reg is deleted
    from pr_reg_list within __core_scsi3_complete_pro_release().
    
    Reported-by: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit fcc609e5de6667b5239a62f5b6dac055281c90e6
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Sun Dec 14 01:47:19 2014 -0800

    target: Fix R_HOLDER bit usage for AllRegistrants
    
    commit d16ca7c5198fd668db10d2c7b048ed3359c12c54 upstream.
    
    This patch fixes the usage of R_HOLDER bit for an All Registrants
    reservation in READ_FULL_STATUS, where only the registration who
    issued RESERVE was being reported as having an active reservation.
    
    It changes core_scsi3_pri_read_full_status() to check ahead of the
    list walk of active registrations to see if All Registrants is active,
    and if so set R_HOLDER bit and scope/type fields for all active
    registrations.
    
    Reported-by: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit d8e7312770e7f9b540a362bc029d5d77fbe40520
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Feb 27 03:54:13 2015 -0800

    target/pscsi: Fix NULL pointer dereference in get_device_type
    
    commit 215a8fe4198f607f34ecdbc9969dae783d8b5a61 upstream.
    
    This patch fixes a NULL pointer dereference OOPs with pSCSI backends
    within target_core_stat.c code.  The bug is caused by a configfs attr
    read if no pscsi_dev_virt->pdv_sd has been configured.
    
    Reported-by: Olaf Hering <olaf@aepfle.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2ddc09fbd0e4fc6dec0b24c7e1978043a67933e1
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Feb 23 00:57:51 2015 -0800

    iscsi-target: Avoid early conn_logout_comp for iser connections
    
    commit f068fbc82e7696d67b1bb8189306865bedf368b6 upstream.
    
    This patch fixes a iser specific logout bug where early complete()
    of conn->conn_logout_comp in iscsit_close_connection() was causing
    isert_wait4logout() to complete too soon, triggering a use after
    free NULL pointer dereference of iscsi_conn memory.
    
    The complete() was originally added for traditional iscsi-target
    when a ISCSI_LOGOUT_OP failed in iscsi_target_rx_opcode(), but given
    iser-target does not wait in logout failure, this special case needs
    to be avoided.
    
    Reported-by: Sagi Grimberg <sagig@mellanox.com>
    Cc: Sagi Grimberg <sagig@mellanox.com>
    Cc: Slava Shwartsman <valyushash@gmail.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 033acbf6a597707356691d0621c1496bc5a610b1
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Thu Mar 5 03:28:24 2015 +0000

    target: Fix virtual LUN=0 target_configure_device failure OOPs
    
    commit 5f7da044f8bc1cfb21c962edf34bd5699a76e7ae upstream.
    
    This patch fixes a NULL pointer dereference triggered by a late
    target_configure_device() -> alloc_workqueue() failure that results
    in target_free_device() being called with DF_CONFIGURED already set,
    which subsequently OOPses in destroy_workqueue() code.
    
    Currently this only happens at modprobe target_core_mod time when
    core_dev_setup_virtual_lun0() -> target_configure_device() fails,
    and the explicit target_free_device() gets called.
    
    To address this bug originally introduced by commit 0fd97ccf45, go
    ahead and move DF_CONFIGURED to end of target_configure_device()
    code to handle this special failure case.
    
    Reported-by: Claudio Fleiner <cmf@daterainc.com>
    Cc: Claudio Fleiner <cmf@daterainc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 64e6cd75c18e03a26efad817ec3ee8c0405c9660
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Feb 18 15:33:58 2015 +0100

    target: Fix reference leak in target_get_sess_cmd() error path
    
    commit 7544e597343e2166daba3f32e4708533aa53c233 upstream.
    
    This patch fixes a se_cmd->cmd_kref leak buf when se_sess->sess_tearing_down
    is true within target_get_sess_cmd() submission path code.
    
    This se_cmd reference leak can occur during active session shutdown when
    ack_kref=1 is passed by target_submit_cmd_[map_sgls,tmr]() callers.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit fa95ae25fb3479e5b697ac218be28af2e1309dcc
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Mar 3 19:58:22 2015 +0100

    ARM: at91: pm: fix at91rm9200 standby
    
    commit 84e871660bebfddb9a62ebd6f19d02536e782f0a upstream.
    
    at91rm9200 standby and suspend to ram has been broken since
    00482a4078f4. It is wrongly using AT91_BASE_SYS which is a physical address
    and actually doesn't correspond to any register on at91rm9200.
    
    Use the correct at91_ramc_base[0] instead.
    
    Fixes: 00482a4078f4 (ARM: at91: implement the standby function for pm/cpuidle)
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit eda3a683ed0b4f77e5453a8ba85127e72f6bec58
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Thu Mar 5 09:13:31 2015 +0100

    x86/vdso: Fix the build on GCC5
    
    commit e893286918d2cde3a94850d8f7101cd1039e0c62 upstream.
    
    On gcc5 the kernel does not link:
    
      ld: .eh_frame_hdr table[4] FDE at 0000000000000648 overlaps table[5] FDE at 0000000000000670.
    
    Because prior GCC versions always emitted NOPs on ALIGN directives, but
    gcc5 started omitting them.
    
    .LSTARTFDEDLSI1 says:
    
            /* HACK: The dwarf2 unwind routines will subtract 1 from the
               return address to get an address in the middle of the
               presumed call instruction.  Since we didn't get here via
               a call, we need to include the nop before the real start
               to make up for it.  */
            .long .LSTART_sigreturn-1-.     /* PC-relative start address */
    
    But commit 69d0627a7f6e ("x86 vDSO: reorder vdso32 code") from 2.6.25
    replaced .org __kernel_vsyscall+32,0x90 by ALIGN right before
    __kernel_sigreturn.
    
    Of course, ALIGN need not generate any NOP in there. Esp. gcc5 collapses
    vclock_gettime.o and int80.o together with no generated NOPs as "ALIGN".
    
    So fix this by adding to that point at least a single NOP and make the
    function ALIGN possibly with more NOPs then.
    
    Kudos for reporting and diagnosing should go to Richard.
    
    Reported-by: Richard Biener <rguenther@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Acked-by: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1425543211-12542-1-git-send-email-jslaby@suse.cz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 63a22cd2c5f972b35414272b76ea7953cb0d7b6a
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 13 09:53:10 2015 +0100

    x86/fpu: Drop_fpu() should not assume that tsk equals current
    
    commit f4c3686386393c120710dd34df2a74183ab805fd upstream.
    
    drop_fpu() does clear_used_math() and usually this is correct
    because tsk == current.
    
    However switch_fpu_finish()->restore_fpu_checking() is called before
    __switch_to() updates the "current_task" variable. If it fails,
    we will wrongly clear the PF_USED_MATH flag of the previous task.
    
    So use clear_stopped_child_used_math() instead.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Rik van Riel <riel@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pekka Riikonen <priikone@iki.fi>
    Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Suresh Siddha <sbsiddha@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150309171041.GB11388@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c382613c11d016d703240b51a480ec45969e06d2
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 13 09:53:09 2015 +0100

    x86/fpu: Avoid math_state_restore() without used_math() in __restore_xstate_sig()
    
    commit a7c80ebcac3068b1c3cb27d538d29558c30010c8 upstream.
    
    math_state_restore() assumes it is called with irqs disabled,
    but this is not true if the caller is __restore_xstate_sig().
    
    This means that if ia32_fxstate == T and __copy_from_user()
    fails, __restore_xstate_sig() returns with irqs disabled too.
    
    This triggers:
    
      BUG: sleeping function called from invalid context at kernel/locking/rwsem.c:41
       dump_stack
       ___might_sleep
       ? _raw_spin_unlock_irqrestore
       __might_sleep
       down_read
       ? _raw_spin_unlock_irqrestore
       print_vma_addr
       signal_fault
       sys32_rt_sigreturn
    
    Change __restore_xstate_sig() to call set_used_math()
    unconditionally. This avoids enabling and disabling interrupts
    in math_state_restore(). If copy_from_user() fails, we can
    simply do fpu_finit() by hand.
    
    [ Note: this is only the first step. math_state_restore() should
            not check used_math(), it should set this flag. While
            init_fpu() should simply die. ]
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pekka Riikonen <priikone@iki.fi>
    Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Suresh Siddha <sbsiddha@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150307153844.GB25954@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0585664d17325265ea7cc51aa4f1ff492972b611
Author: Stephan Mueller <smueller@chronox.de>
Date:   Thu Mar 12 09:17:51 2015 +0100

    crypto: aesni - fix memory usage in GCM decryption
    
    commit ccfe8c3f7e52ae83155cb038753f4c75b774ca8a upstream.
    
    The kernel crypto API logic requires the caller to provide the
    length of (ciphertext || authentication tag) as cryptlen for the
    AEAD decryption operation. Thus, the cipher implementation must
    calculate the size of the plaintext output itself and cannot simply use
    cryptlen.
    
    The RFC4106 GCM decryption operation tries to overwrite cryptlen memory
    in req->dst. As the destination buffer for decryption only needs to hold
    the plaintext memory but cryptlen references the input buffer holding
    (ciphertext || authentication tag), the assumption of the destination
    buffer length in RFC4106 GCM operation leads to a too large size. This
    patch simply uses the already calculated plaintext size.
    
    In addition, this patch fixes the offset calculation of the AAD buffer
    pointer: as mentioned before, cryptlen already includes the size of the
    tag. Thus, the tag does not need to be added. With the addition, the AAD
    will be written beyond the already allocated buffer.
    
    Note, this fixes a kernel crash that can be triggered from user space
    via AF_ALG(aead) -- simply use the libkcapi test application
    from [1] and update it to use rfc4106-gcm-aes.
    
    Using [1], the changes were tested using CAVS vectors to demonstrate
    that the crypto operation still delivers the right results.
    
    [1] http://www.chronox.de/libkcapi.html
    
    CC: Tadeusz Struk <tadeusz.struk@intel.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 91e9d77039485b57ddf632638acc0a968a39b856
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Mar 9 23:11:12 2015 +0200

    pagemap: do not leak physical addresses to non-privileged userspace
    
    commit ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce upstream.
    
    As pointed by recent post[1] on exploiting DRAM physical imperfection,
    /proc/PID/pagemap exposes sensitive information which can be used to do
    attacks.
    
    This disallows anybody without CAP_SYS_ADMIN to read the pagemap.
    
    [1] http://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html
    
    [ Eventually we might want to do anything more finegrained, but for now
      this is the simple model.   - Linus ]
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Konstantin Khlebnikov <khlebnikov@openvz.org>
    Acked-by: Andy Lutomirski <luto@amacapital.net>
    Cc: Pavel Emelyanov <xemul@parallels.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Seaborn <mseaborn@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 741011623e3631e4e94f7baea83998204f9884dd
Author: James Bottomley <JBottomley@Parallels.com>
Date:   Wed Mar 4 16:18:33 2015 -0800

    libsas: Fix Kernel Crash in smp_execute_task
    
    commit 6302ce4d80aa82b3fdb5c5cd68e7268037091b47 upstream.
    
    This crash was reported:
    
    [  366.947370] sd 3:0:1:0: [sdb] Spinning up disk....
    [  368.804046] BUG: unable to handle kernel NULL pointer dereference at           (null)
    [  368.804072] IP: [<ffffffff81358457>] __mutex_lock_common.isra.7+0x9c/0x15b
    [  368.804098] PGD 0
    [  368.804114] Oops: 0002 [#1] SMP
    [  368.804143] CPU 1
    [  368.804151] Modules linked in: sg netconsole s3g(PO) uinput joydev hid_multitouch usbhid hid snd_hda_codec_via cpufreq_userspace cpufreq_powersave cpufreq_stats uhci_hcd cpufreq_conservative snd_hda_intel snd_hda_codec snd_hwdep snd_pcm sdhci_pci snd_page_alloc sdhci snd_timer snd psmouse evdev serio_raw pcspkr soundcore xhci_hcd shpchp s3g_drm(O) mvsas mmc_core ahci libahci drm i2c_core acpi_cpufreq mperf video processor button thermal_sys dm_dmirror exfat_fs exfat_core dm_zcache dm_mod padlock_aes aes_generic padlock_sha iscsi_target_mod target_core_mod configfs sswipe libsas libata scsi_transport_sas picdev via_cputemp hwmon_vid fuse parport_pc ppdev lp parport autofs4 ext4 crc16 mbcache jbd2 sd_mod crc_t10dif usb_storage scsi_mod ehci_hcd usbcore usb_common
    [  368.804749]
    [  368.804764] Pid: 392, comm: kworker/u:3 Tainted: P        W  O 3.4.87-logicube-ng.22 #1 To be filled by O.E.M. To be filled by O.E.M./EPIA-M920
    [  368.804802] RIP: 0010:[<ffffffff81358457>]  [<ffffffff81358457>] __mutex_lock_common.isra.7+0x9c/0x15b
    [  368.804827] RSP: 0018:ffff880117001cc0  EFLAGS: 00010246
    [  368.804842] RAX: 0000000000000000 RBX: ffff8801185030d0 RCX: ffff88008edcb420
    [  368.804857] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff8801185030d4
    [  368.804873] RBP: ffff8801181531c0 R08: 0000000000000020 R09: 00000000fffffffe
    [  368.804885] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8801185030d4
    [  368.804899] R13: 0000000000000002 R14: ffff880117001fd8 R15: ffff8801185030d8
    [  368.804916] FS:  0000000000000000(0000) GS:ffff88011fc80000(0000) knlGS:0000000000000000
    [  368.804931] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [  368.804946] CR2: 0000000000000000 CR3: 000000000160b000 CR4: 00000000000006e0
    [  368.804962] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  368.804978] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    [  368.804995] Process kworker/u:3 (pid: 392, threadinfo ffff880117000000, task ffff8801181531c0)
    [  368.805009] Stack:
    [  368.805017]  ffff8801185030d8 0000000000000000 ffffffff8161ddf0 ffffffff81056f7c
    [  368.805062]  000000000000b503 ffff8801185030d0 ffff880118503000 0000000000000000
    [  368.805100]  ffff8801185030d0 ffff8801188b8000 ffff88008edcb420 ffffffff813583ac
    [  368.805135] Call Trace:
    [  368.805153]  [<ffffffff81056f7c>] ? up+0xb/0x33
    [  368.805168]  [<ffffffff813583ac>] ? mutex_lock+0x16/0x25
    [  368.805194]  [<ffffffffa018c414>] ? smp_execute_task+0x4e/0x222 [libsas]
    [  368.805217]  [<ffffffffa018ce1c>] ? sas_find_bcast_dev+0x3c/0x15d [libsas]
    [  368.805240]  [<ffffffffa018ce4f>] ? sas_find_bcast_dev+0x6f/0x15d [libsas]
    [  368.805264]  [<ffffffffa018e989>] ? sas_ex_revalidate_domain+0x37/0x2ec [libsas]
    [  368.805280]  [<ffffffff81355a2a>] ? printk+0x43/0x48
    [  368.805296]  [<ffffffff81359a65>] ? _raw_spin_unlock_irqrestore+0xc/0xd
    [  368.805318]  [<ffffffffa018b767>] ? sas_revalidate_domain+0x85/0xb6 [libsas]
    [  368.805336]  [<ffffffff8104e5d9>] ? process_one_work+0x151/0x27c
    [  368.805351]  [<ffffffff8104f6cd>] ? worker_thread+0xbb/0x152
    [  368.805366]  [<ffffffff8104f612>] ? manage_workers.isra.29+0x163/0x163
    [  368.805382]  [<ffffffff81052c4e>] ? kthread+0x79/0x81
    [  368.805399]  [<ffffffff8135fea4>] ? kernel_thread_helper+0x4/0x10
    [  368.805416]  [<ffffffff81052bd5>] ? kthread_flush_work_fn+0x9/0x9
    [  368.805431]  [<ffffffff8135fea0>] ? gs_change+0x13/0x13
    [  368.805442] Code: 83 7d 30 63 7e 04 f3 90 eb ab 4c 8d 63 04 4c 8d 7b 08 4c 89 e7 e8 fa 15 00 00 48 8b 43 10 4c 89 3c 24 48 89 63 10 48 89 44 24 08 <48> 89 20 83 c8 ff 48 89 6c 24 10 87 03 ff c8 74 35 4d 89 ee 41
    [  368.805851] RIP  [<ffffffff81358457>] __mutex_lock_common.isra.7+0x9c/0x15b
    [  368.805877]  RSP <ffff880117001cc0>
    [  368.805886] CR2: 0000000000000000
    [  368.805899] ---[ end trace b720682065d8f4cc ]---
    
    It's directly caused by 89d3cf6 [SCSI] libsas: add mutex for SMP task
    execution, but shows a deeper cause: expander functions expect to be able to
    cast to and treat domain devices as expanders.  The correct fix is to only do
    expander discover when we know we've got an expander device to avoid wrongly
    casting a non-expander device.
    
    Reported-by: Praveen Murali <pmurali@logicube.com>
    Tested-by: Praveen Murali <pmurali@logicube.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f82a9cff66e3158a3f86706ff55feba2b22ec8cb
Author: Jan Beulich <JBeulich@suse.com>
Date:   Wed Mar 11 13:51:17 2015 +0000

    xen-pciback: limit guest control of command register
    
    commit af6fc858a35b90e89ea7a7ee58e66628c55c776b upstream.
    
    Otherwise the guest can abuse that control to cause e.g. PCIe
    Unsupported Request responses by disabling memory and/or I/O decoding
    and subsequently causing (CPU side) accesses to the respective address
    ranges, which (depending on system configuration) may be fatal to the
    host.
    
    Note that to alter any of the bits collected together as
    PCI_COMMAND_GUEST permissive mode is now required to be enabled
    globally or on the specific device.
    
    This is CVE-2015-2150 / XSA-120.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit bb025b7b02ffd75ce0ba0d81cf8a8e27d591c97f
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Thu Mar 5 02:33:24 2015 -0800

    drm/vmwgfx: Reorder device takedown somewhat
    
    commit 3458390b9f0ba784481d23134798faee27b5f16f upstream.
    
    To take down the MOB and GMR memory types, the driver may have to issue
    fence objects and thus make sure that the fence manager is taken down
    after those memory types.
    Reorder device init accordingly.
    
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 6fcad4d1d8eb62f1d0767e5404ddfc86f0a070b2
Author: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
Date:   Thu Mar 12 16:26:00 2015 -0700

    nilfs2: fix deadlock of segment constructor during recovery
    
    commit 283ee1482f349d6c0c09dfb725db5880afc56813 upstream.
    
    According to a report from Yuxuan Shui, nilfs2 in kernel 3.19 got stuck
    during recovery at mount time.  The code path that caused the deadlock was
    as follows:
    
      nilfs_fill_super()
        load_nilfs()
          nilfs_salvage_orphan_logs()
            * Do roll-forwarding, attach segment constructor for recovery,
              and kick it.
    
            nilfs_segctor_thread()
              nilfs_segctor_thread_construct()
               * A lock is held with nilfs_transaction_lock()
                 nilfs_segctor_do_construct()
                   nilfs_segctor_drop_written_files()
                     iput()
                       iput_final()
                         write_inode_now()
                           writeback_single_inode()
                             __writeback_single_inode()
                               do_writepages()
                                 nilfs_writepage()
                                   nilfs_construct_dsync_segment()
                                     nilfs_transaction_lock() --> deadlock
    
    This can happen if commit 7ef3ff2fea8b ("nilfs2: fix deadlock of segment
    constructor over I_SYNC flag") is applied and roll-forward recovery was
    performed at mount time.  The roll-forward recovery can happen if datasync
    write is done and the file system crashes immediately after that.  For
    instance, we can reproduce the issue with the following steps:
    
     < nilfs2 is mounted on /nilfs (device: /dev/sdb1) >
     # dd if=/dev/zero of=/nilfs/test bs=4k count=1 && sync
     # dd if=/dev/zero of=/nilfs/test conv=notrunc oflag=dsync bs=4k
     count=1 && reboot -nfh
     < the system will immediately reboot >
     # mount -t nilfs2 /dev/sdb1 /nilfs
    
    The deadlock occurs because iput() can run segment constructor through
    writeback_single_inode() if MS_ACTIVE flag is not set on sb->s_flags.  The
    above commit changed segment constructor so that it calls iput()
    asynchronously for inodes with i_nlink == 0, but that change was
    imperfect.
    
    This fixes the another deadlock by deferring iput() in segment constructor
    even for the case that mount is not finished, that is, for the case that
    MS_ACTIVE flag is not set.
    
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Reported-by: Yuxuan Shui <yshuiv7@gmail.com>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 3f37b3761339e2edf47761d634488ffea0530598
Author: Doug Anderson <dianders@chromium.org>
Date:   Tue Mar 3 15:20:47 2015 -0800

    regulator: core: Fix enable GPIO reference counting
    
    commit 29d62ec5f87fbeec8413e2215ddad12e7f972e4c upstream.
    
    Normally _regulator_do_enable() isn't called on an already-enabled
    rdev.  That's because the main caller, _regulator_enable() always
    calls _regulator_is_enabled() and only calls _regulator_do_enable() if
    the rdev was not already enabled.
    
    However, there is one caller of _regulator_do_enable() that doesn't
    check: regulator_suspend_finish().  While we might want to make
    regulator_suspend_finish() behave more like _regulator_enable(), it's
    probably also a good idea to make _regulator_do_enable() robust if it
    is called on an already enabled rdev.
    
    At the moment, _regulator_do_enable() is _not_ robust for already
    enabled rdevs if we're using an ena_pin.  Each time
    _regulator_do_enable() is called for an rdev using an ena_pin the
    reference count of the ena_pin is incremented even if the rdev was
    already enabled.  This is not as intended because the ena_pin is for
    something else: for keeping track of how many active rdevs there are
    sharing the same ena_pin.
    
    Here's how the reference counting works here:
    
    * Each time _regulator_enable() is called we increment
      rdev->use_count, so _regulator_enable() calls need to be balanced
      with _regulator_disable() calls.
    
    * There is no explicit reference counting in _regulator_do_enable()
      which is normally just a warapper around rdev->desc->ops->enable()
      with code for supporting delays.  It's not expected that the
      "ops->enable()" call do reference counting.
    
    * Since regulator_ena_gpio_ctrl() does have reference counting
      (handling the sharing of the pin amongst multiple rdevs), we
      shouldn't call it if the current rdev is already enabled.
    
    Note that as part of this we cleanup (remove) the initting of
    ena_gpio_state in regulator_register().  In _regulator_do_enable(),
    _regulator_do_disable() and _regulator_is_enabled() is is clear that
    ena_gpio_state should be the state of whether this particular rdev has
    requested the GPIO be enabled.  regulator_register() was initting it
    as the actual state of the pin.
    
    Fixes: 967cfb18c0e3 ("regulator: core: manage enable GPIO list")
    Signed-off-by: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit d441a06e74c597287aace56b33cae67d24d5daa8
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Mon Mar 2 21:40:39 2015 +0100

    regulator: Only enable disabled regulators on resume
    
    commit 0548bf4f5ad6fc3bd93c4940fa48078b34609682 upstream.
    
    The _regulator_do_enable() call ought to be a no-op when called on an
    already-enabled regulator.  However, as an optimization
    _regulator_enable() doesn't call _regulator_do_enable() on an already
    enabled regulator.  That means we never test the case of calling
    _regulator_do_enable() during normal usage and there may be hidden
    bugs or warnings.  We have seen warnings issued by the tps65090 driver
    and bugs when using the GPIO enable pin.
    
    Let's match the same optimization that _regulator_enable() in
    regulator_suspend_finish().  That may speed up suspend/resume and also
    avoids exposing hidden bugs.
    
    [Use much clearer commit message from Doug Anderson]
    
    Signed-off-by: Javier Martinez Canillas <javier.martinez@collabora.co.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 629e1fd84e4952c814dc69804addbbe5efab4502
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Wed Mar 4 08:09:44 2015 -0600

    bnx2x: Force fundamental reset for EEH recovery
    
    commit da293700568ed3d96fcf062ac15d7d7c41377f11 upstream.
    
    EEH recovery for bnx2x based adapters is not reliable on all Power
    systems using the default hot reset, which can result in an
    unrecoverable EEH error. Forcing the use of fundamental reset
    during EEH recovery fixes this.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit fd2f4b3108fb6e51fe5299db5abdac4f1a9f733d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 16 10:18:08 2015 +0100

    ALSA: hda - Treat stereo-to-mono mix properly
    
    commit cc261738add93947d138d2fabad9f4dbed4e5c00 upstream.
    
    The commit [ef403edb7558: ALSA: hda - Don't access stereo amps for
    mono channel widgets] fixed the handling of mono widgets in general,
    but it still misses an exceptional case: namely, a mono mixer widget
    taking a single stereo input.  In this case, it has stereo volumes
    although it's a mono widget, and thus we have to take care of both
    left and right input channels, as stated in HD-audio spec ("7.1.3
    Widget Interconnection Rules").
    
    This patch covers this missing piece by adding proper checks of stereo
    amps in both the generic parser and the proc output codes.
    
    Reported-by: Raymond Yau <superquad.vortex2@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 3453d8650b53d37560115a01d3048bbb69b479c2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 12 20:47:15 2015 +0100

    ALSA: hda - Add workaround for MacBook Air 5,2 built-in mic
    
    commit 2ddee91abe9cc34ddb6294ee14702b46ae07d460 upstream.
    
    MacBook Air 5,2 has the same problem as MacBook Pro 8,1 where the
    built-in mic records only the right channel.  Apply the same
    workaround as MBP8,1 to spread the mono channel via a Cirrus codec
    vendor-specific COEF setup.
    
    Reported-and-tested-by: Vasil Zlatanov <vasil.zlatanov@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 5917ae96d8a580dc1c94578e9d88af60ab0c56ed
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 12 20:28:04 2015 +0100

    ALSA: hda - Set single_adc_amp flag for CS420x codecs
    
    commit bad994f5b4ab57eec8d56c180edca00505c3eeb2 upstream.
    
    CS420x codecs seem to deal only the single amps of ADC nodes even
    though the nodes receive multiple inputs.  This leads to the
    inconsistent amp value after S3/S4 resume, for example.
    
    The fix is just to set codec->single_adc_amp flag.  Then the driver
    handles these ADC amps as if single connections.
    
    Reported-and-tested-by: Vasil Zlatanov <vasil.zlatanov@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit cf0a9563e60a79def198736926eced80aa7725d4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 12 08:30:11 2015 +0100

    ALSA: hda - Don't access stereo amps for mono channel widgets
    
    commit ef403edb75580a3ec5d155f5de82155f0419c621 upstream.
    
    The current HDA generic parser initializes / modifies the amp values
    always in stereo, but this seems causing the problem on ALC3229 codec
    that has a few mono channel widgets: namely, these mono widgets react
    to actions for both channels equally.
    
    In the driver code, we do care the mono channel and create a control
    only for the left channel (as defined in HD-audio spec) for such a
    node.  When the control is updated, only the left channel value is
    changed.  However, in the resume, the right channel value is also
    restored from the initial value we took as stereo, and this overwrites
    the left channel value.  This ends up being the silent output as the
    right channel has been never touched and remains muted.
    
    This patch covers the places where unconditional stereo amp accesses
    are done and converts to the conditional accesses.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=94581
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c3e889457e155a5007726dc3d70b96e12f7e64cf
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 11 16:05:19 2015 +0100

    ALSA: hda - Fix built-in mic on Compaq Presario CQ60
    
    commit ddb6ca75b5671b8fbf1909bc588c449ee74b34f9 upstream.
    
    Compaq Presario CQ60 laptop with CX20561 gives a wrong pin for the
    built-in mic NID 0x17 instead of NID 0x1d, and it results in the
    non-working mic.  This patch just remaps the pin correctly via fixup.
    
    Bugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=920604
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f6b485a40d29c6800e7d3d720acac5201a4a9bc5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 11 18:12:49 2015 +0100

    ALSA: control: Add sanity checks for user ctl id name string
    
    commit be3bb8236db2d0fcd705062ae2e2a9d75131222f upstream.
    
    There was no check about the id string of user control elements, so we
    accepted even a control element with an empty string, which is
    obviously bogus.  This patch adds more sanity checks of id strings.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 562960330f8e7dc5ab64ab7d38270ae2c34a067a
Author: Daniel Mack <daniel@zonque.org>
Date:   Thu Mar 12 09:41:32 2015 +0100

    ALSA: snd-usb: add quirks for Roland UA-22
    
    commit fcdcd1dec6d2c7b718385ec743ae5a9a233edad4 upstream.
    
    The device complies to the UAC1 standard but hides that fact with
    proprietary descriptors. The autodetect quirk for Roland devices
    catches the audio interface but misses the MIDI part, so a specific
    quirk is needed.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Reported-by: Rafa Lafuente <rafalafuente@gmail.com>
    Tested-by: Raphaël Doursenaud <raphael@doursenaud.fr>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a0485132cd3ef7a12261f26bc6c357abe5aef9e0
Author: Alexander Sverdlin <alexander.sverdlin@nokia.com>
Date:   Fri Feb 27 16:30:21 2015 +0100

    spi: pl022: Fix race in giveback() leading to driver lock-up
    
    commit cd6fa8d2ca53cac3226fdcffcf763be390abae32 upstream.
    
    Commit fd316941c ("spi/pl022: disable port when unused") introduced a race,
    which leads to possible driver lock up (easily reproducible on SMP).
    
    The problem happens in giveback() function where the completion of the transfer
    is signalled to SPI subsystem and then the HW SPI controller is disabled. Another
    transfer might be setup in between, which brings driver in locked-up state.
    
    Exact event sequence on SMP:
    
    core0                                   core1
    
                                            => pump_transfers()
                                            /* message->state == STATE_DONE */
                                              => giveback()
                                                => spi_finalize_current_message()
    
    => pl022_unprepare_transfer_hardware()
    => pl022_transfer_one_message
      => flush()
      => do_interrupt_dma_transfer()
        => set_up_next_transfer()
        /* Enable SSP, turn on interrupts */
        writew((readw(SSP_CR1(pl022->virtbase)) |
               SSP_CR1_MASK_SSE), SSP_CR1(pl022->virtbase));
    
    ...
    
    => pl022_interrupt_handler()
      => readwriter()
    
                                            /* disable the SPI/SSP operation */
                                            => writew((readw(SSP_CR1(pl022->virtbase)) &
                                                      (~SSP_CR1_MASK_SSE)), SSP_CR1(pl022->virtbase));
    
    Lockup! SPI controller is disabled and the data will never be received. Whole
    SPI subsystem is waiting for transfer ACK and blocked.
    
    So, only signal transfer completion after disabling the controller.
    
    Fixes: fd316941c (spi/pl022: disable port when unused)
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 78401b5530335acbebd28ba56f86d149f009c0dd
Author: jmlatten@linux.vnet.ibm.com <jmlatten@linux.vnet.ibm.com>
Date:   Fri Feb 20 18:11:24 2015 -0600

    tpm/ibmvtpm: Additional LE support for tpm_ibmvtpm_send
    
    commit 62dfd912ab3b5405b6fe72d0135c37e9648071f1 upstream.
    
    Problem: When IMA and VTPM are both enabled in kernel config,
    kernel hangs during bootup on LE OS.
    
    Why?: IMA calls tpm_pcr_read() which results in tpm_ibmvtpm_send
    and tpm_ibmtpm_recv getting called. A trace showed that
    tpm_ibmtpm_recv was hanging.
    
    Resolution: tpm_ibmtpm_recv was hanging because tpm_ibmvtpm_send
    was sending CRQ message that probably did not make much sense
    to phype because of Endianness. The fix below sends correctly
    converted CRQ for LE. This was not caught before because it
    seems IMA is not enabled by default in kernel config and
    IMA exercises this particular code path in vtpm.
    
    Tested with IMA and VTPM enabled in kernel config and VTPM
    enabled on both a BE OS and a LE OS ppc64 lpar. This exercised
    CRQ and TPM command code paths in vtpm.
    Patch is against Peter's tpmdd tree on github which included
    Vicky's previous vtpm le patches.
    
    Signed-off-by: Joy Latten <jmlatten@linux.vnet.ibm.com>
    Reviewed-by: Ashley Lai <ashley@ahsleylai.com>
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 90b682b6065978253a1c5ea75b26c44a67e1a38a
Author: Jason Low <jason.low2@hp.com>
Date:   Fri Feb 13 11:58:07 2015 +0800

    cpuset: Fix cpuset sched_relax_domain_level
    
    commit 283cb41f426b723a0255702b761b0fc5d1b53a81 upstream.
    
    The cpuset.sched_relax_domain_level can control how far we do
    immediate load balancing on a system. However, it was found on recent
    kernels that echo'ing a value into cpuset.sched_relax_domain_level
    did not reduce any immediate load balancing.
    
    The reason this occurred was because the update_domain_attr_tree() traversal
    did not update for the "top_cpuset". This resulted in nothing being changed
    when modifying the sched_relax_domain_level parameter.
    
    This patch is able to address that problem by having update_domain_attr_tree()
    allow updates for the root in the cpuset traversal.
    
    Fixes: fc560a26acce ("cpuset: replace cpuset->stack_list with cpuset_for_each_descendant_pre()")
    Signed-off-by: Jason Low <jason.low2@hp.com>
    Signed-off-by: Zefan Li <lizefan@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Tested-by: Serge Hallyn <serge.hallyn@canonical.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 97b57f41a0054767b0834ac9b34dfb22a8ee38f4
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Mar 5 08:04:13 2015 -0500

    workqueue: fix hang involving racing cancel[_delayed]_work_sync()'s for PREEMPT_NONE
    
    commit 8603e1b30027f943cc9c1eef2b291d42c3347af1 upstream.
    
    cancel[_delayed]_work_sync() are implemented using
    __cancel_work_timer() which grabs the PENDING bit using
    try_to_grab_pending() and then flushes the work item with PENDING set
    to prevent the on-going execution of the work item from requeueing
    itself.
    
    try_to_grab_pending() can always grab PENDING bit without blocking
    except when someone else is doing the above flushing during
    cancelation.  In that case, try_to_grab_pending() returns -ENOENT.  In
    this case, __cancel_work_timer() currently invokes flush_work().  The
    assumption is that the completion of the work item is what the other
    canceling task would be waiting for too and thus waiting for the same
    condition and retrying should allow forward progress without excessive
    busy looping
    
    Unfortunately, this doesn't work if preemption is disabled or the
    latter task has real time priority.  Let's say task A just got woken
    up from flush_work() by the completion of the target work item.  If,
    before task A starts executing, task B gets scheduled and invokes
    __cancel_work_timer() on the same work item, its try_to_grab_pending()
    will return -ENOENT as the work item is still being canceled by task A
    and flush_work() will also immediately return false as the work item
    is no longer executing.  This puts task B in a busy loop possibly
    preventing task A from executing and clearing the canceling state on
    the work item leading to a hang.
    
    task A                  task B                  worker
    
                                                    executing work
    __cancel_work_timer()
      try_to_grab_pending()
      set work CANCELING
      flush_work()
        block for work completion
                                                    completion, wakes up A
                            __cancel_work_timer()
                            while (forever) {
                              try_to_grab_pending()
                                -ENOENT as work is being canceled
                              flush_work()
                                false as work is no longer executing
                            }
    
    This patch removes the possible hang by updating __cancel_work_timer()
    to explicitly wait for clearing of CANCELING rather than invoking
    flush_work() after try_to_grab_pending() fails with -ENOENT.
    
    Link: http://lkml.kernel.org/g/20150206171156.GA8942@axis.com
    
    v3: bit_waitqueue() can't be used for work items defined in vmalloc
        area.  Switched to custom wake function which matches the target
        work item and exclusive wait and wakeup.
    
    v2: v1 used wake_up() on bit_waitqueue() which leads to NULL deref if
        the target bit waitqueue has wait_bit_queue's on it.  Use
        DEFINE_WAIT_BIT() and __wake_up_bit() instead.  Reported by Tomeu
        Vizoso.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Rabin Vincent <rabin.vincent@axis.com>
    Cc: Tomeu Vizoso <tomeu.vizoso@gmail.com>
    Tested-by: Jesper Nilsson <jesper.nilsson@axis.com>
    Tested-by: Rabin Vincent <rabin.vincent@axis.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c05e616077bdfb6bf9903ec45de55dedd03fce81
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Mon Feb 23 20:37:54 2015 +0100

    can: add missing initialisations in CAN related skbuffs
    
    commit 969439016d2cf61fef53a973d7e6d2061c3793b1 upstream.
    
    When accessing CAN network interfaces with AF_PACKET sockets e.g. by dhclient
    this can lead to a skb_under_panic due to missing skb initialisations.
    
    Add the missing initialisations at the CAN skbuff creation times on driver
    level (rx path) and in the network layer (tx path).
    
    Reported-by: Austin Schuh <austin@peloton-tech.com>
    Reported-by: Daniel Steer <daniel.steer@mclaren.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 6be916ce95ab1159dea6e6bc89f465ee758f4e0d
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Fri Mar 6 10:49:21 2015 +0000

    Change email address for 8250_pci
    
    commit f2e0ea861117bda073d1d7ffbd3120c07c0d5d34 upstream.
    
    I'm still receiving reports to my email address, so let's point this
    at the linux-serial mailing list instead.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 02f08b635dd5a27298f8c2187c1f02b7d066091c
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu Mar 5 10:45:49 2015 +1030

    virtio_console: avoid config access from irq
    
    commit eeb8a7e8bb123e84daeef84f5a2eab99ad2839a2 upstream.
    
    when multiport is off, virtio console invokes config access from irq
    context, config access is blocking on s390.
    Fix this up by scheduling work from config irq - similar to what we do
    for multiport configs.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Amit Shah <amit.shah@redhat.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8a4b192f16751b031360af03bb73600a6025cd2d
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu Mar 5 10:45:30 2015 +1030

    virtio_console: init work unconditionally
    
    commit 4f6e24ed9de8634d6471ef86b382cba6d4e57ca8 upstream.
    
    when multiport is off, we don't initialize config work,
    but we then cancel uninitialized control_work on freeze.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Amit Shah <amit.shah@redhat.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 90fe09d0c8adf33924940dfca77ad3ddbbae50c2
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Sun Mar 1 10:11:05 2015 -0500

    console: Fix console name size mismatch
    
    commit 30a22c215a0007603ffc08021f2e8b64018517dd upstream.
    
    commit 6ae9200f2cab7 ("enlarge console.name") increased the storage
    for the console name to 16 bytes, but not the corresponding
    struct console_cmdline::name storage. Console names longer than
    8 bytes cause read beyond end-of-string and failure to match
    console; I'm not sure if there are other unexpected consequences.
    
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c32bbf2aee45716769a80f4e39d6f829976e1a69
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Thu Feb 26 11:45:47 2015 +0100

    fuse: notify: don't move pages
    
    commit 0d2783626a53d4c922f82d51fa675cb5d13f0d36 upstream.
    
    fuse_try_move_page() is not prepared for replacing pages that have already
    been read.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f731bbae6d8fe3786bad75e3088cf0be1d037f82
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Thu Feb 26 11:45:47 2015 +0100

    fuse: set stolen page uptodate
    
    commit aa991b3b267e24f578bac7b09cc57579b660304b upstream.
    
    Regular pipe buffers' ->steal method (generic_pipe_buf_steal()) doesn't set
    PG_uptodate.
    
    Don't warn on this condition, just set the uptodate flag.
    
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8582313bbd48775f7f79a630ac4c0bb65e604744
Author: JeHyeon Yeon <tom.yeon@windriver.com>
Date:   Mon Mar 16 01:03:19 2015 +0000

    LZ4 : fix the data abort issue
    
    commit d5e7cafd69da24e6d6cc988fab6ea313a2577efc upstream.
    
    If the part of the compression data are corrupted, or the compression
    data is totally fake, the memory access over the limit is possible.
    
    This is the log from my system usning lz4 decompression.
       [6502]data abort, halting
       [6503]r0  0x00000000 r1  0x00000000 r2  0xdcea0ffc r3  0xdcea0ffc
       [6509]r4  0xb9ab0bfd r5  0xdcea0ffc r6  0xdcea0ff8 r7  0xdce80000
       [6515]r8  0x00000000 r9  0x00000000 r10 0x00000000 r11 0xb9a98000
       [6522]r12 0xdcea1000 usp 0x00000000 ulr 0x00000000 pc  0x820149bc
       [6528]spsr 0x400001f3
    and the memory addresses of some variables at the moment are
        ref:0xdcea0ffc, op:0xdcea0ffc, oend:0xdcea1000
    
    As you can see, COPYLENGH is 8bytes, so @ref and @op can access the momory
    over @oend.
    
    Signed-off-by: JeHyeon Yeon <tom.yeon@windriver.com>
    Reviewed-by: David Sterba <dsterba@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 505796d575bc1d23aeb995b16f557e69d26e5dad
Author: Christian König <christian.koenig@amd.com>
Date:   Thu Feb 19 09:40:28 2015 +0100

    drm/radeon: drop setting UPLL to sleep mode
    
    commit a17d4996e051e78d164989b894608cf37cd5110b upstream.
    
    Just keep it working, seems to fix some PLL problems.
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=73378
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0ba712aad5c6230497650bb508608a4d9cbf55f2
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Mar 3 17:00:43 2015 -0500

    drm/radeon: fix interlaced modes on DCE8
    
    commit 77ae5f4b48a0445426c9c1ef7c0f28b717e35d55 upstream.
    
    Need to double the viewport height.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 1bd85038b66b92b3043115cdb1e209aae2b257f2
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:39:56 2015 -0500

    drm/radeon: do a posting read in rs600_set_irq
    
    commit 54acf107e4e66d1f4a697e08a7f60dba9fcf07c3 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 5e61943443e25142b557550bbbf619c229ae5641
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:43:53 2015 -0500

    drm/radeon: do a posting read in si_set_irq
    
    commit 0586915ec10d0ae60de5cd3381ad25a704760402 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 4ca1ac7997dbc13b8de4448f9e7e7b6d07cac3fa
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:45:24 2015 -0500

    drm/radeon: do a posting read in cik_set_irq
    
    commit cffefd9bb31cd35ab745d3b49005d10616d25bdc upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 3030c151137dcfffcf881fc193cdd648bc9716a6
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:41:31 2015 -0500

    drm/radeon: do a posting read in r600_set_irq
    
    commit 9d1393f23d5656cdd5f368efd60694d4aeed81d3 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a1a62b8faec4b5f829bbcb26b3bd31b74989575a
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:36:26 2015 -0500

    drm/radeon: do a posting read in r100_set_irq
    
    commit f957063fee6392bb9365370db6db74dc0b2dce0a upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 60a74c2e1b3cc2776d8eb103e9099c4e5fec8b3e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:42:53 2015 -0500

    drm/radeon: do a posting read in evergreen_set_irq
    
    commit c320bb5f6dc0cb88a811cbaf839303e0a3916a92 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 26c65937c172b65fe06d25d612bf31f36383c1f2
Author: Tommi Rantala <tt.rantala@gmail.com>
Date:   Mon Mar 2 21:36:07 2015 +0200

    drm/radeon: fix DRM_IOCTL_RADEON_CS oops
    
    commit a28b2a47edcd0cb7c051b445f71a426000394606 upstream.
    
    Passing zeroed drm_radeon_cs struct to DRM_IOCTL_RADEON_CS produces the
    following oops.
    
    Fix by always calling INIT_LIST_HEAD() to avoid the crash in list_sort().
    
    ----------------------------------
    
     #include <stdint.h>
     #include <fcntl.h>
     #include <unistd.h>
     #include <sys/ioctl.h>
     #include <drm/radeon_drm.h>
    
     static const struct drm_radeon_cs cs;
    
     int main(int argc, char **argv)
     {
             return ioctl(open(argv[1], O_RDWR), DRM_IOCTL_RADEON_CS, &cs);
     }
    
    ----------------------------------
    
    [ttrantal@test2 ~]$ ./main /dev/dri/card0
    [   46.904650] BUG: unable to handle kernel NULL pointer dereference at           (null)
    [   46.905022] IP: [<ffffffff814d6df2>] list_sort+0x42/0x240
    [   46.905022] PGD 68f29067 PUD 688b5067 PMD 0
    [   46.905022] Oops: 0002 [#1] SMP
    [   46.905022] CPU: 0 PID: 2413 Comm: main Not tainted 4.0.0-rc1+ #58
    [   46.905022] Hardware name: Hewlett-Packard HP Compaq dc5750 Small Form Factor/0A64h, BIOS 786E3 v02.10 01/25/2007
    [   46.905022] task: ffff880058e2bcc0 ti: ffff880058e64000 task.ti: ffff880058e64000
    [   46.905022] RIP: 0010:[<ffffffff814d6df2>]  [<ffffffff814d6df2>] list_sort+0x42/0x240
    [   46.905022] RSP: 0018:ffff880058e67998  EFLAGS: 00010246
    [   46.905022] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    [   46.905022] RDX: ffffffff81644410 RSI: ffff880058e67b40 RDI: ffff880058e67a58
    [   46.905022] RBP: ffff880058e67a88 R08: 0000000000000000 R09: 0000000000000000
    [   46.905022] R10: ffff880058e2bcc0 R11: ffffffff828e6ca0 R12: ffffffff81644410
    [   46.905022] R13: ffff8800694b8018 R14: 0000000000000000 R15: ffff880058e679b0
    [   46.905022] FS:  00007fdc65a65700(0000) GS:ffff88006d600000(0000) knlGS:0000000000000000
    [   46.905022] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   46.905022] CR2: 0000000000000000 CR3: 0000000058dd9000 CR4: 00000000000006f0
    [   46.905022] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   46.905022] DR3: 0000000000000000 DR6: 00000000ffff4ff0 DR7: 0000000000000400
    [   46.905022] Stack:
    [   46.905022]  ffff880058e67b40 ffff880058e2bcc0 ffff880058e67a78 0000000000000000
    [   46.905022]  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [   46.905022]  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [   46.905022] Call Trace:
    [   46.905022]  [<ffffffff81644a65>] radeon_cs_parser_fini+0x195/0x220
    [   46.905022]  [<ffffffff81645069>] radeon_cs_ioctl+0xa9/0x960
    [   46.905022]  [<ffffffff815e1f7c>] drm_ioctl+0x19c/0x640
    [   46.905022]  [<ffffffff810f8fdd>] ? trace_hardirqs_on_caller+0xfd/0x1c0
    [   46.905022]  [<ffffffff810f90ad>] ? trace_hardirqs_on+0xd/0x10
    [   46.905022]  [<ffffffff8160c066>] radeon_drm_ioctl+0x46/0x80
    [   46.905022]  [<ffffffff81211868>] do_vfs_ioctl+0x318/0x570
    [   46.905022]  [<ffffffff81462ef6>] ? selinux_file_ioctl+0x56/0x110
    [   46.905022]  [<ffffffff81211b41>] SyS_ioctl+0x81/0xa0
    [   46.905022]  [<ffffffff81dc6312>] system_call_fastpath+0x12/0x17
    [   46.905022] Code: 48 89 b5 10 ff ff ff 0f 84 03 01 00 00 4c 8d bd 28 ff ff
    ff 31 c0 48 89 fb b9 15 00 00 00 49 89 d4 4c 89 ff f3 48 ab 48 8b 46 08 <48> c7
    00 00 00 00 00 48 8b 0e 48 85 c9 0f 84 7d 00 00 00 c7 85
    [   46.905022] RIP  [<ffffffff814d6df2>] list_sort+0x42/0x240
    [   46.905022]  RSP <ffff880058e67998>
    [   46.905022] CR2: 0000000000000000
    [   47.149253] ---[ end trace 09576b4e8b2c20b8 ]---
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Tommi Rantala <tt.rantala@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 71f1579b06baaef567e763b85dbd69453a25753a
Author: Eli Cohen <eli@dev.mellanox.co.il>
Date:   Sun Sep 14 16:47:52 2014 +0300

    IB/core: Avoid leakage from kernel to user space
    
    commit 377b513485fd885dea1083a9a5430df65b35e048 upstream.
    
    Clear the reserved field of struct ib_uverbs_async_event_desc which is
    copied to user space.
    
    Signed-off-by: Eli Cohen <eli@mellanox.com>
    Reviewed-by: Yann Droneaud <ydroneaud@opteya.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 1ef840f5d8195897c80d40eb9f822ee6e91f9f4a
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Thu Nov 21 14:31:58 2013 -0800

    mm: thp: give transparent hugepage code a separate copy_page
    
    commit 30b0a105d9f7141e4cbf72ae5511832457d89788 upstream.
    
    Right now, the migration code in migrate_page_copy() uses copy_huge_page()
    for hugetlbfs and thp pages:
    
           if (PageHuge(page) || PageTransHuge(page))
                    copy_huge_page(newpage, page);
    
    So, yay for code reuse.  But:
    
      void copy_huge_page(struct page *dst, struct page *src)
      {
            struct hstate *h = page_hstate(src);
    
    and a non-hugetlbfs page has no page_hstate().  This works 99% of the
    time because page_hstate() determines the hstate from the page order
    alone.  Since the page order of a THP page matches the default hugetlbfs
    page order, it works.
    
    But, if you change the default huge page size on the boot command-line
    (say default_hugepagesz=1G), then we might not even *have* a 2MB hstate
    so page_hstate() returns null and copy_huge_page() oopses pretty fast
    since copy_huge_page() dereferences the hstate:
    
      void copy_huge_page(struct page *dst, struct page *src)
      {
            struct hstate *h = page_hstate(src);
            if (unlikely(pages_per_huge_page(h) > MAX_ORDER_NR_PAGES)) {
      ...
    
    Mel noticed that the migration code is really the only user of these
    functions.  This moves all the copy code over to migrate.c and makes
    copy_huge_page() work for THP by checking for it explicitly.
    
    I believe the bug was introduced in commit b32967ff101a ("mm: numa: Add
    THP migration for the NUMA working set scanning fault case")
    
    [akpm@linux-foundation.org: fix coding-style and comment text, per Naoya Horiguchi]
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Hillf Danton <dhillf@gmail.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Tested-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 04240adfe44b8a38c21ca0972ef620254b931e25
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Thu Apr 2 11:22:07 2015 +0200

    mm, hugetlb: define page_hstate for !HUGETLB_PAGE
    
    This is a single hunk introduced later in the upstream commit
    cb900f41215447433cbc456d1c4294e858a84d7c (mm, hugetlb: convert
    hugetlbfs to use split pmd lock). We need page_hstate even for
    !HUGETLB_PAGE case for the next patch (mm: thp: give transparent
    hugepage code a separate copy_page).
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a5ff308f459c531704a133e1816cd80447c33329
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Thu Dec 12 17:12:19 2013 -0800

    include/linux/hugetlb.h: make isolate_huge_page() an inline
    
    commit f40386a4e976acb2bd3e0f9ead11e8e769acbe98 upstream.
    
    With CONFIG_HUGETLBFS=n:
    
      mm/migrate.c: In function `do_move_page_to_node_array':
      include/linux/hugetlb.h:140:33: warning: statement with no effect [-Wunused-value]
       #define isolate_huge_page(p, l) false
                                       ^
      mm/migrate.c:1170:4: note: in expansion of macro `isolate_huge_page'
          isolate_huge_page(page, &pagelist);
    
    Reported-by: Borislav Petkov <bp@alien8.de>
    Tested-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 429c93f0886583889ac83aca71ce449495f98afe
Author: Scott Wood <scottwood@freescale.com>
Date:   Wed Dec 17 19:06:31 2014 -0600

    powerpc/mpc85xx: Add ranges to etsec2 nodes
    
    commit bb344ca5b90df62b1a3b7a35c6a9d00b306a170d upstream.
    
    Commit 746c9e9f92dd "of/base: Fix PowerPC address parsing hack" limited
    the applicability of the workaround whereby a missing ranges is treated
    as an empty ranges.  This workaround was hiding a bug in the etsec2
    device tree nodes, which have children with reg, but did not have
    ranges.
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Reported-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit aa838de9cecb9ab7bec12d02f731dc6ee439583c
Author: oliver@neukum.org <oliver@neukum.org>
Date:   Tue Mar 10 16:36:22 2015 +0100

    HID: add ALWAYS_POLL quirk for a Logitech 0xc007
    
    commit a415457733b5fa40bc996bf1f4df471cd98d3608 upstream.
    
    This device disconnects every 60s without X
    
    Signed-off-by: Oliver Neukum <oliver@neukum.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 97f5ebbc73dd5be60c08b2722a4f8b73fb17d693
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Mar 23 09:22:10 2015 -0700

    sparc64: Fix several bugs in memmove().
    
    [ Upstream commit 2077cef4d5c29cf886192ec32066f783d6a80db8 ]
    
    Firstly, handle zero length calls properly.  Believe it or not there
    are a few of these happening during early boot.
    
    Next, we can't just drop to a memcpy() call in the forward copy case
    where dst <= src.  The reason is that the cache initializing stores
    used in the Niagara memcpy() implementations can end up clearing out
    cache lines before we've sourced their original contents completely.
    
    For example, considering NG4memcpy, the main unrolled loop begins like
    this:
    
         load   src + 0x00
         load   src + 0x08
         load   src + 0x10
         load   src + 0x18
         load   src + 0x20
         store  dst + 0x00
    
    Assume dst is 64 byte aligned and let's say that dst is src - 8 for
    this memcpy() call.  That store at the end there is the one to the
    first line in the cache line, thus clearing the whole line, which thus
    clobbers "src + 0x28" before it even gets loaded.
    
    To avoid this, just fall through to a simple copy only mildly
    optimized for the case where src and dst are 8 byte aligned and the
    length is a multiple of 8 as well.  We could get fancy and call
    GENmemcpy() but this is good enough for how this thing is actually
    used.
    
    Reported-by: David Ahern <david.ahern@oracle.com>
    Reported-by: Bob Picco <bpicco@meloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 14b7dc59ca97898e99eb3b93e2e3a756856d0742
Author: David Ahern <david.ahern@oracle.com>
Date:   Thu Mar 19 16:06:53 2015 -0400

    sparc: Touch NMI watchdog when walking cpus and calling printk
    
    [ Upstream commit 31aaa98c248da766ece922bbbe8cc78cfd0bc920 ]
    
    With the increase in number of CPUs calls to functions that dump
    output to console (e.g., arch_trigger_all_cpu_backtrace) can take
    a long time to complete. If IRQs are disabled eventually the NMI
    watchdog kicks in and creates more havoc. Avoid by telling the NMI
    watchdog everything is ok.
    
    Signed-off-by: David Ahern <david.ahern@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 6b74b2d800e5ea2f023eef045180a0f563d8b5bc
Author: David Ahern <david.ahern@oracle.com>
Date:   Thu Mar 19 16:06:17 2015 -0400

    sparc: perf: Make counting mode actually work
    
    [ Upstream commit d51291cb8f32bfae6b331e1838651f3ddefa73a5 ]
    
    Currently perf-stat (aka, counting mode) does not work:
    
    $ perf stat ls
    ...
     Performance counter stats for 'ls':
    
              1.585665      task-clock (msec)         #    0.580 CPUs utilized
                    24      context-switches          #    0.015 M/sec
                     0      cpu-migrations            #    0.000 K/sec
                    86      page-faults               #    0.054 M/sec
       <not supported>      cycles
       <not supported>      stalled-cycles-frontend
       <not supported>      stalled-cycles-backend
       <not supported>      instructions
       <not supported>      branches
       <not supported>      branch-misses
    
           0.002735100 seconds time elapsed
    
    The reason is that state is never reset (stays with PERF_HES_UPTODATE set).
    Add a call to sparc_pmu_enable_event during the added_event handling.
    Clean up the encoding since pmu_start calls sparc_pmu_enable_event which
    does the same. Passing PERF_EF_RELOAD to sparc_pmu_start means the call
    to sparc_perf_event_set_period can be removed as well.
    
    With this patch:
    
    $ perf stat ls
    ...
     Performance counter stats for 'ls':
    
              1.552890      task-clock (msec)         #    0.552 CPUs utilized
                    24      context-switches          #    0.015 M/sec
                     0      cpu-migrations            #    0.000 K/sec
                    86      page-faults               #    0.055 M/sec
             5,748,997      cycles                    #    3.702 GHz
       <not supported>      stalled-cycles-frontend:HG
       <not supported>      stalled-cycles-backend:HG
             1,684,362      instructions:HG           #    0.29  insns per cycle
               295,133      branches:HG               #  190.054 M/sec
                28,007      branch-misses:HG          #    9.49% of all branches
    
           0.002815665 seconds time elapsed
    
    Signed-off-by: David Ahern <david.ahern@oracle.com>
    Acked-by: Bob Picco <bob.picco@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 18d8d2dc16e5281a85c215e243e23698f14e880b
Author: David Ahern <david.ahern@oracle.com>
Date:   Thu Mar 19 16:05:57 2015 -0400

    sparc: perf: Remove redundant perf_pmu_{en|dis}able calls
    
    [ Upstream commit 5b0d4b5514bbcce69b516d0742f2cfc84ebd6db3 ]
    
    perf_pmu_disable is called by core perf code before pmu->del and the
    enable function is called by core perf code afterwards. No need to
    call again within sparc_pmu_del.
    
    Ditto for pmu->add and sparc_pmu_add.
    
    Signed-off-by: David Ahern <david.ahern@oracle.com>
    Acked-by: Bob Picco <bob.picco@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 028ba5bacba6cfebc2d5dc07f50b5ed9acb6e513
Author: Rob Gardner <rob.gardner@oracle.com>
Date:   Mon Mar 2 23:16:55 2015 -0700

    sparc: semtimedop() unreachable due to comparison error
    
    [ Upstream commit 53eb2516972b8c4628651dfcb926cb9ef8b2864a ]
    
    A bug was reported that the semtimedop() system call was always
    failing eith ENOSYS.
    
    Since SEMCTL is defined as 3, and SEMTIMEDOP is defined as 4,
    the comparison "call <= SEMCTL" will always prevent SEMTIMEDOP
    from getting through to the semaphore ops switch statement.
    
    This is corrected by changing the comparison to "call <= SEMTIMEDOP".
    
    Orabug: 20633375
    
    Signed-off-by: Rob Gardner <rob.gardner@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 7cd15d5ef55f544343c61de3e5e929fde88c637d
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Thu Dec 18 13:23:23 2014 +0100

    sparc32: destroy_context() and switch_mm() needs to disable interrupts.
    
    [ Upstream commit 66d0f7ec9f1038452178b1993fc07fd96d30fd38 ]
    
    Load balancing can be triggered in the critical sections protected by
    srmmu_context_spinlock in destroy_context() and switch_mm() and can hang
    the cpu waiting for the rq lock of another cpu that in turn has called
    switch_mm hangning on srmmu_context_spinlock leading to deadlock.
    
    So, disable interrupt while taking srmmu_context_spinlock in
    destroy_context() and switch_mm() so we don't deadlock.
    
    See also commit 77b838fa1ef0 ("[SPARC64]: destroy_context() needs to disable
    interrupts.")
    
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit d06381e8aac5271952076d66b001a01f5613599a
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Nov 17 23:06:20 2014 -0800

    tcp: make connect() mem charging friendly
    
    [ Upstream commit 355a901e6cf1b2b763ec85caa2a9f04fbcc4ab4a ]
    
    While working on sk_forward_alloc problems reported by Denys
    Fedoryshchenko, we found that tcp connect() (and fastopen) do not call
    sk_wmem_schedule() for SYN packet (and/or SYN/DATA packet), so
    sk_forward_alloc is negative while connect is in progress.
    
    We can fix this by calling regular sk_stream_alloc_skb() both for the
    SYN packet (in tcp_connect()) and the syn_data packet in
    tcp_send_syn_data()
    
    Then, tcp_send_syn_data() can avoid copying syn_data as we simply
    can manipulate syn_data->cb[] to remove SYN flag (and increment seq)
    
    Instead of open coding memcpy_fromiovecend(), simply use this helper.
    
    This leaves in socket write queue clean fast clone skbs.
    
    This was tested against our fastopen packetdrill tests.
    
    Reported-by: Denys Fedoryshchenko <nuclearcat@nuclearcat.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit ee1887e4934d87202f7c15e3baef2b8ea2f34d8f
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Fri Mar 20 16:48:13 2015 +0000

    net: compat: Update get_compat_msghdr() to match copy_msghdr_from_user() behaviour
    
    [ Upstream commit 91edd096e224941131f896b86838b1e59553696a ]
    
    Commit db31c55a6fb2 (net: clamp ->msg_namelen instead of returning an
    error) introduced the clamping of msg_namelen when the unsigned value
    was larger than sizeof(struct sockaddr_storage). This caused a
    msg_namelen of -1 to be valid. The native code was subsequently fixed by
    commit dbb490b96584 (net: socket: error on a negative msg_namelen).
    
    In addition, the native code sets msg_namelen to 0 when msg_name is
    NULL. This was done in commit (6a2a2b3ae075 net:socket: set msg_namelen
    to 0 if msg_name is passed as NULL in msghdr struct from userland) and
    subsequently updated by 08adb7dabd48 (fold verify_iovec() into
    copy_msghdr_from_user()).
    
    This patch brings the get_compat_msghdr() in line with
    copy_msghdr_from_user().
    
    Fixes: db31c55a6fb2 (net: clamp ->msg_namelen instead of returning an error)
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e5354126dfddb5721264c385777dd8b5ecf10855
Author: Josh Hunt <johunt@akamai.com>
Date:   Thu Mar 19 19:19:30 2015 -0400

    tcp: fix tcp fin memory accounting
    
    [ Upstream commit d22e1537181188e5dc8cbc51451832625035bdc2 ]
    
    tcp_send_fin() does not account for the memory it allocates properly, so
    sk_forward_alloc can be negative in cases where we've sent a FIN:
    
    ss example output (ss -amn | grep -B1 f4294):
    tcp    FIN-WAIT-1 0      1            192.168.0.1:45520         192.0.2.1:8080
            skmem:(r0,rb87380,t0,tb87380,f4294966016,w1280,o0,bl0)
    Acked-by: Eric Dumazet <edumazet@google.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 7d5a6af313ac6c7a61657261f27bd72f547af306
Author: Steven Barth <cyrus@openwrt.org>
Date:   Thu Mar 19 16:16:04 2015 +0100

    ipv6: fix backtracking for throw routes
    
    [ Upstream commit 73ba57bfae4a1914f6a6dac71e3168dd900e00af ]
    
    for throw routes to trigger evaluation of other policy rules
    EAGAIN needs to be propagated up to fib_rules_lookup
    similar to how its done for IPv4
    
    A simple testcase for verification is:
    
    ip -6 rule add lookup 33333 priority 33333
    ip -6 route add throw 2001:db8::1
    ip -6 route add 2001:db8::1 via fe80::1 dev wlan0 table 33333
    ip route get 2001:db8::1
    
    Signed-off-by: Steven Barth <cyrus@openwrt.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9e3bce09c3dc63acb58038d37d5b6f2d9c9c318a
Author: Ondrej Zary <linux@rainbow-software.org>
Date:   Wed Mar 18 23:01:01 2015 +0100

    Revert "net: cx82310_eth: use common match macro"
    
    [ Upstream commit 8d006e0105978619fb472e150c88b0d49337fe2b ]
    
    This reverts commit 11ad714b98f6d9ca0067568442afe3e70eb94845 because
    it breaks cx82310_eth.
    
    The custom USB_DEVICE_CLASS macro matches
    bDeviceClass, bDeviceSubClass and bDeviceProtocol
    but the common USB_DEVICE_AND_INTERFACE_INFO matches
    bInterfaceClass, bInterfaceSubClass and bInterfaceProtocol instead, which are
    not specified.
    
    Signed-off-by: Ondrej Zary <linux@rainbow-software.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9b79f2c1170b4d2475a18f943ea746cb4c0c43be
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Sat Mar 14 05:34:56 2015 +0000

    rxrpc: bogus MSG_PEEK test in rxrpc_recvmsg()
    
    [ Upstream commit 7d985ed1dca5c90535d67ce92ef6ca520302340a ]
    
    [I would really like an ACK on that one from dhowells; it appears to be
    quite straightforward, but...]
    
    MSG_PEEK isn't passed to ->recvmsg() via msg->msg_flags; as the matter of
    fact, neither the kernel users of rxrpc, nor the syscalls ever set that bit
    in there.  It gets passed via flags; in fact, another such check in the same
    function is done correctly - as flags & MSG_PEEK.
    
    It had been that way (effectively disabled) for 8 years, though, so the patch
    needs beating up - that case had never been tested.  If it is correct, it's
    -stable fodder.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e0704a3c29413a811469e0e412ba641b390837ec
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Sat Mar 14 05:22:21 2015 +0000

    caif: fix MSG_OOB test in caif_seqpkt_recvmsg()
    
    [ Upstream commit 3eeff778e00c956875c70b145c52638c313dfb23 ]
    
    It should be checking flags, not msg->msg_flags.  It's ->sendmsg()
    instances that need to look for that in ->msg_flags, ->recvmsg() ones
    (including the other ->recvmsg() instance in that file, as well as
    unix_dgram_recvmsg() this one claims to be imitating) check in flags.
    Braino had been introduced in commit dcda13 ("caif: Bugfix - use MSG_TRUNC
    in receive") back in 2010, so it goes quite a while back.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit da65a31af4234826c6b840bbc2c451dd37fc9969
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Mar 13 09:49:59 2015 -0700

    inet_diag: fix possible overflow in inet_diag_dump_one_icsk()
    
    [ Upstream commit c8e2c80d7ec00d020320f905822bf49c5ad85250 ]
    
    inet_diag_dump_one_icsk() allocates too small skb.
    
    Add inet_sk_attr_size() helper right before inet_sk_diag_fill()
    so that it can be updated if/when new attributes are added.
    
    iproute2/ss currently does not use this dump_one() interface,
    this might explain nobody noticed this problem yet.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 4ac02a11486acbceef7c02bc6796393f45af53ca
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Mar 11 22:46:59 2015 +0100

    rds: avoid potential stack overflow
    
    [ Upstream commit f862e07cf95d5b62a5fc5e981dd7d0dbaf33a501 ]
    
    The rds_iw_update_cm_id function stores a large 'struct rds_sock' object
    on the stack in order to pass a pair of addresses. This happens to just
    fit withint the 1024 byte stack size warning limit on x86, but just
    exceed that limit on ARM, which gives us this warning:
    
    net/rds/iw_rdma.c:200:1: warning: the frame size of 1056 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    As the use of this large variable is basically bogus, we can rearrange
    the code to not do that. Instead of passing an rds socket into
    rds_iw_get_device, we now just pass the two addresses that we have
    available in rds_iw_update_cm_id, and we change rds_iw_get_mr accordingly,
    to create two address structures on the stack there.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit ed56585d9e424130349e02446171e9d51af88a10
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Wed Mar 11 14:29:17 2015 +0300

    net: sysctl_net_core: check SNDBUF and RCVBUF for min length
    
    [ Upstream commit b1cb59cf2efe7971d3d72a7b963d09a512d994c9 ]
    
    sysctl has sysctl.net.core.rmem_*/wmem_* parameters which can be
    set to incorrect values. Given that 'struct sk_buff' allocates from
    rcvbuf, incorrectly set buffer length could result to memory
    allocation failures. For example, set them as follows:
    
        # sysctl net.core.rmem_default=64
          net.core.wmem_default = 64
        # sysctl net.core.wmem_default=64
          net.core.wmem_default = 64
        # ping localhost -s 1024 -i 0 > /dev/null
    
    This could result to the following failure:
    
    skbuff: skb_over_panic: text:ffffffff81628db4 len:-32 put:-32
    head:ffff88003a1cc200 data:ffff88003a1cc200 tail:0xffffffe0 end:0xc0 dev:<NULL>
    kernel BUG at net/core/skbuff.c:102!
    invalid opcode: 0000 [#1] SMP
    ...
    task: ffff88003b7f5550 ti: ffff88003ae88000 task.ti: ffff88003ae88000
    RIP: 0010:[<ffffffff8155fbd1>]  [<ffffffff8155fbd1>] skb_put+0xa1/0xb0
    RSP: 0018:ffff88003ae8bc68  EFLAGS: 00010296
    RAX: 000000000000008d RBX: 00000000ffffffe0 RCX: 0000000000000000
    RDX: ffff88003fdcf598 RSI: ffff88003fdcd9c8 RDI: ffff88003fdcd9c8
    RBP: ffff88003ae8bc88 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000001 R11: 00000000000002b2 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff88003d3f7300 R15: ffff88000012a900
    FS:  00007fa0e2b4a840(0000) GS:ffff88003fc00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000d0f7e0 CR3: 000000003b8fb000 CR4: 00000000000006f0
    Stack:
     ffff88003a1cc200 00000000ffffffe0 00000000000000c0 ffffffff818cab1d
     ffff88003ae8bd68 ffffffff81628db4 ffff88003ae8bd48 ffff88003b7f5550
     ffff880031a09408 ffff88003b7f5550 ffff88000012aa48 ffff88000012ab00
    Call Trace:
     [<ffffffff81628db4>] unix_stream_sendmsg+0x2c4/0x470
     [<ffffffff81556f56>] sock_write_iter+0x146/0x160
     [<ffffffff811d9612>] new_sync_write+0x92/0xd0
     [<ffffffff811d9cd6>] vfs_write+0xd6/0x180
     [<ffffffff811da499>] SyS_write+0x59/0xd0
     [<ffffffff81651532>] system_call_fastpath+0x12/0x17
    Code: 00 00 48 89 44 24 10 8b 87 c8 00 00 00 48 89 44 24 08 48 8b 87 d8 00
          00 00 48 c7 c7 30 db 91 81 48 89 04 24 31 c0 e8 4f a8 0e 00 <0f> 0b
          eb fe 66 66 2e 0f 1f 84 00 00 00 00 00 55 48 89 e5 48 83
    RIP  [<ffffffff8155fbd1>] skb_put+0xa1/0xb0
    RSP <ffff88003ae8bc68>
    Kernel panic - not syncing: Fatal exception
    
    Moreover, the possible minimum is 1, so we can get another kernel panic:
    ...
    BUG: unable to handle kernel paging request at ffff88013caee5c0
    IP: [<ffffffff815604cf>] __alloc_skb+0x12f/0x1f0
    ...
    
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 901077ae7a03b26337c3333a91e170327b0a935f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 18 11:54:45 2015 +0100

    ALSA: hda - Fix regression of HD-audio controller fallback modes
    
    commit a1f3f1ca66bd12c339b17a0c2ef93a093f90a277 upstream.
    
    The commit [63e51fd708f5: ALSA: hda - Don't take unresponsive D3
    transition too serious] introduced a conditional fallback behavior to
    the HD-audio controller depending on the flag set.  However, it
    introduced a silly bug, too, that the flag was evaluated in a reverse
    way.  This resulted in a regression of HD-audio controller driver
    where it can't go to the fallback mode at communication errors.
    
    Unfortunately (or fortunately?) this didn't come up until recently
    because the affected code path is an error handling that happens only
    on an unstable hardware chip.  Most of recent chips work stably, thus
    they didn't hit this problem.  Now, we've got a regression report with
    a VIA chip, and this seems indeed requiring the fallback to the
    polling mode, and finally the bug was revealed.
    
    The fix is a oneliner to remove the wrong logical NOT in the check.
    (Lesson learned - be careful about double negation.)
    
    The bug should be backported to stable, but the patch won't be
    applicable to 3.13 or earlier because of the code splits.  The stable
    fix patches for earlier kernels will be posted later manually.
    
    [... and this is the manual patch -- tiwai]
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=94021
    Fixes: 63e51fd708f5 ('ALSA: hda - Don't take unresponsive D3 transition too serious')
    Cc: <stable@vger.kernel.org> # v3.11-3.13
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c5d351e19a696e184304fc3a8fa506d4234af103
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Wed Feb 11 15:25:25 2015 -0800

    mm/hugetlb: fix getting refcount 0 page in hugetlb_fault()
    
    commit 0f792cf949a0be506c2aa8bfac0605746b146dda upstream.
    
    When running the test which causes the race as shown in the previous patch,
    we can hit the BUG "get_page() on refcount 0 page" in hugetlb_fault().
    
    This race happens when pte turns into migration entry just after the first
    check of is_hugetlb_entry_migration() in hugetlb_fault() passed with false.
    To fix this, we need to check pte_present() again after huge_ptep_get().
    
    This patch also reorders taking ptl and doing pte_page(), because
    pte_page() should be done in ptl.  Due to this reordering, we need use
    trylock_page() in page != pagecache_page case to respect locking order.
    
    Fixes: 66aebce747ea ("hugetlb: fix race condition in hugetlb_fault()")
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Mel Gorman <mel@csn.ul.ie>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@suse.cz>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Luiz Capitulino <lcapitulino@redhat.com>
    Cc: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
    Cc: Lee Schermerhorn <lee.schermerhorn@hp.com>
    Cc: Steve Capper <steve.capper@linaro.org>
    Cc: <stable@vger.kernel.org>    [3.2+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz> [backport to 3.12]
