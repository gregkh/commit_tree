commit 0268aa579b1f741b12300bc7f084ffe990cfde5f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 13 10:04:30 2021 +0200

    Linux 5.10.73
    
    Link: https://lore.kernel.org/r/20211011134508.362906295@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20211011153306.939942789@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20211012093348.134236881@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 825c00c2ee143eff1d869605c318270686f689e0
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Sep 30 19:21:39 2021 +0200

    x86/hpet: Use another crystalball to evaluate HPET usability
    
    commit 6e3cd95234dc1eda488f4f487c281bac8fef4d9b upstream.
    
    On recent Intel systems the HPET stops working when the system reaches PC10
    idle state.
    
    The approach of adding PCI ids to the early quirks to disable HPET on
    these systems is a whack a mole game which makes no sense.
    
    Check for PC10 instead and force disable HPET if supported. The check is
    overbroad as it does not take ACPI, intel_idle enablement and command
    line parameters into account. That's fine as long as there is at least
    PMTIMER available to calibrate the TSC frequency. The decision can be
    overruled by adding "hpet=force" on the kernel command line.
    
    Remove the related early PCI quirks for affected Ice Cake and Coffin Lake
    systems as they are not longer required. That should also cover all
    other systems, i.e. Tiger Rag and newer generations, which are most
    likely affected by this as well.
    
    Fixes: Yet another hardware trainwreck
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Rafael J. Wysocki <rafael@kernel.org>
    Cc: stable@vger.kernel.org
    Cc: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2447f6587b8ffe42ba04d14ce67d429a1163e5e
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Mon Oct 4 00:34:23 2021 +0200

    x86/entry: Clear X86_FEATURE_SMAP when CONFIG_X86_SMAP=n
    
    commit 3958b9c34c2729597e182cc606cc43942fd19f7c upstream.
    
    Commit
    
      3c73b81a9164 ("x86/entry, selftests: Further improve user entry sanity checks")
    
    added a warning if AC is set when in the kernel.
    
    Commit
    
      662a0221893a3d ("x86/entry: Fix AC assertion")
    
    changed the warning to only fire if the CPU supports SMAP.
    
    However, the warning can still trigger on a machine that supports SMAP
    but where it's disabled in the kernel config and when running the
    syscall_nt selftest, for example:
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 49 at irqentry_enter_from_user_mode
      CPU: 0 PID: 49 Comm: init Tainted: G                T 5.15.0-rc4+ #98 e6202628ee053b4f310759978284bd8bb0ce6905
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
      RIP: 0010:irqentry_enter_from_user_mode
      ...
      Call Trace:
       ? irqentry_enter
       ? exc_general_protection
       ? asm_exc_general_protection
       ? asm_exc_general_protectio
    
    IS_ENABLED(CONFIG_X86_SMAP) could be added to the warning condition, but
    even this would not be enough in case SMAP is disabled at boot time with
    the "nosmap" parameter.
    
    To be consistent with "nosmap" behaviour, clear X86_FEATURE_SMAP when
    !CONFIG_X86_SMAP.
    
    Found using entry-fuzz + satrandconfig.
    
     [ bp: Massage commit message. ]
    
    Fixes: 3c73b81a9164 ("x86/entry, selftests: Further improve user entry sanity checks")
    Fixes: 662a0221893a ("x86/entry: Fix AC assertion")
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20211003223423.8666-1-vegard.nossum@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bfe1f6fc8769c728d4de87aa8e30ec36e706a9d
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Aug 3 13:35:23 2021 +0200

    x86/entry: Correct reference to intended CONFIG_64_BIT
    
    commit 2c861f2b859385e9eaa6e464a8a7435b5a6bf564 upstream.
    
    Commit in Fixes adds a condition with IS_ENABLED(CONFIG_64_BIT),
    but the intended config item is called CONFIG_64BIT, as defined in
    arch/x86/Kconfig.
    
    Fortunately, scripts/checkkconfigsymbols.py warns:
    
    64_BIT
    Referencing files: arch/x86/include/asm/entry-common.h
    
    Correct the reference to the intended config symbol.
    
    Fixes: 662a0221893a ("x86/entry: Fix AC assertion")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210803113531.30720-2-lukas.bulwahn@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d637bc6f98ae7f980f4773608f997f222176ef5
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Sep 30 23:42:01 2021 -0500

    x86/sev: Return an error on a returned non-zero SW_EXITINFO1[31:0]
    
    commit 06f2ac3d4219bbbfd93d79e01966a42053084f11 upstream.
    
    After returning from a VMGEXIT NAE event, SW_EXITINFO1[31:0] is checked
    for a value of 1, which indicates an error and that SW_EXITINFO2
    contains exception information. However, future versions of the GHCB
    specification may define new values for SW_EXITINFO1[31:0], so really
    any non-zero value should be treated as an error.
    
    Fixes: 597cfe48212a ("x86/boot/compressed/64: Setup a GHCB-based VC Exception handler")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org> # 5.10+
    Link: https://lkml.kernel.org/r/efc772af831e9e7f517f0439b13b41f56bad8784.1633063321.git.thomas.lendacky@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df121cf550032175454e325d816af27b89cf0447
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Aug 3 13:35:25 2021 +0200

    x86/Kconfig: Correct reference to MWINCHIP3D
    
    commit 225bac2dc5d192e55f2c50123ee539b1edf8a411 upstream.
    
    Commit in Fixes intended to exclude the Winchip series and referred to
    CONFIG_WINCHIP3D, but the config symbol is called CONFIG_MWINCHIP3D.
    
    Hence, scripts/checkkconfigsymbols.py warns:
    
    WINCHIP3D
    Referencing files: arch/x86/Kconfig
    
    Correct the reference to the intended config symbol.
    
    Fixes: 69b8d3fcabdc ("x86/Kconfig: Exclude i586-class CPUs lacking PAE support from the HIGHMEM64G Kconfig group")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210803113531.30720-4-lukas.bulwahn@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7c36115fb8177e58a8aa99e79e7e076f6f07395
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Aug 3 13:35:24 2021 +0200

    x86/platform/olpc: Correct ifdef symbol to intended CONFIG_OLPC_XO15_SCI
    
    commit 4758fd801f919b8b9acad78d2e49a195ec2be46b upstream.
    
    The refactoring in the commit in Fixes introduced an ifdef
    CONFIG_OLPC_XO1_5_SCI, however the config symbol is actually called
    "CONFIG_OLPC_XO15_SCI".
    
    Fortunately, ./scripts/checkkconfigsymbols.py warns:
    
    OLPC_XO1_5_SCI
    Referencing files: arch/x86/platform/olpc/olpc.c
    
    Correct this ifdef condition to the intended config symbol.
    
    Fixes: ec9964b48033 ("Platform: OLPC: Move EC-specific functionality out from x86")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210803113531.30720-3-lukas.bulwahn@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f73ca4961d51304a8f1418a6b6b9d9c77ea95041
Author: Mahesh Salgaonkar <mahesh@linux.ibm.com>
Date:   Mon Sep 20 22:03:26 2021 +0530

    pseries/eeh: Fix the kdump kernel crash during eeh_pseries_init
    
    [ Upstream commit eb8257a12192f43ffd41bd90932c39dade958042 ]
    
    On pseries LPAR when an empty slot is assigned to partition OR in single
    LPAR mode, kdump kernel crashes during issuing PHB reset.
    
    In the kdump scenario, we traverse all PHBs and issue reset using the
    pe_config_addr of the first child device present under each PHB. However
    the code assumes that none of the PHB slots can be empty and uses
    list_first_entry() to get the first child device under the PHB. Since
    list_first_entry() expects the list to be non-empty, it returns an
    invalid pci_dn entry and ends up accessing NULL phb pointer under
    pci_dn->phb causing kdump kernel crash.
    
    This patch fixes the below kdump kernel crash by skipping empty slots:
    
      audit: initializing netlink subsys (disabled)
      thermal_sys: Registered thermal governor 'fair_share'
      thermal_sys: Registered thermal governor 'step_wise'
      cpuidle: using governor menu
      pstore: Registered nvram as persistent store backend
      Issue PHB reset ...
      audit: type=2000 audit(1631267818.000:1): state=initialized audit_enabled=0 res=1
      BUG: Kernel NULL pointer dereference on read at 0x00000268
      Faulting instruction address: 0xc000000008101fb0
      Oops: Kernel access of bad area, sig: 7 [#1]
      LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries
      Modules linked in:
      CPU: 7 PID: 1 Comm: swapper/7 Not tainted 5.14.0 #1
      NIP:  c000000008101fb0 LR: c000000009284ccc CTR: c000000008029d70
      REGS: c00000001161b840 TRAP: 0300   Not tainted  (5.14.0)
      MSR:  8000000002009033 <SF,VEC,EE,ME,IR,DR,RI,LE>  CR: 28000224  XER: 20040002
      CFAR: c000000008101f0c DAR: 0000000000000268 DSISR: 00080000 IRQMASK: 0
      ...
      NIP pseries_eeh_get_pe_config_addr+0x100/0x1b0
      LR  __machine_initcall_pseries_eeh_pseries_init+0x2cc/0x350
      Call Trace:
        0xc00000001161bb80 (unreliable)
        __machine_initcall_pseries_eeh_pseries_init+0x2cc/0x350
        do_one_initcall+0x60/0x2d0
        kernel_init_freeable+0x350/0x3f8
        kernel_init+0x3c/0x17c
        ret_from_kernel_thread+0x5c/0x64
    
    Fixes: 5a090f7c363fd ("powerpc/pseries: PCIE PHB reset")
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.ibm.com>
    [mpe: Tweak wording and trim oops]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/163215558252.413351.8600189949820258982.stgit@jupiter
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 411b38fe68ba20a8bbe724b0939762c3f16e16ca
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Oct 5 00:56:38 2021 +1000

    powerpc/64s: fix program check interrupt emergency stack path
    
    [ Upstream commit 3e607dc4df180b72a38e75030cb0f94d12808712 ]
    
    Emergency stack path was jumping into a 3: label inside the
    __GEN_COMMON_BODY macro for the normal path after it had finished,
    rather than jumping over it. By a small miracle this is the correct
    place to build up a new interrupt frame with the existing stack
    pointer, so things basically worked okay with an added weird looking
    700 trap frame on top (which had the wrong ->nip so it didn't decode
    bug messages either).
    
    Fix this by avoiding using numeric labels when jumping over non-trivial
    macros.
    
    Before:
    
     LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
     Modules linked in:
     CPU: 0 PID: 88 Comm: sh Not tainted 5.15.0-rc2-00034-ge057cdade6e5 #2637
     NIP:  7265677368657265 LR: c00000000006c0c8 CTR: c0000000000097f0
     REGS: c0000000fffb3a50 TRAP: 0700   Not tainted
     MSR:  9000000000021031 <SF,HV,ME,IR,DR,LE>  CR: 00000700  XER: 20040000
     CFAR: c0000000000098b0 IRQMASK: 0
     GPR00: c00000000006c964 c0000000fffb3cf0 c000000001513800 0000000000000000
     GPR04: 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299
     GPR08: 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8
     GPR12: 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001
     GPR16: 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8
     GPR20: 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158
     GPR24: 0000000002000000 0000000002000000 0000000000000255 0000000000000300
     GPR28: c000000001270000 0000000042000000 0000000048ab0778 c000000080647e80
     NIP [7265677368657265] 0x7265677368657265
     LR [c00000000006c0c8] ___do_page_fault+0x3f8/0xb10
     Call Trace:
     [c0000000fffb3cf0] [c00000000000bdac] soft_nmi_common+0x13c/0x1d0 (unreliable)
     --- interrupt: 700 at decrementer_common_virt+0xb8/0x230
     NIP:  c0000000000098b8 LR: c00000000006c0c8 CTR: c0000000000097f0
     REGS: c0000000fffb3d60 TRAP: 0700   Not tainted
     MSR:  9000000000021031 <SF,HV,ME,IR,DR,LE>  CR: 22424282  XER: 20040000
     CFAR: c0000000000098b0 IRQMASK: 0
     GPR00: c00000000006c964 0000000000002400 c000000001513800 0000000000000000
     GPR04: 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299
     GPR08: 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8
     GPR12: 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001
     GPR16: 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8
     GPR20: 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158
     GPR24: 0000000002000000 0000000002000000 0000000000000255 0000000000000300
     GPR28: c000000001270000 0000000042000000 0000000048ab0778 c000000080647e80
     NIP [c0000000000098b8] decrementer_common_virt+0xb8/0x230
     LR [c00000000006c0c8] ___do_page_fault+0x3f8/0xb10
     --- interrupt: 700
     Instruction dump:
     XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX
     XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX
     ---[ end trace 6d28218e0cc3c949 ]---
    
    After:
    
     ------------[ cut here ]------------
     kernel BUG at arch/powerpc/kernel/exceptions-64s.S:491!
     Oops: Exception in kernel mode, sig: 5 [#1]
     LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
     Modules linked in:
     CPU: 0 PID: 88 Comm: login Not tainted 5.15.0-rc2-00034-ge057cdade6e5-dirty #2638
     NIP:  c0000000000098b8 LR: c00000000006bf04 CTR: c0000000000097f0
     REGS: c0000000fffb3d60 TRAP: 0700   Not tainted
     MSR:  9000000000021031 <SF,HV,ME,IR,DR,LE>  CR: 24482227  XER: 00040000
     CFAR: c0000000000098b0 IRQMASK: 0
     GPR00: c00000000006bf04 0000000000002400 c000000001513800 c000000001271868
     GPR04: 00000000100f0d29 0000000042000000 0000000000000007 0000000000000009
     GPR08: 00000000100f0d29 0000000024482227 0000000000002710 c000000000181b3c
     GPR12: 9000000000009033 c0000000016b0000 00000000100f0d29 c000000005b22f00
     GPR16: 00000000ffff0000 0000000000000001 0000000000000009 00000000100eed90
     GPR20: 00000000100eed90 0000000010000000 000000001000a49c 00000000100f1430
     GPR24: c000000001271868 0000000002000000 0000000000000215 0000000000000300
     GPR28: c000000001271800 0000000042000000 00000000100f0d29 c000000080647860
     NIP [c0000000000098b8] decrementer_common_virt+0xb8/0x230
     LR [c00000000006bf04] ___do_page_fault+0x234/0xb10
     Call Trace:
     Instruction dump:
     4182000c 39400001 48000008 894d0932 714a0001 39400008 408225fc 718a4000
     7c2a0b78 3821fcf0 41c20008 e82d0910 <0981fcf0> f92101a0 f9610170 f9810178
     ---[ end trace a5dbd1f5ea4ccc51 ]---
    
    Fixes: 0a882e28468f4 ("powerpc/64s/exception: remove bad stack branch")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211004145642.1331214-2-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18a2a2cafcf93ece4bde3a4f0b76324a7bfc0872
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Wed Oct 6 01:55:23 2021 +0530

    powerpc/bpf: Fix BPF_SUB when imm == 0x80000000
    
    [ Upstream commit 5855c4c1f415ca3ba1046e77c0b3d3dfc96c9025 ]
    
    We aren't handling subtraction involving an immediate value of
    0x80000000 properly. Fix the same.
    
    Fixes: 156d0e290e969c ("powerpc/ebpf/jit: Implement JIT compiler for extended BPF")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    [mpe: Fold in fix from Naveen to use imm <= 32768]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/fc4b1276eb10761fd7ce0814c8dd089da2815251.1633464148.git.naveen.n.rao@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4037dded56bb82eb4fbb37b5bdbf18a55e2bb96
Author: Palmer Dabbelt <palmerdabbelt@google.com>
Date:   Sat Oct 2 17:21:20 2021 -0700

    RISC-V: Include clone3() on rv32
    
    [ Upstream commit 59a4e0d5511ba61353ea9a4efdb1b86c23ecf134 ]
    
    As far as I can tell this should be enabled on rv32 as well, I'm not
    sure why it's rv64-only.  checksyscalls is complaining about our lack of
    clone3() on rv32.
    
    Fixes: 56ac5e213933 ("riscv: enable sys_clone3 syscall for rv64")
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29fdb11ca88d3c490a3d56f0dc77eb9444d086be
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Mon Sep 27 15:06:14 2021 +0800

    bpf, s390: Fix potential memory leak about jit_data
    
    [ Upstream commit 686cb8b9f6b46787f035afe8fbd132a74e6b1bdd ]
    
    Make sure to free jit_data through kfree() in the error path.
    
    Fixes: 1c8f9b91c456 ("bpf: s390: add JIT support for multi-function programs")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Acked-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c152d9da8fed3cade515eb5249fab805c87d831
Author: Tong Tiangen <tongtiangen@huawei.com>
Date:   Wed Sep 1 02:46:21 2021 +0000

    riscv/vdso: make arch_setup_additional_pages wait for mmap_sem for write killable
    
    [ Upstream commit 8bb0ab3ae7a4dbe6cf32deb830cf2bdbf5736867 ]
    
    riscv architectures relying on mmap_sem for write in their
    arch_setup_additional_pages. If the waiting task gets killed by the oom
    killer it would block oom_reaper from asynchronous address space reclaim
    and reduce the chances of timely OOM resolving.  Wait for the lock in
    the killable mode and return with EINTR if the task got killed while
    waiting.
    
    Signed-off-by: Tong Tiangen <tongtiangen@huawei.com>
    Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Fixes: 76d2a0493a17 ("RISC-V: Init and Halt Code")
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de834e12b96d90d7edd1374c9b12a62baa8cdb9b
Author: Kewei Xu <kewei.xu@mediatek.com>
Date:   Fri Sep 17 18:14:14 2021 +0800

    i2c: mediatek: Add OFFSET_EXT_CONF setting back
    
    [ Upstream commit 3bce7703c7ba648bd9e174dc1413f422b7998833 ]
    
    In the commit be5ce0e97cc7 ("i2c: mediatek: Add i2c ac-timing adjust
    support"), we miss setting OFFSET_EXT_CONF register if
    i2c->dev_comp->timing_adjust is false, now add it back.
    
    Fixes: be5ce0e97cc7 ("i2c: mediatek: Add i2c ac-timing adjust support")
    Signed-off-by: Kewei Xu <kewei.xu@mediatek.com>
    Reviewed-by: Qii Wang <qii.wang@mediatek.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f86de018fd7a24ee07372d55ffa7824f0c674a95
Author: Jamie Iles <quic_jiles@quicinc.com>
Date:   Wed Sep 22 17:57:18 2021 +0100

    i2c: acpi: fix resource leak in reconfiguration device addition
    
    [ Upstream commit 6558b646ce1c2a872fe1c2c7cb116f05a2c1950f ]
    
    acpi_i2c_find_adapter_by_handle() calls bus_find_device() which takes a
    reference on the adapter which is never released which will result in a
    reference count leak and render the adapter unremovable.  Make sure to
    put the adapter after creating the client in the same manner that we do
    for OF.
    
    Fixes: 525e6fabeae2 ("i2c / ACPI: add support for ACPI reconfigure notifications")
    Signed-off-by: Jamie Iles <quic_jiles@quicinc.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    [wsa: fixed title]
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87990a60b45ff820e6ffb10d2f779892f400f7b5
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Thu Sep 30 13:44:54 2021 +1000

    powerpc/iommu: Report the correct most efficient DMA mask for PCI devices
    
    [ Upstream commit 23c216b335d1fbd716076e8263b54a714ea3cf0e ]
    
    According to dma-api.rst, the dma_get_required_mask() helper should return
    "the mask that the platform requires to operate efficiently". Which in
    the case of PPC64 means the bypass mask and not a mask from an IOMMU table
    which is shorter and slower to use due to map/unmap operations (especially
    expensive on "pseries").
    
    However the existing implementation ignores the possibility of bypassing
    and returns the IOMMU table mask on the pseries platform which makes some
    drivers (mpt3sas is one example) choose 32bit DMA even though bypass is
    supported. The powernv platform sort of handles it by having a bigger
    default window with a mask >=40 but it only works as drivers choose
    63/64bit if the required mask is >32 which is rather pointless.
    
    This reintroduces the bypass capability check to let drivers make
    a better choice of the DMA mask.
    
    Fixes: f1565c24b596 ("powerpc: use the generic dma_ops_bypass mode")
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210930034454.95794-1-aik@ozlabs.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 985cca1ad11ed9c84b3922c6f05aef2d11e13e76
Author: Mike Manning <mvrmanning@gmail.com>
Date:   Tue Oct 5 14:03:42 2021 +0100

    net: prefer socket bound to interface when not in VRF
    
    [ Upstream commit 8d6c414cd2fb74aa6812e9bfec6178f8246c4f3a ]
    
    The commit 6da5b0f027a8 ("net: ensure unbound datagram socket to be
    chosen when not in a VRF") modified compute_score() so that a device
    match is always made, not just in the case of an l3mdev skb, then
    increments the score also for unbound sockets. This ensures that
    sockets bound to an l3mdev are never selected when not in a VRF.
    But as unbound and bound sockets are now scored equally, this results
    in the last opened socket being selected if there are matches in the
    default VRF for an unbound socket and a socket bound to a dev that is
    not an l3mdev. However, handling prior to this commit was to always
    select the bound socket in this case. Reinstate this handling by
    incrementing the score only for bound sockets. The required isolation
    due to choosing between an unbound socket and a socket bound to an
    l3mdev remains in place due to the device match always being made.
    The same approach is taken for compute_score() for stream sockets.
    
    Fixes: 6da5b0f027a8 ("net: ensure unbound datagram socket to be chosen when not in a VRF")
    Fixes: e78190581aff ("net: ensure unbound stream socket to be chosen when not in a VRF")
    Signed-off-by: Mike Manning <mmanning@vyatta.att-mail.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/cf0a8523-b362-1edf-ee78-eef63cbbb428@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97aeed72af4f83ae51534f0a2473ff52f8d66236
Author: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
Date:   Fri Sep 24 11:40:41 2021 +0200

    i40e: Fix freeing of uninitialized misc IRQ vector
    
    [ Upstream commit 2e5a20573a926302b233b0c2e1077f5debc7ab2e ]
    
    When VSI set up failed in i40e_probe() as part of PF switch set up
    driver was trying to free misc IRQ vectors in
    i40e_clear_interrupt_scheme and produced a kernel Oops:
    
       Trying to free already-free IRQ 266
       WARNING: CPU: 0 PID: 5 at kernel/irq/manage.c:1731 __free_irq+0x9a/0x300
       Workqueue: events work_for_cpu_fn
       RIP: 0010:__free_irq+0x9a/0x300
       Call Trace:
       ? synchronize_irq+0x3a/0xa0
       free_irq+0x2e/0x60
       i40e_clear_interrupt_scheme+0x53/0x190 [i40e]
       i40e_probe.part.108+0x134b/0x1a40 [i40e]
       ? kmem_cache_alloc+0x158/0x1c0
       ? acpi_ut_update_ref_count.part.1+0x8e/0x345
       ? acpi_ut_update_object_reference+0x15e/0x1e2
       ? strstr+0x21/0x70
       ? irq_get_irq_data+0xa/0x20
       ? mp_check_pin_attr+0x13/0xc0
       ? irq_get_irq_data+0xa/0x20
       ? mp_map_pin_to_irq+0xd3/0x2f0
       ? acpi_register_gsi_ioapic+0x93/0x170
       ? pci_conf1_read+0xa4/0x100
       ? pci_bus_read_config_word+0x49/0x70
       ? do_pci_enable_device+0xcc/0x100
       local_pci_probe+0x41/0x90
       work_for_cpu_fn+0x16/0x20
       process_one_work+0x1a7/0x360
       worker_thread+0x1cf/0x390
       ? create_worker+0x1a0/0x1a0
       kthread+0x112/0x130
       ? kthread_flush_work_fn+0x10/0x10
       ret_from_fork+0x1f/0x40
    
    The problem is that at that point misc IRQ vectors
    were not allocated yet and we get a call trace
    that driver is trying to free already free IRQ vectors.
    
    Add a check in i40e_clear_interrupt_scheme for __I40E_MISC_IRQ_REQUESTED
    PF state before calling i40e_free_misc_vector. This state is set only if
    misc IRQ vectors were properly initialized.
    
    Fixes: c17401a1dd21 ("i40e: use separate state bit for miscellaneous IRQ setup")
    Reported-by: PJ Waskiewicz <pwaskiewicz@jumptrading.com>
    Signed-off-by: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dc768a98c9b83f33a2bc98a275bf4b352d946f1
Author: Jiri Benc <jbenc@redhat.com>
Date:   Tue Sep 14 10:54:42 2021 +0200

    i40e: fix endless loop under rtnl
    
    [ Upstream commit 857b6c6f665cca9828396d9743faf37fd09e9ac3 ]
    
    The loop in i40e_get_capabilities can never end. The problem is that
    although i40e_aq_discover_capabilities returns with an error if there's
    a firmware problem, the returned error is not checked. There is a check for
    pf->hw.aq.asq_last_status but that value is set to I40E_AQ_RC_OK on most
    firmware problems.
    
    When i40e_aq_discover_capabilities encounters a firmware problem, it will
    encounter the same problem on its next invocation. As the result, the loop
    becomes endless. We hit this with I40E_ERR_ADMIN_QUEUE_TIMEOUT but looking
    at the code, it can happen with a range of other firmware errors.
    
    I don't know what the correct behavior should be: whether the firmware
    should be retried a few times, or whether pf->hw.aq.asq_last_status should
    be always set to the encountered firmware error (but then it would be
    pointless and can be just replaced by the i40e_aq_discover_capabilities
    return value). However, the current behavior with an endless loop under the
    rtnl mutex(!) is unacceptable and Intel has not submitted a fix, although we
    explained the bug to them 7 months ago.
    
    This may not be the best possible fix but it's better than hanging the whole
    system on a firmware bug.
    
    Fixes: 56a62fc86895 ("i40e: init code and hardware support")
    Tested-by: Stefan Assmann <sassmann@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3a07ca78acecae90a7c8b1af7a26cbfc59ba2c8
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 5 18:01:38 2021 -0700

    gve: report 64bit tx_bytes counter from gve_handle_report_stats()
    
    [ Upstream commit 17c37d748f2b122a95b6d0524d410302ff89a2b1 ]
    
    Each tx queue maintains a 64bit counter for bytes, there is
    no reason to truncate this to 32bit (or this has not been
    documented)
    
    Fixes: 24aeb56f2d38 ("gve: Add Gvnic stats AQ command and ethtool show/set-priv-flags.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yangchun Fu <yangchun@google.com>
    Cc: Kuo Zhao <kuozhao@google.com>
    Cc: David Awogbemila <awogbemila@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35f6ddd934e6a2c9eb52a8bdf8fae72529c9a282
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 5 17:30:30 2021 -0700

    gve: fix gve_get_stats()
    
    [ Upstream commit 2f57d4975fa027eabd35fdf23a49f8222ef3abf2 ]
    
    gve_get_stats() can report wrong numbers if/when u64_stats_fetch_retry()
    returns true.
    
    What is needed here is to sample values in temporary variables,
    and only use them after each loop is ended.
    
    Fixes: f5cedc84a30d ("gve: Add transmit and receive support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Catherine Sullivan <csully@google.com>
    Cc: Sagi Shahar <sagis@google.com>
    Cc: Jon Olson <jonolson@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Cc: Luigi Rizzo <lrizzo@google.com>
    Cc: Jeroen de Borst <jeroendb@google.com>
    Cc: Tao Liu <xliutaox@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a043022522e7966f87c39fd6248cbf8fc617046
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 5 14:04:17 2021 -0700

    rtnetlink: fix if_nlmsg_stats_size() under estimation
    
    [ Upstream commit d34367991933d28bd7331f67a759be9a8c474014 ]
    
    rtnl_fill_statsinfo() is filling skb with one mandatory if_stats_msg structure.
    
    nlmsg_put(skb, pid, seq, type, sizeof(struct if_stats_msg), flags);
    
    But if_nlmsg_stats_size() never considered the needed storage.
    
    This bug did not show up because alloc_skb(X) allocates skb with
    extra tailroom, because of added alignments. This could very well
    be changed in the future to have deterministic behavior.
    
    Fixes: 10c9ead9f3c6 ("rtnetlink: add new RTM_GETSTATS message to dump link stats")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Roopa Prabhu <roopa@nvidia.com>
    Acked-by: Roopa Prabhu <roopa@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72c2a68f1d833d2793ee63c626c376a054e2dfe4
Author: Tao Liu <xliutaox@google.com>
Date:   Tue Oct 5 19:42:20 2021 -0700

    gve: Avoid freeing NULL pointer
    
    [ Upstream commit 922aa9bcac92b3ab6a423526a8e785b35a60b441 ]
    
    Prevent possible crashes when cleaning up after unsuccessful
    initializations.
    
    Fixes: 893ce44df5658 ("gve: Add basic driver framework for Compute Engine Virtual NIC")
    Signed-off-by: Tao Liu <xliutaox@google.com>
    Signed-off-by: Catherine Sully <csully@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d903a694b087f2aec9f18b0e0dedeeebd66f7af
Author: Catherine Sullivan <csully@google.com>
Date:   Tue Oct 5 19:42:19 2021 -0700

    gve: Correct available tx qpl check
    
    [ Upstream commit d03477ee10f4bc35d3573cf1823814378ef2dca2 ]
    
    The qpl_map_size is rounded up to a multiple of sizeof(long), but the
    number of qpls doesn't have to be.
    
    Fixes: f5cedc84a30d2 ("gve: Add transmit and receive support")
    Signed-off-by: Catherine Sullivan <csully@google.com>
    Signed-off-by: Jeroen de Borst <jeroendb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f69556a42043b5444ca712ee889829ba89fdcba8
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Sep 11 15:50:23 2021 +0800

    drm/nouveau/debugfs: fix file release memory leak
    
    [ Upstream commit f5a8703a9c418c6fc54eb772712dfe7641e3991c ]
    
    When using single_open() for opening, single_release() should be
    called, otherwise the 'op' allocated in single_open() will be leaked.
    
    Fixes: 6e9fc177399f ("drm/nouveau/debugfs: add copy of sysfs pstate interface ported to debugfs")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210911075023.3969054-2-yangyingliang@huawei.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65fff0a8efcdca8d84ffe3e23057c3b32403482d
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Sep 11 15:50:22 2021 +0800

    drm/nouveau/kms/nv50-: fix file release memory leak
    
    [ Upstream commit 0b3d4945cc7e7ea1acd52cb06dfa83bfe265b6d5 ]
    
    When using single_open() for opening, single_release() should be
    called, otherwise the 'op' allocated in single_open() will be leaked.
    
    Fixes: 12885ecbfe62 ("drm/nouveau/kms/nvd9-: Add CRC support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210911075023.3969054-1-yangyingliang@huawei.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f86e19d918a85492ad1a01fcdc0ad5ecbdac6f96
Author: Jeremy Cline <jcline@redhat.com>
Date:   Wed Dec 2 19:02:20 2020 -0500

    drm/nouveau: avoid a use-after-free when BO init fails
    
    [ Upstream commit bcf34aa5082ee2343574bc3f4d1c126030913e54 ]
    
    nouveau_bo_init() is backed by ttm_bo_init() and ferries its return code
    back to the caller. On failures, ttm_bo_init() invokes the provided
    destructor which should de-initialize and free the memory.
    
    Thus, when nouveau_bo_init() returns an error the gem object has already
    been released and the memory freed by nouveau_bo_del_ttm().
    
    Fixes: 019cbd4a4feb ("drm/nouveau: Initialize GEM object before TTM object")
    Cc: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201203000220.18238-1-jcline@redhat.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 008224cdc12628d21a3eb92259fa3aa3ea5b22a1
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Sep 21 22:21:02 2021 +0100

    video: fbdev: gbefb: Only instantiate device when built for IP32
    
    [ Upstream commit 11b8e2bb986d23157e82e267fb8cc6b281dfdee9 ]
    
    The gbefb driver not only registers a driver but also the device for that
    driver. This is all well and good when run on the IP32 machines that are
    supported by the driver but since the driver supports building with
    COMPILE_TEST we might also be building on other platforms which do not have
    this hardware and will crash instantiating the driver. Add an IS_ENABLED()
    check so we compile out the device registration if we don't have the Kconfig
    option for the machine enabled.
    
    Fixes: 552ccf6b259d290c0c ("video: fbdev: gbefb: add COMPILE_TEST support")
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210921212102.30803-1-broonie@kernel.org
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2ccbaaa6615332e4c28c6f99f54876414de1d1f
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Wed Sep 15 19:58:36 2021 +0200

    drm/sun4i: dw-hdmi: Fix HDMI PHY clock setup
    
    [ Upstream commit c64c8e04a12ed3e2238761e26cda78e72550dc98 ]
    
    Recent rework, which made HDMI PHY driver a platform device, inadvertely
    reversed clock setup order. HW is very touchy about it. Proper way is to
    handle controllers resets and clocks first and HDMI PHYs second.
    
    Currently, without this fix, first mode set completely fails (nothing on
    HDMI monitor) on H3 era PHYs. On H6, it still somehow work.
    
    Move HDMI PHY reset & clocks handling to sun8i_hdmi_phy_init() which
    will assure that code is executed after controllers reset & clocks are
    handled. Additionally, add sun8i_hdmi_phy_deinit() which will deinit
    them at controllers driver unload.
    
    Tested on A64, H3, H6 and R40.
    
    Fixes: 9bf3797796f5 ("drm/sun4i: dw-hdmi: Make HDMI PHY into a platform device")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210915175836.3158839-1-jernej.skrabec@gmail.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18d2568cc7ffb05537a503bd2852d414e51b4fe9
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Sep 8 08:49:36 2021 +0300

    bus: ti-sysc: Use CLKDM_NOAUTO for dra7 dcan1 for errata i893
    
    [ Upstream commit b13a270ace2e4c70653aa1d1d0394c553905802f ]
    
    Commit 94f6345712b3 ("bus: ti-sysc: Implement quirk handling for
    CLKDM_NOAUTO") should have also added the quirk for dra7 dcan1 in
    addition to dcan2 for errata i893 handling.
    
    Let's also pass the quirk flag for legacy mode booting for if "ti,hwmods"
    dts property is used with related dcan hwmod data. This should be only
    needed if anybody needs to git bisect earlier stable trees though.
    
    Fixes: 94f6345712b3 ("bus: ti-sysc: Implement quirk handling for CLKDM_NOAUTO")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40a84fcae2bf3003cc4f84ea8d6040838031f7ff
Author: John Garry <john.garry@huawei.com>
Date:   Thu Oct 22 19:02:26 2020 +0800

    perf jevents: Tidy error handling
    
    [ Upstream commit fa1b41a74d1136cbdd6960f36d7b9c7aa35c8139 ]
    
    There is much duplication in the error handling for directory transvering
    for prcessing JSONs.
    
    Factor out the common code to tidy a bit.
    
    Signed-off-by: John Garry <john.garry@huawei.com>
    Reviewed-By: Kajol Jain<kjain@linux.ibm.com>
    Link: https://lore.kernel.org/r/1603364547-197086-2-git-send-email-john.garry@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 628b31d96711ebacca39a961ee676861ec2d63d0
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 14:24:15 2021 -0700

    netlink: annotate data races around nlk->bound
    
    [ Upstream commit 7707a4d01a648e4c655101a469c956cb11273655 ]
    
    While existing code is correct, KCSAN is reporting
    a data-race in netlink_insert / netlink_sendmsg [1]
    
    It is correct to read nlk->bound without a lock, as netlink_autobind()
    will acquire all needed locks.
    
    [1]
    BUG: KCSAN: data-race in netlink_insert / netlink_sendmsg
    
    write to 0xffff8881031c8b30 of 1 bytes by task 18752 on cpu 0:
     netlink_insert+0x5cc/0x7f0 net/netlink/af_netlink.c:597
     netlink_autobind+0xa9/0x150 net/netlink/af_netlink.c:842
     netlink_sendmsg+0x479/0x7c0 net/netlink/af_netlink.c:1892
     sock_sendmsg_nosec net/socket.c:703 [inline]
     sock_sendmsg net/socket.c:723 [inline]
     ____sys_sendmsg+0x360/0x4d0 net/socket.c:2392
     ___sys_sendmsg net/socket.c:2446 [inline]
     __sys_sendmsg+0x1ed/0x270 net/socket.c:2475
     __do_sys_sendmsg net/socket.c:2484 [inline]
     __se_sys_sendmsg net/socket.c:2482 [inline]
     __x64_sys_sendmsg+0x42/0x50 net/socket.c:2482
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff8881031c8b30 of 1 bytes by task 18751 on cpu 1:
     netlink_sendmsg+0x270/0x7c0 net/netlink/af_netlink.c:1891
     sock_sendmsg_nosec net/socket.c:703 [inline]
     sock_sendmsg net/socket.c:723 [inline]
     __sys_sendto+0x2a8/0x370 net/socket.c:2019
     __do_sys_sendto net/socket.c:2031 [inline]
     __se_sys_sendto net/socket.c:2027 [inline]
     __x64_sys_sendto+0x74/0x90 net/socket.c:2027
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 18751 Comm: syz-executor.0 Not tainted 5.14.0-rc1-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: da314c9923fe ("netlink: Replace rhash_portid with bound")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 144715fbab1be6a2fbb0062ae2a33da6eeee7935
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Mon Oct 4 17:50:02 2021 -0400

    net: sfp: Fix typo in state machine debug string
    
    [ Upstream commit 25a9da6641f1f66006e93ddbefee13a437efa8c0 ]
    
    The string should be "tx_disable" to match the state enum.
    
    Fixes: 4005a7cb4f55 ("net: phy: sftp: print debug message with text, not numbers")
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ec73ffeef54596c32aff0e73fe60971b9c8b866
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 12:55:22 2021 -0700

    net/sched: sch_taprio: properly cancel timer from taprio_destroy()
    
    [ Upstream commit a56d447f196fa9973c568f54c0d76d5391c3b0c0 ]
    
    There is a comment in qdisc_create() about us not calling ops->reset()
    in some cases.
    
    err_out4:
            /*
             * Any broken qdiscs that would require a ops->reset() here?
             * The qdisc was never in action so it shouldn't be necessary.
             */
    
    As taprio sets a timer before actually receiving a packet, we need
    to cancel it from ops->destroy, just in case ops->reset has not
    been called.
    
    syzbot reported:
    
    ODEBUG: free active (active state 0) object type: hrtimer hint: advance_sched+0x0/0x9a0 arch/x86/include/asm/atomic64_64.h:22
    WARNING: CPU: 0 PID: 8441 at lib/debugobjects.c:505 debug_print_object+0x16e/0x250 lib/debugobjects.c:505
    Modules linked in:
    CPU: 0 PID: 8441 Comm: syz-executor813 Not tainted 5.14.0-rc6-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:debug_print_object+0x16e/0x250 lib/debugobjects.c:505
    Code: ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 af 00 00 00 48 8b 14 dd e0 d3 e3 89 4c 89 ee 48 c7 c7 e0 c7 e3 89 e8 5b 86 11 05 <0f> 0b 83 05 85 03 92 09 01 48 83 c4 18 5b 5d 41 5c 41 5d 41 5e c3
    RSP: 0018:ffffc9000130f330 EFLAGS: 00010282
    RAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000
    RDX: ffff88802baeb880 RSI: ffffffff815d87b5 RDI: fffff52000261e58
    RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815d25ee R11: 0000000000000000 R12: ffffffff898dd020
    R13: ffffffff89e3ce20 R14: ffffffff81653630 R15: dffffc0000000000
    FS:  0000000000f0d300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007ffb64b3e000 CR3: 0000000036557000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     __debug_check_no_obj_freed lib/debugobjects.c:987 [inline]
     debug_check_no_obj_freed+0x301/0x420 lib/debugobjects.c:1018
     slab_free_hook mm/slub.c:1603 [inline]
     slab_free_freelist_hook+0x171/0x240 mm/slub.c:1653
     slab_free mm/slub.c:3213 [inline]
     kfree+0xe4/0x540 mm/slub.c:4267
     qdisc_create+0xbcf/0x1320 net/sched/sch_api.c:1299
     tc_modify_qdisc+0x4c8/0x1a60 net/sched/sch_api.c:1663
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5571
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504
     netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340
     netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2403
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2457
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2486
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
    
    Fixes: 44d4775ca518 ("net/sched: sch_taprio: reset child qdiscs before freeing them")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Davide Caratti <dcaratti@redhat.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Acked-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60955b65bd6a7dca624dd36c9a77b3326a6851a6
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 18:05:08 2021 -0700

    net: bridge: fix under estimation in br_get_linkxstats_size()
    
    [ Upstream commit 0854a0513321cf70bea5fa483ebcaa983cc7c62e ]
    
    Commit de1799667b00 ("net: bridge: add STP xstats")
    added an additional nla_reserve_64bit() in br_fill_linkxstats(),
    but forgot to update br_get_linkxstats_size() accordingly.
    
    This can trigger the following in rtnl_stats_get()
    
            WARN_ON(err == -EMSGSIZE);
    
    Fixes: de1799667b00 ("net: bridge: add STP xstats")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vivien Didelot <vivien.didelot@gmail.com>
    Cc: Nikolay Aleksandrov <nikolay@nvidia.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c480d15190eba5a552aa66570dceeaba4863048b
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 18:05:07 2021 -0700

    net: bridge: use nla_total_size_64bit() in br_get_linkxstats_size()
    
    [ Upstream commit dbe0b88064494b7bb6a9b2aa7e085b14a3112d44 ]
    
    bridge_fill_linkxstats() is using nla_reserve_64bit().
    
    We must use nla_total_size_64bit() instead of nla_total_size()
    for corresponding data structure.
    
    Fixes: 1080ab95e3c7 ("net: bridge: add support for IGMP/MLD stats and export them via netlink")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Nikolay Aleksandrov <nikolay@nvidia.com>
    Cc: Vivien Didelot <vivien.didelot@gmail.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb8880680bdfde95aa4836807d81400f0a449117
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 28 15:49:40 2021 +0200

    ARM: imx6: disable the GIC CPU interface before calling stby-poweroff sequence
    
    [ Upstream commit 783f3db030563f7bcdfe2d26428af98ea1699a8e ]
    
    Any pending interrupt can prevent entering standby based power off state.
    To avoid it, disable the GIC CPU interface.
    
    Fixes: 8148d2136002 ("ARM: imx6: register pm_power_off handler if "fsl,pmic-stby-poweroff" is set")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b0035d1058a8535f99e57f55f6045bda08f81c6
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Sep 24 14:35:12 2021 +0200

    dt-bindings: drm/bridge: ti-sn65dsi86: Fix reg value
    
    [ Upstream commit b2d70c0dbf2731a37d1c7bcc86ab2387954d5f56 ]
    
    make dtbs_check:
    
        arch/arm64/boot/dts/qcom/sdm850-lenovo-yoga-c630.dt.yaml: bridge@2c: reg:0:0: 45 was expected
    
    According to the datasheet, the I2C address can be either 0x2c or 0x2d,
    depending on the ADDR control input.
    
    Fixes: e3896e6dddf0b821 ("dt-bindings: drm/bridge: Document sn65dsi86 bridge bindings")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Link: https://lore.kernel.org/r/08f73c2aa0d4e580303357dfae107d084d962835.1632486753.git.geert+renesas@glider.be
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10afd15972630267b01393ae1e133ee48ba814c7
Author: Michael Walle <michael@walle.cc>
Date:   Thu Oct 1 11:11:30 2020 +0200

    arm64: dts: ls1028a: add missing CAN nodes
    
    [ Upstream commit 04fa4f03e3533f51b4db19cb487435f5862a0514 ]
    
    The LS1028A has two FlexCAN controller. These are compatible with
    the ones from the LX2160A. Add the nodes.
    
    The first controller was tested on the Kontron sl28 board.
    
    Signed-off-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95ba03fb4cb12fb72f6c3d28a1d0388ad4ad9290
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Oct 1 19:20:33 2021 +0300

    ptp_pch: Load module automatically if ID matches
    
    [ Upstream commit 7cd8b1542a7ba0720c5a0a85ed414a122015228b ]
    
    The driver can't be loaded automatically because it misses
    module alias to be provided. Add corresponding MODULE_DEVICE_TABLE()
    call to the driver.
    
    Fixes: 863d08ece9bf ("supports eg20t ptp clock")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 442ea65d0ccb375588ee24027085ba121c9e0653
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Oct 2 11:04:09 2021 +0200

    powerpc/fsl/dts: Fix phy-connection-type for fm1mac3
    
    [ Upstream commit eed183abc0d3b8adb64fd1363b7cea7986cd58d6 ]
    
    Property phy-connection-type contains invalid value "sgmii-2500" per scheme
    defined in file ethernet-controller.yaml.
    
    Correct phy-connection-type value should be "2500base-x".
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 84e0f1c13806 ("powerpc/mpc85xx: Add MDIO bus muxing support to the board device tree(s)")
    Acked-by: Scott Wood <oss@buserror.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acff2d182c0768a713cee77442caeb07668bd68f
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Sep 30 14:22:39 2021 -0700

    net_sched: fix NULL deref in fifo_set_limit()
    
    [ Upstream commit 560ee196fe9e5037e5015e2cdb14b3aecb1cd7dc ]
    
    syzbot reported another NULL deref in fifo_set_limit() [1]
    
    I could repro the issue with :
    
    unshare -n
    tc qd add dev lo root handle 1:0 tbf limit 200000 burst 70000 rate 100Mbit
    tc qd replace dev lo parent 1:0 pfifo_fast
    tc qd change dev lo root handle 1:0 tbf limit 300000 burst 70000 rate 100Mbit
    
    pfifo_fast does not have a change() operation.
    Make fifo_set_limit() more robust about this.
    
    [1]
    BUG: kernel NULL pointer dereference, address: 0000000000000000
    PGD 1cf99067 P4D 1cf99067 PUD 7ca49067 PMD 0
    Oops: 0010 [#1] PREEMPT SMP KASAN
    CPU: 1 PID: 14443 Comm: syz-executor959 Not tainted 5.15.0-rc3-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:0x0
    Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.
    RSP: 0018:ffffc9000e2f7310 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: ffffffff8d6ecc00 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffff888024c27910 RDI: ffff888071e34000
    RBP: ffff888071e34000 R08: 0000000000000001 R09: ffffffff8fcfb947
    R10: 0000000000000001 R11: 0000000000000000 R12: ffff888024c27910
    R13: ffff888071e34018 R14: 0000000000000000 R15: ffff88801ef74800
    FS:  00007f321d897700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffffffffffffffd6 CR3: 00000000722c3000 CR4: 00000000003506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     fifo_set_limit net/sched/sch_fifo.c:242 [inline]
     fifo_set_limit+0x198/0x210 net/sched/sch_fifo.c:227
     tbf_change+0x6ec/0x16d0 net/sched/sch_tbf.c:418
     qdisc_change net/sched/sch_api.c:1332 [inline]
     tc_modify_qdisc+0xd9a/0x1a60 net/sched/sch_api.c:1634
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5572
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504
     netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340
     netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2409
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2463
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2492
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: fb0305ce1b03 ("net-sched: consolidate default fifo qdisc setup")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20210930212239.3430364-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d2dd40a7be61b89a7c99dae8ee96389d27b413a
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Sep 30 20:50:28 2021 +0300

    phy: mdio: fix memory leak
    
    [ Upstream commit ca6e11c337daf7925ff8a2aac8e84490a8691905 ]
    
    Syzbot reported memory leak in MDIO bus interface, the problem was in
    wrong state logic.
    
    MDIOBUS_ALLOCATED indicates 2 states:
            1. Bus is only allocated
            2. Bus allocated and __mdiobus_register() fails, but
               device_register() was called
    
    In case of device_register() has been called we should call put_device()
    to correctly free the memory allocated for this device, but mdiobus_free()
    calls just kfree(dev) in case of MDIOBUS_ALLOCATED state
    
    To avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED
    _before_ calling device_register(), because put_device() should be
    called even in case of device_register() failure.
    
    Link: https://lore.kernel.org/netdev/YVMRWNDZDUOvQjHL@shell.armlinux.org.uk/
    Fixes: 46abc02175b3 ("phylib: give mdio buses a device tree presence")
    Reported-and-tested-by: syzbot+398e7dc692ddbbb4cfec@syzkaller.appspotmail.com
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: https://lore.kernel.org/r/eceae1429fbf8fa5c73dd2a0d39d525aa905074d.1633024062.git.paskripkin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e6f79e39830708f05179cc2d18f552e5cd8c43b
Author: Moshe Shemesh <moshe@nvidia.com>
Date:   Thu Sep 23 17:57:47 2021 +0300

    net/mlx5: E-Switch, Fix double allocation of acl flow counter
    
    [ Upstream commit a586775f83bd729ad60b56352dbe067f4bb0beee ]
    
    Flow counter is allocated in eswitch legacy acl setting functions
    without checking if already allocated by previous setting. Add a check
    to avoid such double allocation.
    
    Fixes: 07bab9502641 ("net/mlx5: E-Switch, Refactor eswitch ingress acl codes")
    Fixes: ea651a86d468 ("net/mlx5: E-Switch, Refactor eswitch egress acl codes")
    Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d70cb6c77ad983f37a401fd29017da4546c57093
Author: Raed Salem <raeds@nvidia.com>
Date:   Thu Aug 26 17:07:17 2021 +0300

    net/mlx5e: IPSEC RX, enable checksum complete
    
    [ Upstream commit f9a10440f0b1f33faa792af26f4e9823a9b8b6a4 ]
    
    Currently in Rx data path IPsec crypto offloaded packets uses
    csum_none flag, so checksum is handled by the stack, this naturally
    have some performance/cpu utilization impact on such flows. As Nvidia
    NIC starting from ConnectX6DX provides checksum complete value out of
    the box also for such flows there is no sense in taking csum_none path,
    furthermore the stack (xfrm) have the method to handle checksum complete
    corrections for such flows i.e. IPsec trailer removal and consequently
    checksum value adjustment.
    
    Because of the above and in addition the ConnectX6DX is the first HW
    which supports IPsec crypto offload then it is safe to report csum
    complete for IPsec offloaded traffic.
    
    Fixes: b2ac7541e377 ("net/mlx5e: IPsec: Add Connect-X IPsec Rx data path offload")
    Signed-off-by: Raed Salem <raeds@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 064faa8e8a9b50f5010c5aa5740e06d477677a89
Author: Tatsuhiko Yasumatsu <th.yasumatsu@gmail.com>
Date:   Thu Sep 30 22:55:45 2021 +0900

    bpf: Fix integer overflow in prealloc_elems_and_freelist()
    
    [ Upstream commit 30e29a9a2bc6a4888335a6ede968b75cd329657a ]
    
    In prealloc_elems_and_freelist(), the multiplication to calculate the
    size passed to bpf_map_area_alloc() could lead to an integer overflow.
    As a result, out-of-bounds write could occur in pcpu_freelist_populate()
    as reported by KASAN:
    
    [...]
    [   16.968613] BUG: KASAN: slab-out-of-bounds in pcpu_freelist_populate+0xd9/0x100
    [   16.969408] Write of size 8 at addr ffff888104fc6ea0 by task crash/78
    [   16.970038]
    [   16.970195] CPU: 0 PID: 78 Comm: crash Not tainted 5.15.0-rc2+ #1
    [   16.970878] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    [   16.972026] Call Trace:
    [   16.972306]  dump_stack_lvl+0x34/0x44
    [   16.972687]  print_address_description.constprop.0+0x21/0x140
    [   16.973297]  ? pcpu_freelist_populate+0xd9/0x100
    [   16.973777]  ? pcpu_freelist_populate+0xd9/0x100
    [   16.974257]  kasan_report.cold+0x7f/0x11b
    [   16.974681]  ? pcpu_freelist_populate+0xd9/0x100
    [   16.975190]  pcpu_freelist_populate+0xd9/0x100
    [   16.975669]  stack_map_alloc+0x209/0x2a0
    [   16.976106]  __sys_bpf+0xd83/0x2ce0
    [...]
    
    The possibility of this overflow was originally discussed in [0], but
    was overlooked.
    
    Fix the integer overflow by changing elem_size to u64 from u32.
    
      [0] https://lore.kernel.org/bpf/728b238e-a481-eb50-98e9-b0f430ab01e7@gmail.com/
    
    Fixes: 557c0c6e7df8 ("bpf: convert stackmap to pre-allocation")
    Signed-off-by: Tatsuhiko Yasumatsu <th.yasumatsu@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210930135545.173698-1-th.yasumatsu@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5f4b27c3cfcf8be787035d61cf254b747257ac7
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Sep 30 11:30:03 2021 +0300

    soc: ti: omap-prm: Fix external abort for am335x pruss
    
    [ Upstream commit b232537074fcaf0c2837abbb217429c097bb7598 ]
    
    Starting with v5.15-rc1, we may now see some am335x beaglebone black
    device produce the following error on pruss probe:
    
    Unhandled fault: external abort on non-linefetch (0x1008) at 0xe0326000
    
    This has started with the enabling of pruss for am335x in the dts files.
    
    Turns out the is caused by the PRM reset handling not waiting for the
    reset bit to clear. To fix the issue, let's always wait for the reset
    bit to clear, even if there is a separate reset status register.
    
    We attempted to fix a similar issue for dra7 iva with a udelay() in
    commit effe89e40037 ("soc: ti: omap-prm: Fix occasional abort on reset
    deassert for dra7 iva"). There is no longer a need for the udelay()
    for dra7 iva reset either with the check added for reset bit clearing.
    
    Cc: Drew Fustini <pdp7pdp7@gmail.com>
    Cc: Grygorii Strashko <grygorii.strashko@ti.com>
    Cc: "H. Nikolaus Schaller" <hns@goldelico.com>
    Cc: Robert Nelson <robertcnelson@gmail.com>
    Cc: Yongqin Liu <yongqin.liu@linaro.org>
    Fixes: effe89e40037 ("soc: ti: omap-prm: Fix occasional abort on reset deassert for dra7 iva")
    Reported-by: Matti Vaittinen <mazziesaccount@gmail.com>
    Tested-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d8f4447e8c442f8d2aeabfd3653957015043179
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Tue Sep 28 11:13:10 2021 +0200

    bpf, arm: Fix register clobbering in div/mod implementation
    
    [ Upstream commit 79e3445b38e0cab94264a3894c0c3d57c930b97e ]
    
    On ARM CPUs that lack div/mod instructions, ALU32 BPF_DIV and BPF_MOD are
    implemented using a call to a helper function. Before, the emitted code
    for those function calls failed to preserve caller-saved ARM registers.
    Since some of those registers happen to be mapped to BPF registers, it
    resulted in eBPF register values being overwritten.
    
    This patch emits code to push and pop the remaining caller-saved ARM
    registers r2-r3 into the stack during the div/mod function call. ARM
    registers r0-r1 are used as arguments and return value, and those were
    already saved and restored correctly.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29a19eaeb29d57f4576cf57ccac5a2740f1384db
Author: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
Date:   Fri Sep 24 15:21:54 2021 +0300

    iwlwifi: pcie: add configuration of a Wi-Fi adapter on Dell XPS 15
    
    [ Upstream commit fe5c735d0d47b495be6753d6aea4f8f78c909a0a ]
    
    There is a Killer AX1650 2x2 Wi-Fi 6 and Bluetooth 5.1 wireless adapter
    found on Dell XPS 15 (9510) laptop, its configuration was present on
    Linux v5.7, however accidentally it has been removed from the list of
    supported devices, let's add it back.
    
    The problem is manifested on driver initialization:
    
      Intel(R) Wireless WiFi driver for Linux
      iwlwifi 0000:00:14.3: enabling device (0000 -> 0002)
      iwlwifi: No config found for PCI dev 43f0/1651, rev=0x354, rfid=0x10a100
      iwlwifi: probe of 0000:00:14.3 failed with error -22
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=213939
    Fixes: 3f910a25839b ("iwlwifi: pcie: convert all AX101 devices to the device tables")
    Cc: Julien Wajsberg <felash@gmail.com>
    Signed-off-by: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
    Acked-by: Luca Coelho <luca@coelho.fi>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210924122154.2376577-1-vladimir.zapolskiy@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b0132f73094d1f8d77ab20e02d7d2bf59c3496c
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Sep 27 09:46:33 2021 -0700

    xtensa: call irqchip_init only when CONFIG_USE_OF is selected
    
    [ Upstream commit 6489f8d0e1d93a3603d8dad8125797559e4cf2a2 ]
    
    During boot time kernel configured with OF=y but USE_OF=n displays the
    following warnings and hangs shortly after starting userspace:
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 0 at kernel/irq/irqdomain.c:695 irq_create_mapping_affinity+0x29/0xc0
    irq_create_mapping_affinity(, 6) called with NULL domain
    CPU: 0 PID: 0 Comm: swapper Not tainted 5.15.0-rc3-00001-gd67ed2510d28 #30
    Call Trace:
      __warn+0x69/0xc4
      warn_slowpath_fmt+0x6c/0x94
      irq_create_mapping_affinity+0x29/0xc0
      local_timer_setup+0x40/0x88
      time_init+0xb1/0xe8
      start_kernel+0x31d/0x3f4
      _startup+0x13b/0x13b
    ---[ end trace 1e6630e1c5eda35b ]---
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 0 at arch/xtensa/kernel/time.c:141 local_timer_setup+0x58/0x88
    error: can't map timer irq
    CPU: 0 PID: 0 Comm: swapper Tainted: G        W         5.15.0-rc3-00001-gd67ed2510d28 #30
    Call Trace:
      __warn+0x69/0xc4
      warn_slowpath_fmt+0x6c/0x94
      local_timer_setup+0x58/0x88
      time_init+0xb1/0xe8
      start_kernel+0x31d/0x3f4
      _startup+0x13b/0x13b
    ---[ end trace 1e6630e1c5eda35c ]---
    Failed to request irq 0 (timer)
    
    Fix that by calling irqchip_init only when CONFIG_USE_OF is selected and
    calling legacy interrupt controller init otherwise.
    
    Fixes: da844a81779e ("xtensa: add device trees support")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d288ed98314f31607832ba759f5fb1b90cd9e98
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Sep 24 20:29:51 2021 -0700

    xtensa: use CONFIG_USE_OF instead of CONFIG_OF
    
    [ Upstream commit d67ed2510d28a1eb33171010d35cf52178cfcbdd ]
    
    CONFIG_OF can be set by a randconfig or by a user -- without setting the
    early flattree option (OF_EARLY_FLATTREE).  This causes build errors.
    However, if randconfig or a user sets USE_OF in the Xtensa config,
    the right kconfig symbols are set to fix the build.
    
    Fixes these build errors:
    
    ../arch/xtensa/kernel/setup.c:67:19: error: ‘__dtb_start’ undeclared here (not in a function); did you mean ‘dtb_start’?
       67 | void *dtb_start = __dtb_start;
          |                   ^~~~~~~~~~~
    ../arch/xtensa/kernel/setup.c: In function 'xtensa_dt_io_area':
    ../arch/xtensa/kernel/setup.c:201:14: error: implicit declaration of function 'of_flat_dt_is_compatible'; did you mean 'of_machine_is_compatible'? [-Werror=implicit-function-declaration]
      201 |         if (!of_flat_dt_is_compatible(node, "simple-bus"))
    ../arch/xtensa/kernel/setup.c:204:18: error: implicit declaration of function 'of_get_flat_dt_prop' [-Werror=implicit-function-declaration]
      204 |         ranges = of_get_flat_dt_prop(node, "ranges", &len);
    ../arch/xtensa/kernel/setup.c:204:16: error: assignment to 'const __be32 *' {aka 'const unsigned int *'} from 'int' makes pointer from integer without a cast [-Werror=int-conversion]
      204 |         ranges = of_get_flat_dt_prop(node, "ranges", &len);
          |                ^
    ../arch/xtensa/kernel/setup.c: In function 'early_init_devtree':
    ../arch/xtensa/kernel/setup.c:228:9: error: implicit declaration of function 'early_init_dt_scan'; did you mean 'early_init_devtree'? [-Werror=implicit-function-declaration]
      228 |         early_init_dt_scan(params);
    ../arch/xtensa/kernel/setup.c:229:9: error: implicit declaration of function 'of_scan_flat_dt' [-Werror=implicit-function-declaration]
      229 |         of_scan_flat_dt(xtensa_dt_io_area, NULL);
    
    xtensa-elf-ld: arch/xtensa/mm/mmu.o:(.text+0x0): undefined reference to `xtensa_kio_paddr'
    
    Fixes: da844a81779e ("xtensa: add device trees support")
    Fixes: 6cb971114f63 ("xtensa: remap io area defined in device tree")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 997bec509a83aeb7f02a795c26ed0280f9a9ceab
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Sep 16 18:13:39 2021 +0300

    arm64: dts: qcom: pm8150: use qcom,pm8998-pon binding
    
    [ Upstream commit a153d317168aa3d61a204fadc85bac3995381d33 ]
    
    Change pm8150 to use the qcom,pm8998-pon compatible string for the pon
    in order to pass reboot mode properly.
    
    Fixes: 5101f22a5c37 ("arm64: dts: qcom: pm8150: Add base dts file")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Tested-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210916151341.1797512-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbca14abc11154683c9ebf534e6f23846a5318f4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Sep 20 14:23:44 2021 +0200

    ath5k: fix building with LEDS=m
    
    [ Upstream commit fb8c3a3c52400512fc8b3b61150057b888c30b0d ]
    
    Randconfig builds still show a failure for the ath5k driver,
    similar to the one that was fixed for ath9k earlier:
    
    WARNING: unmet direct dependencies detected for MAC80211_LEDS
      Depends on [n]: NET [=y] && WIRELESS [=y] && MAC80211 [=y] && (LEDS_CLASS [=m]=y || LEDS_CLASS [=m]=MAC80211 [=y])
      Selected by [m]:
      - ATH5K [=m] && NETDEVICES [=y] && WLAN [=y] && WLAN_VENDOR_ATH [=y] && (PCI [=y] || ATH25) && MAC80211 [=y]
    net/mac80211/led.c: In function 'ieee80211_alloc_led_names':
    net/mac80211/led.c:34:22: error: 'struct led_trigger' has no member named 'name'
       34 |         local->rx_led.name = kasprintf(GFP_KERNEL, "%srx",
          |                      ^
    
    Copying the same logic from my ath9k patch makes this one work
    as well, stubbing out the calls to the LED subsystem.
    
    Fixes: b64acb28da83 ("ath9k: fix build error with LEDS_CLASS=m")
    Fixes: 72cdab808714 ("ath9k: Do not select MAC80211_LEDS by default")
    Fixes: 3a078876caee ("ath5k: convert LED code to use mac80211 triggers")
    Link: https://lore.kernel.org/all/20210722105501.1000781-1-arnd@kernel.org/
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210920122359.353810-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8aef3824e9469445e748d00b89a9f18bb77cab03
Author: Long Li <longli@microsoft.com>
Date:   Mon Aug 30 16:13:27 2021 -0700

    PCI: hv: Fix sleep while in non-sleep context when removing child devices from the bus
    
    [ Upstream commit 41608b64b10b80fe00dd253cd8326ec8ad85930f ]
    
    In hv_pci_bus_exit, the code is holding a spinlock while calling
    pci_destroy_slot(), which takes a mutex.
    
    This is not safe for spinlock. Fix this by moving the children to be
    deleted to a list on the stack, and removing them after spinlock is
    released.
    
    Fixes: 94d22763207a ("PCI: hv: Fix a race condition when removing the device")
    
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Wei Liu <wei.liu@kernel.org>
    Cc: Dexuan Cui <decui@microsoft.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Rob Herring <robh@kernel.org>
    Cc: "Krzysztof Wilczyński" <kw@linux.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Michael Kelley <mikelley@microsoft.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/linux-hyperv/20210823152130.GA21501@kili/
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: Wei Liu <wei.liu@kernel.org>
    Link: https://lore.kernel.org/r/1630365207-20616-1-git-send-email-longli@linuxonhyperv.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9b838ae390e6867c62fd7330ddcc540350825d3
Author: Fabio Estevam <festevam@gmail.com>
Date:   Tue Sep 14 14:17:15 2021 -0300

    ARM: dts: imx6qdl-pico: Fix Ethernet support
    
    [ Upstream commit 450e7fe9b1b3c90eeed74a2fe0eeb13a7b57f3da ]
    
    Currently, it is no longer possible to retrieve a DHCP address
    on the imx6qdl-pico board.
    
    This issue has been exposed by commit f5d9aa79dfdf ("ARM: imx6q:
    remove clk-out fixup for the Atheros AR8031 and AR8035 PHYs").
    
    Fix it by describing the qca,clk-out-frequency property as suggested
    by the commit above.
    
    Fixes: 98670a0bb0ef14bbb3 ("ARM: dts: imx6qdl: Add imx6qdl-pico support")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e99ad4194a503bba830a148a8447b39a46299c0
Author: Marek Vasut <marex@denx.de>
Date:   Sun Sep 5 02:01:37 2021 +0200

    ARM: dts: imx: Fix USB host power regulator polarity on M53Menlo
    
    [ Upstream commit 5c187e2eb3f92daa38cb3d4ab45e1107ea34108e ]
    
    The MIC2025 switch input signal nEN is active low, describe it as such
    in the DT. The previous change to this regulator polarity was incorrectly
    influenced by broken quirks in gpiolib-of.c, which is now long fixed. So
    fix this regulator polarity setting here once and for all.
    
    Fixes: 3c3601cd6a6d3 ("ARM: dts: imx53: Update USB configuration on M53Menlo")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ba34cf0c16cbe381c9625b8133648036600012f
Author: Marek Vasut <marex@denx.de>
Date:   Sun Sep 5 02:00:48 2021 +0200

    ARM: dts: imx: Add missing pinctrl-names for panel on M53Menlo
    
    [ Upstream commit c8c1efe14a4aadcfe93a158b1272e48298d2de15 ]
    
    The panel already contains pinctrl-0 phandle, but it is missing
    the default pinctrl-names property, so the pin configuration is
    ignored. Fill in the missing pinctrl-names property, so the pin
    configuration is applied.
    
    Fixes: d81765d693db6 ("ARM: dts: imx53: Update LCD panel node on M53Menlo")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f977e97b2b9284b76af46ccf64ce6ceecf60144
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Sat Aug 28 15:02:02 2021 +0800

    soc: qcom: mdt_loader: Drop PT_LOAD check on hash segment
    
    [ Upstream commit 833d51d7c66d6708abbc02398892b96b950167b9 ]
    
    PT_LOAD type denotes that the segment should be loaded into the final
    firmware memory region.  Hash segment is not one such, because it's only
    needed for PAS init and shouldn't be in the final firmware memory region.
    That's why mdt_phdr_valid() explicitly reject non PT_LOAD segment and
    hash segment.  This actually makes the hash segment type check in
    qcom_mdt_read_metadata() unnecessary and redundant.  For a hash segment,
    it won't be loaded into firmware memory region anyway, due to the
    QCOM_MDT_TYPE_HASH check in mdt_phdr_valid(), even if it has a PT_LOAD
    type for some reason (misusing or abusing?).
    
    Some firmware files on Sony phones are such examples, e.g WCNSS firmware
    of Sony Xperia M4 Aqua phone.  The type of hash segment is just PT_LOAD.
    Drop the unnecessary hash segment type check in qcom_mdt_read_metadata()
    to fix firmware loading failure on these phones, while hash segment is
    still kept away from the final firmware memory region.
    
    Fixes: 498b98e93900 ("soc: qcom: mdt_loader: Support loading non-split images")
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Reviewed-by: Marijn Suijten <marijn.suijten@somainline.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210828070202.7033-1-shawn.guo@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14f52004bda51ce7695abada3470752a73fa6b60
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Aug 23 16:19:12 2021 +0300

    ARM: at91: pm: do not panic if ram controllers are not enabled
    
    [ Upstream commit 1605de1b3ca66e3eddbca4b3c353c13c26476fe2 ]
    
    In case PM is enabled but there is no RAM controller information
    in DT the code will panic. Avoid such scenarios by not initializing
    platform specific PM code in case RAM controller is not provided
    via DT.
    
    Reported-by: Eugen Hristev <eugen.hristev@microchip.com>
    Fixes: 827de1f123ba0 ("ARM: at91: remove at91_dt_initialize and machine init_early()")
    Fixes: 892e1f4a3ae58 ("ARM: at91: pm: add sama7g5 ddr phy controller")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/20210823131915.23857-2-claudiu.beznea@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d89a313a573953074e57fc42170dd32a315659c1
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Sun Aug 29 22:30:25 2021 +0200

    ARM: dts: qcom: apq8064: Use 27MHz PXO clock as DSI PLL reference
    
    [ Upstream commit f1db21c315f4b4f8c3fbea56aac500673132d317 ]
    
    The 28NM DSI PLL driver for msm8960 calculates with a 27MHz reference
    clock and should hence use PXO, not CXO which runs at 19.2MHz.
    
    Note that none of the DSI PHY/PLL drivers currently use this "ref"
    clock; they all rely on (sometimes inexistant) global clock names and
    usually function normally without a parent clock.  This discrepancy will
    be corrected in a future patch, for which this change needs to be in
    place first.
    
    Fixes: 6969d1d9c615 ("ARM: dts: qcom-apq8064: Set 'cxo_board' as ref clock of the DSI PHY")
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Link: https://lore.kernel.org/r/20210829203027.276143-2-marijn.suijten@somainline.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25ac88e601ebc7c44a5aa0a5fa094e59e53eaaae
Author: Antonio Martorana <amartora@codeaurora.org>
Date:   Mon Aug 16 17:24:39 2021 -0700

    soc: qcom: socinfo: Fixed argument passed to platform_set_data()
    
    [ Upstream commit 9c5a4ec69bbf5951f84ada9e0db9c6c50de61808 ]
    
    Set qcom_socinfo pointer as data being stored instead of pointer
    to soc_device structure. Aligns with future calls to platform_get_data()
    which expects qcom_socinfo pointer.
    
    Fixes: efb448d0a3fc ("soc: qcom: Add socinfo driver")
    Signed-off-by: Antonio Martorana <amartora@codeaurora.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/1629159879-95777-1-git-send-email-amartora@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab8073794be3316ae6928225dd795c657eb8b05a
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Sun Aug 15 12:18:52 2021 -0700

    bus: ti-sysc: Add break in switch statement in sysc_init_soc()
    
    [ Upstream commit e879f855e590b40fe3c79f2fbd8f65ca3c724120 ]
    
    After commit a6d90e9f2232 ("bus: ti-sysc: AM3: RNG is GP only"), clang
    with -Wimplicit-fallthrough enabled warns:
    
    drivers/bus/ti-sysc.c:2958:3: warning: unannotated fall-through between
    switch labels [-Wimplicit-fallthrough]
                    default:
                    ^
    drivers/bus/ti-sysc.c:2958:3: note: insert 'break;' to avoid
    fall-through
                    default:
                    ^
                    break;
    1 warning generated.
    
    Clang's version of this warning is a little bit more pedantic than
    GCC's. Add the missing break to satisfy it to match what has been done
    all over the kernel tree.
    
    Fixes: a6d90e9f2232 ("bus: ti-sysc: AM3: RNG is GP only")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 427faa29e06f0709476ea1bd59758f997ec8b64e
Author: Alexandre Ghiti <alex@ghiti.fr>
Date:   Sat Sep 18 18:02:21 2021 +0200

    riscv: Flush current cpu icache before other cpus
    
    commit bb8958d5dc79acbd071397abb57b8756375fe1ce upstream.
    
    On SiFive Unmatched, I recently fell onto the following BUG when booting:
    
    [    0.000000] ftrace: allocating 36610 entries in 144 pages
    [    0.000000] Oops - illegal instruction [#1]
    [    0.000000] Modules linked in:
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 5.13.1+ #5
    [    0.000000] Hardware name: SiFive HiFive Unmatched A00 (DT)
    [    0.000000] epc : riscv_cpuid_to_hartid_mask+0x6/0xae
    [    0.000000]  ra : __sbi_rfence_v02+0xc8/0x10a
    [    0.000000] epc : ffffffff80007240 ra : ffffffff80009964 sp : ffffffff81803e10
    [    0.000000]  gp : ffffffff81a1ea70 tp : ffffffff8180f500 t0 : ffffffe07fe30000
    [    0.000000]  t1 : 0000000000000004 t2 : 0000000000000000 s0 : ffffffff81803e60
    [    0.000000]  s1 : 0000000000000000 a0 : ffffffff81a22238 a1 : ffffffff81803e10
    [    0.000000]  a2 : 0000000000000000 a3 : 0000000000000000 a4 : 0000000000000000
    [    0.000000]  a5 : 0000000000000000 a6 : ffffffff8000989c a7 : 0000000052464e43
    [    0.000000]  s2 : ffffffff81a220c8 s3 : 0000000000000000 s4 : 0000000000000000
    [    0.000000]  s5 : 0000000000000000 s6 : 0000000200000100 s7 : 0000000000000001
    [    0.000000]  s8 : ffffffe07fe04040 s9 : ffffffff81a22c80 s10: 0000000000001000
    [    0.000000]  s11: 0000000000000004 t3 : 0000000000000001 t4 : 0000000000000008
    [    0.000000]  t5 : ffffffcf04000808 t6 : ffffffe3ffddf188
    [    0.000000] status: 0000000200000100 badaddr: 0000000000000000 cause: 0000000000000002
    [    0.000000] [<ffffffff80007240>] riscv_cpuid_to_hartid_mask+0x6/0xae
    [    0.000000] [<ffffffff80009474>] sbi_remote_fence_i+0x1e/0x26
    [    0.000000] [<ffffffff8000b8f4>] flush_icache_all+0x12/0x1a
    [    0.000000] [<ffffffff8000666c>] patch_text_nosync+0x26/0x32
    [    0.000000] [<ffffffff8000884e>] ftrace_init_nop+0x52/0x8c
    [    0.000000] [<ffffffff800f051e>] ftrace_process_locs.isra.0+0x29c/0x360
    [    0.000000] [<ffffffff80a0e3c6>] ftrace_init+0x80/0x130
    [    0.000000] [<ffffffff80a00f8c>] start_kernel+0x5c4/0x8f6
    [    0.000000] ---[ end trace f67eb9af4d8d492b ]---
    [    0.000000] Kernel panic - not syncing: Attempted to kill the idle task!
    [    0.000000] ---[ end Kernel panic - not syncing: Attempted to kill the idle task! ]---
    
    While ftrace is looping over a list of addresses to patch, it always failed
    when patching the same function: riscv_cpuid_to_hartid_mask. Looking at the
    backtrace, the illegal instruction is encountered in this same function.
    However, patch_text_nosync, after patching the instructions, calls
    flush_icache_range. But looking at what happens in this function:
    
    flush_icache_range -> flush_icache_all
                       -> sbi_remote_fence_i
                       -> __sbi_rfence_v02
                       -> riscv_cpuid_to_hartid_mask
    
    The icache and dcache of the current cpu are never synchronized between the
    patching of riscv_cpuid_to_hartid_mask and calling this same function.
    
    So fix this by flushing the current cpu's icache before asking for the other
    cpus to do the same.
    
    Signed-off-by: Alexandre Ghiti <alex@ghiti.fr>
    Fixes: fab957c11efe ("RISC-V: Atomic and Locking Code")
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05287407dedf5275ce2e98eb5cd0dd03922eb3cd
Author: David Heidelberg <david@ixit.cz>
Date:   Wed Aug 18 08:53:17 2021 +0200

    ARM: dts: qcom: apq8064: use compatible which contains chipid
    
    commit f5c03f131dae3f06d08464e6157dd461200f78d9 upstream.
    
    Also resolves these kernel warnings for APQ8064:
    adreno 4300000.adreno-3xx: Using legacy qcom,chipid binding!
    adreno 4300000.adreno-3xx: Use compatible qcom,adreno-320.2 instead.
    
    Tested on Nexus 7 2013, no functional changes.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Link: https://lore.kernel.org/r/20210818065317.19822-1-david@ixit.cz
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac06fe40e8896c96786b47857ddc50738a103f6e
Author: Michal Vokáč <michal.vokac@ysoft.com>
Date:   Wed Aug 18 09:02:08 2021 +0200

    ARM: dts: imx6dl-yapp4: Fix lp5562 LED driver probe
    
    commit 9b663b34c94a78f39fa2c7a8271b1f828b546e16 upstream.
    
    Since the LED multicolor framework support was added in commit
    92a81562e695 ("leds: lp55xx: Add multicolor framework support to lp55xx")
    LEDs on this platform stopped working.
    
    Author of the framework attempted to accommodate this DT to the
    framework in commit b86d3d21cd4c ("ARM: dts: imx6dl-yapp4: Add reg property
    to the lp5562 channel node") but that is not sufficient. A color property
    is now required even if the multicolor framework is not used, otherwise
    the driver probe fails:
    
      lp5562: probe of 1-0030 failed with error -22
    
    Add the color property to fix this.
    
    Fixes: 92a81562e695 ("leds: lp55xx: Add multicolor framework support to lp55xx")
    Cc: <stable@vger.kernel.org>
    Cc: linux-leds@vger.kernel.org
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71d3ce62ac88190c63eb470e86fe76fc7e19bb0f
Author: Roger Quadros <rogerq@kernel.org>
Date:   Thu Sep 2 12:58:28 2021 +0300

    ARM: dts: omap3430-sdp: Fix NAND device node
    
    commit 80d680fdccba214e8106dc1aa33de5207ad75394 upstream.
    
    Nand is on CS1 so reg properties first field should be 1 not 0.
    
    Fixes: 44e4716499b8 ("ARM: dts: omap3: Fix NAND device nodes")
    Cc: stable@vger.kernel.org # v4.6+
    Signed-off-by: Roger Quadros <rogerq@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9a855d1bcb2630db6163de363945c9c84feaa46
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Oct 5 15:34:33 2021 +0200

    xen/balloon: fix cancelled balloon action
    
    commit 319933a80fd4f07122466a77f93e5019d71be74c upstream.
    
    In case a ballooning action is cancelled the new kernel thread handling
    the ballooning might end up in a busy loop.
    
    Fix that by handling the cancelled action gracefully.
    
    While at it introduce a short wait for the BP_WAIT case.
    
    Cc: stable@vger.kernel.org
    Fixes: 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a workqueue")
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Tested-by: Jason Andryuk <jandryuk@gmail.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20211005133433.32008-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aac782ab0ab0fd0a8e507a6294359c2f5cf182d
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri Oct 1 09:59:21 2021 -0400

    SUNRPC: fix sign error causing rpcsec_gss drops
    
    commit 2ba5acfb34957e8a7fe47cd78c77ca88e9cc2b03 upstream.
    
    If sd_max is unsigned, then sd_max - GSS_SEQ_WIN is a very large number
    whenever sd_max is less than GSS_SEQ_WIN, and the comparison:
    
            seq_num <= sd->sd_max - GSS_SEQ_WIN
    
    in gss_check_seq_num is pretty much always true, even when that's
    clearly not what was intended.
    
    This was causing pynfs to hang when using krb5, because pynfs uses zero
    as the initial gss sequence number.  That's perfectly legal, but this
    logic error causes knfsd to drop the rpc in that case.  Out-of-order
    sequence IDs in the first GSS_SEQ_WIN (128) calls will also cause this.
    
    Fixes: 10b9d99a3dbb ("SUNRPC: Augment server-side rpcgss tracepoints")
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f174a208c4c7dae73b36db2ca84d06ee901ecb1
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Sep 30 15:44:41 2021 -0400

    nfsd4: Handle the NFSv4 READDIR 'dircount' hint being zero
    
    commit f2e717d655040d632c9015f19aa4275f8b16e7f2 upstream.
    
    RFC3530 notes that the 'dircount' field may be zero, in which case the
    recommendation is to ignore it, and only enforce the 'maxcount' field.
    In RFC5661, this recommendation to ignore a zero valued field becomes a
    requirement.
    
    Fixes: aee377644146 ("nfsd4: fix rd_dircount enforcement")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12d4b179022ac7d07aa263b46159779536b3c6a6
Author: Patrick Ho <Patrick.Ho@netapp.com>
Date:   Sat Aug 21 02:56:26 2021 -0400

    nfsd: fix error handling of register_pernet_subsys() in init_nfsd()
    
    commit 1d625050c7c2dd877e108e382b8aaf1ae3cfe1f4 upstream.
    
    init_nfsd() should not unregister pernet subsys if the register fails
    but should instead unwind from the last successful operation which is
    register_filesystem().
    
    Unregistering a failed register_pernet_subsys() call can result in
    a kernel GPF as revealed by programmatically injecting an error in
    register_pernet_subsys().
    
    Verified the fix handled failure gracefully with no lingering nfsd
    entry in /proc/filesystems.  This change was introduced by the commit
    bd5ae9288d64 ("nfsd: register pernet ops last, unregister first"),
    the original error handling logic was correct.
    
    Fixes: bd5ae9288d64 ("nfsd: register pernet ops last, unregister first")
    Cc: stable@vger.kernel.org
    Signed-off-by: Patrick Ho <Patrick.Ho@netapp.com>
    Acked-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bc2f315a215585f8bc07257542e67373c86e801
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Sep 27 11:23:57 2021 +0200

    ovl: fix IOCB_DIRECT if underlying fs doesn't support direct IO
    
    commit 1dc1eed46f9fa4cb8a07baa24fb44c96d6dd35c9 upstream.
    
    Normally the check at open time suffices, but e.g loop device does set
    IOCB_DIRECT after doing its own checks (which are not sufficent for
    overlayfs).
    
    Make sure we don't call the underlying filesystem read/write method with
    the IOCB_DIRECT if it's not supported.
    
    Reported-by: Huang Jianan <huangjianan@oppo.com>
    Fixes: 16914e6fc7e1 ("ovl: add ovl_read_iter()")
    Cc: <stable@vger.kernel.org> # v4.19
    Tested-by: Huang Jianan <huangjianan@oppo.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9763ffd4da217adfcbdcd519e9f434dfa3952fc3
Author: Zheng Liang <zhengliang6@huawei.com>
Date:   Fri Sep 24 09:16:27 2021 +0800

    ovl: fix missing negative dentry check in ovl_rename()
    
    commit a295aef603e109a47af355477326bd41151765b6 upstream.
    
    The following reproducer
    
      mkdir lower upper work merge
      touch lower/old
      touch lower/new
      mount -t overlay overlay -olowerdir=lower,upperdir=upper,workdir=work merge
      rm merge/new
      mv merge/old merge/new & unlink upper/new
    
    may result in this race:
    
    PROCESS A:
      rename("merge/old", "merge/new");
      overwrite=true,ovl_lower_positive(old)=true,
      ovl_dentry_is_whiteout(new)=true -> flags |= RENAME_EXCHANGE
    
    PROCESS B:
      unlink("upper/new");
    
    PROCESS A:
      lookup newdentry in new_upperdir
      call vfs_rename() with negative newdentry and RENAME_EXCHANGE
    
    Fix by adding the missing check for negative newdentry.
    
    Signed-off-by: Zheng Liang <zhengliang6@huawei.com>
    Fixes: e9be9d5e76e3 ("overlay filesystem")
    Cc: <stable@vger.kernel.org> # v3.18
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1500f0c83670294b786e0cbf62c15da23fae1a26
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Sep 24 11:28:51 2021 +0300

    mmc: sdhci-of-at91: replace while loop with read_poll_timeout
    
    commit 30d4b990ec644e8bd49ef0a2f074fabc0d189e53 upstream.
    
    Replace while loop with read_poll_timeout().
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210924082851.2132068-3-claudiu.beznea@microchip.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a0feae5f642258f6a217560a2d8f8a773e79cf0
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Sep 24 11:28:50 2021 +0300

    mmc: sdhci-of-at91: wait for calibration done before proceed
    
    commit af467fad78f03a42de8b72190f6a595366b870db upstream.
    
    Datasheet specifies that at the end of calibration the SDMMC_CALCR_EN
    bit will be cleared. No commands should be send before calibration is
    done.
    
    Fixes: dbdea70f71d67 ("mmc: sdhci-of-at91: fix CALCR register being rewritten")
    Fixes: 727d836a375ad ("mmc: sdhci-of-at91: add DT property to enable calibration on full reset")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210924082851.2132068-2-claudiu.beznea@microchip.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5cb3680b958ed3eb66504c0865f767d760cc9cd
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Tue Sep 28 09:36:52 2021 +0200

    mmc: meson-gx: do not use memcpy_to/fromio for dram-access-quirk
    
    commit 8a38a4d51c5055d0201542e5ea3c0cb287f6e223 upstream.
    
    The memory at the end of the controller only accepts 32bit read/write
    accesses, but the arm64 memcpy_to/fromio implementation only uses 64bit
    (which will be split into two 32bit access) and 8bit leading to incomplete
    copies to/from this memory when the buffer is not multiple of 8bytes.
    
    Add a local copy using writel/readl accesses to make sure we use the right
    memory access width.
    
    The switch to memcpy_to/fromio was done because of 285133040e6c
    ("arm64: Import latest memcpy()/memmove() implementation"), but using memcpy
    worked before since it mainly used 32bit memory acceses.
    
    Fixes: 103a5348c22c ("mmc: meson-gx: use memcpy_to/fromio for dram-access-quirk")
    Reported-by: Christian Hewitt <christianshewitt@gmail.com>
    Suggested-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Tested-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210928073652.434690-1-narmstrong@baylibre.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13d17cc717d58034a472353ab0e3a84fb675c678
Author: Jan Beulich <jbeulich@suse.com>
Date:   Wed Sep 22 12:17:48 2021 +0200

    xen/privcmd: fix error handling in mmap-resource processing
    
    commit e11423d6721dd63b23fb41ade5e8d0b448b17780 upstream.
    
    xen_pfn_t is the same size as int only on 32-bit builds (and not even
    on Arm32). Hence pfns[] can't be used directly to read individual error
    values returned from xen_remap_domain_mfn_array(); every other error
    indicator would be skipped/ignored on 64-bit.
    
    Fixes: 3ad0876554ca ("xen/privcmd: add IOCTL_PRIVCMD_MMAP_RESOURCE")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Link: https://lore.kernel.org/r/aa6d6a67-6889-338a-a910-51e889f792d5@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>

commit de1e8bd36ab4ba9a34911802f9c8f029621dcb67
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon Sep 6 10:56:28 2021 +1000

    drm/nouveau/kms/tu102-: delay enabling cursor until after assign_windows
    
    commit f732e2e34aa08493fdd762f3daa4e5f16bbf1e45 upstream.
    
    Prevent NVD core channel error code 67 occuring and hanging display,
    managed to reproduce on GA102 while testing suspend/resume scenarios.
    
    Required extension of earlier commit to fix interactions with EFI.
    
    Fixes: e78b1b545c6c ("drm/nouveau/kms/nv50: workaround EFI GOP window channel format differences")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Karol Herbst <kherbst@redhat.com>
    Cc: <stable@vger.kernel.org> # v5.12+
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210906005628.11499-2-skeggsb@gmail.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d4e9f27d20d73dd3f5b65b2febb4ef887b94b9b
Author: Xu Yang <xu.yang_2@nxp.com>
Date:   Tue Sep 28 19:16:39 2021 +0800

    usb: typec: tcpm: handle SRC_STARTUP state if cc changes
    
    commit 6d91017a295e9790eec02c4e43f020cdb55f5d98 upstream.
    
    TCPM for DRP should do the same action as SRC_ATTACHED when cc changes in
    SRC_STARTUP state. Otherwise, TCPM will transition to SRC_UNATTACHED state
    which is not satisfied with the Type-C spec.
    
    Per Type-C spec:
    DRP port should move to Unattached.SNK instead of Unattached.SRC if sink
    removed.
    
    Fixes: 4b4e02c83167 ("typec: tcpm: Move out of staging")
    cc: <stable@vger.kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Xu Yang <xu.yang_2@nxp.com>
    Link: https://lore.kernel.org/r/20210928111639.3854174-1-xu.yang_2@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feb3fe702a589ccf95ad5c5312db35462ab80733
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Sep 29 11:09:37 2021 +0200

    USB: cdc-acm: fix break reporting
    
    commit 58fc1daa4d2e9789b9ffc880907c961ea7c062cc upstream.
    
    A recent change that started reporting break events forgot to push the
    event to the line discipline, which meant that a detected break would
    not be reported until further characters had been receive (the port
    could even have been closed and reopened in between).
    
    Fixes: 08dff274edda ("cdc-acm: fix BREAK rx code path adding necessary calls")
    Cc: stable@vger.kernel.org
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210929090937.7410-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc8b3e838bdf343e3341df176fa7d8170ea5c691
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Sep 29 11:09:36 2021 +0200

    USB: cdc-acm: fix racy tty buffer accesses
    
    commit 65a205e6113506e69a503b61d97efec43fc10fd7 upstream.
    
    A recent change that started reporting break events to the line
    discipline caused the tty-buffer insertions to no longer be serialised
    by inserting events also from the completion handler for the interrupt
    endpoint.
    
    Completion calls for distinct endpoints are not guaranteed to be
    serialised. For example, in case a host-controller driver uses
    bottom-half completion, the interrupt and bulk-in completion handlers
    can end up running in parallel on two CPUs (high-and low-prio tasklets,
    respectively) thereby breaking the tty layer's single producer
    assumption.
    
    Fix this by holding the read lock also when inserting characters from
    the bulk endpoint.
    
    Fixes: 08dff274edda ("cdc-acm: fix BREAK rx code path adding necessary calls")
    Cc: stable@vger.kernel.org
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210929090937.7410-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3265b88e83b16c7be762fa5fb7e0632bce0002c
Author: Fabio Estevam <festevam@gmail.com>
Date:   Tue Sep 21 08:37:54 2021 -0300

    usb: chipidea: ci_hdrc_imx: Also search for 'phys' phandle
    
    commit 8253a34bfae3278baca52fc1209b7c29270486ca upstream.
    
    When passing 'phys' in the devicetree to describe the USB PHY phandle
    (which is the recommended way according to
    Documentation/devicetree/bindings/usb/ci-hdrc-usb2.txt) the
    following NULL pointer dereference is observed on i.MX7 and i.MX8MM:
    
    [    1.489344] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000098
    [    1.498170] Mem abort info:
    [    1.500966]   ESR = 0x96000044
    [    1.504030]   EC = 0x25: DABT (current EL), IL = 32 bits
    [    1.509356]   SET = 0, FnV = 0
    [    1.512416]   EA = 0, S1PTW = 0
    [    1.515569]   FSC = 0x04: level 0 translation fault
    [    1.520458] Data abort info:
    [    1.523349]   ISV = 0, ISS = 0x00000044
    [    1.527196]   CM = 0, WnR = 1
    [    1.530176] [0000000000000098] user address but active_mm is swapper
    [    1.536544] Internal error: Oops: 96000044 [#1] PREEMPT SMP
    [    1.542125] Modules linked in:
    [    1.545190] CPU: 3 PID: 7 Comm: kworker/u8:0 Not tainted 5.14.0-dirty #3
    [    1.551901] Hardware name: Kontron i.MX8MM N801X S (DT)
    [    1.557133] Workqueue: events_unbound deferred_probe_work_func
    [    1.562984] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO BTYPE=--)
    [    1.568998] pc : imx7d_charger_detection+0x3f0/0x510
    [    1.573973] lr : imx7d_charger_detection+0x22c/0x510
    
    This happens because the charger functions check for the phy presence
    inside the imx_usbmisc_data structure (data->usb_phy), but the chipidea
    core populates the usb_phy passed via 'phys' inside 'struct ci_hdrc'
    (ci->usb_phy) instead.
    
    This causes the NULL pointer dereference inside imx7d_charger_detection().
    
    Fix it by also searching for 'phys' in case 'fsl,usbphy' is not found.
    
    Tested on a imx7s-warp board.
    
    Fixes: 746f316b753a ("usb: chipidea: introduce imx7d USB charger detection")
    Cc: stable@vger.kernel.org
    Reported-by: Heiko Thiery <heiko.thiery@gmail.com>
    Tested-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Reviewed-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Acked-by: Peter Chen <peter.chen@kernel.org>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/20210921113754.767631-1-festevam@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16d728110bd76d1ebb4aad8bcf36596f7ce11be0
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Tue Sep 21 16:34:42 2021 +0200

    Partially revert "usb: Kconfig: using select for USB_COMMON dependency"
    
    commit 4d1aa9112c8e6995ef2c8a76972c9671332ccfea upstream.
    
    This reverts commit cb9c1cfc86926d0e86d19c8e34f6c23458cd3478 for
    USB_LED_TRIG.  This config symbol has bool type and enables extra code
    in usb_common itself, not a separate driver.  Enabling it should not
    force usb_common to be built-in!
    
    Fixes: cb9c1cfc8692 ("usb: Kconfig: using select for USB_COMMON dependency")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/20210921143442.340087-1-carnil@debian.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
