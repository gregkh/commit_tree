commit d2e4b66b4ef24aeecb0cdef7278aa00850461de9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 9 08:08:40 2017 +0100

    Linux 4.9.9

commit f2a0409a08502d64fbe3990354dff5902b08d2fb
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Sep 21 14:51:08 2016 +0100

    drm/i915/execlists: Reset RING registers upon resume
    
    commit bafb2f7d4755bf1571bd5e9a03b97f3fc4fe69ae upstream.
    
    There is a disparity in the context image saved to disk and our own
    bookkeeping - that is we presume the RING_HEAD and RING_TAIL match our
    stored ce->ring->tail value. However, as we emit WA_TAIL_DWORDS into the
    ring but may not tell the GPU about them, the GPU may be lagging behind
    our bookkeeping. Upon hibernation we do not save stolen pages, presuming
    that their contents are volatile. This means that although we start
    writing into the ring at tail, the GPU starts executing from its HEAD
    and there may be some garbage in between and so the GPU promptly hangs
    upon resume.
    
    Testcase: igt/gem_exec_suspend/basic-S4
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=96526
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20160921135108.29574-3-chris@chris-wilson.co.uk
    Cc: Eric Blau <eblau1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72cd604cfd864b06c5a10d2bb139b19825e0fcbc
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Feb 3 13:13:26 2017 -0800

    fs: break out of iomap_file_buffered_write on fatal signals
    
    commit d1908f52557b3230fbd63c0429f3b4b748bf2b6d upstream.
    
    Tetsuo has noticed that an OOM stress test which performs large write
    requests can cause the full memory reserves depletion.  He has tracked
    this down to the following path
    
            __alloc_pages_nodemask+0x436/0x4d0
            alloc_pages_current+0x97/0x1b0
            __page_cache_alloc+0x15d/0x1a0          mm/filemap.c:728
            pagecache_get_page+0x5a/0x2b0           mm/filemap.c:1331
            grab_cache_page_write_begin+0x23/0x40   mm/filemap.c:2773
            iomap_write_begin+0x50/0xd0             fs/iomap.c:118
            iomap_write_actor+0xb5/0x1a0            fs/iomap.c:190
            ? iomap_write_end+0x80/0x80             fs/iomap.c:150
            iomap_apply+0xb3/0x130                  fs/iomap.c:79
            iomap_file_buffered_write+0x68/0xa0     fs/iomap.c:243
            ? iomap_write_end+0x80/0x80
            xfs_file_buffered_aio_write+0x132/0x390 [xfs]
            ? remove_wait_queue+0x59/0x60
            xfs_file_write_iter+0x90/0x130 [xfs]
            __vfs_write+0xe5/0x140
            vfs_write+0xc7/0x1f0
            ? syscall_trace_enter+0x1d0/0x380
            SyS_write+0x58/0xc0
            do_syscall_64+0x6c/0x200
            entry_SYSCALL64_slow_path+0x25/0x25
    
    the oom victim has access to all memory reserves to make a forward
    progress to exit easier.  But iomap_file_buffered_write and other
    callers of iomap_apply loop to complete the full request.  We need to
    check for fatal signals and back off with a short write instead.
    
    As the iomap_apply delegates all the work down to the actor we have to
    hook into those.  All callers that work with the page cache are calling
    iomap_write_begin so we will check for signals there.  dax_iomap_actor
    has to handle the situation explicitly because it copies data to the
    userspace directly.  Other callers like iomap_page_mkwrite work on a
    single page or iomap_fiemap_actor do not allocate memory based on the
    given len.
    
    Fixes: 68a9f5e7007c ("xfs: implement iomap based buffered write path")
    Link: http://lkml.kernel.org/r/20170201092706.9966-2-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf9ab22c350d17af861681348273df5420ac182d
Author: Steve Wise <larrystevenwise@gmail.com>
Date:   Thu Dec 15 08:09:35 2016 -0800

    iw_cxgb4: set correct FetchBurstMax for QPs
    
    commit b414fa01c31318383ae29d9d23cb9ca4184bbd86 upstream.
    
    The current QP FetchBurstMax value is 256B, which
    is incorrect since a WR can exceed that value.  The
    result being a partial WR fetched by hardware, and
    a fatal "bad WR" error posted by the SGE.
    
    So bump the FetchBurstMax to 512B.
    
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13363b6988f60be9f75146a52476a5e8d55f503c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 31 19:03:21 2017 +0100

    x86/irq: Make irq activate operations symmetric
    
    commit aaaec6fc755447a1d056765b11b24d8ff2b81366 upstream.
    
    The recent commit which prevents double activation of interrupts unearthed
    interesting code in x86. The code (ab)uses irq_domain_activate_irq() to
    reconfigure an already activated interrupt. That trips over the prevention
    code now.
    
    Fix it by deactivating the interrupt before activating the new configuration.
    
    Fixes: 08d85f3ea99f1 "irqdomain: Avoid activating interrupts more than once"
    Reported-and-tested-by: Mike Galbraith <efault@gmx.de>
    Reported-and-tested-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1701311901580.3457@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e02136282296dbc90f3c88b1cc5202ec0d5ed9f1
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jan 17 16:00:48 2017 +0000

    irqdomain: Avoid activating interrupts more than once
    
    commit 08d85f3ea99f1eeafc4e8507936190e86a16ee8c upstream.
    
    Since commit f3b0946d629c ("genirq/msi: Make sure PCI MSIs are
    activated early"), we can end-up activating a PCI/MSI twice (once
    at allocation time, and once at startup time).
    
    This is normally of no consequences, except that there is some
    HW out there that may misbehave if activate is used more than once
    (the GICv3 ITS, for example, uses the activate callback
    to issue the MAPVI command, and the architecture spec says that
    "If there is an existing mapping for the EventID-DeviceID
    combination, behavior is UNPREDICTABLE").
    
    While this could be worked around in each individual driver, it may
    make more sense to tackle the issue at the core level. In order to
    avoid getting in that situation, let's have a per-interrupt flag
    to remember if we have already activated that interrupt or not.
    
    Fixes: f3b0946d629c ("genirq/msi: Make sure PCI MSIs are activated early")
    Reported-and-tested-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Link: http://lkml.kernel.org/r/1484668848-24361-1-git-send-email-marc.zyngier@arm.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6b0333baea0acbe792c22ac71a04e40e26a8398
Author: Matt Ranostay <matt.ranostay@konsulko.com>
Date:   Mon Jan 16 18:04:18 2017 -0800

    iio: health: max30100: fixed parenthesis around FIFO count check
    
    commit 828f84ee8f84710ea1818b3565add268bcb824c8 upstream.
    
    FIFO was being read every sample after the "almost full" state was
    reached. This was due to an incorrect placement of the parenthesis
    in the while condition check.
    
    Note - the fixes tag is not actually correct, but the fix in this patch
    would also be needed for it to function correctly so we'll go with that
    one.  Backports should pick up both.
    
    Signed-off-by: Matt Ranostay <matt@ranostay.consulting>
    Fixes: b74fccad7 ("iio: health: max30100: correct FIFO check condition")
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12c2fcf6bcf7da2d861ab0fe36550e39dd783ff9
Author: John Brooks <john@fastquake.com>
Date:   Wed Jan 18 21:50:39 2017 +0000

    iio: dht11: Use usleep_range instead of msleep for start signal
    
    commit 5c113b5e0082e90d2e1c7b12e96a7b8cf0623e27 upstream.
    
    The DHT22 (AM2302) datasheet specifies that the LOW start pulse should not
    exceed 20ms. However, observations with an oscilloscope of an RPi Model 2B
    (rev 1.1) communicating with a DHT22 sensor showed that the driver was
    consistently sending start pulses longer than 20ms:
    
    Kernel 4.7.10-v7+ (n=132):
        Minimum pulse length: 20.20ms
        Maximum:              29.84ms
        Mean:                 24.96ms
        StDev:                2.82ms
        Sensor response rate: 100%
        Read success rate:    76%
    
    On kernel 4.8, the start pulse was so long that the sensor would not even
    respond 97% of the time:
    
    Kernel 4.8.16-v7+ (n=100):
        Minimum pulse length: 30.4ms
        Maximum:              74.4ms
        Mean:                 39.3ms
        StDev:                10.2ms
        Sensor response rate: 3%
        Read success rate:    3%
    
    The driver would return ETIMEDOUT and write log messages like this:
    
    [   51.430987] dht11 dht11@0: Only 1 signal edges detected
    [   66.311019] dht11 dht11@0: Only 0 signal edges detected
    
    Replacing msleep(18) with usleep_range(18000, 20000) made the pulse length
    sane again and restored responsiveness:
    
    Kernel 4.8.16-v7+ with usleep_range (n=123):
        Minimum pulse length: 18.16ms
        Maximum:              20.20ms
        Mean:                 19.85ms
        StDev:                0.51ms
        Sensor response rate: 100%
        Read success rate:    84%
    
    Signed-off-by: John Brooks <john@fastquake.com>
    Reviewed-by: Harald Geyer <harald@ccbib.org>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7baa8491d47d5ad70a22481fbea1913e4b1a746a
Author: Alison Schofield <amsfield22@gmail.com>
Date:   Sat Jan 14 19:51:52 2017 -0800

    iio: health: afe4403: retrieve a valid iio_dev in suspend/resume
    
    commit a5badd1e97e6caeca78ad74191f12fc923c403a8 upstream.
    
    The suspend/resume functions were using dev_to_iio_dev() to get
    the iio_dev. That only works on IIO dev's.  Replace it with spi
    functions to get the correct iio_dev.
    
    Signed-off-by: Alison Schofield <amsfield22@gmail.com>
    Acked-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f0ee562605b4290959675830273d5485616d0cd
Author: Alison Schofield <amsfield22@gmail.com>
Date:   Sat Jan 14 19:52:50 2017 -0800

    iio: health: afe4404: retrieve a valid iio_dev in suspend/resume
    
    commit 802ecfc113df1e15af1d028427cbbe785ae9cc4a upstream.
    
    The suspend/resume functions were using dev_to_iio_dev() to get
    the iio_dev. That only works on IIO dev's.  Replace it with i2c
    functions to get the correct iio_dev.
    
    Signed-off-by: Alison Schofield <amsfield22@gmail.com>
    Acked-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54d2ccc4003b7ec3378349df62b1642a2a4aa51c
Author: Alison Schofield <amsfield22@gmail.com>
Date:   Mon Jan 16 11:27:52 2017 -0800

    iio: adc: palmas_gpadc: retrieve a valid iio_dev in suspend/resume
    
    commit d1aaf20ee655888c227d5137b7a63551f8d15416 upstream.
    
    The suspend/resume functions were using dev_to_iio_dev() to get
    the iio_dev. That only works on IIO dev's.  Use dev_get_drvdata()
    for a platform device to get the correct iio_dev.
    
    Signed-off-by: Alison Schofield <amsfield22@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db0e02ef6b821a42f7270ceaa61e800399d0950c
Author: Rui Miguel Silva <rmfrfs@gmail.com>
Date:   Mon Jan 23 16:32:57 2017 +0000

    staging: greybus: timesync: validate platform state callback
    
    commit b17c1bba9cec1727451b906d9a0c209774624873 upstream.
    
    When tearingdown timesync, and not in arche platform, the state platform
    callback is not initialized. That will trigger the following NULL
    dereferencing.
    CallTrace:
    
     ? gb_timesync_platform_unlock_bus+0x11/0x20 [greybus]
     gb_timesync_teardown+0x85/0xc0 [greybus]
     gb_timesync_svc_remove+0xab/0x190 [greybus]
     gb_svc_del+0x29/0x110 [greybus]
     gb_hd_del+0x14/0x20 [greybus]
     ap_disconnect+0x24/0x60 [gb_es2]
     usb_unbind_interface+0x7a/0x2c0
     __device_release_driver+0x96/0x150
     device_release_driver+0x1e/0x30
     bus_remove_device+0xe7/0x130
     device_del+0x116/0x230
     usb_disable_device+0x97/0x1f0
     usb_disconnect+0x80/0x260
     hub_event+0x5ca/0x10e0
     process_one_work+0x126/0x3b0
     worker_thread+0x55/0x4c0
     ? process_one_work+0x3b0/0x3b0
     kthread+0xc4/0xe0
     ? kthread_park+0xb0/0xb0
     ret_from_fork+0x22/0x30
    
    So, fix that by adding checks before use the callback.
    
    Fixes: 970dc85bd95d ("greybus: timesync: Add timesync core driver")
    Signed-off-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89cc65c1117f8c5a44439706eb2dce51b0491266
Author: Bjørn Mork <bjorn@mork.no>
Date:   Tue Jan 24 10:31:18 2017 +0100

    USB: serial: option: add device ID for HP lt2523 (Novatel E371)
    
    commit 5d03a2fd2292e71936c4235885c35ccc3c94695b upstream.
    
    Yet another laptop vendor rebranded Novatel E371.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12a9c11c2e198ae879a321f8c3b5a2df73f8424f
Author: Vincent Pelletier <plr.vincent@gmail.com>
Date:   Wed Jan 18 00:57:44 2017 +0000

    usb: gadget: f_fs: Assorted buffer overflow checks.
    
    commit 83e526f2a2fa4b2e82b6bd3ddbb26b70acfa8947 upstream.
    
    OS descriptor head, when flagged as provided, is accessed without
    checking if it fits in provided buffer. Verify length before access.
    Also, there are other places where buffer length it checked
    after accessing offsets which are potentially past the end. Check
    buffer length before as well to fail cleanly.
    
    Signed-off-by: Vincent Pelletier <plr.vincent@gmail.com>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e40d15fce9293acc04db76546edc2689780961af
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Jan 24 09:18:57 2017 -0600

    usb: musb: Fix host mode error -71 regression
    
    commit 407788b51db6f6aab499d02420082f436abf3238 upstream.
    
    Commit 467d5c980709 ("usb: musb: Implement session bit based runtime PM for
    musb-core") started implementing musb generic runtime PM support by
    introducing devctl register session bit based state control.
    
    This caused a regression where if a USB mass storage device is connected
    to a USB hub, we can get:
    
    usb 1-1: reset high-speed USB device number 2 using musb-hdrc
    usb 1-1: device descriptor read/64, error -71
    usb 1-1.1: new high-speed USB device number 4 using musb-hdrc
    
    This is because before the USB storage device is connected, musb is
    in OTG_STATE_A_SUSPEND. And we currently only set need_finish_resume
    in musb_stage0_irq() and the related code calling finish_resume_work
    in musb_resume() and musb_runtime_resume() never gets called.
    
    To fix the issue, we can call schedule_delayed_work() directly in
    musb_stage0_irq() to have finish_resume_work run.
    
    And we should no longer never get interrupts when when suspended.
    We have changed musb to no longer need pm_runtime_irqsafe().
    The need_finish_resume flag was added in commit 9298b4aad37e ("usb:
    musb: fix device hotplug behind hub") and no longer applies as far
    as I can tell. So let's just remove the earlier code that no longer
    is needed.
    
    Fixes: 467d5c980709 ("usb: musb: Implement session bit based runtime PM for musb-core")
    Reported-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbd819e7db3a00630e9a0eecd5f3245e937bde98
Author: Lukáš Lalinský <lukas@oxygene.sk>
Date:   Fri Jan 20 19:46:34 2017 +0100

    USB: Add quirk for WORLDE easykey.25 MIDI keyboard
    
    commit d9b2997e4a0a874e452df7cdd7de5a54502bd0aa upstream.
    
    Add a quirk for WORLDE easykey.25 MIDI keyboard (idVendor=0218,
    idProduct=0401). The device reports that it has config string
    descriptor at index 3, but when the system selects the configuration
    and tries to get the description, it returns a -EPROTO error,
    the communication restarts and this keeps repeating over and over again.
    Not requesting the string descriptor makes the device work correctly.
    
    Relevant info from Wireshark:
    
    [...]
    
    CONFIGURATION DESCRIPTOR
        bLength: 9
        bDescriptorType: 0x02 (CONFIGURATION)
        wTotalLength: 101
        bNumInterfaces: 2
        bConfigurationValue: 1
        iConfiguration: 3
        Configuration bmAttributes: 0xc0  SELF-POWERED  NO REMOTE-WAKEUP
            1... .... = Must be 1: Must be 1 for USB 1.1 and higher
            .1.. .... = Self-Powered: This device is SELF-POWERED
            ..0. .... = Remote Wakeup: This device does NOT support remote wakeup
        bMaxPower: 50  (100mA)
    
    [...]
    
         45 0.369104       host                  2.38.0                USB      64     GET DESCRIPTOR Request STRING
    
    [...]
    
    URB setup
        bmRequestType: 0x80
            1... .... = Direction: Device-to-host
            .00. .... = Type: Standard (0x00)
            ...0 0000 = Recipient: Device (0x00)
        bRequest: GET DESCRIPTOR (6)
        Descriptor Index: 0x03
        bDescriptorType: 0x03
        Language Id: English (United States) (0x0409)
        wLength: 255
    
         46 0.369255       2.38.0                host                  USB      64     GET DESCRIPTOR Response STRING[Malformed Packet]
    
    [...]
    
    Frame 46: 64 bytes on wire (512 bits), 64 bytes captured (512 bits) on interface 0
    USB URB
        [Source: 2.38.0]
        [Destination: host]
        URB id: 0xffff88021f62d480
        URB type: URB_COMPLETE ('C')
        URB transfer type: URB_CONTROL (0x02)
        Endpoint: 0x80, Direction: IN
        Device: 38
        URB bus id: 2
        Device setup request: not relevant ('-')
        Data: present (0)
        URB sec: 1484896277
        URB usec: 455031
        URB status: Protocol error (-EPROTO) (-71)
        URB length [bytes]: 0
        Data length [bytes]: 0
        [Request in: 45]
        [Time from request: 0.000151000 seconds]
        Unused Setup Header
        Interval: 0
        Start frame: 0
        Copy of Transfer Flags: 0x00000200
        Number of ISO descriptors: 0
    [Malformed Packet: USB]
        [Expert Info (Error/Malformed): Malformed Packet (Exception occurred)]
            [Malformed Packet (Exception occurred)]
            [Severity level: Error]
            [Group: Malformed]
    
    Signed-off-by: Lukáš Lalinský <lukas@oxygene.sk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4807725aab0bf4ed66e0680f41c7e7666084cb8f
Author: Marcel J.E. Mol <marcel@mesa.nl>
Date:   Mon Jan 30 19:26:40 2017 +0100

    USB: serial: pl2303: add ATEN device ID
    
    commit d07830db1bdb254e4b50d366010b219286b8c937 upstream.
    
    Seems that ATEN serial-to-usb devices using pl2303 exist with
    different device ids. This patch adds a missing device ID so it
    is recognised by the driver.
    
    Signed-off-by: Marcel J.E. Mol <marcel@mesa.nl>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bc382a9652bc17277caf2c3d9dad6d0b55bb7db
Author: Aleksander Morgado <aleksander@aleksander.es>
Date:   Wed Jan 18 21:31:31 2017 +0100

    USB: serial: qcserial: add Dell DW5570 QDL
    
    commit 24d615a694d649aa2e167c3f97f62bdad07e3f84 upstream.
    
    The Dell DW5570 is a re-branded Sierra Wireless MC8805 which will by
    default boot with vid 0x413c and pid 0x81a3. When triggered QDL download
    mode, the device switches to pid 0x81a6 and provides the standard TTY
    used for firmware upgrade.
    
    Signed-off-by: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dcbd0aa44e6b2aa725175dd5933cb706fb1e2c5
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Wed Feb 1 14:19:53 2017 +0100

    KVM: x86: do not save guest-unsupported XSAVE state
    
    commit 00c87e9a70a17b355b81c36adedf05e84f54e10d upstream.
    
    Saving unsupported state prevents migration when the new host does not
    support a XSAVE feature of the original host, even if the feature is not
    exposed to the guest.
    
    We've masked host features with guest-visible features before, with
    4344ee981e21 ("KVM: x86: only copy XSAVE state for the supported
    features") and dropped it when implementing XSAVES.  Do it again.
    
    Fixes: df1daba7d1cb ("KVM: x86: support XSAVES usage in the host")
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc05a2e940fe96fbacf879e73139d8a66c39ab8e
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Jan 19 08:49:08 2017 -0800

    dmaengine: cppi41: Fix oops in cppi41_runtime_resume
    
    commit 362f4562466c3b9490e733e06999025638310d4a upstream.
    
    Commit fdea2d09b997 ("dmaengine: cppi41: Add basic PM runtime support")
    together with recent MUSB changes allowed USB and DMA on BeagleBone to idle
    when no cable is connected. But looks like few corner case issues still
    remain.
    
    Looks like just by re-plugging USB cable about ten or so times on BeagleBone
    when configured in USB peripheral mode we can get warnings and eventually
    trigger an oops in cppi41 DMA:
    
    WARNING: CPU: 0 PID: 14 at drivers/dma/cppi41.c:1154 cppi41_runtime_suspend+
    x28/0x38 [cppi41]
    ...
    
    WARNING: CPU: 0 PID: 14 at drivers/dma/cppi41.c:452
    push_desc_queue+0x94/0x9c [cppi41]
    ...
    
    Unable to handle kernel NULL pointer dereference at virtual
    address 00000104
    pgd = c0004000
    [00000104] *pgd=00000000
    Internal error: Oops: 805 [#1] SMP ARM
    ...
    [<bf0d92cc>] (cppi41_runtime_resume [cppi41]) from [<c0589838>]
    (__rpm_callback+0xc0/0x214)
    [<c0589838>] (__rpm_callback) from [<c05899ac>] (rpm_callback+0x20/0x80)
    [<c05899ac>] (rpm_callback) from [<c0589460>] (rpm_resume+0x504/0x78c)
    [<c0589460>] (rpm_resume) from [<c058a1a0>] (pm_runtime_work+0x60/0xa8)
    [<c058a1a0>] (pm_runtime_work) from [<c0156120>] (process_one_work+0x2b4/0x808)
    
    This is because of a race with runtime PM and cppi41_dma_issue_pending()
    as reported by Alexandre Bailon <abailon@baylibre.com> in earlier
    set of patches. Based on mailing list discussions we however came to the
    conclusion that a different fix from Alexandre's fix is needed in order
    to guarantee that DMA is really active when we try to use it.
    
    To fix the issue, we need to add a driver specific flag as we otherwise
    can have -EINPROGRESS state set by runtime PM and can't rely on
    pm_runtime_active() to tell us when we can use the DMA.
    
    And we need to make sure the DMA transfers get triggered in the queued
    order. So let's always queue the transfers, then flush the queue
    from both cppi41_dma_issue_pending() and cppi41_runtime_resume()
    as suggested by Grygorii Strashko <grygorii.strashko@ti.com> in an
    earlier example patch.
    
    For reference, this is also documented in Documentation/power/runtime_pm.txt
    in the example at the end of the file as pointed out by Grygorii Strashko
    <grygorii.strashko@ti.com>.
    
    Based on earlier patches from Alexandre Bailon <abailon@baylibre.com>
    and Grygorii Strashko <grygorii.strashko@ti.com> modified based on
    testing and what was discussed on the mailing lists.
    
    Fixes: fdea2d09b997 ("dmaengine: cppi41: Add basic PM runtime support")
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Bin Liu <b-liu@ti.com>
    Cc: Grygorii Strashko <grygorii.strashko@ti.com>
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Patrick Titiano <ptitiano@baylibre.com>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Reported-by: Alexandre Bailon <abailon@baylibre.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c2e7fe7c9c5524914772b2d44febbf5b98546d3
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Jan 19 08:49:07 2017 -0800

    dmaengine: cppi41: Fix runtime PM timeouts with USB mass storage
    
    commit ae4a3e028bb8b59e7cfeb0cc9ef03d885182ce8b upstream.
    
    Commit fdea2d09b997 ("dmaengine: cppi41: Add basic PM runtime support")
    added runtime PM support for cppi41, but had corner case issues. Some of
    the issues were fixed with commit 098de42ad670 ("dmaengine: cppi41: Fix
    unpaired pm runtime when only a USB hub is connected"). That fix however
    caused a new regression where we can get error -115 messages with USB on
    BeagleBone when connecting a USB mass storage device to a hub.
    
    This is because when connecting a USB mass storage device to a hub, the
    initial DMA transfers can take over 200ms to complete and cppi41
    autosuspend delay times out.
    
    To fix the issue, we want to implement refcounting for chan_busy array
    that contains the active dma transfers. Increasing the autosuspend delay
    won't help as that the delay could be potentially seconds, and it's best
    to let the USB subsystem to deal with the timeouts on errors.
    
    The earlier attempt for runtime PM was buggy as the pm_runtime_get/put()
    calls could get unpaired easily as they did not follow the state of
    the chan_busy array as described in commit 098de42ad670 ("dmaengine:
    cppi41: Fix unpaired pm runtime when only a USB hub is connected".
    
    Let's fix the issue by adding pm_runtime_get() to where a new transfer
    is added to the chan_busy array, and calls to pm_runtime_put() where
    chan_busy array entry is cleared. This prevents any autosuspend timeouts
    from happening while dma transfers are active.
    
    Fixes: 098de42ad670 ("dmaengine: cppi41: Fix unpaired pm runtime when
    only a USB hub is connected")
    Fixes: fdea2d09b997 ("dmaengine: cppi41: Add basic PM runtime support")
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Bin Liu <b-liu@ti.com>
    Cc: Grygorii Strashko <grygorii.strashko@ti.com>
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Patrick Titiano <ptitiano@baylibre.com>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bebb9d75e84d38c7a10fcd4619fb1554a46f4715
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 31 23:58:39 2017 +0100

    perf/x86/intel/uncore: Clean up hotplug conversion fallout
    
    commit 1aa6cfd33df492939b0be15ebdbcff1f8ae5ddb6 upstream.
    
    The recent conversion to the hotplug state machine kept two mechanisms from
    the original code:
    
     1) The first_init logic which adds the number of online CPUs in a package
        to the refcount. That's wrong because the callbacks are executed for
        all online CPUs.
    
        Remove it so the refcounting is correct.
    
     2) The on_each_cpu() call to undo box->init() in the error handling
        path. That's bogus because when the prepare callback fails no box has
        been initialized yet.
    
        Remove it.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: Yasuaki Ishimatsu <yasu.isimatu@gmail.com>
    Fixes: 1a246b9f58c6 ("perf/x86/intel/uncore: Convert to hotplug state machine")
    Link: http://lkml.kernel.org/r/20170131230141.298032324@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6bd712154aaf121bff1791431854886f5983712
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Thu Jan 26 09:06:22 2017 -0800

    HID: wacom: Fix poor prox handling in 'wacom_pl_irq'
    
    commit 282e4637bc1c0b338708bcebd09d31c69abec070 upstream.
    
    Commit 025bcc1 performed cleanup work on the 'wacom_pl_irq' function, making
    it follow the standards used in the rest of the codebase. The change
    unintiontionally allowed the function to send input events from reports
    that are not marked as being in prox. This can cause problems as the
    report values for X, Y, etc. are not guaranteed to be correct. In
    particular, occasionally the tablet will send a report with these values
    set to zero. If such a report is received it can caus an unexpected jump
    in the XY position.
    
    This patch surrounds more of the processing code with a proximity check,
    preventing these zeroed reports from overwriting the current state. To
    be safe, only the tool type and ABS_MISC events should be reported when
    the pen is marked as being out of prox.
    
    Fixes: 025bcc1540 ("HID: wacom: Simplify 'wacom_pl_irq'")
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Ping Cheng <pingc@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f24bc920612ccc68edb8ff4ee6e117a3e0a52304
Author: Ardinartsev Nikita <pinguin255@gmail.com>
Date:   Thu Jan 26 16:54:42 2017 +0300

    HID: hid-lg: Fix immediate disconnection of Logitech Rumblepad 2
    
    commit 877a021e08ccb6434718c0cc781fdf943c884cc0 upstream.
    
    With NOGET quirk Logitech F510 is now fully workable in dinput mode including
    rumble effects (according to fftest).
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=117091
    
    [jkosina@suse.cz: fix patch format]
    Signed-off-by: Ardinartsev Nikita <ardinar23@gmail.com>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80246551c7d7085f177b52020cd54f8d44c86728
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jan 26 17:34:40 2017 +0000

    HID: usbhid: Quirk a AMI virtual mouse and keyboard with ALWAYS_POLL
    
    commit ed9ab4287f96e66340e0390e2c583f2f9110cba0 upstream.
    
    Quirking the following AMI USB device with ALWAYS_POLL fixes an AMI
    virtual keyboard and mouse from not responding and timing out when
    it is attached to a ppc64el Power 8 system and when we have some
    rapid open/closes on the mouse device.
    
     usb 1-3: new high-speed USB device number 2 using xhci_hcd
     usb 1-3: New USB device found, idVendor=046b, idProduct=ff01
     usb 1-3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
     usb 1-3: Product: Virtual Hub
     usb 1-3: Manufacturer: American Megatrends Inc.
     usb 1-3: SerialNumber: serial
     usb 1-3.3: new high-speed USB device number 3 using xhci_hcd
     usb 1-3.3: New USB device found, idVendor=046b, idProduct=ff31
     usb 1-3.3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
     usb 1-3.3: Product: Virtual HardDisk Device
     usb 1-3.3: Manufacturer: American Megatrends Inc.
     usb 1-3.4: new low-speed USB device number 4 using xhci_hcd
     usb 1-3.4: New USB device found, idVendor=046b, idProduct=ff10
     usb 1-3.4: New USB device strings: Mfr=1, Product=2, SerialNumber=0
     usb 1-3.4: Product: Virtual Keyboard and Mouse
     usb 1-3.4: Manufacturer: American Megatrends Inc.
    
    With the quirk I have not been able to trigger the issue with
    half an hour of saturation soak testing.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40add19d3897dda97086ec7a73cf4e8daf7c00ee
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Dec 2 12:03:36 2016 +0100

    iwlwifi: mvm: avoid crash on restart w/o reserved queues
    
    commit 03c902bff524e0cf664737a33f2365f7837040bf upstream.
    
    When the firmware restarts in a situation in which any station
    has no queue reserved anymore because that queue was used, the
    code will crash trying to access the queue_info array at the
    offset 255, which is far too big. Fix this by checking that a
    queue is actually reserved before writing its status.
    
    Fixes: 8d98ae6eb0d5 ("iwlwifi: mvm: re-assign old queues after hw restart in dqa mode")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97663735a96f0cd7c851bbb8f08cff66d617220c
Author: Jürg Billeter <j@bitron.ch>
Date:   Mon Oct 10 18:30:01 2016 +0200

    iwlwifi: fix double hyphen in MODULE_FIRMWARE for 8000
    
    commit 7941c59e45f3b6d30e07375e9b6713427e0a9f98 upstream.
    
    Mistakenly, the driver is trying to load the 8000C firmware with an
    incorrect name (i.e. with two hyphens where there should be only one)
    and that fails.  Fix that by removing the hyphen from the format
    macro.
    
    Fixes: e1ba684f762b ("iwlwifi: 8000: fix MODULE_FIRMWARE input")
    Signed-off-by: Jürg Billeter <j@bitron.ch>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d8ec7d2d5f9fdb83617f044ad9bcfa3cf6830b9
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Jan 24 17:28:22 2017 +0200

    pinctrl: intel: merrifield: Add missed check in mrfld_config_set()
    
    commit 19b26d92dfb70f56440c187a20c49102ab648b97 upstream.
    
    Not every pin can be configured. Add missed check to prevent access
    violation.
    
    Fixes: 4e80c8f50574 ("pinctrl: intel: Add Intel Merrifield pin controller support")
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cf6c49264e40e395e73fef11f487b10b05548b4
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Jan 26 19:24:08 2017 +0200

    pinctrl: baytrail: Debounce register is one per community
    
    commit 1b89970d81bbd52720fc64a3fe9572ee33588363 upstream.
    
    Debounce value is set globally per community. Otherwise user will easily
    get a kernel crash when they start using the feature:
    
    BUG: unable to handle kernel paging request at ffffc900003be000
    IP: byt_gpio_dbg_show+0xa9/0x430
    
    Make it clear in byt_gpio_reg().
    
    Note that this fix just prevents kernel to crash, but doesn't make any
    difference to the existing logic. It means the last caller will win the
    trade and debounce value will be configured accordingly. The actual
    logic fix needs to be thought about and it's not as important as crash
    fix. That's why the latter goes separately and right now.
    
    Fixes: 658b476c742f ("pinctrl: baytrail: Add debounce configuration")
    Cc: Cristina Ciocan <cristina.ciocan@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 449d3ecfbd7640dc763dbf333131858ead6c3f11
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Fri Feb 3 05:43:52 2017 +0200

    Revert "vring: Force use of DMA API for ARM-based systems with legacy devices"
    
    commit 0d5415b489f68b58e1983a53793d25d53098ed4b upstream.
    
    This reverts commit c7070619f3408d9a0dffbed9149e6f00479cf43b.
    
    This has been shown to regress on some ARM systems:
    
    by forcing on DMA API usage for ARM systems, we have inadvertently
    kicked open a hornets' nest in terms of cache-coherency. Namely that
    unless the virtio device is explicitly described as capable of coherent
    DMA by firmware, the DMA APIs on ARM and other DT-based platforms will
    assume it is non-coherent. This turns out to cause a big problem for the
    likes of QEMU and kvmtool, which generate virtio-mmio devices in their
    guest DTs but neglect to add the often-overlooked "dma-coherent"
    property; as a result, we end up with the guest making non-cacheable
    accesses to the vring, the host doing so cacheably, both talking past
    each other and things going horribly wrong.
    
    We are working on a safer work-around.
    
    Fixes: c7070619f340 ("vring: Force use of DMA API for ARM-based systems with legacy devices")
    Reported-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16f61dee7e7cb378216ff59ffeacf157efad6c82
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Fri Jan 13 12:23:35 2017 +0100

    Revert "bcma: init serial console directly from ChipCommon code"
    
    commit 7195439d1d71bc4a6c33cfb57bc669a7cd041041 upstream.
    
    This reverts commit 4c81acab3816 ("bcma: init serial console directly
    from ChipCommon code") as it broke IRQ assignment. Getting IRQ with
    bcma_core_irq helper on SoC requires MIPS core to be set. It happens
    *after* ChipCommon initialization so we can't do this so early.
    
    This fixes a user reported regression. It wasn't critical as serial was
    still somehow working but lack of IRQs was making in unreliable.
    
    Fixes: 4c81acab3816 ("bcma: init serial console directly from ChipCommon code")
    Reported-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12f822d23deee45421bf65dc9f5ff0fdcc783701
Author: Douglas Miller <dougmill@linux.vnet.ibm.com>
Date:   Sat Jan 28 06:42:20 2017 -0600

    percpu-refcount: fix reference leak during percpu-atomic transition
    
    commit 966d2b04e070bc040319aaebfec09e0144dc3341 upstream.
    
    percpu_ref_tryget() and percpu_ref_tryget_live() should return
    "true" IFF they acquire a reference. But the return value from
    atomic_long_inc_not_zero() is a long and may have high bits set,
    e.g. PERCPU_COUNT_BIAS, and the return value of the tryget routines
    is bool so the reference may actually be acquired but the routines
    return "false" which results in a reference leak since the caller
    assumes it does not need to do a corresponding percpu_ref_put().
    
    This was seen when performing CPU hotplug during I/O, as hangs in
    blk_mq_freeze_queue_wait where percpu_ref_kill (blk_mq_freeze_queue_start)
    raced with percpu_ref_tryget (blk_mq_timeout_work).
    Sample stack trace:
    
    __switch_to+0x2c0/0x450
    __schedule+0x2f8/0x970
    schedule+0x48/0xc0
    blk_mq_freeze_queue_wait+0x94/0x120
    blk_mq_queue_reinit_work+0xb8/0x180
    blk_mq_queue_reinit_prepare+0x84/0xa0
    cpuhp_invoke_callback+0x17c/0x600
    cpuhp_up_callbacks+0x58/0x150
    _cpu_up+0xf0/0x1c0
    do_cpu_up+0x120/0x150
    cpu_subsys_online+0x64/0xe0
    device_online+0xb4/0x120
    online_store+0xb4/0xc0
    dev_attr_store+0x68/0xa0
    sysfs_kf_write+0x80/0xb0
    kernfs_fop_write+0x17c/0x250
    __vfs_write+0x6c/0x1e0
    vfs_write+0xd0/0x270
    SyS_write+0x6c/0x110
    system_call+0x38/0xe0
    
    Examination of the queue showed a single reference (no PERCPU_COUNT_BIAS,
    and __PERCPU_REF_DEAD, __PERCPU_REF_ATOMIC set) and no requests.
    However, conditions at the time of the race are count of PERCPU_COUNT_BIAS + 0
    and __PERCPU_REF_DEAD and __PERCPU_REF_ATOMIC set.
    
    The fix is to make the tryget routines use an actual boolean internally instead
    of the atomic long result truncated to a int.
    
    Fixes: e625305b3907 percpu-refcount: make percpu_ref based on longs instead of ints
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=190751
    Signed-off-by: Douglas Miller <dougmill@linux.vnet.ibm.com>
    Reviewed-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: e625305b3907 ("percpu-refcount: make percpu_ref based on longs instead of ints")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ee8ff9e2652dc9e79230dfcb3c70d0efbcde493
Author: Rask Ingemann Lambertsen <rask@formelder.dk>
Date:   Sat Jan 21 17:11:43 2017 +0100

    regulator: axp20x: AXP806: Fix dcdcb being set instead of dcdce
    
    commit d0e287a401d9acf67b75180b26e2d62b7d482652 upstream.
    
    A typo or copy-paste bug means that the register access intended for
    regulator dcdce goes to dcdcb instead. This patch corrects it.
    
    Fixes: 2ca342d391e3 (regulator: axp20x: Support AXP806 variant)
    Signed-off-by: Rask Ingemann Lambertsen <rask@formelder.dk>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1594edd9ea0d75ef106bffc23c2b07b509f3301c
Author: Halil Pasic <pasic@linux.vnet.ibm.com>
Date:   Mon Jan 30 11:09:36 2017 +0100

    vhost: fix initialization for vq->is_le
    
    commit cda8bba0f99d25d2061c531113c14fa41effc3ae upstream.
    
    Currently, under certain circumstances vhost_init_is_le does just a part
    of the initialization job, and depends on vhost_reset_is_le being called
    too. For this reason vhost_vq_init_access used to call vhost_reset_is_le
    when vq->private_data is NULL. This is not only counter intuitive, but
    also real a problem because it breaks vhost_net. The bug was introduced to
    vhost_net with commit 2751c9882b94 ("vhost: cross-endian support for
    legacy devices"). The symptom is corruption of the vq's used.idx field
    (virtio) after VHOST_NET_SET_BACKEND was issued as a part of the vhost
    shutdown on a vq with pending descriptors.
    
    Let us make sure the outcome of vhost_init_is_le never depend on the state
    it is actually supposed to initialize, and fix virtio_net by removing the
    reset from vhost_vq_init_access.
    
    With the above, there is no reason for vhost_reset_is_le to do just half
    of the job. Let us make vhost_reset_is_le reinitialize is_le.
    
    Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Reported-by: Michael A. Tebolt <miket@us.ibm.com>
    Reported-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
    Fixes: commit 2751c9882b94 ("vhost: cross-endian support for legacy devices")
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Greg Kurz <groug@kaod.org>
    Tested-by: Michael A. Tebolt <miket@us.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04eb7db25bb1bcf4ee1631d1099fc03308929c12
Author: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
Date:   Mon Jan 16 12:23:42 2017 -0200

    mmc: sdhci: Ignore unexpected CARD_INT interrupts
    
    commit 161e6d44a5e2d3f85365cb717d60e363171b39e6 upstream.
    
    One of our kernelCI boxes hanged at boot because a faulty eSDHC device
    was triggering spurious CARD_INT interrupts for SD cards, causing CMD52
    reads, which are not allowed for SD devices.  This adds a sanity check
    to the interruption path, preventing that illegal command from getting
    sent if the CARD_INT interruption should be disabled.
    
    This quirk allows that particular machine to resume boot despite the
    faulty hardware, instead of getting hung dealing with thousands of
    mishandled interrupts.
    
    Suggested-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d88791d5ed5dae4ff8cbbf6147e90ff95d92ba9
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Jan 26 16:47:28 2017 -0500

    cgroup: don't online subsystems before cgroup_name/path() are operational
    
    commit 07cd12945551b63ecb1a349d50a6d69d1d6feb4a upstream.
    
    While refactoring cgroup creation, a5bca2152036 ("cgroup: factor out
    cgroup_create() out of cgroup_mkdir()") incorrectly onlined subsystems
    before the new cgroup is associated with it kernfs_node.  This is fine
    for cgroup proper but cgroup_name/path() depend on the associated
    kernfs_node and if a subsystem makes the new cgroup_subsys_state
    visible, which they're allowed to after onlining, it can lead to NULL
    dereference.
    
    The current code performs cgroup creation and subsystem onlining in
    cgroup_create() and cgroup_mkdir() makes the cgroup and subsystems
    visible afterwards.  There's no reason to online the subsystems early
    and we can simply drop cgroup_apply_control_enable() call from
    cgroup_create() so that the subsystems are onlined and made visible at
    the same time.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Fixes: a5bca2152036 ("cgroup: factor out cgroup_create() out of cgroup_mkdir()")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a150e08704b24311a4d6215aade46691d6a7006a
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Jan 18 21:30:51 2017 +0100

    can: bcm: fix hrtimer/tasklet termination in bcm op removal
    
    commit a06393ed03167771246c4c43192d9c264bc48412 upstream.
    
    When removing a bcm tx operation either a hrtimer or a tasklet might run.
    As the hrtimer triggers its associated tasklet and vice versa we need to
    take care to mutually terminate both handlers.
    
    Reported-by: Michael Josenhans <michael.josenhans@web.de>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Tested-by: Michael Josenhans <michael.josenhans@web.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a93ae8dccc3c723ed7a629dab37a3392387acd79
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Jan 30 19:27:10 2017 -0500

    tracing: Fix hwlat kthread migration
    
    commit 79c6f448c8b79c321e4a1f31f98194e4f6b6cae7 upstream.
    
    The hwlat tracer creates a kernel thread at start of the tracer. It is
    pinned to a single CPU and will move to the next CPU after each period of
    running. If the user modifies the migration thread's affinity, it will not
    change after that happens.
    
    The original code created the thread at the first instance it was called,
    but later was changed to destroy the thread after the tracer was finished,
    and would not be created until the next instance of the tracer was
    established. The code that initialized the affinity was only called on the
    initial instantiation of the tracer. After that, it was not initialized, and
    the previous affinity did not match the current newly created one, making
    it appear that the user modified the thread's affinity when it did not, and
    the thread failed to migrate again.
    
    Fixes: 0330f7aa8ee6 ("tracing: Have hwlat trace migrate across tracing_cpumask CPUs")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b67c7d39bc284776c27eeaefd424046c742b0d93
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Feb 3 13:13:29 2017 -0800

    mm, fs: check for fatal signals in do_generic_file_read()
    
    commit 5abf186a30a89d5b9c18a6bf93a2c192c9fd52f6 upstream.
    
    do_generic_file_read() can be told to perform a large request from
    userspace.  If the system is under OOM and the reading task is the OOM
    victim then it has an access to memory reserves and finishing the full
    request can lead to the full memory depletion which is dangerous.  Make
    sure we rather go with a short read and allow the killed task to
    terminate.
    
    Link: http://lkml.kernel.org/r/20170201092706.9966-3-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cb0497aec810617388dfe674209cd417f509844
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Fri Feb 3 13:13:23 2017 -0800

    base/memory, hotplug: fix a kernel oops in show_valid_zones()
    
    commit a96dfddbcc04336bbed50dc2b24823e45e09e80c upstream.
    
    Reading a sysfs "memoryN/valid_zones" file leads to the following oops
    when the first page of a range is not backed by struct page.
    show_valid_zones() assumes that 'start_pfn' is always valid for
    page_zone().
    
     BUG: unable to handle kernel paging request at ffffea017a000000
     IP: show_valid_zones+0x6f/0x160
    
    This issue may happen on x86-64 systems with 64GiB or more memory since
    their memory block size is bumped up to 2GiB.  [1] An example of such
    systems is desribed below.  0x3240000000 is only aligned by 1GiB and
    this memory block starts from 0x3200000000, which is not backed by
    struct page.
    
     BIOS-e820: [mem 0x0000003240000000-0x000000603fffffff] usable
    
    Since test_pages_in_a_zone() already checks holes, fix this issue by
    extending this function to return 'valid_start' and 'valid_end' for a
    given range.  show_valid_zones() then proceeds with the valid range.
    
    [1] 'Commit bdee237c0343 ("x86: mm: Use 2GB memory block size on
        large-memory x86-64 systems")'
    
    Link: http://lkml.kernel.org/r/20170127222149.30893-3-toshi.kani@hpe.com
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Zhang Zhen <zhenzhang.zhang@huawei.com>
    Cc: Reza Arbab <arbab@linux.vnet.ibm.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 72f7419610c838abc5e3fde87835a5581e8e368c
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Fri Feb 3 13:13:20 2017 -0800

    mm/memory_hotplug.c: check start_pfn in test_pages_in_a_zone()
    
    commit deb88a2a19e85842d79ba96b05031739ec327ff4 upstream.
    
    Patch series "fix a kernel oops when reading sysfs valid_zones", v2.
    
    A sysfs memory file is created for each 2GiB memory block on x86-64 when
    the system has 64GiB or more memory.  [1] When the start address of a
    memory block is not backed by struct page, i.e.  a memory range is not
    aligned by 2GiB, reading its 'valid_zones' attribute file leads to a
    kernel oops.  This issue was observed on multiple x86-64 systems with
    more than 64GiB of memory.  This patch-set fixes this issue.
    
    Patch 1 first fixes an issue in test_pages_in_a_zone(), which does not
    test the start section.
    
    Patch 2 then fixes the kernel oops by extending test_pages_in_a_zone()
    to return valid [start, end).
    
    Note for stable kernels: The memory block size change was made by commit
    bdee237c0343 ("x86: mm: Use 2GB memory block size on large-memory x86-64
    systems"), which was accepted to 3.9.  However, this patch-set depends
    on (and fixes) the change to test_pages_in_a_zone() made by commit
    5f0f2887f4de ("mm/memory_hotplug.c: check for missing sections in
    test_pages_in_a_zone()"), which was accepted to 4.4.
    
    So, I recommend that we backport it up to 4.4.
    
    [1] 'Commit bdee237c0343 ("x86: mm: Use 2GB memory block size on
        large-memory x86-64 systems")'
    
    This patch (of 2):
    
    test_pages_in_a_zone() does not check 'start_pfn' when it is aligned by
    section since 'sec_end_pfn' is set equal to 'pfn'.  Since this function
    is called for testing the range of a sysfs memory file, 'start_pfn' is
    always aligned by section.
    
    Fix it by properly setting 'sec_end_pfn' to the next section pfn.
    
    Also make sure that this function returns 1 only when the range belongs
    to a zone.
    
    Link: http://lkml.kernel.org/r/20170127222149.30893-2-toshi.kani@hpe.com
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: Andrew Banman <abanman@sgi.com>
    Cc: Reza Arbab <arbab@linux.vnet.ibm.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e255997c2e169ba4bca92e6f84324581b28abbe
Author: Rabin Vincent <rabinv@axis.com>
Date:   Fri Jan 13 15:00:16 2017 +0100

    cifs: initialize file_info_lock
    
    commit 81ddd8c0c5e1cb41184d66567140cb48c53eb3d1 upstream.
    
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    
    file_info_lock is not initalized in initiate_cifs_search(), leading to the
    following splat after a simple "mount.cifs ... dir && ls dir/":
    
     BUG: spinlock bad magic on CPU#0, ls/486
      lock: 0xffff880009301110, .magic: 00000000, .owner: <none>/-1, .owner_cpu: 0
     CPU: 0 PID: 486 Comm: ls Not tainted 4.9.0 #27
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
      ffffc900042f3db0 ffffffff81327533 0000000000000000 ffff880009301110
      ffffc900042f3dd0 ffffffff810baf75 ffff880009301110 ffffffff817ae077
      ffffc900042f3df0 ffffffff810baff6 ffff880009301110 ffff880008d69900
     Call Trace:
      [<ffffffff81327533>] dump_stack+0x65/0x92
      [<ffffffff810baf75>] spin_dump+0x85/0xe0
      [<ffffffff810baff6>] spin_bug+0x26/0x30
      [<ffffffff810bb159>] do_raw_spin_lock+0xe9/0x130
      [<ffffffff8159ad2f>] _raw_spin_lock+0x1f/0x30
      [<ffffffff8127e50d>] cifs_closedir+0x4d/0x100
      [<ffffffff81181cfd>] __fput+0x5d/0x160
      [<ffffffff81181e3e>] ____fput+0xe/0x10
      [<ffffffff8109410e>] task_work_run+0x7e/0xa0
      [<ffffffff81002512>] exit_to_usermode_loop+0x92/0xa0
      [<ffffffff810026f9>] syscall_return_slowpath+0x49/0x50
      [<ffffffff8159b484>] entry_SYSCALL_64_fastpath+0xa7/0xa9
    
    Fixes: 3afca265b5f53a0 ("Clarify locking of cifs file and tcon structures and make more granular")
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0c3a0ac3349146259c235215f474de48b45bd89
Author: Dan Streetman <ddstreet@ieee.org>
Date:   Fri Feb 3 13:13:09 2017 -0800

    zswap: disable changing params if init fails
    
    commit d7b028f56a971a2e4d8d7887540a144eeefcd4ab upstream.
    
    Add zswap_init_failed bool that prevents changing any of the module
    params, if init_zswap() fails, and set zswap_enabled to false.  Change
    'enabled' param to a callback, and check zswap_init_failed before
    allowing any change to 'enabled', 'zpool', or 'compressor' params.
    
    Any driver that is built-in to the kernel will not be unloaded if its
    init function returns error, and its module params remain accessible for
    users to change via sysfs.  Since zswap uses param callbacks, which
    assume that zswap has been initialized, changing the zswap params after
    a failed initialization will result in WARNING due to the param
    callbacks expecting a pool to already exist.  This prevents that by
    immediately exiting any of the param callbacks if initialization failed.
    
    This was reported here:
      https://marc.info/?l=linux-mm&m=147004228125528&w=4
    
    And fixes this WARNING:
      [  429.723476] WARNING: CPU: 0 PID: 5140 at mm/zswap.c:503 __zswap_pool_current+0x56/0x60
    
    The warning is just noise, and not serious.  However, when init fails,
    zswap frees all its percpu dstmem pages and its kmem cache.  The kmem
    cache might be serious, if kmem_cache_alloc(NULL, gfp) has problems; but
    the percpu dstmem pages are definitely a problem, as they're used as
    temporary buffer for compressed pages before copying into place in the
    zpool.
    
    If the user does get zswap enabled after an init failure, then zswap
    will likely Oops on the first page it tries to compress (or worse, start
    corrupting memory).
    
    Fixes: 90b0fc26d5db ("zswap: change zpool/compressor at runtime")
    Link: http://lkml.kernel.org/r/20170124200259.16191-2-ddstreet@ieee.org
    Signed-off-by: Dan Streetman <dan.streetman@canonical.com>
    Reported-by: Marcin Miroslaw <marcin@mejor.pl>
    Cc: Seth Jennings <sjenning@redhat.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3d729526f2fd8b9a6ff9f6012f8344cadfd432c
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Jan 31 11:37:50 2017 -0500

    svcrpc: fix oops in absence of krb5 module
    
    commit 034dd34ff4916ec1f8f74e39ca3efb04eab2f791 upstream.
    
    Olga Kornievskaia says: "I ran into this oops in the nfsd (below)
    (4.10-rc3 kernel). To trigger this I had a client (unsuccessfully) try
    to mount the server with krb5 where the server doesn't have the
    rpcsec_gss_krb5 module built."
    
    The problem is that rsci.cred is copied from a svc_cred structure that
    gss_proxy didn't properly initialize.  Fix that.
    
    [120408.542387] general protection fault: 0000 [#1] SMP
    ...
    [120408.565724] CPU: 0 PID: 3601 Comm: nfsd Not tainted 4.10.0-rc3+ #16
    [120408.567037] Hardware name: VMware, Inc. VMware Virtual =
    Platform/440BX Desktop Reference Platform, BIOS 6.00 07/02/2015
    [120408.569225] task: ffff8800776f95c0 task.stack: ffffc90003d58000
    [120408.570483] RIP: 0010:gss_mech_put+0xb/0x20 [auth_rpcgss]
    ...
    [120408.584946]  ? rsc_free+0x55/0x90 [auth_rpcgss]
    [120408.585901]  gss_proxy_save_rsc+0xb2/0x2a0 [auth_rpcgss]
    [120408.587017]  svcauth_gss_proxy_init+0x3cc/0x520 [auth_rpcgss]
    [120408.588257]  ? __enqueue_entity+0x6c/0x70
    [120408.589101]  svcauth_gss_accept+0x391/0xb90 [auth_rpcgss]
    [120408.590212]  ? try_to_wake_up+0x4a/0x360
    [120408.591036]  ? wake_up_process+0x15/0x20
    [120408.592093]  ? svc_xprt_do_enqueue+0x12e/0x2d0 [sunrpc]
    [120408.593177]  svc_authenticate+0xe1/0x100 [sunrpc]
    [120408.594168]  svc_process_common+0x203/0x710 [sunrpc]
    [120408.595220]  svc_process+0x105/0x1c0 [sunrpc]
    [120408.596278]  nfsd+0xe9/0x160 [nfsd]
    [120408.597060]  kthread+0x101/0x140
    [120408.597734]  ? nfsd_destroy+0x60/0x60 [nfsd]
    [120408.598626]  ? kthread_park+0x90/0x90
    [120408.599448]  ret_from_fork+0x22/0x30
    
    Fixes: 1d658336b05f "SUNRPC: Add RPC based upcall mechanism for RPCGSS auth"
    Cc: Simo Sorce <simo@redhat.com>
    Reported-by: Olga Kornievskaia <kolga@netapp.com>
    Tested-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 743146d347f3141cd5a82f4c9aace1790a7537b9
Author: Kinglong Mee <kinglongmee@gmail.com>
Date:   Wed Jan 18 19:04:42 2017 +0800

    NFSD: Fix a null reference case in find_or_create_lock_stateid()
    
    commit d19fb70dd68c4e960e2ac09b0b9c79dfdeefa726 upstream.
    
    nfsd assigns the nfs4_free_lock_stateid to .sc_free in init_lock_stateid().
    
    If nfsd doesn't go through init_lock_stateid() and put stateid at end,
    there is a NULL reference to .sc_free when calling nfs4_put_stid(ns).
    
    This patch let the nfs4_stid.sc_free assignment to nfs4_alloc_stid().
    
    Fixes: 356a95ece7aa "nfsd: clean up races in lock stateid searching..."
    Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c953848c95b74def08172b07c04a773071f69ee
Author: Reza Arbab <arbab@linux.vnet.ibm.com>
Date:   Wed Jan 25 09:54:33 2017 -0600

    powerpc/mm: Use the correct pointer when setting a 2MB pte
    
    commit a0615a16f7d0ceb5804d295203c302d496d8ee91 upstream.
    
    When setting a 2MB pte, radix__map_kernel_page() is using the address
    
            ptep = (pte_t *)pudp;
    
    Fix this conversion to use pmdp instead. Use pmdp_ptep() to do this
    instead of casting the pointer.
    
    Fixes: 2bfd65e45e87 ("powerpc/mm/radix: Add radix callbacks for early init routines")
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Reza Arbab <arbab@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f415333be3a448d9db57a9142fde7efe863432d
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jan 24 16:36:57 2017 +1100

    powerpc: Fix build failure with clang due to BUILD_BUG_ON()
    
    commit b5fa0f7f88edcde37df1807fdf9ff10ec787a60e upstream.
    
    Anton says: In commit 4db7327194db ("powerpc: Add option to use jump
    label for cpu_has_feature()") and commit c12e6f24d413 ("powerpc: Add
    option to use jump label for mmu_has_feature()") we added:
    
      BUILD_BUG_ON(!__builtin_constant_p(feature))
    
    to cpu_has_feature() and mmu_has_feature() in order to catch usage
    issues (such as cpu_has_feature(cpu_has_feature(X), which has happened
    once in the past). Unfortunately LLVM isn't smart enough to resolve
    this, and it errors out.
    
    I work around it in my clang/LLVM builds of the kernel, but I have just
    discovered that it causes a lot of issues for the bcc (eBPF) trace tool
    (which uses LLVM).
    
    For now just #ifdef it away for clang builds.
    
    Fixes: 4db7327194db ("powerpc: Add option to use jump label for cpu_has_feature()")
    Fixes: c12e6f24d413 ("powerpc: Add option to use jump label for mmu_has_feature()")
    Reported-by: Anton Blanchard <anton@samba.org>
    Tested-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbf69e5197daf5560fa37894e50d943b2065496c
Author: Darren Stevens <darren@stevens-zone.net>
Date:   Mon Jan 23 19:42:54 2017 +0000

    powerpc: Add missing error check to prom_find_boot_cpu()
    
    commit af2b7fa17eb92e52b65f96604448ff7a2a89ee99 upstream.
    
    prom_init.c calls 'instance-to-package' twice, but the return
    is not checked during prom_find_boot_cpu(). The result is then
    passed to prom_getprop(), which could be PROM_ERROR. Add a return check
    to prevent this.
    
    This was found on a pasemi system, where CFE doesn't have a working
    'instance-to package' prom call.
    
    Before Commit 5c0484e25ec0 ('powerpc: Endian safe trampoline') the area
    around addr 0 was mostly 0's and this doesn't cause a problem. Once the
    macro 'FIXUP_ENDIAN' has been added to head_64.S, the low memory area
    now has non-zero values, which cause the prom_getprop() call
    to hang.
    
    mpe: Also confirmed that under SLOF if 'instance-to-package' did fail
    with PROM_ERROR we would crash in SLOF. So the bug is not specific to
    CFE, it's just that other open firmwares don't trigger it because they
    have a working 'instance-to-package'.
    
    Fixes: 5c0484e25ec0 ("powerpc: Endian safe trampoline")
    Signed-off-by: Darren Stevens <darren@stevens-zone.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73d45909780e7f8632cbc58971c84a67a8622c7a
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Thu Jan 19 10:10:16 2017 +1100

    powerpc/eeh: Fix wrong flag passed to eeh_unfreeze_pe()
    
    commit f05fea5b3574a5926c53865eea27139bb40b2f2b upstream.
    
    In __eeh_clear_pe_frozen_state(), we should pass the flag's value
    instead of its address to eeh_unfreeze_pe(). The isolated flag is
    cleared if no error returned from __eeh_clear_pe_frozen_state(). We
    never observed the error from the function. So the isolated flag should
    have been always cleared, no real issue is caused because of the misused
    @flag.
    
    This fixes the code by passing the value of @flag to eeh_unfreeze_pe().
    
    Fixes: 5cfb20b96f6 ("powerpc/eeh: Emulate EEH recovery for VFIO devices")
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b70d598c2ee1f47871ba12db832fcbbb4adb491
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Mon Dec 19 10:17:40 2016 +0900

    libata: Fix ATA request sense
    
    commit 2dae99558e86894e9e5dbf097477baaa5eb70134 upstream.
    
    For an ATA device supporting the sense data reporting feature set, a
    failed command will trigger the execution of ata_eh_request_sense if
    the result task file of the failed command has the ATA_SENSE bit set
    (sense data available bit). ata_eh_request_sense executes the REQUEST
    SENSE DATA EXT command to retrieve the sense data of the failed
    command. On success of REQUEST SENSE DATA EXT, the ATA_SENSE bit will
    NOT be set (the command succeeded) but ata_eh_request_sense
    nevertheless tests the availability of sense data by testing that bit
    presence in the result tf of the REQUEST SENSE DATA EXT command.  This
    leads us to falsely assume that request sense data failed and to the
    warning message:
    
    atax.xx: request sense failed stat 50 emask 0
    
    Upon success of REQUEST SENSE DATA EXT, set the ATA_SENSE bit in the
    result task file command so that sense data can be returned by
    ata_eh_request_sense.
    
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d08607ef35bb8abeb0a2212fbdf85e0af4d5df1
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Jan 6 11:48:50 2017 -0500

    libata: apply MAX_SEC_1024 to all CX1-JB*-HP devices
    
    commit e0edc8c546463f268d41d064d855bcff994c52fa upstream.
    
    Marko reports that CX1-JB512-HP shows the same timeout issues as
    CX1-JB256-HP.  Let's apply MAX_SEC_128 to all devices in the series.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Marko Koski-Vähälä <marko@koski-vahala.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc794153c4074dff6487a2d22f1a23246c329bdf
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Mon Dec 12 23:13:27 2016 +0530

    ata: sata_mv:- Handle return value of devm_ioremap.
    
    commit 064c3db9c564cc5be514ac21fb4aa26cc33db746 upstream.
    
    Here, If devm_ioremap will fail. It will return NULL.
    Then hpriv->base = NULL - 0x20000; Kernel can run into
    a NULL-pointer dereference. This error check will avoid
    NULL pointer dereference.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b41615aa705626e0fbb5541e4715090370fe8c23
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 26 23:15:08 2017 +0100

    perf/core: Fix PERF_RECORD_MMAP2 prot/flags for anonymous memory
    
    commit 0b3589be9b98994ce3d5aeca52445d1f5627c4ba upstream.
    
    Andres reported that MMAP2 records for anonymous memory always have
    their protection field 0.
    
    Turns out, someone daft put the prot/flags generation code in the file
    branch, leaving them unset for anonymous memory.
    
    Reported-by: Andres Freund <andres@anarazel.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Don Zickus <dzickus@redhat.com
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@gmail.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: acme@kernel.org
    Cc: anton@ozlabs.org
    Cc: namhyung@kernel.org
    Fixes: f972eb63b100 ("perf: Pass protection and flags bits through mmap2 interface")
    Link: http://lkml.kernel.org/r/20170126221508.GF6536@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3996a91e3bdc04b6e41d93a7de3e5c6b63db5cb3
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 26 16:39:55 2017 +0100

    perf/core: Fix use-after-free bug
    
    commit a76a82a3e38c8d3fb6499e3dfaeb0949241ab588 upstream.
    
    Dmitry reported a KASAN use-after-free on event->group_leader.
    
    It turns out there's a hole in perf_remove_from_context() due to
    event_function_call() not calling its function when the task
    associated with the event is already dead.
    
    In this case the event will have been detached from the task, but the
    grouping will have been retained, such that group operations might
    still work properly while there are live child events etc.
    
    This does however mean that we can miss a perf_group_detach() call
    when the group decomposes, this in turn can then lead to
    use-after-free.
    
    Fix it by explicitly doing the group detach if its still required.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: syzkaller <syzkaller@googlegroups.com>
    Fixes: 63b6da39bb38 ("perf: Fix perf_event_exit_task() race")
    Link: http://lkml.kernel.org/r/20170126153955.GD6515@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53bed1f6402563da7cd56cb3d0a97780e091ab73
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Jan 17 13:46:29 2017 +0000

    crypto: arm64/aes-blk - honour iv_out requirement in CBC and CTR modes
    
    commit 11e3b725cfc282efe9d4a354153e99d86a16af08 upstream.
    
    Update the ARMv8 Crypto Extensions and the plain NEON AES implementations
    in CBC and CTR modes to return the next IV back to the skcipher API client.
    This is necessary for chaining to work correctly.
    
    Note that for CTR, this is only done if the request is a round multiple of
    the block size, since otherwise, chaining is impossible anyway.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b04a39f88cedc1bce345b458e8a9309ce8a2d1ba
Author: Salvatore Benedetto <salvatore.benedetto@intel.com>
Date:   Fri Jan 13 11:54:08 2017 +0000

    crypto: api - Clear CRYPTO_ALG_DEAD bit before registering an alg
    
    commit d6040764adcb5cb6de1489422411d701c158bb69 upstream.
    
    Make sure CRYPTO_ALG_DEAD bit is cleared before proceeding with
    the algorithm registration. This fixes qat-dh registration when
    driver is restarted
    
    Signed-off-by: Salvatore Benedetto <salvatore.benedetto@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2eb8f7c4225a90f3266194535adc46b41dfc59e5
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Thu Jan 19 22:56:30 2017 -0500

    drm/nouveau/nv1a,nv1f/disp: fix memory clock rate retrieval
    
    commit 24bf7ae359b8cca165bb30742d2b1c03a1eb23af upstream.
    
    Based on the xf86-video-nv code, NFORCE (NV1A) and NFORCE2 (NV1F) have a
    different way of retrieving clocks. See the
    nv_hw.c:nForceUpdateArbitrationSettings function in the original code
    for how these clocks were accessed.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=54587
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd5cefed1ccc94af1792cb5e07a043881f9a4207
Author: Alastair Bridgewater <alastair.bridgewater@gmail.com>
Date:   Wed Jan 11 15:47:18 2017 -0500

    drm/nouveau/disp/gt215: Fix HDA ELD handling (thus, HDMI audio) on gt215
    
    commit d347583a39e2df609a9e40c835f72d3614665b53 upstream.
    
    Store the ELD correctly, not just enough copies of the first byte
    to pad out the given ELD size.
    
    Signed-off-by: Alastair Bridgewater <alastair.bridgewater@gmail.com>
    Fixes: 120b0c39c756 ("drm/nv50-/disp: audit and version SOR_HDA_ELD method")
    Reviewed-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9fb422fd93883b65f1bb00e6e9206a5865245fc
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jan 27 10:31:52 2017 -0500

    drm/amdgpu/si: fix crash on headless asics
    
    commit 57bcd0a6364cd4eaa362d7ff1777e88ddf501602 upstream.
    
    Missing check for crtcs present.
    
    Fixes:
    https://bugzilla.kernel.org/show_bug.cgi?id=193341
    https://bugs.freedesktop.org/show_bug.cgi?id=99387
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20658b3df8b98cbdc433c824730471160a087afb
Author: Alexander Stein <alexander.stein@systec-electronic.com>
Date:   Mon Jan 30 12:35:28 2017 +0100

    pinctrl: baytrail: Add missing spinlock usage in byt_gpio_irq_handler
    
    commit cdca06e4e85974d8a3503ab15709dbbaf90d3dd1 upstream.
    
    According to VLI64 Intel Atom E3800 Specification Update (#329901)
    concurrent read accesses may result in returning 0xffffffff and write
    accesses may be dropped silently.
    To workaround all accesses must be protected by locks.
    
    Signed-off-by: Alexander Stein <alexander.stein@systec-electronic.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7396685a1bca323b96fd79b836ae22b7569d7068
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 30 11:26:39 2017 +0100

    HID: cp2112: fix gpio-callback error handling
    
    commit 8e9faa15469ed7c7467423db4c62aeed3ff4cae3 upstream.
    
    In case of a zero-length report, the gpio direction_input callback would
    currently return success instead of an errno.
    
    Fixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a18c4584a48931e8048508469bcdb53c6082221a
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 30 11:26:38 2017 +0100

    HID: cp2112: fix sleep-while-atomic
    
    commit 7a7b5df84b6b4e5d599c7289526eed96541a0654 upstream.
    
    A recent commit fixing DMA-buffers on stack added a shared transfer
    buffer protected by a spinlock. This is broken as the USB HID request
    callbacks can sleep. Fix this up by replacing the spinlock with a mutex.
    
    Fixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfd713307adb8747b47cb7bf6c08cb887b857c43
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Jan 31 18:35:37 2017 -0800

    xtensa: fix noMMU build on cores with MMU
    
    commit 4b3e6f2ef3722f1a6a97b6034ed492c1a21fd4ae upstream.
    
    Commit bf15f86b343ed8 ("xtensa: initialize MMU before jumping to reset
    vector") calls MMU management functions even when CONFIG_MMU is not
    selected. That breaks noMMU build on cores with MMU.
    
    Don't manage MMU when CONFIG_MMU is not selected.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2e24dd918189b355a2f7eeafede54778d18172d
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Feb 1 17:45:02 2017 +0000

    efi/fdt: Avoid FDT manipulation after ExitBootServices()
    
    commit c8f325a59cfc718d13a50fbc746ed9b415c25e92 upstream.
    
    Some AArch64 UEFI implementations disable the MMU in ExitBootServices(),
    after which unaligned accesses to RAM are no longer supported.
    
    Commit:
    
      abfb7b686a3e ("efi/libstub/arm*: Pass latest memory map to the kernel")
    
    fixed an issue in the memory map handling of the stub FDT code, but
    inadvertently created an issue with such firmware, by moving some
    of the FDT manipulation to after the invocation of ExitBootServices().
    
    Given that the stub's libfdt implementation uses the ordinary, accelerated
    string functions, which rely on hardware handling of unaligned accesses,
    manipulating the FDT with the MMU off may result in alignment faults.
    
    So fix the situation by moving the update_fdt_memmap() call into the
    callback function invoked by efi_exit_boot_services() right before it
    calls the ExitBootServices() UEFI service (which is arguably a better
    place for it anyway)
    
    Note that disabling the MMU in ExitBootServices() is not compliant with
    the UEFI spec, and carries great risk due to the fact that switching from
    cached to uncached memory accesses halfway through compiler generated code
    (i.e., involving a stack) can never be done in a way that is architecturally
    safe.
    
    Fixes: abfb7b686a3e ("efi/libstub/arm*: Pass latest memory map to the kernel")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Riku Voipio <riku.voipio@linaro.org>
    Cc: mark.rutland@arm.com
    Cc: linux-efi@vger.kernel.org
    Cc: matt@codeblueprint.co.uk
    Cc: leif.lindholm@linaro.org
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lkml.kernel.org/r/1485971102-23330-2-git-send-email-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0c7412edfc117e7792b8b1f5ee201b31cf9dcdb
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Fri Jan 27 22:25:52 2017 +0000

    x86/efi: Always map the first physical page into the EFI pagetables
    
    commit bf29bddf0417a4783da3b24e8c9e017ac649326f upstream.
    
    Commit:
    
      129766708 ("x86/efi: Only map RAM into EFI page tables if in mixed-mode")
    
    stopped creating 1:1 mappings for all RAM, when running in native 64-bit mode.
    
    It turns out though that there are 64-bit EFI implementations in the wild
    (this particular problem has been reported on a Lenovo Yoga 710-11IKB),
    which still make use of the first physical page for their own private use,
    even though they explicitly mark it EFI_CONVENTIONAL_MEMORY in the memory
    map.
    
    In case there is no mapping for this particular frame in the EFI pagetables,
    as soon as firmware tries to make use of it, a triple fault occurs and the
    system reboots (in case of the Yoga 710-11IKB this is very early during bootup).
    
    Fix that by always mapping the first page of physical memory into the EFI
    pagetables. We're free to hand this page to the BIOS, as trim_bios_range()
    will reserve the first page and isolate it away from memory allocators anyway.
    
    Note that just reverting 129766708 alone is not enough on v4.9-rc1+ to fix the
    regression on affected hardware, as this commit:
    
       ab72a27da ("x86/efi: Consolidate region mapping logic")
    
    later made the first physical frame not to be mapped anyway.
    
    Reported-by: Hanka Pavlikova <hanka@ucw.cz>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vojtech Pavlik <vojtech@ucw.cz>
    Cc: Waiman Long <waiman.long@hpe.com>
    Cc: linux-efi@vger.kernel.org
    Fixes: 129766708 ("x86/efi: Only map RAM into EFI page tables if in mixed-mode")
    Link: http://lkml.kernel.org/r/20170127222552.22336-1-matt@codeblueprint.co.uk
    [ Tidied up the changelog and the comment. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13e6ef99d23b05807e7f8a72f45e3d8260b61570
Author: Eryu Guan <guaneryu@gmail.com>
Date:   Thu Dec 1 15:08:37 2016 -0500

    ext4: validate s_first_meta_bg at mount time
    
    commit 3a4b77cd47bb837b8557595ec7425f281f2ca1fe upstream.
    
    Ralf Spenneberg reported that he hit a kernel crash when mounting a
    modified ext4 image. And it turns out that kernel crashed when
    calculating fs overhead (ext4_calculate_overhead()), this is because
    the image has very large s_first_meta_bg (debug code shows it's
    842150400), and ext4 overruns the memory in count_overhead() when
    setting bitmap buffer, which is PAGE_SIZE.
    
    ext4_calculate_overhead():
      buf = get_zeroed_page(GFP_NOFS);  <=== PAGE_SIZE buffer
      blks = count_overhead(sb, i, buf);
    
    count_overhead():
      for (j = ext4_bg_num_gdb(sb, grp); j > 0; j--) { <=== j = 842150400
              ext4_set_bit(EXT4_B2C(sbi, s++), buf);   <=== buffer overrun
              count++;
      }
    
    This can be reproduced easily for me by this script:
    
      #!/bin/bash
      rm -f fs.img
      mkdir -p /mnt/ext4
      fallocate -l 16M fs.img
      mke2fs -t ext4 -O bigalloc,meta_bg,^resize_inode -F fs.img
      debugfs -w -R "ssv first_meta_bg 842150400" fs.img
      mount -o loop fs.img /mnt/ext4
    
    Fix it by validating s_first_meta_bg first at mount time, and
    refusing to mount if its value exceeds the largest possible meta_bg
    number.
    
    Reported-by: Ralf Spenneberg <ralf@os-t.de>
    Signed-off-by: Eryu Guan <guaneryu@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 610c2b7ff8f6d5cbad76bbe522f7f367d7116b0f
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Fri Jan 27 15:00:45 2017 -0600

    PCI/ASPM: Handle PCI-to-PCIe bridges as roots of PCIe hierarchies
    
    commit 030305d69fc6963c16003f50d7e8d74b02d0a143 upstream.
    
    In a struct pcie_link_state, link->root points to the pcie_link_state of
    the root of the PCIe hierarchy.  For the topmost link, this points to
    itself (link->root = link).  For others, we copy the pointer from the
    parent (link->root = link->parent->root).
    
    Previously we recognized that Root Ports originated PCIe hierarchies, but
    we treated PCI/PCI-X to PCIe Bridges as being in the middle of the
    hierarchy, and when we tried to copy the pointer from link->parent->root,
    there was no parent, and we dereferenced a NULL pointer:
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000090
      IP: [<ffffffff9e424350>] pcie_aspm_init_link_state+0x170/0x820
    
    Recognize that PCI/PCI-X to PCIe Bridges originate PCIe hierarchies just
    like Root Ports do, so link->root for these devices should also point to
    itself.
    
    Fixes: 51ebfc92b72b ("PCI: Enumerate switches below PCI-to-PCIe bridges")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=193411
    Link: https://bugzilla.opensuse.org/show_bug.cgi?id=1022181
    Tested-by: lists@ssl-mail.com
    Tested-by: Jayachandran C. <jnair@caviumnetworks.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
