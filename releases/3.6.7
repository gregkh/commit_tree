commit 9f3dc4baa6813f64f89ce408dc93bdcba38ba022
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Nov 17 13:21:23 2012 -0800

    Linux 3.6.7

commit 118ff53fa02dc7830e2f561b6aa2619ef41de6ab
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 13 11:22:48 2012 +0100

    ALSA: usb-audio: Fix mutex deadlock at disconnection
    
    commit 10e44239f67d0b6fb74006e61a7e883b8075247a upstream.
    
    The recent change for USB-audio disconnection race fixes introduced a
    mutex deadlock again.  There is a circular dependency between
    chip->shutdown_rwsem and pcm->open_mutex, depicted like below, when a
    device is opened during the disconnection operation:
    
    A. snd_usb_audio_disconnect() ->
         card.c::register_mutex ->
           chip->shutdown_rwsem (write) ->
             snd_card_disconnect() ->
               pcm.c::register_mutex ->
                 pcm->open_mutex
    
    B. snd_pcm_open() ->
         pcm->open_mutex ->
           snd_usb_pcm_open() ->
             chip->shutdown_rwsem (read)
    
    Since the chip->shutdown_rwsem protection in the case A is required
    only for turning on the chip->shutdown flag and it doesn't have to be
    taken for the whole operation, we can reduce its window in
    snd_usb_audio_disconnect().
    
    Reported-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f49c1beea97dfea9acb4a4dc213c12cf040b0280
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 8 14:36:18 2012 +0100

    ALSA: Fix card refcount unbalance
    
    commit 8bb4d9ce08b0a92ca174e41d92c180328f86173f upstream.
    
    There are uncovered cases whether the card refcount introduced by the
    commit a0830dbd isn't properly increased or decreased:
    - OSS PCM and mixer success paths
    - When lookup function gets NULL
    
    This patch fixes these places.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=50251
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7565b210845bb9c80836d32fcd6de5fb1bb90134
Author: Dave Chinner <david@fromorbit.com>
Date:   Fri Nov 2 14:23:12 2012 +1100

    xfs: fix buffer shudown reference count mismatch
    
    commit 03b1293edad462ad1ad62bcc5160c76758e450d5 upstream.
    
    When we shut down the filesystem, we have to unpin and free all the
    buffers currently active in the CIL. To do this we unpin and remove
    them in one operation as a result of a failed iclogbuf write. For
    buffers, we do this removal via a simultated IO completion of after
    marking the buffer stale.
    
    At the time we do this, we have two references to the buffer - the
    active LRU reference and the buf log item.  The LRU reference is
    removed by marking the buffer stale, and the active CIL reference is
    by the xfs_buf_iodone() callback that is run by
    xfs_buf_do_callbacks() during ioend processing (via the bp->b_iodone
    callback).
    
    However, ioend processing requires one more reference - that of the
    IO that it is completing. We don't have this reference, so we free
    the buffer prematurely and use it after it is freed. For buffers
    marked with XBF_ASYNC, this leads to assert failures in
    xfs_buf_rele() on debug kernels because the b_hold count is zero.
    
    Fix this by making sure we take the necessary IO reference before
    starting IO completion processing on the stale buffer, and set the
    XBF_ASYNC flag to ensure that IO completion processing removes all
    the active references from the buffer to ensure it is fully torn
    down.
    
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Mark Tinguely <tinguely@sgi.com>
    Signed-off-by: Ben Myers <bpm@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 373296d1087d33a5ece7b898a54532e558760009
Author: Dave Chinner <dchinner@redhat.com>
Date:   Fri Nov 2 11:38:44 2012 +1100

    xfs: fix reading of wrapped log data
    
    commit 6ce377afd1755eae5c93410ca9a1121dfead7b87 upstream.
    
    Commit 4439647 ("xfs: reset buffer pointers before freeing them") in
    3.0-rc1 introduced a regression when recovering log buffers that
    wrapped around the end of log. The second part of the log buffer at
    the start of the physical log was being read into the header buffer
    rather than the data buffer, and hence recovery was seeing garbage
    in the data buffer when it got to the region of the log buffer that
    was incorrectly read.
    
    Reported-by: Torsten Kaiser <just.for.lkml@googlemail.com>
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Mark Tinguely <tinguely@sgi.com>
    Signed-off-by: Ben Myers <bpm@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4c27fc8bffdb18f1e78c6cd25264a0880b39010
Author: Benjamin Marzinski <bmarzins@redhat.com>
Date:   Wed Nov 7 00:38:06 2012 -0600

    GFS2: Test bufdata with buffer locked and gfs2_log_lock held
    
    commit 96e5d1d3adf56f1c7eeb07258f6a1a0a7ae9c489 upstream.
    
    In gfs2_trans_add_bh(), gfs2 was testing if a there was a bd attached to the
    buffer without having the gfs2_log_lock held. It was then assuming it would
    stay attached for the rest of the function. However, without either the log
    lock being held of the buffer locked, __gfs2_ail_flush() could detach bd at any
    time.  This patch moves the locking before the test.  If there isn't a bd
    already attached, gfs2 can safely allocate one and attach it before locking.
    There is no way that the newly allocated bd could be on the ail list,
    and thus no way for __gfs2_ail_flush() to detach it.
    
    Signed-off-by: Benjamin Marzinski <bmarzins@redhat.com>
    Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a7c2012cafea0ee0c507b411f33d279a115d623
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Nov 8 10:13:24 2012 -0500

    drm/radeon/si: add some missing regs to the VM reg checker
    
    commit f418b88aad0c42b4caf4d79a0cf8d14a5d0a2284 upstream.
    
    This register is needed for streamout to work properly.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bdfb16dac3c0ed0551fdc7f17320be55a7bacb3
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Nov 8 10:08:04 2012 -0500

    drm/radeon/cayman: add some missing regs to the VM reg checker
    
    commit 860fe2f05fa2eacac84368e23547ec8cf3cc6652 upstream.
    
    These regs were being wronly rejected leading to rendering
    issues.
    
    fixes:
    https://bugs.freedesktop.org/show_bug.cgi?id=56876
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ea9b315caa53539867855ae14584c2075ec4dc7
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Fri Nov 9 10:45:14 2012 +0100

    drm/vmwgfx: Fix a case where the code would BUG when trying to pin GMR memory
    
    commit afcc87aa6a233e52df73552dc1dc9ae3881b7cc8 upstream.
    
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Brian Paul <brianp@vmware.com>
    Reviewed-by: Dmitry Torokhov <dtor@vmware.com>
    Cc: linux-graphics-maintainer@vmware.com
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 443b7c19cea4ec05349ff916b1a55b12a76c9981
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Fri Nov 9 10:05:57 2012 +0100

    drm/vmwgfx: Fix hibernation device reset
    
    commit 95e8f6a21996c4cc2c4574b231c6e858b749dce3 upstream.
    
    The device would not reset properly when resuming from hibernation.
    
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Brian Paul <brianp@vmware.com>
    Reviewed-by: Dmitry Torokhov <dtor@vmware.com>
    Cc: linux-graphics-maintainer@vmware.com
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2091b753133a0bd22439357ed13f68fa595b8dd7
Author: Chris Ball <cjb@laptop.org>
Date:   Mon Nov 5 14:29:49 2012 -0500

    mmc: sdhci: fix NULL dereference in sdhci_request() tuning
    
    commit 14efd957209461bbdf285bf0d67e931955d04a4c upstream.
    
    Commit 473b095a72a9 ("mmc: sdhci: fix incorrect command used in tuning")
    introduced a NULL dereference at resume-time if an SD 3.0 host controller
    raises the SDHCI_NEEDS_TUNING flag while no card is inserted.  Seen on an
    OLPC XO-4 with sdhci-pxav3, but presumably affects other controllers too.
    
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d2db636c0f85a0fa4da6b6bc82d3474745b10de
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Tue Oct 23 14:08:52 2012 +0200

    mmc: sh_mmcif: fix use after free
    
    commit a0d28ba01ebd048b4ba418142b37f5cf80e6d156 upstream.
    
    A recent commit "mmc: sh_mmcif: fix clock management" has introduced a
    use after free bug in sh_mmcif.c: in sh_mmcif_remove() the call to
    mmc_free_host() frees private driver data, therefore using it afterwards
    is a bug. Revert that hunk.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f98f5bfb851481d11b7395a9a2cd62ccdcf79d13
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Oct 23 22:29:38 2012 +0200

    futex: Handle futex_pi OWNER_DIED take over correctly
    
    commit 59fa6245192159ab5e1e17b8e31f15afa9cff4bf upstream.
    
    Siddhesh analyzed a failure in the take over of pi futexes in case the
    owner died and provided a workaround.
    See: http://sourceware.org/bugzilla/show_bug.cgi?id=14076
    
    The detailed problem analysis shows:
    
    Futex F is initialized with PTHREAD_PRIO_INHERIT and
    PTHREAD_MUTEX_ROBUST_NP attributes.
    
    T1 lock_futex_pi(F);
    
    T2 lock_futex_pi(F);
       --> T2 blocks on the futex and creates pi_state which is associated
           to T1.
    
    T1 exits
       --> exit_robust_list() runs
           --> Futex F userspace value TID field is set to 0 and
               FUTEX_OWNER_DIED bit is set.
    
    T3 lock_futex_pi(F);
       --> Succeeds due to the check for F's userspace TID field == 0
       --> Claims ownership of the futex and sets its own TID into the
           userspace TID field of futex F
       --> returns to user space
    
    T1 --> exit_pi_state_list()
           --> Transfers pi_state to waiter T2 and wakes T2 via
               rt_mutex_unlock(&pi_state->mutex)
    
    T2 --> acquires pi_state->mutex and gains real ownership of the
           pi_state
       --> Claims ownership of the futex and sets its own TID into the
           userspace TID field of futex F
       --> returns to user space
    
    T3 --> observes inconsistent state
    
    This problem is independent of UP/SMP, preemptible/non preemptible
    kernels, or process shared vs. private. The only difference is that
    certain configurations are more likely to expose it.
    
    So as Siddhesh correctly analyzed the following check in
    futex_lock_pi_atomic() is the culprit:
    
            if (unlikely(ownerdied || !(curval & FUTEX_TID_MASK))) {
    
    We check the userspace value for a TID value of 0 and take over the
    futex unconditionally if that's true.
    
    AFAICT this check is there as it is correct for a different corner
    case of futexes: the WAITERS bit became stale.
    
    Now the proposed change
    
    -       if (unlikely(ownerdied || !(curval & FUTEX_TID_MASK))) {
    +       if (unlikely(ownerdied ||
    +                       !(curval & (FUTEX_TID_MASK | FUTEX_WAITERS)))) {
    
    solves the problem, but it's not obvious why and it wreckages the
    "stale WAITERS bit" case.
    
    What happens is, that due to the WAITERS bit being set (T2 is blocked
    on that futex) it enforces T3 to go through lookup_pi_state(), which
    in the above case returns an existing pi_state and therefor forces T3
    to legitimately fight with T2 over the ownership of the pi_state (via
    pi_state->mutex). Probelm solved!
    
    Though that does not work for the "WAITERS bit is stale" problem
    because if lookup_pi_state() does not find existing pi_state it
    returns -ERSCH (due to TID == 0) which causes futex_lock_pi() to
    return -ESRCH to user space because the OWNER_DIED bit is not set.
    
    Now there is a different solution to that problem. Do not look at the
    user space value at all and enforce a lookup of possibly available
    pi_state. If pi_state can be found, then the new incoming locker T3
    blocks on that pi_state and legitimately races with T2 to acquire the
    rt_mutex and the pi_state and therefor the proper ownership of the
    user space futex.
    
    lookup_pi_state() has the correct order of checks. It first tries to
    find a pi_state associated with the user space futex and only if that
    fails it checks for futex TID value = 0. If no pi_state is available
    nothing can create new state at that point because this happens with
    the hash bucket lock held.
    
    So the above scenario changes to:
    
    T1 lock_futex_pi(F);
    
    T2 lock_futex_pi(F);
       --> T2 blocks on the futex and creates pi_state which is associated
           to T1.
    
    T1 exits
       --> exit_robust_list() runs
           --> Futex F userspace value TID field is set to 0 and
               FUTEX_OWNER_DIED bit is set.
    
    T3 lock_futex_pi(F);
       --> Finds pi_state and blocks on pi_state->rt_mutex
    
    T1 --> exit_pi_state_list()
           --> Transfers pi_state to waiter T2 and wakes it via
               rt_mutex_unlock(&pi_state->mutex)
    
    T2 --> acquires pi_state->mutex and gains ownership of the pi_state
       --> Claims ownership of the futex and sets its own TID into the
           userspace TID field of futex F
       --> returns to user space
    
    This covers all gazillion points on which T3 might come in between
    T1's exit_robust_list() clearing the TID field and T2 fixing it up. It
    also solves the "WAITERS bit stale" problem by forcing the take over.
    
    Another benefit of changing the code this way is that it makes it less
    dependent on untrusted user space values and therefor minimizes the
    possible wreckage which might be inflicted.
    
    As usual after staring for too long at the futex code my brain hurts
    so much that I really want to ditch that whole optimization of
    avoiding the syscall for the non contended case for PI futexes and rip
    out the maze of corner case handling code. Unfortunately we can't as
    user space relies on that existing behaviour, but at least thinking
    about it helps me to preserve my mental sanity. Maybe we should
    nevertheless :)
    
    Reported-and-tested-by: Siddhesh Poyarekar <siddhesh.poyarekar@gmail.com>
    Link: http://lkml.kernel.org/r/alpine.LFD.2.02.1210232138540.2756@ionos
    Acked-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32a529ebd901e7a8b5956732f0f32c5d98faa0a2
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Tue Nov 6 16:18:41 2012 +0000

    ipv6: send unsolicited neighbour advertisements to all-nodes
    
    [ Upstream commit 60713a0ca7fd6651b951cc1b4dbd528d1fc0281b ]
    
    As documented in RFC4861 (Neighbor Discovery for IP version 6) 7.2.6.,
    unsolicited neighbour advertisements should be sent to the all-nodes
    multicast address.
    
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 095ce0731f8ab7912070859b8e4d5ec663144b32
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 6 02:10:10 2012 +0000

    af-packet: fix oops when socket is not present
    
    [ Upstream commit a3d744e995d2b936c500585ae39d99ee251c89b4 ]
    
    Due to a NULL dereference, the following patch is causing oops
    in normal trafic condition:
    
    commit c0de08d04215031d68fa13af36f347a6cfa252ca
    Author: Eric Leblond <eric@regit.org>
    Date:   Thu Aug 16 22:02:58 2012 +0000
    
        af_packet: don't emit packet on orig fanout group
    
    This buggy patch was a feature fix and has reached most stable
    branches.
    
    When skb->sk is NULL and when packet fanout is used, there is a
    crash in match_fanout_group where skb->sk is accessed.
    This patch fixes the issue by returning false as soon as the
    socket is NULL: this correspond to the wanted behavior because
    the kernel as to resend the skb to all the listening socket in
    this case.
    
    Signed-off-by: Eric Leblond <eric@regit.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491eea6d0163ea9ff41892851eb5542997f2216c
Author: Cyrill Gorcunov <gorcunov@openvz.org>
Date:   Sat Nov 3 09:30:34 2012 +0000

    net: inet_diag -- Return error code if protocol handler is missed
    
    [ Upstream commit cacb6ba0f36ab14a507f4ee7697e8332899015d2 ]
    
    We've observed that in case if UDP diag module is not
    supported in kernel the netlink returns NLMSG_DONE without
    notifying a caller that handler is missed.
    
    This patch makes __inet_diag_dump to return error code instead.
    
    So as example it become possible to detect such situation
    and handle it gracefully on userspace level.
    
    Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>
    CC: David Miller <davem@davemloft.net>
    CC: Eric Dumazet <eric.dumazet@gmail.com>
    CC: Pavel Emelyanov <xemul@parallels.com>
    Acked-by: Pavel Emelyanov <xemul@parallels.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3583fce0d7937bfbf9846928f5cd41e11b5e4538
Author: Pavel Emelyanov <xemul@parallels.com>
Date:   Mon Oct 29 05:05:33 2012 +0000

    tcp-repair: Handle zero-length data put in rcv queue
    
    [ Upstream commit c454e6111d1ef4268fe98e87087216e51c2718c3 ]
    
    When sending data into a tcp socket in repair state we should check
    for the amount of data being 0 explicitly. Otherwise we'll have an skb
    with seq == end_seq in rcv queue, but tcp doesn't expect this to happen
    (in particular a warn_on in tcp_recvmsg shoots).
    
    Signed-off-by: Pavel Emelyanov <xemul@parallels.com>
    Reported-by: Giorgos Mavrikas <gmavrikas@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d4948a7d059c2604bf24812c887f85dceba4d6d
Author: Tom Parkin <tparkin@katalix.com>
Date:   Mon Oct 29 23:41:48 2012 +0000

    l2tp: fix oops in l2tp_eth_create() error path
    
    [ Upstream commit 789336360e0a2aeb9750c16ab704a02cbe035e9e ]
    
    When creating an L2TPv3 Ethernet session, if register_netdev() should fail for
    any reason (for example, automatic naming for "l2tpeth%d" interfaces hits the
    32k-interface limit), the netdev is freed in the error path.  However, the
    l2tp_eth_sess structure's dev pointer is left uncleared, and this results in
    l2tp_eth_delete() then attempting to unregister the same netdev later in the
    session teardown.  This results in an oops.
    
    To avoid this, clear the session dev pointer in the error path.
    
    Signed-off-by: Tom Parkin <tparkin@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 632f90fd0c77d74f5b6cbc8b4dd1e2330984edf6
Author: Peter Senna Tschudin <peter.senna@gmail.com>
Date:   Sun Oct 28 06:12:00 2012 +0000

    drivers/net/ethernet/nxp/lpc_eth.c: Call mdiobus_unregister before mdiobus_free
    
    [ Upstream commit 57c10b61c84bfed68b1b317d6f507a392724b9c4 ]
    
    Based on commit b27393aecf66199f5ddad37c302d3e0cfadbe6c0
    
    Calling mdiobus_free without calling mdiobus_unregister causes
    BUG_ON(). This patch fixes the issue.
    
    The semantic patch that found this issue(http://coccinelle.lip6.fr/):
    // <smpl>
    @@
    expression E;
    @@
      ... when != mdiobus_unregister(E);
    
    + mdiobus_unregister(E);
      mdiobus_free(E);
    // </smpl>
    
    Signed-off-by: Peter Senna Tschudin <peter.senna@gmail.com>
    Tested-by: Roland Stigge <stigge@antcom.de>
    Tested-by: Alexandre Pereira da Silva <aletes.xgr@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b80dd87f485767f1e1c809620329e7337f178410
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Wed Oct 31 02:45:32 2012 +0000

    net: fix divide by zero in tcp algorithm illinois
    
    [ Upstream commit 8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664 ]
    
    Reading TCP stats when using TCP Illinois congestion control algorithm
    can cause a divide by zero kernel oops.
    
    The division by zero occur in tcp_illinois_info() at:
     do_div(t, ca->cnt_rtt);
    where ca->cnt_rtt can become zero (when rtt_reset is called)
    
    Steps to Reproduce:
     1. Register tcp_illinois:
         # sysctl -w net.ipv4.tcp_congestion_control=illinois
     2. Monitor internal TCP information via command "ss -i"
         # watch -d ss -i
     3. Establish new TCP conn to machine
    
    Either it fails at the initial conn, or else it needs to wait
    for a loss or a reset.
    
    This is only related to reading stats.  The function avg_delay() also
    performs the same divide, but is guarded with a (ca->cnt_rtt > 0) at its
    calling point in update_params().  Thus, simply fix tcp_illinois_info().
    
    Function tcp_illinois_info() / get_info() is called without
    socket lock.  Thus, eliminate any race condition on ca->cnt_rtt
    by using a local stack variable.  Simply reuse info.tcpv_rttcnt,
    as its already set to ca->cnt_rtt.
    Function avg_delay() is not affected by this race condition, as
    its called with the socket lock.
    
    Cc: Petr Matousek <pmatouse@redhat.com>
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Stephen Hemminger <shemminger@vyatta.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed6f958d9875c2198c247ee568a9a9e9741a64ee
Author: Hemant Kumar <hemantk@codeaurora.org>
Date:   Thu Oct 25 18:17:54 2012 +0000

    net: usb: Fix memory leak on Tx data path
    
    [ Upstream commit 39707c2a3ba5011038b363f84d37c8a98d2d9db1 ]
    
    Driver anchors the tx urbs and defers the urb submission if
    a transmit request comes when the interface is suspended.
    Anchoring urb increments the urb reference count. These
    deferred urbs are later accessed by calling usb_get_from_anchor()
    for submission during interface resume. usb_get_from_anchor()
    unanchors the urb but urb reference count remains same.
    This causes the urb reference count to remain non-zero
    after usb_free_urb() gets called and urb never gets freed.
    Hence call usb_put_urb() after anchoring the urb to properly
    balance the reference count for these deferred urbs. Also,
    unanchor these deferred urbs during disconnect, to free them
    up.
    
    Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
    Acked-by: Oliver Neukum <oneukum@suse.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f84e04295509a11acae9efa3a8ab03e236c18886
Author: Li RongQing <roy.qing.li@gmail.com>
Date:   Wed Oct 24 14:01:18 2012 +0800

    ipv6: Set default hoplimit as zero.
    
    [ Upstream commit 14edd87dc67311556f1254a8f29cf4dd6cb5b7d1 ]
    
    Commit a02e4b7dae4551(Demark default hoplimit as zero) only changes the
    hoplimit checking condition and default value in ip6_dst_hoplimit, not
    zeros all hoplimit default value.
    
    Keep the zeroing ip6_template_metrics[RTAX_HOPLIMIT - 1] to force it as
    const, cause as a37e6e344910(net: force dst_default_metrics to const
    section)
    
    Signed-off-by: Li RongQing <roy.qing.li@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a77dd0168e94667ca4f44a33721380dfc1fd104
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 22 09:03:40 2012 +0000

    net: fix secpath kmemleak
    
    [ Upstream commit 3d861f661006606bf159fd6bd973e83dbf21d0f9 ]
    
    Mike Kazantsev found 3.5 kernels and beyond were leaking memory,
    and tracked the faulty commit to a1c7fff7e18f59e ("net:
    netdev_alloc_skb() use build_skb()")
    
    While this commit seems fine, it uncovered a bug introduced
    in commit bad43ca8325 ("net: introduce skb_try_coalesce()), in function
    kfree_skb_partial()"):
    
    If head is stolen, we free the sk_buff,
    without removing references on secpath (skb->sp).
    
    So IPsec + IP defrag/reassembly (using skb coalescing), or
    TCP coalescing could leak secpath objects.
    
    Fix this bug by calling skb_release_head_state(skb) to properly
    release all possible references to linked objects.
    
    Reported-by: Mike Kazantsev <mk.fraggod@gmail.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Bisected-by: Mike Kazantsev <mk.fraggod@gmail.com>
    Tested-by: Mike Kazantsev <mk.fraggod@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48ff12fe363a34b854b1703ecb62d57cf9c65e9c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 18 09:14:12 2012 +0000

    tcp: fix FIONREAD/SIOCINQ
    
    [ Upstream commit a3374c42aa5f7237e87ff3b0622018636b0c847e ]
    
    tcp_ioctl() tries to take into account if tcp socket received a FIN
    to report correct number bytes in receive queue.
    
    But its flaky because if the application ate the last skb,
    we return 1 instead of 0.
    
    Correct way to detect that FIN was received is to test SOCK_DONE.
    
    Reported-by: Elliot Hughes <enh@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Cc: Tom Herbert <therbert@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd2a911bc67a0c2ccf80f89f9aeb8e26fcd45ab1
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 18 03:21:55 2012 +0000

    netlink: use kfree_rcu() in netlink_release()
    
    [ Upstream commit 6d772ac5578f711d1ce7b03535d1c95bffb21dff ]
    
    On some suspend/resume operations involving wimax device, we have
    noticed some intermittent memory corruptions in netlink code.
    
    Stéphane Marchesin tracked this corruption in netlink_update_listeners()
    and suggested a patch.
    
    It appears netlink_release() should use kfree_rcu() instead of kfree()
    for the listeners structure as it may be used by other cpus using RCU
    protection.
    
    netlink_release() must set to NULL the listeners pointer when
    it is about to be freed.
    
    Also have to protect netlink_update_listeners() and
    netlink_has_listeners() if listeners is NULL.
    
    Add a nl_deref_protected() lockdep helper to properly document which
    locks protects us.
    
    Reported-by: Jonathan Kliegman <kliegs@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Stéphane Marchesin <marcheu@google.com>
    Cc: Sam Leffler <sleffler@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 400b8b8c0bc217c72caef1b980f218a0e3662a9a
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Oct 17 21:17:44 2012 +0000

    ipv4: Fix flushing of cached routing informations
    
    [ Upstream commit 13d82bf50dce632355fcccafa4fe44a9b5e706d8 ]
    
    Currently we can not flush cached pmtu/redirect informations via
    the ipv4_sysctl_rtcache_flush sysctl. We need to check the rt_genid
    of the old route and reset the nh exeption if the old route is
    expired when we bind a new route to a nh exeption.
    
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1d2d8a9f14c93996ebeb28e1da98b4eb025f88b
Author: Zijie Pan <zijie.pan@6wind.com>
Date:   Mon Oct 15 03:56:39 2012 +0000

    sctp: fix call to SCTP_CMD_PROCESS_SACK in sctp_cmd_interpreter()
    
    [ Upstream commit f6e80abeab928b7c47cc1fbf53df13b4398a2bec ]
    
    Bug introduced by commit edfee0339e681a784ebacec7e8c2dc97dc6d2839
    (sctp: check src addr when processing SACK to update transport state)
    
    Signed-off-by: Zijie Pan <zijie.pan@6wind.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Acked-by: Vlad Yasevich <vyasevich@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a9f39ed6496dd4483ae5010e0848d45a89fd278
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 7 12:39:56 2012 +0100

    ALSA: Avoid endless sleep after disconnect
    
    commit 0914f7961babbf28aaa2f19b453951fb4841c03f upstream.
    
    When disconnect callback is called, each component should wake up
    sleepers and check card->shutdown flag for avoiding the endless sleep
    blocking the proper resource release.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3ae49909bdf42b42f6ca619ff910366536e0f84
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 7 12:39:55 2012 +0100

    ALSA: Add a reference counter to card instance
    
    commit a0830dbd4e42b38aefdf3fb61ba5019a1a99ea85 upstream.
    
    For more strict protection for wild disconnections, a refcount is
    introduced to the card instance, and let it up/down when an object is
    referred via snd_lookup_*() in the open ops.
    
    The free-after-last-close check is also changed to check this refcount
    instead of the empty list, too.
    
    Reported-by: Matthieu CASTET <matthieu.castet@parrot.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62edb372be14b3b7d6d80eaaa99d40134b53118d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 7 12:39:54 2012 +0100

    ALSA: usb-audio: Fix races at disconnection in mixer_quirks.c
    
    commit 888ea7d5ac6815ba16b3b3a20f665a92c7af6724 upstream.
    
    Similar like the previous commit, cover with chip->shutdown_rwsem
    and chip->shutdown checks.
    
    Reported-by: Matthieu CASTET <matthieu.castet@parrot.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8bd61294823b6e6604fc91217f9306685e11924
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 7 12:39:53 2012 +0100

    ALSA: usb-audio: Use rwsem for disconnect protection
    
    commit 34f3c89fda4fba9fe689db22253ca8db2f5e6386 upstream.
    
    Replace mutex with rwsem for codec->shutdown protection so that
    concurrent accesses are allowed.
    
    Also add the protection to snd_usb_autosuspend() and
    snd_usb_autoresume(), too.
    
    Reported-by: Matthieu CASTET <matthieu.castet@parrot.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35522de8494e895c621794f313a1c0526f1c18bd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 7 12:39:52 2012 +0100

    ALSA: usb-audio: Fix races at disconnection
    
    commit 978520b75f0a1ce82b17e1e8186417250de6d545 upstream.
    
    Close some races at disconnection of a USB audio device by adding the
    chip->shutdown_mutex and chip->shutdown check at appropriate places.
    
    The spots to put bandaids are:
    - PCM prepare, hw_params and hw_free
    - where the usb device is accessed for communication or get speed, in
     mixer.c and others; the device speed is now cached in subs->speed
     instead of accessing to chip->dev
    
    The accesses in PCM open and close don't need the mutex protection
    because these are already handled in the core PCM disconnection code.
    
    The autosuspend/autoresume codes are still uncovered by this patch
    because of possible mutex deadlocks.  They'll be covered by the
    upcoming change to rwsem.
    
    Also the mixer codes are untouched, too.  These will be fixed in
    another patch, too.
    
    Reported-by: Matthieu CASTET <matthieu.castet@parrot.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3c3705cfd328885a6fc8a265c5949fbd243a2f7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 7 12:39:51 2012 +0100

    ALSA: PCM: Fix some races at disconnection
    
    commit 9b0573c07f278e9888c352aa9724035c75784ea0 upstream.
    
    Fix races at PCM disconnection:
    - while a PCM device is being opened or closed
    - while the PCM state is being changed without lock in prepare,
      hw_params, hw_free ops
    
    Reported-by: Matthieu CASTET <matthieu.castet@parrot.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2553761e062594503006a7fad70ec0c25eadeb30
Author: Jean Delvare <khali@linux-fr.org>
Date:   Mon Nov 5 21:54:39 2012 +0100

    hwmon: (w83627ehf) Force initial bank selection
    
    commit 3300fb4f88688029fff8dfb9ec0734f6e4cba3e7 upstream.
    
    Don't assume bank 0 is selected at device probe time. This may not be
    the case. Force bank selection at first register access to guarantee
    that we read the right registers upon driver loading.
    
    Signed-off-by: Jean Delvare <khali@linux-fr.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14239ff83f3c9bde5d86fbb40c1cf039378fe6a7
Author: Ilija Hadzic <ilijahadzic@gmail.com>
Date:   Mon Oct 29 17:35:01 2012 +0000

    drm: set dev_mapping before calling drm_open_helper
    
    commit fdb40a08ef7bc970899c3a1f471165f9c22763a1 upstream.
    
    Some drivers (specifically vmwgfx) look at dev_mapping
    in their open hook, so we have to set dev->dev_mapping
    earlier in the process.
    
    Reference:
    http://lists.freedesktop.org/archives/dri-devel/2012-October/029420.html
    
    Signed-off-by: Ilija Hadzic <ihadzic@research.bell-labs.com>
    Reported-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3f95ba0cf4317f16d9dbb311fe6f817caf1cf7f
Author: Ilija Hadzic <ilijahadzic@gmail.com>
Date:   Mon Oct 29 17:35:00 2012 +0000

    drm: restore open_count if drm_setup fails
    
    commit 0f1cb1bd94a9c967cd4ad3de51cfdabe61eb5dcc upstream.
    
    If drm_setup (called at first open) fails, the whole
    open call has failed, so we should not keep the
    open_count incremented.
    
    Signed-off-by: Ilija Hadzic <ihadzic@research.bell-labs.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d736f6b4c9b302f5a4712ca81d06f8a9cd07a658
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Wed Oct 17 14:53:04 2012 +0200

    batman-adv: Fix broadcast packet CRC calculation
    
    commit 7f112af40fecf5399b61e69ffc6b55a9d82789f7 upstream.
    
    So far the crc16 checksum for a batman-adv broadcast data packet, received
    on a batman-adv hard interface, was calculated over zero bytes of its
    content leading to many incoming broadcast data packets wrongly being
    dropped (60-80% packet loss).
    
    This patch fixes this issue by calculating the crc16 over the actual,
    complete broadcast payload.
    
    The issue is a regression introduced by
    ("batman-adv: add broadcast duplicate check").
    
    Signed-off-by: Linus Lüssing <linus.luessing@web.de>
    Acked-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de>
    Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f7fbc9c3bec1d1657d2f9f44e653e3a91d39fab
Author: NeilBrown <neilb@suse.de>
Date:   Wed Oct 31 12:16:01 2012 +1100

    NFS: fix bug in legacy DNS resolver.
    
    commit 8d96b10639fb402357b75b055b1e82a65ff95050 upstream.
    
    The DNS resolver's use of the sunrpc cache involves a 'ttl' number
    (relative) rather that a timeout (absolute).  This confused me when
    I wrote
      commit c5b29f885afe890f953f7f23424045cdad31d3e4
         "sunrpc: use seconds since boot in expiry cache"
    
    and I managed to break it.  The effect is that any TTL is interpreted
    as 0, and nothing useful gets into the cache.
    
    This patch removes the use of get_expiry() - which really expects an
    expiry time - and uses get_uint() instead, treating the int correctly
    as a ttl.
    
    This fixes a regression that has been present since 2.6.37, causing
    certain NFS accesses in certain environments to incorrectly fail.
    
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ea7934b02fb03f2ca32c1fa254d4b2e929b9e8e
Author: Bryan Schumaker <bjschuma@netapp.com>
Date:   Tue Oct 30 16:06:35 2012 -0400

    NFS: Wait for session recovery to finish before returning
    
    commit 399f11c3d872bd748e1575574de265a6304c7c43 upstream.
    
    Currently, we will schedule session recovery and then return to the
    caller of nfs4_handle_exception.  This works for most cases, but causes
    a hang on the following test case:
    
            Client                          Server
            ------                          ------
            Open file over NFS v4.1
            Write to file
                                            Expire client
            Try to lock file
    
    The server will return NFS4ERR_BADSESSION, prompting the client to
    schedule recovery.  However, the client will continue placing lock
    attempts and the open recovery never seems to be scheduled.  The
    simplest solution is to wait for session recovery to run before retrying
    the lock.
    
    Signed-off-by: Bryan Schumaker <bjschuma@netapp.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48d959bea289f9d7d41f432f37048e54661e97f8
Author: Trond Myklebust <Trond.Myklebust@netapp.com>
Date:   Mon Oct 29 18:37:40 2012 -0400

    NFSv4.1: We must release the sequence id when we fail to get a session slot
    
    commit 2240a9e2d013d8269ea425b73e1d7a54c7bc141f upstream.
    
    If we do not release the sequence id in cases where we fail to get a
    session slot, then we can deadlock if we hit a recovery scenario.
    
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25ca7c2dea345aad2e10c07789fa9faea0cc7325
Author: Trond Myklebust <Trond.Myklebust@netapp.com>
Date:   Mon Oct 29 18:53:23 2012 -0400

    NFSv4: nfs4_locku_done must release the sequence id
    
    commit 2b1bc308f492589f7d49012ed24561534ea2be8c upstream.
    
    If the state recovery machinery is triggered by the call to
    nfs4_async_handle_error() then we can deadlock.
    
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 122532c9e1706da34036b688fb70c36c49ce2e44
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Oct 21 19:23:52 2012 +0100

    nfs: Show original device name verbatim in /proc/*/mount{s,info}
    
    commit 97a54868262da1629a3e65121e65b8e8c4419d9f upstream.
    
    Since commit c7f404b ('vfs: new superblock methods to override
    /proc/*/mount{s,info}'), nfs_path() is used to generate the mounted
    device name reported back to userland.
    
    nfs_path() always generates a trailing slash when the given dentry is
    the root of an NFS mount, but userland may expect the original device
    name to be returned verbatim (as it used to be).  Make this
    canonicalisation optional and change the callers accordingly.
    
    [jrnieder@gmail.com: use flag instead of bool argument]
    Reported-and-tested-by: Chris Hiestand <chiestand@salk.edu>
    Reference: http://bugs.debian.org/669314
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Jonathan Nieder <jrnieder@gmail.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce91677037f6eea25a03616d70e0e31ba1e129de
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Tue Oct 16 13:22:19 2012 -0400

    nfsv3: Make v3 mounts fail with ETIMEDOUTs instead EIO on mountd timeouts
    
    commit acce94e68a0f346115fd41cdc298197d2d5a59ad upstream.
    
    In very busy v3 environment, rpc.mountd can respond to the NULL
    procedure but not the MNT procedure in a timely manner causing
    the MNT procedure to time out. The problem is the mount system
    call returns EIO which causes the mount to fail, instead of
    ETIMEDOUT, which would cause the mount to be retried.
    
    This patch sets the RPC_TASK_SOFT|RPC_TASK_TIMEOUT flags to
    the rpc_call_sync() call in nfs_mount() which causes
    ETIMEDOUT to be returned on timed out connections.
    
    Signed-off-by: Steve Dickson <steved@redhat.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0355494503b5922528b72a129de874bbe526f9c7
Author: Antonio Quartulli <ordex@autistici.org>
Date:   Fri Oct 26 18:54:25 2012 +0200

    mac80211: fix SSID copy on IBSS JOIN
    
    commit badecb001a310408d3473b1fc2ed5aefd0bc92a9 upstream.
    
    The 'ssid' field of the cfg80211_ibss_params is a u8 pointer and
    its length is likely to be less than IEEE80211_MAX_SSID_LEN most
    of the time.
    
    This patch fixes the ssid copy in ieee80211_ibss_join() by using
    the SSID length to prevent it from reading beyond the string.
    
    Signed-off-by: Antonio Quartulli <ordex@autistici.org>
    [rewrapped commit message, small rewording]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a817522b33cb42171cd36f5fa77fa40f447f351
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Oct 26 00:41:23 2012 +0200

    mac80211: make sure data is accessible in EAPOL check
    
    commit 6dbda2d00d466225f9db1dc695ff852443f28832 upstream.
    
    The code to allow EAPOL frames even when the station
    isn't yet marked associated needs to check that the
    incoming frame is long enough and due to paged RX it
    also can't assume skb->data contains the right data,
    it must use skb_copy_bits(). Fix this to avoid using
    data that doesn't really exist.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1db96611d45adcc0db12e8f16f78337757cc932e
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Oct 26 00:36:40 2012 +0200

    mac80211: verify that skb data is present
    
    commit 9b395bc3be1cebf0144a127c7e67d56dbdac0930 upstream.
    
    A number of places in the mesh code don't check that
    the frame data is present and in the skb header when
    trying to access. Add those checks and the necessary
    pskb_may_pull() calls. This prevents accessing data
    that doesn't actually exist.
    
    To do this, export ieee80211_get_mesh_hdrlen() to be
    able to use it in mac80211.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d45cb149a2ad467d5454a01ec60bff38b0ddfe4
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Oct 26 00:33:36 2012 +0200

    mac80211: check management frame header length
    
    commit 4a4f1a5808c8bb0b72a4f6e5904c53fb8c9cd966 upstream.
    
    Due to pskb_may_pull() checking the skb length, all
    non-management frames are checked on input whether
    their 802.11 header is fully present. Also add that
    check for management frames and remove a check that
    is now duplicate. This prevents accessing skb data
    beyond the frame end.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec17483485122fbae70bb40d77aa1f0cf1916df2
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Oct 26 12:06:41 2012 +0100

    drm/i915: Only kick out vesafb if we takeover the fbcon with KMS
    
    commit 1623392af9da983f3ad088a75076c9da05e5600d upstream.
    
    Otherwise we may remove the only console for a nomodeset system.
    
    We became more aggressive in our kicking with
    commit e188719a2891f01b3100dca4ae3a055fb5a7ab52
    Author: Daniel Vetter <daniel.vetter@ffwll.ch>
    Date:   Tue Jun 12 11:28:17 2012 +0200
    
        drm/i915: kick any firmware framebuffers before claiming the gtt
    
    Reported-and-tested-by: monnier@iro.umontreal.ca
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=54615
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f21ebfa4b5fbf5ae1fa5ae92d1e49f31db54de83
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Mon Oct 22 12:55:55 2012 +0200

    drm/i915: fix overlay on i830M
    
    commit a9193983f4f292a82a00c72971c17ec0ee8c6c15 upstream.
    
    The overlay on the i830M has a peculiar failure mode: It works the
    first time around after boot-up, but consistenly hangs the second time
    it's used.
    
    Chris Wilson has dug out a nice errata:
    
    "1.5.12 Clock Gating Disable for Display Register
    Address Offset: 06200h–06203h
    
    "Bit 3
    Ovrunit Clock Gating Disable.
    0 = Clock gating controlled by unit enabling logic
    1 = Disable clock gating function
    DevALM Errata ALM049: Overlay Clock Gating Must be Disabled:  Overlay
    & L2 Cache clock gating must be disabled in order to prevent device
    hangs when turning off overlay.SW must turn off Ovrunit clock gating
    (6200h) and L2 Cache clock gating (C8h)."
    
    Now I've nowhere found that 0xc8 register and hence couldn't apply the
    l2 cache workaround. But I've remembered that part of the magic that
    the OVERLAY_ON/OFF commands are supposed to do is to rearrange cache
    allocations so that the overlay scaler has some scratch space.
    
    And while pondering how that could explain the hang the 2nd time we
    enable the overlay, I've remembered that the old ums overlay code did
    _not_ issue the OVERLAY_OFF cmd.
    
    And indeed, disabling the OFF cmd results in the overlay working
    flawlessly, so I guess we can workaround the lack of the above
    workaround by simply never disabling the overlay engine once it's
    enabled.
    
    Note that we have the first part of the above w/a already implemented
    in i830_init_clock_gating - leave that as-is to avoid surprises.
    
    v2: Add a comment in the code.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=47827
    Tested-by: Rhys <rhyspuk@gmail.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 278cfcce7ee7805f570a3732f66c0fa8328d60c6
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Sun Oct 21 12:52:39 2012 +0200

    drm/i915: clear the entire sdvo infoframe buffer
    
    commit b6e0e543f75729f207b9c72b0162ae61170635b2 upstream.
    
    Like in the case of native hdmi, which is fixed already in
    
    commit adf00b26d18e1b3570451296e03bcb20e4798cdd
    Author: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Date:   Tue Sep 25 13:23:34 2012 -0300
    
        drm/i915: make sure we write all the DIP data bytes
    
    we need to clear the entire sdvo buffer to avoid upsetting the
    display.
    
    Since infoframe buffer writing is now a bit more elaborate, extract it
    into it's own function. This will be useful if we ever get around to
    properly update the ELD for sdvo. Also #define proper names for the
    two buffer indexes with fixed usage.
    
    v2: Cite the right commit above, spotted by Paulo Zanoni.
    
    v3: I'm too stupid to paste the right commit.
    
    v4: Ben Hutchings noticed that I've failed to handle an underflow in
    my loop logic, breaking it for i >= length + 8. Since I've just lost C
    programmer license, use his solution. Also, make the frustrated 0-base
    buffer size a notch more clear.
    
    Reported-and-tested-by: Jürg Billeter <j@bitron.ch>
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=25732
    Cc: Paulo Zanoni <przanoni@gmail.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9f1e4bbbde4036cd178cdd121f72a6d547502e4
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Nov 1 13:47:09 2012 +1000

    drm/udl: fix stride issues scanning out stride != width*bpp
    
    commit 3916e1d71b62b120888aa50bcc8d9a6200fc19a7 upstream.
    
    When buffer sharing with the i915 and using a 1680x1050 monitor,
    the i915 gives is a 6912 buffer for the 6720 width, the code doesn't
    render this properly as it uses one value to set the base address for
    reading from the vmap and for where to start on the device.
    
    This fixes it by calculating the values correctly for the device and
    for the pixmap. No idea how I haven't seen this before now.
    
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f630e56c8b16bb9dbbf92a1f30034d5cecf635ea
Author: Egbert Eich <eich@suse.de>
Date:   Wed Oct 24 18:29:49 2012 +0200

    DRM/Radeon: Fix Load Detection on legacy primary DAC.
    
    commit 83325d072185899b706de2956170b246585aaec9 upstream.
    
    An uninitialized variable led to broken load detection.
    
    Signed-off-by: Egbert Eich <eich@suse.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b954e1eecf9986c3ad62baa25a6939ac89d073da
Author: Javier Cardona <javier@cozybit.com>
Date:   Thu Oct 25 11:10:18 2012 -0700

    mac80211: don't inspect Sequence Control field on control frames
    
    commit f7fbf70ee9db6da6033ae50d100e017ac1f26555 upstream.
    
    Per IEEE Std. 802.11-2012, Sec 8.2.4.4.1, the sequence Control field is
    not present in control frames.  We noticed this problem when processing
    Block Ack Requests.
    
    Signed-off-by: Javier Cardona <javier@cozybit.com>
    Signed-off-by: Javier Lopez <jlopex@cozybit.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f93b7f659e82603aaf64cce070b189f2aefcf41f
Author: Javier Cardona <javier@cozybit.com>
Date:   Wed Oct 24 12:43:30 2012 -0700

    mac80211: Only process mesh config header on frames that RA_MATCH
    
    commit 555cb715be8ef98b8ec362b23dfc254d432a35b1 upstream.
    
    Doing otherwise is wrong, and may wreak havoc on the mpp tables,
    specially if the frame is encrypted.
    
    Reported-by: Chaoxing Lin <Chaoxing.Lin@ultra-3eti.com>
    Signed-off-by: Javier Cardona <javier@cozybit.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7d0737b4c3912713a6fb381cde2e375c2ad4f0c
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Oct 24 14:19:53 2012 +0200

    mac80211: use blacklist for duplicate IE check
    
    commit 9690fb169b433a66485c808e4fc352b8a0f8d866 upstream.
    
    Instead of the current whitelist which accepts duplicates
    only for the quiet and vendor IEs, use a blacklist of all
    IEs (that we currently parse) that can't be duplicated.
    
    This avoids detecting a beacon as corrupt in the future
    when new IEs are added that can be duplicated.
    
    Signed-off-by: Paul Stewart <pstew@chromium.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb0c3c845ee8fa519141c31f56fa2aaa902917c7
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Oct 25 21:51:59 2012 +0200

    wireless: drop invalid mesh address extension frames
    
    commit 7dd111e8ee10cc6816669eabcad3334447673236 upstream.
    
    The mesh header can have address extension by a 4th
    or a 5th and 6th address, but never both. Drop such
    frames in 802.11 -> 802.3 conversion along with any
    frames that have the wrong extension.
    
    Reviewed-by: Javier Cardona <javier@cozybit.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb86b3646c134640e9043a03b5972d07d09b86fe
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Wed Oct 17 13:56:19 2012 +0200

    cfg80211: fix antenna gain handling
    
    commit c4a9fafc77a5318f5ed26c509bbcddf03e18c201 upstream.
    
    No driver initializes chan->max_antenna_gain to something sensible, and
    the only place where it is being used right now is inside ath9k. This
    leads to ath9k potentially using less tx power than it can use, which can
    decrease performance/range in some rare cases.
    
    Rather than going through every single driver, this patch initializes
    chan->orig_mag in wiphy_register(), ignoring whatever value the driver
    left in there. If a driver for some reason wishes to limit it independent
    from regulatory rulesets, it can do so internally.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9cf63d6c6ed89271909d290689d55f53a62e8d3
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Wed Oct 31 22:04:26 2012 -0700

    target: Re-add explict zeroing of INQUIRY bounce buffer memory
    
    commit dea5f0998aa82bdeca260b87c653db11e91329b2 upstream.
    
    This patch fixes a regression in spc_emulate_inquiry() code where the
    local scope bounce buffer was no longer getting it's memory zeroed,
    causing various problems with SCSI initiators that depend upon areas
    of INQUIRY EVPD=0x83 payload having been zeroed.
    
    This bug was introduced with the following v3.7-rc1 patch + CC'ed
    stable commit:
    
    commit ffe7b0e9326d9c68f5688bef691dd49f1e0d3651
    Author: Paolo Bonzini <pbonzini@redhat.com>
    Date:   Fri Sep 7 17:30:38 2012 +0200
    
        target: support zero allocation length in INQUIRY
    
    Go ahead and re-add the missing memset of bounce buffer memory to be
    copied into the outgoing se_cmd descriptor kmapped SGL payload.
    
    Reported-by: Kelsey Prantis <kelsey.prantis@intel.com>
    Cc: Kelsey Prantis <kelsey.prantis@intel.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Grover <agrover@redhat.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2679244f79202bed2173078da75f62d0c28ae0a
Author: Steve Hodgson <steve@purestorage.com>
Date:   Wed Oct 31 10:24:02 2012 -0700

    target: Fix incorrect usage of nested IRQ spinlocks in ABORT_TASK path
    
    commit ab74b3d62f05192bf8fb8f169e7999d1183b2e08 upstream.
    
    This patch changes core_tmr_abort_task() to use spin_lock -> spin_unlock
    around se_cmd->t_state_lock while spin_lock_irqsave is held via
    se_sess->sess_cmd_lock.
    
    Signed-off-by: Steve Hodgson <steve@purestorage.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10b43f97a965ccb8ec6c0e7a841eecceb4326f83
Author: Roland Dreier <roland@purestorage.com>
Date:   Wed Oct 31 09:16:46 2012 -0700

    iscsi-target: Fix missed wakeup race in TX thread
    
    commit d5627acba9ae584cf4928af19f7ddf5f6837de32 upstream.
    
    The sleeping code in iscsi_target_tx_thread() is susceptible to the classic
    missed wakeup race:
    
     - TX thread finishes handle_immediate_queue() and handle_response_queue(),
       thinks both queues are empty.
     - Another thread adds a queue entry and does wake_up_process(), which does
       nothing because the TX thread is still awake.
     - TX thread does schedule_timeout() and sleeps forever.
    
    In practice this can kill an iSCSI connection if for example an initiator
    does single-threaded writes and the target misses the wakeup window when
    queueing an R2T; in this case the connection will be stuck until the
    initiator loses patience and does some task management operation (or kills
    the connection entirely).
    
    Fix this by converting to wait_event_interruptible(), which does not
    suffer from this sort of race.
    
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 323ef3123473ecaa03d248082e4107f0cc48b871
Author: Roland Dreier <roland@purestorage.com>
Date:   Wed Oct 31 09:16:45 2012 -0700

    target: Avoid integer overflow in se_dev_align_max_sectors()
    
    commit 3e03989b5868acf69a391a424dc71fcd6cc48167 upstream.
    
    The expression (max_sectors * block_size) might overflow a u32
    (indeed, since iblock sets max_hw_sectors to UINT_MAX, it is
    guaranteed to overflow and end up with a much-too-small result in many
    common cases).  Fix this by doing an equivalent calculation that
    doesn't require multiplication.
    
    While we're touching this code, avoid splitting a printk format across
    two lines and use pr_info(...) instead of printk(KERN_INFO ...).
    
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a62d0ff8b88d2ee9fe26f466a36d2145e6ac923
Author: Roland Dreier <roland@purestorage.com>
Date:   Wed Oct 31 09:16:44 2012 -0700

    target: Don't return success from module_init() if setup fails
    
    commit 0d0f9dfb31e0a6c92063e235417b42df185b3275 upstream.
    
    If the call to core_dev_release_virtual_lun0() fails, then nothing
    sets ret to anything other than 0, so even though everything is
    torn down and freed, target_core_init_configfs() will seem to succeed
    and the module will be loaded.  Fix this by passing the return value
    on up the chain.
    
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fc9d86a23e2b5eb411c33d3bb8a8ee9a06f34d0
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Thu Oct 25 09:51:39 2012 +0200

    rt2800: validate step value for temperature compensation
    
    commit bf7e1abe434ba9e22e8dc04a4cba4ab504b788b8 upstream.
    
    Some hardware has correct (!= 0xff) value of tssi_bounds[4] in the
    EEPROM, but step is equal to 0xff. This results on ridiculous delta
    calculations and completely broke TX power settings.
    
    Reported-and-tested-by: Pavel Lucik <pavel.lucik@gmail.com>
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Acked-by: Ivo van Doorn <IvDoorn@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec3559970271fe2b28f731dd8bf32c3ef5c0bc02
Author: Sven Eckelmann <sven@narfation.org>
Date:   Mon Oct 29 13:25:20 2012 +0100

    ath9k: Test for TID only in BlockAcks while checking tx status
    
    commit 6fe7cc71bbf3a0bc28c9cec3c00bc11e81344412 upstream.
    
    The ath9k xmit functions for AMPDUs can send frames as non-aggregate in case
    only one frame is currently available. The client will then answer using a
    normal Ack instead of a BlockAck. This acknowledgement has no TID stored and
    therefore the hardware is not able to provide us the corresponding TID.
    
    The TID set by the hardware in the tx status descriptor has to be seen as
    undefined and not as a valid TID value for normal acknowledgements. Doing
    otherwise results in a massive amount of retransmissions and stalls of
    connections.
    
    Users may experience low bandwidth and complete connection stalls in
    environments with transfers using multiple TIDs.
    
    This regression was introduced in b11b160defc48e4daa283f785192ea3a23a51f8e
    ("ath9k: validate the TID in the tx status information").
    
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de>
    Acked-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd585fb70b89fb57f8dffb03a2a72c30f81f5da6
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Fri Oct 26 00:31:11 2012 +0200

    ath9k: fix stale pointers potentially causing access to free'd skbs
    
    commit 8c6e30936a7893a85f6222084f0f26aceb81137a upstream.
    
    bf->bf_next is only while buffers are chained as part of an A-MPDU
    in the tx queue. When a tid queue is flushed (e.g. on tearing down
    an aggregation session), frames can be enqueued again as normal
    transmission, without bf_next being cleared. This can lead to the
    old pointer being dereferenced again later.
    
    This patch might fix crashes and "Failed to stop TX DMA!" messages.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e097213a658d3eda65f8cf1a6851eb4e4b6a10b9
Author: Rolf Eike Beer <eike-kernel@sf-tec.de>
Date:   Tue Oct 30 23:39:10 2012 -0700

    Input: tsc40 - remove wrong announcement of pressure support
    
    commit 32ed1911fc79908d704023317d4ddeb3883fd07e upstream.
    
    The tsc40 driver announces it supports the pressure event, but will never
    send one. The announcement will cause tslib to wait for such events and
    sending all touch events with a pressure of 0. Removing the announcement
    will make tslib fall back to emulating the pressure on touch events so
    everything works as expected.
    
    Signed-off-by: Rolf Eike Beer <eike-kernel@sf-tec.de>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1f904197f775a3e88486e64d2802a142bbdfd0a
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Oct 31 22:30:54 2012 +0000

    ixgbe: PTP get_ts_info missing software support
    
    commit 50f8d35de8ba4af311ea1176c534e8b73bb198e5 upstream.
    
    This patch corrects the ethtool get_ts_info functon which did not state that
    software timestamping was supported, even though it is.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Stephen Ko <stephen.s.ko@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f7a06d68337171fef9f8e7621a6d73777385619
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Wed Oct 31 12:38:31 2012 -0400

    xen/mmu: Use Xen specific TLB flush instead of the generic one.
    
    commit 95a7d76897c1e7243d4137037c66d15cbf2cce76 upstream.
    
    As Mukesh explained it, the MMUEXT_TLB_FLUSH_ALL allows the
    hypervisor to do a TLB flush on all active vCPUs. If instead
    we were using the generic one (which ends up being xen_flush_tlb)
    we end up making the MMUEXT_TLB_FLUSH_LOCAL hypercall. But
    before we make that hypercall the kernel will IPI all of the
    vCPUs (even those that were asleep from the hypervisor
    perspective). The end result is that we needlessly wake them
    up and do a TLB flush when we can just let the hypervisor
    do it correctly.
    
    This patch gives around 50% speed improvement when migrating
    idle guest's from one host to another.
    
    Oracle-bug: 14630170
    
    Tested-by:  Jingjie Jiang <jingjie.jiang@oracle.com>
    Suggested-by:  Mukesh Rathor <mukesh.rathor@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 601a0cc3fedf6b731c6f5050f542db810c03033e
Author: David Vrabel <david.vrabel@citrix.com>
Date:   Wed Oct 24 12:39:02 2012 +0100

    xen/gntdev: don't leak memory from IOCTL_GNTDEV_MAP_GRANT_REF
    
    commit a67baeb77375199bbd842fa308cb565164dd1f19 upstream.
    
    map->kmap_ops allocated in gntdev_alloc_map() wasn't freed by
    gntdev_put_map().
    
    Add a gntdev_free_map() helper function to free everything allocated
    by gntdev_alloc_map().
    
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
