commit f61e1c3638dddaa1a1f3bb59d2bc288d9f0f1b5b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Aug 19 08:16:29 2020 +0200

    Linux 5.4.59
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5de0b5247cba3012cdb6bae3c5a647ab012390fe
Author: Guoyu Huang <hgy5945@gmail.com>
Date:   Wed Aug 5 03:53:50 2020 -0700

    io_uring: Fix NULL pointer dereference in loop_rw_iter()
    
    commit 2dd2111d0d383df104b144e0d1f6b5a00cb7cd88 upstream.
    
    loop_rw_iter() does not check whether the file has a read or
    write function. This can lead to NULL pointer dereference
    when the user passes in a file descriptor that does not have
    read or write function.
    
    The crash log looks like this:
    
    [   99.834071] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [   99.835364] #PF: supervisor instruction fetch in kernel mode
    [   99.836522] #PF: error_code(0x0010) - not-present page
    [   99.837771] PGD 8000000079d62067 P4D 8000000079d62067 PUD 79d8c067 PMD 0
    [   99.839649] Oops: 0010 [#2] SMP PTI
    [   99.840591] CPU: 1 PID: 333 Comm: io_wqe_worker-0 Tainted: G      D           5.8.0 #2
    [   99.842622] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014
    [   99.845140] RIP: 0010:0x0
    [   99.845840] Code: Bad RIP value.
    [   99.846672] RSP: 0018:ffffa1c7c01ebc08 EFLAGS: 00010202
    [   99.848018] RAX: 0000000000000000 RBX: ffff92363bd67300 RCX: ffff92363d461208
    [   99.849854] RDX: 0000000000000010 RSI: 00007ffdbf696bb0 RDI: ffff92363bd67300
    [   99.851743] RBP: ffffa1c7c01ebc40 R08: 0000000000000000 R09: 0000000000000000
    [   99.853394] R10: ffffffff9ec692a0 R11: 0000000000000000 R12: 0000000000000010
    [   99.855148] R13: 0000000000000000 R14: ffff92363d461208 R15: ffffa1c7c01ebc68
    [   99.856914] FS:  0000000000000000(0000) GS:ffff92363dd00000(0000) knlGS:0000000000000000
    [   99.858651] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   99.860032] CR2: ffffffffffffffd6 CR3: 000000007ac66000 CR4: 00000000000006e0
    [   99.861979] Call Trace:
    [   99.862617]  loop_rw_iter.part.0+0xad/0x110
    [   99.863838]  io_write+0x2ae/0x380
    [   99.864644]  ? kvm_sched_clock_read+0x11/0x20
    [   99.865595]  ? sched_clock+0x9/0x10
    [   99.866453]  ? sched_clock_cpu+0x11/0xb0
    [   99.867326]  ? newidle_balance+0x1d4/0x3c0
    [   99.868283]  io_issue_sqe+0xd8f/0x1340
    [   99.869216]  ? __switch_to+0x7f/0x450
    [   99.870280]  ? __switch_to_asm+0x42/0x70
    [   99.871254]  ? __switch_to_asm+0x36/0x70
    [   99.872133]  ? lock_timer_base+0x72/0xa0
    [   99.873155]  ? switch_mm_irqs_off+0x1bf/0x420
    [   99.874152]  io_wq_submit_work+0x64/0x180
    [   99.875192]  ? kthread_use_mm+0x71/0x100
    [   99.876132]  io_worker_handle_work+0x267/0x440
    [   99.877233]  io_wqe_worker+0x297/0x350
    [   99.878145]  kthread+0x112/0x150
    [   99.878849]  ? __io_worker_unuse+0x100/0x100
    [   99.879935]  ? kthread_park+0x90/0x90
    [   99.880874]  ret_from_fork+0x22/0x30
    [   99.881679] Modules linked in:
    [   99.882493] CR2: 0000000000000000
    [   99.883324] ---[ end trace 4453745f4673190b ]---
    [   99.884289] RIP: 0010:0x0
    [   99.884837] Code: Bad RIP value.
    [   99.885492] RSP: 0018:ffffa1c7c01ebc08 EFLAGS: 00010202
    [   99.886851] RAX: 0000000000000000 RBX: ffff92363acd7f00 RCX: ffff92363d461608
    [   99.888561] RDX: 0000000000000010 RSI: 00007ffe040d9e10 RDI: ffff92363acd7f00
    [   99.890203] RBP: ffffa1c7c01ebc40 R08: 0000000000000000 R09: 0000000000000000
    [   99.891907] R10: ffffffff9ec692a0 R11: 0000000000000000 R12: 0000000000000010
    [   99.894106] R13: 0000000000000000 R14: ffff92363d461608 R15: ffffa1c7c01ebc68
    [   99.896079] FS:  0000000000000000(0000) GS:ffff92363dd00000(0000) knlGS:0000000000000000
    [   99.898017] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   99.899197] CR2: ffffffffffffffd6 CR3: 000000007ac66000 CR4: 00000000000006e0
    
    Fixes: 32960613b7c3 ("io_uring: correctly handle non ->{read,write}_iter() file_operations")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guoyu Huang <hgy5945@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4db28111b2a30c8c4cdecceafd267283fdbb8aae
Author: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
Date:   Wed Jul 29 22:22:34 2020 +0200

    s390/gmap: improve THP splitting
    
    commit ba925fa35057a062ac98c3e8138b013ce4ce351c upstream.
    
    During s390_enable_sie(), we need to take care of splitting all qemu user
    process THP mappings. This is currently done with follow_page(FOLL_SPLIT),
    by simply iterating over all vma ranges, with PAGE_SIZE increment.
    
    This logic is sub-optimal and can result in a lot of unnecessary overhead,
    especially when using qemu and ASAN with large shadow map. Ilya reported
    significant system slow-down with one CPU busy for a long time and overall
    unresponsiveness.
    
    Fix this by using walk_page_vma() and directly calling split_huge_pmd()
    only for present pmds, which greatly reduces overhead.
    
    Cc: <stable@vger.kernel.org> # v5.4+
    Reported-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Tested-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 756a70b6dcc3b804782f30856408777f91766e10
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Tue Jul 14 22:03:26 2020 +0200

    s390/dasd: fix inability to use DASD with DIAG driver
    
    commit 9f4aa52387c68049403b59939df5c0dd8e3872cc upstream.
    
    During initialization of the DASD DIAG driver a request is issued
    that has a bio structure that resides on the stack. With virtually
    mapped kernel stacks this bio address might be in virtual storage
    which is unsuitable for usage with the diag250 call.
    In this case the device can not be set online using the DIAG
    discipline and fails with -EOPNOTSUP.
    In the system journal the following error message is presented:
    
    dasd: X.X.XXXX Setting the DASD online with discipline DIAG failed
    with rc=-95
    
    Fix by allocating the bio structure instead of having it on the stack.
    
    Fixes: ce3dc447493f ("s390: add support for virtually mapped kernel stacks")
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Cc: stable@vger.kernel.org #4.20
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dccc66daeba50786fe2fcac1aa3540ac397b55b5
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Thu Aug 13 09:21:09 2020 +0300

    xen/gntdev: Fix dmabuf import with non-zero sgt offset
    
    commit 5fa4e6f1c2d8c9a4e47e1931b42893172d388f2b upstream.
    
    It is possible that the scatter-gather table during dmabuf import has
    non-zero offset of the data, but user-space doesn't expect that.
    Fix this by failing the import, so user-space doesn't access wrong data.
    
    Fixes: bf8dc55b1358 ("xen/gntdev: Implement dma-buf import functionality")
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Acked-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200813062113.11030-2-andr2000@gmail.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e41ac0bfdfdd7b3dab56562077487bb397c1f02
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Mon Jul 27 11:13:40 2020 +0200

    xen/balloon: make the balloon wait interruptible
    
    commit 88a479ff6ef8af7f07e11593d58befc644244ff7 upstream.
    
    So it can be killed, or else processes can get hung indefinitely
    waiting for balloon pages.
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200727091342.52325-3-roger.pau@citrix.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee4c180d93d0c33565c3edd32dbce7760084493b
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Mon Jul 27 11:13:39 2020 +0200

    xen/balloon: fix accounting in alloc_xenballooned_pages error path
    
    commit 1951fa33ec259abdf3497bfee7b63e7ddbb1a394 upstream.
    
    target_unpopulated is incremented with nr_pages at the start of the
    function, but the call to free_xenballooned_pages will only subtract
    pgno number of pages, and thus the rest need to be subtracted before
    returning or else accounting will be skewed.
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200727091342.52325-2-roger.pau@citrix.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db1f4c745a91c3988c57cefb125c7a01711de5e2
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Aug 11 18:35:30 2020 -0700

    fs/minix: reject too-large maximum file size
    
    commit 270ef41094e9fa95273f288d7d785313ceab2ff3 upstream.
    
    If the minix filesystem tries to map a very large logical block number to
    its on-disk location, block_to_path() can return offsets that are too
    large, causing out-of-bounds memory accesses when accessing indirect index
    blocks.  This should be prevented by the check against the maximum file
    size, but this doesn't work because the maximum file size is read directly
    from the on-disk superblock and isn't validated itself.
    
    Fix this by validating the maximum file size at mount time.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+c7d9ec7a1a7272dd71b3@syzkaller.appspotmail.com
    Reported-by: syzbot+3b7b03a0c28948054fb5@syzkaller.appspotmail.com
    Reported-by: syzbot+6e056ee473568865f3e6@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Qiujun Huang <anenbupt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200628060846.682158-4-ebiggers@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c7e720a165baeaff3853d1cfe017f596381ae1d
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Aug 11 18:35:27 2020 -0700

    fs/minix: don't allow getting deleted inodes
    
    commit facb03dddec04e4aac1bb2139accdceb04deb1f3 upstream.
    
    If an inode has no links, we need to mark it bad rather than allowing it
    to be accessed.  This avoids WARNINGs in inc_nlink() and drop_nlink() when
    doing directory operations on a fuzzed filesystem.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+a9ac3de1b5de5fb10efc@syzkaller.appspotmail.com
    Reported-by: syzbot+df958cf5688a96ad3287@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Qiujun Huang <anenbupt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200628060846.682158-3-ebiggers@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5305f119907ddcd5100b81264af43b930700c66
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Aug 11 18:35:24 2020 -0700

    fs/minix: check return value of sb_getblk()
    
    commit da27e0a0e5f655f0d58d4e153c3182bb2b290f64 upstream.
    
    Patch series "fs/minix: fix syzbot bugs and set s_maxbytes".
    
    This series fixes all syzbot bugs in the minix filesystem:
    
            KASAN: null-ptr-deref Write in get_block
            KASAN: use-after-free Write in get_block
            KASAN: use-after-free Read in get_block
            WARNING in inc_nlink
            KMSAN: uninit-value in get_block
            WARNING in drop_nlink
    
    It also fixes the minix filesystem to set s_maxbytes correctly, so that
    userspace sees the correct behavior when exceeding the max file size.
    
    This patch (of 6):
    
    sb_getblk() can fail, so check its return value.
    
    This fixes a NULL pointer dereference.
    
    Originally from Qiujun Huang.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+4a88b2b9dc280f47baf4@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Qiujun Huang <anenbupt@gmail.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200628060846.682158-1-ebiggers@kernel.org
    Link: http://lkml.kernel.org/r/20200628060846.682158-2-ebiggers@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5be9072b8121b578b1429a35d5b158d55583e043
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Aug 10 11:21:11 2020 -0700

    bitfield.h: don't compile-time validate _val in FIELD_FIT
    
    commit 444da3f52407d74c9aa12187ac6b01f76ee47d62 upstream.
    
    When ur_load_imm_any() is inlined into jeq_imm(), it's possible for the
    compiler to deduce a case where _val can only have the value of -1 at
    compile time. Specifically,
    
    /* struct bpf_insn: _s32 imm */
    u64 imm = insn->imm; /* sign extend */
    if (imm >> 32) { /* non-zero only if insn->imm is negative */
      /* inlined from ur_load_imm_any */
      u32 __imm = imm >> 32; /* therefore, always 0xffffffff */
      if (__builtin_constant_p(__imm) && __imm > 255)
        compiletime_assert_XXX()
    
    This can result in tripping a BUILD_BUG_ON() in __BF_FIELD_CHECK() that
    checks that a given value is representable in one byte (interpreted as
    unsigned).
    
    FIELD_FIT() should return true or false at runtime for whether a value
    can fit for not. Don't break the build over a value that's too large for
    the mask. We'd prefer to keep the inlining and compiler optimizations
    though we know this case will always return false.
    
    Cc: stable@vger.kernel.org
    Fixes: 1697599ee301a ("bitfield.h: add FIELD_FIT() helper")
    Link: https://lore.kernel.org/kernel-hardening/CAK7LNASvb0UDJ0U5wkYYRzTAdnEs64HjXpEUL7d=V0CXiAXcNw@mail.gmail.com/
    Reported-by: Masahiro Yamada <masahiroy@kernel.org>
    Debugged-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e95a74f4c27c02df11c983e94e1e227229b60ba
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jun 17 09:48:56 2020 -0400

    crypto: cpt - don't sleep of CRYPTO_TFM_REQ_MAY_SLEEP was not specified
    
    commit 9e27c99104707f083dccd3b4d79762859b5a0614 upstream.
    
    There is this call chain:
    cvm_encrypt -> cvm_enc_dec -> cptvf_do_request -> process_request -> kzalloc
    where we call sleeping allocator function even if CRYPTO_TFM_REQ_MAY_SLEEP
    was not specified.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org      # v4.11+
    Fixes: c694b233295b ("crypto: cavium - Add the Virtual Function driver for CPT")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28bd8f392f4a4c910ec3b64c3e77ec7eaf027d11
Author: John Allen <john.allen@amd.com>
Date:   Mon Jun 22 15:24:02 2020 -0500

    crypto: ccp - Fix use of merged scatterlists
    
    commit 8a302808c60d441d9884cb00ea7f2b534f2e3ca5 upstream.
    
    Running the crypto manager self tests with
    CONFIG_CRYPTO_MANAGER_EXTRA_TESTS may result in several types of errors
    when using the ccp-crypto driver:
    
    alg: skcipher: cbc-des3-ccp encryption failed on test vector 0; expected_error=0, actual_error=-5 ...
    
    alg: skcipher: ctr-aes-ccp decryption overran dst buffer on test vector 0 ...
    
    alg: ahash: sha224-ccp test failed (wrong result) on test vector ...
    
    These errors are the result of improper processing of scatterlists mapped
    for DMA.
    
    Given a scatterlist in which entries are merged as part of mapping the
    scatterlist for DMA, the DMA length of a merged entry will reflect the
    combined length of the entries that were merged. The subsequent
    scatterlist entry will contain DMA information for the scatterlist entry
    after the last merged entry, but the non-DMA information will be that of
    the first merged entry.
    
    The ccp driver does not take this scatterlist merging into account. To
    address this, add a second scatterlist pointer to track the current
    position in the DMA mapped representation of the scatterlist. Both the DMA
    representation and the original representation of the scatterlist must be
    tracked as while most of the driver can use just the DMA representation,
    scatterlist_map_and_copy() must use the original representation and
    expects the scatterlist pointer to be accurate to the original
    representation.
    
    In order to properly walk the original scatterlist, the scatterlist must
    be walked until the combined lengths of the entries seen is equal to the
    DMA length of the current entry being processed in the DMA mapped
    representation.
    
    Fixes: 63b945091a070 ("crypto: ccp - CCP device driver and interface support")
    Signed-off-by: John Allen <john.allen@amd.com>
    Cc: stable@vger.kernel.org
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c660aa47304365e2dc7eeb58199690e5e7964c1
Author: Tom Rix <trix@redhat.com>
Date:   Mon Jul 13 07:06:34 2020 -0700

    crypto: qat - fix double free in qat_uclo_create_batch_init_list
    
    commit c06c76602e03bde24ee69a2022a829127e504202 upstream.
    
    clang static analysis flags this error
    
    qat_uclo.c:297:3: warning: Attempt to free released memory
      [unix.Malloc]
                    kfree(*init_tab_base);
                    ^~~~~~~~~~~~~~~~~~~~~
    
    When input *init_tab_base is null, the function allocates memory for
    the head of the list.  When there is problem allocating other list
    elements the list is unwound and freed.  Then a check is made if the
    list head was allocated and is also freed.
    
    Keeping track of the what may need to be freed is the variable 'tail_old'.
    The unwinding/freeing block is
    
            while (tail_old) {
                    mem_init = tail_old->next;
                    kfree(tail_old);
                    tail_old = mem_init;
            }
    
    The problem is that the first element of tail_old is also what was
    allocated for the list head
    
                    init_header = kzalloc(sizeof(*init_header), GFP_KERNEL);
                    ...
                    *init_tab_base = init_header;
                    flag = 1;
            }
            tail_old = init_header;
    
    So *init_tab_base/init_header are freed twice.
    
    There is another problem.
    When the input *init_tab_base is non null the tail_old is calculated by
    traveling down the list to first non null entry.
    
            tail_old = init_header;
            while (tail_old->next)
                    tail_old = tail_old->next;
    
    When the unwinding free happens, the last entry of the input list will
    be freed.
    
    So the freeing needs a general changed.
    If locally allocated the first element of tail_old is freed, else it
    is skipped.  As a bit of cleanup, reset *init_tab_base if it came in
    as null.
    
    Fixes: b4b7e67c917f ("crypto: qat - Intel(R) QAT ucode part of fw loader")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9add5d7d94b3e96c44acbba8daa4bf61d01381d
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jun 17 09:49:52 2020 -0400

    crypto: hisilicon - don't sleep of CRYPTO_TFM_REQ_MAY_SLEEP was not specified
    
    commit 5ead051780404b5cb22147170acadd1994dc3236 upstream.
    
    There is this call chain:
    sec_alg_skcipher_encrypt -> sec_alg_skcipher_crypto ->
    sec_alg_alloc_and_calc_split_sizes -> kcalloc
    where we call sleeping allocator function even if CRYPTO_TFM_REQ_MAY_SLEEP
    was not specified.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org      # v4.19+
    Fixes: 915e4e8413da ("crypto: hisilicon - SEC security accelerator driver")
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f9ba7229c44356c8d036762a9765d0e37a0ac0
Author: Matteo Croce <mcroce@linux.microsoft.com>
Date:   Mon Jul 6 19:37:36 2020 -0700

    pstore: Fix linking when crypto API disabled
    
    commit fd49e03280e596e54edb93a91bc96170f8e97e4a upstream.
    
    When building a kernel with CONFIG_PSTORE=y and CONFIG_CRYPTO not set,
    a build error happens:
    
        ld: fs/pstore/platform.o: in function `pstore_dump':
        platform.c:(.text+0x3f9): undefined reference to `crypto_comp_compress'
        ld: fs/pstore/platform.o: in function `pstore_get_backend_records':
        platform.c:(.text+0x784): undefined reference to `crypto_comp_decompress'
    
    This because some pstore code uses crypto_comp_(de)compress regardless
    of the CONFIG_CRYPTO status. Fix it by wrapping the (de)compress usage
    by IS_ENABLED(CONFIG_PSTORE_COMPRESS)
    
    Signed-off-by: Matteo Croce <mcroce@linux.microsoft.com>
    Link: https://lore.kernel.org/lkml/20200706234045.9516-1-mcroce@linux.microsoft.com
    Fixes: cb3bee0369bc ("pstore: Use crypto compress API")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a2e558c8b3084a292f461fb9adca5bb78792ee5
Author: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Date:   Fri Jul 3 01:55:59 2020 +0300

    tpm: Unify the mismatching TPM space buffer sizes
    
    commit 6c4e79d99e6f42b79040f1a33cd4018f5425030b upstream.
    
    The size of the buffers for storing context's and sessions can vary from
    arch to arch as PAGE_SIZE can be anything between 4 kB and 256 kB (the
    maximum for PPC64). Define a fixed buffer size set to 16 kB. This should be
    enough for most use with three handles (that is how many we allow at the
    moment). Parametrize the buffer size while doing this, so that it is easier
    to revisit this later on if required.
    
    Cc: stable@vger.kernel.org
    Reported-by: Stefan Berger <stefanb@linux.ibm.com>
    Fixes: 745b361e989a ("tpm: infrastructure for TPM spaces")
    Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
    Tested-by: Stefan Berger <stefanb@linux.ibm.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 169d55c486f895d05f190775a605d22ca6606a6d
Author: Hector Martin <marcan@marcan.st>
Date:   Mon Aug 10 17:25:02 2020 +0900

    ALSA: usb-audio: add quirk for Pioneer DDJ-RB
    
    commit 6e8596172ee1cd46ec0bfd5adcf4ff86371478b6 upstream.
    
    This is just another Pioneer device with fixed endpoints. Input is dummy
    but used as feedback (it always returns silence).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200810082502.225979-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3ec61c84d857ed170979839cfcbf85b3ca7af4f
Author: Jon Derrick <jonathan.derrick@intel.com>
Date:   Tue Jul 21 14:26:09 2020 -0600

    irqdomain/treewide: Free firmware node after domain removal
    
    commit ec0160891e387f4771f953b888b1fe951398e5d9 upstream.
    
    Commit 711419e504eb ("irqdomain: Add the missing assignment of
    domain->fwnode for named fwnode") unintentionally caused a dangling pointer
    page fault issue on firmware nodes that were freed after IRQ domain
    allocation. Commit e3beca48a45b fixed that dangling pointer issue by only
    freeing the firmware node after an IRQ domain allocation failure. That fix
    no longer frees the firmware node immediately, but leaves the firmware node
    allocated after the domain is removed.
    
    The firmware node must be kept around through irq_domain_remove, but should be
    freed it afterwards.
    
    Add the missing free operations after domain removal where where appropriate.
    
    Fixes: e3beca48a45b ("irqdomain/treewide: Keep firmware node unconditionally allocated")
    Signed-off-by: Jon Derrick <jonathan.derrick@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>   # drivers/pci
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1595363169-7157-1-git-send-email-jonathan.derrick@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35e1338bddcd7dfe056cc4e492b9e1e878203eb9
Author: Nathan Huckleberry <nhuck@google.com>
Date:   Fri Jul 10 20:23:37 2020 +0100

    ARM: 8992/1: Fix unwind_frame for clang-built kernels
    
    commit b4d5ec9b39f8b31d98f65bc5577b5d15d93795d7 upstream.
    
    Since clang does not push pc and sp in function prologues, the current
    implementation of unwind_frame does not work. By using the previous
    frame's lr/fp instead of saved pc/sp we get valid unwinds on clang-built
    kernels.
    
    The bounds check on next frame pointer must be changed as well since
    there are 8 less bytes between frames.
    
    This fixes /proc/<pid>/stack.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/912
    
    Reported-by: Miles Chen <miles.chen@mediatek.com>
    Tested-by: Miles Chen <miles.chen@mediatek.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Nathan Huckleberry <nhuck@google.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd17453fa96f936467d5118d8afab86fe83d3ede
Author: Sven Schnelle <svens@stackframe.org>
Date:   Tue Aug 11 18:19:19 2020 +0200

    parisc: mask out enable and reserved bits from sba imask
    
    commit 5b24993c21cbf2de11aff077a48c5cb0505a0450 upstream.
    
    When using kexec the SBA IOMMU IBASE might still have the RE
    bit set. This triggers a WARN_ON when trying to write back the
    IBASE register later, and it also makes some mask calculations fail.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d3897a7f52731e3339040b876a4c409362166c9
Author: John David Anglin <dave.anglin@bell.net>
Date:   Thu Jul 30 08:59:12 2020 -0400

    parisc: Implement __smp_store_release and __smp_load_acquire barriers
    
    commit e96ebd589debd9a6a793608c4ec7019c38785dea upstream.
    
    This patch implements the __smp_store_release and __smp_load_acquire barriers
    using ordered stores and loads.  This avoids the sync instruction present in
    the generic implementation.
    
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Dave Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dfab46620017e96cb5907a5eecba76f45c50c17
Author: John David Anglin <dave.anglin@bell.net>
Date:   Tue Jul 28 19:13:20 2020 +0200

    parisc: Do not use an ordered store in pa_tlb_lock()
    
    commit e72b23dec1da5e62a0090c5da1d926778284e230 upstream.
    
    No need to use an ordered store in pa_tlb_lock() and update the comment
    regarng usage of the sid register to unlocak a spinlock in
    tlb_unlock0().
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.0+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 638e45c39f30ca6e76da6fc06097886c4b0ebf5c
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:56:14 2020 +0200

    Revert "parisc: Revert "Release spinlocks using ordered store""
    
    commit 157e9afcc4fa25068b0e8743bc254a9b56010e13 upstream.
    
    This reverts commit 86d4d068df573a8c2105554624796c086d6bec3d.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.0+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 431d999bd098144265fd399f16c888d01a12bc73
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:54:40 2020 +0200

    Revert "parisc: Use ldcw instruction for SMP spinlock release barrier"
    
    commit 6e9f06ee6c9566f3606d93182ac8f803a148504b upstream.
    
    This reverts commit 9e5c602186a692a7e848c0da17aed40f49d30519.
    No need to use the ldcw instruction as SMP spinlock release barrier.
    Revert it to gain back speed again.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7612ce180e30fa7f60731f12bf5d9d1664be60de
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:52:58 2020 +0200

    Revert "parisc: Drop LDCW barrier in CAS code when running UP"
    
    commit 462fb756c7de1ffe5bc6099149136031c2d9c02a upstream.
    
    This reverts commit e6eb5fe9123f05dcbf339ae5c0b6d32fcc0685d5.
    We need to optimize it differently. A follow up patch will correct it.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15f7b186916de385e4d8a73235ac4a7ade1ac6e5
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Thu Jul 30 01:58:01 2020 +0800

    erofs: fix extended inode could cross boundary
    
    commit 0dcd3c94e02438f4a571690e26f4ee997524102a upstream.
    
    Each ondisk inode should be aligned with inode slot boundary
    (32-byte alignment) because of nid calculation formula, so all
    compact inodes (32 byte) cannot across page boundary. However,
    extended inode is now 64-byte form, which can across page boundary
    in principle if the location is specified on purpose, although
    it's hard to be generated by mkfs due to the allocation policy
    and rarely used by Android use case now mainly for > 4GiB files.
    
    For now, only two fields `i_ctime_nsec` and `i_nlink' couldn't
    be read from disk properly and cause out-of-bound memory read
    with random value.
    
    Let's fix now.
    
    Fixes: 431339ba9042 ("staging: erofs: add inode operations")
    Cc: <stable@vger.kernel.org> # 4.19+
    Link: https://lore.kernel.org/r/20200729175801.GA23973@xiangao.remote.csb
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8e9efb55323b638806b4db2560b7ea6807039e7
Author: Sivaprakash Murugesan <sivaprak@codeaurora.org>
Date:   Fri Jun 12 13:28:15 2020 +0530

    mtd: rawnand: qcom: avoid write to unavailable register
    
    commit 443440cc4a901af462239d286cd10721aa1c7dfc upstream.
    
    SFLASHC_BURST_CFG is only available on older ipq NAND platforms, this
    register has been removed when the NAND controller got implemented in
    the qpic controller.
    
    Avoid writing this register on devices which are based on qpic NAND
    controller.
    
    Fixes: dce84760b09f ("mtd: nand: qcom: Support for IPQ8074 QPIC NAND controller")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sivaprakash Murugesan <sivaprak@codeaurora.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/1591948696-16015-2-git-send-email-sivaprak@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ebb8fd40256e4b661b5d3a38fbbf4c404205fc5
Author: Christian Eggers <ceggers@arri.de>
Date:   Tue Jul 28 12:08:32 2020 +0200

    spi: spidev: Align buffers for DMA
    
    commit aa9e862d7d5bcecd4dca9f39e8b684b93dd84ee7 upstream.
    
    Simply copying all xfers from userspace into one bounce buffer causes
    alignment problems if the SPI controller uses DMA.
    
    Ensure that all transfer data blocks within the rx and tx bounce buffers
    are aligned for DMA (according to ARCH_KMALLOC_MINALIGN).
    
    Alignment may increase the usage of the bounce buffers. In some cases,
    the buffers may need to be increased using the "bufsiz" module
    parameter.
    
    Signed-off-by: Christian Eggers <ceggers@arri.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200728100832.24788-1-ceggers@arri.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e02c77edd9b015ab49d3ac882c9dd70103a8151b
Author: Romain Naour <romain.naour@gmail.com>
Date:   Fri Aug 14 17:31:57 2020 -0700

    include/asm-generic/vmlinux.lds.h: align ro_after_init
    
    commit 7f897acbe5d57995438c831670b7c400e9c0dc00 upstream.
    
    Since the patch [1], building the kernel using a toolchain built with
    binutils 2.33.1 prevents booting a sh4 system under Qemu.  Apply the patch
    provided by Alan Modra [2] that fix alignment of rodata.
    
    [1] https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=ebd2263ba9a9124d93bbc0ece63d7e0fae89b40e
    [2] https://www.sourceware.org/ml/binutils/2019-12/msg00112.html
    
    Signed-off-by: Romain Naour <romain.naour@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alan Modra <amodra@gmail.com>
    Cc: Bin Meng <bin.meng@windriver.com>
    Cc: Chen Zhou <chenzhou10@huawei.com>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Cc: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: <stable@vger.kernel.org>
    Link: https://marc.info/?l=linux-sh&m=158429470221261
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e270e86b1b3b84eba796b9f56b01589d29ac56b
Author: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
Date:   Sat Jun 20 17:44:49 2020 +0100

    cpufreq: dt: fix oops on armada37xx
    
    commit 10470dec3decaf5ed3c596f85debd7c42777ae12 upstream.
    
    Commit 0c868627e617e43a295d8 (cpufreq: dt: Allow platform specific
    intermediate callbacks) added two function pointers to the
    struct cpufreq_dt_platform_data. However, armada37xx_cpufreq_driver_init()
    has this struct (pdata) located on the stack and uses only "suspend"
    and "resume" fields. So these newly added "get_intermediate" and
    "target_intermediate" pointers are uninitialized and contain arbitrary
    non-null values, causing all kinds of trouble.
    
    For instance, here is an oops on espressobin after an attempt to change
    the cpefreq governor:
    
    [   29.174554] Unable to handle kernel execute from non-executable memory at virtual address ffff00003f87bdc0
    ...
    [   29.269373] pc : 0xffff00003f87bdc0
    [   29.272957] lr : __cpufreq_driver_target+0x138/0x580
    ...
    
    Fixed by zeroing out pdata before use.
    
    Cc: <stable@vger.kernel.org> # v5.7+
    Signed-off-by: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 613a374f3fd684916972e916bab5fb8f212eb013
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Mon Jun 29 13:54:58 2020 +0530

    cpufreq: Fix locking issues with governors
    
    commit 8cc46ae565c393f77417cb9530b1265eb50f5d2e upstream.
    
    The locking around governors handling isn't adequate currently.
    
    The list of governors should never be traversed without the locking
    in place. Also governor modules must not be removed while the code
    in them is still in use.
    
    Reported-by: Quentin Perret <qperret@google.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: All applicable <stable@vger.kernel.org>
    [ rjw: Changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d1e56826ea8ec3ae122ba5c7c815056d5a37655
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Aug 5 09:03:56 2020 -0400

    NFS: Don't return layout segments that are in use
    
    commit d474f96104bd4377573526ebae2ee212205a6839 upstream.
    
    If the NFS_LAYOUT_RETURN_REQUESTED flag is set, we want to return the
    layout as soon as possible, meaning that the affected layout segments
    should be marked as invalid, and should no longer be in use for I/O.
    
    Fixes: f0b429819b5f ("pNFS: Ignore non-recalled layouts in pnfs_layout_need_return()")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 046922d3248da68bdac9cc5572dc64a65069b9dd
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Aug 4 16:30:30 2020 -0400

    NFS: Don't move layouts to plh_return_segs list while in use
    
    commit ff041727e9e029845857cac41aae118ead5e261b upstream.
    
    If the layout segment is still in use for a read or a write, we should
    not move it to the layout plh_return_segs list. If we do, we can end
    up returning the layout while I/O is still in progress.
    
    Fixes: e0b7d420f72a ("pNFS: Don't discard layout segments that are marked for return")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c512bd3dbbbd21e0ae87998cdc17b7c2969babe
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Aug 5 12:58:23 2020 -0600

    io_uring: set ctx sq/cq entry count earlier
    
    commit bd74048108c179cea0ff52979506164c80f29da7 upstream.
    
    If we hit an earlier error path in io_uring_create(), then we will have
    accounted memory, but not set ctx->{sq,cq}_entries yet. Then when the
    ring is torn down in error, we use those values to unaccount the memory.
    
    Ensure we set the ctx entries before we're able to hit a potential error
    path.
    
    Cc: stable@vger.kernel.org
    Reported-by: Tomáš Chaloupka <chalucha@gmail.com>
    Tested-by: Tomáš Chaloupka <chalucha@gmail.com>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6d2ddf1a30d524106265ad2c48b907cd7a083d4
Author: Dave Airlie <airlied@redhat.com>
Date:   Tue Jul 28 14:17:36 2020 +1000

    drm/ttm/nouveau: don't call tt destroy callback on alloc failure.
    
    commit 5de5b6ecf97a021f29403aa272cb4e03318ef586 upstream.
    
    This is confusing, and from my reading of all the drivers only
    nouveau got this right.
    
    Just make the API act under driver control of it's own allocation
    failing, and don't call destroy, if the page table fails to
    create there is nothing to cleanup here.
    
    (I'm willing to believe I've missed something here, so please
    review deeply).
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200728041736.20689-1-airlied@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86f95b631490b5530d5f4e3e3d1b43fe900574a7
Author: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
Date:   Sun Jun 21 13:30:40 2020 +0200

    media: media-request: Fix crash if memory allocation fails
    
    commit e30cc79cc80fd919b697a15c5000d9f57487de8e upstream.
    
    Syzbot reports a NULL-ptr deref in the kref_put() call:
    
    BUG: KASAN: null-ptr-deref in media_request_put drivers/media/mc/mc-request.c:81 [inline]
     kref_put include/linux/kref.h:64 [inline]
     media_request_put drivers/media/mc/mc-request.c:81 [inline]
     media_request_close+0x4d/0x170 drivers/media/mc/mc-request.c:89
     __fput+0x2ed/0x750 fs/file_table.c:281
     task_work_run+0x147/0x1d0 kernel/task_work.c:123
     tracehook_notify_resume include/linux/tracehook.h:188 [inline]
     exit_to_usermode_loop arch/x86/entry/common.c:165 [inline]
     prepare_exit_to_usermode+0x48e/0x600 arch/x86/entry/common.c:196
    
    What led to this crash was an injected memory allocation failure in
    media_request_alloc():
    
    FAULT_INJECTION: forcing a failure.
    name failslab, interval 1, probability 0, space 0, times 0
     should_failslab+0x5/0x20
     kmem_cache_alloc_trace+0x57/0x300
     ? anon_inode_getfile+0xe5/0x170
     media_request_alloc+0x339/0x440
     media_device_request_alloc+0x94/0xc0
     media_device_ioctl+0x1fb/0x330
     ? do_vfs_ioctl+0x6ea/0x1a00
     ? media_ioctl+0x101/0x120
     ? __media_device_usb_init+0x430/0x430
     ? media_poll+0x110/0x110
     __se_sys_ioctl+0xf9/0x160
     do_syscall_64+0xf3/0x1b0
    
    When that allocation fails, filp->private_data is left uninitialized
    which media_request_close() does not expect and crashes.
    
    To avoid this, reorder media_request_alloc() such that
    allocating the struct file happens as the last step thus
    media_request_close() will no longer get called for a partially created
    media request.
    
    Reported-by: syzbot+6bed2d543cf7e48b822b@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
    Fixes: 10905d70d788 ("media: media-request: implement media requests")
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06d8ba514949a3dc1dd5c644821206fde932f6d4
Author: Zheng Bin <zhengbin13@huawei.com>
Date:   Mon Jun 15 09:21:53 2020 +0800

    9p: Fix memory leak in v9fs_mount
    
    commit cb0aae0e31c632c407a2cab4307be85a001d4d98 upstream.
    
    v9fs_mount
      v9fs_session_init
        v9fs_cache_session_get_cookie
          v9fs_random_cachetag                     -->alloc cachetag
          v9ses->fscache = fscache_acquire_cookie  -->maybe NULL
      sb = sget                                    -->fail, goto clunk
    clunk_fid:
      v9fs_session_close
        if (v9ses->fscache)                        -->NULL
          kfree(v9ses->cachetag)
    
    Thus memleak happens.
    
    Link: http://lkml.kernel.org/r/20200615012153.89538-1-zhengbin13@huawei.com
    Fixes: 60e78d2c993e ("9p: Add fscache support to 9p")
    Cc: <stable@vger.kernel.org> # v2.6.32+
    Signed-off-by: Zheng Bin <zhengbin13@huawei.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10de419977bfbe9f99d1c8a3cef7cbf4660d7d84
Author: Hector Martin <marcan@marcan.st>
Date:   Mon Aug 10 17:24:00 2020 +0900

    ALSA: usb-audio: work around streaming quirk for MacroSilicon MS2109
    
    commit 1b7ecc241a67ad6b584e071bd791a54e0cd5f097 upstream.
    
    Further investigation of the L-R swap problem on the MS2109 reveals that
    the problem isn't that the channels are swapped, but rather that they
    are swapped and also out of phase by one sample. In other words, the
    issue is actually that the very first frame that comes from the hardware
    is a half-frame containing only the right channel, and after that
    everything becomes offset.
    
    So introduce a new quirk field to drop the very first 2 bytes that come
    in after the format is configured and a capture stream starts. This puts
    the channels in phase and in the correct order.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200810082400.225858-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d2c4954e82b18aeea8d8568b6e7dccdc54338b9
Author: Hector Martin <marcan@marcan.st>
Date:   Mon Aug 10 13:53:19 2020 +0900

    ALSA: usb-audio: fix overeager device match for MacroSilicon MS2109
    
    commit 14a720dc1f5332f3bdf30a23a3bc549e81be974c upstream.
    
    Matching by device matches all interfaces, which breaks the video/HID
    portions of the device depending on module load order.
    
    Fixes: e337bf19f6af ("ALSA: usb-audio: add quirk for MacroSilicon MS2109")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200810045319.128745-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5f647e3a72a3ace84cc892eb8e19990f22390a4
Author: Mirko Dietrich <buzz@l4m1.de>
Date:   Thu Aug 6 14:48:50 2020 +0200

    ALSA: usb-audio: Creative USB X-Fi Pro SB1095 volume knob support
    
    commit fec9008828cde0076aae595ac031bfcf49d335a4 upstream.
    
    Adds an entry for Creative USB X-Fi to the rc_config array in
    mixer_quirks.c to allow use of volume knob on the device.
    Adds support for newer X-Fi Pro card, known as "Model No. SB1095"
    with USB ID "041e:3263"
    
    Signed-off-by: Mirko Dietrich <buzz@l4m1.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200806124850.20334-1-buzz@l4m1.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8555fd99c11148cbb5c13b3dbc52d4f7cc59ba33
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Aug 10 10:16:59 2020 +0800

    ALSA: hda - fix the micmute led status for Lenovo ThinkCentre AIO
    
    commit 386a6539992b82fe9ac4f9dc3f548956fd894d8c upstream.
    
    After installing the Ubuntu Linux, the micmute led status is not
    correct. Users expect that the led is on if the capture is disabled,
    but with the current kernel, the led is off with the capture disabled.
    
    We tried the old linux kernel like linux-4.15, there is no this issue.
    It looks like we introduced this issue when switching to the led_cdev.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200810021659.7429-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f0e0ad76eaea9a9daba28ae3e2e3bc398a260f9
Author: Brant Merryman <brant.merryman@silabs.com>
Date:   Fri Jun 26 04:22:58 2020 +0000

    USB: serial: cp210x: enable usb generic throttle/unthrottle
    
    commit 4387b3dbb079d482d3c2b43a703ceed4dd27ed28 upstream.
    
    Assign the .throttle and .unthrottle functions to be generic function
    in the driver structure to prevent data loss that can otherwise occur
    if the host does not enable USB throttling.
    
    Signed-off-by: Brant Merryman <brant.merryman@silabs.com>
    Co-developed-by: Phu Luu <phu.luu@silabs.com>
    Signed-off-by: Phu Luu <phu.luu@silabs.com>
    Link: https://lore.kernel.org/r/57401AF3-9961-461F-95E1-F8AFC2105F5E@silabs.com
    [ johan: fix up tags ]
    Fixes: 39a66b8d22a3 ("[PATCH] USB: CP2101 Add support for flow control")
    Cc: stable <stable@vger.kernel.org>     # 2.6.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a8d1ca7204e359b90fd325e583dfddea239fba3
Author: Brant Merryman <brant.merryman@silabs.com>
Date:   Fri Jun 26 04:24:20 2020 +0000

    USB: serial: cp210x: re-enable auto-RTS on open
    
    commit c7614ff9b73a1e6fb2b1b51396da132ed22fecdb upstream.
    
    CP210x hardware disables auto-RTS but leaves auto-CTS when in hardware
    flow control mode and UART on cp210x hardware is disabled. When
    re-opening the port, if auto-CTS is enabled on the cp210x, then auto-RTS
    must be re-enabled in the driver.
    
    Signed-off-by: Brant Merryman <brant.merryman@silabs.com>
    Co-developed-by: Phu Luu <phu.luu@silabs.com>
    Signed-off-by: Phu Luu <phu.luu@silabs.com>
    Link: https://lore.kernel.org/r/ECCF8E73-91F3-4080-BE17-1714BC8818FB@silabs.com
    [ johan: fix up tags and problem description ]
    Fixes: 39a66b8d22a3 ("[PATCH] USB: CP2101 Add support for flow control")
    Cc: stable <stable@vger.kernel.org>     # 2.6.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 378737e1eee2e05d1d90d35897b6cede2c9ef75b
Author: Tim Froidcoeur <tim.froidcoeur@tessares.net>
Date:   Tue Aug 11 20:33:24 2020 +0200

    net: initialize fastreuse on inet_inherit_port
    
    [ Upstream commit d76f3351cea2d927fdf70dd7c06898235035e84e ]
    
    In the case of TPROXY, bind_conflict optimizations for SO_REUSEADDR or
    SO_REUSEPORT are broken, possibly resulting in O(n) instead of O(1) bind
    behaviour or in the incorrect reuse of a bind.
    
    the kernel keeps track for each bind_bucket if all sockets in the
    bind_bucket support SO_REUSEADDR or SO_REUSEPORT in two fastreuse flags.
    These flags allow skipping the costly bind_conflict check when possible
    (meaning when all sockets have the proper SO_REUSE option).
    
    For every socket added to a bind_bucket, these flags need to be updated.
    As soon as a socket that does not support reuse is added, the flag is
    set to false and will never go back to true, unless the bind_bucket is
    deleted.
    
    Note that there is no mechanism to re-evaluate these flags when a socket
    is removed (this might make sense when removing a socket that would not
    allow reuse; this leaves room for a future patch).
    
    For this optimization to work, it is mandatory that these flags are
    properly initialized and updated.
    
    When a child socket is created from a listen socket in
    __inet_inherit_port, the TPROXY case could create a new bind bucket
    without properly initializing these flags, thus preventing the
    optimization to work. Alternatively, a socket not allowing reuse could
    be added to an existing bind bucket without updating the flags, causing
    bind_conflict to never be called as it should.
    
    Call inet_csk_update_fastreuse when __inet_inherit_port decides to create
    a new bind_bucket or use a different bind_bucket than the one of the
    listen socket.
    
    Fixes: 093d282321da ("tproxy: fix hash locking issue when using port redirection in __inet_inherit_port()")
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcedddbc7b201f387f106c3ec837559ac4bc863f
Author: Tim Froidcoeur <tim.froidcoeur@tessares.net>
Date:   Tue Aug 11 20:33:23 2020 +0200

    net: refactor bind_bucket fastreuse into helper
    
    [ Upstream commit 62ffc589abb176821662efc4525ee4ac0b9c3894 ]
    
    Refactor the fastreuse update code in inet_csk_get_port into a small
    helper function that can be called from other places.
    
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a337428a5af1928b6e92de9340ca9f24ff0c55d
Author: Ronak Doshi <doshir@vmware.com>
Date:   Mon Aug 10 09:55:55 2020 -0700

    vmxnet3: use correct tcp hdr length when packet is encapsulated
    
    [ Upstream commit 8a7f280f29a80f6e0798f5d6e07c5dd8726620fe ]
    
    Commit dacce2be3312 ("vmxnet3: add geneve and vxlan tunnel offload
    support") added support for encapsulation offload. However, while
    calculating tcp hdr length, it does not take into account if the
    packet is encapsulated or not.
    
    This patch fixes this issue by using correct reference for inner
    tcp header.
    
    Fixes: dacce2be3312 ("vmxnet3: add geneve and vxlan tunnel offload support")
    Signed-off-by: Ronak Doshi <doshir@vmware.com>
    Acked-by: Guolin Yang <gyang@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e07d0ccd7fdefa4c7ff16148c4fd213f95558581
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Aug 10 13:38:39 2020 -0400

    tcp: correct read of TFO keys on big endian systems
    
    [ Upstream commit f19008e676366c44e9241af57f331b6c6edf9552 ]
    
    When TFO keys are read back on big endian systems either via the global
    sysctl interface or via getsockopt() using TCP_FASTOPEN_KEY, the values
    don't match what was written.
    
    For example, on s390x:
    
    # echo "1-2-3-4" > /proc/sys/net/ipv4/tcp_fastopen_key
    # cat /proc/sys/net/ipv4/tcp_fastopen_key
    02000000-01000000-04000000-03000000
    
    Instead of:
    
    # cat /proc/sys/net/ipv4/tcp_fastopen_key
    00000001-00000002-00000003-00000004
    
    Fix this by converting to the correct endianness on read. This was
    reported by Colin Ian King when running the 'tcp_fastopen_backup_key' net
    selftest on s390x, which depends on the read value matching what was
    written. I've confirmed that the test now passes on big and little endian
    systems.
    
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Fixes: 438ac88009bc ("net: fastopen: robustness and endianness fixes for SipHash")
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Eric Dumazet <edumazet@google.com>
    Reported-and-tested-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49a5b473bc66d6f561d68a062c0708d4a0789400
Author: Ira Weiny <ira.weiny@intel.com>
Date:   Mon Aug 10 17:02:58 2020 -0700

    net/tls: Fix kmap usage
    
    [ Upstream commit b06c19d9f827f6743122795570bfc0c72db482b0 ]
    
    When MSG_OOB is specified to tls_device_sendpage() the mapped page is
    never unmapped.
    
    Hold off mapping the page until after the flags are checked and the page
    is actually needed.
    
    Fixes: e8f69799810c ("net/tls: Add generic NIC offload infrastructure")
    Signed-off-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bedf1d86298c98240add8fcd8eafd8f2d9f2d2f
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Thu Aug 6 19:53:16 2020 +0800

    net: Set fput_needed iff FDPUT_FPUT is set
    
    [ Upstream commit ce787a5a074a86f76f5d3fd804fa78e01bfb9e89 ]
    
    We should fput() file iff FDPUT_FPUT is set. So we should set fput_needed
    accordingly.
    
    Fixes: 00e188ef6a7e ("sockfd_lookup_light(): switch to fdget^W^Waway from fget_light")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47f873ac267b9b0093979a0d6aa9ceb2ac84ef14
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Aug 6 17:37:53 2020 +0200

    net: phy: fix memory leak in device-create error path
    
    [ Upstream commit d02cbc46136105cf86f84ac355e16f04696f538d ]
    
    A recent commit introduced a late error path in phy_device_create()
    which fails to release the device name allocated by dev_set_name().
    
    Fixes: 13d0ab6750b2 ("net: phy: check return code when requesting PHY driver module")
    Cc: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b305f259ca9b85c48f9cb3159d034b7328ed225
Author: Qingyu Li <ieatmuttonchuan@gmail.com>
Date:   Mon Aug 10 09:51:00 2020 +0800

    net/nfc/rawsock.c: add CAP_NET_RAW check.
    
    [ Upstream commit 26896f01467a28651f7a536143fe5ac8449d4041 ]
    
    When creating a raw AF_NFC socket, CAP_NET_RAW needs to be checked first.
    
    Signed-off-by: Qingyu Li <ieatmuttonchuan@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02618095ab45aa6797d6ffb8396a131ada7f8a86
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Mon Aug 10 08:16:58 2020 -0400

    net: Fix potential memory leak in proto_register()
    
    [ Upstream commit 0f5907af39137f8183ed536aaa00f322d7365130 ]
    
    If we failed to assign proto idx, we free the twsk_slab_name but forget to
    free the twsk_slab. Add a helper function tw_prot_cleanup() to free these
    together and also use this helper function in proto_unregister().
    
    Fixes: b45ce32135d1 ("sock: fix potential memory leak in proto_register()")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6c5d9f3361af1e28cd1337e8b94c8e0adee05dc
Author: Xie He <xie.he.0141@gmail.com>
Date:   Wed Aug 5 18:50:40 2020 -0700

    drivers/net/wan/lapbether: Added needed_headroom and a skb->len check
    
    [ Upstream commit c7ca03c216acb14466a713fedf1b9f2c24994ef2 ]
    
    1. Added a skb->len check
    
    This driver expects upper layers to include a pseudo header of 1 byte
    when passing down a skb for transmission. This driver will read this
    1-byte header. This patch added a skb->len check before reading the
    header to make sure the header exists.
    
    2. Changed to use needed_headroom instead of hard_header_len to request
    necessary headroom to be allocated
    
    In net/packet/af_packet.c, the function packet_snd first reserves a
    headroom of length (dev->hard_header_len + dev->needed_headroom).
    Then if the socket is a SOCK_DGRAM socket, it calls dev_hard_header,
    which calls dev->header_ops->create, to create the link layer header.
    If the socket is a SOCK_RAW socket, it "un-reserves" a headroom of
    length (dev->hard_header_len), and assumes the user to provide the
    appropriate link layer header.
    
    So according to the logic of af_packet.c, dev->hard_header_len should
    be the length of the header that would be created by
    dev->header_ops->create.
    
    However, this driver doesn't provide dev->header_ops, so logically
    dev->hard_header_len should be 0.
    
    So we should use dev->needed_headroom instead of dev->hard_header_len
    to request necessary headroom to be allocated.
    
    This change fixes kernel panic when this driver is used with AF_PACKET
    SOCK_RAW sockets.
    
    Call stack when panic:
    
    [  168.399197] skbuff: skb_under_panic: text:ffffffff819d95fb len:20
    put:14 head:ffff8882704c0a00 data:ffff8882704c09fd tail:0x11 end:0xc0
    dev:veth0
    ...
    [  168.399255] Call Trace:
    [  168.399259]  skb_push.cold+0x14/0x24
    [  168.399262]  eth_header+0x2b/0xc0
    [  168.399267]  lapbeth_data_transmit+0x9a/0xb0 [lapbether]
    [  168.399275]  lapb_data_transmit+0x22/0x2c [lapb]
    [  168.399277]  lapb_transmit_buffer+0x71/0xb0 [lapb]
    [  168.399279]  lapb_kick+0xe3/0x1c0 [lapb]
    [  168.399281]  lapb_data_request+0x76/0xc0 [lapb]
    [  168.399283]  lapbeth_xmit+0x56/0x90 [lapbether]
    [  168.399286]  dev_hard_start_xmit+0x91/0x1f0
    [  168.399289]  ? irq_init_percpu_irqstack+0xc0/0x100
    [  168.399291]  __dev_queue_xmit+0x721/0x8e0
    [  168.399295]  ? packet_parse_headers.isra.0+0xd2/0x110
    [  168.399297]  dev_queue_xmit+0x10/0x20
    [  168.399298]  packet_sendmsg+0xbf0/0x19b0
    ......
    
    Cc: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Cc: Martin Schiller <ms@dev.tdt.de>
    Cc: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de236de3df5754fe333367a47ee99ca6e71f0bf2
Author: John Ogness <john.ogness@linutronix.de>
Date:   Thu Aug 13 21:45:25 2020 +0206

    af_packet: TPACKET_V3: fix fill status rwlock imbalance
    
    [ Upstream commit 88fd1cb80daa20af063bce81e1fad14e945a8dc4 ]
    
    After @blk_fill_in_prog_lock is acquired there is an early out vnet
    situation that can occur. In that case, the rwlock needs to be
    released.
    
    Also, since @blk_fill_in_prog_lock is only acquired when @tp_version
    is exactly TPACKET_V3, only release it on that exact condition as
    well.
    
    And finally, add sparse annotation so that it is clearer that
    prb_fill_curr_block() and prb_clear_blk_fill_status() are acquiring
    and releasing @blk_fill_in_prog_lock, respectively. sparse is still
    unable to understand the balance, but the warnings are now on a
    higher level that make more sense.
    
    Fixes: 632ca50f2cbd ("af_packet: TPACKET_V3: replace busy-wait loop")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ef739b7a5be3188c829a3561232bd136efc9921
Author: Jian Cai <caij2003@gmail.com>
Date:   Mon Jun 22 16:24:33 2020 -0700

    crypto: aesni - add compatibility with IAS
    
    [ Upstream commit 44069737ac9625a0f02f0f7f5ab96aae4cd819bc ]
    
    Clang's integrated assembler complains "invalid reassignment of
    non-absolute variable 'var_ddq_add'" while assembling
    arch/x86/crypto/aes_ctrby8_avx-x86_64.S. It was because var_ddq_add was
    reassigned with non-absolute values several times, which IAS did not
    support. We can avoid the reassignment by replacing the uses of
    var_ddq_add with its definitions accordingly to have compatilibility
    with IAS.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1008
    Reported-by: Sedat Dilek <sedat.dilek@gmail.com>
    Reported-by: Fangrui Song <maskray@google.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com> # build+boot Linux v5.7.5; clang v11.0.0-git
    Signed-off-by: Jian Cai <caij2003@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c44efee6e432823688d5282462100b745f6c2696
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Aug 14 11:16:17 2020 -0700

    x86/fsgsbase/64: Fix NULL deref in 86_fsgsbase_read_task
    
    [ Upstream commit 8ab49526b53d3172d1d8dd03a75c7d1f5bd21239 ]
    
    syzbot found its way in 86_fsgsbase_read_task() and triggered this oops:
    
       KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
       CPU: 0 PID: 6866 Comm: syz-executor262 Not tainted 5.8.0-syzkaller #0
       RIP: 0010:x86_fsgsbase_read_task+0x16d/0x310 arch/x86/kernel/process_64.c:393
       Call Trace:
         putreg32+0x3ab/0x530 arch/x86/kernel/ptrace.c:876
         genregs32_set arch/x86/kernel/ptrace.c:1026 [inline]
         genregs32_set+0xa4/0x100 arch/x86/kernel/ptrace.c:1006
         copy_regset_from_user include/linux/regset.h:326 [inline]
         ia32_arch_ptrace arch/x86/kernel/ptrace.c:1061 [inline]
         compat_arch_ptrace+0x36c/0xd90 arch/x86/kernel/ptrace.c:1198
         __do_compat_sys_ptrace kernel/ptrace.c:1420 [inline]
         __se_compat_sys_ptrace kernel/ptrace.c:1389 [inline]
         __ia32_compat_sys_ptrace+0x220/0x2f0 kernel/ptrace.c:1389
         do_syscall_32_irqs_on arch/x86/entry/common.c:84 [inline]
         __do_fast_syscall_32+0x57/0x80 arch/x86/entry/common.c:126
         do_fast_syscall_32+0x2f/0x70 arch/x86/entry/common.c:149
         entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    This can happen if ptrace() or sigreturn() pokes an LDT selector into FS
    or GS for a task with no LDT and something tries to read the base before
    a return to usermode notices the bad selector and fixes it.
    
    The fix is to make sure ldt pointer is not NULL.
    
    Fixes: 07e1d88adaae ("x86/fsgsbase/64: Fix ptrace() to read the FS/GS base accurately")
    Co-developed-by: Jann Horn <jannh@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Cc: Chang S. Bae <chang.seok.bae@intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Markus T Metzger <markus.t.metzger@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Shankar <ravi.v.shankar@intel.com>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18d1bb4973644bb14d1363af07665f28d468c5ec
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Jul 24 17:08:57 2020 -0400

    SUNRPC: Fix ("SUNRPC: Add "@len" parameter to gss_unwrap()")
    
    [ Upstream commit 986a4b63d3bc5f2c0eb4083b05aff2bf883b7b2f ]
    
    Braino when converting "buf->len -=" to "buf->len = len -".
    
    The result is under-estimation of the ralign and rslack values. On
    krb5p mounts, this has caused READDIR to fail with EIO, and KASAN
    splats when decoding READLINK replies.
    
    As a result of fixing this oversight, the gss_unwrap method now
    returns a buf->len that can be shorter than priv_len for small
    RPC messages. The additional adjustment done in unwrap_priv_data()
    can underflow buf->len. This causes the nfsd_request_too_large
    check to fail during some NFSv3 operations.
    
    Reported-by: Marian Rainer-Harbach
    Reported-by: Pierre Sauter <pierre.sauter@stwm.de>
    BugLink: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1886277
    Fixes: 31c9590ae468 ("SUNRPC: Add "@len" parameter to gss_unwrap()")
    Reviewed-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 789be9705ed1f8a5e045891825bee0ead71a0dfc
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Jun 11 12:44:56 2020 -0400

    svcrdma: Fix page leak in svc_rdma_recv_read_chunk()
    
    [ Upstream commit e814eecbe3bbeaa8b004d25a4b8974d232b765a9 ]
    
    Commit 07d0ff3b0cd2 ("svcrdma: Clean up Read chunk path") moved the
    page saver logic so that it gets executed event when an error occurs.
    In that case, the I/O is never posted, and those pages are then
    leaked. Errors in this path, however, are quite rare.
    
    Fixes: 07d0ff3b0cd2 ("svcrdma: Clean up Read chunk path")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa6bd08869c5c2c8af315cb1c19b9d791810af0e
Author: Drew Fustini <drew@beagleboard.org>
Date:   Mon Jun 8 14:51:43 2020 +0200

    pinctrl-single: fix pcs_parse_pinconf() return value
    
    [ Upstream commit f46fe79ff1b65692a65266a5bec6dbe2bf7fc70f ]
    
    This patch causes pcs_parse_pinconf() to return -ENOTSUPP when no
    pinctrl_map is added.  The current behavior is to return 0 when
    !PCS_HAS_PINCONF or !nconfs.  Thus pcs_parse_one_pinctrl_entry()
    incorrectly assumes that a map was added and sets num_maps = 2.
    
    Analysis:
    =========
    The function pcs_parse_one_pinctrl_entry() calls pcs_parse_pinconf()
    if PCS_HAS_PINCONF is enabled.  The function pcs_parse_pinconf()
    returns 0 to indicate there was no error and num_maps is then set to 2:
    
     980 static int pcs_parse_one_pinctrl_entry(struct pcs_device *pcs,
     981                                                 struct device_node *np,
     982                                                 struct pinctrl_map **map,
     983                                                 unsigned *num_maps,
     984                                                 const char **pgnames)
     985 {
    <snip>
    1053         (*map)->type = PIN_MAP_TYPE_MUX_GROUP;
    1054         (*map)->data.mux.group = np->name;
    1055         (*map)->data.mux.function = np->name;
    1056
    1057         if (PCS_HAS_PINCONF && function) {
    1058                 res = pcs_parse_pinconf(pcs, np, function, map);
    1059                 if (res)
    1060                         goto free_pingroups;
    1061                 *num_maps = 2;
    1062         } else {
    1063                 *num_maps = 1;
    1064         }
    
    However, pcs_parse_pinconf() will also return 0 if !PCS_HAS_PINCONF or
    !nconfs.  I believe these conditions should indicate that no map was
    added by returning -ENOTSUPP. Otherwise pcs_parse_one_pinctrl_entry()
    will set num_maps = 2 even though no maps were successfully added, as
    it does not reach "m++" on line 940:
    
     895 static int pcs_parse_pinconf(struct pcs_device *pcs, struct device_node *np,
     896                              struct pcs_function *func,
     897                              struct pinctrl_map **map)
     898
     899 {
     900         struct pinctrl_map *m = *map;
    <snip>
     917         /* If pinconf isn't supported, don't parse properties in below. */
     918         if (!PCS_HAS_PINCONF)
     919                 return 0;
     920
     921         /* cacluate how much properties are supported in current node */
     922         for (i = 0; i < ARRAY_SIZE(prop2); i++) {
     923                 if (of_find_property(np, prop2[i].name, NULL))
     924                         nconfs++;
     925         }
     926         for (i = 0; i < ARRAY_SIZE(prop4); i++) {
     927                 if (of_find_property(np, prop4[i].name, NULL))
     928                         nconfs++;
     929         }
     930         if (!nconfs)
     919                 return 0;
     932
     933         func->conf = devm_kcalloc(pcs->dev,
     934                                   nconfs, sizeof(struct pcs_conf_vals),
     935                                   GFP_KERNEL);
     936         if (!func->conf)
     937                 return -ENOMEM;
     938         func->nconfs = nconfs;
     939         conf = &(func->conf[0]);
     940         m++;
    
    This situtation will cause a boot failure [0] on the BeagleBone Black
    (AM3358) when am33xx_pinmux node in arch/arm/boot/dts/am33xx-l4.dtsi
    has compatible = "pinconf-single" instead of "pinctrl-single".
    
    The patch fixes this issue by returning -ENOSUPP when !PCS_HAS_PINCONF
    or !nconfs, so that pcs_parse_one_pinctrl_entry() will know that no
    map was added.
    
    Logic is also added to pcs_parse_one_pinctrl_entry() to distinguish
    between -ENOSUPP and other errors.  In the case of -ENOSUPP, num_maps
    is set to 1 as it is valid for pinconf to be enabled and a given pin
    group to not any pinconf properties.
    
    [0] https://lore.kernel.org/linux-omap/20200529175544.GA3766151@x1/
    
    Fixes: 9dddb4df90d1 ("pinctrl: single: support generic pinconf")
    Signed-off-by: Drew Fustini <drew@beagleboard.org>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20200608125143.GA2789203@x1
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50abf1b9ad1072fc96f6371bc8e19cecd6420b87
Author: Pavel Machek <pavel@ucw.cz>
Date:   Thu Aug 6 23:18:09 2020 -0700

    ocfs2: fix unbalanced locking
    
    [ Upstream commit 57c720d4144a9c2b88105c3e8f7b0e97e4b5cc93 ]
    
    Based on what fails, function can return with nfs_sync_rwlock either
    locked or unlocked. That can not be right.
    
    Always return with lock unlocked on error.
    
    Fixes: 4cd9973f9ff6 ("ocfs2: avoid inode removal while nfsd is accessing it")
    Signed-off-by: Pavel Machek (CIP) <pavel@denx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Link: http://lkml.kernel.org/r/20200724124443.GA28164@duo.ucw.cz
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba8a7219334646651b470a7509c09ffab1d4707e
Author: Wang Hai <wanghai38@huawei.com>
Date:   Mon Jun 15 11:25:33 2020 +0800

    dlm: Fix kobject memleak
    
    [ Upstream commit 0ffddafc3a3970ef7013696e7f36b3d378bc4c16 ]
    
    Currently the error return path from kobject_init_and_add() is not
    followed by a call to kobject_put() - which means we are leaking
    the kobject.
    
    Set do_unreg = 1 before kobject_init_and_add() to ensure that
    kobject_put() can be called in its error patch.
    
    Fixes: 901195ed7f4b ("Kobject: change GFS2 to use kobject_init_and_add")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41e8b5afde8e391f00107fdf66f754d1322364ff
Author: Dean Nelson <dnelson@redhat.com>
Date:   Wed Aug 5 13:18:48 2020 -0500

    net: thunderx: initialize VF's mailbox mutex before first usage
    
    [ Upstream commit c1055b76ad00aed0e8b79417080f212d736246b6 ]
    
    A VF's mailbox mutex is not getting initialized by nicvf_probe() until after
    it is first used. And such usage is resulting in...
    
    [   28.270927] ------------[ cut here ]------------
    [   28.270934] DEBUG_LOCKS_WARN_ON(lock->magic != lock)
    [   28.270980] WARNING: CPU: 9 PID: 675 at kernel/locking/mutex.c:938 __mutex_lock+0xdac/0x12f0
    [   28.270985] Modules linked in: ast(+) nicvf(+) i2c_algo_bit drm_vram_helper drm_ttm_helper ttm nicpf(+) drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm ixgbe(+) sg thunder_bgx mdio i2c_thunderx mdio_thunder thunder_xcv mdio_cavium dm_mirror dm_region_hash dm_log dm_mod
    [   28.271064] CPU: 9 PID: 675 Comm: systemd-udevd Not tainted 4.18.0+ #1
    [   28.271070] Hardware name: GIGABYTE R120-T34-00/MT30-GS2-00, BIOS F02 08/06/2019
    [   28.271078] pstate: 60000005 (nZCv daif -PAN -UAO)
    [   28.271086] pc : __mutex_lock+0xdac/0x12f0
    [   28.271092] lr : __mutex_lock+0xdac/0x12f0
    [   28.271097] sp : ffff800d42146fb0
    [   28.271103] x29: ffff800d42146fb0 x28: 0000000000000000
    [   28.271113] x27: ffff800d24361180 x26: dfff200000000000
    [   28.271122] x25: 0000000000000000 x24: 0000000000000002
    [   28.271132] x23: ffff20001597cc80 x22: ffff2000139e9848
    [   28.271141] x21: 0000000000000000 x20: 1ffff001a8428e0c
    [   28.271151] x19: ffff200015d5d000 x18: 1ffff001ae0f2184
    [   28.271160] x17: 0000000000000000 x16: 0000000000000000
    [   28.271170] x15: ffff800d70790c38 x14: ffff20001597c000
    [   28.271179] x13: ffff20001597cc80 x12: ffff040002b2f779
    [   28.271189] x11: 1fffe40002b2f778 x10: ffff040002b2f778
    [   28.271199] x9 : 0000000000000000 x8 : 00000000f1f1f1f1
    [   28.271208] x7 : 00000000f2f2f2f2 x6 : 0000000000000000
    [   28.271217] x5 : 1ffff001ae0f2186 x4 : 1fffe400027eb03c
    [   28.271227] x3 : dfff200000000000 x2 : ffff1001a8428dbe
    [   28.271237] x1 : c87fdfac7ea11d00 x0 : 0000000000000000
    [   28.271246] Call trace:
    [   28.271254]  __mutex_lock+0xdac/0x12f0
    [   28.271261]  mutex_lock_nested+0x3c/0x50
    [   28.271297]  nicvf_send_msg_to_pf+0x40/0x3a0 [nicvf]
    [   28.271316]  nicvf_register_misc_interrupt+0x20c/0x328 [nicvf]
    [   28.271334]  nicvf_probe+0x508/0xda0 [nicvf]
    [   28.271344]  local_pci_probe+0xc4/0x180
    [   28.271352]  pci_device_probe+0x3ec/0x528
    [   28.271363]  driver_probe_device+0x21c/0xb98
    [   28.271371]  device_driver_attach+0xe8/0x120
    [   28.271379]  __driver_attach+0xe0/0x2a0
    [   28.271386]  bus_for_each_dev+0x118/0x190
    [   28.271394]  driver_attach+0x48/0x60
    [   28.271401]  bus_add_driver+0x328/0x558
    [   28.271409]  driver_register+0x148/0x398
    [   28.271416]  __pci_register_driver+0x14c/0x1b0
    [   28.271437]  nicvf_init_module+0x54/0x10000 [nicvf]
    [   28.271447]  do_one_initcall+0x18c/0xc18
    [   28.271457]  do_init_module+0x18c/0x618
    [   28.271464]  load_module+0x2bc0/0x4088
    [   28.271472]  __se_sys_finit_module+0x110/0x188
    [   28.271479]  __arm64_sys_finit_module+0x70/0xa0
    [   28.271490]  el0_svc_handler+0x15c/0x380
    [   28.271496]  el0_svc+0x8/0xc
    [   28.271502] irq event stamp: 52649
    [   28.271513] hardirqs last  enabled at (52649): [<ffff200011b4d790>] _raw_spin_unlock_irqrestore+0xc0/0xd8
    [   28.271522] hardirqs last disabled at (52648): [<ffff200011b4d3c4>] _raw_spin_lock_irqsave+0x3c/0xf0
    [   28.271530] softirqs last  enabled at (52330): [<ffff200010082af4>] __do_softirq+0xacc/0x117c
    [   28.271540] softirqs last disabled at (52313): [<ffff20001019b354>] irq_exit+0x3cc/0x500
    [   28.271545] ---[ end trace a9b90324c8a0d4ee ]---
    
    This problem is resolved by moving the call to mutex_init() up earlier
    in nicvf_probe().
    
    Fixes: 609ea65c65a0 ("net: thunderx: add mutex to protect mailbox from concurrent calls for same VF")
    Signed-off-by: Dean Nelson <dnelson@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3084ecb023578ed999aba7316f5630bf85a1d14b
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:34 2020 +0300

    fsl/fman: fix eth hash table allocation
    
    [ Upstream commit 3207f715c34317d08e798e11a10ce816feb53c0f ]
    
    Fix memory allocation for ethernet address hash table.
    The code was wrongly allocating an array for eth hash table which
    is incorrect because this is the main structure for eth hash table
    (struct eth_hash_t) that contains inside a number of elements.
    
    Fixes: 57ba4c9b56d8 ("fsl/fman: Add FMan MAC support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2997cea07f9e3085d3bcfe2352b7d51442973aed
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:33 2020 +0300

    fsl/fman: check dereferencing null pointer
    
    [ Upstream commit cc5d229a122106733a85c279d89d7703f21e4d4f ]
    
    Add a safe check to avoid dereferencing null pointer
    
    Fixes: 57ba4c9b56d8 ("fsl/fman: Add FMan MAC support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 158ccb4f03b5d5381b56711faf31a03cf82c624e
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:32 2020 +0300

    fsl/fman: fix unreachable code
    
    [ Upstream commit cc79fd8f557767de90ff199d3b6fb911df43160a ]
    
    The parameter 'priority' is incorrectly forced to zero which ultimately
    induces logically dead code in the subsequent lines.
    
    Fixes: 57ba4c9b56d8 ("fsl/fman: Add FMan MAC support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a405fb3ffdab9c7ca04b448cfd268423fd052a4a
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:31 2020 +0300

    fsl/fman: fix dereference null return value
    
    [ Upstream commit 0572054617f32670abab4b4e89a876954d54b704 ]
    
    Check before using returned value to avoid dereferencing null pointer.
    
    Fixes: 18a6c85fcc78 ("fsl/fman: Add FMan Port Support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9b3249a3df692cce579c533b40147def384ca7a
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:30 2020 +0300

    fsl/fman: use 32-bit unsigned integer
    
    [ Upstream commit 99f47abd9f7bf6e365820d355dc98f6955a562df ]
    
    Potentially overflowing expression (ts_freq << 16 and intgr << 16)
    declared as type u32 (32-bit unsigned) is evaluated using 32-bit
    arithmetic and then used in a context that expects an expression of
    type u64 (64-bit unsigned) which ultimately is used as 16-bit
    unsigned by typecasting to u16. Fixed by using an unsigned 32-bit
    integer since the value is truncated anyway in the end.
    
    Fixes: 414fd46e7762 ("fsl/fman: Add FMan support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c68da19fd022df4c48c08a0cf7dc5d36ade793b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 15:53:33 2020 +0200

    net: spider_net: Fix the size used in a 'dma_free_coherent()' call
    
    [ Upstream commit 36f28f7687a9ce665479cce5d64ce7afaa9e77ae ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()', in
    'spider_net_init_chain()'.
    
    Fixes: d4ed8f8d1fb7 ("Spidernet DMA coalescing")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc66a35ffee6517f588c6f942d6a0e06c0b32444
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:44 2020 +0800

    liquidio: Fix wrong return value in cn23xx_get_pf_num()
    
    [ Upstream commit aa027850a292ea65524b8fab83eb91a124ad362c ]
    
    On an error exit path, a negative error code should be returned
    instead of a positive return value.
    
    Fixes: 0c45d7fe12c7e ("liquidio: fix use of pf in pass-through mode in a virtual machine")
    Cc: Rick Farrington <ricardo.farrington@cavium.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb4afeaf861f7e592f03fb7323807b1dde35a6eb
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:37 2020 +0800

    net: ethernet: aquantia: Fix wrong return value
    
    [ Upstream commit 0470a48880f8bc42ce26962b79c7b802c5a695ec ]
    
    In function hw_atl_a0_hw_multicast_list_set(), when an invalid
    request is encountered, a negative error code should be returned.
    
    Fixes: bab6de8fd180b ("net: ethernet: aquantia: Atlantic A0 and B0 specific functions")
    Cc: David VomLehn <vomlehn@texas.net>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe8571b4d5ac0db19a78c43db95e53a7fe8a6ec6
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Jul 19 11:04:30 2020 +0300

    net/mlx5: Delete extra dump stack that gives nothing
    
    [ Upstream commit 6c4e9bcfb48933d533ff975e152757991556294a ]
    
    The WARN_*() macros are intended to catch impossible situations
    from the SW point of view. They gave a little in case HW<->SW interface
    is out-of-sync.
    
    Such out-of-sync scenario can be due to SW errors that are not part
    of this flow or because some HW errors, where dump stack won't help
    either.
    
    This specific WARN_ON() is useless because mlx5_core code is prepared
    to handle such situations and will unfold everything correctly while
    providing enough information to the users to understand why FS is not
    working.
    
    WARNING: CPU: 0 PID: 3222 at drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:825 connect_fts_in_prio.isra.20+0x1dd/0x260 linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:825
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 0 PID: 3222 Comm: syz-executor861 Not tainted 5.5.0-rc6+ #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    Call Trace:
     __dump_stack linux/lib/dump_stack.c:77 [inline]
     dump_stack+0x94/0xce linux/lib/dump_stack.c:118
     panic+0x234/0x56f linux/kernel/panic.c:221
     __warn+0x1cc/0x1e1 linux/kernel/panic.c:582
     report_bug+0x200/0x310 linux/lib/bug.c:195
     fixup_bug.part.11+0x32/0x80 linux/arch/x86/kernel/traps.c:174
     fixup_bug linux/arch/x86/kernel/traps.c:273 [inline]
     do_error_trap+0xd3/0x100 linux/arch/x86/kernel/traps.c:267
     do_invalid_op+0x31/0x40 linux/arch/x86/kernel/traps.c:286
     invalid_op+0x1e/0x30 linux/arch/x86/entry/entry_64.S:1027
    RIP: 0010:connect_fts_in_prio.isra.20+0x1dd/0x260
    linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:825
    Code: 00 00 48 c7 c2 60 8c 31 84 48 c7 c6 00 81 31 84 48 8b 38 e8 3c a8
    cb ff 41 83 fd 01 8b 04 24 0f 8e 29 ff ff ff e8 83 7b bc fe <0f> 0b 8b
    04 24 e9 1a ff ff ff 89 04 24 e8 c1 20 e0 fe 8b 04 24 eb
    RSP: 0018:ffffc90004bb7858 EFLAGS: 00010293
    RAX: ffff88805de98e80 RBX: 0000000000000c96 RCX: ffffffff827a853d
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: fffff52000976efa
    RBP: 0000000000000007 R08: ffffed100da060e3 R09: ffffed100da060e3
    R10: 0000000000000001 R11: ffffed100da060e2 R12: dffffc0000000000
    R13: 0000000000000002 R14: ffff8880683a1a10 R15: ffffed100d07bc1c
     connect_prev_fts linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:844 [inline]
     connect_flow_table linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:975 [inline]
     __mlx5_create_flow_table+0x8f8/0x1710 linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1064
     mlx5_create_flow_table linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1094 [inline]
     mlx5_create_auto_grouped_flow_table+0xe1/0x210 linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1136
     _get_prio linux/drivers/infiniband/hw/mlx5/main.c:3286 [inline]
     get_flow_table+0x2ea/0x760 linux/drivers/infiniband/hw/mlx5/main.c:3376
     mlx5_ib_create_flow+0x331/0x11c0 linux/drivers/infiniband/hw/mlx5/main.c:3896
     ib_uverbs_ex_create_flow+0x13e8/0x1b40 linux/drivers/infiniband/core/uverbs_cmd.c:3311
     ib_uverbs_write+0xaa5/0xdf0 linux/drivers/infiniband/core/uverbs_main.c:769
     __vfs_write+0x7c/0x100 linux/fs/read_write.c:494
     vfs_write+0x168/0x4a0 linux/fs/read_write.c:558
     ksys_write+0xc8/0x200 linux/fs/read_write.c:611
     do_syscall_64+0x9c/0x390 linux/arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x45a059
    Code: 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 89 f8 48 89
    f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01
    f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007fcc17564c98 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007fcc17564ca0 RCX: 000000000045a059
    RDX: 0000000000000030 RSI: 00000000200003c0 RDI: 0000000000000005
    RBP: 0000000000000007 R08: 0000000000000002 R09: 0000000000003131
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000006e636c
    R13: 0000000000000000 R14: 00000000006e6360 R15: 00007ffdcbdaf6a0
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Kernel Offset: disabled
    Rebooting in 1 seconds..
    
    Fixes: f90edfd279f3 ("net/mlx5_core: Connect flow tables")
    Reviewed-by: Maor Gottlieb <maorg@mellanox.com>
    Reviewed-by: Mark Bloch <markb@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87a43dac39c2ddc8c8da8457676234896e83196b
Author: Alex Vesker <valex@mellanox.com>
Date:   Mon Jul 13 14:09:04 2020 +0300

    net/mlx5: DR, Change push vlan action sequence
    
    [ Upstream commit b206490940216542c68563699b279eed3c55107c ]
    
    The DR TX state machine supports the following order:
    modify header, push vlan and encapsulation.
    Instead fs_dr would pass:
    push vlan, modify header and encapsulation.
    
    The above caused the rule creation to fail on invalid action
    sequence provided error.
    
    Fixes: 6a48faeeca10 ("net/mlx5: Add direct rule fs_cmd implementation")
    Signed-off-by: Alex Vesker <valex@mellanox.com>
    Reviewed-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4301de4be419f027b07356f5cdcfcea99859041
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:40 2020 +0800

    tools, bpftool: Fix wrong return value in do_dump()
    
    [ Upstream commit 041549b7b2c7811ec40e705c439211f00ade2dda ]
    
    In case of btf_id does not exist, a negative error code -ENOENT
    should be returned.
    
    Fixes: c93cc69004df3 ("bpftool: add ability to dump BTF types")
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Tobias Klauser <tklauser@distanz.ch>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20200802111540.5384-1-tianjia.zhang@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94bc0ab6043f91ea57dac02f7da93ae39256abb3
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Thu Jul 30 19:42:44 2020 -0700

    tools, build: Propagate build failures from tools/build/Makefile.build
    
    [ Upstream commit a278f3d8191228212c553a5d4303fa603214b717 ]
    
    The '&&' command seems to have a bad effect when $(cmd_$(1)) exits with
    non-zero effect: the command failure is masked (despite `set -e`) and all but
    the first command of $(dep-cmd) is executed (successfully, as they are mostly
    printfs), thus overall returning 0 in the end.
    
    This means in practice that despite compilation errors, tools's build Makefile
    will return success. We see this very reliably with libbpf's Makefile, which
    doesn't get compilation error propagated properly. This in turns causes issues
    with selftests build, as well as bpftool and other projects that rely on
    building libbpf.
    
    The fix is simple: don't use &&. Given `set -e`, we don't need to chain
    commands with &&. The shell will exit on first failure, giving desired
    behavior and propagating error properly.
    
    Fixes: 275e2d95591e ("tools build: Move dependency copy into function")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Link: https://lore.kernel.org/bpf/20200731024244.872574-1-andriin@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2684577dd9bc03aa6baf379df132a6d04e895a84
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Jul 30 15:39:39 2020 +0800

    wl1251: fix always return 0 error
    
    [ Upstream commit 20e6421344b5bc2f97b8e2db47b6994368417904 ]
    
    wl1251_event_ps_report() should not always return 0 because
    wl1251_ps_set_mode() may fail. Change it to return 'ret'.
    
    Fixes: f7ad1eed4d4b ("wl1251: retry power save entry")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200730073939.33704-1-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bec3e41db0d2614f994641aacb209a25d3bdbf0
Author: Yan-Hsuan Chuang <yhchuang@realtek.com>
Date:   Fri Jul 17 14:49:34 2020 +0800

    rtw88: coex: only skip coex triggered by BT info
    
    [ Upstream commit 3f194bd4ca1cd9b8eef34d37d562279dbeb80319 ]
    
    The coex mechanism used to skip upon the freeze flag is raised.
    That will cause the coex mechanism being skipped unexpectedly.
    Coex only wanted to keep the TDMA table from being changed by
    BT side.
    
    So, check the freeze and reason, if the coex reason is coming
    from BT info, skip it, to make sure the coex triggered by Wifi
    itself can work.
    
    This is required for the AP mode, while the control flow is
    different with STA mode. When starting an AP mode, the AP mode
    needs to start working immedaitely after leaving IPS, and the
    freeze flag could be raised. If the coex info is skipped, then
    the AP mode will not set the antenna owner, leads to TX stuck.
    
    Fixes: 4136214f7c46 ("rtw88: add BT co-existence support")
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200717064937.27966-5-yhchuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b7546010b01b6956d82dff37d38da7c8d8da2eb
Author: Tsang-Shian Lin <thlin@realtek.com>
Date:   Fri Jul 17 14:49:32 2020 +0800

    rtw88: fix short GI capability based on current bandwidth
    
    [ Upstream commit 4dd86b901d1373ef8446ecb50a7ca009f3475211 ]
    
    Fix the transmission is not sent with short GI under
    some conditions even if the receiver supports short GI.
    If VHT capability IE exists in the beacon, the original
    code uses the short GI for 80M field as driver's short GI
    setting for transmission, even the current bandwidth is
    not 80MHz.
    
    Short GI supported fields for 20M/40M are informed in HT
    capability information element, and short GI supported
    field for 80M is informed in VHT capability information
    element.
    
    These three fields may be set to different values.
    Driver needs to record each short GI support field for
    each bandwidth, and send correct info depends on current
    bandwidth to the WiFi firmware.
    
    Fixes: e3037485c68e ("rtw88: new Realtek 802.11ac driver")
    Signed-off-by: Tsang-Shian Lin <thlin@realtek.com>
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200717064937.27966-3-yhchuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff1ecaf751d739e76fe1e5c4b9d2b3e4c4c072cb
Author: Tsang-Shian Lin <thlin@realtek.com>
Date:   Fri Jul 17 14:49:31 2020 +0800

    rtw88: fix LDPC field for RA info
    
    [ Upstream commit ae44fa993e8e6c1a1d22e5ca03d9eadd53b2745b ]
    
    Convert the type of LDPC field to boolen because
    LDPC field of RA info H2C command to firmware
    is only one bit.
    
    Fixes: e3037485c68e ("rtw88: new Realtek 802.11ac driver")
    Signed-off-by: Tsang-Shian Lin <thlin@realtek.com>
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200717064937.27966-2-yhchuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fef9f09078b083881567155aedfaf0b10b3a81f0
Author: Surabhi Boob <surabhi.boob@intel.com>
Date:   Wed Jul 29 17:19:18 2020 -0700

    ice: Graceful error handling in HW table calloc failure
    
    [ Upstream commit bcc46cb8a077c6189b44f1555b8659837f748eb2 ]
    
    In the ice_init_hw_tbls, if the devm_kcalloc for es->written fails, catch
    that error and bail out gracefully, instead of continuing with a NULL
    pointer.
    
    Fixes: 32d63fa1e9f3 ("ice: Initialize DDP package structures")
    Signed-off-by: Surabhi Boob <surabhi.boob@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fd47ea1e0635a5a43cb86a0a9eb3c289859b0ec
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Thu Jul 30 17:01:20 2020 +0200

    s390/qeth: don't process empty bridge port events
    
    [ Upstream commit 02472e28b9a45471c6d8729ff2c7422baa9be46a ]
    
    Discard events that don't contain any entries. This shouldn't happen,
    but subsequent code relies on being able to use entry 0. So better
    be safe than accessing garbage.
    
    Fixes: b4d72c08b358 ("qeth: bridgeport support - basic control")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8ae2bf5ccc66b6cc66567e4ef5b4f7220a458fe
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Jul 31 14:28:15 2020 +0800

    ASoC: fsl_sai: Fix value of FSL_SAI_CR1_RFW_MASK
    
    [ Upstream commit 5aef1ff2397d021f93d874b57dff032fdfac73de ]
    
    The fifo_depth is 64 on i.MX8QM/i.MX8QXP, 128 on i.MX8MQ, 16 on
    i.MX7ULP.
    
    Original FSL_SAI_CR1_RFW_MASK value 0x1F is not suitable for
    these platform, the FIFO watermark mask should be updated
    according to the fifo_depth.
    
    Fixes: a860fac42097 ("ASoC: fsl_sai: Add support for imx7ulp/imx8mq")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/1596176895-28724-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 115da6e650abdbcd9437352e63112c115e6412c0
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jul 29 17:44:55 2020 +0200

    ASoC: meson: axg-tdm-formatters: fix sclk inversion
    
    [ Upstream commit 0d3f01dcdc234001f979a0af0b6b31cb9f25b6c1 ]
    
    After carefully checking, it appears that both tdmout and tdmin require the
    rising edge of the sclk they get to be synchronized with the frame sync
    event (which should be a rising edge of lrclk).
    
    TDMIN was improperly set before this patch. Remove the sclk_invert quirk
    which is no longer needed and fix the sclk phase.
    
    Fixes: 1a11d88f499c ("ASoC: meson: add tdm formatter base driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200729154456.1983396-4-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cc88bf694111c13d675f1174262f0c27962ead9
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jul 29 17:44:54 2020 +0200

    ASoC: meson: axg-tdmin: fix g12a skew
    
    [ Upstream commit 80a254394fcfe55450b0351da298ca7231889219 ]
    
    After carefully checking the result provided by the TDMIN on the g12a and
    sm1 SoC families, the TDMIN skew offset appears to be 3 instead of 2 on the
    axg.
    
    Fixes: f01bc67f58fd ("ASoC: meson: axg-tdm-formatter: rework quirks settings")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200729154456.1983396-3-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9d54ebf8db0c46c9401be250694f0a69b9b6400
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jul 29 17:44:53 2020 +0200

    ASoC: meson: axg-tdm-interface: fix link fmt setup
    
    [ Upstream commit 6878ba91ce84f7a07887a0615af70f969508839f ]
    
    The .set_fmt() callback of the axg tdm interface incorrectly
    test the content of SND_SOC_DAIFMT_MASTER_MASK as if it was a
    bitfield, which it is not.
    
    Implement the test correctly.
    
    Fixes: d60e4f1e4be5 ("ASoC: meson: add tdm interface driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200729154456.1983396-2-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5299edbfc19aefdd39bee651a1d27ea697bb2616
Author: Sandipan Das <sandipan@linux.ibm.com>
Date:   Thu Jul 30 10:38:46 2020 +0530

    selftests/powerpc: Fix online CPU selection
    
    [ Upstream commit dfa03fff86027e58c8dba5c03ae68150d4e513ad ]
    
    The size of the CPU affinity mask must be large enough for
    systems with a very large number of CPUs. Otherwise, tests
    which try to determine the first online CPU by calling
    sched_getaffinity() will fail. This makes sure that the size
    of the allocated affinity mask is dependent on the number of
    CPUs as reported by get_nprocs_conf().
    
    Fixes: 3752e453f6ba ("selftests/powerpc: Add tests of PMU EBBs")
    Reported-by: Shirisha Ganta <shiganta@in.ibm.com>
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/a408c4b8e9a23bb39b539417a21eb0ff47bb5127.1596084858.git.sandipan@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5412751327e87c02b9792ae31444cd4779624fd1
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Mon Jun 22 14:01:23 2020 +0200

    cpufreq: ap806: fix cpufreq driver needs ap cpu clk
    
    [ Upstream commit 8c37ad2f523396e15cf002b29f8f796447c71932 ]
    
    The Armada 8K cpufreq driver needs the Armada AP CPU CLK
    to work. This dependency is currently not satisfied and
    the ARMADA_AP_CPU_CLK can not be selected independently.
    
    Add it to the cpufreq Armada8k driver.
    
    Fixes: f525a670533d ("cpufreq: ap806: add cpufreq driver for Armada 8K")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0df3fad9c17fe4c83bd6c2f3e5b9d26e606f2b09
Author: Hanjun Guo <guohanjun@huawei.com>
Date:   Wed Jul 22 17:44:28 2020 +0800

    PCI: Release IVRS table in AMD ACS quirk
    
    [ Upstream commit 090688fa4e448284aaa16136372397d7d10814db ]
    
    The acpi_get_table() should be coupled with acpi_put_table() if the mapped
    table is not used at runtime to release the table mapping.
    
    In pci_quirk_amd_sb_acs(), IVRS table is just used for checking AMD IOMMU
    is supported, not used at runtime, so put the table after using it.
    
    Fixes: 15b100dfd1c9 ("PCI: Claim ACS support for AMD southbridge devices")
    Link: https://lore.kernel.org/r/1595411068-15440-1-git-send-email-guohanjun@huawei.com
    Signed-off-by: Hanjun Guo <guohanjun@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07783db29f89878dca1b859373e7bf3a0896a7e9
Author: Mark Zhang <markz@mellanox.com>
Date:   Mon Jul 27 12:58:28 2020 +0300

    RDMA/netlink: Remove CAP_NET_RAW check when dump a raw QP
    
    [ Upstream commit 1d70ad0f85435a7262de802b104e49e6598c50ff ]
    
    When dumping QPs bound to a counter, raw QPs should be allowed to dump
    without the CAP_NET_RAW privilege. This is consistent with what "rdma res
    show qp" does.
    
    Fixes: c4ffee7c9bdb ("RDMA/netlink: Implement counter dumpit calback")
    Link: https://lore.kernel.org/r/20200727095828.496195-1-leon@kernel.org
    Signed-off-by: Mark Zhang <markz@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04cf65b784d2e947b17c4034138ed1c249b894f0
Author: Harish <harish@linux.ibm.com>
Date:   Tue Jun 9 13:44:23 2020 +0530

    selftests/powerpc: Fix CPU affinity for child process
    
    [ Upstream commit 854eb5022be04f81e318765f089f41a57c8e5d83 ]
    
    On systems with large number of cpus, test fails trying to set
    affinity by calling sched_setaffinity() with smaller size for affinity
    mask. This patch fixes it by making sure that the size of allocated
    affinity mask is dependent on the number of CPUs as reported by
    get_nprocs().
    
    Fixes: 00b7ec5c9cf3 ("selftests/powerpc: Import Anton's context_switch2 benchmark")
    Reported-by: Shirisha Ganta <shiganta@in.ibm.com>
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Harish <harish@linux.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Reviewed-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200609081423.529664-1-harish@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e95f258a14318a1c452a581a1c2e0f937b7ad78
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Jul 24 23:17:26 2020 +1000

    powerpc/boot: Fix CONFIG_PPC_MPC52XX references
    
    [ Upstream commit e5eff89657e72a9050d95fde146b54c7dc165981 ]
    
    Commit 866bfc75f40e ("powerpc: conditionally compile platform-specific
    serial drivers") made some code depend on CONFIG_PPC_MPC52XX, which
    doesn't exist.
    
    Fix it to use CONFIG_PPC_MPC52xx.
    
    Fixes: 866bfc75f40e ("powerpc: conditionally compile platform-specific serial drivers")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200724131728.1643966-7-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69a797a0451742fa73ea6ad2936a0e9fd4c2302d
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Jul 24 23:17:24 2020 +1000

    powerpc/32s: Fix CONFIG_BOOK3S_601 uses
    
    [ Upstream commit df4d4ef22446b3a789a4efd74d34f2ec1e24deb2 ]
    
    We have two uses of CONFIG_BOOK3S_601, which doesn't exist. Fix them
    to use CONFIG_PPC_BOOK3S_601 which is the correct symbol.
    
    Fixes: 12c3f1fd87bf ("powerpc/32s: get rid of CPU_FTR_601 feature")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200724131728.1643966-5-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09c2050239fb7227bea8917e7436db75e952a555
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Mon Jul 27 11:01:27 2020 +1000

    selftests/powerpc: Squash spurious errors due to device removal
    
    [ Upstream commit 5f8cf6475828b600ff6d000e580c961ac839cc61 ]
    
    For drivers that don't have the error handling callbacks we implement
    recovery by removing the device and re-probing it. This causes the sysfs
    directory for the PCI device to be removed which causes the following
    spurious error to be printed when checking the PE state:
    
    Breaking 0005:03:00.0...
    ./eeh-basic.sh: line 13: can't open /sys/bus/pci/devices/0005:03:00.0/eeh_pe_state: no such file
    0005:03:00.0, waited 0/60
    0005:03:00.0, waited 1/60
    0005:03:00.0, waited 2/60
    0005:03:00.0, waited 3/60
    0005:03:00.0, waited 4/60
    0005:03:00.0, waited 5/60
    0005:03:00.0, waited 6/60
    0005:03:00.0, waited 7/60
    0005:03:00.0, Recovered after 8 seconds
    
    We currently try to avoid this by checking if the PE state file exists
    before reading from it. This is however inherently racy so re-work the
    state checking so that we only read from the file once, and we squash any
    errors that occur while reading.
    
    Fixes: 85d86c8aa52e ("selftests/powerpc: Add basic EEH selftest")
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200727010127.23698-1-oohall@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f56aa0b1fec222480ccd6773eb67f90327310f6
Author: Brian Foster <bfoster@redhat.com>
Date:   Wed Jul 15 18:44:50 2020 -0700

    xfs: fix inode allocation block res calculation precedence
    
    [ Upstream commit b2a8864728683443f34a9fd33a2b78b860934cc1 ]
    
    The block reservation calculation for inode allocation is supposed
    to consist of the blocks required for the inode chunk plus
    (maxlevels-1) of the inode btree multiplied by the number of inode
    btrees in the fs (2 when finobt is enabled, 1 otherwise).
    
    Instead, the macro returns (ialloc_blocks + 2) due to a precedence
    error in the calculation logic. This leads to block reservation
    overruns via generic/531 on small block filesystems with finobt
    enabled. Add braces to fix the calculation and reserve the
    appropriate number of blocks.
    
    Fixes: 9d43b180af67 ("xfs: update inode allocation/free transaction reservations for finobt")
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c0fd1e61b5a82e853c427da2a0634d5f1333da3
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jul 27 01:34:40 2020 +0200

    net: dsa: rtl8366: Fix VLAN set-up
    
    [ Upstream commit 788abc6d9d278ed6fa1fa94db2098481a04152b7 ]
    
    Alter the rtl8366_vlan_add() to call rtl8366_set_vlan()
    inside the loop that goes over all VIDs since we now
    properly support calling that function more than once.
    Augment the loop to postincrement as this is more
    intuitive.
    
    The loop moved past the last VID but called
    rtl8366_set_vlan() with the port number instead of
    the VID, assuming a 1-to-1 correspondence between
    ports and VIDs. This was also a bug.
    
    Cc: DENG Qingfang <dqfext@gmail.com>
    Cc: Mauri Sandberg <sandberg@mailfence.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cd2a4878787d62912d896d6523eb196ed5731b5
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jul 27 01:34:39 2020 +0200

    net: dsa: rtl8366: Fix VLAN semantics
    
    [ Upstream commit 15ab7906cc9290afb006df1bb1074907fbcc7061 ]
    
    The RTL8366 would not handle adding new members (ports) to
    a VLAN: the code assumed that ->port_vlan_add() was only
    called once for a single port. When intializing the
    switch with .configure_vlan_while_not_filtering set to
    true, the function is called numerous times for adding
    all ports to VLAN1, which was something the code could
    not handle.
    
    Alter rtl8366_set_vlan() to just |= new members and
    untagged flags to 4k and MC VLAN table entries alike.
    This makes it possible to just add new ports to a
    VLAN.
    
    Put in some helpful debug code that can be used to find
    any further bugs here.
    
    Cc: DENG Qingfang <dqfext@gmail.com>
    Cc: Mauri Sandberg <sandberg@mailfence.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 495b9d0dd0714e9e542e7c765243ecb0d6278cab
Author: Nicolas Boichat <drinkcat@chromium.org>
Date:   Tue Jul 21 10:37:16 2020 +0800

    Bluetooth: hci_serdev: Only unregister device if it was registered
    
    [ Upstream commit 202798db9570104728dce8bb57dfeed47ce764bc ]
    
    We should not call hci_unregister_dev if the device was not
    successfully registered.
    
    Fixes: c34dc3bfa7642fd ("Bluetooth: hci_serdev: Introduce hci_uart_unregister_device()")
    Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba5c28f78461ed2de137c1f3e9f56b48b11ec062
Author: Nicolas Boichat <drinkcat@chromium.org>
Date:   Tue Jul 21 10:37:15 2020 +0800

    Bluetooth: hci_h5: Set HCI_UART_RESET_ON_INIT to correct flags
    
    [ Upstream commit a7ad4b6119d740b1ec5788f1b98be0fd1c1b5a5a ]
    
    HCI_UART_RESET_ON_INIT belongs in hdev_flags, not flags.
    
    Fixes: ce945552fde4a09 ("Bluetooth: hci_h5: Add support for serdev enumerated devices")
    Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d91c73c13f1a25855c55ecbb7058266b59b9994
Author: Tom Rix <trix@redhat.com>
Date:   Sun Jul 12 12:23:51 2020 -0700

    power: supply: check if calc_soc succeeded in pm860x_init_battery
    
    [ Upstream commit ccf193dee1f0fff55b556928591f7818bac1b3b1 ]
    
    clang static analysis flags this error
    
    88pm860x_battery.c:522:19: warning: Assigned value is
      garbage or undefined [core.uninitialized.Assign]
                    info->start_soc = soc;
                                    ^ ~~~
    soc is set by calling calc_soc.
    But calc_soc can return without setting soc.
    
    So check the return status and bail similarly to other
    checks in pm860x_init_battery and initialize soc to
    silence the warning.
    
    Fixes: a830d28b48bf ("power_supply: Enable battery-charger for 88pm860x")
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2b8438ed831ea7f709970e77c62bb5692a2ea97
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 23 18:23:05 2020 +0300

    Smack: prevent underflow in smk_set_cipso()
    
    [ Upstream commit 42a2df3e829f3c5562090391b33714b2e2e5ad4a ]
    
    We have an upper bound on "maplevel" but forgot to check for negative
    values.
    
    Fixes: e114e473771c ("Smack: Simplified Mandatory Access Control Kernel")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 674992659a97d1a19295038d7e2aafca35d09813
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 23 18:22:19 2020 +0300

    Smack: fix another vsscanf out of bounds
    
    [ Upstream commit a6bd4f6d9b07452b0b19842044a6c3ea384b0b88 ]
    
    This is similar to commit 84e99e58e8d1 ("Smack: slab-out-of-bounds in
    vsscanf") where we added a bounds check on "rule".
    
    Reported-by: syzbot+a22c6092d003d6fe1122@syzkaller.appspotmail.com
    Fixes: f7112e6c9abf ("Smack: allow for significantly longer Smack labels v4")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a2cd06a3d93ea4018cf1938fcfdbad868923232
Author: Li Heng <liheng40@huawei.com>
Date:   Sat Jul 25 10:56:27 2020 +0800

    RDMA/core: Fix return error value in _ib_modify_qp() to negative
    
    [ Upstream commit 47fda651d5af2506deac57d54887cf55ce26e244 ]
    
    The error codes in _ib_modify_qp() are supposed to be negative errno.
    
    Fixes: 7a5c938b9ed0 ("IB/core: Check for rdma_protocol_ib only after validating port_num")
    Link: https://lore.kernel.org/r/1595645787-20375-1-git-send-email-liheng40@huawei.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Li Heng <liheng40@huawei.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16416a1587430783a33b7cafc5727938428599ec
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Jul 22 16:33:11 2020 +0530

    PCI: cadence: Fix updating Vendor ID and Subsystem Vendor ID register
    
    [ Upstream commit e3bca37d15dca118f2ef1f0a068bb6e07846ea20 ]
    
    Commit 1b79c5284439 ("PCI: cadence: Add host driver for Cadence PCIe
    controller") in order to update Vendor ID, directly wrote to
    PCI_VENDOR_ID register. However PCI_VENDOR_ID in root port configuration
    space is read-only register and writing to it will have no effect.
    Use local management register to configure Vendor ID and Subsystem Vendor
    ID.
    
    Link: https://lore.kernel.org/r/20200722110317.4744-10-kishon@ti.com
    Fixes: 1b79c5284439 ("PCI: cadence: Add host driver for Cadence PCIe controller")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 845601756341b3b7f8022e1440e231db4ba941bd
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun Jun 28 14:23:12 2020 +1000

    macintosh/via-macii: Access autopoll_devs when inside lock
    
    [ Upstream commit 59ea38f6b3af5636edf541768a1ed721eeaca99e ]
    
    The interrupt handler should be excluded when accessing the autopoll_devs
    variable.
    
    Fixes: d95fd5fce88f0 ("m68k: Mac II ADB fixes") # v5.0+
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/5952dd8a9bc9de90f1acc4790c51dd42b4c98065.1593318192.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a88f86763cbcef5410ba3cd287ced5542472e239
Author: Chris Packham <chris.packham@alliedtelesis.co.nz>
Date:   Fri Jul 24 11:21:20 2020 +1200

    net: dsa: mv88e6xxx: MV88E6097 does not support jumbo configuration
    
    [ Upstream commit 0f3c66a3c7b4e8b9f654b3c998e9674376a51b0f ]
    
    The MV88E6097 chip does not support configuring jumbo frames. Prior to
    commit 5f4366660d65 only the 6352, 6351, 6165 and 6320 chips configured
    jumbo mode. The refactor accidentally added the function for the 6097.
    Remove the erroneous function pointer assignment.
    
    Fixes: 5f4366660d65 ("net: dsa: mv88e6xxx: Refactor setting of jumbo frames")
    Signed-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6f75b1756f73ae8cadcab051b9e8fdb0238f0bf
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Thu Jul 23 09:25:51 2020 +1000

    scsi: mesh: Fix panic after host or bus reset
    
    [ Upstream commit edd7dd2292ab9c3628b65c4d04514c3068ad54f6 ]
    
    Booting Linux with a Conner CP3200 drive attached to the MESH SCSI bus
    results in EH measures and a panic:
    
    [   25.499838] mesh: configured for synchronous 5 MB/s
    [   25.787154] mesh: performing initial bus reset...
    [   29.867115] scsi host0: MESH
    [   29.929527] mesh: target 0 synchronous at 3.6 MB/s
    [   29.998763] scsi 0:0:0:0: Direct-Access     CONNER   CP3200-200mb-3.5 4040 PQ: 0 ANSI: 1 CCS
    [   31.989975] sd 0:0:0:0: [sda] 415872 512-byte logical blocks: (213 MB/203 MiB)
    [   32.070975] sd 0:0:0:0: [sda] Write Protect is off
    [   32.137197] sd 0:0:0:0: [sda] Mode Sense: 5b 00 00 08
    [   32.209661] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
    [   32.332708]  sda: [mac] sda1 sda2 sda3
    [   32.417733] sd 0:0:0:0: [sda] Attached SCSI disk
    ... snip ...
    [   76.687067] mesh_abort((ptrval))
    [   76.743606] mesh: state at (ptrval), regs at (ptrval), dma at (ptrval)
    [   76.810798]     ct=6000 seq=86 bs=4017 fc= 0 exc= 0 err= 0 im= 7 int= 0 sp=85
    [   76.880720]     dma stat=84e0 cmdptr=1f73d000
    [   76.941387]     phase=4 msgphase=0 conn_tgt=0 data_ptr=24576
    [   77.005567]     dma_st=1 dma_ct=0 n_msgout=0
    [   77.065456]     target 0: req=(ptrval) goes_out=0 saved_ptr=0
    [   77.130512] mesh_abort((ptrval))
    [   77.187670] mesh: state at (ptrval), regs at (ptrval), dma at (ptrval)
    [   77.255594]     ct=6000 seq=86 bs=4017 fc= 0 exc= 0 err= 0 im= 7 int= 0 sp=85
    [   77.325778]     dma stat=84e0 cmdptr=1f73d000
    [   77.387239]     phase=4 msgphase=0 conn_tgt=0 data_ptr=24576
    [   77.453665]     dma_st=1 dma_ct=0 n_msgout=0
    [   77.515900]     target 0: req=(ptrval) goes_out=0 saved_ptr=0
    [   77.582902] mesh_host_reset
    [   88.187083] Kernel panic - not syncing: mesh: double DMA start !
    [   88.254510] CPU: 0 PID: 358 Comm: scsi_eh_0 Not tainted 5.6.13-pmac #1
    [   88.323302] Call Trace:
    [   88.378854] [e16ddc58] [c0027080] panic+0x13c/0x308 (unreliable)
    [   88.446221] [e16ddcb8] [c02b2478] mesh_start.part.12+0x130/0x414
    [   88.513298] [e16ddcf8] [c02b2fc8] mesh_queue+0x54/0x70
    [   88.577097] [e16ddd18] [c02a1848] scsi_send_eh_cmnd+0x374/0x384
    [   88.643476] [e16dddc8] [c02a1938] scsi_eh_tur+0x5c/0xb8
    [   88.707878] [e16dddf8] [c02a1ab8] scsi_eh_test_devices+0x124/0x178
    [   88.775663] [e16dde28] [c02a2094] scsi_eh_ready_devs+0x588/0x8a8
    [   88.843124] [e16dde98] [c02a31d8] scsi_error_handler+0x344/0x520
    [   88.910697] [e16ddf08] [c00409c8] kthread+0xe4/0xe8
    [   88.975166] [e16ddf38] [c000f234] ret_from_kernel_thread+0x14/0x1c
    [   89.044112] Rebooting in 180 seconds..
    
    In theory, a panic can happen after a bus or host reset with dma_started
    flag set. Fix this by halting the DMA before reinitializing the host.
    Don't assume that ms->current_req is set when halt_dma() is invoked as it
    may not hold for bus or host reset.
    
    BTW, this particular Conner drive can be made to work by inhibiting
    disconnect/reselect with 'mesh.resel_targets=0'.
    
    Link: https://lore.kernel.org/r/3952bc691e150a7128b29120999b6092071b039a.1595460351.git.fthain@telegraphics.com.au
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: Paul Mackerras <paulus@ozlabs.org>
    Reported-and-tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b41e8798f28805cd0ba6131229f29d794c8a2c28
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Jul 9 15:31:44 2020 +0200

    scsi: megaraid_sas: Clear affinity hint
    
    [ Upstream commit 1eb81df5c53b1e785fdef298d533feab991381e4 ]
    
    To avoid a warning in free_irq, clear the affinity hint.
    
    Link: https://lore.kernel.org/r/20200709133144.8363-1-thenzl@redhat.com
    Fixes: f0b9e7bdc309 ("scsi: megaraid_sas: Set affinity for high IOPS reply queues")
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d7e19cf79f402f989ff97fc55a6cbfc07adfdbd
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Fri Jul 3 16:49:03 2020 +0300

    usb: gadget: f_uac2: fix AC Interface Header Descriptor wTotalLength
    
    [ Upstream commit a9cf8715180b18c62addbfe6f6267b8101903119 ]
    
    As per UAC2 spec (ch. 4.7.2), wTotalLength of AC Interface
    Header Descriptor "includes the combined length of this
    descriptor header and all Clock Source, Unit and Terminal
    descriptors."
    
    Thus add its size to its wTotalLength.
    
    Also after recent changes wTotalLength is calculated
    dynamically, update static definition of uac2_ac_header_descriptor
    accordingly
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2c2b88b049684b89776036f9a03fcc2d1bb3c22
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Jul 16 14:09:48 2020 +0200

    usb: dwc2: Fix error path in gadget registration
    
    [ Upstream commit 33a06f1300a79cfd461cea0268f05e969d4f34ec ]
    
    When gadget registration fails, one should not call usb_del_gadget_udc().
    Ensure this by setting gadget->udc to NULL. Also in case of a failure
    there is no need to disable low-level hardware, so return immiedetly
    instead of jumping to error_init label.
    
    This fixes the following kernel NULL ptr dereference on gadget failure
    (can be easily triggered with g_mass_storage without any module
    parameters):
    
    dwc2 12480000.hsotg: dwc2_check_params: Invalid parameter besl=1
    dwc2 12480000.hsotg: dwc2_check_params: Invalid parameter g_np_tx_fifo_size=1024
    dwc2 12480000.hsotg: EPs: 16, dedicated fifos, 7808 entries in SPRAM
    Mass Storage Function, version: 2009/09/11
    LUN: removable file: (no medium)
    no file given for LUN0
    g_mass_storage 12480000.hsotg: failed to start g_mass_storage: -22
    8<--- cut here ---
    Unable to handle kernel NULL pointer dereference at virtual address 00000104
    pgd = (ptrval)
    [00000104] *pgd=00000000
    Internal error: Oops: 805 [#1] PREEMPT SMP ARM
    Modules linked in:
    CPU: 0 PID: 12 Comm: kworker/0:1 Not tainted 5.8.0-rc5 #3133
    Hardware name: Samsung Exynos (Flattened Device Tree)
    Workqueue: events deferred_probe_work_func
    PC is at usb_del_gadget_udc+0x38/0xc4
    LR is at __mutex_lock+0x31c/0xb18
    ...
    Process kworker/0:1 (pid: 12, stack limit = 0x(ptrval))
    Stack: (0xef121db0 to 0xef122000)
    ...
    [<c076bf3c>] (usb_del_gadget_udc) from [<c0726bec>] (dwc2_hsotg_remove+0x10/0x20)
    [<c0726bec>] (dwc2_hsotg_remove) from [<c0711208>] (dwc2_driver_probe+0x57c/0x69c)
    [<c0711208>] (dwc2_driver_probe) from [<c06247c0>] (platform_drv_probe+0x6c/0xa4)
    [<c06247c0>] (platform_drv_probe) from [<c0621df4>] (really_probe+0x200/0x48c)
    [<c0621df4>] (really_probe) from [<c06221e8>] (driver_probe_device+0x78/0x1fc)
    [<c06221e8>] (driver_probe_device) from [<c061fcd4>] (bus_for_each_drv+0x74/0xb8)
    [<c061fcd4>] (bus_for_each_drv) from [<c0621b54>] (__device_attach+0xd4/0x16c)
    [<c0621b54>] (__device_attach) from [<c0620c98>] (bus_probe_device+0x88/0x90)
    [<c0620c98>] (bus_probe_device) from [<c06211b0>] (deferred_probe_work_func+0x3c/0xd0)
    [<c06211b0>] (deferred_probe_work_func) from [<c0149280>] (process_one_work+0x234/0x7dc)
    [<c0149280>] (process_one_work) from [<c014986c>] (worker_thread+0x44/0x51c)
    [<c014986c>] (worker_thread) from [<c0150b1c>] (kthread+0x158/0x1a0)
    [<c0150b1c>] (kthread) from [<c0100114>] (ret_from_fork+0x14/0x20)
    Exception stack(0xef121fb0 to 0xef121ff8)
    ...
    ---[ end trace 9724c2fc7cc9c982 ]---
    
    While fixing this also fix the double call to dwc2_lowlevel_hw_disable()
    if dr_mode is set to USB_DR_MODE_PERIPHERAL. In such case low-level
    hardware is already disabled before calling usb_add_gadget_udc(). That
    function correctly preserves low-level hardware state, there is no need
    for the second unconditional dwc2_lowlevel_hw_disable() call.
    
    Fixes: 207324a321a8 ("usb: dwc2: Postponed gadget registration to the udc class driver")
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8f3c361ca2c0dcfefc873219bc60cff8cff8515
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Jul 21 21:47:18 2020 +0800

    MIPS: OCTEON: add missing put_device() call in dwc3_octeon_device_init()
    
    [ Upstream commit e8b9fc10f2615b9a525fce56981e40b489528355 ]
    
    if of_find_device_by_node() succeed, dwc3_octeon_device_init() doesn't have
    a corresponding put_device(). Thus add put_device() to fix the exception
    handling for this function implementation.
    
    Fixes: 93e502b3c2d4 ("MIPS: OCTEON: Platform support for OCTEON III USB controller")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db2eabff57cc56658da4d5ed545c9c7cbb230db8
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Jul 21 15:40:43 2020 +0100

    phy: armada-38x: fix NETA lockup when repeatedly switching speeds
    
    [ Upstream commit 1dea06cd643da38931382ebdc151efced201ffad ]
    
    The mvneta hardware appears to lock up in various random ways when
    repeatedly switching speeds between 1G and 2.5G, which involves
    reprogramming the COMPHY.  It is not entirely clear why this happens,
    but best guess is that reprogramming the COMPHY glitches mvneta clocks
    causing the hardware to fail.  It seems that rebooting resolves the
    failure, but not down/up cycling the interface alone.
    
    Various other approaches have been tried, such as trying to cleanly
    power down the COMPHY and then take it back through the power up
    initialisation, but this does not seem to help.
    
    It was finally noticed that u-boot's last step when configuring a
    COMPHY for "SGMII" mode was to poke at a register described as
    "GBE_CONFIGURATION_REG", which is undocumented in any external
    documentation.  All that we have is the fact that u-boot sets a bit
    corresponding to the "SGMII" lane at the end of COMPHY initialisation.
    
    Experimentation shows that if we clear this bit prior to changing the
    speed, and then set it afterwards, mvneta does not suffer this problem
    on the SolidRun Clearfog when switching speeds between 1G and 2.5G.
    
    This problem was found while script-testing phylink.
    
    This fix also requires the corresponding change to DT to be effective.
    See "ARM: dts: armada-38x: fix NETA lockup when repeatedly switching
    speeds".
    
    Fixes: 14dc100b4411 ("phy: armada38x: add common phy support")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/E1jxtRj-0003Tz-CG@rmk-PC.armlinux.org.uk
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bf9418b7b119b56879ca667e517fa687ee73b13
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Wed Jul 8 03:16:48 2020 +0800

    mt76: mt7615: fix potential memory leak in mcu message handler
    
    [ Upstream commit 9248c08c3fc4ef816c82aa49d01123f4746d349f ]
    
    Fix potential memory leak in mcu message handler on error condition.
    
    Fixes: 0e6a29e477f3 ("mt76: mt7615: add support to read temperature from mcu")
    Acked-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54c9afe415dc33974311b9b99739155a014e4552
Author: Madhavan Srinivasan <maddy@linux.ibm.com>
Date:   Sun Jun 14 14:06:04 2020 +0530

    powerpc/perf: Fix missing is_sier_aviable() during build
    
    [ Upstream commit 3c9450c053f88e525b2db1e6990cdf34d14e7696 ]
    
    Compilation error:
      arch/powerpc/perf/perf_regs.c:80:undefined reference to `.is_sier_available'
    
    Currently is_sier_available() is part of core-book3s.c, which is added
    to build based on CONFIG_PPC_PERF_CTRS.
    
    A config with CONFIG_PERF_EVENTS and without CONFIG_PPC_PERF_CTRS will
    have a build break because of missing is_sier_available().
    
    In practice it only breaks when CONFIG_FSL_EMB_PERF_EVENT=n because
    that also guards the usage of is_sier_available(). That only happens
    with CONFIG_PPC_BOOK3E_64=y and CONFIG_FSL_SOC_BOOKE=n.
    
    Patch adds is_sier_available() in asm/perf_event.h to fix the build
    break for configs missing CONFIG_PPC_PERF_CTRS.
    
    Fixes: 333804dc3b7a ("powerpc/perf: Update perf_regs structure to include SIER")
    Reported-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Madhavan Srinivasan <maddy@linux.ibm.com>
    [mpe: Add detail about CONFIG_FSL_SOC_BOOKE]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200614083604.302611-1-maddy@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53eeba79c15272044c48e89f015d5a660fadb0cd
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Thu Jul 16 11:57:42 2020 -0600

    coresight: tmc: Fix TMC mode read in tmc_read_unprepare_etb()
    
    [ Upstream commit d021f5c5ff679432c5e9faee0fd7350db2efb97c ]
    
    Reading TMC mode register without proper coresight power
    management can lead to exceptions like the one in the call
    trace below in tmc_read_unprepare_etb() when the trace data
    is read after the sink is disabled. So fix this by having
    a check for coresight sysfs mode before reading TMC mode
    management register in tmc_read_unprepare_etb() similar to
    tmc_read_prepare_etb().
    
      SError Interrupt on CPU6, code 0xbe000411 -- SError
      pstate: 80400089 (Nzcv daIf +PAN -UAO)
      pc : tmc_read_unprepare_etb+0x74/0x108
      lr : tmc_read_unprepare_etb+0x54/0x108
      sp : ffffff80d9507c30
      x29: ffffff80d9507c30 x28: ffffff80b3569a0c
      x27: 0000000000000000 x26: 00000000000a0001
      x25: ffffff80cbae9550 x24: 0000000000000010
      x23: ffffffd07296b0f0 x22: ffffffd0109ee028
      x21: 0000000000000000 x20: ffffff80d19e70e0
      x19: ffffff80d19e7080 x18: 0000000000000000
      x17: 0000000000000000 x16: 0000000000000000
      x15: 0000000000000000 x14: 0000000000000000
      x13: 0000000000000000 x12: 0000000000000000
      x11: 0000000000000000 x10: dfffffd000000001
      x9 : 0000000000000000 x8 : 0000000000000002
      x7 : ffffffd071d0fe78 x6 : 0000000000000000
      x5 : 0000000000000080 x4 : 0000000000000001
      x3 : ffffffd071d0fe98 x2 : 0000000000000000
      x1 : 0000000000000004 x0 : 0000000000000001
      Kernel panic - not syncing: Asynchronous SError Interrupt
    
    Fixes: 4525412a5046 ("coresight: tmc: making prepare/unprepare functions generic")
    Reported-by: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Tested-by: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200716175746.3338735-14-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6482f51199464d2d0419a3923baeca59f0abacf8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jun 16 12:19:49 2020 +0300

    thermal: ti-soc-thermal: Fix reversed condition in ti_thermal_expose_sensor()
    
    [ Upstream commit 0f348db01fdf128813fdd659fcc339038fb421a4 ]
    
    This condition is reversed and will cause breakage.
    
    Fixes: 7440f518dad9 ("thermal/drivers/ti-soc-thermal: Avoid dereferencing ERR_PTR")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200616091949.GA11940@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c30281c4b28f065f3ca897bbf1dec6afe86c929e
Author: Kars Mulder <kerneldev@karsmulder.nl>
Date:   Tue Jul 7 16:43:50 2020 +0200

    usb: core: fix quirks_param_set() writing to a const pointer
    
    [ Upstream commit b1b6bed3b5036509b449b5965285d5057ba42527 ]
    
    The function quirks_param_set() takes as argument a const char* pointer
    to the new value of the usbcore.quirks parameter. It then casts this
    pointer to a non-const char* pointer and passes it to the strsep()
    function, which overwrites the value.
    
    Fix this by creating a copy of the value using kstrdup() and letting
    that copy be written to by strsep().
    
    Fixes: 027bd6cafd9a ("usb: core: Add "quirks" parameter for usbcore")
    Signed-off-by: Kars Mulder <kerneldev@karsmulder.nl>
    
    Link: https://lore.kernel.org/r/5ee2-5f048a00-21-618c5c00@230659773
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92581069807b4d36b6ad666b35c05cd175f21752
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jul 16 10:50:55 2020 +0200

    USB: serial: iuu_phoenix: fix led-activity helpers
    
    [ Upstream commit de37458f8c2bfc465500a1dd0d15dbe96d2a698c ]
    
    The set-led command is eight bytes long and starts with a command byte
    followed by six bytes of RGB data and ends with a byte encoding a
    frequency (see iuu_led() and iuu_rgbf_fill_buffer()).
    
    The led activity helpers had a few long-standing bugs which corrupted
    the command packets by inserting a second command byte and thereby
    offsetting the RGB data and dropping the frequency in non-xmas mode.
    
    In xmas mode, a related off-by-one error left the frequency field
    uninitialised.
    
    Fixes: 60a8fc017103 ("USB: add iuu_phoenix driver")
    Reported-by: George Spelvin <lkml@sdf.org>
    Link: https://lore.kernel.org/r/20200716085056.31471-1-johan@kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 278b532dfeaf42fbcda8b69d0b7c4cb1e8eb9be0
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Fri Jul 17 23:56:48 2020 +0200

    spi: lantiq-ssc: Fix warning by using WQ_MEM_RECLAIM
    
    [ Upstream commit ba3548cf29616b58c93bbaffc3d636898d009858 ]
    
    The lantiq-ssc driver uses internally an own workqueue to wait till the
    data is not only written out of the FIFO but really written to the wire.
    This workqueue is flushed while the SPI subsystem is working in some
    other system workqueue.
    
    The system workqueue is marked as WQ_MEM_RECLAIM, but the workqueue in
    the lantiq-ssc driver does not use WQ_MEM_RECLAIM for now. Add this flag
    too to prevent this warning.
    
    This fixes the following warning:
    [    2.975956] WARNING: CPU: 1 PID: 17 at kernel/workqueue.c:2614 check_flush_dependency+0x168/0x184
    [    2.984752] workqueue: WQ_MEM_RECLAIM kblockd:blk_mq_run_work_fn is flushing !WQ_MEM_RECLAIM 1e100800.spi:0x0
    
    Fixes: 891b7c5fbf61 ("mtd_blkdevs: convert to blk-mq")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Link: https://lore.kernel.org/r/20200717215648.20522-1-hauke@hauke-m.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e206d89e1c7cdc8b84b9b08aebbc363f7a9b4ad
Author: Steve Longerbeam <slongerbeam@gmail.com>
Date:   Wed Jun 17 15:40:36 2020 -0700

    gpu: ipu-v3: Restore RGB32, BGR32
    
    [ Upstream commit 22b2cfad752d4b278ea7c38c0ee961ca50198ce8 ]
    
    RGB32 and BGR32 formats were inadvertently removed from the switch
    statement in ipu_pixelformat_to_colorspace(). Restore them.
    
    Fixes: a59957172b0c ("gpu: ipu-v3: enable remaining 32-bit RGB V4L2 pixel formats")
    Signed-off-by: Steve Longerbeam <slongerbeam@gmail.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e66ffe919ed4cba99b0d393d490a6e655f8902ed
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Thu Jun 11 14:43:32 2020 +0200

    drm/imx: tve: fix regulator_disable error path
    
    [ Upstream commit 7bb58b987fee26da2a1665c01033022624986b7c ]
    
    Add missing regulator_disable() as devm_action to avoid dedicated
    unbind() callback and fix the missing error handling.
    
    Fixes: fcbc51e54d2a ("staging: drm/imx: Add support for Television Encoder (TVEv2)")
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a279871012d34c879c72eeaaf1f449b7d5e6731
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Thu Jun 11 14:43:31 2020 +0200

    drm/imx: fix use after free
    
    [ Upstream commit ba807c94f67fd64b3051199810d9e4dd209fdc00 ]
    
    Component driver structures allocated with devm_kmalloc() in bind() are
    freed automatically after unbind(). Since the contained drm structures
    are accessed afterwards in drm_mode_config_cleanup(), move the
    allocation into probe() to extend the driver structure's lifetime to the
    lifetime of the device. This should eventually be changed to use drm
    resource managed allocations with lifetime of the drm device.
    
    We also need to ensure that all componets are available during the
    unbind() so we need to call component_unbind_all() before we free
    non-devres resources like planes.
    
    Note this patch fixes the the use after free bug but introduces a
    possible boot loop issue. The issue is triggered if the HDMI support is
    enabled and a component driver always return -EPROBE_DEFER, see
    discussion [1] for more details.
    
    [1] https://lkml.org/lkml/2020/3/24/1467
    
    Fixes: 17b5001b5143 ("imx-drm: convert to componentised device support")
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    [m.felsch@pengutronix: fix imx_tve_probe()]
    [m.felsch@pengutronix: resort component_unbind_all())
    [m.felsch@pengutronix: adapt commit message]
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44ae76d01d956a1ed0252914ad875c7831b9ad02
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Jul 9 08:59:24 2020 +0530

    powerpc/book3s64/pkeys: Use PVR check instead of cpu feature
    
    [ Upstream commit d79e7a5f26f1d179cbb915a8bf2469b6d7431c29 ]
    
    We are wrongly using CPU_FTRS_POWER8 to check for P8 support. Instead, we should
    use PVR value. Now considering we are using CPU_FTRS_POWER8, that
    implies we returned true for P9 with older firmware. Keep the same behavior
    by checking for P9 PVR value.
    
    Fixes: cf43d3b26452 ("powerpc: Enable pkey subsystem")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200709032946.881753-2-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6112c341ba3a1b1b0c0b65bbfefea04a001f4486
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Jul 17 20:44:56 2020 +0900

    phy: renesas: rcar-gen3-usb2: move irq registration to init
    
    [ Upstream commit 08b0ad375ca66181faee725b1b358bcae8d592ee ]
    
    If CONFIG_DEBUG_SHIRQ was enabled, r8a77951-salvator-xs could boot
    correctly. If we appended "earlycon keep_bootcon" to the kernel
    command like, we could get kernel log like below.
    
        SError Interrupt on CPU0, code 0xbf000002 -- SError
        CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.8.0-rc3-salvator-x-00505-g6c843129e6faaf01 #785
        Hardware name: Renesas Salvator-X 2nd version board based on r8a77951 (DT)
        pstate: 60400085 (nZCv daIf +PAN -UAO BTYPE=--)
        pc : rcar_gen3_phy_usb2_irq+0x14/0x54
        lr : free_irq+0xf4/0x27c
    
    This means free_irq() calls the interrupt handler while PM runtime
    is not getting if DEBUG_SHIRQ is enabled and rcar_gen3_phy_usb2_probe()
    failed. To fix the issue, move the irq registration place to
    rcar_gen3_phy_usb2_init() which is ready to handle the interrupts.
    
    Note that after the commit 549b6b55b005 ("phy: renesas: rcar-gen3-usb2:
    enable/disable independent irqs") which is merged into v5.2, since this
    driver creates multiple phy instances, needs to check whether one of
    phy instances is initialized. However, if we backport this patch to v5.1
    or less, we don't need to check it because such kernel have single
    phy instance.
    
    Reported-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Fixes: 9f391c574efc ("phy: rcar-gen3-usb2: add runtime ID/VBUS pin detection")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1594986297-12434-2-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e82e9db82faf8465660c423dfee4f37910039410
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Jul 17 15:59:25 2020 +0800

    PCI/ASPM: Add missing newline in sysfs 'policy'
    
    [ Upstream commit 3167e3d340c092fd47924bc4d23117a3074ef9a9 ]
    
    When I cat ASPM parameter 'policy' by sysfs, it displays as follows.  Add a
    newline for easy reading.  Other sysfs attributes already include a
    newline.
    
      [root@localhost ~]# cat /sys/module/pcie_aspm/parameters/policy
      [default] performance powersave powersupersave [root@localhost ~]#
    
    Fixes: 7d715a6c1ae5 ("PCI: add PCI Express ASPM support")
    Link: https://lore.kernel.org/r/1594972765-10404-1-git-send-email-wangxiongfeng2@huawei.com
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c537bd0732eaa261406861dc3ecdfd1d5bee70f2
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Fri Jul 17 16:22:42 2020 +0800

    ASoC: meson: fixes the missed kfree() for axg_card_add_tdm_loopback
    
    [ Upstream commit bd054ece7d9cdd88e900df6625e951a01d9f655e ]
    
    axg_card_add_tdm_loopback() misses to call kfree() in an error path. We
    can use devm_kasprintf() to fix the issue, also improve maintainability.
    So use it instead.
    
    Fixes: c84836d7f650 ("ASoC: meson: axg-card: use modern dai_link style")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Reviewed-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200717082242.130627-1-jingxiangfeng@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2698fab03884012ecda119b9e5638969c33d27ce
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jul 16 16:47:20 2020 +0100

    staging: rtl8192u: fix a dubious looking mask before a shift
    
    [ Upstream commit c4283950a9a4d3bf4a3f362e406c80ab14f10714 ]
    
    Currently the masking of ret with 0xff and followed by a right shift
    of 8 bits always leaves a zero result.  It appears the mask of 0xff
    is incorrect and should be 0xff00, but I don't have the hardware to
    test this. Fix this to mask the upper 8 bits before shifting.
    
    [ Not tested ]
    
    Addresses-Coverity: ("Operands don't affect result")
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20200716154720.1710252-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 209207562934ee9dbf6e9bb23a1641377b056bdb
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:00 2020 -0500

    ima: Have the LSM free its audit rule
    
    [ Upstream commit 9ff8a616dfab96a4fa0ddd36190907dc68886d9b ]
    
    Ask the LSM to free its audit rule rather than directly calling kfree().
    Both AppArmor and SELinux do additional work in their audit_rule_free()
    hooks. Fix memory leaks by allowing the LSMs to perform necessary work.
    
    Fixes: b16942455193 ("ima: use the lsm policy update notifier")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Cc: Janne Karhunen <janne.karhunen@gmail.com>
    Cc: Casey Schaufler <casey@schaufler-ca.com>
    Reviewed-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ecfbee3b9c38f263e64c06aac5ca861ac57362a
Author: Mikhail Malygin <m.malygin@yadro.com>
Date:   Thu Jul 16 22:03:41 2020 +0300

    RDMA/rxe: Prevent access to wr->next ptr afrer wr is posted to send queue
    
    [ Upstream commit 5f0b2a6093a4d9aab093964c65083fe801ef1e58 ]
    
    rxe_post_send_kernel() iterates over linked list of wr's, until the
    wr->next ptr is NULL.  However if we've got an interrupt after last wr is
    posted, control may be returned to the code after send completion callback
    is executed and wr memory is freed.
    
    As a result, wr->next pointer may contain incorrect value leading to
    panic. Store the wr->next on the stack before posting it.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20200716190340.23453-1-m.malygin@yadro.com
    Signed-off-by: Mikhail Malygin <m.malygin@yadro.com>
    Signed-off-by: Sergey Kojushev <s.kojushev@yadro.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cf66d70b5efcd360d0214f93009758b55c2025d
Author: Yuval Basson <ybason@marvell.com>
Date:   Wed Jul 8 22:55:26 2020 +0300

    RDMA/qedr: SRQ's bug fixes
    
    [ Upstream commit acca72e2b031b9fbb4184511072bd246a0abcebc ]
    
    QP's with the same SRQ, working on different CQs and running in parallel
    on different CPUs could lead to a race when maintaining the SRQ consumer
    count, and leads to FW running out of SRQs. Update the consumer
    atomically.  Make sure the wqe_prod is updated after the sge_prod due to
    FW requirements.
    
    Fixes: 3491c9e799fb ("qedr: Add support for kernel mode SRQ's")
    Link: https://lore.kernel.org/r/20200708195526.31040-1-ybason@marvell.com
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Yuval Basson <ybason@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 978bef91cad7f0d074044e9864bbb41320d26359
Author: Milton Miller <miltonm@us.ibm.com>
Date:   Thu Jul 16 09:37:04 2020 +1000

    powerpc/vdso: Fix vdso cpu truncation
    
    [ Upstream commit a9f675f950a07d5c1dbcbb97aabac56f5ed085e3 ]
    
    The code in vdso_cpu_init that exposes the cpu and numa node to
    userspace via SPRG_VDSO incorrctly masks the cpu to 12 bits. This means
    that any kernel running on a box with more than 4096 threads (NR_CPUS
    advertises a limit of of 8192 cpus) would expose userspace to two cpu
    contexts running at the same time with the same cpu number.
    
    Note: I'm not aware of any distro shipping a kernel with support for more
    than 4096 threads today, nor of any system image that currently exceeds
    4096 threads. Found via code browsing.
    
    Fixes: 18ad51dd342a7eb09dbcd059d0b451b616d4dafc ("powerpc: Add VDSO version of getcpu")
    Signed-off-by: Milton Miller <miltonm@us.ibm.com>
    Signed-off-by: Anton Blanchard <anton@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200715233704.1352257-1-anton@ozlabs.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7beea356fabba055f1731a8b22db14e61727b500
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Jun 12 00:12:22 2020 -0500

    powerpc/rtas: don't online CPUs for partition suspend
    
    [ Upstream commit ec2fc2a9e9bbad9023aab65bc472ce7a3ca8608f ]
    
    Partition suspension, used for hibernation and migration, requires
    that the OS place all but one of the LPAR's processor threads into one
    of two states prior to calling the ibm,suspend-me RTAS function:
    
      * the architected offline state (via RTAS stop-self); or
      * the H_JOIN hcall, which does not return until the partition
        resumes execution
    
    Using H_CEDE as the offline mode, introduced by
    commit 3aa565f53c39 ("powerpc/pseries: Add hooks to put the CPU into
    an appropriate offline state"), means that any threads which are
    offline from Linux's point of view must be moved to one of those two
    states before a partition suspension can proceed.
    
    This was eventually addressed in commit 120496ac2d2d ("powerpc: Bring
    all threads online prior to migration/hibernation"), which added code
    to temporarily bring up any offline processor threads so they can call
    H_JOIN. Conceptually this is fine, but the implementation has had
    multiple races with cpu hotplug operations initiated from user
    space[1][2][3], the error handling is fragile, and it generates
    user-visible cpu hotplug events which is a lot of noise for a platform
    feature that's supposed to minimize disruption to workloads.
    
    With commit 3aa565f53c39 ("powerpc/pseries: Add hooks to put the CPU
    into an appropriate offline state") reverted, this code becomes
    unnecessary, so remove it. Since any offline CPUs now are truly
    offline from the platform's point of view, it is no longer necessary
    to bring up CPUs only to have them call H_JOIN and then go offline
    again upon resuming. Only active threads are required to call H_JOIN;
    stopped threads can be left alone.
    
    [1] commit a6717c01ddc2 ("powerpc/rtas: use device model APIs and
        serialization during LPM")
    [2] commit 9fb603050ffd ("powerpc/rtas: retry when cpu offline races
        with suspend/migration")
    [3] commit dfd718a2ed1f ("powerpc/rtas: Fix a potential race between
        CPU-Offline & Migration")
    
    Fixes: 120496ac2d2d ("powerpc: Bring all threads online prior to migration/hibernation")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200612051238.1007764-3-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 936e927ece9bddd9153764c3ae9fb12709593536
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Wed Jul 8 14:11:40 2020 +0300

    kernfs: do not call fsnotify() with name without a parent
    
    [ Upstream commit 9991bb84b27a2594187898f261866cfc50255454 ]
    
    When creating an FS_MODIFY event on inode itself (not on parent)
    the file_name argument should be NULL.
    
    The change to send a non NULL name to inode itself was done on purpuse
    as part of another commit, as Tejun writes: "...While at it, supply the
    target file name to fsnotify() from kernfs_node->name.".
    
    But this is wrong practice and inconsistent with inotify behavior when
    watching a single file.  When a child is being watched (as opposed to the
    parent directory) the inotify event should contain the watch descriptor,
    but not the file name.
    
    Fixes: df6a58c5c5aa ("kernfs: don't depend on d_find_any_alias()...")
    Link: https://lore.kernel.org/r/20200708111156.24659-5-amir73il@gmail.com
    Acked-by: Tejun Heo <tj@kernel.org>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7fc8591cae4475cbee3fda24e6e92277122bf9f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 8 14:58:57 2020 +0300

    mwifiex: Prevent memory corruption handling keys
    
    [ Upstream commit e18696786548244914f36ec3c46ac99c53df99c3 ]
    
    The length of the key comes from the network and it's a 16 bit number.  It
    needs to be capped to prevent a buffer overflow.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200708115857.GA13729@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c0d30eaf31c354878603e0caaf05f085134567d
Author: John Garry <john.garry@huawei.com>
Date:   Thu Jul 9 20:23:19 2020 +0800

    scsi: scsi_debug: Add check for sdebug_max_queue during module init
    
    [ Upstream commit c87bf24cfb60bce27b4d2c7e56ebfd86fb9d16bb ]
    
    sdebug_max_queue should not exceed SDEBUG_CANQUEUE, otherwise crashes like
    this can be triggered by passing an out-of-range value:
    
    Hardware name: Huawei D06 /D06, BIOS Hisilicon D06 UEFI RC0 - V1.16.01 03/15/2019
     pstate: 20400009 (nzCv daif +PAN -UAO BTYPE=--)
     pc : schedule_resp+0x2a4/0xa70 [scsi_debug]
     lr : schedule_resp+0x52c/0xa70 [scsi_debug]
     sp : ffff800022ab36f0
     x29: ffff800022ab36f0 x28: ffff0023a935a610
     x27: ffff800008e0a648 x26: 0000000000000003
     x25: ffff0023e84f3200 x24: 00000000003d0900
     x23: 0000000000000000 x22: 0000000000000000
     x21: ffff0023be60a320 x20: ffff0023be60b538
     x19: ffff800008e13000 x18: 0000000000000000
     x17: 0000000000000000 x16: 0000000000000000
     x15: 0000000000000000 x14: 0000000000000000
     x13: 0000000000000000 x12: 0000000000000000
     x11: 0000000000000000 x10: 0000000000000000
     x9 : 0000000000000001 x8 : 0000000000000000
     x7 : 0000000000000000 x6 : 00000000000000c1
     x5 : 0000020000200000 x4 : dead0000000000ff
     x3 : 0000000000000200 x2 : 0000000000000200
     x1 : ffff800008e13d88 x0 : 0000000000000000
     Call trace:
    schedule_resp+0x2a4/0xa70 [scsi_debug]
    scsi_debug_queuecommand+0x2c4/0x9e0 [scsi_debug]
    scsi_queue_rq+0x698/0x840
    __blk_mq_try_issue_directly+0x108/0x228
    blk_mq_request_issue_directly+0x58/0x98
    blk_mq_try_issue_list_directly+0x5c/0xf0
    blk_mq_sched_insert_requests+0x18c/0x200
    blk_mq_flush_plug_list+0x11c/0x190
    blk_flush_plug_list+0xdc/0x110
    blk_finish_plug+0x38/0x210
    blkdev_direct_IO+0x450/0x4d8
    generic_file_read_iter+0x84/0x180
    blkdev_read_iter+0x3c/0x50
    aio_read+0xc0/0x170
    io_submit_one+0x5c8/0xc98
    __arm64_sys_io_submit+0x1b0/0x258
    el0_svc_common.constprop.3+0x68/0x170
    do_el0_svc+0x24/0x90
    el0_sync_handler+0x13c/0x1a8
    el0_sync+0x158/0x180
     Code: 528847e0 72a001e0 6b00003f 540018cd (3941c340)
    
    In addition, it should not be less than 1.
    
    So add checks for these, and fail the module init for those cases.
    
    [mkp: changed if condition to match error message]
    
    Link: https://lore.kernel.org/r/1594297400-24756-2-git-send-email-john.garry@huawei.com
    Fixes: c483739430f1 ("scsi_debug: add multiple queue support")
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a292c4bc0271dd2e52f12edcb3afa26f85b2421
Author: Tom Rix <trix@redhat.com>
Date:   Sun Jul 12 08:24:53 2020 -0700

    drm/bridge: sil_sii8620: initialize return of sii8620_readb
    
    [ Upstream commit 02cd2d3144653e6e2a0c7ccaa73311e48e2dc686 ]
    
    clang static analysis flags this error
    
    sil-sii8620.c:184:2: warning: Undefined or garbage value
      returned to caller [core.uninitialized.UndefReturn]
            return ret;
            ^~~~~~~~~~
    
    sii8620_readb calls sii8620_read_buf.
    sii8620_read_buf can return without setting its output
    pararmeter 'ret'.
    
    So initialize ret.
    
    Fixes: ce6e153f414a ("drm/bridge: add Silicon Image SiI8620 driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200712152453.27510-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ffa0cf2b662b0e575f77b8fee4c5e164cf19ea9
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Jul 8 15:38:00 2020 +0200

    phy: exynos5-usbdrd: Calibrating makes sense only for USB2.0 PHY
    
    [ Upstream commit dcbabfeb17c3c2fdb6bc92a3031ecd37df1834a8 ]
    
    PHY calibration is needed only for USB2.0 (UTMI) PHY, so skip calling
    calibration code when phy_calibrate() is called for USB3.0 (PIPE3) PHY.
    
    Fixes: d8c80bb3b55b ("phy: exynos5-usbdrd: Calibrate LOS levels for exynos5420/5800")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20200708133800.3336-1-m.szyprowski@samsung.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36f9ed95ec52b1d510adf1308475dd3583e8ecdc
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Sun Jul 12 01:53:17 2020 +0300

    drm: panel: simple: Fix bpc for LG LB070WV8 panel
    
    [ Upstream commit a6ae2fe5c9f9fd355a48fb7d21c863e5b20d6c9c ]
    
    The LG LB070WV8 panel incorrectly reports a 16 bits per component value,
    while the panel uses 8 bits per component. Fix it.
    
    Fixes: dd0150026901 ("drm/panel: simple: Add support for LG LB070WV8 800x480 7" panel")
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200711225317.28476-1-laurent.pinchart+renesas@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d25c81232007aeb689f9690e0991305ff7474c49
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Jul 2 13:45:00 2020 +0800

    leds: core: Flush scheduled work for system suspend
    
    [ Upstream commit 302a085c20194bfa7df52e0fe684ee0c41da02e6 ]
    
    Sometimes LED won't be turned off by LED_CORE_SUSPENDRESUME flag upon
    system suspend.
    
    led_set_brightness_nopm() uses schedule_work() to set LED brightness.
    However, there's no guarantee that the scheduled work gets executed
    because no one flushes the work.
    
    So flush the scheduled work to make sure LED gets turned off.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Fixes: 81fe8e5b73e3 ("leds: core: Add led_set_brightness_nosleep{nopm} functions")
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adbb26e2d44e5cd48f550a4fbf57068e4148fa19
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Thu Jun 4 19:46:46 2020 +0200

    kobject: Avoid premature parent object freeing in kobject_cleanup()
    
    [ Upstream commit 079ad2fb4bf9eba8a0aaab014b49705cd7f07c66 ]
    
    If kobject_del() is invoked by kobject_cleanup() to delete the
    target kobject, it may cause its parent kobject to be freed
    before invoking the target kobject's ->release() method, which
    effectively means freeing the parent before dealing with the
    child entirely.
    
    That is confusing at best and it may also lead to functional
    issues if the callers of kobject_cleanup() are not careful enough
    about the order in which these calls are made, so avoid the
    problem by making kobject_cleanup() drop the last reference to
    the target kobject's parent at the end, after invoking the target
    kobject's ->release() method.
    
    [ rjw: Rewrite the subject and changelog, make kobject_cleanup()
      drop the parent reference only when __kobject_del() has been
      called. ]
    
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Fixes: 7589238a8cf3 ("Revert "software node: Simplify software_node_release() function"")
    Suggested-by: Rafael J. Wysocki <rafael@kernel.org>
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lore.kernel.org/r/1908555.IiAGLGrh1Z@kreacher
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59f69f1edb5678d894fc735ccf234b04ae5b071a
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 29 23:16:49 2020 +0100

    drm/stm: repair runtime power management
    
    [ Upstream commit ebd267b2e3c25d5f93a08528b47c036569eb8744 ]
    
    Add missing pm_runtime_get_sync() into ltdc_crtc_atomic_enable() to
    match pm_runtime_put_sync() in ltdc_crtc_atomic_disable(), otherwise
    the LTDC might suspend via runtime PM, disable clock, and then fail
    to resume later on.
    
    The test which triggers it is roughly -- run qt5 application which
    uses eglfs platform and etnaviv, stop the application, sleep for 15
    minutes, run the application again. This leads to a timeout waiting
    for vsync, because the LTDC has suspended, but did not resume.
    
    Fixes: 35ab6cfbf211 ("drm/stm: support runtime power management")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Yannick Fertré <yannick.fertre@st.com>
    Cc: Philippe Cornu <philippe.cornu@st.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Vincent Abriou <vincent.abriou@st.com>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    To: dri-devel@lists.freedesktop.org
    Cc: linux-stm32@st-md-mailman.stormreply.com
    Cc: linux-arm-kernel@lists.infradead.org
    Acked-by: Philippe Cornu <philippe.cornu@st.com>
    Tested-by: Yannick Fertre <yannick.fertre@st.com>
    Signed-off-by: Benjamin Gaignard <benjamin.gaignard@st.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200229221649.90813-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc5f55c46a71244535f976b2f40ccce8d3626c32
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Thu Jun 25 18:14:55 2020 -0500

    PCI: Fix pci_cfg_wait queue locking problem
    
    [ Upstream commit 2a7e32d0547f41c5ce244f84cf5d6ca7fccee7eb ]
    
    The pci_cfg_wait queue is used to prevent user-space config accesses to
    devices while they are recovering from reset.
    
    Previously we used these operations on pci_cfg_wait:
    
      __add_wait_queue(&pci_cfg_wait, ...)
      __remove_wait_queue(&pci_cfg_wait, ...)
      wake_up_all(&pci_cfg_wait)
    
    The wake_up acquires the wait queue lock, but the add and remove do not.
    
    Originally these were all protected by the pci_lock, but cdcb33f98244
    ("PCI: Avoid possible deadlock on pci_lock and p->pi_lock"), moved
    wake_up_all() outside pci_lock, so it could race with add/remove
    operations, which caused occasional kernel panics, e.g., during vfio-pci
    hotplug/unplug testing:
    
      Unable to handle kernel read from unreadable memory at virtual address ffff802dac469000
    
    Resolve this by using wait_event() instead of __add_wait_queue() and
    __remove_wait_queue().  The wait queue lock is held by both wait_event()
    and wake_up_all(), so it provides mutual exclusion.
    
    Fixes: cdcb33f98244 ("PCI: Avoid possible deadlock on pci_lock and p->pi_lock")
    Link: https://lore.kernel.org/linux-pci/79827f2f-9b43-4411-1376-b9063b67aee3@huawei.com/T/#u
    Based-on: https://lore.kernel.org/linux-pci/20191210031527.40136-1-zhengxiang9@huawei.com/
    Based-on-patch-by: Xiang Zheng <zhengxiang9@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Tested-by: Xiang Zheng <zhengxiang9@huawei.com>
    Cc: Heyi Guo <guoheyi@huawei.com>
    Cc: Biaoxiang Ye <yebiaoxiang@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fbefed6c3a05148a9713f1636f5adaf3dcdafda
Author: Zhu Yanjun <yanjunz@mellanox.com>
Date:   Tue Jun 30 15:36:05 2020 +0300

    RDMA/rxe: Skip dgid check in loopback mode
    
    [ Upstream commit 5c99274be8864519328aa74bc550ba410095bc1c ]
    
    In the loopback tests, the following call trace occurs.
    
     Call Trace:
      __rxe_do_task+0x1a/0x30 [rdma_rxe]
      rxe_qp_destroy+0x61/0xa0 [rdma_rxe]
      rxe_destroy_qp+0x20/0x60 [rdma_rxe]
      ib_destroy_qp_user+0xcc/0x220 [ib_core]
      uverbs_free_qp+0x3c/0xc0 [ib_uverbs]
      destroy_hw_idr_uobject+0x24/0x70 [ib_uverbs]
      uverbs_destroy_uobject+0x43/0x1b0 [ib_uverbs]
      uobj_destroy+0x41/0x70 [ib_uverbs]
      __uobj_get_destroy+0x39/0x70 [ib_uverbs]
      ib_uverbs_destroy_qp+0x88/0xc0 [ib_uverbs]
      ib_uverbs_handler_UVERBS_METHOD_INVOKE_WRITE+0xb9/0xf0 [ib_uverbs]
      ib_uverbs_cmd_verbs+0xb16/0xc30 [ib_uverbs]
    
    The root cause is that the actual RDMA connection is not created in the
    loopback tests and the rxe_match_dgid will fail randomly.
    
    To fix this call trace which appear in the loopback tests, skip check of
    the dgid.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20200630123605.446959-1-leon@kernel.org
    Signed-off-by: Zhu Yanjun <yanjunz@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6093eae667d63c994b70f1e9e560a564ef3686f5
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Jun 29 14:47:18 2020 -0700

    xfs: fix reflink quota reservation accounting error
    
    [ Upstream commit 83895227aba1ade33e81f586aa7b6b1e143096a5 ]
    
    Quota reservations are supposed to account for the blocks that might be
    allocated due to a bmap btree split.  Reflink doesn't do this, so fix
    this to make the quota accounting more accurate before we start
    rearranging things.
    
    Fixes: 862bb360ef56 ("xfs: reflink extents from one file to another")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c5170b451b726ac5d73f3c4d82b52c91dbbe014
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Jun 29 14:47:17 2020 -0700

    xfs: don't eat an EIO/ENOSPC writeback error when scrubbing data fork
    
    [ Upstream commit eb0efe5063bb10bcb653e4f8e92a74719c03a347 ]
    
    The data fork scrubber calls filemap_write_and_wait to flush dirty pages
    and delalloc reservations out to disk prior to checking the data fork's
    extent mappings.  Unfortunately, this means that scrub can consume the
    EIO/ENOSPC errors that would otherwise have stayed around in the address
    space until (we hope) the writer application calls fsync to persist data
    and collect errors.  The end result is that programs that wrote to a
    file might never see the error code and proceed as if nothing were
    wrong.
    
    xfs_scrub is not in a position to notify file writers about the
    writeback failure, and it's only here to check metadata, not file
    contents.  Therefore, if writeback fails, we should stuff the error code
    back into the address space so that an fsync by the writer application
    can pick that up.
    
    Fixes: 99d9d8d05da2 ("xfs: scrub inode block mappings")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit deaf69f5b028b926a0a0b85913de974cdebbe824
Author: Dariusz Marcinkiewicz <darekm@google.com>
Date:   Mon Jun 22 13:46:36 2020 +0200

    media: cros-ec-cec: do not bail on device_init_wakeup failure
    
    [ Upstream commit 6f01dfb760c027d5dd6199d91ee9599f2676b5c6 ]
    
    Do not fail probing when device_init_wakeup fails.
    
    device_init_wakeup fails when the device is already enabled as wakeup
    device. Hence, the driver fails to probe the device if:
    - The device has already been enabled for wakeup (by e.g. sysfs)
    - The driver has been unloaded and is being loaded again.
    
    This goal of the patch is to fix the above cases.
    
    Overwhelming majority of the drivers do not check device_init_wakeup
    return code.
    
    Fixes: cd70de2d356ee ("media: platform: Add ChromeOS EC CEC driver")
    Signed-off-by: Dariusz Marcinkiewicz <darekm@google.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 951a2126157729fed13f942b6a7f106d96ab8b5c
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu May 28 08:41:47 2020 +0200

    media: exynos4-is: Add missed check for pinctrl_lookup_state()
    
    [ Upstream commit 18ffec750578f7447c288647d7282c7d12b1d969 ]
    
    fimc_md_get_pinctrl() misses a check for pinctrl_lookup_state().
    Add the missed check to fix it.
    
    Fixes: 4163851f7b99 ("[media] s5p-fimc: Use pinctrl API for camera ports configuration]")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 210ab36cdaa9886515896b0c991ab04c2c8c742f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri May 8 16:40:22 2020 +0200

    media: firewire: Using uninitialized values in node_probe()
    
    [ Upstream commit 2505a210fc126599013aec2be741df20aaacc490 ]
    
    If fw_csr_string() returns -ENOENT, then "name" is uninitialized.  So
    then the "strlen(model_names[i]) <= name_len" is true because strlen()
    is unsigned and -ENOENT is type promoted to a very high positive value.
    Then the "strncmp(name, model_names[i], name_len)" uses uninitialized
    data because "name" is uninitialized.
    
    Fixes: 92374e886c75 ("[media] firedtv: drop obsolete backend abstraction")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c122fc90d02c74cc2cde6f39c9fce0dc2979e2f
Author: Julian Anastasov <ja@ssi.bg>
Date:   Wed Jul 1 18:17:19 2020 +0300

    ipvs: allow connection reuse for unconfirmed conntrack
    
    [ Upstream commit f0a5e4d7a594e0fe237d3dfafb069bb82f80f42f ]
    
    YangYuxi is reporting that connection reuse
    is causing one-second delay when SYN hits
    existing connection in TIME_WAIT state.
    Such delay was added to give time to expire
    both the IPVS connection and the corresponding
    conntrack. This was considered a rare case
    at that time but it is causing problem for
    some environments such as Kubernetes.
    
    As nf_conntrack_tcp_packet() can decide to
    release the conntrack in TIME_WAIT state and
    to replace it with a fresh NEW conntrack, we
    can use this to allow rescheduling just by
    tuning our check: if the conntrack is
    confirmed we can not schedule it to different
    real server and the one-second delay still
    applies but if new conntrack was created,
    we are free to select new real server without
    any delays.
    
    YangYuxi lists some of the problem reports:
    
    - One second connection delay in masquerading mode:
    https://marc.info/?t=151683118100004&r=1&w=2
    
    - IPVS low throughput #70747
    https://github.com/kubernetes/kubernetes/issues/70747
    
    - Apache Bench can fill up ipvs service proxy in seconds #544
    https://github.com/cloudnativelabs/kube-router/issues/544
    
    - Additional 1s latency in `host -> service IP -> pod`
    https://github.com/kubernetes/kubernetes/issues/90854
    
    Fixes: f719e3754ee2 ("ipvs: drop first packet to redirect conntrack")
    Co-developed-by: YangYuxi <yx.atom1@gmail.com>
    Signed-off-by: YangYuxi <yx.atom1@gmail.com>
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45a769a10126e12a89f6240c4c89647fc690fb80
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Jun 26 06:05:53 2020 +0200

    scsi: eesox: Fix different dev_id between request_irq() and free_irq()
    
    [ Upstream commit 86f2da1112ccf744ad9068b1d5d9843faf8ddee6 ]
    
    The dev_id used in request_irq() and free_irq() should match. Use 'info' in
    both cases.
    
    Link: https://lore.kernel.org/r/20200626040553.944352-1-christophe.jaillet@wanadoo.fr
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76189426da566f198e8152c11e9efa32d0d166ee
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Jun 26 05:59:48 2020 +0200

    scsi: powertec: Fix different dev_id between request_irq() and free_irq()
    
    [ Upstream commit d179f7c763241c1dc5077fca88ddc3c47d21b763 ]
    
    The dev_id used in request_irq() and free_irq() should match. Use 'info' in
    both cases.
    
    Link: https://lore.kernel.org/r/20200626035948.944148-1-christophe.jaillet@wanadoo.fr
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 691081c0558a2eb9165765a329ee75d98cf4c56e
Author: Jason Gunthorpe <jgg@nvidia.com>
Date:   Fri Jun 26 14:49:10 2020 -0300

    RDMA/core: Fix bogus WARN_ON during ib_unregister_device_queued()
    
    [ Upstream commit 0cb42c0265837fafa2b4f302c8a7fed2631d7869 ]
    
    ib_unregister_device_queued() can only be used by drivers using the new
    dealloc_device callback flow, and it has a safety WARN_ON to ensure
    drivers are using it properly.
    
    However, if unregister and register are raced there is a special
    destruction path that maintains the uniform error handling semantic of
    'caller does ib_dealloc_device() on failure'. This requires disabling the
    dealloc_device callback which triggers the WARN_ON.
    
    Instead of using NULL to disable the callback use a special function
    pointer so the WARN_ON does not trigger.
    
    Fixes: d0899892edd0 ("RDMA/device: Provide APIs from the core code to help unregistration")
    Link: https://lore.kernel.org/r/0-v1-a36d512e0a99+762-syz_dealloc_driver_jgg@nvidia.com
    Reported-by: syzbot+4088ed905e4ae2b0e13b@syzkaller.appspotmail.com
    Suggested-by: Hillf Danton <hdanton@sina.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67642ac2ac0b64f19089033115d1a8cbe326fd26
Author: Tony Nguyen <anthony.l.nguyen@intel.com>
Date:   Wed Jun 24 09:04:22 2020 -0700

    iavf: Fix updating statistics
    
    [ Upstream commit 9358076642f14cec8c414850d5a909cafca3a9d6 ]
    
    Commit bac8486116b0 ("iavf: Refactor the watchdog state machine") inverted
    the logic for when to update statistics. Statistics should be updated when
    no other commands are pending, instead they were only requested when a
    command was processed. iavf_request_stats() would see a pending request
    and not request statistics to be updated. This caused statistics to never
    be updated; fix the logic.
    
    Fixes: bac8486116b0 ("iavf: Refactor the watchdog state machine")
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d5ce7e06ff8febef39e9d9f48f2436cc0e1915b
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jun 18 14:19:53 2020 +0000

    iavf: fix error return code in iavf_init_get_resources()
    
    [ Upstream commit 753f3884f253de6b6d3a516e6651bda0baf4aede ]
    
    Fix to return negative error code -ENOMEM from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: b66c7bc1cd4d ("iavf: Refactor init state machine")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f27a965b042f8c25acef470dc19723487d2263b5
Author: Phil Elwell <phil@raspberrypi.com>
Date:   Mon Jun 29 17:09:06 2020 +0200

    staging: vchiq_arm: Add a matching unregister call
    
    [ Upstream commit 5d9272e28a9a6117fb63f5f930991304765caa32 ]
    
    All the registered children of vchiq have a corresponding call to
    platform_device_unregister except bcm2835_audio. Fix that.
    
    Fixes: 25c7597af20d ("staging: vchiq_arm: Register a platform device for audio")
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.com>
    Signed-off-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Link: https://lore.kernel.org/r/20200629150945.10720-9-nsaenzjulienne@suse.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87a30aa61f60818f4e169480da6db769ae6023dd
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jun 24 13:07:10 2020 +0100

    drm/radeon: fix array out-of-bounds read and write issues
    
    [ Upstream commit 7ee78aff9de13d5dccba133f4a0de5367194b243 ]
    
    There is an off-by-one bounds check on the index into arrays
    table->mc_reg_address and table->mc_reg_table_entry[k].mc_data[j] that
    can lead to reads and writes outside of arrays. Fix the bound checking
    off-by-one error.
    
    Addresses-Coverity: ("Out-of-bounds read/write")
    Fixes: cc8dbbb4f62a ("drm/radeon: add dpm support for CI dGPUs (v2)")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db377d8caf083cbd4cf33b47c473ff5b8815d270
Author: Wang Hai <wanghai38@huawei.com>
Date:   Tue Jun 2 20:07:33 2020 +0800

    cxl: Fix kobject memleak
    
    [ Upstream commit 85c5cbeba8f4fb28e6b9bfb3e467718385f78f76 ]
    
    Currently the error return path from kobject_init_and_add() is not
    followed by a call to kobject_put() - which means we are leaking
    the kobject.
    
    Fix it by adding a call to kobject_put() in the error path of
    kobject_init_and_add().
    
    Fixes: b087e6190ddc ("cxl: Export optional AFU configuration record in sysfs")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Link: https://lore.kernel.org/r/20200602120733.5943-1-wanghai38@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 835c6f7c0a941d1d4fd0cf744918e88326d8fcc2
Author: Emil Velikov <emil.velikov@collabora.com>
Date:   Tue May 5 17:03:29 2020 +0100

    drm/mipi: use dcs write for mipi_dsi_dcs_set_tear_scanline
    
    [ Upstream commit 7a05c3b6d24b8460b3cec436cf1d33fac43c8450 ]
    
    The helper uses the MIPI_DCS_SET_TEAR_SCANLINE, although it's currently
    using the generic write. This does not look right.
    
    Perhaps some platforms don't distinguish between the two writers?
    
    Cc: Robert Chiras <robert.chiras@nxp.com>
    Cc: Vinay Simha BN <simhavcs@gmail.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Fixes: e83950816367 ("drm/dsi: Implement set tear scanline")
    Signed-off-by: Emil Velikov <emil.velikov@collabora.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200505160329.2976059-3-emil.l.velikov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f2b14006d44b126b6ec54f40366c89983099f32
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Jun 25 22:47:30 2020 +0200

    scsi: cumana_2: Fix different dev_id between request_irq() and free_irq()
    
    [ Upstream commit 040ab9c4fd0070cd5fa71ba3a7b95b8470db9b4d ]
    
    The dev_id used in request_irq() and free_irq() should match.  Use 'info'
    in both cases.
    
    Link: https://lore.kernel.org/r/20200625204730.943520-1-christophe.jaillet@wanadoo.fr
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Acked-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d92cc98b7423ae61d253ea4dcb4f1f6aaee2dd7d
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jun 25 14:12:55 2020 -0500

    ASoC: Intel: bxt_rt298: add missing .owner field
    
    [ Upstream commit 88cee34b776f80d2da04afb990c2a28c36799c43 ]
    
    This field is required for ASoC cards. Not setting it will result in a
    module->name pointer being NULL and generate problems such as
    
    cat /proc/asound/modules
     0 (efault)
    
    Fixes: 76016322ec56 ('ASoC: Intel: Add Broxton-P machine driver')
    Reported-by: Jaroslav Kysela <perex@perex.cz>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-5-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1773c8b04a4e1f702b02fd2e6957dc5a27f6253
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jun 25 14:12:52 2020 -0500

    ASoC: SOF: nocodec: add missing .owner field
    
    [ Upstream commit 8753889e2720c1ef7ebf03370e384f5bf5ff4fab ]
    
    This field is required for ASoC cards. Not setting it will result in a
    module->name pointer being NULL and generate problems such as
    
    cat /proc/asound/modules
     0 (efault)
    
    Fixes: 8017b8fd37bf ('ASoC: SOF: Add Nocodec machine driver support')
    Reported-by: Jaroslav Kysela <perex@perex.cz>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d85cebc8656f74b13e7119809227edc33af35dc2
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Jun 3 18:41:22 2020 +0200

    media: omap3isp: Add missed v4l2_ctrl_handler_free() for preview_init_entities()
    
    [ Upstream commit dc7690a73017e1236202022e26a6aa133f239c8c ]
    
    preview_init_entities() does not call v4l2_ctrl_handler_free() when
    it fails.
    Add the missed function to fix it.
    
    Fixes: de1135d44f4f ("[media] omap3isp: CCDC, preview engine and resizer")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fe0119f5c638ddfa9522e5e814b826bddca0e1b
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Jun 3 18:40:48 2020 +0200

    media: marvell-ccic: Add missed v4l2_async_notifier_cleanup()
    
    [ Upstream commit 4603a5b4a87ccd6fb90cbfa10195291cfcf6ba34 ]
    
    mccic_register() forgets to cleanup the notifier in its error handler.
    mccic_shutdown() also misses calling v4l2_async_notifier_cleanup().
    Add the missed calls to fix them.
    
    Fixes: 3eefe36cc00c ("media: marvell-ccic: use async notifier to get the sensor")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79962a7a1dd1f06af60d30563bf48b20ab1e75ec
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu May 7 23:33:14 2020 +0200

    media: cxusb-analog: fix V4L2 dependency
    
    [ Upstream commit 1a55caf010c46d4f2073f9e92e97ef65358c16bf ]
    
    CONFIG_DVB_USB_CXUSB_ANALOG is a 'bool' symbol with a dependency on the
    tristate CONFIG_VIDEO_V4L2, which means it can be enabled as =y even
    when its dependency is =m. This leads to a link failure:
    
    drivers/media/usb/dvb-usb/cxusb-analog.o: In function `cxusb_medion_analog_init':
    cxusb-analog.c:(.text+0x92): undefined reference to `v4l2_subdev_call_wrappers'
    drivers/media/usb/dvb-usb/cxusb-analog.o: In function `cxusb_medion_register_analog':
    cxusb-analog.c:(.text+0x466): undefined reference to `v4l2_device_register'
    cxusb-analog.c:(.text+0x4c3): undefined reference to `v4l2_i2c_new_subdev'
    cxusb-analog.c:(.text+0x4fb): undefined reference to `v4l2_subdev_call_wrappers'
    ...
    
    Change the dependency only disallow the analog portion of the driver
    in that configuration.
    
    Fixes: e478d4054054 ("media: cxusb: add analog mode support for Medion MD95700")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a728697b74b78c1ec696afdb211a6d50247e3f74
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Jun 19 19:52:02 2020 +0000

    Bluetooth: btmtksdio: fix up firmware download sequence
    
    [ Upstream commit 737cd06072a72e8984e41af8e5919338d0c5bf2b ]
    
    Data RAM on the device have to be powered on before starting to download
    the firmware.
    
    Fixes: 9aebfd4a2200 ("Bluetooth: mediatek: add support for MediaTek MT7663S and MT7668S SDIO devices")
    Co-developed-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecab4ef93ce6fa9f0fb5a50c72d6e0f9aa0dad4d
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Jun 19 19:52:01 2020 +0000

    Bluetooth: btusb: fix up firmware download sequence
    
    [ Upstream commit f645125711c80f9651e4a57403d799070c6ad13b ]
    
    Data RAM on the device have to be powered on before starting to download
    the firmware.
    
    Fixes: a1c49c434e15 ("Bluetooth: btusb: Add protocol support for MediaTek MT7668U USB devices")
    Co-developed-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6db3579dd3a464197e7d7ef00497ab9913e368f8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue May 5 16:19:17 2020 +0200

    leds: lm355x: avoid enum conversion warning
    
    [ Upstream commit 985b1f596f9ed56f42b8c2280005f943e1434c06 ]
    
    clang points out that doing arithmetic between diffent enums is usually
    a mistake:
    
    drivers/leds/leds-lm355x.c:167:28: warning: bitwise operation between different enumeration types ('enum lm355x_tx2' and 'enum lm355x_ntc') [-Wenum-enum-conversion]
                    reg_val = pdata->pin_tx2 | pdata->ntc_pin;
                              ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
    drivers/leds/leds-lm355x.c:178:28: warning: bitwise operation between different enumeration types ('enum lm355x_tx2' and 'enum lm355x_ntc') [-Wenum-enum-conversion]
                    reg_val = pdata->pin_tx2 | pdata->ntc_pin | pdata->pass_mode;
                              ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
    
    In this driver, it is intentional, so add a cast to hide the false-positive
    warning. It appears to be the only instance of this warning at the moment.
    
    Fixes: b98d13c72592 ("leds: Add new LED driver for lm355x chips")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc51ca36105966901cf927e9a49aa44109fa2df5
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Tue Jun 9 13:08:46 2020 +0200

    clk: bcm63xx-gate: fix last clock availability
    
    [ Upstream commit cf8030d7035bd3e89c9e66f7193a7fc8057a9b9a ]
    
    In order to make the last clock available, maxbit has to be set to the
    highest bit value plus 1.
    
    Fixes: 1c099779c1e2 ("clk: add BCM63XX gated clock controller driver")
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Link: https://lore.kernel.org/r/20200609110846.4029620-1-noltari@gmail.com
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bfd16c687cfd40e6fad9a2176a2b26a7ce2f0d8
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jun 18 11:04:00 2020 +0100

    drm/arm: fix unintentional integer overflow on left shift
    
    [ Upstream commit 5f368ddea6fec519bdb93b5368f6a844b6ea27a6 ]
    
    Shifting the integer value 1 is evaluated using 32-bit arithmetic
    and then used in an expression that expects a long value leads to
    a potential integer overflow. Fix this by using the BIT macro to
    perform the shift to avoid the overflow.
    
    Addresses-Coverity: ("Unintentional integer overflow")
    Fixes: ad49f8602fe8 ("drm/arm: Add support for Mali Display Processors")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Liviu Dudau <Liviu.Dudau@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200618100400.11464-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 018192e8586017971021adc95970b3cf2c7379ad
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Tue Jun 16 23:21:24 2020 +0200

    drm/etnaviv: Fix error path on failure to enable bus clk
    
    [ Upstream commit f8794feaf65cdc97767604cf864775d20b97f397 ]
    
    Since commit 65f037e8e908 ("drm/etnaviv: add support for slave interface
    clock") the reg clock is enabled before the bus clock and we need to undo
    its enablement on error.
    
    Fixes: 65f037e8e908 ("drm/etnaviv: add support for slave interface clock")
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8080ccd312332ec2bcaca7159d4afe5ee347a46a
Author: Tomasz Duszynski <tomasz.duszynski@octakon.com>
Date:   Mon Jun 1 18:15:52 2020 +0200

    iio: improve IIO_CONCENTRATION channel type description
    
    [ Upstream commit df16c33a4028159d1ba8a7061c9fa950b58d1a61 ]
    
    IIO_CONCENTRATION together with INFO_RAW specifier is used for reporting
    raw concentrations of pollutants. Raw value should be meaningless
    before being properly scaled. Because of that description shouldn't
    mention raw value unit whatsoever.
    
    Fix this by rephrasing existing description so it follows conventions
    used throughout IIO ABI docs.
    
    Fixes: 8ff6b3bc94930 ("iio: chemical: Add IIO_CONCENTRATION channel type")
    Signed-off-by: Tomasz Duszynski <tomasz.duszynski@octakon.com>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4a09e491d38cbc048a6123a200ac9d8f522dc18
Author: Evan Green <evgreen@chromium.org>
Date:   Thu Jun 4 10:59:11 2020 -0700

    ath10k: Acquire tx_lock in tx error paths
    
    [ Upstream commit a738e766e3ed92c4ee5ec967777276b5ce11dd2c ]
    
    ath10k_htt_tx_free_msdu_id() has a lockdep assertion that htt->tx_lock
    is held. Acquire the lock in a couple of error paths when calling that
    function to ensure this condition is met.
    
    Fixes: 6421969f248fd ("ath10k: refactor tx pending management")
    Fixes: e62ee5c381c59 ("ath10k: Add support for htt_data_tx_desc_64 descriptor")
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200604105901.1.I5b8b0c7ee0d3e51a73248975a9da61401b8f3900@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9411fcc9a4894b9a79b312bd51b3df6b4cc4105
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Apr 29 10:45:05 2020 +0200

    video: pxafb: Fix the function used to balance a 'dma_alloc_coherent()' call
    
    [ Upstream commit 499a2c41b954518c372873202d5e7714e22010c4 ]
    
    'dma_alloc_coherent()' must be balanced by a call to 'dma_free_coherent()'
    not 'dma_free_wc()'.
    The correct dma_free_ function is already used in the error handling path
    of the probe function.
    
    Fixes: 77e196752bdd ("[ARM] pxafb: allow video memory size to be configurable")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: Jani Nikula <jani.nikula@intel.com>
    cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Cc: Eric Miao <eric.miao@marvell.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200429084505.108897-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 703a2e85a3a82f1fef63f57cc4a1cc7d8d058913
Author: Dejin Zheng <zhengdejin5@gmail.com>
Date:   Fri Apr 24 00:42:51 2020 +0800

    console: newport_con: fix an issue about leak related system resources
    
    [ Upstream commit fd4b8243877250c05bb24af7fea5567110c9720b ]
    
    A call of the function do_take_over_console() can fail here.
    The corresponding system resources were not released then.
    Thus add a call of iounmap() and release_mem_region()
    together with the check of a failure predicate. and also
    add release_mem_region() on device removal.
    
    Fixes: e86bb8acc0fdc ("[PATCH] VT binding: Make newport_con support binding")
    Suggested-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Dejin Zheng <zhengdejin5@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200423164251.3349-1-zhengdejin5@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e95d33905a4e5f6db211792fe3c68d18c87e027a
Author: Dejin Zheng <zhengdejin5@gmail.com>
Date:   Thu Apr 23 00:07:19 2020 +0800

    video: fbdev: sm712fb: fix an issue about iounmap for a wrong address
    
    [ Upstream commit 98bd4f72988646c35569e1e838c0ab80d06c77f6 ]
    
    the sfb->fb->screen_base is not save the value get by iounmap() when
    the chip id is 0x720. so iounmap() for address sfb->fb->screen_base
    is not right.
    
    Fixes: 1461d6672864854 ("staging: sm7xxfb: merge sm712fb with fbdev")
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Dejin Zheng <zhengdejin5@gmail.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200422160719.27763-1-zhengdejin5@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9e13b0c26cf4ef481c622e861c4236299af96ef
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:29 2020 +0200

    btmrvl: Fix firmware filename for sd8997 chipset
    
    [ Upstream commit 00eb0cb36fad53315047af12e83c643d3a2c2e49 ]
    
    Firmware for sd8997 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8997_combo_v4.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8997.
    
    Fixes: f0ef67485f591 ("Bluetooth: btmrvl: add sd8997 chipset support")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 671f14a14471d2ec7d6344094b345658b0c89b09
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:28 2020 +0200

    btmrvl: Fix firmware filename for sd8977 chipset
    
    [ Upstream commit dbec3af5f13b88a96e31f252957ae1a82484a923 ]
    
    Firmware for sd8977 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8977_combo_v2.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8977.
    
    Fixes: 8c57983bf7a79 ("Bluetooth: btmrvl: add support for sd8977 chipset")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89b09156ed415a988fe58fa0a9c58e78cbfc7f69
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:27 2020 +0200

    mwifiex: Fix firmware filename for sd8997 chipset
    
    [ Upstream commit 2e1fcac52a9ea53e5a13a585d48a29a0fb4a9daf ]
    
    Firmware for sd8997 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8997_combo_v4.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8997.
    
    Fixes: 6d85ef00d9dfe ("mwifiex: add support for 8997 chipset")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be9903c9ebe48dec103946ca8750d00077e878ce
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:26 2020 +0200

    mwifiex: Fix firmware filename for sd8977 chipset
    
    [ Upstream commit 47fd3ee25e13cc5add48ba2ed71f7ee964b9c3a4 ]
    
    Firmware for sd8977 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8977_combo_v2.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8977.
    
    Fixes: 1a0f547831dce ("mwifiex: add support for sd8977 chipset")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3b04e1b5b03e46488666d081adf1046afc7635a
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Fri May 22 09:34:51 2020 +0100

    agp/intel: Fix a memory leak on module initialisation failure
    
    [ Upstream commit b975abbd382fe442713a4c233549abb90e57c22b ]
    
    In intel_gtt_setup_scratch_page(), pointer "page" is not released if
    pci_dma_mapping_error() return an error, leading to a memory leak on
    module initialisation failure.  Simply fix this issue by freeing "page"
    before return.
    
    Fixes: 0e87d2b06cb46 ("intel-gtt: initialize our own scratch page")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200522083451.7448-1-chris@chris-wilson.co.uk
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7669b6beb4fd322f40503ee28ccd5e3a44737f59
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri May 8 16:33:29 2020 -0700

    drm/bridge: ti-sn65dsi86: Clear old error bits before AUX transfers
    
    [ Upstream commit baef4d56195b6d6e0f681f6eac03d8c6db011d34 ]
    
    The AUX channel transfer error bits in the status register are latched
    and need to be cleared.  Clear them before doing our transfer so we
    don't see old bits and get confused.
    
    Without this patch having a single failure would mean that all future
    transfers would look like they failed.
    
    Fixes: b814ec6d4535 ("drm/bridge: ti-sn65dsi86: Implement AUX channel")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200508163314.1.Idfa69d5d3fc9623083c0ff78572fea87dccb199c@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a981f4d6c971b83a7eaf6da47c14398524c4e3b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 20 16:23:34 2020 +0300

    drm/gem: Fix a leak in drm_gem_objects_lookup()
    
    [ Upstream commit ec0bb482de0ad5e4aba2a4537ea53eaeb77d11a6 ]
    
    If the "handles" allocation or the copy_from_user() fails then we leak
    "objs".  It's supposed to be freed in panfrost_job_cleanup().
    
    Fixes: c117aa4d8701 ("drm: Add a drm_gem_objects_lookup helper")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Emil Velikov <emil.l.velikov@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200320132334.GC95012@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 167708cbebd3014de55234fa7f10b676c605186c
Author: Rob Clark <robdclark@chromium.org>
Date:   Wed Jul 1 13:36:00 2020 -0700

    drm/msm: ratelimit crtc event overflow error
    
    [ Upstream commit 5e16372b5940b1fecc3cc887fc02a50ba148d373 ]
    
    This can happen a lot when things go pear shaped.  Lets not flood dmesg
    when this happens.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Abhinav Kumar <abhinavk@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e8d2186551b1d2fe5da94ad5553907dae04671a
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Mon Jul 20 10:31:20 2020 -0700

    ACPICA: Do not increment operation_region reference counts for field units
    
    [ Upstream commit 6a54ebae6d047c988a31f5ac5a64ab5cf83797a2 ]
    
    ACPICA commit e17b28cfcc31918d0db9547b6b274b09c413eb70
    
    Object reference counts are used as a part of ACPICA's garbage
    collection mechanism. This mechanism keeps track of references to
    heap-allocated structures such as the ACPI operand objects.
    
    Recent server firmware has revealed that this reference count can
    overflow on large servers that declare many field units under the
    same operation_region. This occurs because each field unit declaration
    will add a reference count to the source operation_region.
    
    This change solves the reference count overflow for operation_regions
    objects by preventing fieldunits from incrementing their
    operation_region's reference count. Each operation_region's reference
    count will not be changed by named objects declared under the Field
    operator. During namespace deletion, the operation_region namespace
    node will be deleted and each fieldunit will be deleted without
    touching the deleted operation_region object.
    
    Link: https://github.com/acpica/acpica/commit/e17b28cf
    Signed-off-by: Erik Kaneda <erik.kaneda@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca6654d7da5932c42de7ea935c00452c505a5f71
Author: Coly Li <colyli@suse.de>
Date:   Sat Jul 25 20:00:26 2020 +0800

    bcache: fix super block seq numbers comparision in register_cache_set()
    
    [ Upstream commit 117f636ea695270fe492d0c0c9dfadc7a662af47 ]
    
    In register_cache_set(), c is pointer to struct cache_set, and ca is
    pointer to struct cache, if ca->sb.seq > c->sb.seq, it means this
    registering cache has up to date version and other members, the in-
    memory version and other members should be updated to the newer value.
    
    But current implementation makes a cache set only has a single cache
    device, so the above assumption works well except for a special case.
    The execption is when a cache device new created and both ca->sb.seq and
    c->sb.seq are 0, because the super block is never flushed out yet. In
    the location for the following if() check,
    2156         if (ca->sb.seq > c->sb.seq) {
    2157                 c->sb.version           = ca->sb.version;
    2158                 memcpy(c->sb.set_uuid, ca->sb.set_uuid, 16);
    2159                 c->sb.flags             = ca->sb.flags;
    2160                 c->sb.seq               = ca->sb.seq;
    2161                 pr_debug("set version = %llu\n", c->sb.version);
    2162         }
    c->sb.version is not initialized yet and valued 0. When ca->sb.seq is 0,
    the if() check will fail (because both values are 0), and the cache set
    version, set_uuid, flags and seq won't be updated.
    
    The above problem is hiden for current code, because the bucket size is
    compatible among different super block version. And the next time when
    running cache set again, ca->sb.seq will be larger than 0 and cache set
    super block version will be updated properly.
    
    But if the large bucket feature is enabled,  sb->bucket_size is the low
    16bits of the bucket size. For a power of 2 value, when the actual
    bucket size exceeds 16bit width, sb->bucket_size will always be 0. Then
    read_super_common() will fail because the if() check to
    is_power_of_2(sb->bucket_size) is false. This is how the long time
    hidden bug is triggered.
    
    This patch modifies the if() check to the following way,
    2156         if (ca->sb.seq > c->sb.seq || c->sb.seq == 0) {
    Then cache set's version, set_uuid, flags and seq will always be updated
    corectly including for a new created cache device.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db9b14ae4b6a7675e65faf8098555ce5e075051b
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Sun Jul 19 17:10:47 2020 -0600

    dyndbg: fix a BUG_ON in ddebug_describe_flags
    
    [ Upstream commit f678ce8cc3cb2ad29df75d8824c74f36398ba871 ]
    
    ddebug_describe_flags() currently fills a caller provided string buffer,
    after testing its size (also passed) in a BUG_ON.  Fix this by
    replacing them with a known-big-enough string buffer wrapped in a
    struct, and passing that instead.
    
    Also simplify ddebug_describe_flags() flags parameter from a struct to
    a member in that struct, and hoist the member deref up to the caller.
    This makes the function reusable (soon) where flags are unpacked.
    
    Acked-by: <jbaron@akamai.com>
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Link: https://lore.kernel.org/r/20200719231058.1586423-8-jim.cromie@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fb05790b55b9480c772fade457893265e1faa08
Author: Danesh Petigara <danesh.petigara@broadcom.com>
Date:   Wed Jul 22 13:07:45 2020 -0400

    usb: bdc: Halt controller on suspend
    
    [ Upstream commit 5fc453d7de3d0c345812453823a3a56783c5f82c ]
    
    GISB bus error kernel panics have been observed during S2 transition
    tests on the 7271t platform. The errors are a result of the BDC
    interrupt handler trying to access BDC register space after the
    system's suspend callbacks have completed.
    
    Adding a suspend hook to the BDC driver that halts the controller before
    S2 entry thus preventing unwanted access to the BDC register space during
    this transition.
    
    Signed-off-by: Danesh Petigara <danesh.petigara@broadcom.com>
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 296184490e2c925eb4af50b62ce05666a5fded73
Author: Sasi Kumar <sasi.kumar@broadcom.com>
Date:   Wed Jul 22 13:07:42 2020 -0400

    bdc: Fix bug causing crash after multiple disconnects
    
    [ Upstream commit a95bdfd22076497288868c028619bc5995f5cc7f ]
    
    Multiple connects/disconnects can cause a crash on the second
    disconnect. The driver had a problem where it would try to send
    endpoint commands after it was disconnected which is not allowed
    by the hardware. The fix is to only allow the endpoint commands
    when the endpoint is connected. This will also fix issues that
    showed up when using configfs to create gadgets.
    
    Signed-off-by: Sasi Kumar <sasi.kumar@broadcom.com>
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77d7ce9ccb3376be9f160c6820377b5a0d08ae62
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Tue Jul 21 23:15:58 2020 +0300

    usb: gadget: net2280: fix memory leak on probe error handling paths
    
    [ Upstream commit 2468c877da428ebfd701142c4cdfefcfb7d4c00e ]
    
    Driver does not release memory for device on error handling paths in
    net2280_probe() when gadget_release() is not registered yet.
    
    The patch fixes the bug like in other similar drivers.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7404ce0f639cf5d40b63da747e6a550355c6d974
Author: shirley her <shirley.her@bayhubtech.com>
Date:   Mon Jul 20 18:17:33 2020 -0700

    mmc: sdhci-pci-o2micro: Bug fix for O2 host controller Seabird1
    
    [ Upstream commit cdd2b769789ae1a030e1a26f6c37c5833cabcb34 ]
    
    To fix support for the O2 host controller Seabird1, set the quirk
    SDHCI_QUIRK2_PRESET_VALUE_BROKEN and the capability bit MMC_CAP2_NO_SDIO.
    Moreover, assign the ->get_cd() callback.
    
    Signed-off-by: Shirley Her <shirley.her@bayhubtech.com>
    Link: https://lore.kernel.org/r/20200721011733.8416-1-shirley.her@bayhubtech.com
    [Ulf: Updated the commit message]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d000795c9f25f95419d4787c295a2874e1e34609
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Jul 21 13:34:07 2020 -0700

    ionic: update eid test for overflow
    
    [ Upstream commit 3fbc9bb6ca32d12d4d32a7ae32abef67ac95f889 ]
    
    Fix up our comparison to better handle a potential (but largely
    unlikely) wrap around.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 691ae7c87ff79c9a1aa4b6b2e82dcc48528e492e
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Mon Jun 29 06:18:41 2020 +0300

    gpu: host1x: debug: Fix multiple channels emitting messages simultaneously
    
    [ Upstream commit 35681862808472a0a4b9a8817ae2789c0b5b3edc ]
    
    Once channel's job is hung, it dumps the channel's state into KMSG before
    tearing down the offending job. If multiple channels hang at once, then
    they dump messages simultaneously, making the debug info unreadable, and
    thus, useless. This patch adds mutex which allows only one channel to emit
    debug messages at a time.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff3fde9d4519ca5259ba6c8102c94c470277bb88
Author: Bolarinwa Olayemi Saheed <refactormyself@gmail.com>
Date:   Mon Jul 13 19:55:27 2020 +0200

    iwlegacy: Check the return value of pcie_capability_read_*()
    
    [ Upstream commit 9018fd7f2a73e9b290f48a56b421558fa31e8b75 ]
    
    On failure pcie_capability_read_dword() sets it's last parameter, val
    to 0. However, with Patch 14/14, it is possible that val is set to ~0 on
    failure. This would introduce a bug because (x & x) == (~0 & x).
    
    This bug can be avoided without changing the function's behaviour if the
    return value of pcie_capability_read_dword is checked to confirm success.
    
    Check the return value of pcie_capability_read_dword() to ensure success.
    
    Suggested-by: Bjorn Helgaas <bjorn@helgaas.com>
    Signed-off-by: Bolarinwa Olayemi Saheed <refactormyself@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200713175529.29715-3-refactormyself@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef62e5411db29944a2d5642f8cde1240a71e796b
Author: Armas Spann <zappel@retarded.farm>
Date:   Sat Jul 11 11:43:21 2020 +0200

    platform/x86: asus-nb-wmi: add support for ASUS ROG Zephyrus G14 and G15
    
    [ Upstream commit 13bceda68fb9ef388ad40d355ab8d03ee64d14c2 ]
    
    Add device support for the new ASUS ROG Zephyrus G14 (GA401I) and
    G15 (GA502I) series.
    
    This is accomplished by two new quirk entries (one per each series),
    as well as all current available G401I/G502I DMI_PRODUCT_NAMEs to match
    the corresponding devices.
    
    Signed-off-by: Armas Spann <zappel@retarded.farm>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce3ae44103ca55735941cc95be540c02447dcdcf
Author: Wright Feng <wright.feng@cypress.com>
Date:   Wed Jun 24 04:16:07 2020 -0500

    brcmfmac: set state of hanger slot to FREE when flushing PSQ
    
    [ Upstream commit fcdd7a875def793c38d7369633af3eba6c7cf089 ]
    
    When USB or SDIO device got abnormal bus disconnection, host driver
    tried to clean up the skbs in PSQ and TXQ (The skb's pointer in hanger
    slot linked to PSQ and TSQ), so we should set the state of skb hanger slot
    to BRCMF_FWS_HANGER_ITEM_STATE_FREE before freeing skb.
    In brcmf_fws_bus_txq_cleanup it already sets
    BRCMF_FWS_HANGER_ITEM_STATE_FREE before freeing skb, therefore we add the
    same thing in brcmf_fws_psq_flush to avoid following warning message.
    
       [ 1580.012880] ------------   [ cut here ]------------
       [ 1580.017550] WARNING: CPU: 3 PID: 3065 at
    drivers/net/wireless/broadcom/brcm80211/brcmutil/utils.c:49
    brcmu_pkt_buf_free_skb+0x21/0x30 [brcmutil]
       [ 1580.184017] Call Trace:
       [ 1580.186514]  brcmf_fws_cleanup+0x14e/0x190 [brcmfmac]
       [ 1580.191594]  brcmf_fws_del_interface+0x70/0x90 [brcmfmac]
       [ 1580.197029]  brcmf_proto_bcdc_del_if+0xe/0x10 [brcmfmac]
       [ 1580.202418]  brcmf_remove_interface+0x69/0x190 [brcmfmac]
       [ 1580.207888]  brcmf_detach+0x90/0xe0 [brcmfmac]
       [ 1580.212385]  brcmf_usb_disconnect+0x76/0xb0 [brcmfmac]
       [ 1580.217557]  usb_unbind_interface+0x72/0x260
       [ 1580.221857]  device_release_driver_internal+0x141/0x200
       [ 1580.227152]  device_release_driver+0x12/0x20
       [ 1580.231460]  bus_remove_device+0xfd/0x170
       [ 1580.235504]  device_del+0x1d9/0x300
       [ 1580.239041]  usb_disable_device+0x9e/0x270
       [ 1580.243160]  usb_disconnect+0x94/0x270
       [ 1580.246980]  hub_event+0x76d/0x13b0
       [ 1580.250499]  process_one_work+0x144/0x360
       [ 1580.254564]  worker_thread+0x4d/0x3c0
       [ 1580.258247]  kthread+0x109/0x140
       [ 1580.261515]  ? rescuer_thread+0x340/0x340
       [ 1580.265543]  ? kthread_park+0x60/0x60
       [ 1580.269237]  ? SyS_exit_group+0x14/0x20
       [ 1580.273118]  ret_from_fork+0x25/0x30
       [ 1580.300446] ------------   [ cut here ]------------
    
    Acked-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200624091608.25154-2-wright.feng@cypress.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c53aefa2866dd5d62d9d0ab5bd096ab197aa54b
Author: Prasanna Kerekoppa <prasanna.kerekoppa@cypress.com>
Date:   Thu Jun 4 02:18:35 2020 -0500

    brcmfmac: To fix Bss Info flag definition Bug
    
    [ Upstream commit fa3266541b13f390eb35bdbc38ff4a03368be004 ]
    
    Bss info flag definition need to be fixed from 0x2 to 0x4
    This flag is for rssi info received on channel.
    All Firmware branches defined as 0x4 and this is bug in brcmfmac.
    
    Signed-off-by: Prasanna Kerekoppa <prasanna.kerekoppa@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200604071835.3842-6-wright.feng@cypress.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29dd5e5309b1ec1c9ef42b3de07f4de1473e23cd
Author: Wright Feng <wright.feng@cypress.com>
Date:   Thu Jun 4 02:18:33 2020 -0500

    brcmfmac: keep SDIO watchdog running when console_interval is non-zero
    
    [ Upstream commit eccbf46b15bb3e35d004148f7c3a8fa8e9b26c1e ]
    
    brcmfmac host driver makes SDIO bus sleep and stops SDIO watchdog if no
    pending event or data. As a result, host driver does not poll firmware
    console buffer before buffer overflow, which leads to missing firmware
    logs. We should not stop SDIO watchdog if console_interval is non-zero
    in debug build.
    
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200604071835.3842-4-wright.feng@cypress.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5908a17b247ddafe19470f7413c86f277ebe7195
Author: Wenbo Zhang <ethercflow@gmail.com>
Date:   Fri Jul 10 05:20:35 2020 -0400

    bpf: Fix fds_example SIGSEGV error
    
    [ Upstream commit eef8a42d6ce087d1c81c960ae0d14f955b742feb ]
    
    The `BPF_LOG_BUF_SIZE`'s value is `UINT32_MAX >> 8`, so define an array
    with it on stack caused an overflow.
    
    Signed-off-by: Wenbo Zhang <ethercflow@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200710092035.28919-1-ethercflow@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4360d9b560bde62984a202cd0f372306bbe8c638
Author: Evan Quan <evan.quan@amd.com>
Date:   Sun Jun 28 19:12:42 2020 +0800

    drm/amd/powerplay: fix compile error with ARCH=arc
    
    [ Upstream commit 9822ba2ead1baa3de4860ad9472f652c4cc78c9c ]
    
    Fix the compile error below:
    drivers/gpu/drm/amd/amdgpu/../powerplay/smu_v11_0.c: In function 'smu_v11_0_init_microcode':
    >> arch/arc/include/asm/bug.h:22:2: error: implicit declaration of function 'pr_warn'; did you mean 'pci_warn'? [-Werror=implicit-function-declaration]
          22 |  pr_warn("BUG: failure at %s:%d/%s()!\n", __FILE__, __LINE__, __func__); \
             |  ^~~~~~~
    drivers/gpu/drm/amd/amdgpu/../powerplay/smu_v11_0.c:176:3: note: in expansion of macro 'BUG'
         176 |   BUG();
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fae763f1357bceae0a41a5d02898bf1c968964eb
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 17 16:33:47 2020 -0400

    drm/amdgpu/display bail early in dm_pp_get_static_clocks
    
    [ Upstream commit 376814f5fcf1aadda501d1413d56e8af85d19a97 ]
    
    If there are no supported callbacks.  We'll fall back to the
    nominal clocks.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1170
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87834546ea2c9d9e2e3dbf10a1f3d27b05a94218
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Thu Apr 16 16:46:10 2020 -0700

    mm/mmap.c: Add cond_resched() for exit_mmap() CPU stalls
    
    [ Upstream commit 0a3b3c253a1eb2c7fe7f34086d46660c909abeb3 ]
    
    A large process running on a heavily loaded system can encounter the
    following RCU CPU stall warning:
    
      rcu: INFO: rcu_sched self-detected stall on CPU
      rcu:  3-....: (20998 ticks this GP) idle=4ea/1/0x4000000000000002 softirq=556558/556558 fqs=5190
            (t=21013 jiffies g=1005461 q=132576)
      NMI backtrace for cpu 3
      CPU: 3 PID: 501900 Comm: aio-free-ring-w Kdump: loaded Not tainted 5.2.9-108_fbk12_rc3_3858_gb83b75af7909 #1
      Hardware name: Wiwynn   HoneyBadger/PantherPlus, BIOS HBM6.71 02/03/2016
      Call Trace:
       <IRQ>
       dump_stack+0x46/0x60
       nmi_cpu_backtrace.cold.3+0x13/0x50
       ? lapic_can_unplug_cpu.cold.27+0x34/0x34
       nmi_trigger_cpumask_backtrace+0xba/0xca
       rcu_dump_cpu_stacks+0x99/0xc7
       rcu_sched_clock_irq.cold.87+0x1aa/0x397
       ? tick_sched_do_timer+0x60/0x60
       update_process_times+0x28/0x60
       tick_sched_timer+0x37/0x70
       __hrtimer_run_queues+0xfe/0x270
       hrtimer_interrupt+0xf4/0x210
       smp_apic_timer_interrupt+0x5e/0x120
       apic_timer_interrupt+0xf/0x20
       </IRQ>
      RIP: 0010:kmem_cache_free+0x223/0x300
      Code: 88 00 00 00 0f 85 ca 00 00 00 41 8b 55 18 31 f6 f7 da 41 f6 45 0a 02 40 0f 94 c6 83 c6 05 9c 41 5e fa e8 a0 a7 01 00 41 56 9d <49> 8b 47 08 a8 03 0f 85 87 00 00 00 65 48 ff 08 e9 3d fe ff ff 65
      RSP: 0018:ffffc9000e8e3da8 EFLAGS: 00000206 ORIG_RAX: ffffffffffffff13
      RAX: 0000000000020000 RBX: ffff88861b9de960 RCX: 0000000000000030
      RDX: fffffffffffe41e8 RSI: 000060777fe3a100 RDI: 000000000001be18
      RBP: ffffea00186e7780 R08: ffffffffffffffff R09: ffffffffffffffff
      R10: ffff88861b9dea28 R11: ffff88887ffde000 R12: ffffffff81230a1f
      R13: ffff888854684dc0 R14: 0000000000000206 R15: ffff8888547dbc00
       ? remove_vma+0x4f/0x60
       remove_vma+0x4f/0x60
       exit_mmap+0xd6/0x160
       mmput+0x4a/0x110
       do_exit+0x278/0xae0
       ? syscall_trace_enter+0x1d3/0x2b0
       ? handle_mm_fault+0xaa/0x1c0
       do_group_exit+0x3a/0xa0
       __x64_sys_exit_group+0x14/0x20
       do_syscall_64+0x42/0x100
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    And on a PREEMPT=n kernel, the "while (vma)" loop in exit_mmap() can run
    for a very long time given a large process.  This commit therefore adds
    a cond_resched() to this loop, providing RCU any needed quiescent states.
    
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: <linux-mm@kvack.org>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae3033d3859691136642ca01e8fdae2a05ffcd3c
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Mon Jun 15 09:44:45 2020 +0200

    irqchip/irq-mtk-sysirq: Replace spinlock with raw_spinlock
    
    [ Upstream commit 6eeb997ab5075e770a002c51351fa4ec2c6b5c39 ]
    
    This driver may take a regular spinlock when a raw spinlock
    (irq_desc->lock) is already taken which results in the following
    lockdep splat:
    
    =============================
    [ BUG: Invalid wait context ]
    5.7.0-rc7 #1 Not tainted
    -----------------------------
    swapper/0/0 is trying to lock:
    ffffff800303b798 (&chip_data->lock){....}-{3:3}, at: mtk_sysirq_set_type+0x48/0xc0
    other info that might help us debug this:
    context-{5:5}
    2 locks held by swapper/0/0:
     #0: ffffff800302ee68 (&desc->request_mutex){....}-{4:4}, at: __setup_irq+0xc4/0x8a0
     #1: ffffff800302ecf0 (&irq_desc_lock_class){....}-{2:2}, at: __setup_irq+0xe4/0x8a0
    stack backtrace:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.7.0-rc7 #1
    Hardware name: Pumpkin MT8516 (DT)
    Call trace:
     dump_backtrace+0x0/0x180
     show_stack+0x14/0x20
     dump_stack+0xd0/0x118
     __lock_acquire+0x8c8/0x2270
     lock_acquire+0xf8/0x470
     _raw_spin_lock_irqsave+0x50/0x78
     mtk_sysirq_set_type+0x48/0xc0
     __irq_set_trigger+0x58/0x170
     __setup_irq+0x420/0x8a0
     request_threaded_irq+0xd8/0x190
     timer_of_init+0x1e8/0x2c4
     mtk_gpt_init+0x5c/0x1dc
     timer_probe+0x74/0xf4
     time_init+0x14/0x44
     start_kernel+0x394/0x4f0
    
    Replace the spinlock_t with raw_spinlock_t to avoid this warning.
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200615074445.3579-1-brgl@bgdev.pl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d17931fbe9dd9bbac435a028bd72e6855aeb4bd5
Author: Christian König <christian.koenig@amd.com>
Date:   Tue May 12 10:55:58 2020 +0200

    drm/radeon: disable AGP by default
    
    [ Upstream commit ba806f98f868ce107aa9c453fef751de9980e4af ]
    
    Always use the PCI GART instead. We just have to many cases
    where AGP still causes problems. This means a performance
    regression for some GPUs, but also a bug fix for some others.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 238e32468e0df0206cb5431aa2b72d733591e89c
Author: Michael Tretter <m.tretter@pengutronix.de>
Date:   Thu Aug 17 12:43:07 2017 +0200

    drm/debugfs: fix plain echo to connector "force" attribute
    
    [ Upstream commit c704b17071c4dc571dca3af4e4151dac51de081a ]
    
    Using plain echo to set the "force" connector attribute fails with
    -EINVAL, because echo appends a newline to the output.
    
    Replace strcmp with sysfs_streq to also accept strings that end with a
    newline.
    
    v2: use sysfs_streq instead of stripping trailing whitespace
    
    Signed-off-by: Michael Tretter <m.tretter@pengutronix.de>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Emil Velikov <emil.l.velikov@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170817104307.17124-1-m.tretter@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df91fe834bd453fc2258021e3b2fb3ab90223eb8
Author: Akhil P Oommen <akhilpo@codeaurora.org>
Date:   Fri Jul 10 02:01:55 2020 +0530

    drm/msm: Fix a null pointer access in msm_gem_shrinker_count()
    
    [ Upstream commit 3cbdc8d8b7f39a7af3ea7b8dfa75caaebfda4e56 ]
    
    Adding an msm_gem_object object to the inactive_list before completing
    its initialization is a bad idea because shrinker may pick it up from the
    inactive_list. Fix this by making sure that the initialization is complete
    before moving the msm_obj object to the inactive list.
    
    This patch fixes the below error:
    [10027.553044] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000068
    [10027.573305] Mem abort info:
    [10027.590160]   ESR = 0x96000006
    [10027.597905]   EC = 0x25: DABT (current EL), IL = 32 bits
    [10027.614430]   SET = 0, FnV = 0
    [10027.624427]   EA = 0, S1PTW = 0
    [10027.632722] Data abort info:
    [10027.638039]   ISV = 0, ISS = 0x00000006
    [10027.647459]   CM = 0, WnR = 0
    [10027.654345] user pgtable: 4k pages, 39-bit VAs, pgdp=00000001e3a6a000
    [10027.672681] [0000000000000068] pgd=0000000198c31003, pud=0000000198c31003, pmd=0000000000000000
    [10027.693900] Internal error: Oops: 96000006 [#1] PREEMPT SMP
    [10027.738261] CPU: 3 PID: 214 Comm: kswapd0 Tainted: G S                5.4.40 #1
    [10027.745766] Hardware name: Qualcomm Technologies, Inc. SC7180 IDP (DT)
    [10027.752472] pstate: 80c00009 (Nzcv daif +PAN +UAO)
    [10027.757409] pc : mutex_is_locked+0x14/0x2c
    [10027.761626] lr : msm_gem_shrinker_count+0x70/0xec
    [10027.766454] sp : ffffffc011323ad0
    [10027.769867] x29: ffffffc011323ad0 x28: ffffffe677e4b878
    [10027.775324] x27: 0000000000000cc0 x26: 0000000000000000
    [10027.780783] x25: ffffff817114a708 x24: 0000000000000008
    [10027.786242] x23: ffffff8023ab7170 x22: 0000000000000001
    [10027.791701] x21: ffffff817114a080 x20: 0000000000000119
    [10027.797160] x19: 0000000000000068 x18: 00000000000003bc
    [10027.802621] x17: 0000000004a34210 x16: 00000000000000c0
    [10027.808083] x15: 0000000000000000 x14: 0000000000000000
    [10027.813542] x13: ffffffe677e0a3c0 x12: 0000000000000000
    [10027.819000] x11: 0000000000000000 x10: ffffff8174b94340
    [10027.824461] x9 : 0000000000000000 x8 : 0000000000000000
    [10027.829919] x7 : 00000000000001fc x6 : ffffffc011323c88
    [10027.835373] x5 : 0000000000000001 x4 : ffffffc011323d80
    [10027.840832] x3 : ffffffff0477b348 x2 : 0000000000000000
    [10027.846290] x1 : ffffffc011323b68 x0 : 0000000000000068
    [10027.851748] Call trace:
    [10027.854264]  mutex_is_locked+0x14/0x2c
    [10027.858121]  msm_gem_shrinker_count+0x70/0xec
    [10027.862603]  shrink_slab+0xc0/0x4b4
    [10027.866187]  shrink_node+0x4a8/0x818
    [10027.869860]  kswapd+0x624/0x890
    [10027.873097]  kthread+0x11c/0x12c
    [10027.876424]  ret_from_fork+0x10/0x18
    [10027.880102] Code: f9000bf3 910003fd aa0003f3 d503201f (f9400268)
    [10027.886362] ---[ end trace df5849a1a3543251 ]---
    [10027.891518] Kernel panic - not syncing: Fatal exception
    
    Signed-off-by: Akhil P Oommen <akhilpo@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fae8ff2dfd8d233188c9beefeb0840a3083a4584
Author: Akhil P Oommen <akhilpo@codeaurora.org>
Date:   Fri Jul 17 20:04:18 2020 +0530

    drm: msm: a6xx: fix gpu failure after system resume
    
    [ Upstream commit 57c0bd517c06b088106b0236ed604056c8e06da5 ]
    
    On targets where GMU is available, GMU takes over the ownership of GX GDSC
    during its initialization. So, move the refcount-get on GX PD before we
    initialize the GMU. This ensures that nobody can collapse the GX GDSC
    once GMU owns the GX GDSC. This patch fixes some GMU OOB errors seen
    during GPU wake up during a system resume.
    
    Reported-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Akhil P Oommen <akhilpo@codeaurora.org>
    Tested-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Jordan Crouse <jcrouse@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e76c2ffb8f0bd347e749e1ada2ca64ac1ce75fe
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Jul 27 15:14:59 2020 +0800

    usb: mtu3: clear dual mode of u3port when disable device
    
    [ Upstream commit f1e51e99ed498d4aa9ae5df28e43d558ea627781 ]
    
    If not clear u3port's dual mode when disable device, the IP
    will fail to enter sleep mode when suspend.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/1595834101-13094-10-git-send-email-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e633add66d1725c6a082a3fb3b34b07d8dcf02cf
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Jul 17 15:12:29 2020 -0400

    btrfs: fix lockdep splat from btrfs_dump_space_info
    
    [ Upstream commit ab0db043c35da3477e57d4d516492b2d51a5ca0f ]
    
    When running with -o enospc_debug you can get the following splat if one
    of the dump_space_info's trip
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc5+ #20 Tainted: G           OE
      ------------------------------------------------------
      dd/563090 is trying to acquire lock:
      ffff9e7dbf4f1e18 (&ctl->tree_lock){+.+.}-{2:2}, at: btrfs_dump_free_space+0x2b/0xa0 [btrfs]
    
      but task is already holding lock:
      ffff9e7e2284d428 (&cache->lock){+.+.}-{2:2}, at: btrfs_dump_space_info+0xaa/0x120 [btrfs]
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #3 (&cache->lock){+.+.}-{2:2}:
             _raw_spin_lock+0x25/0x30
             btrfs_add_reserved_bytes+0x3c/0x3c0 [btrfs]
             find_free_extent+0x7ef/0x13b0 [btrfs]
             btrfs_reserve_extent+0x9b/0x180 [btrfs]
             btrfs_alloc_tree_block+0xc1/0x340 [btrfs]
             alloc_tree_block_no_bg_flush+0x4a/0x60 [btrfs]
             __btrfs_cow_block+0x122/0x530 [btrfs]
             btrfs_cow_block+0x106/0x210 [btrfs]
             commit_cowonly_roots+0x55/0x300 [btrfs]
             btrfs_commit_transaction+0x4ed/0xac0 [btrfs]
             sync_filesystem+0x74/0x90
             generic_shutdown_super+0x22/0x100
             kill_anon_super+0x14/0x30
             btrfs_kill_super+0x12/0x20 [btrfs]
             deactivate_locked_super+0x36/0x70
             cleanup_mnt+0x104/0x160
             task_work_run+0x5f/0x90
             __prepare_exit_to_usermode+0x1bd/0x1c0
             do_syscall_64+0x5e/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #2 (&space_info->lock){+.+.}-{2:2}:
             _raw_spin_lock+0x25/0x30
             btrfs_block_rsv_release+0x1a6/0x3f0 [btrfs]
             btrfs_inode_rsv_release+0x4f/0x170 [btrfs]
             btrfs_clear_delalloc_extent+0x155/0x480 [btrfs]
             clear_state_bit+0x81/0x1a0 [btrfs]
             __clear_extent_bit+0x25c/0x5d0 [btrfs]
             clear_extent_bit+0x15/0x20 [btrfs]
             btrfs_invalidatepage+0x2b7/0x3c0 [btrfs]
             truncate_cleanup_page+0x47/0xe0
             truncate_inode_pages_range+0x238/0x840
             truncate_pagecache+0x44/0x60
             btrfs_setattr+0x202/0x5e0 [btrfs]
             notify_change+0x33b/0x490
             do_truncate+0x76/0xd0
             path_openat+0x687/0xa10
             do_filp_open+0x91/0x100
             do_sys_openat2+0x215/0x2d0
             do_sys_open+0x44/0x80
             do_syscall_64+0x52/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #1 (&tree->lock#2){+.+.}-{2:2}:
             _raw_spin_lock+0x25/0x30
             find_first_extent_bit+0x32/0x150 [btrfs]
             write_pinned_extent_entries.isra.0+0xc5/0x100 [btrfs]
             __btrfs_write_out_cache+0x172/0x480 [btrfs]
             btrfs_write_out_cache+0x7a/0xf0 [btrfs]
             btrfs_write_dirty_block_groups+0x286/0x3b0 [btrfs]
             commit_cowonly_roots+0x245/0x300 [btrfs]
             btrfs_commit_transaction+0x4ed/0xac0 [btrfs]
             close_ctree+0xf9/0x2f5 [btrfs]
             generic_shutdown_super+0x6c/0x100
             kill_anon_super+0x14/0x30
             btrfs_kill_super+0x12/0x20 [btrfs]
             deactivate_locked_super+0x36/0x70
             cleanup_mnt+0x104/0x160
             task_work_run+0x5f/0x90
             __prepare_exit_to_usermode+0x1bd/0x1c0
             do_syscall_64+0x5e/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #0 (&ctl->tree_lock){+.+.}-{2:2}:
             __lock_acquire+0x1240/0x2460
             lock_acquire+0xab/0x360
             _raw_spin_lock+0x25/0x30
             btrfs_dump_free_space+0x2b/0xa0 [btrfs]
             btrfs_dump_space_info+0xf4/0x120 [btrfs]
             btrfs_reserve_extent+0x176/0x180 [btrfs]
             __btrfs_prealloc_file_range+0x145/0x550 [btrfs]
             cache_save_setup+0x28d/0x3b0 [btrfs]
             btrfs_start_dirty_block_groups+0x1fc/0x4f0 [btrfs]
             btrfs_commit_transaction+0xcc/0xac0 [btrfs]
             btrfs_alloc_data_chunk_ondemand+0x162/0x4c0 [btrfs]
             btrfs_check_data_free_space+0x4c/0xa0 [btrfs]
             btrfs_buffered_write.isra.0+0x19b/0x740 [btrfs]
             btrfs_file_write_iter+0x3cf/0x610 [btrfs]
             new_sync_write+0x11e/0x1b0
             vfs_write+0x1c9/0x200
             ksys_write+0x68/0xe0
             do_syscall_64+0x52/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      other info that might help us debug this:
    
      Chain exists of:
        &ctl->tree_lock --> &space_info->lock --> &cache->lock
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(&cache->lock);
                                     lock(&space_info->lock);
                                     lock(&cache->lock);
        lock(&ctl->tree_lock);
    
       *** DEADLOCK ***
    
      6 locks held by dd/563090:
       #0: ffff9e7e21d18448 (sb_writers#14){.+.+}-{0:0}, at: vfs_write+0x195/0x200
       #1: ffff9e7dd0410ed8 (&sb->s_type->i_mutex_key#19){++++}-{3:3}, at: btrfs_file_write_iter+0x86/0x610 [btrfs]
       #2: ffff9e7e21d18638 (sb_internal#2){.+.+}-{0:0}, at: start_transaction+0x40b/0x5b0 [btrfs]
       #3: ffff9e7e1f05d688 (&cur_trans->cache_write_mutex){+.+.}-{3:3}, at: btrfs_start_dirty_block_groups+0x158/0x4f0 [btrfs]
       #4: ffff9e7e2284ddb8 (&space_info->groups_sem){++++}-{3:3}, at: btrfs_dump_space_info+0x69/0x120 [btrfs]
       #5: ffff9e7e2284d428 (&cache->lock){+.+.}-{2:2}, at: btrfs_dump_space_info+0xaa/0x120 [btrfs]
    
      stack backtrace:
      CPU: 3 PID: 563090 Comm: dd Tainted: G           OE     5.8.0-rc5+ #20
      Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./890FX Deluxe5, BIOS P1.40 05/03/2011
      Call Trace:
       dump_stack+0x96/0xd0
       check_noncircular+0x162/0x180
       __lock_acquire+0x1240/0x2460
       ? wake_up_klogd.part.0+0x30/0x40
       lock_acquire+0xab/0x360
       ? btrfs_dump_free_space+0x2b/0xa0 [btrfs]
       _raw_spin_lock+0x25/0x30
       ? btrfs_dump_free_space+0x2b/0xa0 [btrfs]
       btrfs_dump_free_space+0x2b/0xa0 [btrfs]
       btrfs_dump_space_info+0xf4/0x120 [btrfs]
       btrfs_reserve_extent+0x176/0x180 [btrfs]
       __btrfs_prealloc_file_range+0x145/0x550 [btrfs]
       ? btrfs_qgroup_reserve_data+0x1d/0x60 [btrfs]
       cache_save_setup+0x28d/0x3b0 [btrfs]
       btrfs_start_dirty_block_groups+0x1fc/0x4f0 [btrfs]
       btrfs_commit_transaction+0xcc/0xac0 [btrfs]
       ? start_transaction+0xe0/0x5b0 [btrfs]
       btrfs_alloc_data_chunk_ondemand+0x162/0x4c0 [btrfs]
       btrfs_check_data_free_space+0x4c/0xa0 [btrfs]
       btrfs_buffered_write.isra.0+0x19b/0x740 [btrfs]
       ? ktime_get_coarse_real_ts64+0xa8/0xd0
       ? trace_hardirqs_on+0x1c/0xe0
       btrfs_file_write_iter+0x3cf/0x610 [btrfs]
       new_sync_write+0x11e/0x1b0
       vfs_write+0x1c9/0x200
       ksys_write+0x68/0xe0
       do_syscall_64+0x52/0xb0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    This is because we're holding the block_group->lock while trying to dump
    the free space cache.  However we don't need this lock, we just need it
    to read the values for the printk, so move the free space cache dumping
    outside of the block group lock.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7795eb18ce7d5e9e4ab3ce81739dc084aba8fa6e
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Jul 20 15:11:41 2020 +0900

    mmc: sdhci-cadence: do not use hardware tuning for SD mode
    
    [ Upstream commit adc40a5179df30421a5537bfeb4545100ab97d5e ]
    
    As commit ef6b75671b5f ("mmc: sdhci-cadence: send tune request twice to
    work around errata") stated, this IP has an errata. This commit applies
    the second workaround for the SD mode.
    
    Due to the errata, it is not possible to use the hardware tuning provided
    by SDHCI_HOST_CONTROL2.
    
    Use the software-controlled tuning like the eMMC mode.
    
    Set sdhci_host_ops::platform_execute_tuning instead of overriding
    mmc_host_ops::execute_tuning.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Link: https://lore.kernel.org/r/20200720061141.172944-1-yamada.masahiro@socionext.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b69bcd45426f24e38e2f20ec0f40d0730368c6e
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 20:41:56 2020 -0500

    drm/nouveau: fix multiple instances of reference count leaks
    
    [ Upstream commit 659fb5f154c3434c90a34586f3b7aa1c39cf6062 ]
    
    On calling pm_runtime_get_sync() the reference count of the device
    is incremented. In case of failure, decrement the
    ref count before returning the error.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db0a2e4857dd8a0235091e3c753e356f2291bd56
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 20:48:37 2020 -0500

    drm/nouveau: fix reference count leak in nouveau_debugfs_strap_peek
    
    [ Upstream commit 8f29432417b11039ef960ab18987c7d61b2b5396 ]
    
    nouveau_debugfs_strap_peek() calls pm_runtime_get_sync() that
    increments the reference count. In case of failure, decrement the
    ref count before returning the error.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20e7c445606967ed9c45f68c16da0adc8359f362
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Mon Jun 15 01:12:20 2020 -0500

    drm/etnaviv: fix ref count leak via pm_runtime_get_sync
    
    [ Upstream commit c5d5a32ead1e3a61a07a1e59eb52a53e4a6b2a7f ]
    
    in etnaviv_gpu_submit, etnaviv_gpu_recover_hang, etnaviv_gpu_debugfs,
    and etnaviv_gpu_init the call to pm_runtime_get_sync increments the
    counter even in case of failure, leading to incorrect ref count.
    In case of failure, decrement the ref count before returning.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 274f4e9c575ab6032cf2318839b5a5af1d8c31f3
Author: Ricardo Cañuelo <ricardo.canuelo@collabora.com>
Date:   Mon Jun 1 08:33:06 2020 +0200

    arm64: dts: hisilicon: hikey: fixes to comply with adi, adv7533 DT binding
    
    [ Upstream commit bbe28fc3cbabbef781bcdf847615d52ce2e26e42 ]
    
    hi3660-hikey960.dts:
      Define a 'ports' node for 'adv7533: adv7533@39' and the
      'adi,dsi-lanes' property to make it compliant with the adi,adv7533 DT
      binding.
    
      This fills the requirements to meet the binding requirements,
      remote endpoints are not defined.
    
    hi6220-hikey.dts:
      Change property name s/pd-gpio/pd-gpios, gpio properties should be
      plural. This is just a cosmetic change.
    
    Signed-off-by: Ricardo Cañuelo <ricardo.canuelo@collabora.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 454a00e9ed83efc5a276ac66b31ac7ae4d023a71
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Mar 17 14:54:06 2020 -0400

    drm/nouveau/kms/nv50-: Fix disabling dithering
    
    [ Upstream commit fb2420b701edbf96c2b6d557f0139902f455dc2b ]
    
    While we expose the ability to turn off hardware dithering for nouveau,
    we actually make the mistake of turning it on anyway, due to
    dithering_depth containing a non-zero value if our dithering depth isn't
    also set to 6 bpc.
    
    So, fix it by never enabling dithering when it's disabled.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Ben Skeggs <bskeggs@redhat.com>
    Acked-by: Dave Airlie <airlied@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200627194657.156514-6-lyude@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d72c0f225a2f745fd00b9f7776331dec2f639589
Author: Zhao Heming <heming.zhao@suse.com>
Date:   Thu Jul 9 11:29:29 2020 +0800

    md-cluster: fix wild pointer of unlock_all_bitmaps()
    
    [ Upstream commit 60f80d6f2d07a6d8aee485a1d1252327eeee0c81 ]
    
    reproduction steps:
    ```
    node1 # mdadm -C /dev/md0 -b clustered -e 1.2 -n 2 -l mirror /dev/sda
    /dev/sdb
    node2 # mdadm -A /dev/md0 /dev/sda /dev/sdb
    node1 # mdadm -G /dev/md0 -b none
    mdadm: failed to remove clustered bitmap.
    node1 # mdadm -S --scan
    ^C  <==== mdadm hung & kernel crash
    ```
    
    kernel stack:
    ```
    [  335.230657] general protection fault: 0000 [#1] SMP NOPTI
    [...]
    [  335.230848] Call Trace:
    [  335.230873]  ? unlock_all_bitmaps+0x5/0x70 [md_cluster]
    [  335.230886]  unlock_all_bitmaps+0x3d/0x70 [md_cluster]
    [  335.230899]  leave+0x10f/0x190 [md_cluster]
    [  335.230932]  ? md_super_wait+0x93/0xa0 [md_mod]
    [  335.230947]  ? leave+0x5/0x190 [md_cluster]
    [  335.230973]  md_cluster_stop+0x1a/0x30 [md_mod]
    [  335.230999]  md_bitmap_free+0x142/0x150 [md_mod]
    [  335.231013]  ? _cond_resched+0x15/0x40
    [  335.231025]  ? mutex_lock+0xe/0x30
    [  335.231056]  __md_stop+0x1c/0xa0 [md_mod]
    [  335.231083]  do_md_stop+0x160/0x580 [md_mod]
    [  335.231119]  ? 0xffffffffc05fb078
    [  335.231148]  md_ioctl+0xa04/0x1930 [md_mod]
    [  335.231165]  ? filename_lookup+0xf2/0x190
    [  335.231179]  blkdev_ioctl+0x93c/0xa10
    [  335.231205]  ? _cond_resched+0x15/0x40
    [  335.231214]  ? __check_object_size+0xd4/0x1a0
    [  335.231224]  block_ioctl+0x39/0x40
    [  335.231243]  do_vfs_ioctl+0xa0/0x680
    [  335.231253]  ksys_ioctl+0x70/0x80
    [  335.231261]  __x64_sys_ioctl+0x16/0x20
    [  335.231271]  do_syscall_64+0x65/0x1f0
    [  335.231278]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    ```
    
    Signed-off-by: Zhao Heming <heming.zhao@suse.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ac7df0910e51dc006a5baeb12908c4432930b4a
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jul 13 09:59:47 2020 -0700

    bus: ti-sysc: Add missing quirk flags for usb_host_hs
    
    [ Upstream commit 4254632dba27271f6de66efd87e444ee405dee29 ]
    
    Similar to what we have for the legacy platform data, we need to
    configure SWSUP_SIDLE and SWSUP_MSTANDBY quirks for usb_host_hs.
    
    These are needed to drop the legacy platform data for usb_host_hs.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6754d2a86c438d738d893ea5c93f3eff06d02a63
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Tue Jun 30 22:54:51 2020 +0300

    video: fbdev: neofb: fix memory leak in neo_scan_monitor()
    
    [ Upstream commit edcb3895a751c762a18d25c8d9846ce9759ed7e1 ]
    
    neofb_probe() calls neo_scan_monitor() that can successfully allocate a
    memory for info->monspecs.modedb and proceed to case 0x03. There it does
    not free the memory and returns -1. neofb_probe() goes to label
    err_scan_monitor, thus, it does not free this memory through calling
    fb_destroy_modedb() as well. We can not go to label err_init_hw since
    neo_scan_monitor() can fail during memory allocation. So, the patch frees
    the memory directly for case 0x03.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200630195451.18675-1-novikov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ca4266935635b685d569b07006398c01dd653af
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Fri Jun 19 19:21:36 2020 +0300

    video: fbdev: savage: fix memory leak on error handling path in probe
    
    [ Upstream commit e8d35898a78e34fc854ed9680bc3f9caedab08cd ]
    
    savagefb_probe() calls savage_init_fb_info() that can successfully
    allocate memory for info->pixmap.addr but then fail when
    fb_alloc_cmap() fails. savagefb_probe() goes to label failed_init and
    does not free allocated memory. It is not valid to go to label
    failed_mmio since savage_init_fb_info() can fail during memory
    allocation as well. So, the patch free allocated memory on the error
    handling path in savage_init_fb_info() itself.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Cc: Antonino Daplas <adaplas@gmail.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200619162136.9010-1-novikov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b8d17d9ff8aebc8c2f21d69a13638bc72079a0d
Author: Sedat Dilek <sedat.dilek@gmail.com>
Date:   Fri Jul 3 16:32:06 2020 +0200

    crypto: aesni - Fix build with LLVM_IAS=1
    
    [ Upstream commit 3347c8a079d67af21760a78cc5f2abbcf06d9571 ]
    
    When building with LLVM_IAS=1 means using Clang's Integrated Assembly (IAS)
    from LLVM/Clang >= v10.0.1-rc1+ instead of GNU/as from GNU/binutils
    I see the following breakage in Debian/testing AMD64:
    
    <instantiation>:15:74: error: too many positional arguments
     PRECOMPUTE 8*3+8(%rsp), %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7,
                                                                             ^
     arch/x86/crypto/aesni-intel_asm.S:1598:2: note: while in macro instantiation
     GCM_INIT %r9, 8*3 +8(%rsp), 8*3 +16(%rsp), 8*3 +24(%rsp)
     ^
    <instantiation>:47:2: error: unknown use of instruction mnemonic without a size suffix
     GHASH_4_ENCRYPT_4_PARALLEL_dec %xmm9, %xmm10, %xmm11, %xmm12, %xmm13, %xmm14, %xmm0, %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7, %xmm8, enc
     ^
    arch/x86/crypto/aesni-intel_asm.S:1599:2: note: while in macro instantiation
     GCM_ENC_DEC dec
     ^
    <instantiation>:15:74: error: too many positional arguments
     PRECOMPUTE 8*3+8(%rsp), %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7,
                                                                             ^
    arch/x86/crypto/aesni-intel_asm.S:1686:2: note: while in macro instantiation
     GCM_INIT %r9, 8*3 +8(%rsp), 8*3 +16(%rsp), 8*3 +24(%rsp)
     ^
    <instantiation>:47:2: error: unknown use of instruction mnemonic without a size suffix
     GHASH_4_ENCRYPT_4_PARALLEL_enc %xmm9, %xmm10, %xmm11, %xmm12, %xmm13, %xmm14, %xmm0, %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7, %xmm8, enc
     ^
    arch/x86/crypto/aesni-intel_asm.S:1687:2: note: while in macro instantiation
     GCM_ENC_DEC enc
    
    Craig Topper suggested me in ClangBuiltLinux issue #1050:
    
    > I think the "too many positional arguments" is because the parser isn't able
    > to handle the trailing commas.
    >
    > The "unknown use of instruction mnemonic" is because the macro was named
    > GHASH_4_ENCRYPT_4_PARALLEL_DEC but its being instantiated with
    > GHASH_4_ENCRYPT_4_PARALLEL_dec I guess gas ignores case on the
    > macro instantiation, but llvm doesn't.
    
    First, I removed the trailing comma in the PRECOMPUTE line.
    
    Second, I substituted:
    1. GHASH_4_ENCRYPT_4_PARALLEL_DEC -> GHASH_4_ENCRYPT_4_PARALLEL_dec
    2. GHASH_4_ENCRYPT_4_PARALLEL_ENC -> GHASH_4_ENCRYPT_4_PARALLEL_enc
    
    With these changes I was able to build with LLVM_IAS=1 and boot on bare metal.
    
    I confirmed that this works with Linux-kernel v5.7.5 final.
    
    NOTE: This patch is on top of Linux v5.7 final.
    
    Thanks to Craig and especially Nick for double-checking and his comments.
    
    Suggested-by: Craig Topper <craig.topper@intel.com>
    Suggested-by: Craig Topper <craig.topper@gmail.com>
    Suggested-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: "ClangBuiltLinux" <clang-built-linux@googlegroups.com>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1050
    Link: https://bugs.llvm.org/show_bug.cgi?id=24494
    Signed-off-by: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cab45cfa00b875ab5f80b692e04aad5d949ac9e3
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 21:21:22 2020 -0500

    drm/radeon: Fix reference count leaks caused by pm_runtime_get_sync
    
    [ Upstream commit 9fb10671011143d15b6b40d6d5fa9c52c57e9d63 ]
    
    On calling pm_runtime_get_sync() the reference count of the device
    is incremented. In case of failure, decrement the
    reference count before returning the error.
    
    Acked-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f04f5bcf6d9aa511af473ac481a4a2cd305b034
Author: Jack Xiao <Jack.Xiao@amd.com>
Date:   Wed Jun 5 16:30:13 2019 +0800

    drm/amdgpu: avoid dereferencing a NULL pointer
    
    [ Upstream commit 55611b507fd6453d26030c0c0619fdf0c262766d ]
    
    Check if irq_src is NULL to avoid dereferencing a NULL pointer,
    for MES ring is uneccessary to recieve an interrupt notification.
    
    Signed-off-by: Jack Xiao <Jack.Xiao@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6402b231824f45355e2e0ade4f9cba5249fc0a8a
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri May 8 14:15:37 2020 -0700

    fs/btrfs: Add cond_resched() for try_release_extent_mapping() stalls
    
    [ Upstream commit 9f47eb5461aaeb6cb8696f9d11503ae90e4d5cb0 ]
    
    Very large I/Os can cause the following RCU CPU stall warning:
    
    RIP: 0010:rb_prev+0x8/0x50
    Code: 49 89 c0 49 89 d1 48 89 c2 48 89 f8 e9 e5 fd ff ff 4c 89 48 10 c3 4c =
    89 06 c3 4c 89 40 10 c3 0f 1f 00 48 8b 0f 48 39 cf 74 38 <48> 8b 47 10 48 85 c0 74 22 48 8b 50 08 48 85 d2 74 0c 48 89 d0 48
    RSP: 0018:ffffc9002212bab0 EFLAGS: 00000287 ORIG_RAX: ffffffffffffff13
    RAX: ffff888821f93630 RBX: ffff888821f93630 RCX: ffff888821f937e0
    RDX: 0000000000000000 RSI: 0000000000102000 RDI: ffff888821f93630
    RBP: 0000000000103000 R08: 000000000006c000 R09: 0000000000000238
    R10: 0000000000102fff R11: ffffc9002212bac8 R12: 0000000000000001
    R13: ffffffffffffffff R14: 0000000000102000 R15: ffff888821f937e0
     __lookup_extent_mapping+0xa0/0x110
     try_release_extent_mapping+0xdc/0x220
     btrfs_releasepage+0x45/0x70
     shrink_page_list+0xa39/0xb30
     shrink_inactive_list+0x18f/0x3b0
     shrink_lruvec+0x38e/0x6b0
     shrink_node+0x14d/0x690
     do_try_to_free_pages+0xc6/0x3e0
     try_to_free_mem_cgroup_pages+0xe6/0x1e0
     reclaim_high.constprop.73+0x87/0xc0
     mem_cgroup_handle_over_high+0x66/0x150
     exit_to_usermode_loop+0x82/0xd0
     do_syscall_64+0xd4/0x100
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    On a PREEMPT=n kernel, the try_release_extent_mapping() function's
    "while" loop might run for a very long time on a large I/O.  This commit
    therefore adds a cond_resched() to this loop, providing RCU any needed
    quiescent states.
    
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6619810135b5365d1d4b83791a4e1f1464a0a41
Author: Luis Chamberlain <mcgrof@kernel.org>
Date:   Fri Jun 19 20:47:27 2020 +0000

    loop: be paranoid on exit and prevent new additions / removals
    
    [ Upstream commit 200f93377220504c5e56754823e7adfea6037f1a ]
    
    Be pedantic on removal as well and hold the mutex.
    This should prevent uses of addition while we exit.
    
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e656b7e85c35b708399de067ee2319702922dd8
Author: Lihong Kou <koulihong@huawei.com>
Date:   Tue Jun 23 20:28:41 2020 +0800

    Bluetooth: add a mutex lock to avoid UAF in do_enale_set
    
    [ Upstream commit f9c70bdc279b191da8d60777c627702c06e4a37d ]
    
    In the case we set or free the global value listen_chan in
    different threads, we can encounter the UAF problems because
    the method is not protected by any lock, add one to avoid
    this bug.
    
    BUG: KASAN: use-after-free in l2cap_chan_close+0x48/0x990
    net/bluetooth/l2cap_core.c:730
    Read of size 8 at addr ffff888096950000 by task kworker/1:102/2868
    
    CPU: 1 PID: 2868 Comm: kworker/1:102 Not tainted 5.5.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine,
    BIOS Google 01/01/2011
    Workqueue: events do_enable_set
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1fb/0x318 lib/dump_stack.c:118
     print_address_description+0x74/0x5c0 mm/kasan/report.c:374
     __kasan_report+0x149/0x1c0 mm/kasan/report.c:506
     kasan_report+0x26/0x50 mm/kasan/common.c:641
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:135
     l2cap_chan_close+0x48/0x990 net/bluetooth/l2cap_core.c:730
     do_enable_set+0x660/0x900 net/bluetooth/6lowpan.c:1074
     process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264
     worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410
     kthread+0x332/0x350 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    Allocated by task 2870:
     save_stack mm/kasan/common.c:72 [inline]
     set_track mm/kasan/common.c:80 [inline]
     __kasan_kmalloc+0x118/0x1c0 mm/kasan/common.c:515
     kasan_kmalloc+0x9/0x10 mm/kasan/common.c:529
     kmem_cache_alloc_trace+0x221/0x2f0 mm/slab.c:3551
     kmalloc include/linux/slab.h:555 [inline]
     kzalloc include/linux/slab.h:669 [inline]
     l2cap_chan_create+0x50/0x320 net/bluetooth/l2cap_core.c:446
     chan_create net/bluetooth/6lowpan.c:640 [inline]
     bt_6lowpan_listen net/bluetooth/6lowpan.c:959 [inline]
     do_enable_set+0x6a4/0x900 net/bluetooth/6lowpan.c:1078
     process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264
     worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410
     kthread+0x332/0x350 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    Freed by task 2870:
     save_stack mm/kasan/common.c:72 [inline]
     set_track mm/kasan/common.c:80 [inline]
     kasan_set_free_info mm/kasan/common.c:337 [inline]
     __kasan_slab_free+0x12e/0x1e0 mm/kasan/common.c:476
     kasan_slab_free+0xe/0x10 mm/kasan/common.c:485
     __cache_free mm/slab.c:3426 [inline]
     kfree+0x10d/0x220 mm/slab.c:3757
     l2cap_chan_destroy net/bluetooth/l2cap_core.c:484 [inline]
     kref_put include/linux/kref.h:65 [inline]
     l2cap_chan_put+0x170/0x190 net/bluetooth/l2cap_core.c:498
     do_enable_set+0x66c/0x900 net/bluetooth/6lowpan.c:1075
     process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264
     worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410
     kthread+0x332/0x350 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    The buggy address belongs to the object at ffff888096950000
     which belongs to the cache kmalloc-2k of size 2048
    The buggy address is located 0 bytes inside of
     2048-byte region [ffff888096950000, ffff888096950800)
    The buggy address belongs to the page:
    page:ffffea00025a5400 refcount:1 mapcount:0 mapping:ffff8880aa400e00 index:0x0
    flags: 0xfffe0000000200(slab)
    raw: 00fffe0000000200 ffffea00027d1548 ffffea0002397808 ffff8880aa400e00
    raw: 0000000000000000 ffff888096950000 0000000100000001 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88809694ff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff88809694ff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    >ffff888096950000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                       ^
     ffff888096950080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff888096950100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Reported-by: syzbot+96414aa0033c363d8458@syzkaller.appspotmail.com
    Signed-off-by: Lihong Kou <koulihong@huawei.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8b0407f6a5f7a846684d0a0471dfbd252565b9a
Author: Maulik Shah <mkshah@codeaurora.org>
Date:   Mon Jun 22 12:23:25 2020 +0530

    soc: qcom: rpmh-rsc: Set suppress_bind_attrs flag
    
    [ Upstream commit 1a53ce9ab4faeb841b33d62d23283dc76c0e7c5a ]
    
    rpmh-rsc driver is fairly core to system and should not be removable
    once its probed. However it allows to unbind driver from sysfs using
    below command which results into a crash on sc7180.
    
    echo 18200000.rsc > /sys/bus/platform/drivers/rpmh/unbind
    
    Lets prevent unbind at runtime by setting suppress_bind_attrs flag.
    
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Maulik Shah <mkshah@codeaurora.org>
    Link: https://lore.kernel.org/r/1592808805-2437-1-git-send-email-mkshah@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94fd6f72a82621ced478a0a417f4dccc244f7df5
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Wed Apr 29 13:42:32 2020 +0300

    drm/tilcdc: fix leak & null ref in panel_connector_get_modes
    
    [ Upstream commit 3f9c1c872cc97875ddc8d63bc9fe6ee13652b933 ]
    
    If videomode_from_timings() returns true, the mode allocated with
    drm_mode_create will be leaked.
    
    Also, the return value of drm_mode_create() is never checked, and thus
    could cause NULL deref.
    
    Fix these two issues.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200429104234.18910-1-tomi.valkeinen@ti.com
    Reviewed-by: Jyri Sarha <jsarha@ti.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86f305a9aca0053477f2c101ff6ecced37da210c
Author: Hannes Reinecke <hare@suse.de>
Date:   Mon Jul 27 18:08:03 2020 +0200

    nvme-multipath: do not fall back to __nvme_find_path() for non-optimized paths
    
    [ Upstream commit fbd6a42d8932e172921c7de10468a2e12c34846b ]
    
    When nvme_round_robin_path() finds a valid namespace we should be using it;
    falling back to __nvme_find_path() for non-optimized paths will cause the
    result from nvme_round_robin_path() to be ignored for non-optimized paths.
    
    Fixes: 75c10e732724 ("nvme-multipath: round-robin I/O policy")
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0a8c0254fde58bddbdb821cc86f2be801741b46
Author: Martin Wilck <mwilck@suse.com>
Date:   Mon Jul 27 18:08:02 2020 +0200

    nvme-multipath: fix logic for non-optimized paths
    
    [ Upstream commit 3f6e3246db0e6f92e784965d9d0edb8abe6c6b74 ]
    
    Handle the special case where we have exactly one optimized path,
    which we should keep using in this case.
    
    Fixes: 75c10e732724 ("nvme-multipath: round-robin I/O policy")
    Signed off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e8691ba0e78312891db3ae4cc47b5c7f41a1b7f
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Jul 27 17:32:09 2020 -0700

    nvme-rdma: fix controller reset hang during traffic
    
    [ Upstream commit 9f98772ba307dd89a3d17dc2589f213d3972fc64 ]
    
    commit fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    exposed an issue where we may hang trying to wait for queue freeze
    during I/O. We call blk_mq_update_nr_hw_queues which in case of multiple
    queue maps (which we have now for default/read/poll) is attempting to
    freeze the queue. However we never started queue freeze when starting the
    reset, which means that we have inflight pending requests that entered the
    queue that we will not complete once the queue is quiesced.
    
    So start a freeze before we quiesce the queue, and unfreeze the queue
    after we successfully connected the I/O queues (and make sure to call
    blk_mq_update_nr_hw_queues only after we are sure that the queue was
    already frozen).
    
    This follows to how the pci driver handles resets.
    
    Fixes: fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b98a96662a4e8e6e41afb2b95786d276b85caf77
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Fri Jul 24 15:10:12 2020 -0700

    nvme-tcp: fix controller reset hang during traffic
    
    [ Upstream commit 2875b0aecabe2f081a8432e2bc85b85df0529490 ]
    
    commit fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    exposed an issue where we may hang trying to wait for queue freeze
    during I/O. We call blk_mq_update_nr_hw_queues which in case of multiple
    queue maps (which we have now for default/read/poll) is attempting to
    freeze the queue. However we never started queue freeze when starting the
    reset, which means that we have inflight pending requests that entered the
    queue that we will not complete once the queue is quiesced.
    
    So start a freeze before we quiesce the queue, and unfreeze the queue
    after we successfully connected the I/O queues (and make sure to call
    blk_mq_update_nr_hw_queues only after we are sure that the queue was
    already frozen).
    
    This follows to how the pci driver handles resets.
    
    Fixes: fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f01de256dd00fa2bd677950a841a9a44f7645d0
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jul 2 12:35:02 2020 +0100

    md: raid0/linear: fix dereference before null check on pointer mddev
    
    [ Upstream commit 9a5a85972c073f720d81a7ebd08bfe278e6e16db ]
    
    Pointer mddev is being dereferenced with a test_bit call before mddev
    is being null checked, this may cause a null pointer dereference. Fix
    this by moving the null pointer checks to sanity check mddev before
    it is dereferenced.
    
    Addresses-Coverity: ("Dereference before null check")
    Fixes: 62f7b1989c02 ("md raid0/linear: Mark array as 'broken' and fail BIOs if a member is gone")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f09c88f207c0b6a45454e770829a7aba814059e
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jun 15 15:42:46 2020 -0700

    seccomp: Fix ioctl number for SECCOMP_IOCTL_NOTIF_ID_VALID
    
    [ Upstream commit 47e33c05f9f07cac3de833e531bcac9ae052c7ca ]
    
    When SECCOMP_IOCTL_NOTIF_ID_VALID was first introduced it had the wrong
    direction flag set. While this isn't a big deal as nothing currently
    enforces these bits in the kernel, it should be defined correctly. Fix
    the define and provide support for the old command until it is no longer
    needed for backward compatibility.
    
    Fixes: 6a21cc50f0c7 ("seccomp: add a return code to trap to userspace")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7915a3c04139cb44d26d8de3aed8abbfc735586f
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Sat Jun 6 17:50:16 2020 +0800

    irqchip/ti-sci-inta: Fix return value about devm_ioremap_resource()
    
    [ Upstream commit 4b127a14cb1385dd355c7673d975258d5d668922 ]
    
    When call function devm_ioremap_resource(), we should use IS_ERR()
    to check the return value and return PTR_ERR() if failed.
    
    Fixes: 9f1463b86c13 ("irqchip/ti-sci-inta: Add support for Interrupt Aggregator driver")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Link: https://lore.kernel.org/r/1591437017-5295-2-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f53a4b54e25bd897c22d0080ece89e6865d8aba
Author: Chengming Zhou <zhouchengming@bytedance.com>
Date:   Thu Jul 30 17:03:21 2020 +0800

    iocost: Fix check condition of iocg abs_vdebt
    
    [ Upstream commit d9012a59db54442d5b2fcfdfcded35cf566397d3 ]
    
    We shouldn't skip iocg when its abs_vdebt is not zero.
    
    Fixes: 0b80f9866e6b ("iocost: protect iocg->abs_vdebt with iocg->waitq.lock")
    Signed-off-by: Chengming Zhou <zhouchengming@bytedance.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f4f3b350a8af8c798c8239a6fbc5fbd839c5300
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Jul 21 21:45:51 2020 +0800

    ARM: socfpga: PM: add missing put_device() call in socfpga_setup_ocram_self_refresh()
    
    [ Upstream commit 3ad7b4e8f89d6bcc9887ca701cf2745a6aedb1a0 ]
    
    if of_find_device_by_node() succeed, socfpga_setup_ocram_self_refresh
    doesn't have a corresponding put_device(). Thus add a jump target to
    fix the exception handling for this function implementation.
    
    Fixes: 44fd8c7d4005 ("ARM: socfpga: support suspend to ram")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9600bdd6924afecf1104ecc5f83e068f585c856f
Author: Jon Lin <jon.lin@rock-chips.com>
Date:   Thu Jul 23 08:43:56 2020 +0800

    spi: rockchip: Fix error in SPI slave pio read
    
    [ Upstream commit 4294e4accf8d695ea5605f6b189008b692e3e82c ]
    
    The RXFLR is possible larger than rx_left in Rockchip SPI, fix it.
    
    Fixes: 01b59ce5dac8 ("spi: rockchip: use irq rather than polling")
    Signed-off-by: Jon Lin <jon.lin@rock-chips.com>
    Tested-by: Emil Renner Berthing <kernel@esmil.dk>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Reviewed-by: Emil Renner Berthing <kernel@esmil.dk>
    Link: https://lore.kernel.org/r/20200723004356.6390-3-jon.lin@rock-chips.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b1799662a61a71d6f986a831ba48c8af116a29e
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Sat Jul 11 11:31:11 2020 +0200

    io_uring: fix sq array offset calculation
    
    [ Upstream commit b36200f543ff07a1cb346aa582349141df2c8068 ]
    
    rings_size() sets sq_offset to the total size of the rings (the returned
    value which is used for memory allocation). This is wrong: sq array should
    be located within the rings, not after them. Set sq_offset to where it
    should be.
    
    Fixes: 75b28affdd6a ("io_uring: allocate the two rings together")
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Hristo Venev <hristo@venev.name>
    Cc: io-uring@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afa16b50e2aa3a2f20a6ed38e3f998b43f628911
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Fri Jul 24 03:50:13 2020 +0300

    regulator: fix memory leak on error path of regulator_register()
    
    [ Upstream commit 9177514ce34902b3adb2abd490b6ad05d1cfcb43 ]
    
    The change corrects registration and deregistration on error path
    of a regulator, the problem was manifested by a reported memory
    leak on deferred probe:
    
        as3722-regulator as3722-regulator: regulator 13 register failed -517
    
        # cat /sys/kernel/debug/kmemleak
        unreferenced object 0xecc43740 (size 64):
          comm "swapper/0", pid 1, jiffies 4294937640 (age 712.880s)
          hex dump (first 32 bytes):
            72 65 67 75 6c 61 74 6f 72 2e 32 34 00 5a 5a 5a  regulator.24.ZZZ
            5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a  ZZZZZZZZZZZZZZZZ
          backtrace:
            [<0c4c3d1c>] __kmalloc_track_caller+0x15c/0x2c0
            [<40c0ad48>] kvasprintf+0x64/0xd4
            [<109abd29>] kvasprintf_const+0x70/0x84
            [<c4215946>] kobject_set_name_vargs+0x34/0xa8
            [<62282ea2>] dev_set_name+0x40/0x64
            [<a39b6757>] regulator_register+0x3a4/0x1344
            [<16a9543f>] devm_regulator_register+0x4c/0x84
            [<51a4c6a1>] as3722_regulator_probe+0x294/0x754
            ...
    
    The memory leak problem was introduced as a side ef another fix in
    regulator_register() error path, I believe that the proper fix is
    to decouple device_register() function into its two compounds and
    initialize a struct device before assigning any values to its fields
    and then using it before actual registration of a device happens.
    
    This lets to call put_device() safely after initialization, and, since
    now a release callback is called, kfree(rdev->constraints) shall be
    removed to exclude a double free condition.
    
    Fixes: a3cde9534ebd ("regulator: core: fix regulator_register() error paths to properly release rdev")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Cc: Wen Yang <wenyang@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20200724005013.23278-1-vz@mleia.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80242590651c2a180a47f360dff1b73d1c175c09
Author: Gregory Herrero <gregory.herrero@oracle.com>
Date:   Fri Jul 17 16:33:38 2020 +0200

    recordmcount: only record relocation of type R_AARCH64_CALL26 on arm64.
    
    [ Upstream commit ea0eada45632f4807b2f49de951072283e2d781c ]
    
    Currently, if a section has a relocation to '_mcount' symbol, a new
    __mcount_loc entry will be added whatever the relocation type is.
    This is problematic when a relocation to '_mcount' is in the middle of a
    section and is not a call for ftrace use.
    
    Such relocation could be generated with below code for example:
        bool is_mcount(unsigned long addr)
        {
            return (target == (unsigned long) &_mcount);
        }
    
    With this snippet of code, ftrace will try to patch the mcount location
    generated by this code on module load and fail with:
    
        Call trace:
         ftrace_bug+0xa0/0x28c
         ftrace_process_locs+0x2f4/0x430
         ftrace_module_init+0x30/0x38
         load_module+0x14f0/0x1e78
         __do_sys_finit_module+0x100/0x11c
         __arm64_sys_finit_module+0x28/0x34
         el0_svc_common+0x88/0x194
         el0_svc_handler+0x38/0x8c
         el0_svc+0x8/0xc
        ---[ end trace d828d06b36ad9d59 ]---
        ftrace failed to modify
        [<ffffa2dbf3a3a41c>] 0xffffa2dbf3a3a41c
         actual:   66:a9:3c:90
        Initializing ftrace call sites
        ftrace record flags: 2000000
         (0)
        expected tramp: ffffa2dc6cf66724
    
    So Limit the relocation type to R_AARCH64_CALL26 as in perl version of
    recordmcount.
    
    Fixes: af64d2aa872a ("ftrace: Add arm64 support to recordmcount")
    Signed-off-by: Gregory Herrero <gregory.herrero@oracle.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Link: https://lore.kernel.org/r/20200717143338.19302-1-gregory.herrero@oracle.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a17c7bfe705eb64d6acfc388882e2db2d373bed
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Fri Jul 10 14:29:55 2020 -0500

    tpm: Require that all digests are present in TCG_PCR_EVENT2 structures
    
    [ Upstream commit 7f3d176f5f7e3f0477bf82df0f600fcddcdcc4e4 ]
    
    Require that the TCG_PCR_EVENT2.digests.count value strictly matches the
    value of TCG_EfiSpecIdEvent.numberOfAlgorithms in the event field of the
    TCG_PCClientPCREvent event log header. Also require that
    TCG_EfiSpecIdEvent.numberOfAlgorithms is non-zero.
    
    The TCG PC Client Platform Firmware Profile Specification section 9.1
    (Family "2.0", Level 00 Revision 1.04) states:
    
     For each Hash algorithm enumerated in the TCG_PCClientPCREvent entry,
     there SHALL be a corresponding digest in all TCG_PCR_EVENT2 structures.
     Note: This includes EV_NO_ACTION events which do not extend the PCR.
    
    Section 9.4.5.1 provides this description of
    TCG_EfiSpecIdEvent.numberOfAlgorithms:
    
     The number of Hash algorithms in the digestSizes field. This field MUST
     be set to a value of 0x01 or greater.
    
    Enforce these restrictions, as required by the above specification, in
    order to better identify and ignore invalid sequences of bytes at the
    end of an otherwise valid TPM2 event log. Firmware doesn't always have
    the means necessary to inform the kernel of the actual event log size so
    the kernel's event log parsing code should be stringent when parsing the
    event log for resiliency against firmware bugs. This is true, for
    example, when firmware passes the event log to the kernel via a reserved
    memory region described in device tree.
    
    POWER and some ARM systems use the "linux,sml-base" and "linux,sml-size"
    device tree properties to describe the memory region used to pass the
    event log from firmware to the kernel. Unfortunately, the
    "linux,sml-size" property describes the size of the entire reserved
    memory region rather than the size of the event long within the memory
    region and the event log format does not include information describing
    the size of the event log.
    
    tpm_read_log_of(), in drivers/char/tpm/eventlog/of.c, is where the
    "linux,sml-size" property is used. At the end of that function,
    log->bios_event_log_end is pointing at the end of the reserved memory
    region. That's typically 0x10000 bytes offset from "linux,sml-base",
    depending on what's defined in the device tree source.
    
    The firmware event log only fills a portion of those 0x10000 bytes and
    the rest of the memory region should be zeroed out by firmware. Even in
    the case of a properly zeroed bytes in the remainder of the memory
    region, the only thing allowing the kernel's event log parser to detect
    the end of the event log is the following conditional in
    __calc_tpm2_event_size():
    
            if (event_type == 0 && event_field->event_size == 0)
                    size = 0;
    
    If that wasn't there, __calc_tpm2_event_size() would think that a 16
    byte sequence of zeroes, following an otherwise valid event log, was
    a valid event.
    
    However, problems can occur if a single bit is set in the offset
    corresponding to either the TCG_PCR_EVENT2.eventType or
    TCG_PCR_EVENT2.eventSize fields, after the last valid event log entry.
    This could confuse the parser into thinking that an additional entry is
    present in the event log and exposing this invalid entry to userspace in
    the /sys/kernel/security/tpm0/binary_bios_measurements file. Such
    problems have been seen if firmware does not fully zero the memory
    region upon a warm reboot.
    
    This patch significantly raises the bar on how difficult it is for
    stale/invalid memory to confuse the kernel's event log parser but
    there's still, ultimately, a reliance on firmware to properly initialize
    the remainder of the memory region reserved for the event log as the
    parser cannot be expected to detect a stale but otherwise properly
    formatted firmware event log entry.
    
    Fixes: fd5c78694f3f ("tpm: fix handling of the TPM 2.0 event logs")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1fe27d227c6d2b375106522565c37d151d5b921
Author: Dilip Kota <eswara.kota@linux.intel.com>
Date:   Fri Jul 17 14:27:50 2020 +0800

    spi: lantiq: fix: Rx overflow error in full duplex mode
    
    [ Upstream commit 661ccf2b3f1360be50242726f7c26ced6a9e7d52 ]
    
    In full duplex mode, rx overflow error is observed. To overcome the error,
    wait until the complete data got received and proceed further.
    
    Fixes: 17f84b793c01 ("spi: lantiq-ssc: add support for Lantiq SSC SPI controller")
    Signed-off-by: Dilip Kota <eswara.kota@linux.intel.com>
    Link: https://lore.kernel.org/r/efb650b0faa49a00788c4e0ca8ef7196bdba851d.1594957019.git.eswara.kota@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e22730350d9edd40f125f473a3f20db46d41040f
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sat Jul 18 00:00:48 2020 +0800

    ARM: dts: sunxi: bananapi-m2-plus-v1.2: Fix CPU supply voltages
    
    [ Upstream commit e4dae01bf08b754de79072441c357737220b873f ]
    
    The Bananapi M2+ uses a GPIO line to change the effective resistance of
    the CPU supply regulator's feedback resistor network. The voltages
    described in the device tree were given directly by the vendor. This
    turns out to be slightly off compared to the real values.
    
    The updated voltages are based on calculations of the feedback resistor
    network, and verified down to three decimal places with a multi-meter.
    
    Fixes: 6eeb4180d4b9 ("ARM: dts: sunxi: h3-h5: Add Bananapi M2+ v1.2 device trees")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200717160053.31191-4-wens@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acbe4a1dc54cb8c21494997f7ab13d2991d0ae73
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sat Jul 18 00:00:47 2020 +0800

    ARM: dts: sunxi: bananapi-m2-plus-v1.2: Add regulator supply to all CPU cores
    
    [ Upstream commit 55b271af765b0e03d1ff29502f81644b1a3c87fd ]
    
    The device tree currently only assigns the a supply for the first CPU
    core, when in reality the regulator supply is shared by all four cores.
    This might cause an issue if the implementation does not realize the
    sharing of the supply.
    
    Assign the same regulator supply to the remaining CPU cores to address
    this.
    
    Fixes: 6eeb4180d4b9 ("ARM: dts: sunxi: h3-h5: Add Bananapi M2+ v1.2 device trees")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200717160053.31191-3-wens@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd9f5d2b399984d294b3324d3ddbf860863599dc
Author: yu kuai <yukuai3@huawei.com>
Date:   Thu Jun 4 20:33:01 2020 +0800

    ARM: at91: pm: add missing put_device() call in at91_pm_sram_init()
    
    [ Upstream commit f87a4f022c44e5b87e842a9f3e644fba87e8385f ]
    
    if of_find_device_by_node() succeed, at91_pm_sram_init() doesn't have
    a corresponding put_device(). Thus add a jump target to fix the exception
    handling for this function implementation.
    
    Fixes: d2e467905596 ("ARM: at91: pm: use the mmio-sram pool to access SRAM")
    Signed-off-by: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20200604123301.3905837-1-yukuai3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b3cb69fd559388306bb4a132a35abc29d7120c9
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Mon Jul 13 13:10:16 2020 +0200

    ARM: dts: gose: Fix ports node name for adv7612
    
    [ Upstream commit 59692ac5a7bb8c97ff440fc8917828083fbc38d6 ]
    
    When adding the adv7612 device node the ports node was misspelled as
    port, fix this.
    
    Fixes: bc63cd87f3ce924f ("ARM: dts: gose: add HDMI input")
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20200713111016.523189-1-niklas.soderlund+renesas@ragnatech.se
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e21665164e99f4dba79d14c3458b942b79e08a81
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Sat Jul 4 17:58:55 2020 +0200

    ARM: dts: gose: Fix ports node name for adv7180
    
    [ Upstream commit d344234abde938ae1062edb6c05852b0bafb4a03 ]
    
    When adding the adv7180 device node the ports node was misspelled as
    port, fix this.
    
    Fixes: 8cae359049a88b75 ("ARM: dts: gose: add composite video input")
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20200704155856.3037010-2-niklas.soderlund+renesas@ragnatech.se
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4361bec62bda94ef8499212f1052d9bb864a99ec
Author: Lu Wei <luwei32@huawei.com>
Date:   Fri Jul 10 17:30:18 2020 +0800

    platform/x86: intel-vbtn: Fix return value check in check_acpi_dev()
    
    [ Upstream commit 64dd4a5a7d214a07e3d9f40227ec30ac8ba8796e ]
    
    In the function check_acpi_dev(), if it fails to create
    platform device, the return value is ERR_PTR() or NULL.
    Thus it must use IS_ERR_OR_NULL() to check return value.
    
    Fixes: 332e081225fc ("intel-vbtn: new driver for Intel Virtual Button")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Lu Wei <luwei32@huawei.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed48a02d4cbd19408abb7ce2433b9d67901ce9fa
Author: Lu Wei <luwei32@huawei.com>
Date:   Fri Jul 10 17:30:17 2020 +0800

    platform/x86: intel-hid: Fix return value check in check_acpi_dev()
    
    [ Upstream commit 71fbe886ce6dd0be17f20aded9c63fe58edd2806 ]
    
    In the function check_acpi_dev(), if it fails to create
    platform device, the return value is ERR_PTR() or NULL.
    Thus it must use IS_ERR_OR_NULL() to check return value.
    
    Fixes: ecc83e52b28c ("intel-hid: new hid event driver for hotkeys")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Lu Wei <luwei32@huawei.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78448034fafbb6d7127b458bc5685e211ebf98fe
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun May 31 09:12:13 2020 +1000

    m68k: mac: Fix IOP status/control register writes
    
    [ Upstream commit 931fc82a6aaf4e2e4a5490addaa6a090d78c24a7 ]
    
    When writing values to the IOP status/control register make sure those
    values do not have any extraneous bits that will clear interrupt flags.
    
    To place the SCC IOP into bypass mode would be desirable but this is not
    achieved by writing IOP_DMAINACTIVE | IOP_RUN | IOP_AUTOINC | IOP_BYPASS
    to the control register. Drop this ineffective register write.
    
    Remove the flawed and unused iop_bypass() function. Make use of the
    unused iop_stop() function.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Cc: Joshua Thompson <funaho@jurai.org>
    Link: https://lore.kernel.org/r/09bcb7359a1719a18b551ee515da3c4c3cf709e6.1590880333.git.fthain@telegraphics.com.au
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8ad79dde63ffa94810ed6436d0847b6b730797c
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun May 31 09:12:13 2020 +1000

    m68k: mac: Don't send IOP message until channel is idle
    
    [ Upstream commit aeb445bf2194d83e12e85bf5c65baaf1f093bd8f ]
    
    In the following sequence of calls, iop_do_send() gets called when the
    "send" channel is not in the IOP_MSG_IDLE state:
    
            iop_ism_irq()
                    iop_handle_send()
                            (msg->handler)()
                                    iop_send_message()
                            iop_do_send()
    
    Avoid this by testing the channel state before calling iop_do_send().
    
    When sending, and iop_send_queue is empty, call iop_do_send() because
    the channel is idle. If iop_send_queue is not empty, iop_do_send() will
    get called later by iop_handle_send().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Cc: Joshua Thompson <funaho@jurai.org>
    Link: https://lore.kernel.org/r/6d667c39e53865661fa5a48f16829d18ed8abe54.1590880333.git.fthain@telegraphics.com.au
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38702b9081c997256fceb7fb9fab1abfbcc4fde0
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu Jul 9 09:17:05 2020 +0100

    clk: scmi: Fix min and max rate when registering clocks with discrete rates
    
    [ Upstream commit fcd2e0deae50bce48450f14c8fc5611b08d7438c ]
    
    Currently we are not initializing the scmi clock with discrete rates
    correctly. We fetch the min_rate and max_rate value only for clocks with
    ranges and ignore the ones with discrete rates. This will lead to wrong
    initialization of rate range when clock supports discrete rate.
    
    Fix this by using the first and the last rate in the sorted list of the
    discrete clock rates while registering the clock.
    
    Link: https://lore.kernel.org/r/20200709081705.46084-2-sudeep.holla@arm.com
    Fixes: 6d6a1d82eaef7 ("clk: add support for clocks provided by SCMI")
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reported-and-tested-by: Dien Pham <dien.pham.ry@renesas.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 047187eb0a3f5aa233ecd1d01102eeb8fc64a67a
Author: Qais Yousef <qais.yousef@arm.com>
Date:   Tue Jun 30 12:21:22 2020 +0100

    sched/uclamp: Fix initialization of struct uclamp_rq
    
    [ Upstream commit d81ae8aac85ca2e307d273f6dc7863a721bf054e ]
    
    struct uclamp_rq was zeroed out entirely in assumption that in the first
    call to uclamp_rq_inc() they'd be initialized correctly in accordance to
    default settings.
    
    But when next patch introduces a static key to skip
    uclamp_rq_{inc,dec}() until userspace opts in to use uclamp, schedutil
    will fail to perform any frequency changes because the
    rq->uclamp[UCLAMP_MAX].value is zeroed at init and stays as such. Which
    means all rqs are capped to 0 by default.
    
    Fix it by making sure we do proper initialization at init without
    relying on uclamp_rq_inc() doing it later.
    
    Fixes: 69842cba9ace ("sched/uclamp: Add CPU's clamp buckets refcounting")
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Tested-by: Lukasz Luba <lukasz.luba@arm.com>
    Link: https://lkml.kernel.org/r/20200630112123.12076-2-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d7115d29201a1dfa77ac1b7bc3f29606b14b700
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Sun Jul 5 12:39:17 2020 +0530

    arm64: dts: exynos: Fix silent hang after boot on Espresso
    
    [ Upstream commit b072714bfc0e42c984b8fd6e069f3ca17de8137a ]
    
    Once regulators are disabled after kernel boot, on Espresso board silent
    hang observed because of LDO7 being disabled.  LDO7 actually provide
    power to CPU cores and non-cpu blocks circuitries.  Keep this regulator
    always-on to fix this hang.
    
    Fixes: 9589f7721e16 ("arm64: dts: Add S2MPS15 PMIC node on exynos7-espresso")
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 420acbfdd64bde674b66f1f32a178a5d00920d71
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Fri Jun 19 23:03:30 2020 +0100

    firmware: arm_scmi: Fix SCMI genpd domain probing
    
    [ Upstream commit e0f1a30cf184821499eeb67daedd7a3f21bbcb0b ]
    
    When, at probe time, an SCMI communication failure inhibits the capacity
    to query power domains states, such domains should be skipped.
    
    Registering partially initialized SCMI power domains with genpd will
    causes kernel panic.
    
     arm-scmi timed out in resp(caller: scmi_power_state_get+0xa4/0xd0)
     scmi-power-domain scmi_dev.2: failed to get state for domain 9
     Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
     Mem abort info:
       ESR = 0x96000006
       EC = 0x25: DABT (current EL), IL = 32 bits
       SET = 0, FnV = 0
       EA = 0, S1PTW = 0
     Data abort info:
       ISV = 0, ISS = 0x00000006
       CM = 0, WnR = 0
     user pgtable: 4k pages, 48-bit VAs, pgdp=00000009f3691000
     [0000000000000000] pgd=00000009f1ca0003, p4d=00000009f1ca0003, pud=00000009f35ea003, pmd=0000000000000000
     Internal error: Oops: 96000006 [#1] PREEMPT SMP
     CPU: 2 PID: 381 Comm: bash Not tainted 5.8.0-rc1-00011-gebd118c2cca8 #2
     Hardware name: ARM LTD ARM Juno Development Platform/ARM Juno Development Platform, BIOS EDK II Jan  3 2020
     Internal error: Oops: 96000006 [#1] PREEMPT SMP
     pstate: 80000005 (Nzcv daif -PAN -UAO BTYPE=--)
     pc : of_genpd_add_provider_onecell+0x98/0x1f8
     lr : of_genpd_add_provider_onecell+0x48/0x1f8
     Call trace:
      of_genpd_add_provider_onecell+0x98/0x1f8
      scmi_pm_domain_probe+0x174/0x1e8
      scmi_dev_probe+0x90/0xe0
      really_probe+0xe4/0x448
      driver_probe_device+0xfc/0x168
      device_driver_attach+0x7c/0x88
      bind_store+0xe8/0x128
      drv_attr_store+0x2c/0x40
      sysfs_kf_write+0x4c/0x60
      kernfs_fop_write+0x114/0x230
      __vfs_write+0x24/0x50
      vfs_write+0xbc/0x1e0
      ksys_write+0x70/0xf8
      __arm64_sys_write+0x24/0x30
      el0_svc_common.constprop.3+0x94/0x160
      do_el0_svc+0x2c/0x98
      el0_sync_handler+0x148/0x1a8
      el0_sync+0x158/0x180
    
    Do not register any power domain that failed to be queried with genpd.
    
    Fixes: 898216c97ed2 ("firmware: arm_scmi: add device power domain support using genpd")
    Link: https://lore.kernel.org/r/20200619220330.12217-1-cristian.marussi@arm.com
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0155cd348be2c3ea83faea0dd722cb94aa378e36
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Jun 29 12:02:18 2020 +0200

    ARM: exynos: MCPM: Restore big.LITTLE cpuidle support
    
    [ Upstream commit ea9dd8f61c8a890843f68e8dc0062ce78365aab8 ]
    
    Call exynos_cpu_power_up(cpunr) unconditionally. This is needed by the
    big.LITTLE cpuidle driver and has no side-effects on other code paths.
    
    The additional soft-reset call during little core power up has been added
    to properly boot all cores on the Exynos5422-based boards with secure
    firmware (like Odroid XU3/XU4 family). This however broke big.LITTLE
    CPUidle driver, which worked only on boards without secure firmware (like
    Peach-Pit/Pi Chromebooks). Apply the workaround only when board is
    running under secure firmware.
    
    Fixes: 833b5794e330 ("ARM: EXYNOS: reset Little cores when cpu is up")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Lukasz Luba <lukasz.luba@arm.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 489ee1f219932aa08a170fb76546cb3b65b9e2b9
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Sun Jun 21 14:19:57 2020 +0300

    crypto: ccree - fix resource leak on error path
    
    [ Upstream commit 9bc6165d608d676f05d8bf156a2c9923ee38d05b ]
    
    Fix a small resource leak on the error path of cipher processing.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Fixes: 63ee04c8b491e ("crypto: ccree - add skcipher support")
    Cc: Markus Elfring <Markus.Elfring@web.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a291f9c21e4acf3429aacfa2e019d9965806c51
Author: Luis Chamberlain <mcgrof@kernel.org>
Date:   Fri Jun 19 20:47:28 2020 +0000

    blktrace: fix debugfs use after free
    
    [ Upstream commit bad8e64fb19d3a0de5e564d9a7271c31bd684369 ]
    
    On commit 6ac93117ab00 ("blktrace: use existing disk debugfs directory")
    merged on v4.12 Omar fixed the original blktrace code for request-based
    drivers (multiqueue). This however left in place a possible crash, if you
    happen to abuse blktrace while racing to remove / add a device.
    
    We used to use asynchronous removal of the request_queue, and with that
    the issue was easier to reproduce. Now that we have reverted to
    synchronous removal of the request_queue, the issue is still possible to
    reproduce, its however just a bit more difficult.
    
    We essentially run two instances of break-blktrace which add/remove
    a loop device, and setup a blktrace and just never tear the blktrace
    down. We do this twice in parallel. This is easily reproduced with the
    script run_0004.sh from break-blktrace [0].
    
    We can end up with two types of panics each reflecting where we
    race, one a failed blktrace setup:
    
    [  252.426751] debugfs: Directory 'loop0' with parent 'block' already present!
    [  252.432265] BUG: kernel NULL pointer dereference, address: 00000000000000a0
    [  252.436592] #PF: supervisor write access in kernel mode
    [  252.439822] #PF: error_code(0x0002) - not-present page
    [  252.442967] PGD 0 P4D 0
    [  252.444656] Oops: 0002 [#1] SMP NOPTI
    [  252.446972] CPU: 10 PID: 1153 Comm: break-blktrace Tainted: G            E     5.7.0-rc2-next-20200420+ #164
    [  252.452673] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1 04/01/2014
    [  252.456343] RIP: 0010:down_write+0x15/0x40
    [  252.458146] Code: eb ca e8 ae 22 8d ff cc cc cc cc cc cc cc cc cc cc cc cc
                   cc cc 0f 1f 44 00 00 55 48 89 fd e8 52 db ff ff 31 c0 ba 01 00
                   00 00 <f0> 48 0f b1 55 00 75 0f 48 8b 04 25 c0 8b 01 00 48 89
                   45 08 5d
    [  252.463638] RSP: 0018:ffffa626415abcc8 EFLAGS: 00010246
    [  252.464950] RAX: 0000000000000000 RBX: ffff958c25f0f5c0 RCX: ffffff8100000000
    [  252.466727] RDX: 0000000000000001 RSI: ffffff8100000000 RDI: 00000000000000a0
    [  252.468482] RBP: 00000000000000a0 R08: 0000000000000000 R09: 0000000000000001
    [  252.470014] R10: 0000000000000000 R11: ffff958d1f9227ff R12: 0000000000000000
    [  252.471473] R13: ffff958c25ea5380 R14: ffffffff8cce15f1 R15: 00000000000000a0
    [  252.473346] FS:  00007f2e69dee540(0000) GS:ffff958c2fc80000(0000) knlGS:0000000000000000
    [  252.475225] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  252.476267] CR2: 00000000000000a0 CR3: 0000000427d10004 CR4: 0000000000360ee0
    [  252.477526] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  252.478776] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  252.479866] Call Trace:
    [  252.480322]  simple_recursive_removal+0x4e/0x2e0
    [  252.481078]  ? debugfs_remove+0x60/0x60
    [  252.481725]  ? relay_destroy_buf+0x77/0xb0
    [  252.482662]  debugfs_remove+0x40/0x60
    [  252.483518]  blk_remove_buf_file_callback+0x5/0x10
    [  252.484328]  relay_close_buf+0x2e/0x60
    [  252.484930]  relay_open+0x1ce/0x2c0
    [  252.485520]  do_blk_trace_setup+0x14f/0x2b0
    [  252.486187]  __blk_trace_setup+0x54/0xb0
    [  252.486803]  blk_trace_ioctl+0x90/0x140
    [  252.487423]  ? do_sys_openat2+0x1ab/0x2d0
    [  252.488053]  blkdev_ioctl+0x4d/0x260
    [  252.488636]  block_ioctl+0x39/0x40
    [  252.489139]  ksys_ioctl+0x87/0xc0
    [  252.489675]  __x64_sys_ioctl+0x16/0x20
    [  252.490380]  do_syscall_64+0x52/0x180
    [  252.491032]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    And the other on the device removal:
    
    [  128.528940] debugfs: Directory 'loop0' with parent 'block' already present!
    [  128.615325] BUG: kernel NULL pointer dereference, address: 00000000000000a0
    [  128.619537] #PF: supervisor write access in kernel mode
    [  128.622700] #PF: error_code(0x0002) - not-present page
    [  128.625842] PGD 0 P4D 0
    [  128.627585] Oops: 0002 [#1] SMP NOPTI
    [  128.629871] CPU: 12 PID: 544 Comm: break-blktrace Tainted: G            E     5.7.0-rc2-next-20200420+ #164
    [  128.635595] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1 04/01/2014
    [  128.640471] RIP: 0010:down_write+0x15/0x40
    [  128.643041] Code: eb ca e8 ae 22 8d ff cc cc cc cc cc cc cc cc cc cc cc cc
                   cc cc 0f 1f 44 00 00 55 48 89 fd e8 52 db ff ff 31 c0 ba 01 00
                   00 00 <f0> 48 0f b1 55 00 75 0f 65 48 8b 04 25 c0 8b 01 00 48 89
                   45 08 5d
    [  128.650180] RSP: 0018:ffffa9c3c05ebd78 EFLAGS: 00010246
    [  128.651820] RAX: 0000000000000000 RBX: ffff8ae9a6370240 RCX: ffffff8100000000
    [  128.653942] RDX: 0000000000000001 RSI: ffffff8100000000 RDI: 00000000000000a0
    [  128.655720] RBP: 00000000000000a0 R08: 0000000000000002 R09: ffff8ae9afd2d3d0
    [  128.657400] R10: 0000000000000056 R11: 0000000000000000 R12: 0000000000000000
    [  128.659099] R13: 0000000000000000 R14: 0000000000000003 R15: 00000000000000a0
    [  128.660500] FS:  00007febfd995540(0000) GS:ffff8ae9afd00000(0000) knlGS:0000000000000000
    [  128.662204] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  128.663426] CR2: 00000000000000a0 CR3: 0000000420042003 CR4: 0000000000360ee0
    [  128.664776] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  128.666022] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  128.667282] Call Trace:
    [  128.667801]  simple_recursive_removal+0x4e/0x2e0
    [  128.668663]  ? debugfs_remove+0x60/0x60
    [  128.669368]  debugfs_remove+0x40/0x60
    [  128.669985]  blk_trace_free+0xd/0x50
    [  128.670593]  __blk_trace_remove+0x27/0x40
    [  128.671274]  blk_trace_shutdown+0x30/0x40
    [  128.671935]  blk_release_queue+0x95/0xf0
    [  128.672589]  kobject_put+0xa5/0x1b0
    [  128.673188]  disk_release+0xa2/0xc0
    [  128.673786]  device_release+0x28/0x80
    [  128.674376]  kobject_put+0xa5/0x1b0
    [  128.674915]  loop_remove+0x39/0x50 [loop]
    [  128.675511]  loop_control_ioctl+0x113/0x130 [loop]
    [  128.676199]  ksys_ioctl+0x87/0xc0
    [  128.676708]  __x64_sys_ioctl+0x16/0x20
    [  128.677274]  do_syscall_64+0x52/0x180
    [  128.677823]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The common theme here is:
    
    debugfs: Directory 'loop0' with parent 'block' already present
    
    This crash happens because of how blktrace uses the debugfs directory
    where it places its files. Upon init we always create the same directory
    which would be needed by blktrace but we only do this for make_request
    drivers (multiqueue) block drivers. When you race a removal of these
    devices with a blktrace setup you end up in a situation where the
    make_request recursive debugfs removal will sweep away the blktrace
    files and then later blktrace will also try to remove individual
    dentries which are already NULL. The inverse is also possible and hence
    the two types of use after frees.
    
    We don't create the block debugfs directory on init for these types of
    block devices:
    
      * request-based block driver block devices
      * every possible partition
      * scsi-generic
    
    And so, this race should in theory only be possible with make_request
    drivers.
    
    We can fix the UAF by simply re-using the debugfs directory for
    make_request drivers (multiqueue) and only creating the ephemeral
    directory for the other type of block devices. The new clarifications
    on relying on the q->blk_trace_mutex *and* also checking for q->blk_trace
    *prior* to processing a blktrace ensures the debugfs directories are
    only created if no possible directory name clashes are possible.
    
    This goes tested with:
    
      o nvme partitions
      o ISCSI with tgt, and blktracing against scsi-generic with:
        o block
        o tape
        o cdrom
        o media changer
      o blktests
    
    This patch is part of the work which disputes the severity of
    CVE-2019-19770 which shows this issue is not a core debugfs issue, but
    a misuse of debugfs within blktace.
    
    Fixes: 6ac93117ab00 ("blktrace: use existing disk debugfs directory")
    Reported-by: syzbot+603294af2d01acfdd6da@syzkaller.appspotmail.com
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: Omar Sandoval <osandov@fb.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Nicolai Stange <nstange@suse.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Cc: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34108464f80847c901cef793b1e849fe6d6094da
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Fri Jun 5 20:59:14 2020 +0200

    arm64: dts: qcom: msm8916: Replace invalid bias-pull-none property
    
    [ Upstream commit 1b6a1a162defe649c5599d661b58ac64bb6f31b6 ]
    
    msm8916-pins.dtsi specifies "bias-pull-none" for most of the audio
    pin configurations. This was likely copied from the qcom kernel fork
    where the same property was used for these audio pins.
    
    However, "bias-pull-none" actually does not exist at all - not in
    mainline and not in downstream. I can only guess that the original
    intention was to configure "no pull", i.e. bias-disable.
    
    Change it to that instead.
    
    Fixes: 143bb9ad85b7 ("arm64: dts: qcom: add audio pinctrls")
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200605185916.318494-2-stephan@gerhold.net
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2b639b2aa21c19feb8bc05a0457f731ffd934ac
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jun 5 16:59:18 2020 +1000

    crc-t10dif: Fix potential crypto notify dead-lock
    
    [ Upstream commit 3906f640224dbe7714b52b66d7d68c0812808e19 ]
    
    The crypto notify call occurs with a read mutex held so you must
    not do any substantial work directly.  In particular, you cannot
    call crypto_alloc_* as they may trigger further notifications
    which may dead-lock in the presence of another writer.
    
    This patch fixes this by postponing the work into a work queue and
    taking the same lock in the module init function.
    
    While we're at it this patch also ensures that all RCU accesses are
    marked appropriately (tested with sparse).
    
    Finally this also reveals a race condition in module param show
    function as it may be called prior to the module init function.
    It's fixed by testing whether crct10dif_tfm is NULL (this is true
    iff the init function has not completed assuming fallback is false).
    
    Fixes: 11dcb1037f40 ("crc-t10dif: Allow current transform to be...")
    Fixes: b76377543b73 ("crc-t10dif: Pick better transform if one...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c73eec04e6665f020ffb38890612811c12392afe
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Thu May 28 15:22:37 2020 -0500

    EDAC: Fix reference count leaks
    
    [ Upstream commit 17ed808ad243192fb923e4e653c1338d3ba06207 ]
    
    When kobject_init_and_add() returns an error, it should be handled
    because kobject_init_and_add() takes a reference even when it fails. If
    this function returns an error, kobject_put() must be called to properly
    clean up the memory associated with the object.
    
    Therefore, replace calling kfree() and call kobject_put() and add a
    missing kobject_put() in the edac_device_register_sysfs_main_kobj()
    error path.
    
     [ bp: Massage and merge into a single patch. ]
    
    Fixes: b2ed215a3338 ("Kobject: change drivers/edac to use kobject_init_and_add")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200528202238.18078-1-wu000273@umn.edu
    Link: https://lkml.kernel.org/r/20200528203526.20908-1-wu000273@umn.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 192b8516c99c70b83e34a0ffe85b24909a96d1da
Author: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
Date:   Wed Jun 3 15:28:36 2020 +0200

    arm64: dts: rockchip: fix rk3399-puma gmac reset gpio
    
    [ Upstream commit 8a445086f8af0b7b9bd8d1901d6f306bb154f70d ]
    
    The puma gmac node currently uses opposite active-values for the
    gmac phy reset pin. The gpio-declaration uses active-high while the
    separate snps,reset-active-low property marks the pin as active low.
    
    While on the kernel side this works ok, other DT users may get
    confused - as seen with uboot right now.
    
    So bring this in line and make both properties match, similar to the
    other Rockchip board.
    
    Fixes: 2c66fc34e945 ("arm64: dts: rockchip: add RK3399-Q7 (Puma) SoM")
    Signed-off-by: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20200603132836.362519-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da9dfd06dbaa6f5fa8277cba3429b5cd75583147
Author: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
Date:   Thu Jun 4 11:12:39 2020 +0200

    arm64: dts: rockchip: fix rk3399-puma vcc5v0-host gpio
    
    [ Upstream commit 7a7184f6cfa9279f1a1c10a1845d247d7fad54ff ]
    
    The puma vcc5v0_host regulator node currently uses opposite active-values
    for the enable pin. The gpio-declaration uses active-high while the
    separate enable-active-low property marks the pin as active low.
    
    While on the kernel side this works ok, other DT users may get
    confused - as seen with uboot right now.
    
    So bring this in line and make both properties match, similar to the
    gmac fix.
    
    Fixes: 2c66fc34e945 ("arm64: dts: rockchip: add RK3399-Q7 (Puma) SoM")
    Signed-off-by: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20200604091239.424318-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 066f85458d9c84a0dc790286010f1aacbfbab8a3
Author: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
Date:   Sun Jun 7 23:29:09 2020 +0200

    arm64: dts: rockchip: fix rk3368-lion gmac reset gpio
    
    [ Upstream commit 2300e6dab473e93181cf76e4fe6671aa3d24c57b ]
    
    The lion gmac node currently uses opposite active-values for the
    gmac phy reset pin. The gpio-declaration uses active-high while the
    separate snps,reset-active-low property marks the pin as active low.
    
    While on the kernel side this works ok, other DT users may get
    confused - as seen with uboot right now.
    
    So bring this in line and make both properties match, similar to the
    other Rockchip board.
    
    Fixes: d99a02bcfa81 ("arm64: dts: rockchip: add RK3368-uQ7 (Lion) SoM")
    Signed-off-by: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20200607212909.920575-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8eb09e542c18c91da15e0d89d5571dc6723c6d3
Author: Peng Liu <iwtbavbm@gmail.com>
Date:   Tue Jun 9 23:09:36 2020 +0800

    sched: correct SD_flags returned by tl->sd_flags()
    
    [ Upstream commit 9b1b234bb86bcdcdb142e900d39b599185465dbb ]
    
    During sched domain init, we check whether non-topological SD_flags are
    returned by tl->sd_flags(), if found, fire a waning and correct the
    violation, but the code failed to correct the violation. Correct this.
    
    Fixes: 143e1e28cb40 ("sched: Rework sched_domain topology definition")
    Signed-off-by: Peng Liu <iwtbavbm@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Link: https://lkml.kernel.org/r/20200609150936.GA13060@iZj6chx1xj0e0buvshuecpZ
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8d9908c9d3db9fb04bfd9e527a6e14c4c2bab4c
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Tue Jun 9 14:37:48 2020 +0200

    sched/fair: Fix NOHZ next idle balance
    
    [ Upstream commit 3ea2f097b17e13a8280f1f9386c331b326a3dbef ]
    
    With commit:
      'b7031a02ec75 ("sched/fair: Add NOHZ_STATS_KICK")'
    rebalance_domains of the local cfs_rq happens before others idle cpus have
    updated nohz.next_balance and its value is overwritten.
    
    Move the update of nohz.next_balance for other idles cpus before balancing
    and updating the next_balance of local cfs_rq.
    
    Also, the nohz.next_balance is now updated only if all idle cpus got a
    chance to rebalance their domains and the idle balance has not been aborted
    because of new activities on the CPU. In case of need_resched, the idle
    load balance will be kick the next jiffie in order to address remaining
    ilb.
    
    Fixes: b7031a02ec75 ("sched/fair: Add NOHZ_STATS_KICK")
    Reported-by: Peng Liu <iwtbavbm@gmail.com>
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Link: https://lkml.kernel.org/r/20200609123748.18636-1-vincent.guittot@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 072d1300f1ce2a47881a368390c31e2ed347d050
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Thu Jun 11 10:32:38 2020 +0800

    x86/mce/inject: Fix a wrong assignment of i_mce.status
    
    [ Upstream commit 5d7f7d1d5e01c22894dee7c9c9266500478dca99 ]
    
    The original code is a nop as i_mce.status is or'ed with part of itself,
    fix it.
    
    Fixes: a1300e505297 ("x86/ras/mce_amd_inj: Trigger deferred and thresholding errors interrupts")
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Link: https://lkml.kernel.org/r/20200611023238.3830-1-zhenzhong.duan@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a36ff7a40d11f066c5654be82c35a10cc0c40d47
Author: Mike Tipton <mdtipton@codeaurora.org>
Date:   Fri Feb 14 18:12:32 2020 -0800

    clk: qcom: clk-rpmh: Wait for completion when enabling clocks
    
    [ Upstream commit dad4e7fda4bdc1a6357db500a7bab8843c08e521 ]
    
    The current implementation always uses rpmh_write_async, which doesn't
    wait for completion. That's fine for disable requests since there's no
    immediate need for the clocks and they can be disabled in the
    background. However, for enable requests we need to ensure the clocks
    are actually enabled before returning to the client. Otherwise, clients
    can end up accessing their HW before the necessary clocks are enabled,
    which can lead to bus errors.
    
    Use the synchronous version of this API (rpmh_write) for enable requests
    in the active set to ensure completion.
    
    Completion isn't required for sleep/wake sets, since they don't take
    effect until after we enter sleep. All rpmh requests are automatically
    flushed prior to entering sleep.
    
    Fixes: 9c7e47025a6b ("clk: qcom: clk-rpmh: Add QCOM RPMh clock driver")
    Signed-off-by: Mike Tipton <mdtipton@codeaurora.org>
    Link: https://lkml.kernel.org/r/20200215021232.1149-1-mdtipton@codeaurora.org
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    [sboyd@kernel.org: Reorg code a bit for readability, rename to 'wait' to
    make local variable not conflict with completion.h mechanism]
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a02df82a59c3dbc7bf657efca82e1641ca472eb4
Author: Liu Yong <pkfxxxing@gmail.com>
Date:   Wed Aug 12 23:56:44 2020 -0700

    fs/io_uring.c: Fix uninitialized variable is referenced in io_submit_sqe
    
    the commit <a4d61e66ee4a> ("<io_uring: prevent re-read of sqe->opcode>")
    caused another vulnerability. After io_get_req(), the sqe_submit struct
    in req is not initialized, but the following code defaults that
    req->submit.opcode is available.
    
    Signed-off-by: Liu Yong <pkfxxxing@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd1584865c12a90d7928c2646eb581518a3600e0
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Jul 28 13:09:03 2020 +0200

    nvme: add a Identify Namespace Identification Descriptor list quirk
    
    commit 5bedd3afee8eb01ccd256f0cd2cc0fa6f841417a upstream.
    
    Add a quirk for a device that does not support the Identify Namespace
    Identification Descriptor list despite claiming 1.3 compliance.
    
    Fixes: ea43d9709f72 ("nvme: fix identify error status silent ignore")
    Reported-by: Ingo Brunberg <ingo_brunberg@web.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Ingo Brunberg <ingo_brunberg@web.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Cc: Plamen Lyutov <plamen.lyutov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 039b66468fc4e3fa2d18c953f91918f4458aab93
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Fri Jul 10 16:19:39 2020 +0100

    HID: input: Fix devices that return multiple bytes in battery report
    
    commit 4f57cace81438cc873a96f9f13f08298815c9b51 upstream.
    
    Some devices, particularly the 3DConnexion Spacemouse wireless 3D
    controllers, return more than just the battery capacity in the battery
    report. The Spacemouse devices return an additional byte with a device
    specific field. However, hidinput_query_battery_capacity() only
    requests a 2 byte transfer.
    
    When a spacemouse is connected via USB (direct wire, no wireless dongle)
    and it returns a 3 byte report instead of the assumed 2 byte battery
    report the larger transfer confuses and frightens the USB subsystem
    which chooses to ignore the transfer. Then after 2 seconds assume the
    device has stopped responding and reset it. This can be reproduced
    easily by using a wired connection with a wireless spacemouse. The
    Spacemouse will enter a loop of resetting every 2 seconds which can be
    observed in dmesg.
    
    This patch solves the problem by increasing the transfer request to 4
    bytes instead of 2. The fix isn't particularly elegant, but it is simple
    and safe to backport to stable kernels. A further patch will follow to
    more elegantly handle battery reports that contain additional data.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Cc: Darren Hart <darren@dvhart.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: stable@vger.kernel.org
    Tested-by: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16d2fb138f98eb365f48f19fd3dce914be012b21
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Thu Jul 30 15:45:54 2020 -0700

    tracepoint: Mark __tracepoint_string's __used
    
    commit f3751ad0116fb6881f2c3c957d66a9327f69cefb upstream.
    
    __tracepoint_string's have their string data stored in .rodata, and an
    address to that data stored in the "__tracepoint_str" section. Functions
    that refer to those strings refer to the symbol of the address. Compiler
    optimization can replace those address references with references
    directly to the string data. If the address doesn't appear to have other
    uses, then it appears dead to the compiler and is removed. This can
    break the /tracing/printk_formats sysfs node which iterates the
    addresses stored in the "__tracepoint_str" section.
    
    Like other strings stored in custom sections in this header, mark these
    __used to inform the compiler that there are other non-obvious users of
    the address, so they should still be emitted.
    
    Link: https://lkml.kernel.org/r/20200730224555.2142154-2-ndesaulniers@google.com
    
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Cc: stable@vger.kernel.org
    Fixes: 102c9323c35a8 ("tracing: Add __tracepoint_string() to export string pointers")
    Reported-by: Tim Murray <timmurray@google.com>
    Reported-by: Simon MacMullen <simonmacm@google.com>
    Suggested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
