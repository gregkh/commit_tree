commit 89c5f133f3df7495bda36147198993691e55bf85
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Feb 11 09:05:09 2013 -0800

    Linux 3.7.7

commit d7da09805d410e24ea7d79990e9a2055e19e267e
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Jan 30 16:35:02 2013 -0500

    USB: EHCI: fix for leaking isochronous data
    
    commit b09a61cc0bc2a7151f4ab652489e85253d5d0175 upstream.
    
    This patch (as1653) fixes a bug in ehci-hcd.  Unlike iTD entries, an
    siTD entry in the periodic schedule may not complete until the frame
    after the one it belongs to.  Consequently, when scanning the periodic
    schedule it is necessary to start with the frame _preceding_ the one
    where the previous scan ended.
    
    Not doing this properly can result in memory leaks and failures to
    complete isochronous URBs.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Andy Leiserson <andy@leiserson.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43f6cfceea3a9f094da2842e7c9a763b1efdd1a4
Author: David Moore <david.moore@gmail.com>
Date:   Wed Jan 23 22:19:49 2013 -0800

    usb: Prevent dead ports when xhci is not enabled
    
    commit 58b2939b4d5a030eaec469d29812ab8477ee7e76 upstream.
    
    When the xHCI driver is not available, actively switch the ports to EHCI
    mode since some BIOSes leave them in xHCI mode where they would
    otherwise appear dead.  This was discovered on a  Dell Optiplex 7010,
    but it's possible other systems could be affected.
    
    This should be backported to kernels as old as 3.0, that contain the
    commit 69e848c2090aebba5698a1620604c7dccb448684 "Intel xhci: Support
    EHCI/xHCI port switching."
    
    Signed-off-by: David Moore <david.moore@gmail.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50b0e5fa40ea3e0460174a449f3853d5790c6a16
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Jan 17 10:32:16 2013 -0500

    USB: XHCI: fix memory leak of URB-private data
    
    commit 48c3375c5f69b1c2ef3d1051a0009cb9bce0ce24 upstream.
    
    This patch (as1640) fixes a memory leak in xhci-hcd.  The urb_priv
    data structure isn't always deallocated in the handle_tx_event()
    routine for non-control transfers.  The patch adds a kfree() call so
    that all paths end up freeing the memory properly.
    
    This patch should be backported to kernels as old as 2.6.36, that
    contain the commit 8e51adccd4c4b9ffcd509d7f2afce0a906139f75 "USB: xHCI:
    Introduce urb_priv structure"
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Reported-and-tested-by: Martin Mokrejs <mmokrejs@fold.natur.cuni.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2fdda608b6dc8c15496cfbf23d0e37efbc28532
Author: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Date:   Fri Jan 11 13:36:35 2013 -0800

    xhci: Fix TD size for isochronous URBs.
    
    commit f18f8ed2a9adc41c2d9294b85b6af115829d2af1 upstream.
    
    To calculate the TD size for a particular TRB in an isoc TD, we need
    know the endpoint's max packet size.  Isochronous endpoints also encode
    the number of additional service opportunities in their wMaxPacketSize
    field.  The TD size calculation did not mask off those bits before using
    the field.  This resulted in incorrect TD size information for
    isochronous TRBs when an URB frame buffer crossed a 64KB boundary.
    
    For example:
     - an isoc endpoint has 2 additional service opportunites and
       a max packet size of 1020 bytes
     - a frame transfer buffer contains 3060 bytes
     - one frame buffer crosses a 64KB boundary, and must be split into
       one 1276 byte TRB, and one 1784 byte TRB.
    
    The TD size is is the number of packets that remain to be transferred
    for a TD after processing all the max packet sized packets in the
    current TRB and all previous TRBs.
    
    For this TD, the number of packets to be transferred is (3060 / 1020),
    or 3.  The first TRB contains 1276 bytes, which means it contains one
    full packet, and a 256 byte remainder.  After processing all the max
    packet-sized packets in the first TRB, the host will have 2 packets left
    to transfer.
    
    The old code would calculate the TD size for the first TRB as:
    
    total packet count = DIV_ROUND_UP (TD length / endpoint wMaxPacketSize)
    total packet count - (first TRB length / endpoint wMaxPacketSize)
    
    The math should have been:
    
    total packet count = DIV_ROUND_UP (3060 / 1020) = 3
    3 - (1276 / 1020) = 2
    
    Since the old code didn't mask off the additional service interval bits
    from the wMaxPacketSize field, the math ended up as
    
    total packet count = DIV_ROUND_UP (3060 / 5116) = 1
    1 - (1276 / 5116) = 1
    
    Fix this by masking off the number of additional service opportunities
    in the wMaxPacketSize field.
    
    This patch should be backported to stable kernels as old as 3.0, that
    contain the commit 4da6e6f247a2601ab9f1e63424e4d944ed4124f3 "xhci 1.0:
    Update TD size field format."  It may not apply well to kernels older
    than 3.2 because of commit 29cc88979a8818cd8c5019426e945aed118b400e
    "USB: use usb_endpoint_maxp() instead of le16_to_cpu()".
    
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb40991e6a76aea907d004282e70994e418307ac
Author: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Date:   Fri Jan 11 11:19:07 2013 -0800

    xhci: Fix isoc TD encoding.
    
    commit 760973d2a74b93eb1697981f7448f0e62767cfc4 upstream.
    
    An isochronous TD is comprised of one isochronous TRB chained to zero or
    more normal TRBs.  Only the isoc TRB has the TBC and TLBPC fields.  The
    normal TRBs must set those fields to zeroes.  The code was setting the
    TBC and TLBPC fields for both isoc and normal TRBs.  Fix this.
    
    This should be backported to stable kernels as old as 3.0, that contain
    the commit b61d378f2da41c748aba6ca19d77e1e1c02bcea5 " xhci 1.0: Set
    transfer burst last packet count field."
    
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4252879491482572dfb50609b84436a8b512396f
Author: Nickolai Zeldovich <nickolai@csail.mit.edu>
Date:   Mon Jan 7 22:39:31 2013 -0500

    drivers: xhci: fix incorrect bit test
    
    commit ba7b5c22d33136a5612ca5ef8d31564dcc501126 upstream.
    
    Fix incorrect bit test that originally showed up in
    4ee823b83bc9851743fab756c76b27d6a1e2472b "USB/xHCI: Support
    device-initiated USB 3.0 resume."
    
    Use '&' instead of '&&'.
    
    This should be backported to kernels as old as 3.4.
    
    Signed-off-by: Nickolai Zeldovich <nickolai@csail.mit.edu>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caa891a5cd4f5867cd65cde8239459349ec2668f
Author: fangxiaozhi <huananhu@huawei.com>
Date:   Mon Feb 4 15:16:34 2013 +0800

    USB: storage: optimize to match the Huawei USB storage devices and support new switch command
    
    commit 200e0d994d9d1919b28c87f1a5fb99a8e13b8a0f upstream.
    
    1. Optimize the match rules with new macro for Huawei USB storage devices,
       to avoid to load USB storage driver for the modem interface
       with Huawei devices.
    2. Add to support new switch command for new Huawei USB dongles.
    
    Signed-off-by: fangxiaozhi <huananhu@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08b4bfd0337b1966b7bee97fc8558e33c629c994
Author: fangxiaozhi <huananhu@huawei.com>
Date:   Mon Feb 4 15:14:46 2013 +0800

    USB: storage: Define a new macro for USB storage match rules
    
    commit 07c7be3d87e5cdaf5f94c271c516456364ef286c upstream.
    
    1. Define a new macro for USB storage match rules:
        matching with Vendor ID and interface descriptors.
    
    Signed-off-by: fangxiaozhi <huananhu@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 390077b4fc3a6b8977e4586453124aaf655c3680
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Thu Jan 24 10:31:28 2013 +0800

    usb: Using correct way to clear usb3.0 device's remote wakeup feature.
    
    commit 54a3ac0c9e5b7213daa358ce74d154352657353a upstream.
    
    Usb3.0 device defines function remote wakeup which is only for interface
    recipient rather than device recipient. This is different with usb2.0 device's
    remote wakeup feature which is defined for device recipient. According usb3.0
    spec 9.4.5, the function remote wakeup can be modified by the SetFeature()
    requests using the FUNCTION_SUSPEND feature selector. This patch is to use
    correct way to disable usb3.0 device's function remote wakeup after suspend
    error and resuming.
    
    This should be backported to kernels as old as 3.4, that contain the
    commit 623bef9e03a60adc623b09673297ca7a1cdfb367 "USB/xhci: Enable remote
    wakeup for USB3 devices."
    
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93dffb77d2ce4266951e1b7b5de06866c0755620
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Jan 30 16:36:40 2013 -0500

    USB: EHCI: fix bug in scheduling periodic split transfers
    
    commit 3e619d04159be54b3daa0b7036b0ce9e067f4b5d upstream.
    
    This patch (as1654) fixes a very old bug in ehci-hcd, connected with
    scheduling of periodic split transfers.  The calculations for
    full/low-speed bus usage are all carried out after the correction for
    bit-stuffing has been applied, but the values in the max_tt_usecs
    array assume it hasn't been.  The array should allow for allocation of
    up to 90% of the bus capacity, which is 900 us, not 780 us.
    
    The symptom caused by this bug is that any isochronous transfer to a
    full-speed device with a maxpacket size larger than about 980 bytes is
    always rejected with a -ENOSPC error.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf7937925cb086b9a5acb220fcd431506842c25e
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Jan 25 17:17:43 2013 -0500

    USB: EHCI: fix timer bug affecting port resume
    
    commit ee74290b7853db9d5fd64db70e5c175241c59fba upstream.
    
    This patch (as1652) fixes a long-standing bug in ehci-hcd.  The driver
    relies on status polls to know when to stop port-resume signalling.
    It uses the root-hub status timer to schedule these status polls.  But
    when the driver for the root hub is resumed, the timer is rescheduled
    to go off immediately -- before the port is ready.  When this happens
    the timer does not get re-enabled, which prevents the port resume from
    finishing until some other event occurs.
    
    The symptom is that when a new device is plugged in, it doesn't get
    recognized or enumerated until lsusb is run or something else happens.
    
    The solution is to re-enable the root-hub status timer after every
    status poll while a port resume is in progress.
    
    This bug hasn't surfaced before now because we never used to try to
    suspend the root hub in the middle of a port resume (except by
    coincidence).
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Norbert Preining <preining@logic.at>
    Tested-by: Ming Lei <ming.lei@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d01875f11f05f76fc471cec94d701201c1b34389
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Jan 25 16:54:22 2013 -0500

    USB: EHCI: unlink one async QH at a time
    
    commit 6e0c3339a6f19d748f16091d0a05adeb1e1f822b upstream.
    
    This patch (as1648) fixes a regression affecting nVidia EHCI
    controllers.  Evidently they don't like to have more than one async QH
    unlinked at a time.  I can't imagine how they manage to mess it up,
    but at least one of them does.
    
    The patch changes the async unlink logic in two ways:
    
            Each time an IAA cycle is started, only the first QH on the
            async unlink list is handled (rather than all of them).
    
            Async QHs do not all get unlinked as soon as they have been
            empty for long enough.  Instead, only the last one (i.e., the
            one that has been on the schedule the longest) is unlinked,
            and then only if no other unlinks are in progress at the time.
    
    This means that when multiple QHs are empty, they won't be unlinked as
    quickly as before.  That's okay; it won't affect correct operation of
    the driver or add an excessive load.  Multiple unlinks tend to be
    relatively rare in any case.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Piergiorgio Sartor <piergiorgio.sartor@nexgo.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 269ef9f3805a5ec17ddf3dd5f13d5e09598c155b
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Jan 25 16:52:45 2013 -0500

    USB: EHCI: remove ASS/PSS polling timeout
    
    commit 55bcdce8a8228223ec4d17d8ded8134ed265d2c5 upstream.
    
    This patch (as1647) attempts to work around a problem that seems to
    affect some nVidia EHCI controllers.  They sometimes take a very long
    time to turn off their async or periodic schedules.  I don't know if
    this is a result of other problems, but in any case it seems wise not
    to depend on schedule enables or disables taking effect in any
    specific length of time.
    
    The patch removes the existing 20-ms timeout for enabling and
    disabling the schedules.  The driver will now continue to poll the
    schedule state at 1-ms intervals until the controller finally decides
    to obey the most recent command issued by the driver.  Just in case
    this hides a problem, a debugging message will be logged if the
    controller takes longer than 20 polls.
    
    I don't know if this will actually fix anything, but it can't hurt.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Tested-by: Piergiorgio Sartor <piergiorgio.sartor@nexgo.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d32a2fb27dc31241ea5e269bba18fcea3db9092
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Mon Jan 28 16:48:54 2013 +0100

    USB: qcserial: add Telit Gobi QDL device
    
    commit 78796ae17eacedcdcaaeb03ba73d2e532a4c8f83 upstream.
    
    Add VID and PID for Telit Gobi QDL device
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb2397509a11cdcf8969cf6ee3098f5c4155385
Author: Bjørn Mork <bjorn@mork.no>
Date:   Fri Feb 1 12:06:51 2013 +0100

    USB: option: add Changhong CH690
    
    commit d4fa681541aa7bf8570d03426dd7ba663a71c467 upstream.
    
    New device with 3 serial interfaces:
    
     If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend) Sub=ff Prot=ff
     If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend) Sub=ff Prot=ff
     If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend) Sub=ff Prot=ff
     If#= 3 Alt= 0 #EPs= 2 Cls=08(stor) Sub=06 Prot=50
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 777b56f1bef8460365fdee2558026561673e84f3
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Mon Jan 28 16:47:10 2013 +0100

    USB: option: add support for Telit LE920
    
    commit 03eb466f276ceef9dcf023dc5474db02af68aad9 upstream.
    
    Add PID and special handling for Telit LE920
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a53816ca0d42f3f02e89f1ac8c4b6aa8aa2f8e5
Author: Sven Killig <sven@killig.de>
Date:   Fri Feb 1 23:43:06 2013 +0100

    USB: ftdi_sio: add PID/VID entries for ELV WS 300 PC II
    
    commit c249f911406efcc7456cb4af79396726bf7b8c57 upstream.
    
    Add PID/VID entries for ELV WS 300 PC II weather station
    
    Signed-off-by: Sven Killig <sven@killig.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39c1a5bbb479c779203d2c5afacec46ef133ded3
Author: Petr Kubánek <petr@kubanek.net>
Date:   Fri Feb 1 17:24:04 2013 +0100

    USB: ftdi_sio: add Zolix FTDI PID
    
    commit 0ba3b2ccc72b3df5c305d61f59d93ab0f0e87991 upstream.
    
    Add support for Zolix Omni 1509 monochromator custom USB-RS232 converter.
    
    Signed-off-by: Petr Kubánek <petr@kubanek.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0ae761cced817cbe1d7a34bd18f615869286f9e
Author: Haojian Zhuang <haojian.zhuang@linaro.org>
Date:   Mon Feb 4 14:28:54 2013 -0800

    drivers/rtc/rtc-pl031.c: fix the missing operation on enable
    
    commit e7e034e18a0ab6bafb2425c3242cac311164f4d6 upstream.
    
    The RTC control register should be enabled in the process of
    initializing.
    
    Without this patch, I failed to enable RTC in Hisilicon Hi3620 SoC.  The
    register mapping section in RTC is always read as zero.  So I doubt that
    ST guys may already enable this register in bootloader.  So they won't
    meet this issue.
    
    Signed-off-by: Haojian Zhuang <haojian.zhuang@linaro.org>
    Cc: Srinidhi Kasagar <srinidhi.kasagar@stericsson.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aec357f03412b4d2ca8d9a9019994b810bf64497
Author: Jan Luebbe <jlu@pengutronix.de>
Date:   Mon Feb 4 14:28:53 2013 -0800

    drivers/rtc/rtc-isl1208.c: call rtc_update_irq() from the alarm irq handler
    
    commit 72fca4a4b32dc778b5b885c3498700e42b610d49 upstream.
    
    Previously the alarm event was not propagated into the RTC subsystem.
    By adding a call to rtc_update_irq, this fixes a timeout problem with
    the hwclock utility.
    
    Signed-off-by: Jan Luebbe <jlu@pengutronix.de>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf032052de7afcebd9cd0c248de3b46525afba7e
Author: Tony Lu <zlu@tilera.com>
Date:   Mon Feb 4 14:28:46 2013 -0800

    mm/hugetlb: set PTE as huge in hugetlb_change_protection and remove_migration_pte
    
    commit be7517d6ab9722f0abad6ba5ffd39cfced95549c upstream.
    
    When setting a huge PTE, besides calling pte_mkhuge(), we also need to
    call arch_make_huge_pte(), which we indeed do in make_huge_pte(), but we
    forget to do in hugetlb_change_protection() and remove_migration_pte().
    
    Signed-off-by: Zhigang Lu <zlu@tilera.com>
    Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
    Reviewed-by: Michal Hocko <mhocko@suse.cz>
    Acked-by: Hillf Danton <dhillf@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b72ca7da1b9832b5ca122bb29d1f6bcad760f7d5
Author: Vyacheslav Dubeyko <slava@dubeyko.com>
Date:   Mon Feb 4 14:28:41 2013 -0800

    nilfs2: fix fix very long mount time issue
    
    commit a9bae189542e71f91e61a4428adf6e5a7dfe8063 upstream.
    
    There exists a situation when GC can work in background alone without
    any other filesystem activity during significant time.
    
    The nilfs_clean_segments() method calls nilfs_segctor_construct() that
    updates superblocks in the case of NILFS_SC_SUPER_ROOT and
    THE_NILFS_DISCONTINUED flags are set.  But when GC is working alone the
    nilfs_clean_segments() is called with unset THE_NILFS_DISCONTINUED flag.
    As a result, the update of superblocks doesn't occurred all this time
    and in the case of SPOR superblocks keep very old values of last super
    root placement.
    
    SYMPTOMS:
    
    Trying to mount a NILFS2 volume after SPOR in such environment ends with
    very long mounting time (it can achieve about several hours in some
    cases).
    
    REPRODUCING PATH:
    
    1. It needs to use external USB HDD, disable automount and doesn't
       make any additional filesystem activity on the NILFS2 volume.
    
    2. Generate temporary file with size about 100 - 500 GB (for example,
       dd if=/dev/zero of=<file_name> bs=1073741824 count=200).  The size of
       file defines duration of GC working.
    
    3. Then it needs to delete file.
    
    4. Start GC manually by means of command "nilfs-clean -p 0".  When you
       start GC by means of such way then, at the end, superblocks is updated
       by once.  So, for simulation of SPOR, it needs to wait sometime (15 -
       40 minutes) and simply switch off USB HDD manually.
    
    5. Switch on USB HDD again and try to mount NILFS2 volume.  As a
       result, NILFS2 volume will mount during very long time.
    
    REPRODUCIBILITY: 100%
    
    FIX:
    
    This patch adds checking that superblocks need to update and set
    THE_NILFS_DISCONTINUED flag before nilfs_clean_segments() call.
    
    Reported-by: Sergey Alexandrov <splavgm@gmail.com>
    Signed-off-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Tested-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcba35ace5cc816fda36a69dbebc3a1565034146
Author: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Date:   Thu Jan 3 21:27:34 2013 +0300

    mtd: davinci_nand: fix modular build with CONFIG_OF=y
    
    commit 7a9c83888761a9a26049b439dc0b09e7ea8a854b upstream.
    
    Commit cdeadd712f52b16a9285386d61ee26fd14eb4085 (mtd: nand: davinci: add OF
    support for davinci nand controller) has never been really build tested with
    the driver as a module.  When the driver is built-in, the missing semicolon
    after structure initializer is "compensated" by MODULE_DEVICE_TABLE() macro
    being empty and so the initializer using the trailing semicolon on the next
    line; when the driver is built as a module, compilation error ensues, and as
    the 'davinci_all_defconfig' has the NAND driver modular, this error prevents
    DaVinci family kernel from building...
    
    Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae893a989ec393419adf53dc96fbef7d0abfb5ca
Author: Shawn Bohrer <sbohrer@rgmadvisors.com>
Date:   Mon Jan 14 11:55:31 2013 -0600

    sched/rt: Use root_domain of rt_rq not current processor
    
    commit aa7f67304d1a03180f463258aa6f15a8b434e77d upstream.
    
    When the system has multiple domains do_sched_rt_period_timer()
    can run on any CPU and may iterate over all rt_rq in
    cpu_online_mask.  This means when balance_runtime() is run for a
    given rt_rq that rt_rq may be in a different rd than the current
    processor.  Thus if we use smp_processor_id() to get rd in
    do_balance_runtime() we may borrow runtime from a rt_rq that is
    not part of our rd.
    
    This changes do_balance_runtime to get the rd from the passed in
    rt_rq ensuring that we borrow runtime only from the correct rd
    for the given rt_rq.
    
    This fixes a BUG at kernel/sched/rt.c:687! in __disable_runtime
    when we try reclaim runtime lent to other rt_rq but runtime has
    been lent to a rt_rq in another rd.
    
    Signed-off-by: Shawn Bohrer <sbohrer@rgmadvisors.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Acked-by: Mike Galbraith <bitbucket@online.de>
    Cc: peterz@infradead.org
    Link: http://lkml.kernel.org/r/1358186131-29494-1-git-send-email-sbohrer@rgmadvisors.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9baaf277911c1fa15803fc9d52864082558217eb
Author: Jan Beulich <JBeulich@suse.com>
Date:   Wed Jan 30 07:55:53 2013 +0000

    x86-64: Replace left over sti/cli in ia32 audit exit code
    
    commit 40a1ef95da85843696fc3ebe5fce39b0db32669f upstream.
    
    For some reason they didn't get replaced so far by their
    paravirt equivalents, resulting in code to be run with
    interrupts disabled that doesn't expect so (causing, in the
    observed case, a BUG_ON() to trigger) when syscall auditing is
    enabled.
    
    David (Cc-ed) came up with an identical fix, so likely this can
    be taken to count as an ack from him.
    
    Reported-by: Peter Moody <pmoody@google.com>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/5108E01902000078000BA9C5@nat28.tlf.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Tested-by: Peter Moody <pmoody@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7fc19676a4dc02e43fa592d584b1c57a037300e
Author: liu chuansheng <chuansheng.liu@intel.com>
Date:   Thu Jan 31 22:13:00 2013 +0800

    drm/radeon: Calling object_unrefer() when creating fb failure
    
    commit f2d68cf4daa4de97d400d94836b907e35228e54f upstream.
    
    When kzalloc() failed in radeon_user_framebuffer_create(), need to
    call object_unreference() to match the object_reference().
    
    Signed-off-by: liu chuansheng <chuansheng.liu@intel.com>
    Signed-off-by: xueminsu <xuemin.su@intel.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b666341c665cc19d3dba9863917a58837a707552
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jan 30 14:24:09 2013 -0500

    drm/radeon: prevent crash in the ring space allocation
    
    commit fd5d93a0015ce1a7db881382022b2fcdfdc61760 upstream.
    
    If the requested number of DWs on the ring is larger than
    the size of the ring itself, return an error.
    
    In testing with large VM updates, we've seen crashes when we
    try and allocate more space on the ring than the total size
    of the ring without checking.
    
    This prevents the crash but for large VM updates or bo moves
    of very large buffers, we will need to break the transaction
    down into multiple batches.  I have patches to use IBs for
    the next kernel.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e15c0b088f84357a29b55115e3bf918769e4685
Author: Mikko Tiihonen <mikko.tiihonen@iki.fi>
Date:   Wed Jan 30 14:10:04 2013 -0500

    drm/radeon: protect against div by 0 in backend setup
    
    commit f689e3acbd2e48cc4101e0af454193f81af4baaf upstream.
    
    Make sure at least one RB is enabled in
    r6xx_remap_render_backend() to avoid an division by
    zero in some corner cases.
    
    See:
    https://bugzilla.redhat.com/show_bug.cgi?id=892233
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f69c00ea43dd57ee6095418d68e79d3cf13db502
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jan 30 13:57:40 2013 -0500

    drm/radeon: fix backend map setup on 1 RB sumo boards
    
    commit f7eb97300832f4fe5fe916c5d84cd2e25169330e upstream.
    
    Need to adjust the backend map depending on which
    RB is enabled.
    
    Fixes:
    https://bugzilla.redhat.com/show_bug.cgi?id=892233
    
    Reported-by: Mikko Tiihonen <mikko.tiihonen@iki.fi>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb23301018da8cae668ed0cacab942f224852d03
Author: Christopher Staite <chris@yourdreamnet.co.uk>
Date:   Sat Jan 26 11:10:58 2013 -0500

    drm/radeon: fix MC blackout on evergreen+
    
    commit bb588820ef421c6098dca1fec29c3b347f1c8c19 upstream.
    
    Force the crtc mem requests on/off immediately rather
    than waiting for the double buffered updates to kick in.
    Seems we miss the update in certain conditions.  Also
    handle the DCE6 case.
    
    Signed-off-by: Christopher Staite <chris@yourdreamnet.co.uk>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04589e1f343ad9bb6a9e6dfeeb76af27533db2d4
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Jan 29 16:36:47 2013 -0500

    drm/radeon: add quirk for RV100 board
    
    commit 9200ee4941a6e5d1ec5df88982243686882dff3f upstream.
    
    vbios says external TMDS while the board is actually
    internal TMDS.
    
    fixes:
    https://bugs.freedesktop.org/show_bug.cgi?id=60037
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e370f57e92096211e844ba70d6bb16a66f726f2
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Sun Jan 27 21:57:51 2013 -0500

    drm/radeon: add WAIT_UNTIL to the non-VM safe regs list for cayman/TN
    
    commit 674a16f2b4724880d07389abbb95abf320b924aa upstream.
    
    Newer versions of mesa emit this.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83f83a00c02e221cb9b433e184990666111685cd
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Jan 31 09:00:52 2013 -0500

    drm/radeon/evergreen+: wait for the MC to settle after MC blackout
    
    commit ed39fadd6df01095378e499fac3674883f16b853 upstream.
    
    Some chips seem to need a little delay after blacking out
    the MC before the requests actually stop.
    
    May fix:
    https://bugs.freedesktop.org/show_bug.cgi?id=56139
    https://bugs.freedesktop.org/show_bug.cgi?id=57567
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cf4086a08c444f2455f0bdd13b9d545e7c7d1fa
Author: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
Date:   Fri Jan 25 16:54:20 2013 +0200

    digsig: Fix memory leakage in digsig_verify_rsa()
    
    commit 7810cc1e7721220f1ed2a23ca95113d6434f6dcd upstream.
    
    digsig_verify_rsa() does not free kmalloc'ed buffer returned by
    mpi_get_buffer().
    
    Signed-off-by: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0876398286b0ae58c17c03d30cd89217d7d98e31
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Tue Jan 29 19:40:42 2013 +0000

    powerpc/mm: Fix hash computation function
    
    commit eda8eebdd153c48a4e2a3a3ac3cd9e2e31f5c6b3 upstream.
    
    The ASM version of hash computation function was truncating the upper bit.
    Make the ASM version similar to hpt_hash function. Remove masking vsid bits.
    Without this patch, we observed hang during bootup due to not satisfying page
    fault request correctly. The fault handler used wrong hash values to update
    the HPTE. Hence we kept looping with page fault.
    
    hash_page(ea=000001003e260008, access=203, trap=300 ip=3fff91787134 dsisr 42000000
    The computed value of hash 000000000f22f390
    update: avpnv=4003e46054003e00, hash=000000000722f390, f=80000006, psize: 2 ...
    
    BenH: The over-masking has been there for ever but only hurts with the
    new 64T support introduced in 3.7
    
    Reported-by: Mike Qiu <qiudayu@linux.vnet.ibm.com>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Tested-by: Mike Qiu <qiudayu@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
