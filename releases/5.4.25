commit 18fe53f6dfbc5ad4ff2164bff841b56d61b22720
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 12 13:00:32 2020 +0100

    Linux 5.4.25

commit 564f7c2b5691740b881ff1cb457386de218c7181
Author: Stephen Rothwell <sfr@canb.auug.org.au>
Date:   Wed Aug 28 18:55:16 2019 +1000

    drm/virtio: module_param_named() requires linux/moduleparam.h
    
    commit b0138364da17617db052c4a738b58bf45e42f500 upstream.
    
    Fixes: 3e93bc2a58aa ("drm/virtio: make resource id workaround runtime switchable.")
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Link: http://patchwork.freedesktop.org/patch/msgid/20190828185516.22b03da8@canb.auug.org.au
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09a8dd779e477ca6f4ab716baf5a9b5a6f2fd1c9
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Wed Feb 12 10:24:52 2020 +0800

    csky: Implement copy_thread_tls
    
    commit 0b9f386c4be6493d282aab0af6f9b70c62142777 upstream.
    
    This is required for clone3 which passes the TLS value through a
    struct rather than a register.
    
    Cc: Amanieu d'Antras <amanieu@gmail.com>
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e28c9b3caf6b0998b8d5f779e908920408c133e0
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Mon Feb 3 11:40:58 2020 +0100

    block, bfq: remove ifdefs from around gets/puts of bfq groups
    
    commit 4d8340d0d4d90e7ca367d18ec16c2fefa89a339c upstream.
    
    ifdefs around gets and puts of bfq groups reduce readability, remove them.
    
    Tested-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Reported-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92ed51e65167a6652814db370db22cefb0547257
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Mon Feb 3 11:40:59 2020 +0100

    block, bfq: get a ref to a group when adding it to a service tree
    
    commit db37a34c563bf4692b36990ae89005c031385e52 upstream.
    
    BFQ schedules generic entities, which may represent either bfq_queues
    or groups of bfq_queues. When an entity is inserted into a service
    tree, a reference must be taken, to make sure that the entity does not
    disappear while still referred in the tree. Unfortunately, such a
    reference is mistakenly taken only if the entity represents a
    bfq_queue. This commit takes a reference also in case the entity
    represents a group.
    
    Tested-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Tested-by: Chris Evich <cevich@redhat.com>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e657b1f6b9f414c7b0ca823ce44c6984b6e309cf
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Fri Feb 21 09:48:49 2020 +0100

    efi: READ_ONCE rng seed size before munmap
    
    commit be36f9e7517e17810ec369626a128d7948942259 upstream.
    
    This function is consistent with using size instead of seed->size
    (except for one place that this patch fixes), but it reads seed->size
    without using READ_ONCE, which means the compiler might still do
    something unwanted. So, this commit simply adds the READ_ONCE
    wrapper.
    
    Fixes: 636259880a7e ("efi: Add support for seeding the RNG from a UEFI ...")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: linux-efi@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20200217123354.21140-1-Jason@zx2c4.com
    Link: https://lore.kernel.org/r/20200221084849.26878-5-ardb@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cca130fc00cdbfd6a06593308d109a71ae0eb0dd
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Feb 21 09:48:48 2020 +0100

    efi/x86: Handle by-ref arguments covering multiple pages in mixed mode
    
    commit 8319e9d5ad98ffccd19f35664382c73cea216193 upstream.
    
    The mixed mode runtime wrappers are fragile when it comes to how the
    memory referred to by its pointer arguments are laid out in memory, due
    to the fact that it translates these addresses to physical addresses that
    the runtime services can dereference when running in 1:1 mode. Since
    vmalloc'ed pages (including the vmap'ed stack) are not contiguous in the
    physical address space, this scheme only works if the referenced memory
    objects do not cross page boundaries.
    
    Currently, the mixed mode runtime service wrappers require that all by-ref
    arguments that live in the vmalloc space have a size that is a power of 2,
    and are aligned to that same value. While this is a sensible way to
    construct an object that is guaranteed not to cross a page boundary, it is
    overly strict when it comes to checking whether a given object violates
    this requirement, as we can simply take the physical address of the first
    and the last byte, and verify that they point into the same physical page.
    
    When this check fails, we emit a WARN(), but then simply proceed with the
    call, which could cause data corruption if the next physical page belongs
    to a mapping that is entirely unrelated.
    
    Given that with vmap'ed stacks, this condition is much more likely to
    trigger, let's relax the condition a bit, but fail the runtime service
    call if it does trigger.
    
    Fixes: f6697df36bdf0bf7 ("x86/efi: Prevent mixed mode boot corruption with CONFIG_VMAP_STACK=y")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: linux-efi@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20200221084849.26878-4-ardb@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61a7f1e13b9236b596bd97fa7493d1a9c221f69e
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Feb 21 09:48:46 2020 +0100

    efi/x86: Align GUIDs to their size in the mixed mode runtime wrapper
    
    commit 63056e8b5ebf41d52170e9f5ba1fc83d1855278c upstream.
    
    Hans reports that his mixed mode systems running v5.6-rc1 kernels hit
    the WARN_ON() in virt_to_phys_or_null_size(), caused by the fact that
    efi_guid_t objects on the vmap'ed stack happen to be misaligned with
    respect to their sizes. As a quick (i.e., backportable) fix, copy GUID
    pointer arguments to the local stack into a buffer that is naturally
    aligned to its size, so that it is guaranteed to cover only one
    physical page.
    
    Note that on x86, we cannot rely on the stack pointer being aligned
    the way the compiler expects, so we need to allocate an 8-byte aligned
    buffer of sufficient size, and copy the GUID into that buffer at an
    offset that is aligned to 16 bytes.
    
    Fixes: f6697df36bdf0bf7 ("x86/efi: Prevent mixed mode boot corruption with CONFIG_VMAP_STACK=y")
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Tested-by: Hans de Goede <hdegoede@redhat.com>
    Cc: linux-efi@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20200221084849.26878-2-ardb@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da44902fcfdd3c732a1b9f85705697cd0dfc228d
Author: Desnes A. Nunes do Rosario <desnesn@linux.ibm.com>
Date:   Thu Feb 27 10:47:15 2020 -0300

    powerpc: fix hardware PMU exception bug on PowerVM compatibility mode systems
    
    commit fc37a1632d40c80c067eb1bc235139f5867a2667 upstream.
    
    PowerVM systems running compatibility mode on a few Power8 revisions are
    still vulnerable to the hardware defect that loses PMU exceptions arriving
    prior to a context switch.
    
    The software fix for this issue is enabled through the CPU_FTR_PMAO_BUG
    cpu_feature bit, nevertheless this bit also needs to be set for PowerVM
    compatibility mode systems.
    
    Fixes: 68f2f0d431d9ea4 ("powerpc: Add a cpu feature CPU_FTR_PMAO_BUG")
    Signed-off-by: Desnes A. Nunes do Rosario <desnesn@linux.ibm.com>
    Reviewed-by: Leonardo Bras <leonardo@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200227134715.9715-1-desnesn@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90335d6681eabb5a886d76f1d30e0a1259103e52
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Thu Feb 27 16:34:12 2020 +0800

    EDAC/synopsys: Do not print an error with back-to-back snprintf() calls
    
    commit dfc6014e3b60713f375d0601d7549eed224c4615 upstream.
    
    handle_error() currently calls snprintf() a couple of times in
    succession to output the message for a CE/UE, therefore overwriting each
    part of the message which was formatted with the previous snprintf()
    call. As a result, only the part of the message from the last snprintf()
    call will be printed.
    
    The simplest and most effective way to fix this problem is to combine
    the whole string into one which to supply to a single snprintf() call.
    
     [ bp: Massage. ]
    
    Fixes: b500b4a029d57 ("EDAC, synopsys: Add ECC support for ZynqMP DDR controller")
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: James Morse <james.morse@arm.com>
    Cc: Manish Narani <manish.narani@xilinx.com>
    Link: https://lkml.kernel.org/r/1582792452-32575-1-git-send-email-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 956ba569cc60165b8636a067cc02000a149394a2
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Feb 24 12:58:03 2020 -0800

    bus: ti-sysc: Fix 1-wire reset quirk
    
    commit aec551c7a00fb7eae049c0c4cc3208ca53e26355 upstream.
    
    Because of the i2c quirk we have the reset quirks named in a confusing
    way. Let's fix the 1-wire quirk accordinlyg. Then let's switch to using
    better naming later on.
    
    Fixes: 4e23be473e30 ("bus: ti-sysc: Add support for module specific reset quirks")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8937a74575e1166fabcb57f2ea64df7448faffe7
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Thu Feb 20 19:33:10 2020 +0400

    arm64: dts: meson: fix gxm-khadas-vim2 wifi
    
    commit 146033562e7e5d1c9aae9653986806664995f1d5 upstream.
    
    before
    
    [6.418252] brcmfmac: F1 signature read @0x18000000=0x17224356
    [6.435663] brcmfmac: brcmf_fw_alloc_request: using brcm/brcmfmac4356-sdio for chip BCM4356/2
    [6.551259] brcmfmac: brcmf_sdiod_ramrw: membytes transfer failed
    [6.551275] brcmfmac: brcmf_sdio_verifymemory: error -84 on reading 2048 membytes at 0x00184000
    [6.551352] brcmfmac: brcmf_sdio_download_firmware: dongle image file download failed
    
    after
    
    [6.657165] brcmfmac: F1 signature read @0x18000000=0x17224356
    [6.660807] brcmfmac: brcmf_fw_alloc_request: using brcm/brcmfmac4356-sdio for chip BCM4356/2
    [6.918643] brcmfmac: brcmf_fw_alloc_request: using brcm/brcmfmac4356-sdio for chip BCM4356/2
    [6.918734] brcmfmac: brcmf_c_process_clm_blob: no clm_blob available (err=-2), device may have limited channels available
    [6.922724] brcmfmac: brcmf_c_preinit_dcmds: Firmware: BCM4356/2 wl0: Jun 16 2015 14:25:06 version 7.35.184.r1 (TOB) (r559293) FWID 01-b22ae69c
    
    Fixes: adc52bf7ef16 ("arm64: dts: meson: fix mmc v2 chips max frequencies")
    Suggested-by: Art Nikpal <email2tema@gmail.com>
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Link: https://lore.kernel.org/r/1582212790-11402-1-git-send-email-christianshewitt@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5293e17978c4335674f1956da05c84ec68fa5be0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 17 17:40:50 2020 +0300

    dmaengine: coh901318: Fix a double lock bug in dma_tc_handle()
    
    commit 36d5d22090d13fd3a7a8c9663a711cbe6970aac8 upstream.
    
    The caller is already holding the lock so this will deadlock.
    
    Fixes: 0b58828c923e ("DMAENGINE: COH 901 318 remove irq counting")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20200217144050.3i4ymbytogod4ijn@kili.mountain
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08d67499d2d23ff3f97451cd75c5176aa0b71509
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Dec 26 22:32:04 2019 -0800

    dma-buf: free dmabuf->name in dma_buf_release()
    
    commit d1f37226431f5d9657aa144a40f2383adbcf27e1 upstream.
    
    dma-buf name can be set via DMA_BUF_SET_NAME ioctl, but once set
    it never gets freed.
    
    Free it in dma_buf_release().
    
    Fixes: bb2bb9030425 ("dma-buf: add DMA_BUF_SET_NAME ioctls")
    Reported-by: syzbot+b2098bc44728a4efb3e9@syzkaller.appspotmail.com
    Cc: Greg Hackmann <ghackmann@google.com>
    Cc: Chenbo Feng <fengc@google.com>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Chenbo Feng <fengc@google.com>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191227063204.5813-1-xiyou.wangcong@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 709c6990aec77d35401005f8c746ff7223469fdc
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 3 13:16:08 2020 +0300

    hwmon: (adt7462) Fix an error return in ADT7462_REG_VOLT()
    
    commit 44f2f882909fedfc3a56e4b90026910456019743 upstream.
    
    This is only called from adt7462_update_device().  The caller expects it
    to return zero on error.  I fixed a similar issue earlier in commit
    a4bf06d58f21 ("hwmon: (adt7462) ADT7462_REG_VOLT_MAX() should return 0")
    but I missed this one.
    
    Fixes: c0b4e3ab0c76 ("adt7462: new hwmon driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Link: https://lore.kernel.org/r/20200303101608.kqjwfcazu2ylhi2a@kili.mountain
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61f64d9de25abf5a32ec90c141f5b21674285895
Author: Oleksandr Suvorov <oleksandr.suvorov@toradex.com>
Date:   Wed Feb 19 13:11:24 2020 +0000

    ARM: dts: imx7-colibri: Fix frequency for sd/mmc
    
    commit 2773fe1d31c42ffae2a9cb9a6055d99dd86e2fee upstream.
    
    SD/MMC on Colibri iMX7S/D modules successfully support
    200Mhz frequency in HS200 mode.
    
    Removing the unnecessary max-frequency limit significantly
    increases the performance:
    
    == before fix ====
    root@colibri-imx7-emmc:~# hdparm -t /dev/mmcblk0
    /dev/mmcblk0:
     Timing buffered disk reads: 252 MB in  3.02 seconds =  83.54 MB/sec
    ==================
    
    === after fix ====
    root@colibri-imx7-emmc:~# hdparm -t /dev/mmcblk0
    /dev/mmcblk0:
     Timing buffered disk reads: 408 MB in  3.00 seconds = 135.94 MB/sec
    ==================
    
    Fixes: f928a4a377e4 ("ARM: dts: imx7: add Toradex Colibri iMX7D 1GB (eMMC) support")
    Signed-off-by: Oleksandr Suvorov <oleksandr.suvorov@toradex.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1439f05ce981756cef7a7f42e15288158865d561
Author: Suman Anna <s-anna@ti.com>
Date:   Tue Feb 11 09:51:03 2020 -0600

    ARM: dts: dra7xx-clocks: Fixup IPU1 mux clock parent source
    
    commit 78722d37b2b4cf9178295e2aa5510880e6135fd7 upstream.
    
    The IPU1 functional clock is the output of a mux clock (represented
    by ipu1_gfclk_mux previously) and the clock source for this has been
    updated to be sourced from dpll_core_h22x2_ck in commit 39879c7d963e
    ("ARM: dts: dra7xx-clocks: Source IPU1 functional clock from CORE DPLL").
    ipu1_gfclk_mux is an obsolete clock now with the clkctrl conversion,
    and this clock source parenting is lost during the new clkctrl layout
    conversion.
    
    Remove this stale clock and fix up the clock source for this mux
    clock using the latest equivalent clkctrl clock. This restores the
    previous logic and ensures that the IPU1 continues to run at the
    same frequency of IPU2 and independent of the ABE DPLL.
    
    Fixes: b5f8ffbb6fad ("ARM: dts: dra7: convert to use new clkctrl layout")
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9113989a57c204d121599c48028a57cec8b0db16
Author: Suman Anna <s-anna@ti.com>
Date:   Mon Feb 10 15:04:23 2020 -0600

    ARM: dts: am437x-idk-evm: Fix incorrect OPP node names
    
    commit 31623468be0bf57617b8057dcd335693935a9491 upstream.
    
    The commit 337c6c9a69af ("ARM: dts: am437x-idk-evm: Disable
    OPP50 for MPU") adjusts couple of OPP nodes defined in the
    common am4372.dtsi file, but used outdated node names. This
    results in these getting treated as new OPP nodes with missing
    properties.
    
    Fix this properly by using the correct node names as updated in
    commit b9cb2ba71848 ("ARM: dts: Use - instead of @ for DT OPP
    entries for TI SoCs").
    
    Reported-by: Roger Quadros <rogerq@ti.com>
    Fixes: 337c6c9a69af ("ARM: dts: am437x-idk-evm: Disable OPP50 for MPU")
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc06a09777546920267144f281b0da0ff6ba8e28
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Thu Jan 16 15:18:49 2020 +0100

    ARM: imx: build v7_cpu_resume() unconditionally
    
    commit 512a928affd51c2dc631401e56ad5ee5d5dd68b6 upstream.
    
    This function is not only needed by the platform suspend code, but is also
    reused as the CPU resume function when the ARM cores can be powered down
    completely in deep idle, which is the case on i.MX6SX and i.MX6UL(L).
    
    Providing the static inline stub whenever CONFIG_SUSPEND is disabled means
    that those platforms will hang on resume from cpuidle if suspend is disabled.
    
    So there are two problems:
    
      - The static inline stub masks the linker error
      - The function is not available where needed
    
    Fix both by just building the function unconditionally, when
    CONFIG_SOC_IMX6 is enabled. The actual code is three instructions long,
    so it's arguably ok to just leave it in for all i.MX6 kernel configurations.
    
    Fixes: 05136f0897b5 ("ARM: imx: support arm power off in cpuidle for i.mx6sx")
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Signed-off-by: Rouven Czerwinski <r.czerwinski@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc04fb60d718fd414cd6810f2e9e0431d747483e
Author: Dennis Dalessandro <dennis.dalessandro@intel.com>
Date:   Tue Feb 25 14:54:45 2020 -0500

    IB/hfi1, qib: Ensure RCU is locked when accessing list
    
    commit 817a68a6584aa08e323c64283fec5ded7be84759 upstream.
    
    The packet handling function, specifically the iteration of the qp list
    for mad packet processing misses locking RCU before running through the
    list. Not only is this incorrect, but the list_for_each_entry_rcu() call
    can not be called with a conditional check for lock dependency. Remedy
    this by invoking the rcu lock and unlock around the critical section.
    
    This brings MAD packet processing in line with what is done for non-MAD
    packets.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Link: https://lore.kernel.org/r/20200225195445.140896.41873.stgit@awfm-01.aw.intel.com
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3286ef3a16052d890ab932f4c250cb540f5c9e9c
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Fri Feb 21 15:20:26 2020 +0000

    RMDA/cm: Fix missing ib_cm_destroy_id() in ib_cm_insert_listen()
    
    commit c14dfddbd869bf0c2bafb7ef260c41d9cebbcfec upstream.
    
    The algorithm pre-allocates a cm_id since allocation cannot be done while
    holding the cm.lock spinlock, however it doesn't free it on one error
    path, leading to a memory leak.
    
    Fixes: 067b171b8679 ("IB/cm: Share listening CM IDs")
    Link: https://lore.kernel.org/r/20200221152023.GA8680@ziepe.ca
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d5d75f8c26ee1ca1ae0f8323754f70601f819ae
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Wed Mar 4 09:55:32 2020 +0100

    regulator: stm32-vrefbuf: fix a possible overshoot when re-enabling
    
    commit 02fbabd5f4ed182d2c616e49309f5a3efd9ec671 upstream.
    
    There maybe an overshoot, when disabling, then re-enabling vrefbuf
    too quickly. VREFBUF is used by ADC/DAC on some boards. When re-enabling
    too quickly, an overshoot on the reference voltage make the conversions
    inaccurate for a short period of time.
    - Don't put the VREFBUF in HiZ when disabling, to force an active
    discharge.
    - Enforce a 1ms OFF/ON delay
    
    Fixes: 0cdbf481e927 ("regulator: Add support for stm32-vrefbuf")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Message-Id: <1583312132-20932-1-git-send-email-fabrice.gasnier@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baec58de4ab523b90f2b1e287401fed12736023f
Author: Maor Gottlieb <maorg@mellanox.com>
Date:   Thu Feb 27 13:27:08 2020 +0200

    RDMA/core: Fix protection fault in ib_mr_pool_destroy
    
    commit e38b55ea0443da35a50a3eb2079ad3612cf763b9 upstream.
    
    Fix NULL pointer dereference in the error flow of ib_create_qp_user
    when accessing to uninitialized list pointers - rdma_mrs and sig_mrs.
    The following crash from syzkaller revealed it.
    
      kasan: GPF could be caused by NULL-ptr deref or user memory access
      general protection fault: 0000 [#1] SMP KASAN PTI
      CPU: 1 PID: 23167 Comm: syz-executor.1 Not tainted 5.5.0-rc5 #2
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
      rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
      RIP: 0010:ib_mr_pool_destroy+0x81/0x1f0
      Code: 00 00 fc ff df 49 c1 ec 03 4d 01 fc e8 a8 ea 72 fe 41 80 3c 24 00
      0f 85 62 01 00 00 48 8b 13 48 89 d6 4c 8d 6a c8 48 c1 ee 03 <42> 80 3c
      3e 00 0f 85 34 01 00 00 48 8d 7a 08 4c 8b 02 48 89 fe 48
      RSP: 0018:ffffc9000951f8b0 EFLAGS: 00010046
      RAX: 0000000000040000 RBX: ffff88810f268038 RCX: ffffffff82c41628
      RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffc9000951f850
      RBP: ffff88810f268020 R08: 0000000000000004 R09: fffff520012a3f0a
      R10: 0000000000000001 R11: fffff520012a3f0a R12: ffffed1021e4d007
      R13: ffffffffffffffc8 R14: 0000000000000246 R15: dffffc0000000000
      FS:  00007f54bc788700(0000) GS:ffff88811b100000(0000)
      knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000000 CR3: 0000000116920002 CR4: 0000000000360ee0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       rdma_rw_cleanup_mrs+0x15/0x30
       ib_destroy_qp_user+0x674/0x7d0
       ib_create_qp_user+0xb01/0x11c0
       create_qp+0x1517/0x2130
       ib_uverbs_create_qp+0x13e/0x190
       ib_uverbs_write+0xaa5/0xdf0
       __vfs_write+0x7c/0x100
       vfs_write+0x168/0x4a0
       ksys_write+0xc8/0x200
       do_syscall_64+0x9c/0x390
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x465b49
      Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89
      f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01
      f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
      RSP: 002b:00007f54bc787c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
      RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000465b49
      RDX: 0000000000000040 RSI: 0000000020000540 RDI: 0000000000000003
      RBP: 00007f54bc787c70 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000246 R12: 00007f54bc7886bc
      R13: 00000000004ca2ec R14: 000000000070ded0 R15: 0000000000000005
    
    Fixes: a060b5629ab0 ("IB/core: generic RDMA READ/WRITE API")
    Link: https://lore.kernel.org/r/20200227112708.93023-1-leon@kernel.org
    Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 785823b3b2bc84de0c0e2693b0b5a4c2f3a2303b
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Mon Mar 2 19:16:14 2020 +0100

    RDMA/iwcm: Fix iwcm work deallocation
    
    commit 810dbc69087b08fd53e1cdd6c709f385bc2921ad upstream.
    
    The dealloc_work_entries() function must update the work_free_list pointer
    while freeing its entries, since potentially called again on same list. A
    second iteration of the work list caused system crash. This happens, if
    work allocation fails during cma_iw_listen() and free_cm_id() tries to
    free the list again during cleanup.
    
    Fixes: 922a8e9fb2e0 ("RDMA: iWARP Connection Manager.")
    Link: https://lore.kernel.org/r/20200302181614.17042-1-bmt@zurich.ibm.com
    Reported-by: syzbot+cb0c054eabfba4342146@syzkaller.appspotmail.com
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a793097d7c164764aceccc75c358824ddc8b8489
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Mon Mar 2 16:58:14 2020 +0100

    RDMA/siw: Fix failure handling during device creation
    
    commit 12e5eef0f4d8087ea7b559f6630be08ffea2d851 upstream.
    
    A failing call to ib_device_set_netdev() during device creation caused
    system crash due to xa_destroy of uninitialized xarray hit by device
    deallocation. Fixed by moving xarray initialization before potential
    device deallocation.
    
    Fixes: bdcf26bf9b3a ("rdma/siw: network and RDMA core interface")
    Link: https://lore.kernel.org/r/20200302155814.9896-1-bmt@zurich.ibm.com
    Reported-by: syzbot+2e80962bedd9559fe0b3@syzkaller.appspotmail.com
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10faa91ce4939449d26bb79b6e9582cdb6dae3c5
Author: Mark Zhang <markz@mellanox.com>
Date:   Thu Feb 27 14:51:11 2020 +0200

    RDMA/nldev: Fix crash when set a QP to a new counter but QPN is missing
    
    commit 78f34a16c28654cb47791257006f90d0948f2f0c upstream.
    
    This fixes the kernel crash when a RDMA_NLDEV_CMD_STAT_SET command is
    received, but the QP number parameter is not available.
    
      iwpm_register_pid: Unable to send a nlmsg (client = 2)
      infiniband syz1: RDMA CMA: cma_listen_on_dev, error -98
      general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN
      KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
      CPU: 0 PID: 9754 Comm: syz-executor069 Not tainted 5.6.0-rc2-syzkaller #0
      Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
      RIP: 0010:nla_get_u32 include/net/netlink.h:1474 [inline]
      RIP: 0010:nldev_stat_set_doit+0x63c/0xb70 drivers/infiniband/core/nldev.c:1760
      Code: fc 01 0f 84 58 03 00 00 e8 41 83 bf fb 4c 8b a3 58 fd ff ff 48 b8 00 00 00 00 00 fc ff df 49 8d 7c 24 04 48 89 fa 48 c1 ea 03 <0f> b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 6d
      RSP: 0018:ffffc900068bf350 EFLAGS: 00010247
      RAX: dffffc0000000000 RBX: ffffc900068bf728 RCX: ffffffff85b60470
      RDX: 0000000000000000 RSI: ffffffff85b6047f RDI: 0000000000000004
      RBP: ffffc900068bf750 R08: ffff88808c3ee140 R09: ffff8880a25e6010
      R10: ffffed10144bcddc R11: ffff8880a25e6ee3 R12: 0000000000000000
      R13: ffff88809acb0000 R14: ffff888092a42c80 R15: 000000009ef2e29a
      FS:  0000000001ff0880(0000) GS:ffff8880ae800000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f4733e34000 CR3: 00000000a9b27000 CR4: 00000000001406f0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
        rdma_nl_rcv_msg drivers/infiniband/core/netlink.c:195 [inline]
        rdma_nl_rcv_skb drivers/infiniband/core/netlink.c:239 [inline]
        rdma_nl_rcv+0x5d9/0x980 drivers/infiniband/core/netlink.c:259
        netlink_unicast_kernel net/netlink/af_netlink.c:1303 [inline]
        netlink_unicast+0x59e/0x7e0 net/netlink/af_netlink.c:1329
        netlink_sendmsg+0x91c/0xea0 net/netlink/af_netlink.c:1918
        sock_sendmsg_nosec net/socket.c:652 [inline]
        sock_sendmsg+0xd7/0x130 net/socket.c:672
        ____sys_sendmsg+0x753/0x880 net/socket.c:2343
        ___sys_sendmsg+0x100/0x170 net/socket.c:2397
        __sys_sendmsg+0x105/0x1d0 net/socket.c:2430
        __do_sys_sendmsg net/socket.c:2439 [inline]
        __se_sys_sendmsg net/socket.c:2437 [inline]
        __x64_sys_sendmsg+0x78/0xb0 net/socket.c:2437
        do_syscall_64+0xfa/0x790 arch/x86/entry/common.c:294
        entry_SYSCALL_64_after_hwframe+0x49/0xbe
      RIP: 0033:0x4403d9
      Code: 18 89 d0 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 fb 13 fc ff c3 66 2e 0f 1f 84 00 00 00 00
      RSP: 002b:00007ffc0efbc5c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
      RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004403d9
      RDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000004
      RBP: 00000000006ca018 R08: 0000000000000008 R09: 00000000004002c8
      R10: 000000000000004a R11: 0000000000000246 R12: 0000000000401c60
      R13: 0000000000401cf0 R14: 0000000000000000 R15: 0000000000000000
    
    Fixes: b389327df905 ("RDMA/nldev: Allow counter manual mode configration through RDMA netlink")
    Link: https://lore.kernel.org/r/20200227125111.99142-1-leon@kernel.org
    Reported-by: syzbot+bd4af81bc51ee0283445@syzkaller.appspotmail.com
    Signed-off-by: Mark Zhang <markz@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a2acf74a81662e280544ac5542e0170fe47b794
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Thu Feb 20 12:08:18 2020 +0200

    RDMA/rw: Fix error flow during RDMA context initialization
    
    commit 6affca140cbea01f497c4f4e16f1e2be7f74bd04 upstream.
    
    In case the SGL was mapped for P2P DMA operation, we must unmap it using
    pci_p2pdma_unmap_sg during the error unwind of rdma_rw_ctx_init()
    
    Fixes: 7f73eac3a713 ("PCI/P2PDMA: Introduce pci_p2pdma_unmap_sg()")
    Link: https://lore.kernel.org/r/20200220100819.41860-1-maxg@mellanox.com
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 194f9e8e3d13707b4e48f565e4baecaa8fb20e57
Author: Parav Pandit <parav@mellanox.com>
Date:   Wed Feb 12 09:26:29 2020 +0200

    Revert "RDMA/cma: Simplify rdma_resolve_addr() error flow"
    
    commit e4103312d7b7afb8a3a7a842a33ef2b1856b2c0f upstream.
    
    This reverts commit 219d2e9dfda9431b808c28d5efc74b404b95b638.
    
    The call chain below requires the cm_id_priv's destination address to be
    setup before performing rdma_bind_addr(). Otherwise source port allocation
    fails as cma_port_is_unique() no longer sees the correct tuple to allow
    duplicate users of the source port.
    
    rdma_resolve_addr()
      cma_bind_addr()
        rdma_bind_addr()
          cma_get_port()
            cma_alloc_any_port()
              cma_port_is_unique() <- compared with zero daddr
    
    This can result in false failures to connect, particularly if the source
    port range is restricted.
    
    Fixes: 219d2e9dfda9 ("RDMA/cma: Simplify rdma_resolve_addr() error flow")
    Link: https://lore.kernel.org/r/20200212072635.682689-4-leon@kernel.org
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80ccc2588f6a04cfb5385ee0d40f8bd2b87e527d
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Thu Feb 20 18:29:39 2020 +0200

    soc: imx-scu: Align imx sc msg structs to 4
    
    commit f10e58a5d20e1cf3a39a842da92c9dd0c3c23849 upstream.
    
    The imx SC api strongly assumes that messages are composed out of
    4-bytes words but some of our message structs have odd sizeofs.
    
    This produces many oopses with CONFIG_KASAN=y.
    
    Fix by marking with __aligned(4).
    
    Fixes: 73feb4d0f8f1 ("soc: imx-scu: Add SoC UID(unique identifier) support")
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30eb1ea78a588674078f01f4acf6a27810ed4d4d
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Thu Feb 20 18:29:36 2020 +0200

    firmware: imx: Align imx_sc_msg_req_cpu_start to 4
    
    commit f5bfeff44612d304deb100065a9f712309dc2783 upstream.
    
    The imx SC api strongly assumes that messages are composed out of
    4-bytes words but some of our message structs have odd sizeofs.
    
    This produces many oopses with CONFIG_KASAN=y.
    
    Fix by marking with __aligned(4).
    
    Fixes: d90bf296ae18 ("firmware: imx: Add support to start/stop a CPU")
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3bede27ca0469297ca2309d5ffaa6da6c5f557d
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Thu Feb 20 18:29:35 2020 +0200

    firmware: imx: scu-pd: Align imx sc msg structs to 4
    
    commit 7c1a1c814ccc858633c761951c2546041202b24e upstream.
    
    The imx SC api strongly assumes that messages are composed out of
    4-bytes words but some of our message structs have odd sizeofs.
    
    This produces many oopses with CONFIG_KASAN=y.
    
    Fix by marking with __aligned(4).
    
    Fixes: c800cd7824bd ("firmware: imx: add SCU power domain driver")
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bebf41fb8c12ad36f2217cdd810bfd76e7f282f
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Thu Feb 20 18:29:34 2020 +0200

    firmware: imx: misc: Align imx sc msg structs to 4
    
    commit 1e6a4eba693ac72e6f91b4252458c933110e5f4c upstream.
    
    The imx SC api strongly assumes that messages are composed out of
    4-bytes words but some of our message structs have odd sizeofs.
    
    This produces many oopses with CONFIG_KASAN=y:
    
        BUG: KASAN: stack-out-of-bounds in imx_mu_send_data+0x108/0x1f0
    
    It shouldn't cause an issues in normal use because these structs are
    always allocated on the stack.
    
    Fixes: 15e1f2bc8b3b ("firmware: imx: add misc svc support")
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67a6b0adb1ac01d9f13c4dc4ca52d047476a959f
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Feb 17 16:15:03 2020 -0300

    arm64: dts: imx8qxp-mek: Remove unexisting Ethernet PHY
    
    commit 26c4b4758fce8f0ae744335e1762213be29db441 upstream.
    
    There is only on Ethernet port and one Ethernet PHY on imx8qxp-mek.
    
    Remove the unexisting ethphy1 port.
    
    This fixes a run-time warning:
    
    mdio_bus 5b040000.ethernet-1: MDIO device at address 1 is missing.
    
    Fixes: fdea904e85e1 ("arm64: dts: imx: add imx8qxp mek support")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Reviewed-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14bd791e38c60a41095ac1872785d03af97f9045
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Thu Jan 16 15:01:08 2020 +0100

    ARM: dts: imx6: phycore-som: fix emmc supply
    
    commit eb0bbba7636b9fc81939d6087a5fe575e150c95a upstream.
    
    Currently the vmmc is supplied by the 1.8V pmic rail but this is wrong.
    The default module behaviour is to power VCCQ and VCC by the 3.3V power
    rail. Optional the user can connect the VCCQ to the pmic 1.8V emmc
    power rail using a solder jumper.
    
    Fixes: ddec5d1c0047 ("ARM: dts: imx6: Add initial support for phyCORE-i.MX 6 SOM")
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4115c053a35e751d9889360e318ce793798d7e44
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Feb 4 07:36:02 2020 -0800

    phy: mapphone-mdm6600: Fix write timeouts with shorter GPIO toggle interval
    
    commit 46b7edf1c7b7c91004c4db2c355cbd033f2385f9 upstream.
    
    I've noticed that when writing data to the modem the writes can time out
    at some point eventually. Looks like kicking the modem idle GPIO every
    600 ms instead of once a second fixes the issue. Note that this rate is
    different from our runtime PM autosuspend rate MDM6600_MODEM_IDLE_DELAY_MS
    that we still want to keep at 1 second, so let's add a separate define for
    PHY_MDM6600_IDLE_KICK_MS.
    
    Fixes: f7f50b2a7b05 ("phy: mapphone-mdm6600: Add runtime PM support for n_gsm on USB suspend")
    Cc: Marcel Partap <mpartap@gmx.net>
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Michael Scott <hashcode0f@gmail.com>
    Cc: NeKit <nekit1000@gmail.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cc80013ad3701efbf8338e9c34d682fb08750a3
Author: Tony Lindgren <tony@atomide.com>
Date:   Sun Sep 15 13:15:52 2019 -0700

    phy: mapphone-mdm6600: Fix timeouts by adding wake-up handling
    
    commit be4e3c737eebd75815633f4b8fd766defaf0f1fc upstream.
    
    We have an interrupt handler for the wake-up GPIO pin, but we're missing
    the code to wake-up the system. This can cause timeouts receiving data
    for the UART that shares the wake-up GPIO pin with the USB PHY.
    
    All we need to do is just wake the system and kick the autosuspend
    timeout to fix the issue.
    
    Fixes: 5d1ebbda0318 ("phy: mapphone-mdm6600: Add USB PHY driver for MDM6600 on Droid 4")
    Cc: Marcel Partap <mpartap@gmx.net>
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Michael Scott <hashcode0f@gmail.com>
    Cc: NeKit <nekit1000@gmail.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 362fbe8e9dd656d62e4a10b9c22956af148c1d7c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Feb 28 17:14:13 2020 +0300

    drm/i915/selftests: Fix return in assert_mmap_offset()
    
    commit f4aaa44e8b20f7e0d4ea68d3bca4968b6ae5aaff upstream.
    
    The assert_mmap_offset() returns type bool so if we return an error
    pointer that is "return true;" or success.  If we have an error, then
    we should return false.
    
    Fixes: 3d81d589d6e3 ("drm/i915: Test exhaustion of the mmap space")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200228141413.qfjf4abr323drlo4@kili.mountain
    (cherry picked from commit efbf928824820f2738f41271934f6ec2c6ebd587)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2845fe63f751f220b4fa93dd22164fd220732555
Author: Matt Roper <matthew.d.roper@intel.com>
Date:   Thu Feb 27 16:43:19 2020 -0800

    drm/i915: Program MBUS with rmw during initialization
    
    commit c725161924f9a5872a3e53b73345a6026a5c170e upstream.
    
    It wasn't terribly clear from the bspec's wording, but after discussion
    with the hardware folks, it turns out that we need to preserve the
    pre-existing contents of the MBUS ABOX control register when
    initializing a few specific bits.
    
    Bspec: 49213
    Bspec: 50096
    Fixes: 4cb4585e5a7f ("drm/i915/icl: initialize MBus during display init")
    Cc: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
    Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200204011032.582737-1-matthew.d.roper@intel.com
    Reviewed-by: Matt Atwood <matthew.s.atwood@intel.com>
    (cherry picked from commit 837b63e6087838d0f1e612d448405419199d8033)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200228004320.127142-1-matthew.d.roper@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 609b392e85230fe7b82f1ae0b4a34f47a7808eb8
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Mon Feb 24 18:38:55 2020 +0100

    drm/sun4i: de2/de3: Remove unsupported VI layer formats
    
    commit a4769905f0ae32cae4f096f646ab03b8b4794c74 upstream.
    
    YUV444 and YVU444 are planar formats, but HW format RGB888 is packed.
    This means that those two mappings were never correct. Remove them.
    
    Fixes: 60a3dcf96aa8 ("drm/sun4i: Add DE2 definitions for YUV formats")
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200224173901.174016-2-jernej.skrabec@siol.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a49ddfae6c1a86983a3feec79b520e75eed9d5e9
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Mon Feb 24 18:38:57 2020 +0100

    drm/sun4i: Fix DE2 VI layer format support
    
    commit 20896ef137340e9426cf322606f764452f5eb960 upstream.
    
    DE2 VI layer doesn't support blending which means alpha channel is
    ignored. Replace all formats with alpha with "don't care" (X) channel.
    
    Fixes: 7480ba4d7571 ("drm/sun4i: Add support for DE2 VI planes")
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200224173901.174016-4-jernej.skrabec@siol.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfe25f9a1c26d7c80a7777c4a32e7254eadbb21c
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Mon Feb 24 18:38:56 2020 +0100

    drm/sun4i: Add separate DE3 VI layer formats
    
    commit 169ca4b38932112e8b2ee8baef9cea44678625b3 upstream.
    
    DE3 VI layers support alpha blending, but DE2 VI layers do not.
    Additionally, DE3 VI layers support 10-bit RGB and YUV formats.
    
    Make a separate list for DE3.
    
    Fixes: c50519e6db4d ("drm/sun4i: Add basic support for DE3")
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200224173901.174016-3-jernej.skrabec@siol.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9163ba414d8b4a44949b104bac77ceb0d3d7a10
Author: John Stultz <john.stultz@linaro.org>
Date:   Tue Mar 3 16:32:28 2020 +0000

    drm: kirin: Revert "Fix for hikey620 display offset problem"
    
    commit 1b79cfd99ff5127e6a143767b51694a527b3ea38 upstream.
    
    This reverts commit ff57c6513820efe945b61863cf4a51b79f18b592.
    
    With the commit ff57c6513820 ("drm: kirin: Fix for hikey620
    display offset problem") we added support for handling LDI
    overflows by resetting the hardware.
    
    However, its been observed that when we do hit the LDI overflow
    condition, the irq seems to be screaming, and we do nothing but
    stream:
      [drm:ade_irq_handler [kirin_drm]] *ERROR* LDI underflow!
    over and over to the screen
    
    I've tried a few appraoches to avoid this, but none has yet
    been successful and the cure here is worse then the original
    disease, so revert this for now.
    
    Cc: Xinliang Liu <xinliang.liu@linaro.org>
    Cc: Rongrong Zou <zourongrong@gmail.com>
    Cc: Xinwei Kong <kong.kongxinwei@hisilicon.com>
    Cc: Chen Feng <puck.chen@hisilicon.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: dri-devel <dri-devel@lists.freedesktop.org>
    Fixes: ff57c6513820 ("drm: kirin: Fix for hikey620 display offset problem")
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Acked-by: Xinliang Liu <xinliang.liu@linaro.org>
    Signed-off-by: Xinliang Liu <xinliang.liu@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200303163228.52741-1-john.stultz@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95e0c61d7f665ce184fed07ca7d91128dbddd0a1
Author: Tomeu Vizoso <tomeu.vizoso@collabora.com>
Date:   Wed Feb 12 14:22:36 2020 -0600

    drm/panfrost: Don't try to map on error faults
    
    commit eb9d8ddbc107d02e489681f9dcbf93949e1a99a4 upstream.
    
    If the exception type isn't a translation fault, don't try to map and
    instead go straight to a terminal fault.
    
    Otherwise, we can get flooded by kernel warnings and further faults.
    
    Fixes: 187d2929206e ("drm/panfrost: Add support for GPU heap allocations")
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Tomeu Vizoso <tomeu.vizoso@collabora.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Tomeu Vizoso <tomeu.vizoso@collabora.com>
    Acked-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200212202236.13095-1-robh@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce46334cc87144d3e92d95d960d7f0745276b9f
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Fri Feb 28 15:55:32 2020 +0000

    spi: atmel-quadspi: fix possible MMIO window size overrun
    
    commit 8e093ea4d3593379be46b845b9e823179558047e upstream.
    
    The QSPI controller memory space is limited to 128MB:
    0x9000_00000-0x9800_00000/0XD000_0000--0XD800_0000.
    
    There are nor flashes that are bigger in size than the memory size
    supported by the controller: Micron MT25QL02G (256 MB).
    
    Check if the address exceeds the MMIO window size. An improvement
    would be to add support for regular SPI mode and fall back to it
    when the flash memories overrun the controller's memory space.
    
    Fixes: 0e6aae08e9ae ("spi: Add QuadSPI driver for Atmel SAMA5D2")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20200228155437.1558219-1-tudor.ambarus@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2780251199683c50969569c9d794c4460f45c208
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Fri Feb 28 15:31:45 2020 +0000

    ASoC: dapm: Correct DAPM handling of active widgets during shutdown
    
    commit 9b3193089e77d3b59b045146ff1c770dd899acb1 upstream.
    
    commit c2caa4da46a4 ("ASoC: Fix widget powerdown on shutdown") added a
    set of the power state during snd_soc_dapm_shutdown to ensure the
    widgets powered off. However, when commit 39eb5fd13dff
    ("ASoC: dapm: Delay w->power update until the changes are written")
    added the new_power member of the widget structure, to differentiate
    between the current power state and the target power state, it did not
    update the shutdown to use the new_power member.
    
    As new_power has not updated it will be left in the state set by the
    last DAPM sequence, ie. 1 for active widgets. So as the DAPM sequence
    for the shutdown proceeds it will turn the widgets on (despite them
    already being on) rather than turning them off.
    
    Fixes: 39eb5fd13dff ("ASoC: dapm: Delay w->power update until the changes are written")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200228153145.21013-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a87fe1f24fe73e4b9ae0a65b7f624575515b16bd
Author: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Date:   Mon Feb 24 07:52:02 2020 -0500

    ASoC: Intel: Skylake: Fix available clock counter incrementation
    
    commit 8308a09e87d2cb51adb186dc7d5a5c1913fb0758 upstream.
    
    Incrementation of avail_clk_cnt was incorrectly moved to error path. Put
    it back to success path.
    
    Fixes: 6ee927f2f01466 ('ASoC: Intel: Skylake: Fix NULL ptr dereference when unloading clk dev')
    Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20200224125202.13784-1-amadeuszx.slawinski@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94c472e7b4e15eb460a9fdabcfe867fd863dd2b4
Author: Matthias Reichl <hias@horus.com>
Date:   Thu Feb 20 21:29:56 2020 +0100

    ASoC: pcm512x: Fix unbalanced regulator enable call in probe error path
    
    commit ac0a68997935c4acb92eaae5ad8982e0bb432d56 upstream.
    
    When we get a clock error during probe we have to call
    regulator_bulk_disable before bailing out, otherwise we trigger
    a warning in regulator_put.
    
    Fix this by using "goto err" like in the error cases above.
    
    Fixes: 5a3af1293194d ("ASoC: pcm512x: Add PCM512x driver")
    Signed-off-by: Matthias Reichl <hias@horus.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20200220202956.29233-1-hias@horus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 757ed44a19a3a26f3c70aedb74ecc42c2f24346b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 12:17:37 2020 +0100

    ASoC: pcm: Fix possible buffer overflow in dpcm state sysfs output
    
    commit 6c89ffea60aa3b2a33ae7987de1e84bfb89e4c9e upstream.
    
    dpcm_show_state() invokes multiple snprintf() calls to concatenate
    formatted strings on the fixed size buffer.  The usage of snprintf()
    is supposed for avoiding the buffer overflow, but it doesn't work as
    expected because snprintf() doesn't return the actual output size but
    the size to be written.
    
    Fix this bug by replacing all snprintf() calls with scnprintf()
    calls.
    
    Fixes: f86dcef87b77 ("ASoC: dpcm: Add debugFS support for DPCM")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20200218111737.14193-4-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b408bfa79b5e1e08be98d17dd960ed5332dbcb98
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Mar 3 23:28:47 2020 +1100

    powerpc/mm: Fix missing KUAP disable in flush_coherent_icache()
    
    [ Upstream commit 59bee45b9712c759ea4d3dcc4eff1752f3a66558 ]
    
    Stefan reported a strange kernel fault which turned out to be due to a
    missing KUAP disable in flush_coherent_icache() called from
    flush_icache_range().
    
    The fault looks like:
    
      Kernel attempted to access user page (7fffc30d9c00) - exploit attempt? (uid: 1009)
      BUG: Unable to handle kernel data access on read at 0x7fffc30d9c00
      Faulting instruction address: 0xc00000000007232c
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
      CPU: 35 PID: 5886 Comm: sigtramp Not tainted 5.6.0-rc2-gcc-8.2.0-00003-gfc37a1632d40 #79
      NIP:  c00000000007232c LR: c00000000003b7fc CTR: 0000000000000000
      REGS: c000001e11093940 TRAP: 0300   Not tainted  (5.6.0-rc2-gcc-8.2.0-00003-gfc37a1632d40)
      MSR:  900000000280b033 <SF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE>  CR: 28000884  XER: 00000000
      CFAR: c0000000000722fc DAR: 00007fffc30d9c00 DSISR: 08000000 IRQMASK: 0
      GPR00: c00000000003b7fc c000001e11093bd0 c0000000023ac200 00007fffc30d9c00
      GPR04: 00007fffc30d9c18 0000000000000000 c000001e11093bd4 0000000000000000
      GPR08: 0000000000000000 0000000000000001 0000000000000000 c000001e1104ed80
      GPR12: 0000000000000000 c000001fff6ab380 c0000000016be2d0 4000000000000000
      GPR16: c000000000000000 bfffffffffffffff 0000000000000000 0000000000000000
      GPR20: 00007fffc30d9c00 00007fffc30d8f58 00007fffc30d9c18 00007fffc30d9c20
      GPR24: 00007fffc30d9c18 0000000000000000 c000001e11093d90 c000001e1104ed80
      GPR28: c000001e11093e90 0000000000000000 c0000000023d9d18 00007fffc30d9c00
      NIP flush_icache_range+0x5c/0x80
      LR  handle_rt_signal64+0x95c/0xc2c
      Call Trace:
        0xc000001e11093d90 (unreliable)
        handle_rt_signal64+0x93c/0xc2c
        do_notify_resume+0x310/0x430
        ret_from_except_lite+0x70/0x74
      Instruction dump:
      409e002c 7c0802a6 3c62ff31 3863f6a0 f8010080 48195fed 60000000 48fe4c8d
      60000000 e8010080 7c0803a6 7c0004ac <7c00ffac> 7c0004ac 4c00012c 38210070
    
    This path through handle_rt_signal64() to setup_trampoline() and
    flush_icache_range() is only triggered by 64-bit processes that have
    unmapped their VDSO, which is rare.
    
    flush_icache_range() takes a range of addresses to flush. In
    flush_coherent_icache() we implement an optimisation for CPUs where we
    know we don't actually have to flush the whole range, we just need to
    do a single icbi.
    
    However we still execute the icbi on the user address of the start of
    the range we're flushing. On CPUs that also implement KUAP (Power9)
    that leads to the spurious fault above.
    
    We should be able to pass any address, including a kernel address, to
    the icbi on these CPUs, which would avoid any interaction with KUAP.
    But I don't want to make that change in a bug fix, just in case it
    surfaces some strange behaviour on some CPU.
    
    So for now just disable KUAP around the icbi. Note the icbi is treated
    as a load, so we allow read access, not write as you'd expect.
    
    Fixes: 890274c2dc4c ("powerpc/64s: Implement KUAP for Radix MMU")
    Cc: stable@vger.kernel.org # v5.2+
    Reported-by: Stefan Berger <stefanb@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200303235708.26004-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42dac16dc4b09bbd70f041842a134e403a980753
Author: Alastair D'Silva <alastair@d-silva.org>
Date:   Mon Nov 4 13:32:56 2019 +1100

    powerpc: Convert flush_icache_range & friends to C
    
    [ Upstream commit 23eb7f560a2a6a1b0dbaaaae8685da75314347e4 ]
    
    Similar to commit 22e9c88d486a
    ("powerpc/64: reuse PPC32 static inline flush_dcache_range()")
    this patch converts the following ASM symbols to C:
        flush_icache_range()
        __flush_dcache_icache()
        __flush_dcache_icache_phys()
    
    This was done as we discovered a long-standing bug where the length of the
    range was truncated due to using a 32 bit shift instead of a 64 bit one.
    
    By converting these functions to C, it becomes easier to maintain.
    
    flush_dcache_icache_phys() retains a critical assembler section as we must
    ensure there are no memory accesses while the data MMU is disabled
    (authored by Christophe Leroy). Since this has no external callers, it has
    also been made static, allowing the compiler to inline it within
    flush_dcache_icache_page().
    
    Signed-off-by: Alastair D'Silva <alastair@d-silva.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    [mpe: Minor fixups, don't export __flush_dcache_icache()]
    Link: https://lore.kernel.org/r/20191104023305.9581-5-alastair@au1.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec21f6d52bd435662cc06d89a12d3bd0c3eaafc3
Author: Alastair D'Silva <alastair@d-silva.org>
Date:   Mon Nov 4 13:32:55 2019 +1100

    powerpc: define helpers to get L1 icache sizes
    
    [ Upstream commit 7a0745c5e03ff1129864bc6d80f5c4417e8d7893 ]
    
    This patch adds helpers to retrieve icache sizes, and renames the existing
    helpers to make it clear that they are for dcache.
    
    Signed-off-by: Alastair D'Silva <alastair@d-silva.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191104023305.9581-4-alastair@au1.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbc02b018d73b796d5cfa1dcba83d04a87312463
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 12:17:36 2020 +0100

    ASoC: intel: skl: Fix possible buffer overflow in debug outputs
    
    commit 549cd0ba04dcfe340c349cd983bd440480fae8ee upstream.
    
    The debugfs output of intel skl driver writes strings with multiple
    snprintf() calls with the fixed size.  This was supposed to avoid the
    buffer overflow but actually it still would, because snprintf()
    returns the expected size to be output, not the actual output size.
    
    Fix it by replacing snprintf() calls with scnprintf().
    
    Fixes: d14700a01f91 ("ASoC: Intel: Skylake: Debugfs facility to dump module config")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20200218111737.14193-3-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd4d68f19cfee62d1fa24d7650b80a7d6c2c04d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 12:17:35 2020 +0100

    ASoC: intel: skl: Fix pin debug prints
    
    commit 64bbacc5f08c01954890981c63de744df1f29a30 upstream.
    
    skl_print_pins() loops over all given pins but it overwrites the text
    at the very same position while increasing the returned length.
    Fix this to show the all pin contents properly.
    
    Fixes: d14700a01f91 ("ASoC: Intel: Skylake: Debugfs facility to dump module config")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20200218111737.14193-2-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 488c6c340df54a87a3089e79dc7079b56555dc18
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 3 13:18:58 2020 +0300

    ASoC: SOF: Fix snd_sof_ipc_stream_posn()
    
    commit 613cea5935e83cb5a7d182ee3f98d54620e102e2 upstream.
    
    We're passing "&posn" instead of "posn" so it ends up corrupting
    memory instead of doing something useful.
    
    Fixes: 53e0c72d98ba ("ASoC: SOF: Add support for IPC IO between DSP and Host")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200303101858.ytehbrivocyp3cnf@kili.mountain
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e259388d69f55f1e626c18dd6bf6cc357eb85f91
Author: Dragos Tarcatu <dragos_tarcatu@mentor.com>
Date:   Fri Feb 7 20:53:25 2020 +0200

    ASoC: topology: Fix memleak in soc_tplg_manifest_load()
    
    commit 242c46c023610dbc0213fc8fb6b71eb836bc5d95 upstream.
    
    In case of ABI version mismatch, _manifest needs to be freed as
    it is just a copy of the original topology manifest. However, if
    a driver manifest handler is defined, that would get executed and
    the cleanup is never reached. Fix that by getting the return status
    of manifest() instead of returning directly.
    
    Fixes: 583958fa2e52 ("ASoC: topology: Make manifest backward compatible from ABI v4")
    Signed-off-by: Dragos Tarcatu <dragos_tarcatu@mentor.com>
    Link: https://lore.kernel.org/r/20200207185325.22320-3-dragos_tarcatu@mentor.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6e3b2aedf8af18693c488bcf65c53bef7d46941
Author: Dragos Tarcatu <dragos_tarcatu@mentor.com>
Date:   Fri Feb 7 20:53:24 2020 +0200

    ASoC: topology: Fix memleak in soc_tplg_link_elems_load()
    
    commit 2b2d5c4db732c027a14987cfccf767dac1b45170 upstream.
    
    If soc_tplg_link_config() fails, _link needs to be freed in case of
    topology ABI version mismatch. However the current code is returning
    directly and ends up leaking memory in this case.
    This patch fixes that.
    
    Fixes: 593d9e52f9bb ("ASoC: topology: Add support to configure existing physical DAI links")
    Signed-off-by: Dragos Tarcatu <dragos_tarcatu@mentor.com>
    Link: https://lore.kernel.org/r/20200207185325.22320-2-dragos_tarcatu@mentor.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9998ebb5e73c72ba11a025434be9c2ff1c33b1f0
Author: John Bates <jbates@chromium.org>
Date:   Thu Feb 20 14:53:19 2020 -0800

    drm/virtio: fix resource id creation race
    
    commit fbb30168c7395b9cfeb9e6f7b0c0bca854a6552d upstream.
    
    The previous code was not thread safe and caused
    undefined behavior from spurious duplicate resource IDs.
    In this patch, an atomic_t is used instead. We no longer
    see any duplicate IDs in tests with this change.
    
    Fixes: 16065fcdd19d ("drm/virtio: do NOT reuse resource ids")
    Signed-off-by: John Bates <jbates@chromium.org>
    Reviewed-by: Chia-I Wu <olvaffe@gmail.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20200220225319.45621-1-jbates@chromium.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d41f6cfd9aa7c3f01b44fc1ee15bac5589fd1b60
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Thu Aug 22 12:26:14 2019 +0200

    drm/virtio: make resource id workaround runtime switchable.
    
    commit 3e93bc2a58aa241081e043ef9e6e86c42808499a upstream.
    
    Also update the comment with a reference to the virglrenderer fix.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Reviewed-by: Chia-I Wu <olvaffe@gmail.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20190822102614.18164-1-kraxel@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad7f9c865af734b4daadbea0246c7b3ea3cfda95
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Feb 28 22:38:38 2020 +0100

    spi: bcm63xx-hsspi: Really keep pll clk enabled
    
    commit 51bddd4501bc414b8b1e8f4d096b4a5304068169 upstream.
    
    The purpose of commit 0fd85869c2a9 ("spi/bcm63xx-hsspi: keep pll clk enabled")
    was to keep the pll clk enabled through the lifetime of the device.
    
    In order to do that, some 'clk_prepare_enable()'/'clk_disable_unprepare()'
    calls have been added in the error handling path of the probe function, in
    the remove function and in the suspend and resume functions.
    
    However, a 'clk_disable_unprepare()' call has been unfortunately left in
    the probe function. So the commit seems to be more or less a no-op.
    
    Axe it now, so that the pll clk is left enabled through the lifetime of
    the device, as described in the commit.
    
    Fixes: 0fd85869c2a9 ("spi/bcm63xx-hsspi: keep pll clk enabled")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Jonas Gorski <jonas.gorski@gmail.com>
    Link: https://lore.kernel.org/r/20200228213838.7124-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12e7f277165042ee9c907815ea4c0552eb050c5c
Author: Vladimir Oltean <olteanv@gmail.com>
Date:   Sun Jan 26 21:49:50 2020 +0200

    ARM: dts: ls1021a: Restore MDIO compatible to gianfar
    
    commit 7155c44624d061692b4c13aa8343f119c67d4fc0 upstream.
    
    The difference between "fsl,etsec2-mdio" and "gianfar" has to do with
    the .get_tbipa function, which calculates the address of the TBIPA
    register automatically, if not explicitly specified. [ see
    drivers/net/ethernet/freescale/fsl_pq_mdio.c ]. On LS1021A, the TBIPA
    register is at offset 0x30 within the port register block, which is what
    the "gianfar" method of calculating addresses actually does.
    
    Luckily, the bad "compatible" is inconsequential for ls1021a.dtsi,
    because the TBIPA register is explicitly specified via the second "reg"
    (<0x0 0x2d10030 0x0 0x4>), so the "get_tbipa" function is dead code.
    Nonetheless it's good to restore it to its correct value.
    
    Background discussion:
    https://www.spinics.net/lists/stable/msg361156.html
    
    Fixes: c7861adbe37f ("ARM: dts: ls1021: Fix SGMII PCS link remaining down after PHY disconnect")
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 422d098fe633288565b5ee88380a3e37a2782670
Author: Guillaume La Roque <glaroque@baylibre.com>
Date:   Fri Jan 17 14:34:23 2020 +0100

    arm64: dts: meson-sm1-sei610: add missing interrupt-names
    
    commit 5bea1336ed2c939328999c64de28792e8dc0699b upstream.
    
    add missing "host-wakeup interrupt names
    
    Fixes: 30388cc07572 ("arm64: dts: meson-sm1-sei610: add gpio bluetooth interrupt")
    
    Signed-off-by: Guillaume La Roque <glaroque@baylibre.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20200117133423.22602-1-glaroque@baylibre.com
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a767bab5ac0da8de21338ad212d0224f92d24b7
Author: Hou Tao <houtao1@huawei.com>
Date:   Tue Mar 3 16:45:01 2020 +0800

    dm: fix congested_fn for request-based device
    
    commit 974f51e8633f0f3f33e8f86bbb5ae66758aa63c7 upstream.
    
    We neither assign congested_fn for requested-based blk-mq device nor
    implement it correctly. So fix both.
    
    Also, remove incorrect comment from dm_init_normal_md_queue and rename
    it to dm_init_congested_fn.
    
    Fixes: 4aa9c692e052 ("bdi: separate out congested state into a separate struct")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c929bcb7af955631f58384440efd17a7a190424
Author: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
Date:   Thu Feb 27 09:18:52 2020 +0900

    dm zoned: Fix reference counter initial value of chunk works
    
    commit ee63634bae02e13c8c0df1209a6a0ca5326f3189 upstream.
    
    Dm-zoned initializes reference counters of new chunk works with zero
    value and refcount_inc() is called to increment the counter. However, the
    refcount_inc() function handles the addition to zero value as an error
    and triggers the warning as follows:
    
    refcount_t: addition on 0; use-after-free.
    WARNING: CPU: 7 PID: 1506 at lib/refcount.c:25 refcount_warn_saturate+0x68/0xf0
    ...
    CPU: 7 PID: 1506 Comm: systemd-udevd Not tainted 5.4.0+ #134
    ...
    Call Trace:
     dmz_map+0x2d2/0x350 [dm_zoned]
     __map_bio+0x42/0x1a0
     __split_and_process_non_flush+0x14a/0x1b0
     __split_and_process_bio+0x83/0x240
     ? kmem_cache_alloc+0x165/0x220
     dm_process_bio+0x90/0x230
     ? generic_make_request_checks+0x2e7/0x680
     dm_make_request+0x3e/0xb0
     generic_make_request+0xcf/0x320
     ? memcg_drain_all_list_lrus+0x1c0/0x1c0
     submit_bio+0x3c/0x160
     ? guard_bio_eod+0x2c/0x130
     mpage_readpages+0x182/0x1d0
     ? bdev_evict_inode+0xf0/0xf0
     read_pages+0x6b/0x1b0
     __do_page_cache_readahead+0x1ba/0x1d0
     force_page_cache_readahead+0x93/0x100
     generic_file_read_iter+0x83a/0xe40
     ? __seccomp_filter+0x7b/0x670
     new_sync_read+0x12a/0x1c0
     vfs_read+0x9d/0x150
     ksys_read+0x5f/0xe0
     do_syscall_64+0x5b/0x180
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    ...
    
    After this warning, following refcount API calls for the counter all fail
    to change the counter value.
    
    Fix this by setting the initial reference counter value not zero but one
    for the new chunk works. Instead, do not call refcount_inc() via
    dmz_get_chunk_work() for the new chunks works.
    
    The failure was observed with linux version 5.4 with CONFIG_REFCOUNT_FULL
    enabled. Refcount rework was merged to linux version 5.5 by the
    commit 168829ad09ca ("Merge branch 'locking-core-for-linus' of
    git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip"). After this
    commit, CONFIG_REFCOUNT_FULL was removed and the failure was observed
    regardless of kernel configuration.
    
    Linux version 4.20 merged the commit 092b5648760a ("dm zoned: target: use
    refcount_t for dm zoned reference counters"). Before this commit, dm
    zoned used atomic_t APIs which does not check addition to zero, then this
    fix is not necessary.
    
    Fixes: 092b5648760a ("dm zoned: target: use refcount_t for dm zoned reference counters")
    Cc: stable@vger.kernel.org # 5.4+
    Signed-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b753d805e1ab7e278b2295d007e4e8e7b51e62f
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Feb 24 10:20:30 2020 +0100

    dm writecache: verify watermark during resume
    
    commit 41c526c5af46d4c4dab7f72c99000b7fac0b9702 upstream.
    
    Verify the watermark upon resume - so that if the target is reloaded
    with lower watermark, it will start the cleanup process immediately.
    
    Fixes: 48debafe4f2f ("dm: add writecache target")
    Cc: stable@vger.kernel.org # 4.18+
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86543852e43b6d58aa89be9ce2de927b7ab7326e
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Feb 24 10:20:28 2020 +0100

    dm: report suspended device during destroy
    
    commit adc0daad366b62ca1bce3e2958a40b0b71a8b8b3 upstream.
    
    The function dm_suspended returns true if the target is suspended.
    However, when the target is being suspended during unload, it returns
    false.
    
    An example where this is a problem: the test "!dm_suspended(wc->ti)" in
    writecache_writeback is not sufficient, because dm_suspended returns
    zero while writecache_suspend is in progress.  As is, without an
    enhanced dm_suspended, simply switching from flush_workqueue to
    drain_workqueue still emits warnings:
    workqueue writecache-writeback: drain_workqueue() isn't complete after 10 tries
    workqueue writecache-writeback: drain_workqueue() isn't complete after 100 tries
    workqueue writecache-writeback: drain_workqueue() isn't complete after 200 tries
    workqueue writecache-writeback: drain_workqueue() isn't complete after 300 tries
    workqueue writecache-writeback: drain_workqueue() isn't complete after 400 tries
    
    writecache_suspend calls flush_workqueue(wc->writeback_wq) - this function
    flushes the current work. However, the workqueue may re-queue itself and
    flush_workqueue doesn't wait for re-queued works to finish. Because of
    this - the function writecache_writeback continues execution after the
    device was suspended and then concurrently with writecache_dtr, causing
    a crash in writecache_writeback.
    
    We must use drain_workqueue - that waits until the work and all re-queued
    works finish.
    
    As a prereq for switching to drain_workqueue, this commit fixes
    dm_suspended to return true after the presuspend hook and before the
    postsuspend hook - just like during a normal suspend. It allows
    simplifying the dm-integrity and dm-writecache targets so that they
    don't have to maintain suspended flags on their own.
    
    With this change use of drain_workqueue() can be used effectively.  This
    change was tested with the lvm2 testsuite and cryptsetup testsuite and
    the are no regressions.
    
    Fixes: 48debafe4f2f ("dm: add writecache target")
    Cc: stable@vger.kernel.org # 4.18+
    Reported-by: Corey Marthaler <cmarthal@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e600edc7d8356a84e26fc5a27da99fd0ed358bba
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Feb 19 10:25:45 2020 -0500

    dm cache: fix a crash due to incorrect work item cancelling
    
    commit 7cdf6a0aae1cccf5167f3f04ecddcf648b78e289 upstream.
    
    The crash can be reproduced by running the lvm2 testsuite test
    lvconvert-thin-external-cache.sh for several minutes, e.g.:
      while :; do make check T=shell/lvconvert-thin-external-cache.sh; done
    
    The crash happens in this call chain:
    do_waker -> policy_tick -> smq_tick -> end_hotspot_period -> clear_bitset
    -> memset -> __memset -- which accesses an invalid pointer in the vmalloc
    area.
    
    The work entry on the workqueue is executed even after the bitmap was
    freed. The problem is that cancel_delayed_work doesn't wait for the
    running work item to finish, so the work item can continue running and
    re-submitting itself even after cache_postsuspend. In order to make sure
    that the work item won't be running, we must use cancel_delayed_work_sync.
    
    Also, change flush_workqueue to drain_workqueue, so that if some work item
    submits itself or another work item, we are properly waiting for both of
    them.
    
    Fixes: c6b4fcbad044 ("dm: add cache target")
    Cc: stable@vger.kernel.org # v3.9
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7ab1264e830bd130c6176c7b3d41f14c03e5886
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Feb 17 08:11:35 2020 -0500

    dm integrity: fix invalid table returned due to argument count mismatch
    
    commit 7fc2e47f40dd77ab1fcbda6db89614a0173d89c7 upstream.
    
    If the flag SB_FLAG_RECALCULATE is present in the superblock, but it was
    not specified on the command line (i.e. ic->recalculate_flag is false),
    dm-integrity would return invalid table line - the reported number of
    arguments would not match the real number.
    
    Fixes: 468dfca38b1a ("dm integrity: add a bitmap mode")
    Cc: stable@vger.kernel.org # v5.2+
    Reported-by: Ondrej Kozina <okozina@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9d35915324c568ace59eb78488a04d594956fbe
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Feb 17 07:43:03 2020 -0500

    dm integrity: fix a deadlock due to offloading to an incorrect workqueue
    
    commit 53770f0ec5fd417429775ba006bc4abe14002335 upstream.
    
    If we need to perform synchronous I/O in dm_integrity_map_continue(),
    we must make sure that we are not in the map function - in order to
    avoid the deadlock due to bio queuing in generic_make_request. To
    avoid the deadlock, we offload the request to metadata_wq.
    
    However, metadata_wq also processes metadata updates for write requests.
    If there are too many requests that get offloaded to metadata_wq at the
    beginning of dm_integrity_map_continue, the workqueue metadata_wq
    becomes clogged and the system is incapable of processing any metadata
    updates.
    
    This causes a deadlock because all the requests that need to do metadata
    updates wait for metadata_wq to proceed and metadata_wq waits inside
    wait_and_add_new_range until some existing request releases its range
    lock (which doesn't happen because the range lock is released after
    metadata update).
    
    In order to fix the deadlock, we create a new workqueue offload_wq and
    offload requests to it - so that processing of offload_wq is independent
    from processing of metadata_wq.
    
    Fixes: 7eada909bfd7 ("dm: add integrity target")
    Cc: stable@vger.kernel.org # v4.12+
    Reported-by: Heinz Mauelshagen <heinzm@redhat.com>
    Tested-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b3f03f6e232f062db9477a639110a7ebd925b9a
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Feb 7 11:42:30 2020 -0500

    dm integrity: fix recalculation when moving from journal mode to bitmap mode
    
    commit d5bdf66108419cdb39da361b58ded661c29ff66e upstream.
    
    If we resume a device in bitmap mode and the on-disk format is in journal
    mode, we must recalculate anything above ic->sb->recalc_sector. Otherwise,
    there would be non-recalculated blocks which would cause I/O errors.
    
    Fixes: 468dfca38b1a ("dm integrity: add a bitmap mode")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac5e2d2d5fc6d3e2ecc56af9e3aff77942c1d48f
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Feb 9 19:33:39 2020 +0300

    dmaengine: tegra-apb: Prevent race conditions of tasklet vs free list
    
    commit c33ee1301c393a241d6424e36eff1071811b1064 upstream.
    
    The interrupt handler puts a half-completed DMA descriptor on a free list
    and then schedules tasklet to process bottom half of the descriptor that
    executes client's callback, this creates possibility to pick up the busy
    descriptor from the free list. Thus, let's disallow descriptor's re-use
    until it is fully processed.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200209163356.6439-3-digetx@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 454ee4a8205033d17ae065c5a3766d65be796a93
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Feb 9 19:33:38 2020 +0300

    dmaengine: tegra-apb: Fix use-after-free
    
    commit 94788af4ed039476ff3527b0e6a12c1dc42cb022 upstream.
    
    I was doing some experiments with I2C and noticed that Tegra APB DMA
    driver crashes sometime after I2C DMA transfer termination. The crash
    happens because tegra_dma_terminate_all() bails out immediately if pending
    list is empty, and thus, it doesn't release the half-completed descriptors
    which are getting re-used before ISR tasklet kicks-in.
    
     tegra-i2c 7000c400.i2c: DMA transfer timeout
     elants_i2c 0-0010: elants_i2c_irq: failed to read data: -110
     ------------[ cut here ]------------
     WARNING: CPU: 0 PID: 142 at lib/list_debug.c:45 __list_del_entry_valid+0x45/0xac
     list_del corruption, ddbaac44->next is LIST_POISON1 (00000100)
     Modules linked in:
     CPU: 0 PID: 142 Comm: kworker/0:2 Not tainted 5.5.0-rc2-next-20191220-00175-gc3605715758d-dirty #538
     Hardware name: NVIDIA Tegra SoC (Flattened Device Tree)
     Workqueue: events_freezable_power_ thermal_zone_device_check
     [<c010e5c5>] (unwind_backtrace) from [<c010a1c5>] (show_stack+0x11/0x14)
     [<c010a1c5>] (show_stack) from [<c0973925>] (dump_stack+0x85/0x94)
     [<c0973925>] (dump_stack) from [<c011f529>] (__warn+0xc1/0xc4)
     [<c011f529>] (__warn) from [<c011f7e9>] (warn_slowpath_fmt+0x61/0x78)
     [<c011f7e9>] (warn_slowpath_fmt) from [<c042497d>] (__list_del_entry_valid+0x45/0xac)
     [<c042497d>] (__list_del_entry_valid) from [<c047a87f>] (tegra_dma_tasklet+0x5b/0x154)
     [<c047a87f>] (tegra_dma_tasklet) from [<c0124799>] (tasklet_action_common.constprop.0+0x41/0x7c)
     [<c0124799>] (tasklet_action_common.constprop.0) from [<c01022ab>] (__do_softirq+0xd3/0x2a8)
     [<c01022ab>] (__do_softirq) from [<c0124683>] (irq_exit+0x7b/0x98)
     [<c0124683>] (irq_exit) from [<c0168c19>] (__handle_domain_irq+0x45/0x80)
     [<c0168c19>] (__handle_domain_irq) from [<c043e429>] (gic_handle_irq+0x45/0x7c)
     [<c043e429>] (gic_handle_irq) from [<c0101aa5>] (__irq_svc+0x65/0x94)
     Exception stack(0xde2ebb90 to 0xde2ebbd8)
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200209163356.6439-2-digetx@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cdb964611855ac64cceb043151abe4461ed87e6
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Tue Feb 25 08:23:20 2020 +0000

    dmaengine: imx-sdma: Fix the event id check to include RX event for UART6
    
    commit 25962e1a7f1d522f1b57ead2f266fab570042a70 upstream.
    
    On i.MX6UL/ULL and i.MX6SX the DMA event id for the RX channel of
    UART6 is '0'. To fix the broken DMA support for UART6, we change
    the check for event_id0 to include '0' as a valid id.
    
    Fixes: 1ec1e82f2510 ("dmaengine: Add Freescale i.MX SDMA support")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200225082139.7646-1-frieder.schrempf@kontron.de
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 772e5f29c94254fb071ada67dea697e8dcf3384e
Author: Martin Fuzzey <martin.fuzzey@flowbird.group>
Date:   Wed Jan 29 14:40:06 2020 +0100

    dmaengine: imx-sdma: fix context cache
    
    commit d288bddd8374e0a043ac9dde64a1ae6a09411d74 upstream.
    
    There is a DMA problem with the serial ports on i.MX6.
    
    When the following sequence is performed:
    
    1) Open a port
    2) Write some data
    3) Close the port
    4) Open a *different* port
    5) Write some data
    6) Close the port
    
    The second write sends nothing and the second close hangs.
    If the first close() is omitted it works.
    
    Adding logs to the the UART driver shows that the DMA is being setup but
    the callback is never invoked for the second write.
    
    This used to work in 4.19.
    
    Git bisect leads to:
            ad0d92d: "dmaengine: imx-sdma: refine to load context only once"
    
    This commit adds a "context_loaded" flag used to avoid unnecessary context
    setups.
    However the flag is only reset in sdma_channel_terminate_work(),
    which is only invoked in a worker triggered by sdma_terminate_all() IF
    there is an active descriptor.
    
    So, if no active descriptor remains when the channel is terminated, the
    flag is not reset and, when the channel is later reused the old context
    is used.
    
    Fix the problem by always resetting the flag in sdma_free_chan_resources().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Martin Fuzzey <martin.fuzzey@flowbird.group>
    Fixes: ad0d92d7ba6a ("dmaengine: imx-sdma: refine to load context only once")
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/1580305274-27274-1-git-send-email-martin.fuzzey@flowbird.group
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c5755caf691fc3f1dcba4fc4c1b039a47b3ae7
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Thu Feb 27 12:56:42 2020 +0100

    s390/mm: fix panic in gup_fast on large pud
    
    commit 582b4e55403e053d8a48ff687a05174da9cc3fb0 upstream.
    
    On s390 there currently is no implementation of pud_write(). That was ok
    as long as we had our own implementation of get_user_pages_fast() which
    checked for pud protection by testing the bit directly w/o using
    pud_write(). The other callers of pud_write() are not reachable on s390.
    
    After commit 1a42010cdc26 ("s390/mm: convert to the generic
    get_user_pages_fast code") we use the generic get_user_pages_fast(), which
    does call pud_write() in pud_access_permitted() for FOLL_WRITE access on
    a large pud. Without an s390 specific pud_write(), the generic version is
    called, which contains a BUG() statement to remind us that we don't have a
    proper implementation. This results in a kernel panic.
    
    Fix this by providing an implementation of pud_write().
    
    Cc: <stable@vger.kernel.org> # 5.2+
    Fixes: 1a42010cdc26 ("s390/mm: convert to the generic get_user_pages_fast code")
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88fbd1d31291da3387f0807cbafc343687c91bee
Author: Niklas Schnelle <schnelle@linux.ibm.com>
Date:   Thu Feb 27 12:17:18 2020 +0100

    s390/pci: Fix unexpected write combine on resource
    
    commit df057c914a9c219ac8b8ed22caf7da2f80c1fe26 upstream.
    
    In the initial MIO support introduced in
    
    commit 71ba41c9b1d9 ("s390/pci: provide support for MIO instructions")
    
    zpci_map_resource() and zpci_setup_resources() default to using the
    mio_wb address as the resource's start address. This means users of the
    mapping, which includes most drivers, will get write combining on PCI
    Stores. This may lead to problems when drivers expect write through
    behavior when not using an explicit ioremap_wc().
    
    Cc: stable@vger.kernel.org
    Fixes: 71ba41c9b1d9 ("s390/pci: provide support for MIO instructions")
    Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8f3adc4069de7653848d8d4a5dd8a3bd2b8fed7
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Feb 26 15:16:15 2020 -0800

    x86/pkeys: Manually set X86_FEATURE_OSPKE to preserve existing changes
    
    commit 735a6dd02222d8d070c7bb748f25895239ca8c92 upstream.
    
    Explicitly set X86_FEATURE_OSPKE via set_cpu_cap() instead of calling
    get_cpu_cap() to pull the feature bit from CPUID after enabling CR4.PKE.
    Invoking get_cpu_cap() effectively wipes out any {set,clear}_cpu_cap()
    changes that were made between this_cpu->c_init() and setup_pku(), as
    all non-synthetic feature words are reinitialized from the CPU's CPUID
    values.
    
    Blasting away capability updates manifests most visibility when running
    on a VMX capable CPU, but with VMX disabled by BIOS.  To indicate that
    VMX is disabled, init_ia32_feat_ctl() clears X86_FEATURE_VMX, using
    clear_cpu_cap() instead of setup_clear_cpu_cap() so that KVM can report
    which CPU is misconfigured (KVM needs to probe every CPU anyways).
    Restoring X86_FEATURE_VMX from CPUID causes KVM to think VMX is enabled,
    ultimately leading to an unexpected #GP when KVM attempts to do VMXON.
    
    Arguably, init_ia32_feat_ctl() should use setup_clear_cpu_cap() and let
    KVM figure out a different way to report the misconfigured CPU, but VMX
    is not the only feature bit that is affected, i.e. there is precedent
    that tweaking feature bits via {set,clear}_cpu_cap() after ->c_init()
    is expected to work.  Most notably, x86_init_rdrand()'s clearing of
    X86_FEATURE_RDRAND when RDRAND malfunctions is also overwritten.
    
    Fixes: 0697694564c8 ("x86/mm/pkeys: Actually enable Memory Protection Keys in the CPU")
    Reported-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Tested-by: Jacob Keller <jacob.e.keller@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20200226231615.13664-1-sean.j.christopherson@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83b2a8fe43bda0c11981ad6afa5dd0104d78be28
Author: Lukas Wunner <lukas@wunner.de>
Date:   Tue Feb 18 13:08:00 2020 +0100

    spi: spidev: Fix CS polarity if GPIO descriptors are used
    
    commit 138c9c32f090894614899eca15e0bb7279f59865 upstream.
    
    Commit f3186dd87669 ("spi: Optionally use GPIO descriptors for CS GPIOs")
    amended of_spi_parse_dt() to always set SPI_CS_HIGH for SPI slaves whose
    Chip Select is defined by a "cs-gpios" devicetree property.
    
    This change broke userspace applications which issue an SPI_IOC_WR_MODE
    ioctl() to an spidev:  Chip Select polarity will be incorrect unless the
    application is changed to set SPI_CS_HIGH.  And once changed, it will be
    incompatible with kernels not containing the commit.
    
    Fix by setting SPI_CS_HIGH in spidev_ioctl() (under the same conditions
    as in of_spi_parse_dt()).
    
    Fixes: f3186dd87669 ("spi: Optionally use GPIO descriptors for CS GPIOs")
    Reported-by: Simon Han <z.han@kunbus.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/fca3ba7cdc930cd36854666ceac4fbcf01b89028.1582027457.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org # v5.1+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc73ded13f161b01066e3bbdf1a203bcd76fd28c
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Fri Feb 14 15:26:53 2020 +0200

    perf arm-spe: Fix endless record after being terminated
    
    commit d6bc34c5ec18c3544c4b0d85963768dfbcd24184 upstream.
    
    In __cmd_record(), when receiving SIGINT(ctrl + c), a 'done' flag will
    be set and the event list will be disabled by evlist__disable() once.
    
    While in auxtrace_record.read_finish(), the related events will be
    enabled again, if they are continuous, the recording seems to be
    endless.
    
    If the event is disabled, don't enable it again here.
    
    Based-on-patch-by: Wei Li <liwei391@huawei.com>
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Tan Xiaojun <tanxiaojun@huawei.com>
    Cc: stable@vger.kernel.org # 5.4+
    Link: http://lore.kernel.org/lkml/20200214132654.20395-5-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ae75e508894eea01f2a123235e605f79d8e7662
Author: Wei Li <liwei391@huawei.com>
Date:   Fri Feb 14 15:26:52 2020 +0200

    perf cs-etm: Fix endless record after being terminated
    
    commit c9f2833cb472cf9e0a49b7bcdc210a96017a7bfd upstream.
    
    In __cmd_record(), when receiving SIGINT(ctrl + c), a 'done' flag will
    be set and the event list will be disabled by evlist__disable() once.
    
    While in auxtrace_record.read_finish(), the related events will be
    enabled again, if they are continuous, the recording seems to be
    endless.
    
    If the cs_etm event is disabled, we don't enable it again here.
    
    Note: This patch is NOT tested since i don't have such a machine with
    coresight feature, but the code seems buggy same as arm-spe and
    intel-pt.
    
    Tester notes:
    
    Thanks for looping, Adrian.  Applied this patch and tested with
    CoreSight on juno board, it works well.
    
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Tan Xiaojun <tanxiaojun@huawei.com>
    Cc: stable@vger.kernel.org # 5.4+
    Link: http://lore.kernel.org/lkml/20200214132654.20395-4-adrian.hunter@intel.com
    [ahunter: removed redundant 'else' after 'return']
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d15530fc92501c4dc4d54063c972d1c6ff17671b
Author: Wei Li <liwei391@huawei.com>
Date:   Fri Feb 14 15:26:51 2020 +0200

    perf intel-bts: Fix endless record after being terminated
    
    commit 783fed2f35e2a6771c8dc6ee29b8c4b9930783ce upstream.
    
    In __cmd_record(), when receiving SIGINT(ctrl + c), a 'done' flag will
    be set and the event list will be disabled by evlist__disable() once.
    
    While in auxtrace_record.read_finish(), the related events will be
    enabled again, if they are continuous, the recording seems to be
    endless.
    
    If the intel_bts event is disabled, we don't enable it again here.
    
    Note: This patch is NOT tested since i don't have such a machine with
    intel_bts feature, but the code seems buggy same as arm-spe and
    intel-pt.
    
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Tan Xiaojun <tanxiaojun@huawei.com>
    Cc: stable@vger.kernel.org # 5.4+
    Link: http://lore.kernel.org/lkml/20200214132654.20395-3-adrian.hunter@intel.com
    [ahunter: removed redundant 'else' after 'return']
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d3adab14857bbd8e3506685ec366e5bdeeb79f9
Author: Wei Li <liwei391@huawei.com>
Date:   Fri Feb 14 15:26:50 2020 +0200

    perf intel-pt: Fix endless record after being terminated
    
    commit 2da4dd3d6973ffdfba4fa07f53240fda7ab22929 upstream.
    
    In __cmd_record(), when receiving SIGINT(ctrl + c), a 'done' flag will
    be set and the event list will be disabled by evlist__disable() once.
    
    While in auxtrace_record.read_finish(), the related events will be
    enabled again, if they are continuous, the recording seems to be endless.
    
    If the intel_pt event is disabled, we don't enable it again here.
    
    Before the patch:
    
      huawei@huawei-2288H-V5:~/linux-5.5-rc4/tools/perf$ ./perf record -e \
      intel_pt//u -p 46803
      ^C^C^C^C^C^C
    
    After the patch:
    
      huawei@huawei-2288H-V5:~/linux-5.5-rc4/tools/perf$ ./perf record -e \
      intel_pt//u -p 48591
      ^C[ perf record: Woken up 0 times to write data ]
      Warning:
      AUX data lost 504 times out of 4816!
    
      [ perf record: Captured and wrote 2024.405 MB perf.data ]
    
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Tan Xiaojun <tanxiaojun@huawei.com>
    Cc: stable@vger.kernel.org # 5.4+
    Link: http://lore.kernel.org/lkml/20200214132654.20395-2-adrian.hunter@intel.com
    [ ahunter: removed redundant 'else' after 'return' ]
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fd458b647f58480b255ff0a2d03e1820afdfa4f
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Tue Feb 4 19:13:06 2020 +0100

    media: v4l2-mem2mem.c: fix broken links
    
    commit 316e730f1d8bb029fe6cec2468fb2a50424485b3 upstream.
    
    The topology that v4l2_m2m_register_media_controller() creates for a
    processing block actually created a source-to-source link and a sink-to-sink
    link instead of two source-to-sink links.
    
    Unfortunately v4l2-compliance never checked for such bad links, so this
    went unreported for quite some time.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: Nicolas Dufresne <nicolas@ndufresne.ca>
    Cc: <stable@vger.kernel.org>      # for v4.19 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd48f84cf7ce14a7097348f2f24f5101ee3e3df2
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Tue Feb 4 13:45:04 2020 +0100

    media: vicodec: process all 4 components for RGB32 formats
    
    commit 49a56266f96f2c6608373464af8755b431ef1513 upstream.
    
    Only ARGB32-type pixelformat were assumed to have 4 components, which is
    wrong since RGB32-type pixelformats may have an alpha channel, so they
    should also assume 4 color components.
    
    The XRGB32-type pixelformats really have only 3 color components, but this
    complicated matters since that creates strides that are sometimes width * 3
    and sometimes width * 4, and in fact this can result in buffer overflows.
    
    Keep things simple by just always processing all 4 color components.
    
    In the future we might want to optimize this again for the XRGB32-type
    pixelformats, but for now keep it simple and robust.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Cc: <stable@vger.kernel.org>      # for v5.4 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37c554b3fe987f95d75a0a981ce204240756d851
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Tue Feb 4 19:19:22 2020 +0100

    media: mc-entity.c: use & to check pad flags, not ==
    
    commit 044041cd5227ec9ccf969f4bf1cc08bffe13b9d3 upstream.
    
    These are bits so to test if a pad is a sink you use & but not ==.
    
    It looks like the only reason this hasn't caused problems before is that
    media_get_pad_index() is currently only used with pads that do not set the
    MEDIA_PAD_FL_MUST_CONNECT flag. So a pad really had only the SINK or SOURCE
    flag set and nothing else.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Cc: <stable@vger.kernel.org>      # for v5.3 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be09b4583f1e1e691f83274008ac7e003c86e31
Author: Ezequiel Garcia <ezequiel@collabora.com>
Date:   Tue Feb 4 20:38:37 2020 +0100

    media: hantro: Fix broken media controller links
    
    commit d171c45da874e3858a83e6377e00280a507fe2f2 upstream.
    
    The driver currently creates a broken topology,
    with a source-to-source link and a sink-to-sink
    link instead of two source-to-sink links.
    
    Reported-by: Nicolas Dufresne <nicolas@ndufresne.ca>
    Cc: <stable@vger.kernel.org>      # for v5.3 and up
    Signed-off-by: Ezequiel Garcia <ezequiel@collabora.com>
    Tested-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a9c13ad21a8220cb70c9807a920f43520515f94
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Feb 28 12:54:06 2020 +0100

    vt: selection, push sel_lock up
    
    commit e8c75a30a23c6ba63f4ef6895cbf41fd42f21aa2 upstream.
    
    sel_lock cannot nest in the console lock. Thanks to syzkaller, the
    kernel states firmly:
    
    > WARNING: possible circular locking dependency detected
    > 5.6.0-rc3-syzkaller #0 Not tainted
    > ------------------------------------------------------
    > syz-executor.4/20336 is trying to acquire lock:
    > ffff8880a2e952a0 (&tty->termios_rwsem){++++}, at: tty_unthrottle+0x22/0x100 drivers/tty/tty_ioctl.c:136
    >
    > but task is already holding lock:
    > ffffffff89462e70 (sel_lock){+.+.}, at: paste_selection+0x118/0x470 drivers/tty/vt/selection.c:374
    >
    > which lock already depends on the new lock.
    >
    > the existing dependency chain (in reverse order) is:
    >
    > -> #2 (sel_lock){+.+.}:
    >        mutex_lock_nested+0x1b/0x30 kernel/locking/mutex.c:1118
    >        set_selection_kernel+0x3b8/0x18a0 drivers/tty/vt/selection.c:217
    >        set_selection_user+0x63/0x80 drivers/tty/vt/selection.c:181
    >        tioclinux+0x103/0x530 drivers/tty/vt/vt.c:3050
    >        vt_ioctl+0x3f1/0x3a30 drivers/tty/vt/vt_ioctl.c:364
    
    This is ioctl(TIOCL_SETSEL).
    Locks held on the path: console_lock -> sel_lock
    
    > -> #1 (console_lock){+.+.}:
    >        console_lock+0x46/0x70 kernel/printk/printk.c:2289
    >        con_flush_chars+0x50/0x650 drivers/tty/vt/vt.c:3223
    >        n_tty_write+0xeae/0x1200 drivers/tty/n_tty.c:2350
    >        do_tty_write drivers/tty/tty_io.c:962 [inline]
    >        tty_write+0x5a1/0x950 drivers/tty/tty_io.c:1046
    
    This is write().
    Locks held on the path: termios_rwsem -> console_lock
    
    > -> #0 (&tty->termios_rwsem){++++}:
    >        down_write+0x57/0x140 kernel/locking/rwsem.c:1534
    >        tty_unthrottle+0x22/0x100 drivers/tty/tty_ioctl.c:136
    >        mkiss_receive_buf+0x12aa/0x1340 drivers/net/hamradio/mkiss.c:902
    >        tty_ldisc_receive_buf+0x12f/0x170 drivers/tty/tty_buffer.c:465
    >        paste_selection+0x346/0x470 drivers/tty/vt/selection.c:389
    >        tioclinux+0x121/0x530 drivers/tty/vt/vt.c:3055
    >        vt_ioctl+0x3f1/0x3a30 drivers/tty/vt/vt_ioctl.c:364
    
    This is ioctl(TIOCL_PASTESEL).
    Locks held on the path: sel_lock -> termios_rwsem
    
    > other info that might help us debug this:
    >
    > Chain exists of:
    >   &tty->termios_rwsem --> console_lock --> sel_lock
    
    Clearly. From the above, we have:
     console_lock -> sel_lock
     sel_lock -> termios_rwsem
     termios_rwsem -> console_lock
    
    Fix this by reversing the console_lock -> sel_lock dependency in
    ioctl(TIOCL_SETSEL). First, lock sel_lock, then console_lock.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Reported-by: syzbot+26183d9746e62da329b8@syzkaller.appspotmail.com
    Fixes: 07e6124a1a46 ("vt: selection, close sel_buffer race")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200228115406.5735-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 119ee545581a8d39b8fa692bd6805f560ae962c9
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Feb 28 12:54:05 2020 +0100

    vt: selection, push console lock down
    
    commit 4b70dd57a15d2f4685ac6e38056bad93e81e982f upstream.
    
    We need to nest the console lock in sel_lock, so we have to push it down
    a bit. Fortunately, the callers of set_selection_* just lock the console
    lock around the function call. So moving it down is easy.
    
    In the next patch, we switch the order.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: 07e6124a1a46 ("vt: selection, close sel_buffer race")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200228115406.5735-1-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4387bfa605206b57451e6f77af1287960981ffa2
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Mon Feb 10 09:11:31 2020 +0100

    vt: selection, close sel_buffer race
    
    commit 07e6124a1a46b4b5a9b3cacc0c306b50da87abf5 upstream.
    
    syzkaller reported this UAF:
    BUG: KASAN: use-after-free in n_tty_receive_buf_common+0x2481/0x2940 drivers/tty/n_tty.c:1741
    Read of size 1 at addr ffff8880089e40e9 by task syz-executor.1/13184
    
    CPU: 0 PID: 13184 Comm: syz-executor.1 Not tainted 5.4.7 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
    Call Trace:
    ...
     kasan_report+0xe/0x20 mm/kasan/common.c:634
     n_tty_receive_buf_common+0x2481/0x2940 drivers/tty/n_tty.c:1741
     tty_ldisc_receive_buf+0xac/0x190 drivers/tty/tty_buffer.c:461
     paste_selection+0x297/0x400 drivers/tty/vt/selection.c:372
     tioclinux+0x20d/0x4e0 drivers/tty/vt/vt.c:3044
     vt_ioctl+0x1bcf/0x28d0 drivers/tty/vt/vt_ioctl.c:364
     tty_ioctl+0x525/0x15a0 drivers/tty/tty_io.c:2657
     vfs_ioctl fs/ioctl.c:47 [inline]
    
    It is due to a race between parallel paste_selection (TIOCL_PASTESEL)
    and set_selection_user (TIOCL_SETSEL) invocations. One uses sel_buffer,
    while the other frees it and reallocates a new one for another
    selection. Add a mutex to close this race.
    
    The mutex takes care properly of sel_buffer and sel_buffer_lth only. The
    other selection global variables (like sel_start, sel_end, and sel_cons)
    are protected only in set_selection_user. The other functions need quite
    some more work to close the races of the variables there. This is going
    to happen later.
    
    This likely fixes (I am unsure as there is no reproducer provided) bug
    206361 too. It was marked as CVE-2020-8648.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Reported-by: syzbot+59997e8d5cbdc486e6f6@syzkaller.appspotmail.com
    References: https://bugzilla.kernel.org/show_bug.cgi?id=206361
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200210081131.23572-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e64fbf0e9f2dbbfb3b4adb88a5af5dbedc747650
Author: Jay Dolan <jay.dolan@accesio.com>
Date:   Thu Mar 5 06:05:04 2020 -0800

    serial: 8250_exar: add support for ACCES cards
    
    commit 10c5ccc3c6d32f3d7d6c07de1d3f0f4b52f3e3ab upstream.
    
    Add ACCES VIDs and PIDs that use the Exar chips
    
    Signed-off-by: Jay Dolan <jay.dolan@accesio.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200305140504.22237-1-jay.dolan@accesio.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5932199be8ed8ef19eca0ed1de112e7efb1271b5
Author: Michael Walle <michael@walle.cc>
Date:   Tue Mar 3 18:42:59 2020 +0100

    tty: serial: fsl_lpuart: free IDs allocated by IDA
    
    commit 2b2e71fe657510a6f71aa16ef0309fa6bc20ab3d upstream.
    
    Since commit 3bc3206e1c0f ("serial: fsl_lpuart: Remove the alias node
    dependence") the port line number can also be allocated by IDA, but in
    case of an error the ID will no be removed again. More importantly, any
    ID will be freed in remove(), even if it wasn't allocated but instead
    fetched by of_alias_get_id(). If it was not allocated by IDA there will
    be a warning:
      WARN(1, "ida_free called for id=%d which is not allocated.\n", id);
    
    Move the ID allocation more to the end of the probe() so that we still
    can use plain return in the first error cases.
    
    Fixes: 3bc3206e1c0f ("serial: fsl_lpuart: Remove the alias node dependence")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200303174306.6015-3-michael@walle.cc
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 143217fe63b1b6732843190e6e197ecb831ce007
Author: tangbin <tangbin@cmss.chinamobile.com>
Date:   Thu Mar 5 09:38:23 2020 +0800

    tty:serial:mvebu-uart:fix a wrong return
    
    commit 4a3e208474204e879d22a310b244cb2f39e5b1f8 upstream.
    
    in this place, the function should return a
    negative value and the PTR_ERR already returns
    a negative,so return -PTR_ERR() is wrong.
    
    Signed-off-by: tangbin <tangbin@cmss.chinamobile.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20200305013823.20976-1-tangbin@cmss.chinamobile.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdca61a19081b6c3b98082abd457f30db55be23a
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Tue Jan 28 19:17:59 2020 +0530

    arm: dts: dra76x: Fix mmc3 max-frequency
    
    commit fa63c0039787b8fbacf4d6a51e3ff44288f5b90b upstream.
    
    dra76x is not affected by i887 which requires mmc3 node to be limited to
    a max frequency of 64 MHz. Fix this by overwriting the correct value in
    the the dra76 specific dtsi.
    
    Fixes: 895bd4b3e5ec ("ARM: dts: Add support for dra76-evm")
    Cc: stable@vger.kernel.org
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 637627d832bd6759539d7288c1bf7e0f8a8f9d19
Author: Ley Foon Tan <ley.foon.tan@intel.com>
Date:   Thu Feb 27 04:20:14 2020 +0800

    arm64: dts: socfpga: agilex: Fix gmac compatible
    
    commit 8c867387160e89c9ffd12459f38e56844312a7a7 upstream.
    
    Fix gmac compatible string to "altr,socfpga-stmmac-a10-s10". Gmac for
    Agilex should use same compatible as Stratix 10.
    
    Fixes: 4b36daf9ada3 ("arm64: dts: agilex: Add initial support for Intel's Agilex SoCFPGA")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ley Foon Tan <ley.foon.tan@intel.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c8eccc28e69d13f11f54efd4a294862ad17bb74
Author: Omar Sandoval <osandov@fb.com>
Date:   Mon Mar 2 14:02:49 2020 -0800

    btrfs: fix RAID direct I/O reads with alternate csums
    
    commit e7a04894c766daa4248cb736efee93550f2d5872 upstream.
    
    btrfs_lookup_and_bind_dio_csum() does pointer arithmetic which assumes
    32-bit checksums. If using a larger checksum, this leads to spurious
    failures when a direct I/O read crosses a stripe. This is easy
    to reproduce:
    
      # mkfs.btrfs -f --checksum blake2 -d raid0 /dev/vdc /dev/vdd
      ...
      # mount /dev/vdc /mnt
      # cd /mnt
      # dd if=/dev/urandom of=foo bs=1M count=1 status=none
      # dd if=foo of=/dev/null bs=1M iflag=direct status=none
      dd: error reading 'foo': Input/output error
      # dmesg | tail -1
      [  135.821568] BTRFS warning (device vdc): csum failed root 5 ino 257 off 421888 ...
    
    Fix it by using the actual checksum size.
    
    Fixes: 1e25a2e3ca0d ("btrfs: don't assume ordered sums to be 4 bytes")
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 557693d1d3a7ac4c675da1c45ab4d72d612f842c
Author: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Date:   Thu Mar 5 22:28:36 2020 -0800

    fat: fix uninit-memory access for partial initialized inode
    
    commit bc87302a093f0eab45cd4e250c2021299f712ec6 upstream.
    
    When get an error in the middle of reading an inode, some fields in the
    inode might be still not initialized.  And then the evict_inode path may
    access those fields via iput().
    
    To fix, this makes sure that inode fields are initialized.
    
    Reported-by: syzbot+9d82b8de2992579da5d0@syzkaller.appspotmail.com
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/871rqnreqx.fsf@mail.parknet.co.jp
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d467fbc93cdbb851427d7553876a67974e4a419a
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Thu Mar 5 22:28:42 2020 -0800

    mm, hotplug: fix page online with DEBUG_PAGEALLOC compiled but not enabled
    
    commit c87cbc1f007c4b46165f05ceca04e1973cda0b9c upstream.
    
    Commit cd02cf1aceea ("mm/hotplug: fix an imbalance with DEBUG_PAGEALLOC")
    fixed memory hotplug with debug_pagealloc enabled, where onlining a page
    goes through page freeing, which removes the direct mapping.  Some arches
    don't like when the page is not mapped in the first place, so
    generic_online_page() maps it first.  This is somewhat wasteful, but
    better than special casing page freeing fast paths.
    
    The commit however missed that DEBUG_PAGEALLOC configured doesn't mean
    it's actually enabled.  One has to test debug_pagealloc_enabled() since
    031bc5743f15 ("mm/debug-pagealloc: make debug-pagealloc boottime
    configurable"), or alternatively debug_pagealloc_enabled_static() since
    8e57f8acbbd1 ("mm, debug_pagealloc: don't rely on static keys too early"),
    but this is not done.
    
    As a result, a s390 kernel with DEBUG_PAGEALLOC configured but not enabled
    will crash:
    
    Unable to handle kernel pointer dereference in virtual kernel address space
    Failing address: 0000000000000000 TEID: 0000000000000483
    Fault in home space mode while using kernel ASCE.
    AS:0000001ece13400b R2:000003fff7fd000b R3:000003fff7fcc007 S:000003fff7fd7000 P:000000000000013d
    Oops: 0004 ilc:2 [#1] SMP
    CPU: 1 PID: 26015 Comm: chmem Kdump: loaded Tainted: GX 5.3.18-5-default #1 SLE15-SP2 (unreleased)
    Krnl PSW : 0704e00180000000 0000001ecd281b9e (__kernel_map_pages+0x166/0x188)
    R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3
    Krnl GPRS: 0000000000000000 0000000000000800 0000400b00000000 0000000000000100
    0000000000000001 0000000000000000 0000000000000002 0000000000000100
    0000001ece139230 0000001ecdd98d40 0000400b00000100 0000000000000000
    000003ffa17e4000 001fffe0114f7d08 0000001ecd4d93ea 001fffe0114f7b20
    Krnl Code: 0000001ecd281b8e: ec17ffff00d8 ahik %r1,%r7,-1
    0000001ecd281b94: ec111dbc0355 risbg %r1,%r1,29,188,3
    >0000001ecd281b9e: 94fb5006 ni 6(%r5),251
    0000001ecd281ba2: 41505008 la %r5,8(%r5)
    0000001ecd281ba6: ec51fffc6064 cgrj %r5,%r1,6,1ecd281b9e
    0000001ecd281bac: 1a07 ar %r0,%r7
    0000001ecd281bae: ec03ff584076 crj %r0,%r3,4,1ecd281a5e
    Call Trace:
    [<0000001ecd281b9e>] __kernel_map_pages+0x166/0x188
    [<0000001ecd4d9516>] online_pages_range+0xf6/0x128
    [<0000001ecd2a8186>] walk_system_ram_range+0x7e/0xd8
    [<0000001ecda28aae>] online_pages+0x2fe/0x3f0
    [<0000001ecd7d02a6>] memory_subsys_online+0x8e/0xc0
    [<0000001ecd7add42>] device_online+0x5a/0xc8
    [<0000001ecd7d0430>] state_store+0x88/0x118
    [<0000001ecd5b9f62>] kernfs_fop_write+0xc2/0x200
    [<0000001ecd5064b6>] vfs_write+0x176/0x1e0
    [<0000001ecd50676a>] ksys_write+0xa2/0x100
    [<0000001ecda315d4>] system_call+0xd8/0x2c8
    
    Fix this by checking debug_pagealloc_enabled_static() before calling
    kernel_map_pages(). Backports for kernel before 5.5 should use
    debug_pagealloc_enabled() instead. Also add comments.
    
    Fixes: cd02cf1aceea ("mm/hotplug: fix an imbalance with DEBUG_PAGEALLOC")
    Reported-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: <stable@vger.kernel.org>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Qian Cai <cai@lca.pw>
    Link: http://lkml.kernel.org/r/20200224094651.18257-1-vbabka@suse.cz
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2043281943e4b220496f68f504b32593239e707
Author: Huang Ying <ying.huang@intel.com>
Date:   Thu Mar 5 22:28:29 2020 -0800

    mm: fix possible PMD dirty bit lost in set_pmd_migration_entry()
    
    commit 8a8683ad9ba48b4b52a57f013513d1635c1ca5c4 upstream.
    
    In set_pmd_migration_entry(), pmdp_invalidate() is used to change PMD
    atomically.  But the PMD is read before that with an ordinary memory
    reading.  If the THP (transparent huge page) is written between the PMD
    reading and pmdp_invalidate(), the PMD dirty bit may be lost, and cause
    data corruption.  The race window is quite small, but still possible in
    theory, so need to be fixed.
    
    The race is fixed via using the return value of pmdp_invalidate() to get
    the original content of PMD, which is a read/modify/write atomic
    operation.  So no THP writing can occur in between.
    
    The race has been introduced when the THP migration support is added in
    the commit 616b8371539a ("mm: thp: enable thp migration in generic path").
    But this fix depends on the commit d52605d7cb30 ("mm: do not lose dirty
    and accessed bits in pmdp_invalidate()").  So it's easy to be backported
    after v4.16.  But the race window is really small, so it may be fine not
    to backport the fix at all.
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
    Reviewed-by: Zi Yan <ziy@nvidia.com>
    Reviewed-by: William Kucharski <william.kucharski@oracle.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Link: http://lkml.kernel.org/r/20200220075220.2327056-1-ying.huang@intel.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b62bbcc861818b840977ca9c7d3a4ccbbed1d3e
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Thu Mar 5 22:28:26 2020 -0800

    mm, numa: fix bad pmd by atomically check for pmd_trans_huge when marking page tables prot_numa
    
    commit 8b272b3cbbb50a6a8e62d8a15affd473a788e184 upstream.
    
    : A user reported a bug against a distribution kernel while running a
    : proprietary workload described as "memory intensive that is not swapping"
    : that is expected to apply to mainline kernels.  The workload is
    : read/write/modifying ranges of memory and checking the contents.  They
    : reported that within a few hours that a bad PMD would be reported followed
    : by a memory corruption where expected data was all zeros.  A partial
    : report of the bad PMD looked like
    :
    :   [ 5195.338482] ../mm/pgtable-generic.c:33: bad pmd ffff8888157ba008(000002e0396009e2)
    :   [ 5195.341184] ------------[ cut here ]------------
    :   [ 5195.356880] kernel BUG at ../mm/pgtable-generic.c:35!
    :   ....
    :   [ 5195.410033] Call Trace:
    :   [ 5195.410471]  [<ffffffff811bc75d>] change_protection_range+0x7dd/0x930
    :   [ 5195.410716]  [<ffffffff811d4be8>] change_prot_numa+0x18/0x30
    :   [ 5195.410918]  [<ffffffff810adefe>] task_numa_work+0x1fe/0x310
    :   [ 5195.411200]  [<ffffffff81098322>] task_work_run+0x72/0x90
    :   [ 5195.411246]  [<ffffffff81077139>] exit_to_usermode_loop+0x91/0xc2
    :   [ 5195.411494]  [<ffffffff81003a51>] prepare_exit_to_usermode+0x31/0x40
    :   [ 5195.411739]  [<ffffffff815e56af>] retint_user+0x8/0x10
    :
    : Decoding revealed that the PMD was a valid prot_numa PMD and the bad PMD
    : was a false detection.  The bug does not trigger if automatic NUMA
    : balancing or transparent huge pages is disabled.
    :
    : The bug is due a race in change_pmd_range between a pmd_trans_huge and
    : pmd_nond_or_clear_bad check without any locks held.  During the
    : pmd_trans_huge check, a parallel protection update under lock can have
    : cleared the PMD and filled it with a prot_numa entry between the transhuge
    : check and the pmd_none_or_clear_bad check.
    :
    : While this could be fixed with heavy locking, it's only necessary to make
    : a copy of the PMD on the stack during change_pmd_range and avoid races.  A
    : new helper is created for this as the check if quite subtle and the
    : existing similar helpful is not suitable.  This passed 154 hours of
    : testing (usually triggers between 20 minutes and 24 hours) without
    : detecting bad PMDs or corruption.  A basic test of an autonuma-intensive
    : workload showed no significant change in behaviour.
    
    Although Mel withdrew the patch on the face of LKML comment
    https://lkml.org/lkml/2017/4/10/922 the race window aforementioned is
    still open, and we have reports of Linpack test reporting bad residuals
    after the bad PMD warning is observed.  In addition to that, bad
    rss-counter and non-zero pgtables assertions are triggered on mm teardown
    for the task hitting the bad PMD.
    
     host kernel: mm/pgtable-generic.c:40: bad pmd 00000000b3152f68(8000000d2d2008e7)
     ....
     host kernel: BUG: Bad rss-counter state mm:00000000b583043d idx:1 val:512
     host kernel: BUG: non-zero pgtables_bytes on freeing mm: 4096
    
    The issue is observed on a v4.18-based distribution kernel, but the race
    window is expected to be applicable to mainline kernels, as well.
    
    [akpm@linux-foundation.org: fix comment typo, per Rafael]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Rafael Aquini <aquini@redhat.com>
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: <stable@vger.kernel.org>
    Cc: Zi Yan <zi.yan@cs.rutgers.edu>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Michal Hocko <mhocko@suse.com>
    Link: http://lkml.kernel.org/r/20200216191800.22423-1-aquini@redhat.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d230547476eea90b57ed9fda4bfe5307779abbb
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Wed Mar 4 10:24:29 2020 +0800

    vgacon: Fix a UAF in vgacon_invert_region
    
    commit 513dc792d6060d5ef572e43852683097a8420f56 upstream.
    
    When syzkaller tests, there is a UAF:
      BUG: KASan: use after free in vgacon_invert_region+0x9d/0x110 at addr
        ffff880000100000
      Read of size 2 by task syz-executor.1/16489
      page:ffffea0000004000 count:0 mapcount:-127 mapping:          (null)
      index:0x0
      page flags: 0xfffff00000000()
      page dumped because: kasan: bad access detected
      CPU: 1 PID: 16489 Comm: syz-executor.1 Not tainted
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
      rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
      Call Trace:
        [<ffffffffb119f309>] dump_stack+0x1e/0x20
        [<ffffffffb04af957>] kasan_report+0x577/0x950
        [<ffffffffb04ae652>] __asan_load2+0x62/0x80
        [<ffffffffb090f26d>] vgacon_invert_region+0x9d/0x110
        [<ffffffffb0a39d95>] invert_screen+0xe5/0x470
        [<ffffffffb0a21dcb>] set_selection+0x44b/0x12f0
        [<ffffffffb0a3bfae>] tioclinux+0xee/0x490
        [<ffffffffb0a1d114>] vt_ioctl+0xff4/0x2670
        [<ffffffffb0a0089a>] tty_ioctl+0x46a/0x1a10
        [<ffffffffb052db3d>] do_vfs_ioctl+0x5bd/0xc40
        [<ffffffffb052e2f2>] SyS_ioctl+0x132/0x170
        [<ffffffffb11c9b1b>] system_call_fastpath+0x22/0x27
        Memory state around the buggy address:
         ffff8800000fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00
         00 00
         ffff8800000fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00
         00 00 00
        >ffff880000100000: ff ff ff ff ff ff ff ff ff ff ff ff ff
         ff ff ff
    
    It can be reproduce in the linux mainline by the program:
      #include <stdio.h>
      #include <stdlib.h>
      #include <unistd.h>
      #include <fcntl.h>
      #include <sys/types.h>
      #include <sys/stat.h>
      #include <sys/ioctl.h>
      #include <linux/vt.h>
    
      struct tiocl_selection {
        unsigned short xs;      /* X start */
        unsigned short ys;      /* Y start */
        unsigned short xe;      /* X end */
        unsigned short ye;      /* Y end */
        unsigned short sel_mode; /* selection mode */
      };
    
      #define TIOCL_SETSEL    2
      struct tiocl {
        unsigned char type;
        unsigned char pad;
        struct tiocl_selection sel;
      };
    
      int main()
      {
        int fd = 0;
        const char *dev = "/dev/char/4:1";
    
        struct vt_consize v = {0};
        struct tiocl tioc = {0};
    
        fd = open(dev, O_RDWR, 0);
    
        v.v_rows = 3346;
        ioctl(fd, VT_RESIZEX, &v);
    
        tioc.type = TIOCL_SETSEL;
        ioctl(fd, TIOCLINUX, &tioc);
    
        return 0;
      }
    
    When resize the screen, update the 'vc->vc_size_row' to the new_row_size,
    but when 'set_origin' in 'vgacon_set_origin', vgacon use 'vga_vram_base'
    for 'vc_origin' and 'vc_visible_origin', not 'vc_screenbuf'. It maybe
    smaller than 'vc_screenbuf'. When TIOCLINUX, use the new_row_size to calc
    the offset, it maybe larger than the vga_vram_size in vgacon driver, then
    bad access.
    Also, if set an larger screenbuf firstly, then set an more larger
    screenbuf, when copy old_origin to new_origin, a bad access may happen.
    
    So, If the screen size larger than vga_vram, resize screen should be
    failed. This alse fix CVE-2020-8649 and CVE-2020-8647.
    
    Linus pointed out that overflow checking seems absent. We're saved by
    the existing bounds checks in vc_do_resize() with rather strict
    limits:
    
            if (cols > VC_RESIZE_MAXCOL || lines > VC_RESIZE_MAXROW)
                    return -EINVAL;
    
    Fixes: 0aec4867dca14 ("[PATCH] SVGATextMode fix")
    Reference: CVE-2020-8647 and CVE-2020-8649
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    [danvet: augment commit message to point out overflow safety]
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200304022429.37738-1-zhangxiaoxu5@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8137e78b8c68491b172727fe22ca00a31166c13
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Wed Feb 26 18:50:36 2020 +0100

    usb: core: port: do error out if usb_autopm_get_interface() fails
    
    commit 1f8b39bc99a31759e97a0428a5c3f64802c1e61d upstream.
    
    Reviewing a fresh portion of coverity defects in USB core
    (specifically CID 1458999), Alan Stern noted below in [1]:
    
    On Tue, Feb 25, 2020 at 02:39:23PM -0500, Alan Stern wrote:
     > A revised search finds line 997 in drivers/usb/core/hub.c and lines
     > 216, 269 in drivers/usb/core/port.c.  (I didn't try looking in any
     > other directories.)  AFAICT all three of these should check the
     > return value, although a error message in the kernel log probably
     > isn't needed.
    
    Factor out the usb_port_runtime_{resume,suspend}() changes into a
    standalone patch to allow conflict-free porting on top of stable v3.9+.
    
    [1] https://lore.kernel.org/lkml/Pine.LNX.4.44L0.2002251419120.1485-100000@iolanthe.rowland.org
    
    Fixes: 971fcd492cebf5 ("usb: add runtime pm support for usb port device")
    Cc: stable@vger.kernel.org # v3.9+
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200226175036.14946-3-erosca@de.adit-jv.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 739721ebbc2640f72daee969e3cdaa3ae32af8f3
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Wed Feb 26 18:50:35 2020 +0100

    usb: core: hub: do error out if usb_autopm_get_interface() fails
    
    commit 60e3f6e4ac5b0fda43dad01c32e09409ec710045 upstream.
    
    Reviewing a fresh portion of coverity defects in USB core
    (specifically CID 1458999), Alan Stern noted below in [1]:
    
    On Tue, Feb 25, 2020 at 02:39:23PM -0500, Alan Stern wrote:
     > A revised search finds line 997 in drivers/usb/core/hub.c and lines
     > 216, 269 in drivers/usb/core/port.c.  (I didn't try looking in any
     > other directories.)  AFAICT all three of these should check the
     > return value, although a error message in the kernel log probably
     > isn't needed.
    
    Factor out the usb_remove_device() change into a standalone patch to
    allow conflict-free integration on top of the earliest stable branches.
    
    [1] https://lore.kernel.org/lkml/Pine.LNX.4.44L0.2002251419120.1485-100000@iolanthe.rowland.org
    
    Fixes: 253e05724f9230 ("USB: add a "remove hardware" sysfs attribute")
    Cc: stable@vger.kernel.org # v2.6.33+
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200226175036.14946-2-erosca@de.adit-jv.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc96ee7948d7be82bc8d3a880e55634e168f232a
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Wed Feb 26 18:50:34 2020 +0100

    usb: core: hub: fix unhandled return by employing a void function
    
    commit 63d6d7ed475c53dc1cabdfedf63de1fd8dcd72ee upstream.
    
    Address below Coverity complaint (Feb 25, 2020, 8:06 AM CET):

commit cb05b3e1b16a95fc34c1a02cc37779443d0fd09d
Author: Peter Chen <peter.chen@nxp.com>
Date:   Wed Feb 19 22:14:55 2020 +0800

    usb: cdns3: gadget: toggle cycle bit before reset endpoint
    
    commit 4bf2dd65135a2d7fe202f7c10d65b51bcf645ac6 upstream.
    
    If there are TRBs pending during reset endpoint operation, the
    DMA will advance after reset operation, but it isn't expected,
    since the data is not yet available (For OUT, the data is not
    yet available). After the data is ready, there won't be any
    interrupt since the EP_TRADDR already points to next TRB entry
    and doorbell is not set.
    
    To fix it, it toggles cycle bit before reset operation, and restores
    it after reset, it could avoid unexpected DMA advance due to
    cycle bit is for software during the endpoint reset operation.
    
    Fixes: 7733f6c32e36 ("usb: cdns3: Add Cadence USB3 DRD Driver")
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200219141455.23257-3-peter.chen@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39b57e6ab2983b2bc51f671fc4905bee3a69708f
Author: Peter Chen <peter.chen@nxp.com>
Date:   Wed Feb 19 22:14:54 2020 +0800

    usb: cdns3: gadget: link trb should point to next request
    
    commit 8a7c47fb7285b23ca259c888016513d5566fa9e8 upstream.
    
    It has marked the dequeue trb as link trb, but its next segment
    pointer is still itself, it causes the transfer can't go on. Fix
    it by set its pointer as the trb address for the next request.
    
    Fixes: f616c3bda47e ("usb: cdns3: Fix dequeue implementation")
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200219141455.23257-2-peter.chen@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1809fb28cab15d7dddfb4721acae87b12cbe3b8
Author: Pratham Pratap <prathampratap@codeaurora.org>
Date:   Mon Mar 2 21:44:43 2020 +0000

    usb: dwc3: gadget: Update chain bit correctly when using sg list
    
    commit dad2aff3e827b112f27fa5e6f2bf87a110067c3f upstream.
    
    If scatter-gather operation is allowed, a large USB request is split
    into multiple TRBs. For preparing TRBs for sg list, driver iterates
    over the list and creates TRB for each sg and mark the chain bit to
    false for the last sg. The current IOMMU driver is clubbing the list
    of sgs which shares a page boundary into one and giving it to USB driver.
    With this the number of sgs mapped it not equal to the the number of sgs
    passed. Because of this USB driver is not marking the chain bit to false
    since it couldn't iterate to the last sg. This patch addresses this issue
    by marking the chain bit to false if it is the last mapped sg.
    
    At a practical level, this patch resolves USB transfer stalls
    seen with adb on dwc3 based db845c, pixel3 and other qcom
    hardware after functionfs gadget added scatter-gather support
    around v4.20.
    
    Credit also to Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
    who implemented a very similar fix to this issue.
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Yang Fei <fei.yang@intel.com>
    Cc: Thinh Nguyen <thinhn@synopsys.com>
    Cc: Tejas Joglekar <tejas.joglekar@synopsys.com>
    Cc: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Cc: Jack Pham <jackp@codeaurora.org>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Linux USB List <linux-usb@vger.kernel.org>
    Cc: stable <stable@vger.kernel.org> #4.20+
    Signed-off-by: Pratham Pratap <prathampratap@codeaurora.org>
    [jstultz: Slight tweak to remove sg_is_last() usage, reworked
              commit message, minor comment tweak]
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Link: https://lore.kernel.org/r/20200302214443.55783-1-john.stultz@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 807569e0dc5849437270f9500107e13d6045f33f
Author: Dan Lazewatsky <dlaz@chromium.org>
Date:   Wed Feb 26 14:34:38 2020 +0000

    usb: quirks: add NO_LPM quirk for Logitech Screen Share
    
    commit b96ed52d781a2026d0c0daa5787c6f3d45415862 upstream.
    
    LPM on the device appears to cause xHCI host controllers to claim
    that there isn't enough bandwidth to support additional devices.
    
    Signed-off-by: Dan Lazewatsky <dlaz@chromium.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: https://lore.kernel.org/r/20200226143438.1445-1-gustavo.padovan@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c71ce693e4e7c035c16e650db1728523bd9b912f
Author: Jim Lin <jilin@nvidia.com>
Date:   Mon Mar 2 22:21:35 2020 +0800

    usb: storage: Add quirk for Samsung Fit flash
    
    commit 86d92f5465958752481269348d474414dccb1552 upstream.
    
    Current driver has 240 (USB2.0) and 2048 (USB3.0) as max_sectors,
    e.g., /sys/bus/scsi/devices/0:0:0:0/max_sectors
    
    If data access times out, driver error handling will issue a port
    reset.
    Sometimes Samsung Fit (090C:1000) flash disk will not respond to
    later Set Address or Get Descriptor command.
    
    Adding this quirk to limit max_sectors to 64 sectors to avoid issue
    occurring.
    
    Signed-off-by: Jim Lin <jilin@nvidia.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1583158895-31342-1-git-send-email-jilin@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e76e39f7c65b485035b187d6c61bbfb0791053e1
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Fri Feb 21 11:19:06 2020 +0100

    cifs: fix rename() by ensuring source handle opened with DELETE bit
    
    commit 86f740f2aed5ea7fe1aa86dc2df0fb4ab0f71088 upstream.
    
    To rename a file in SMB2 we open it with the DELETE access and do a
    special SetInfo on it. If the handle is missing the DELETE bit the
    server will fail the SetInfo with STATUS_ACCESS_DENIED.
    
    We currently try to reuse any existing opened handle we have with
    cifs_get_writable_path(). That function looks for handles with WRITE
    access but doesn't check for DELETE, making rename() fail if it finds
    a handle to reuse. Simple reproducer below.
    
    To select handles with the DELETE bit, this patch adds a flag argument
    to cifs_get_writable_path() and find_writable_file() and the existing
    'bool fsuid_only' argument is converted to a flag.
    
    The cifsFileInfo struct only stores the UNIX open mode but not the
    original SMB access flags. Since the DELETE bit is not mapped in that
    mode, this patch stores the access mask in cifs_fid on file open,
    which is accessible from cifsFileInfo.
    
    Simple reproducer:
    
            #include <stdio.h>
            #include <stdlib.h>
            #include <sys/types.h>
            #include <sys/stat.h>
            #include <fcntl.h>
            #include <unistd.h>
            #define E(s) perror(s), exit(1)
    
            int main(int argc, char *argv[])
            {
                    int fd, ret;
                    if (argc != 3) {
                            fprintf(stderr, "Usage: %s A B\n"
                            "create&open A in write mode, "
                            "rename A to B, close A\n", argv[0]);
                            return 0;
                    }
    
                    fd = openat(AT_FDCWD, argv[1], O_WRONLY|O_CREAT|O_SYNC, 0666);
                    if (fd == -1) E("openat()");
    
                    ret = rename(argv[1], argv[2]);
                    if (ret) E("rename()");
    
                    ret = close(fd);
                    if (ret) E("close()");
    
                    return ret;
            }
    
    $ gcc -o bugrename bugrename.c
    $ ./bugrename /mnt/a /mnt/b
    rename(): Permission denied
    
    Fixes: 8de9e86c67ba ("cifs: create a helper to find a writeable handle by path name")
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98cc1bd575d2ecf79a70b7c5a7f0188515ca308b
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Wed Feb 19 06:01:03 2020 +1000

    cifs: don't leak -EAGAIN for stat() during reconnect
    
    commit fc513fac56e1b626ae48a74d7551d9c35c50129e upstream.
    
    If from cifs_revalidate_dentry_attr() the SMB2/QUERY_INFO call fails with an
    error, such as STATUS_SESSION_EXPIRED, causing the session to be reconnected
    it is possible we will leak -EAGAIN back to the application even for
    system calls such as stat() where this is not a valid error.
    
    Fix this by re-trying the operation from within cifs_revalidate_dentry_attr()
    if cifs_get_inode_info*() returns -EAGAIN.
    
    This fixes stat() and possibly also other system calls that uses
    cifs_revalidate_dentry*().
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6369c1e0b6463e590c9649be1102575833a4d3a9
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Tue Feb 25 15:29:21 2020 +0800

    ALSA: hda/realtek - Enable the headset of ASUS B9450FA with ALC294
    
    commit 8b33a134a9cc2a501f8fc731d91caef39237d495 upstream.
    
    A headset on the laptop like ASUS B9450FA does not work, until quirk
    ALC294_FIXUP_ASUS_HPE is applied.
    
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200225072920.109199-1-jian-hong@endlessm.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 332464f910a74a12e5a92207e48dbf8aceb0a41f
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sun Feb 23 10:24:16 2020 +0100

    ALSA: hda/realtek - Fix silent output on Gigabyte X570 Aorus Master
    
    commit 0d45e86d2267d5bdf7bbb631499788da1c27ceb2 upstream.
    
    The Gigabyte X570 Aorus Master motherboard with ALC1220 codec
    requires a similar workaround for Clevo laptops to enforce the
    DAC/mixer connection path. Set up a quirk entry for that.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205275
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200223092416.15016-2-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cb8b8760b7be0712f5f6d96ef409250e49adc5a
Author: Kailang Yang <kailang@realtek.com>
Date:   Mon Feb 10 16:30:26 2020 +0800

    ALSA: hda/realtek - Add Headset Button supported for ThinkPad X1
    
    commit 76f7dec08fd64e9e3ad0810a1a8a60b0a846d348 upstream.
    
    ThinkPad want to support Headset Button control.
    This patch will enable it.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/7f0b7128f40f41f6b5582ff610adc33d@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f35e259c5444cb86be8df33965b9574edd6aecc1
Author: Kailang Yang <kailang@realtek.com>
Date:   Thu Feb 20 15:21:54 2020 +0800

    ALSA: hda/realtek - Add Headset Mic supported
    
    commit 78def224f59c05d00e815be946ec229719ccf377 upstream.
    
    Dell desktop platform supported headset Mic.
    Add pin verb to enable headset Mic.
    This platform only support fixed type headset for Iphone type.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/b9da28d772ef43088791b0f3675929e7@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f30f3aa5c3b9c7f3a47a72790e82ba93fb910c10
Author: Christian Brauner <christian.brauner@ubuntu.com>
Date:   Tue Mar 3 17:43:40 2020 +0100

    binder: prevent UAF for binderfs devices II
    
    commit f0fe2c0f050d31babcad7d65f1d550d462a40064 upstream.
    
    This is a necessary follow up to the first fix I proposed and we merged
    in 2669b8b0c79 ("binder: prevent UAF for binderfs devices"). I have been
    overly optimistic that the simple fix I proposed would work. But alas,
    ihold() + iput() won't work since the inodes won't survive the
    destruction of the superblock.
    So all we get with my prior fix is a different race with a tinier
    race-window but it doesn't solve the issue. Fwiw, the problem lies with
    generic_shutdown_super(). It even has this cozy Al-style comment:
    
              if (!list_empty(&sb->s_inodes)) {
                      printk("VFS: Busy inodes after unmount of %s. "
                         "Self-destruct in 5 seconds.  Have a nice day...\n",
                         sb->s_id);
              }
    
    On binder_release(), binder_defer_work(proc, BINDER_DEFERRED_RELEASE) is
    called which punts the actual cleanup operation to a workqueue. At some
    point, binder_deferred_func() will be called which will end up calling
    binder_deferred_release() which will retrieve and cleanup the
    binder_context attach to this struct binder_proc.
    
    If we trace back where this binder_context is attached to binder_proc we
    see that it is set in binder_open() and is taken from the struct
    binder_device it is associated with. This obviously assumes that the
    struct binder_device that context is attached to is _never_ freed. While
    that might be true for devtmpfs binder devices it is most certainly
    wrong for binderfs binder devices.
    
    So, assume binder_open() is called on a binderfs binder devices. We now
    stash away the struct binder_context associated with that struct
    binder_devices:
            proc->context = &binder_dev->context;
            /* binderfs stashes devices in i_private */
            if (is_binderfs_device(nodp)) {
                    binder_dev = nodp->i_private;
                    info = nodp->i_sb->s_fs_info;
                    binder_binderfs_dir_entry_proc = info->proc_log_dir;
            } else {
            .
            .
            .
            proc->context = &binder_dev->context;
    
    Now let's assume that the binderfs instance for that binder devices is
    shutdown via umount() and/or the mount namespace associated with it goes
    away. As long as there is still an fd open for that binderfs binder
    device things are fine. But let's assume we now close the last fd for
    that binderfs binder device. Now binder_release() is called and punts to
    the workqueue. Assume that the workqueue has quite a bit of stuff to do
    and doesn't get to cleaning up the struct binder_proc and the associated
    struct binder_context with it for that binderfs binder device right
    away. In the meantime, the VFS is killing the super block and is
    ultimately calling sb->evict_inode() which means it will call
    binderfs_evict_inode() which does:
    
    static void binderfs_evict_inode(struct inode *inode)
    {
            struct binder_device *device = inode->i_private;
            struct binderfs_info *info = BINDERFS_I(inode);
    
            clear_inode(inode);
    
            if (!S_ISCHR(inode->i_mode) || !device)
                    return;
    
            mutex_lock(&binderfs_minors_mutex);
            --info->device_count;
            ida_free(&binderfs_minors, device->miscdev.minor);
            mutex_unlock(&binderfs_minors_mutex);
    
            kfree(device->context.name);
            kfree(device);
    }
    
    thereby freeing the struct binder_device including struct
    binder_context.
    
    Now the workqueue finally has time to get around to cleaning up struct
    binder_proc and is now trying to access the associate struct
    binder_context. Since it's already freed it will OOPs.
    
    Fix this by introducing a refounct on binder devices.
    
    This is an alternative fix to 51d8a7eca677 ("binder: prevent UAF read in
    print_binder_transaction_log_entry()").
    
    Fixes: 3ad20fe393b3 ("binder: implement binderfs")
    Fixes: 2669b8b0c798 ("binder: prevent UAF for binderfs devices")
    Fixes: 03e2e07e3814 ("binder: Make transaction_log available in binderfs")
    Related : 51d8a7eca677 ("binder: prevent UAF read in print_binder_transaction_log_entry()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20200303164340.670054-1-christian.brauner@ubuntu.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2d63e7734ed5f0675bdde3cb3007cea7da98eae
Author: Christian Brauner <christian.brauner@ubuntu.com>
Date:   Fri Feb 21 19:01:24 2020 +0100

    binder: prevent UAF for binderfs devices
    
    commit 2669b8b0c798fbe1a31d49e07aa33233d469ad9b upstream.
    
    On binder_release(), binder_defer_work(proc, BINDER_DEFERRED_RELEASE) is
    called which punts the actual cleanup operation to a workqueue. At some
    point, binder_deferred_func() will be called which will end up calling
    binder_deferred_release() which will retrieve and cleanup the
    binder_context attach to this struct binder_proc.
    
    If we trace back where this binder_context is attached to binder_proc we
    see that it is set in binder_open() and is taken from the struct
    binder_device it is associated with. This obviously assumes that the
    struct binder_device that context is attached to is _never_ freed. While
    that might be true for devtmpfs binder devices it is most certainly
    wrong for binderfs binder devices.
    
    So, assume binder_open() is called on a binderfs binder devices. We now
    stash away the struct binder_context associated with that struct
    binder_devices:
            proc->context = &binder_dev->context;
            /* binderfs stashes devices in i_private */
            if (is_binderfs_device(nodp)) {
                    binder_dev = nodp->i_private;
                    info = nodp->i_sb->s_fs_info;
                    binder_binderfs_dir_entry_proc = info->proc_log_dir;
            } else {
            .
            .
            .
            proc->context = &binder_dev->context;
    
    Now let's assume that the binderfs instance for that binder devices is
    shutdown via umount() and/or the mount namespace associated with it goes
    away. As long as there is still an fd open for that binderfs binder
    device things are fine. But let's assume we now close the last fd for
    that binderfs binder device. Now binder_release() is called and punts to
    the workqueue. Assume that the workqueue has quite a bit of stuff to do
    and doesn't get to cleaning up the struct binder_proc and the associated
    struct binder_context with it for that binderfs binder device right
    away. In the meantime, the VFS is killing the super block and is
    ultimately calling sb->evict_inode() which means it will call
    binderfs_evict_inode() which does:
    
    static void binderfs_evict_inode(struct inode *inode)
    {
            struct binder_device *device = inode->i_private;
            struct binderfs_info *info = BINDERFS_I(inode);
    
            clear_inode(inode);
    
            if (!S_ISCHR(inode->i_mode) || !device)
                    return;
    
            mutex_lock(&binderfs_minors_mutex);
            --info->device_count;
            ida_free(&binderfs_minors, device->miscdev.minor);
            mutex_unlock(&binderfs_minors_mutex);
    
            kfree(device->context.name);
            kfree(device);
    }
    
    thereby freeing the struct binder_device including struct
    binder_context.
    
    Now the workqueue finally has time to get around to cleaning up struct
    binder_proc and is now trying to access the associate struct
    binder_context. Since it's already freed it will OOPs.
    
    Fix this by holding an additional reference to the inode that is only
    released once the workqueue is done cleaning up struct binder_proc. This
    is an easy alternative to introducing separate refcounting on struct
    binder_device which we can always do later if it becomes necessary.
    
    This is an alternative fix to 51d8a7eca677 ("binder: prevent UAF read in
    print_binder_transaction_log_entry()").
    
    Fixes: 3ad20fe393b3 ("binder: implement binderfs")
    Fixes: 03e2e07e3814 ("binder: Make transaction_log available in binderfs")
    Related : 51d8a7eca677 ("binder: prevent UAF read in print_binder_transaction_log_entry()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3227ecd0ef53979acc65554d05437d50d8b0333a
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Thu Feb 20 18:10:01 2020 +0200

    firmware: imx: scu: Ensure sequential TX
    
    commit 26d0fba29c96241de8a9d16f045b1de49875884c upstream.
    
    SCU requires that all messages words are written sequentially but linux MU
    driver implements multiple independent channels for each register so ordering
    between different channels must be ensured by SCU API interface.
    
    Wait for tx_done before every send to ensure that no queueing happens at the
    mailbox channel level.
    
    Fixes: edbee095fafb ("firmware: imx: add SCU firmware driver support")
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by:: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f121ace25f1310c89076ea65ca9da099706ace2
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Mon Feb 17 11:43:15 2020 +0800

    selftests: forwarding: vxlan_bridge_1d: use more proper tos value
    
    [ Upstream commit 9b64208f74fbd0e920475ecfe9326f8443fdc3a5 ]
    
    0x11 and 0x12 set the ECN bits based on RFC2474, it would be better to avoid
    that. 0x14 and 0x18 would be better and works as well.
    
    Reported-by: Petr Machata <petrm@mellanox.com>
    Fixes: 4e867c9a50ff ("selftests: forwarding: vxlan_bridge_1d: fix tos value")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ab5bd41c6d7bd94bd172f368ab8602faeb08cdd
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Jan 31 17:52:30 2020 -0800

    arch/csky: fix some Kconfig typos
    
    [ Upstream commit bebd26ab623616728d6e72b5c74a47bfff5287d8 ]
    
    Fix wording in help text for the CPU_HAS_LDSTEX symbol.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Guo Ren <guoren@kernel.org>
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 479466726bf12290910df4bec6f4c106dbe42593
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Sun Feb 2 14:11:11 2020 +0800

    csky: Fixup compile warning for three unimplemented syscalls
    
    [ Upstream commit 2305f60b76110cb3e8658a4ae85d1f7eb0c66a5b ]
    
    Implement fstat64, fstatat64, clone3 syscalls to fixup
    checksyscalls.sh compile warnings.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3469dfd86e097bbc9d56c1bd255aad316ba746b1
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Sun Feb 2 09:58:42 2020 +0800

    csky: Fixup ftrace modify panic
    
    [ Upstream commit 359ae00d12589c31cf103894d0f32588d523ca83 ]
    
    During ftrace init, linux will replace all function prologues
    (call_mcout) with nops, but it need flush_dcache and
    invalidate_icache to make it work. So flush_cache functions
    couldn't be nested called by ftrace framework.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7ce725c525ad7dfa9d976a60776104cd8c5b4d3
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Tue Jan 7 12:21:25 2020 +0800

    csky/smp: Fixup boot failed when CONFIG_SMP
    
    [ Upstream commit c9492737b25ca32679ba3163609d938c9abfd508 ]
    
    If we use a non-ipi-support interrupt controller, it will cause panic here.
    We should let cpu up and work with CONFIG_SMP, when we use a non-ipi intc.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb2ac8c497cddd2aa73e6f0777af486a859052ec
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Tue Dec 17 11:12:55 2019 +0800

    csky: Set regs->usp to kernel sp, when the exception is from kernel
    
    [ Upstream commit f8e17c17b81070f38062dce79ca7f4541851dadd ]
    
    In the past, we didn't care about kernel sp when saving pt_reg. But in some
    cases, we still need pt_reg->usp to represent the kernel stack before enter
    exception.
    
    For cmpxhg in atomic.S, we need save and restore usp for above.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6db7f3bdc15340b51ad9d2f7f680d153c56bab52
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Mon Dec 30 15:53:37 2019 +0800

    csky/mm: Fixup export invalid_pte_table symbol
    
    [ Upstream commit 7f4a567332f035ab16b29010fbd04a0f10183c77 ]
    
    There is no present bit in csky pmd hardware, so we need to prepare invalid_pte_table
    for empty pmd entry and the functions (pmd_none & pmd_present) in pgtable.h need
    invalid_pte_talbe to get result. If a module use these functions, we need export the
    symbol for it.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Cc: Mo Qihui <qihui.mo@verisilicon.com>
    Cc: Zhange Jian <zhang_jian5@dahuatech.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 229fa6c8d2845574f860e53c1657b0e2e83a8ee4
Author: Tim Harvey <tharvey@gateworks.com>
Date:   Wed Feb 19 15:19:36 2020 -0800

    net: thunderx: workaround BGX TX Underflow issue
    
    [ Upstream commit 971617c3b761c876d686a2188220a33898c90e99 ]
    
    While it is not yet understood why a TX underflow can easily occur
    for SGMII interfaces resulting in a TX wedge. It has been found that
    disabling/re-enabling the LMAC resolves the issue.
    
    Signed-off-by: Tim Harvey <tharvey@gateworks.com>
    Reviewed-by: Robert Jones <rjones@gateworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a90f613e1b4479eb30efc0fa6910b5864fae53eb
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Feb 19 22:23:18 2020 -0800

    x86/xen: Distribute switch variables for initialization
    
    [ Upstream commit 9038ec99ceb94fb8d93ade5e236b2928f0792c7c ]
    
    Variables declared in a switch statement before any case statements
    cannot be automatically initialized with compiler instrumentation (as
    they are not part of any execution flow). With GCC's proposed automatic
    stack variable initialization feature, this triggers a warning (and they
    don't get initialized). Clang's automatic stack variable initialization
    (via CONFIG_INIT_STACK_ALL=y) doesn't throw a warning, but it also
    doesn't initialize such variables[1]. Note that these warnings (or silent
    skipping) happen before the dead-store elimination optimization phase,
    so even when the automatic initializations are later elided in favor of
    direct initializations, the warnings remain.
    
    To avoid these problems, move such variables into the "case" where
    they're used or lift them up into the main function body.
    
    arch/x86/xen/enlighten_pv.c: In function ‘xen_write_msr_safe’:
    arch/x86/xen/enlighten_pv.c:904:12: warning: statement will never be executed [-Wswitch-unreachable]
      904 |   unsigned which;
          |            ^~~~~
    
    [1] https://bugs.llvm.org/show_bug.cgi?id=44916
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200220062318.69299-1-keescook@chromium.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    [boris: made @which an 'unsigned int']
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10b00764ed11269e9cd5bb8f7500492ab4df86ec
Author: Michal Swiatkowski <michal.swiatkowski@intel.com>
Date:   Thu Feb 13 13:31:24 2020 -0800

    ice: Don't tell the OS that link is going down
    
    [ Upstream commit 8a55c08d3bbc9ffc9639f69f742e59ebd99f913b ]
    
    Remove code that tell the OS that link is going down when user
    change flow control via ethtool. When link is up it isn't certain
    that link goes down after 0x0605 aq command. If link doesn't go
    down, OS thinks that link is down, but physical link is up. To
    reset this state user have to take interface down and up.
    
    If link goes down after 0x0605 command, FW send information
    about that and after that driver tells the OS that the link goes
    down. So this code in ethtool is unnecessary.
    
    Signed-off-by: Michal Swiatkowski <michal.swiatkowski@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b6be0d2f942c2d6a4a1f88106c53f88bd5b2a16
Author: Keith Busch <kbusch@kernel.org>
Date:   Thu Feb 20 00:59:36 2020 +0900

    nvme: Fix uninitialized-variable warning
    
    [ Upstream commit 15755854d53b4bbb0bb37a0fce66f0156cfc8a17 ]
    
    gcc may detect a false positive on nvme using an unintialized variable
    if setting features fails. Since this is not a fast path, explicitly
    initialize this variable to suppress the warning.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b290fb0b797176ef96b0dbfe80cb7e0b2aea347e
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Mon Feb 10 10:48:11 2020 +0100

    s390/qdio: fill SL with absolute addresses
    
    [ Upstream commit e9091ffd6a0aaced111b5d6ead5eaab5cd7101bc ]
    
    As the comment says, sl->sbal holds an absolute address. qeth currently
    solves this through wild casting, while zfcp doesn't care.
    
    Handle this properly in the code that actually builds the SL.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Reviewed-by: Steffen Maier <maier@linux.ibm.com> [for qdio]
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad50dbbf572957007583ec33b3258c8a02ca8421
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Thu Jan 16 12:46:51 2020 -0800

    x86/boot/compressed: Don't declare __force_order in kaslr_64.c
    
    [ Upstream commit df6d4f9db79c1a5d6f48b59db35ccd1e9ff9adfc ]
    
    GCC 10 changed the default to -fno-common, which leads to
    
        LD      arch/x86/boot/compressed/vmlinux
      ld: arch/x86/boot/compressed/pgtable_64.o:(.bss+0x0): multiple definition of `__force_order'; \
        arch/x86/boot/compressed/kaslr_64.o:(.bss+0x0): first defined here
      make[2]: *** [arch/x86/boot/compressed/Makefile:119: arch/x86/boot/compressed/vmlinux] Error 1
    
    Since __force_order is already provided in pgtable_64.c, there is no
    need to declare __force_order in kaslr_64.c.
    
    Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200124181811.4780-1-hjl.tools@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccef9c5f646b610d01813fa611622fe610884468
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Feb 12 12:32:18 2020 +0200

    nvme-pci: Use single IRQ vector for old Apple models
    
    [ Upstream commit 98f7b86a0becc1154b1a6df6e75c9695dfd87e0d ]
    
    People reported that old Apple machines are not working properly
    if the non-first IRQ vector is in use.
    
    Set quirk for that models to limit IRQ to use first vector only.
    
    Based on original patch by GitHub user npx001.
    
    Link: https://github.com/Dunedan/mbp-2016-linux/issues/9
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Leif Liddy <leif.liddy@gmail.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e13797d5ec540e8654d5ef9e1c5998ddff568b8e
Author: Shyjumon N <shyjumon.n@intel.com>
Date:   Thu Feb 6 13:17:25 2020 -0700

    nvme/pci: Add sleep quirk for Samsung and Toshiba drives
    
    [ Upstream commit 1fae37accfc5872af3905d4ba71dc6ab15829be7 ]
    
    The Samsung SSD SM981/PM981 and Toshiba SSD KBG40ZNT256G on the Lenovo
    C640 platform experience runtime resume issues when the SSDs are kept in
    sleep/suspend mode for long time.
    
    This patch applies the 'Simple Suspend' quirk to these configurations.
    With this patch, the issue had not been observed in a 1+ day test.
    
    Reviewed-by: Jon Derrick <jonathan.derrick@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Shyjumon N <shyjumon.n@intel.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b412c4aa34b286fd85d95b4c8869d861fd07044
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Mon Feb 10 15:51:15 2020 +0800

    iommu/amd: Disable IOMMU on Stoney Ridge systems
    
    [ Upstream commit 3dfee47b215e49788cfc80e474820ea2e948c031 ]
    
    Serious screen flickering when Stoney Ridge outputs to a 4K monitor.
    
    Use identity-mapping and PCI ATS doesn't help this issue.
    
    According to Alex Deucher, IOMMU isn't enabled on Windows, so let's do
    the same here to avoid screen flickering on 4K monitor.
    
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Bug: https://gitlab.freedesktop.org/drm/amd/issues/961
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 236efa8971f86bb35906b791bbb31efcde05065f
Author: Hamdan Igbaria <hamdani@mellanox.com>
Date:   Wed Feb 5 14:31:12 2020 +0200

    net/mlx5: DR, Fix matching on vport gvmi
    
    [ Upstream commit 52d214976d4f64504c1bbb52d47b46a5a3d5ee42 ]
    
    Set vport gvmi in the tag, only when source gvmi is set in the bit mask.
    
    Fixes: 26d688e3 ("net/mlx5: DR, Add Steering entry (STE) utilities")
    Signed-off-by: Hamdan Igbaria <hamdani@mellanox.com>
    Reviewed-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a1e1dda56e2a3276c611672d6c67226457a3ca2
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Mon Feb 17 12:39:47 2020 +0100

    efi: Only print errors about failing to get certs if EFI vars are found
    
    [ Upstream commit 3be54d558c75562e42bc83d665df024bd79d399b ]
    
    If CONFIG_LOAD_UEFI_KEYS is enabled, the kernel attempts to load the certs
    from the db, dbx and MokListRT EFI variables into the appropriate keyrings.
    
    But it just assumes that the variables will be present and prints an error
    if the certs can't be loaded, even when is possible that the variables may
    not exist. For example the MokListRT variable will only be present if shim
    is used.
    
    So only print an error message about failing to get the certs list from an
    EFI variable if this is found. Otherwise these printed errors just pollute
    the kernel log ring buffer with confusing messages like the following:
    
    [    5.427251] Couldn't get size: 0x800000000000000e
    [    5.427261] MODSIGN: Couldn't get UEFI db list
    [    5.428012] Couldn't get size: 0x800000000000000e
    [    5.428023] Couldn't get UEFI MokListRT
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Tested-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d459c82abecc00fb154edb0cb8c807e9af98409
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Feb 16 23:48:29 2020 +0900

    s390: make 'install' not depend on vmlinux
    
    [ Upstream commit 94e90f727f7424d827256023cace829cad6896f4 ]
    
    For the same reason as commit 19514fc665ff ("arm, kbuild: make "make
    install" not depend on vmlinux"), the install targets should never
    trigger the rebuild of the kernel.
    
    The variable, CONFIGURE, is not set by anyone. Remove it as well.
    
    Link: https://lkml.kernel.org/r/20200216144829.27023-1-masahiroy@kernel.org
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25fb2908b9c490246f87d356ffb3c86b2df58f03
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Jan 24 08:48:55 2020 +0300

    s390/cio: cio_ignore_proc_seq_next should increase position index
    
    [ Upstream commit 8b101a5e14f2161869636ff9cb4907b7749dc0c2 ]
    
    if seq_file .next fuction does not change position index,
    read after some lseek can generate unexpected output.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206283
    Link: https://lore.kernel.org/r/d44c53a7-9bc1-15c7-6d4a-0c10cb9dffce@virtuozzo.com
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 764fc2ea82d83aa55ce198b796a3e7dd9c68eac2
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Mon Jan 20 10:17:29 2020 +0100

    watchdog: da9062: do not ping the hw during stop()
    
    [ Upstream commit e9a0e65eda3f78d0b04ec6136c591c000cbc3b76 ]
    
    The da9062 hw has a minimum ping cool down phase of at least 200ms. The
    driver takes that into account by setting the min_hw_heartbeat_ms to
    300ms and the core guarantees that the hw limit is observed for the
    ping() calls. But the core can't guarantee the required minimum ping
    cool down phase if a stop() command is send immediately after the ping()
    command. So it is not allowed to ping the watchdog within the stop()
    command as the driver does. Remove the ping can be done without doubts
    because the watchdog gets disabled anyway and a (re)start resets the
    watchdog counter too.
    
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20200120091729.16256-1-m.felsch@pengutronix.de
    [groeck: Updated description]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b1939fedc860c42eb69c8c5a84384cae7fb2cce
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun Feb 16 16:39:43 2020 -0300

    net: ethernet: dm9000: Handle -EPROBE_DEFER in dm9000_parse_dt()
    
    [ Upstream commit 9a6a0dea16177ccaecc116f560232e63bec115f1 ]
    
    The call to of_get_mac_address() can return -EPROBE_DEFER, for instance
    when the MAC address is read from a NVMEM driver that did not probe yet.
    
    Cc: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05e26a842a479db311f2dfcbe759904ce10f18f7
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 15 17:54:19 2020 +0100

    net: ks8851-ml: Fix 16-bit IO operation
    
    [ Upstream commit 58292104832fef6cb4a89f736012c0e0724c3442 ]
    
    The Micrel KSZ8851-16MLLI datasheet DS00002357B page 12 states that
    BE[3:0] signals are active high. This contradicts the measurements
    of the behavior of the actual chip, where these signals behave as
    active low. For example, to read the CIDER register, the bus must
    expose 0xc0c0 during the address phase, which means BE[3:0]=4'b1100.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Petr Stetiar <ynezz@true.cz>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63c064a835681a95ba29ee0e41657113ca917074
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 15 17:54:18 2020 +0100

    net: ks8851-ml: Fix 16-bit data access
    
    [ Upstream commit edacb098ea9c31589276152f09b4439052c0f2b1 ]
    
    The packet data written to and read from Micrel KSZ8851-16MLLI must be
    byte-swapped in 16-bit mode, add this byte-swapping.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Petr Stetiar <ynezz@true.cz>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e8396edb093b06704b97a20d347979e64ec874f
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 15 17:54:17 2020 +0100

    net: ks8851-ml: Remove 8-bit bus accessors
    
    [ Upstream commit 69233bba6543a37755158ca3382765387b8078df ]
    
    This driver is mixing 8-bit and 16-bit bus accessors for reasons unknown,
    however the speculation is that this was some sort of attempt to support
    the 8-bit bus mode.
    
    As per the KS8851-16MLL documentation, all two registers accessed via the
    8-bit accessors are internally 16-bit registers, so reading them using
    16-bit accessors is fine. The KS_CCR read can be converted to 16-bit read
    outright, as it is already a concatenation of two 8-bit reads of that
    register. The KS_RXQCR accesses are 8-bit only, however writing the top
    8 bits of the register is OK as well, since the driver caches the entire
    16-bit register value anyway.
    
    Finally, the driver is not used by any hardware in the kernel right now.
    The only hardware available to me is one with 16-bit bus, so I have no
    way to test the 8-bit bus mode, however it is unlikely this ever really
    worked anyway. If the 8-bit bus mode is ever required, it can be easily
    added by adjusting the 16-bit accessors to do 2 consecutive accesses,
    which is how this should have been done from the beginning.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Petr Stetiar <ynezz@true.cz>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30f5a66eebc923ff97e735c65f8758d8533465ed
Author: Igor Russkikh <irusskikh@marvell.com>
Date:   Fri Feb 14 18:44:52 2020 +0300

    net: atlantic: check rpc result and wait for rpc address
    
    [ Upstream commit e7b5f97e6574dc4918e375d5f8d24ec31653cd6d ]
    
    Artificial HW reliability tests revealed a possible hangup in
    the driver. Normally, when device disappears from bus, all
    register reads returns 0xFFFFFFFF.
    
    At remote procedure invocation towards FW there is a logic
    where result is compared with -1 in a loop.
    That caused an infinite loop if hardware due to some issues
    disappears from bus.
    
    Add extra result checks to prevent this.
    
    Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58eecbf16e97518f6802cc8491fdd20906ce82e8
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Feb 13 17:40:54 2020 +0800

    selftests: forwarding: vxlan_bridge_1d: fix tos value
    
    [ Upstream commit 4e867c9a50ff1a07ed0b86c3b1c8bc773933d728 ]
    
    After commit 71130f29979c ("vxlan: fix tos value before xmit") we start
    strict vxlan xmit tos value by RT_TOS(), which limits the tos value less
    than 0x1E. With current value 0x40 the test will failed with "v1: Expected
    to capture 10 packets, got 0". So let's choose a smaller tos value for
    testing.
    
    Fixes: d417ecf533fe ("selftests: forwarding: vxlan_bridge_1d: Add a TOS test")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c0f7f2097b8ce28705f00e4d744fc80dee77eda
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue Feb 11 15:32:56 2020 +0800

    selftests: forwarding: use proto icmp for {gretap, ip6gretap}_mac testing
    
    [ Upstream commit e8023b030ce1748930e2dc76353a262fe47d4745 ]
    
    For tc ip_proto filter, when we extract the flow via __skb_flow_dissect()
    without flag FLOW_DISSECTOR_F_STOP_AT_ENCAP, we will continue extract to
    the inner proto.
    
    So for GRE + ICMP messages, we should not track GRE proto, but inner ICMP
    proto.
    
    For test mirror_gre.sh, it may make user confused if we capture ICMP
    message on $h3(since the flow is GRE message). So I move the capture
    dev to h3-gt{4,6}, and only capture ICMP message.
    
    Before the fix:
    ]# ./mirror_gre.sh
    TEST: ingress mirror to gretap (skip_hw)                            [ OK ]
    TEST: egress mirror to gretap (skip_hw)                             [ OK ]
    TEST: ingress mirror to ip6gretap (skip_hw)                         [ OK ]
    TEST: egress mirror to ip6gretap (skip_hw)                          [ OK ]
    TEST: ingress mirror to gretap: envelope MAC (skip_hw)              [FAIL]
     Expected to capture 10 packets, got 0.
    TEST: egress mirror to gretap: envelope MAC (skip_hw)               [FAIL]
     Expected to capture 10 packets, got 0.
    TEST: ingress mirror to ip6gretap: envelope MAC (skip_hw)           [FAIL]
     Expected to capture 10 packets, got 0.
    TEST: egress mirror to ip6gretap: envelope MAC (skip_hw)            [FAIL]
     Expected to capture 10 packets, got 0.
    TEST: two simultaneously configured mirrors (skip_hw)               [ OK ]
    WARN: Could not test offloaded functionality
    
    After fix:
    ]# ./mirror_gre.sh
    TEST: ingress mirror to gretap (skip_hw)                            [ OK ]
    TEST: egress mirror to gretap (skip_hw)                             [ OK ]
    TEST: ingress mirror to ip6gretap (skip_hw)                         [ OK ]
    TEST: egress mirror to ip6gretap (skip_hw)                          [ OK ]
    TEST: ingress mirror to gretap: envelope MAC (skip_hw)              [ OK ]
    TEST: egress mirror to gretap: envelope MAC (skip_hw)               [ OK ]
    TEST: ingress mirror to ip6gretap: envelope MAC (skip_hw)           [ OK ]
    TEST: egress mirror to ip6gretap: envelope MAC (skip_hw)            [ OK ]
    TEST: two simultaneously configured mirrors (skip_hw)               [ OK ]
    WARN: Could not test offloaded functionality
    
    Fixes: ba8d39871a10 ("selftests: forwarding: Add test for mirror to gretap")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Petr Machata <pmachata@gmail.com>
    Tested-by: Petr Machata <pmachata@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d04dd98b9b37b20dc0cb6c1b07e0c7649c85ea75
Author: Harigovindan P <harigovi@codeaurora.org>
Date:   Thu Feb 6 14:42:01 2020 +0530

    drm/msm/dsi/pll: call vco set rate explicitly
    
    [ Upstream commit c6659785dfb3f8d75f1fe637e4222ff8178f5280 ]
    
    For a given byte clock, if VCO recalc value is exactly same as
    vco set rate value, vco_set_rate does not get called assuming
    VCO is already set to required value. But Due to GDSC toggle,
    VCO values are erased in the HW. To make sure VCO is programmed
    correctly, we forcefully call set_rate from vco_prepare.
    
    Signed-off-by: Harigovindan P <harigovi@codeaurora.org>
    Reviewed-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6e3a6be56bddbe681b6cdc305d9db458f7732f4
Author: Harigovindan P <harigovi@codeaurora.org>
Date:   Thu Feb 6 14:26:15 2020 +0530

    drm/msm/dsi: save pll state before dsi host is powered off
    
    [ Upstream commit a1028dcfd0dd97884072288d0c8ed7f30399b528 ]
    
    Save pll state before dsi host is powered off. Without this change
    some register values gets resetted.
    
    Signed-off-by: Harigovindan P <harigovi@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26bfd300f7fdb01ee63ead7e56724f953f7a0f72
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Tue Feb 4 16:24:13 2020 +0100

    scsi: megaraid_sas: silence a warning
    
    [ Upstream commit 0e99b2c625da181aebf1a3d13493e3f7a5057a9c ]
    
    Add a flag to DMA memory allocation to silence a warning.
    
    This driver allocates DMA memory for IO frames. This allocation may exceed
    MAX_ORDER pages for few megaraid_sas controllers (controllers with very
    high queue depth). Consequently, the driver has logic to keep reducing the
    controller queue depth until the DMA memory allocation succeeds.
    
    On impacted megaraid_sas controllers there would be multiple DMA allocation
    failures until driver settled on an allocation that fit. These failed DMA
    allocation requests caused stack traces in system logs. These were not
    harmful and this patch silences those warnings/stack traces.
    
    [mkp: clarified commit desc]
    
    Link: https://lore.kernel.org/r/20200204152413.7107-1-thenzl@redhat.com
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7c069e31daad70c75e7182e16d89ff0d79746ed
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Fri Jan 17 16:34:29 2020 +0100

    drm/modes: Allow DRM_MODE_ROTATE_0 when applying video mode parameters
    
    [ Upstream commit 5c320b6ce7510653bce68cecf80cf5b2d67e907f ]
    
    At the moment, only DRM_MODE_ROTATE_180 is allowed when we try to apply
    the rotation from the video mode parameters. It is also useful to allow
    DRM_MODE_ROTATE_0 in case there is only a reflect option in the video mode
    parameter (e.g. video=540x960,reflect_x).
    
    DRM_MODE_ROTATE_0 means "no rotation" and should therefore not require
    any special handling, so we can just add it to the if condition.
    
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200117153429.54700-3-stephan@gerhold.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a426889f435b6a40b71bb4477ec13764e63c723
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Fri Jan 17 16:34:28 2020 +0100

    drm/modes: Make sure to parse valid rotation value from cmdline
    
    [ Upstream commit e6980a727154b793adb218fbc7b4d6af52a7e364 ]
    
    A rotation value should have exactly one rotation angle.
    At the moment there is no validation for this when parsing video=
    parameters from the command line. This causes problems later on
    when we try to combine the command line rotation with the panel
    orientation.
    
    To make sure that we generate a valid rotation value:
      - Set DRM_MODE_ROTATE_0 by default (if no rotate= option is set)
      - Validate that there is exactly one rotation angle set
        (i.e. specifying the rotate= option multiple times is invalid)
    
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200117153429.54700-2-stephan@gerhold.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85c17bb5bf0f1c2772e99e900f622c78831d8269
Author: John Stultz <john.stultz@linaro.org>
Date:   Wed Jan 29 20:12:44 2020 +0000

    drm: msm: Fix return type of dsi_mgr_connector_mode_valid for kCFI
    
    [ Upstream commit 7fd2dfc3694922eb7ace4801b7208cf9f62ebc7d ]
    
    I was hitting kCFI crashes when building with clang, and after
    some digging finally narrowed it down to the
    dsi_mgr_connector_mode_valid() function being implemented as
    returning an int, instead of an enum drm_mode_status.
    
    This patch fixes it, and appeases the opaque word of the kCFI
    gods (seriously, clang inlining everything makes the kCFI
    backtraces only really rough estimates of where things went
    wrong).
    
    Thanks as always to Sami for his help narrowing this down.
    
    Cc: Rob Clark <robdclark@gmail.com>
    Cc: Sean Paul <sean@poorly.run>
    Cc: Sami Tolvanen <samitolvanen@google.com>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Alistair Delva <adelva@google.com>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: freedreno@lists.freedesktop.org
    Cc: clang-built-linux@googlegroups.com
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49c1c5f5fc62388cb108a70312ecaa3042f1ec25
Author: Brian Masney <masneyb@onstation.org>
Date:   Sat Jan 18 15:41:20 2020 -0500

    drm/msm/mdp5: rate limit pp done timeout warnings
    
    [ Upstream commit ef8c9809acb0805c991bba8bdd4749fc46d44a98 ]
    
    Add rate limiting of the 'pp done time out' warnings since these
    warnings can quickly fill the dmesg buffer.
    
    Signed-off-by: Brian Masney <masneyb@onstation.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68b73cd158d8a64dbb51a231e368c06bef33dfb1
Author: Oded Gabbay <oded.gabbay@gmail.com>
Date:   Thu Jan 23 00:43:06 2020 +0200

    habanalabs: patched cb equals user cb in device memset
    
    [ Upstream commit cf01514c5c6efa2d521d35e68dff2e0674d08e91 ]
    
    During device memory memset, the driver allocates and use a CB (command
    buffer). To reuse existing code, it keeps a pointer to the CB in two
    variables, user_cb and patched_cb. Therefore, there is no need to "put"
    both the user_cb and patched_cb, as it will cause an underflow of the
    refcnt of the CB.
    
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83946b4c96ee4f4c9c5151579338013621f0904e
Author: Omer Shpigelman <oshpigelman@habana.ai>
Date:   Sun Jan 5 09:05:45 2020 +0000

    habanalabs: do not halt CoreSight during hard reset
    
    [ Upstream commit a37e47192dfa98f79a0cd5ab991c224b5980c982 ]
    
    During hard reset we must not write to the device.
    Hence avoid halting CoreSight during user context close if it is done
    during hard reset.
    In addition, we must not re-enable clock gating afterwards as it was
    deliberately disabled in the beginning of the hard reset flow.
    
    Signed-off-by: Omer Shpigelman <oshpigelman@habana.ai>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b183f6748acc7dbec01266a4dcbaea26d21c55f
Author: Oded Gabbay <oded.gabbay@gmail.com>
Date:   Mon Dec 23 17:51:48 2019 +0200

    habanalabs: halt the engines before hard-reset
    
    [ Upstream commit 908087ffbe896c100ed73d5f0ce11a5b7264af4a ]
    
    The driver must halt the engines before doing hard-reset, otherwise the
    device can go into undefined state. There is a place where the driver
    didn't do that and this patch fixes it.
    
    Reviewed-by: Tomer Tayar <ttayar@habana.ai>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d48ee321160708a47fd6542281a167500d70962
Author: Sergey Organov <sorganov@gmail.com>
Date:   Wed Jan 29 14:21:46 2020 +0300

    usb: gadget: serial: fix Tx stall after buffer overflow
    
    [ Upstream commit e4bfded56cf39b8d02733c1e6ef546b97961e18a ]
    
    Symptom: application opens /dev/ttyGS0 and starts sending (writing) to
    it while either USB cable is not connected, or nobody listens on the
    other side of the cable. If driver circular buffer overflows before
    connection is established, no data will be written to the USB layer
    until/unless /dev/ttyGS0 is closed and re-opened again by the
    application (the latter besides having no means of being notified about
    the event of establishing of the connection.)
    
    Fix: on open and/or connect, kick Tx to flush circular buffer data to
    USB layer.
    
    Signed-off-by: Sergey Organov <sorganov@gmail.com>
    Reviewed-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3a7d31645e5afb51fca639a00c1ceb58fbe54c9
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Jan 16 15:29:01 2020 +0200

    usb: gadget: ffs: ffs_aio_cancel(): Save/restore IRQ flags
    
    [ Upstream commit 43d565727a3a6fd24e37c7c2116475106af71806 ]
    
    ffs_aio_cancel() can be called from both interrupt and thread context. Make
    sure that the current IRQ state is saved and restored by using
    spin_{un,}lock_irq{save,restore}().
    
    Otherwise undefined behavior might occur.
    
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aae7167626ce37aa9e8d3e0fb0c66c7b54ef94dd
Author: Jack Pham <jackp@codeaurora.org>
Date:   Thu Jan 30 19:10:36 2020 -0800

    usb: gadget: composite: Support more than 500mA MaxPower
    
    [ Upstream commit a2035411fa1d1206cea7d5dfe833e78481844a76 ]
    
    USB 3.x SuperSpeed peripherals can draw up to 900mA of VBUS power
    when in configured state. However, if a configuration wanting to
    take advantage of this is added with MaxPower greater than 500
    (currently possible if using a ConfigFS gadget) the composite
    driver fails to accommodate this for a couple reasons:
    
     - usb_gadget_vbus_draw() when called from set_config() and
       composite_resume() will be passed the MaxPower value without
       regard for the current connection speed, resulting in a
       violation for USB 2.0 since the max is 500mA.
    
     - the bMaxPower of the configuration descriptor would be
       incorrectly encoded, again if the connection speed is only
       at USB 2.0 or below, likely wrapping around U8_MAX since
       the 2mA multiplier corresponds to a maximum of 510mA.
    
    Fix these by adding checks against the current gadget->speed
    when the c->MaxPower value is used (set_config() and
    composite_resume()) and appropriately limit based on whether
    it is currently at a low-/full-/high- or super-speed connection.
    
    Because 900 is not divisible by 8, with the round-up division
    currently used in encode_bMaxPower() a MaxPower of 900mA will
    result in an encoded value of 0x71. When a host stack (including
    Linux and Windows) enumerates this on a single port root hub, it
    reads this value back and decodes (multiplies by 8) to get 904mA
    which is strictly greater than 900mA that is typically budgeted
    for that port, causing it to reject the configuration. Instead,
    we should be using the round-down behavior of normal integral
    division so that 900 / 8 -> 0x70 or 896mA to stay within range.
    And we might as well change it for the high/full/low case as well
    for consistency.
    
    N.B. USB 3.2 Gen N x 2 allows for up to 1500mA but there doesn't
    seem to be any any peripheral controller supported by Linux that
    does two lane operation, so for now keeping the clamp at 900
    should be fine.
    
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbeec9bda6cf96b475a5cbe8378056128ce01ea1
Author: Jiri Benc <jbenc@redhat.com>
Date:   Thu Feb 6 09:40:52 2020 +0100

    selftests: fix too long argument
    
    [ Upstream commit c363eb48ada5cf732b3f489fab799fc881097842 ]
    
    With some shells, the command construed for install of bpf selftests becomes
    too large due to long list of files:
    
    make[1]: execvp: /bin/sh: Argument list too long
    make[1]: *** [../lib.mk:73: install] Error 127
    
    Currently, each of the file lists is replicated three times in the command:
    in the shell 'if' condition, in the 'echo' and in the 'rsync'. Reduce that
    by one instance by using make conditionals and separate the echo and rsync
    into two shell commands. (One would be inclined to just remove the '@' at
    the beginning of the rsync command and let 'make' echo it by itself;
    unfortunately, it appears that the '@' in the front of mkdir silences output
    also for the following commands.)
    
    Also, separate handling of each of the lists to its own shell command.
    
    The semantics of the makefile is unchanged before and after the patch. The
    ability of individual test directories to override INSTALL_RULE is retained.
    
    Reported-by: Yauheni Kaliuta <yauheni.kaliuta@redhat.com>
    Tested-by: Yauheni Kaliuta <yauheni.kaliuta@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2d5c4df27e0c7883e4f9d5633ab96bc4b8964d6
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Fri Feb 7 11:53:35 2020 +0200

    serial: ar933x_uart: set UART_CS_{RX,TX}_READY_ORIDE
    
    [ Upstream commit 87c5cbf71ecbb9e289d60a2df22eb686c70bf196 ]
    
    On AR934x this UART is usually not initialized by the bootloader
    as it is only used as a secondary serial port while the primary
    UART is a newly introduced NS16550-compatible.
    In order to make use of the ar933x-uart on AR934x without RTS/CTS
    hardware flow control, one needs to set the
    UART_CS_{RX,TX}_READY_ORIDE bits as other than on AR933x where this
    UART is used as primary/console, the bootloader on AR934x typically
    doesn't set those bits.
    Setting them explicitely on AR933x should not do any harm, so just
    set them unconditionally.
    
    Tested-by: Chuanhong Guo <gch981213@gmail.com>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Link: https://lore.kernel.org/r/20200207095335.GA179836@makrotopia.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cb3c0cecc3172435f4315a577819ecdee81f5f0
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Thu Feb 6 22:02:21 2020 +0200

    ALSA: hda: do not override bus codec_mask in link_get()
    
    [ Upstream commit 43bcb1c0507858cdc95e425017dcc33f8105df39 ]
    
    snd_hdac_ext_bus_link_get() does not work correctly in case
    there are multiple codecs on the bus. It unconditionally
    resets the bus->codec_mask value. As per documentation in
    hdaudio.h and existing use in client code, this field should
    be used to store bit flag of detected codecs on the bus.
    
    By overwriting value of the codec_mask, information on all
    detected codecs is lost. No current user of hdac is impacted,
    but use of bus->codec_mask is planned in future patches
    for SOF.
    
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20200206200223.7715-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82782235544f1f376870a3db3fe99672802a0253
Author: Cengiz Can <cengiz@kernel.wtf>
Date:   Wed Mar 4 13:58:19 2020 +0300

    blktrace: fix dereference after null check
    
    [ Upstream commit 153031a301bb07194e9c37466cfce8eacb977621 ]
    
    There was a recent change in blktrace.c that added a RCU protection to
    `q->blk_trace` in order to fix a use-after-free issue during access.
    
    However the change missed an edge case that can lead to dereferencing of
    `bt` pointer even when it's NULL:
    
    Coverity static analyzer marked this as a FORWARD_NULL issue with CID
    1460458.
    
    ```
    /kernel/trace/blktrace.c: 1904 in sysfs_blk_trace_attr_store()
    1898            ret = 0;
    1899            if (bt == NULL)
    1900                    ret = blk_trace_setup_queue(q, bdev);
    1901
    1902            if (ret == 0) {
    1903                    if (attr == &dev_attr_act_mask)
    >>>     CID 1460458:  Null pointer dereferences  (FORWARD_NULL)
    >>>     Dereferencing null pointer "bt".
    1904                            bt->act_mask = value;
    1905                    else if (attr == &dev_attr_pid)
    1906                            bt->pid = value;
    1907                    else if (attr == &dev_attr_start_lba)
    1908                            bt->start_lba = value;
    1909                    else if (attr == &dev_attr_end_lba)
    ```
    
    Added a reassignment with RCU annotation to fix the issue.
    
    Fixes: c780e86dd48 ("blktrace: Protect q->blk_trace with RCU")
    Cc: stable@vger.kernel.org
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Bob Liu <bob.liu@oracle.com>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Cengiz Can <cengiz@kernel.wtf>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4771b3f60633b602ec2d7ca5787a231be8496a06
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Jan 7 23:42:24 2020 +0900

    kprobes: Fix optimize_kprobe()/unoptimize_kprobe() cancellation logic
    
    [ Upstream commit e4add247789e4ba5e08ad8256183ce2e211877d4 ]
    
    optimize_kprobe() and unoptimize_kprobe() cancels if a given kprobe
    is on the optimizing_list or unoptimizing_list already. However, since
    the following commit:
    
      f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    
    modified the update timing of the KPROBE_FLAG_OPTIMIZED, it doesn't
    work as expected anymore.
    
    The optimized_kprobe could be in the following states:
    
    - [optimizing]: Before inserting jump instruction
      op.kp->flags has KPROBE_FLAG_OPTIMIZED and
      op->list is not empty.
    
    - [optimized]: jump inserted
      op.kp->flags has KPROBE_FLAG_OPTIMIZED and
      op->list is empty.
    
    - [unoptimizing]: Before removing jump instruction (including unused
      optprobe)
      op.kp->flags has KPROBE_FLAG_OPTIMIZED and
      op->list is not empty.
    
    - [unoptimized]: jump removed
      op.kp->flags doesn't have KPROBE_FLAG_OPTIMIZED and
      op->list is empty.
    
    Current code mis-expects [unoptimizing] state doesn't have
    KPROBE_FLAG_OPTIMIZED, and that can cause incorrect results.
    
    To fix this, introduce optprobe_queued_unopt() to distinguish [optimizing]
    and [unoptimizing] states and fixes the logic in optimize_kprobe() and
    unoptimize_kprobe().
    
    [ mingo: Cleaned up the changelog and the code a bit. ]
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bristot@redhat.com
    Fixes: f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    Link: https://lkml.kernel.org/r/157840814418.7181.13478003006386303481.stgit@devnote2
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2a5e97de44adbf4a4b61b5a4e5f3fbc28b19d86
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Wed Dec 4 11:51:48 2019 +0900

    kbuild: fix 'No such file or directory' warning when cleaning
    
    [ Upstream commit cf6b58ab2d55f5a143c88c219c8e66ff0720fa69 ]
    
    Since commit fcbb8461fd23 ("kbuild: remove header compile test"),
    'make clean' with O= option in the pristine source tree emits
    'No such file or directory' warning.
    
    $ git clean -d -f -x
    $ make O=foo clean
    make[1]: Entering directory '/home/masahiro/linux/foo'
    find: ‘usr/include’: No such file or directory
    make[1]: Leaving directory '/home/masahiro/linux/foo'
    
    Fixes: fcbb8461fd23 ("kbuild: remove header compile test")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0769cdddb88d50d61a97bc8b304a7205744d7689
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Feb 17 13:43:18 2020 -0700

    RDMA/core: Fix use of logical OR in get_new_pps
    
    [ Upstream commit 4ca501d6aaf21de31541deac35128bbea8427aa6 ]
    
    Clang warns:
    
    ../drivers/infiniband/core/security.c:351:41: warning: converting the
    enum constant to a boolean [-Wint-in-bool-context]
            if (!(qp_attr_mask & (IB_QP_PKEY_INDEX || IB_QP_PORT)) && qp_pps) {
                                                   ^
    1 warning generated.
    
    A bitwise OR should have been used instead.
    
    Fixes: 1dd017882e01 ("RDMA/core: Fix protection fault in get_pkey_idx_qp_list")
    Link: https://lore.kernel.org/r/20200217204318.13609-1-natechancellor@gmail.com
    Link: https://github.com/ClangBuiltLinux/linux/issues/889
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7ed42f10334846e6de323f14939c01460506dee
Author: Maor Gottlieb <maorg@mellanox.com>
Date:   Thu Feb 27 14:57:28 2020 +0200

    RDMA/core: Fix pkey and port assignment in get_new_pps
    
    [ Upstream commit 801b67f3eaafd3f2ec8b65d93142d4ffedba85df ]
    
    When port is part of the modify mask, then we should take it from the
    qp_attr and not from the old pps. Same for PKEY. Otherwise there are
    panics in some configurations:
    
      RIP: 0010:get_pkey_idx_qp_list+0x50/0x80 [ib_core]
      Code: c7 18 e8 13 04 30 ef 0f b6 43 06 48 69 c0 b8 00 00 00 48 03 85 a0 04 00 00 48 8b 50 20 48 8d 48 20 48 39 ca 74 1a 0f b7 73 04 <66> 39 72 10 75 08 eb 10 66 39 72 10 74 0a 48 8b 12 48 39 ca 75 f2
      RSP: 0018:ffffafb3480932f0 EFLAGS: 00010203
      RAX: ffff98059ababa10 RBX: ffff980d926e8cc0 RCX: ffff98059ababa30
      RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff98059ababa28
      RBP: ffff98059b940000 R08: 00000000000310c0 R09: ffff97fe47c07480
      R10: 0000000000000036 R11: 0000000000000200 R12: 0000000000000071
      R13: ffff98059b940000 R14: ffff980d87f948a0 R15: 0000000000000000
      FS:  00007f88deb31740(0000) GS:ffff98059f600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000010 CR3: 0000000853e26001 CR4: 00000000001606e0
      Call Trace:
       port_pkey_list_insert+0x3d/0x1b0 [ib_core]
       ? kmem_cache_alloc_trace+0x215/0x220
       ib_security_modify_qp+0x226/0x3a0 [ib_core]
       _ib_modify_qp+0xcf/0x390 [ib_core]
       ipoib_init_qp+0x7f/0x200 [ib_ipoib]
       ? rvt_modify_port+0xd0/0xd0 [rdmavt]
       ? ib_find_pkey+0x99/0xf0 [ib_core]
       ipoib_ib_dev_open_default+0x1a/0x200 [ib_ipoib]
       ipoib_ib_dev_open+0x96/0x130 [ib_ipoib]
       ipoib_open+0x44/0x130 [ib_ipoib]
       __dev_open+0xd1/0x160
       __dev_change_flags+0x1ab/0x1f0
       dev_change_flags+0x23/0x60
       do_setlink+0x328/0xe30
       ? __nla_validate_parse+0x54/0x900
       __rtnl_newlink+0x54e/0x810
       ? __alloc_pages_nodemask+0x17d/0x320
       ? page_fault+0x30/0x50
       ? _cond_resched+0x15/0x30
       ? kmem_cache_alloc_trace+0x1c8/0x220
       rtnl_newlink+0x43/0x60
       rtnetlink_rcv_msg+0x28f/0x350
       ? kmem_cache_alloc+0x1fb/0x200
       ? _cond_resched+0x15/0x30
       ? __kmalloc_node_track_caller+0x24d/0x2d0
       ? rtnl_calcit.isra.31+0x120/0x120
       netlink_rcv_skb+0xcb/0x100
       netlink_unicast+0x1e0/0x340
       netlink_sendmsg+0x317/0x480
       ? __check_object_size+0x48/0x1d0
       sock_sendmsg+0x65/0x80
       ____sys_sendmsg+0x223/0x260
       ? copy_msghdr_from_user+0xdc/0x140
       ___sys_sendmsg+0x7c/0xc0
       ? skb_dequeue+0x57/0x70
       ? __inode_wait_for_writeback+0x75/0xe0
       ? fsnotify_grab_connector+0x45/0x80
       ? __dentry_kill+0x12c/0x180
       __sys_sendmsg+0x58/0xa0
       do_syscall_64+0x5b/0x200
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f88de467f10
    
    Link: https://lore.kernel.org/r/20200227125728.100551-1-leon@kernel.org
    Cc: <stable@vger.kernel.org>
    Fixes: 1dd017882e01 ("RDMA/core: Fix protection fault in get_pkey_idx_qp_list")
    Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Tested-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d729f5aa06ff48265517b79cd1fd52a6ee87b23
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Feb 23 14:54:58 2020 -0500

    dm thin metadata: fix lockdep complaint
    
    [ Upstream commit 3918e0667bbac99400b44fa5aef3f8be2eeada4a ]
    
    [ 3934.173244] ======================================================
    [ 3934.179572] WARNING: possible circular locking dependency detected
    [ 3934.185884] 5.4.21-xfstests #1 Not tainted
    [ 3934.190151] ------------------------------------------------------
    [ 3934.196673] dmsetup/8897 is trying to acquire lock:
    [ 3934.201688] ffffffffbce82b18 (shrinker_rwsem){++++}, at: unregister_shrinker+0x22/0x80
    [ 3934.210268]
                   but task is already holding lock:
    [ 3934.216489] ffff92a10cc5e1d0 (&pmd->root_lock){++++}, at: dm_pool_metadata_close+0xba/0x120
    [ 3934.225083]
                   which lock already depends on the new lock.
    
    [ 3934.564165] Chain exists of:
                     shrinker_rwsem --> &journal->j_checkpoint_mutex --> &pmd->root_lock
    
    For a more detailed lockdep report, please see:
    
            https://lore.kernel.org/r/20200220234519.GA620489@mit.edu
    
    We shouldn't need to hold the lock while are just tearing down and
    freeing the whole metadata pool structure.
    
    Fixes: 44d8ebf436399a4 ("dm thin metadata: use pool locking at end of dm_pool_metadata_close")
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95aeaec9e63dfba37a4e25d993d53b2655646095
Author: Aaro Koskinen <aaro.koskinen@nokia.com>
Date:   Wed Feb 26 18:49:01 2020 +0200

    net: stmmac: fix notifier registration
    
    [ Upstream commit 474a31e13a4e9749fb3ee55794d69d0f17ee0998 ]
    
    We cannot register the same netdev notifier multiple times when probing
    stmmac devices. Register the notifier only once in module init, and also
    make debugfs creation/deletion safe against simultaneous notifier call.
    
    Fixes: 481a7d154cbb ("stmmac: debugfs entry name is not be changed when udev rename device name.")
    Signed-off-by: Aaro Koskinen <aaro.koskinen@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 551132b2943f620801601f44dfa8c70d22b87a8b
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Feb 24 15:56:32 2020 -0800

    net: dsa: bcm_sf2: Forcibly configure IMP port for 1Gb/sec
    
    [ Upstream commit 98c5f7d44fef309e692c24c6d71131ee0f0871fb ]
    
    We are still experiencing some packet loss with the existing advanced
    congestion buffering (ACB) settings with the IMP port configured for
    2Gb/sec, so revert to conservative link speeds that do not produce
    packet loss until this is resolved.
    
    Fixes: 8f1880cbe8d0 ("net: dsa: bcm_sf2: Configure IMP port for 2Gb/sec")
    Fixes: de34d7084edd ("net: dsa: bcm_sf2: Only 7278 supports 2Gb/sec IMP port")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f87f58ca90161f535b751ba0fc66da91ba8505a
Author: Hui Wang <hui.wang@canonical.com>
Date:   Wed Feb 19 13:23:06 2020 +0800

    ALSA: hda/realtek - Fix a regression for mute led on Lenovo Carbon X1
    
    [ Upstream commit c37c0ab029569a75fd180edb03d411e7a28a936f ]
    
    Need to chain the THINKPAD_ACPI, otherwise the mute led will not
    work.
    
    Fixes: d2cd795c4ece ("ALSA: hda - fixup for the bass speaker on Lenovo Carbon X1 7th gen")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200219052306.24935-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63f42809f0f3fb7afacabaaaa21a451ac5763353
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Mon Feb 3 11:40:55 2020 +0100

    block, bfq: do not insert oom queue into position tree
    
    [ Upstream commit 32c59e3a9a5a0b180dd015755d6d18ca31e55935 ]
    
    BFQ maintains an ordered list, implemented with an RB tree, of
    head-request positions of non-empty bfq_queues. This position tree,
    inherited from CFQ, is used to find bfq_queues that contain I/O close
    to each other. BFQ merges these bfq_queues into a single shared queue,
    if this boosts throughput on the device at hand.
    
    There is however a special-purpose bfq_queue that does not participate
    in queue merging, the oom bfq_queue. Yet, also this bfq_queue could be
    wrongly added to the position tree. So bfqq_find_close() could return
    the oom bfq_queue, which is a source of further troubles in an
    out-of-memory situation. This commit prevents the oom bfq_queue from
    being inserted into the position tree.
    
    Tested-by: Patrick Dung <patdung100@gmail.com>
    Tested-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 594fca1d04fbc5b0720f758b397ad8d94699163b
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Mon Feb 3 11:40:56 2020 +0100

    block, bfq: get extra ref to prevent a queue from being freed during a group move
    
    [ Upstream commit ecedd3d7e19911ab8fe42f17b77c0a30fe7f4db3 ]
    
    In bfq_bfqq_move(), the bfq_queue, say Q, to be moved to a new group
    may happen to be deactivated in the scheduling data structures of the
    source group (and then activated in the destination group). If Q is
    referred only by the data structures in the source group when the
    deactivation happens, then Q is freed upon the deactivation.
    
    This commit addresses this issue by getting an extra reference before
    the possible deactivation, and releasing this extra reference after Q
    has been moved.
    
    Tested-by: Chris Evich <cevich@redhat.com>
    Tested-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
