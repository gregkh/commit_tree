commit b05965f284db3e086022f4e318e46cb5bffb1376
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 27 09:48:30 2016 -0700

    Linux 4.4.16

commit dbf72a4d4531e7e5fb28e76d902d66f05c1bfe12
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Mar 21 17:31:44 2016 +0100

    ovl: verify upper dentry before unlink and rename
    
    commit 11f3710417d026ea2f4fcf362d866342c5274185 upstream.
    
    Unlink and rename in overlayfs checked the upper dentry for staleness by
    verifying upper->d_parent against upperdir.  However the dentry can go
    stale also by being unhashed, for example.
    
    Expand the verification to actually look up the name again (under parent
    lock) and check if it matches the upper dentry.  This matches what the VFS
    does before passing the dentry to filesytem's unlink/rename methods, which
    excludes any inconsistency caused by overlayfs.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38da63ef2c131593ff89372048c14cd8bd1fe4b4
Author: Mika Kahola <mika.kahola@intel.com>
Date:   Mon Jun 20 11:10:26 2016 +0300

    drm/i915: Revert DisplayPort fast link training feature
    
    commit 34511dce4b35685d3988d5c8b100d11a068db5bd upstream.
    
    It has been found out that in some HW combination the DisplayPort
    fast link training feature caused screen flickering. Let's revert
    this feature for now until we can ensure that the feature works for
    all platforms.
    
    This is a manual revert of commits 5fa836a9d859 ("drm/i915: DP link
    training optimization") and 4e96c97742f4 ("drm/i915: eDP link training
    optimization").
    
    Fixes: 5fa836a9d859 ("drm/i915: DP link training optimization")
    Fixes: 4e96c97742f4 ("drm/i915: eDP link training optimization")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=91393
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Mika Kahola <mika.kahola@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1466410226-19543-1-git-send-email-mika.kahola@intel.com
    (cherry picked from commit 91df09d92ad82c8778ca218097bf827f154292ca)
    Signed-off-by: Joakim Tjernlund <joakim.tjernlund@infinera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fc823207457666451f17a701e6253758e8e32f6
Author: Hugh Dickins <hughd@google.com>
Date:   Sun Jul 10 16:46:32 2016 -0700

    tmpfs: fix regression hang in fallocate undo
    
    commit 7f556567036cb7f89aabe2f0954b08566b4efb53 upstream.
    
    The well-spotted fallocate undo fix is good in most cases, but not when
    fallocate failed on the very first page.  index 0 then passes lend -1
    to shmem_undo_range(), and that has two bad effects: (a) that it will
    undo every fallocation throughout the file, unrestricted by the current
    range; but more importantly (b) it can cause the undo to hang, because
    lend -1 is treated as truncation, which makes it keep on retrying until
    every page has gone, but those already fully instantiated will never go
    away.  Big thank you to xfstests generic/269 which demonstrates this.
    
    Fixes: b9b4bb26af01 ("tmpfs: don't undo fallocate past its last page")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d3255b4d9f8c592df8e0cfac8078e5148510887
Author: Anthony Romano <anthony.romano@coreos.com>
Date:   Fri Jun 24 14:48:43 2016 -0700

    tmpfs: don't undo fallocate past its last page
    
    commit b9b4bb26af017dbe930cd4df7f9b2fc3a0497bfe upstream.
    
    When fallocate is interrupted it will undo a range that extends one byte
    past its range of allocated pages.  This can corrupt an in-use page by
    zeroing out its first byte.  Instead, undo using the inclusive byte
    range.
    
    Fixes: 1635f6a74152f1d ("tmpfs: undo fallocation on failure")
    Link: http://lkml.kernel.org/r/1462713387-16724-1-git-send-email-anthony.romano@coreos.com
    Signed-off-by: Anthony Romano <anthony.romano@coreos.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Brandon Philips <brandon@ifup.co>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6317d765f3a2a8edbf5e047648e87160aff02c4
Author: Jan Stancek <jstancek@redhat.com>
Date:   Thu Jun 30 12:23:51 2016 +0200

    crypto: qat - make qat_asym_algs.o depend on asn1 headers
    
    commit 81dc0365cfa7bc7c08a0e44d9ee04964df782e19 upstream.
    
    Parallel build can sporadically fail because asn1 headers may
    not be built yet by the time qat_asym_algs.o is compiled:
      drivers/crypto/qat/qat_common/qat_asym_algs.c:55:32: fatal error: qat_rsapubkey-asn1.h: No such file or directory
       #include "qat_rsapubkey-asn1.h"
    
    Signed-off-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32d10678d42f807310e752410696117b4a3185e7
Author: Jan Beulich <JBeulich@suse.com>
Date:   Fri Jul 8 06:15:07 2016 -0600

    xen/acpi: allow xen-acpi-processor driver to load on Xen 4.7
    
    commit 6f2d9d99213514360034c6d52d2c3919290b3504 upstream.
    
    As of Xen 4.7 PV CPUID doesn't expose either of CPUID[1].ECX[7] and
    CPUID[0x80000007].EDX[7] anymore, causing the driver to fail to load on
    both Intel and AMD systems. Doing any kind of hardware capability
    checks in the driver as a prerequisite was wrong anyway: With the
    hypervisor being in charge, all such checking should be done by it. If
    ACPI data gets uploaded despite some missing capability, the hypervisor
    is free to ignore part or all of that data.
    
    Ditch the entire check_prereq() function, and do the only valid check
    (xen_initial_domain()) in the caller in its place.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12f2f04e0376453bab82a2d6aa51cb94f4f65d33
Author: Steve French <smfrench@gmail.com>
Date:   Wed Jun 22 21:07:32 2016 -0500

    File names with trailing period or space need special case conversion
    
    commit 45e8a2583d97ca758a55c608f78c4cef562644d1 upstream.
    
    POSIX allows files with trailing spaces or a trailing period but
    SMB3 does not, so convert these using the normal Services For Mac
    mapping as we do for other reserved characters such as
            : < > | ? *
    This is similar to what Macs do for the same problem over SMB3.
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Acked-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1422b6b926f3634cddf449d65ce976f397726c63
Author: Jerome Marchand <jmarchan@redhat.com>
Date:   Thu May 26 11:52:25 2016 +0200

    cifs: dynamic allocation of ntlmssp blob
    
    commit b8da344b74c822e966c6d19d6b2321efe82c5d97 upstream.
    
    In sess_auth_rawntlmssp_authenticate(), the ntlmssp blob is allocated
    statically and its size is an "empirical" 5*sizeof(struct
    _AUTHENTICATE_MESSAGE) (320B on x86_64). I don't know where this value
    comes from or if it was ever appropriate, but it is currently
    insufficient: the user and domain name in UTF16 could take 1kB by
    themselves. Because of that, build_ntlmssp_auth_blob() might corrupt
    memory (out-of-bounds write). The size of ntlmssp_blob in
    SMB2_sess_setup() is too small too (sizeof(struct _NEGOTIATE_MESSAGE)
    + 500).
    
    This patch allocates the blob dynamically in
    build_ntlmssp_auth_blob().
    
    Signed-off-by: Jerome Marchand <jmarchan@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ce7aa4e44d88ce64ea8ae2337b8910f3670b0ba
Author: Steve French <smfrench@gmail.com>
Date:   Wed Jun 22 20:12:05 2016 -0500

    Fix reconnect to not defer smb3 session reconnect long after socket reconnect
    
    commit 4fcd1813e6404dd4420c7d12fb483f9320f0bf93 upstream.
    
    Azure server blocks clients that open a socket and don't do anything on it.
    In our reconnect scenarios, we can reconnect the tcp session and
    detect the socket is available but we defer the negprot and SMB3 session
    setup and tree connect reconnection until the next i/o is requested, but
    this looks suspicous to some servers who expect SMB3 negprog and session
    setup soon after a socket is created.
    
    In the echo thread, reconnect SMB3 sessions and tree connections
    that are disconnected.  A later patch will replay persistent (and
    resilient) handle opens.
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Acked-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddbe16b392b71cb9ce23fcf684143a31c04cc96d
Author: James Bottomley <jejb@linux.vnet.ibm.com>
Date:   Mon Jun 13 22:00:07 2016 -0700

    53c700: fix BUG on untagged commands
    
    commit 8beb330044d0d1878c7b92290e91c0b889e92633 upstream.
    
    The untagged command case in the 53c700 driver has been broken since
    host wide tags were enabled because the replaced scsi_find_tag()
    function had a special case for the tag value SCSI_NO_TAG to retrieve
    sdev->current_cmnd.  The replacement function scsi_host_find_tag() has
    no such special case and returns NULL causing untagged commands to
    trigger a BUG() in the driver.  Inspection shows that the 53c700 is the
    only driver using this SCSI_NO_TAG case, so a local fix in the driver
    suffices to fix this problem globally.
    
    Fixes: 64d513ac31b - "scsi: use host wide tags by default"
    Reported-by: Helge Deller <deller@gmx.de>
    Tested-by: Helge Deller <deller@gmx.de>
    Signed-off-by: James Bottomley <jejb@linux.vnet.ibm.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 333e71cfe2b3ca30ed1fb2d28510c542feb8379d
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Jun 27 17:06:45 2016 +0200

    s390: fix test_fp_ctl inline assembly contraints
    
    commit bcf4dd5f9ee096bd1510f838dd4750c35df4e38b upstream.
    
    The test_fp_ctl function is used to test if a given value is a valid
    floating-point control. The inline assembly in test_fp_ctl uses an
    incorrect constraint for the 'orig_fpc' variable. If the compiler
    chooses the same register for 'fpc' and 'orig_fpc' the test_fp_ctl()
    function always returns true. This allows user space to trigger
    kernel oopses with invalid floating-point control values on the
    signal stack.
    
    This problem has been introduced with git commit 4725c86055f5bbdcdf
    "s390: fix save and restore of the floating-point-control register"
    
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 273e12926787a667f1581546e3cec7a1ec0415b6
Author: Wei Fang <fangwei1@huawei.com>
Date:   Tue Jun 7 14:53:56 2016 +0800

    scsi: fix race between simultaneous decrements of ->host_failed
    
    commit 72d8c36ec364c82bf1bf0c64dfa1041cfaf139f7 upstream.
    
    sas_ata_strategy_handler() adds the works of the ata error handler to
    system_unbound_wq. This workqueue asynchronously runs work items, so the
    ata error handler will be performed concurrently on different CPUs. In
    this case, ->host_failed will be decreased simultaneously in
    scsi_eh_finish_cmd() on different CPUs, and become abnormal.
    
    It will lead to permanently inequality between ->host_failed and
    ->host_busy, and scsi error handler thread won't start running. IO
    errors after that won't be handled.
    
    Since all scmds must have been handled in the strategy handler, just
    remove the decrement in scsi_eh_finish_cmd() and zero ->host_busy after
    the strategy handler to fix this race.
    
    Fixes: 50824d6c5657 ("[SCSI] libsas: async ata-eh")
    Signed-off-by: Wei Fang <fangwei1@huawei.com>
    Reviewed-by: James Bottomley <jejb@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf2a2c6de0516f595825c9c46eb8ebc12a48dd31
Author: Maxim Patlasov <mpatlasov@virtuozzo.com>
Date:   Thu Jul 21 18:24:26 2016 -0700

    ovl: verify upper dentry in ovl_remove_and_whiteout()
    
    commit cfc9fde0b07c3b44b570057c5f93dda59dca1c94 upstream.
    
    The upper dentry may become stale before we call ovl_lock_rename_workdir.
    For example, someone could (mistakenly or maliciously) manually unlink(2)
    it directly from upperdir.
    
    To ensure it is not stale, let's lookup it after ovl_lock_rename_workdir
    and and check if it matches the upper dentry.
    
    Essentially, it is the same problem and similar solution as in
    commit 11f3710417d0 ("ovl: verify upper dentry before unlink and rename").
    
    Signed-off-by: Maxim Patlasov <mpatlasov@virtuozzo.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c12dada5f28a4894b81df2666c060f5cecc02cf9
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Fri Jul 1 16:34:25 2016 -0400

    ovl: Copy up underlying inode's ->i_mode to overlay inode
    
    commit 07a2daab49c549a37b5b744cbebb6e3f445f12bc upstream.
    
    Right now when a new overlay inode is created, we initialize overlay
    inode's ->i_mode from underlying inode ->i_mode but we retain only
    file type bits (S_IFMT) and discard permission bits.
    
    This patch changes it and retains permission bits too. This should allow
    overlay to do permission checks on overlay inode itself in task context.
    
    [SzM] It also fixes clearing suid/sgid bits on write.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Reported-by: Eryu Guan <eguan@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 4bacc9c9234c ("overlayfs: Make f_path always point to the overlay and f_inode to the underlay")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9a2ce2a68381f0d638cadf1e4070f73a7df43c0
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Thu Jun 16 15:42:25 2016 +0200

    ARM: mvebu: fix HW I/O coherency related deadlocks
    
    commit c5379ba8fccd99d5f99632c789f0393d84a57805 upstream.
    
    Until now, our understanding for HW I/O coherency to work on the
    Cortex-A9 based Marvell SoC was that only the PCIe regions should be
    mapped strongly-ordered. However, we were still encountering some
    deadlocks, especially when testing the CESA crypto engine. After
    checking with the HW designers, it was concluded that all the MMIO
    registers should be mapped as strongly ordered for the HW I/O coherency
    mechanism to work properly.
    
    This fixes some easy to reproduce deadlocks with the CESA crypto engine
    driver (dmcrypt on a sufficiently large disk partition).
    
    Tested-by: Terry Stockert <stockert@inkblotadmirer.me>
    Tested-by: Romain Perier <romain.perier@free-electrons.com>
    Cc: Terry Stockert <stockert@inkblotadmirer.me>
    Cc: Romain Perier <romain.perier@free-electrons.com>
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4ad472e64c43a34a17c2636978d017b7dd8569c
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Thu Jun 16 15:42:27 2016 +0200

    ARM: dts: armada-38x: fix MBUS_ID for crypto SRAM on Armada 385 Linksys
    
    commit 929e604efa3dc0522214e0dc18984be23993e9f0 upstream.
    
    When the support for the Marvell crypto engine was added in the Device
    Tree of the various Armada 385 Device Tree files in commit
    d716f2e837ac6 ("ARM: mvebu: define crypto SRAM ranges for all armada-38x
    boards"), a typo was made in the MBus window attributes for the Armada
    385 Linksys board: 0x09/0x05 are used instead of 0x19/0x15. This commit
    fixes this typo, which makes the CESA engines operational on Armada 385
    Linksys boards.
    
    Reported-by: Terry Stockert <stockert@inkblotadmirer.me>
    Cc: Terry Stockert <stockert@inkblotadmirer.me>
    Cc: Imre Kaloz <kaloz@openwrt.org>
    Cc: Boris Brezillon <boris.brezillon@free-electrons.com>
    Fixes: d716f2e837ac6 ("ARM: mvebu: define crypto SRAM ranges for all armada-38x boards")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bec58627a01e051c44014f528d916657e44ffc72
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Wed Jun 15 13:20:19 2016 +0200

    ARM: sunxi/dt: make the CHIP inherit from allwinner,sun5i-a13
    
    commit 5fc39d347267bd029fcc9099c70e2fe2d53130e9 upstream.
    
    The sun4i-timer driver registers its sched_clock only if the machine is
    compatible with "allwinner,sun5i-a13", "allwinner,sun5i-a10s" or
    "allwinner,sun4i-a10".
    Add the missing "allwinner,sun5i-a13" string to the machine compatible.
    
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Fixes: 465a225fb2af ("ARM: sun5i: Add C.H.I.P DTS")
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e6092c5de3143707f23d77c084b54dfbfac8167
Author: Awais Belal <awais_belal@mentor.com>
Date:   Tue Jul 12 15:21:28 2016 +0500

    ALSA: hda: add AMD Stoney PCI ID with proper driver caps
    
    commit d716fb03f76411fc7e138692e33b749cada5c094 upstream.
    
    This allows the device to correctly show up as ATI HDMI
    rather than a generic one and allows the driver to use
    the available caps.
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5c1296401c5bb188f64c475a0301f7fb50bf992
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Jul 11 19:51:06 2016 +0200

    ALSA: hda - fix use-after-free after module unload
    
    commit ab58d8cc870ef3f0771c197700441936898d1f1d upstream.
    
    register_vga_switcheroo() sets the PM ops from the hda structure which
    is freed later in azx_free. Make sure that these ops are cleared.
    
    Caught by KASAN, initially noticed due to a general protection fault.
    
    Fixes: 246efa4a072f ("snd/hda: add runtime suspend/resume on optimus support (v4)")
    Signed-off-by: Peter Wu <peter@lekensteyn.nl>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4ccc29f5bdd41c78ae43c676db809492a7f1ba4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 8 08:05:19 2016 +0200

    ALSA: ctl: Stop notification after disconnection
    
    commit f388cdcdd160687c6650833f286b9c89c50960ff upstream.
    
    snd_ctl_remove() has a notification for the removal event.  It's
    superfluous when done during the device got disconnected.  Although
    the notification itself is mostly harmless, it may potentially be
    harmful, and should be suppressed.  Actually some components PCM may
    free ctl elements during the disconnect or free callbacks, thus it's
    no theoretical issue.
    
    This patch adds the check of card->shutdown flag for avoiding
    unnecessary notifications after (or during) the disconnect.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 180cb74b64ec9ef6e5d637a2c1479e3dfb55a1d3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 8 08:23:43 2016 +0200

    ALSA: pcm: Free chmap at PCM free callback, too
    
    commit a8ff48cb70835f48de5703052760312019afea55 upstream.
    
    The chmap ctls assigned to PCM streams are freed in the PCM disconnect
    callback.  However, since the disconnect callback isn't called when
    the card gets freed before registering, the chmap ctls may still be
    left assigned.  They are eventually freed together with other ctls,
    but it may cause an Oops at pcm_chmap_ctl_private_free(), as the
    function refers to the assigned PCM stream, while the PCM objects have
    been already freed beforehand.
    
    The fix is to free the chmap ctls also at PCM free callback, not only
    at PCM disconnect.
    
    Reported-by: Laxminath Kasam <b_lkasam@codeaurora.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 248bfcb1c7d5d59e0994be02bf25652d8c04d072
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Jul 8 14:26:57 2016 +0800

    ALSA: hda/realtek - add new pin definition in alc225 pin quirk table
    
    commit 8a132099f080d7384bb6ab4cc168f76cb4b47d08 upstream.
    
    We have some Dell laptops which can't detect headset mic, the machines
    use the codec ALC225, they have some new pin configuration values,
    after adding them in the alc225 pin quirk table, they work well.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db931e3f087ddaf2a209957fcdb9dbb351142c02
Author: Bob Copeland <me@bobcopeland.com>
Date:   Sat Jun 25 07:58:45 2016 -0400

    ALSA: hda - fix read before array start
    
    commit 81e43960dce1c8e58e682fb3ec26c1d8f83a9afc upstream.
    
    UBSAN reports the following warning from accessing path->path[-1]
    in set_path_power():
    
    [   16.078040] ================================================================================
    [   16.078124] UBSAN: Undefined behaviour in sound/pci/hda/hda_generic.c:3981:17
    [   16.078198] index -1 is out of range for type 'hda_nid_t [10]'
    [   16.078270] CPU: 2 PID: 1738 Comm: modprobe Not tainted 4.7.0-rc1-wt+ #47
    [   16.078274] Hardware name: LENOVO 3443CTO/3443CTO, BIOS G6ET23WW (1.02 ) 08/14/2012
    [   16.078278]  ffff8800cb246000 ffff8800cb3638b8 ffffffff815c4fe3 0000000000000032
    [   16.078286]  ffff8800cb3638e0 ffffffffffffffff ffff8800cb3638d0 ffffffff8162443d
    [   16.078294]  ffffffffa0894200 ffff8800cb363920 ffffffff81624af7 0000000000000292
    [   16.078302] Call Trace:
    [   16.078311]  [<ffffffff815c4fe3>] dump_stack+0x86/0xd3
    [   16.078317]  [<ffffffff8162443d>] ubsan_epilogue+0xd/0x40
    [   16.078324]  [<ffffffff81624af7>] __ubsan_handle_out_of_bounds+0x67/0x70
    [   16.078335]  [<ffffffffa087665f>] set_path_power+0x1bf/0x230 [snd_hda_codec_generic]
    [   16.078344]  [<ffffffffa087880d>] add_pin_power_ctls+0x8d/0xc0 [snd_hda_codec_generic]
    [   16.078352]  [<ffffffffa087f190>] ? pin_power_down_callback+0x20/0x20 [snd_hda_codec_generic]
    [   16.078360]  [<ffffffffa0878947>] add_all_pin_power_ctls+0x107/0x150 [snd_hda_codec_generic]
    [   16.078370]  [<ffffffffa08842b3>] snd_hda_gen_parse_auto_config+0x2d73/0x49e0 [snd_hda_codec_generic]
    [   16.078376]  [<ffffffff81173360>] ? trace_hardirqs_on_caller+0x1b0/0x2c0
    [   16.078390]  [<ffffffffa089df27>] alc_parse_auto_config+0x147/0x310 [snd_hda_codec_realtek]
    [   16.078402]  [<ffffffffa08a332a>] patch_alc269+0x23a/0x560 [snd_hda_codec_realtek]
    [   16.078417]  [<ffffffffa0838644>] hda_codec_driver_probe+0xa4/0x1a0 [snd_hda_codec]
    [   16.078424]  [<ffffffff817bbac1>] driver_probe_device+0x101/0x380
    [   16.078430]  [<ffffffff817bbdf9>] __driver_attach+0xb9/0x100
    [   16.078438]  [<ffffffff817bbd40>] ? driver_probe_device+0x380/0x380
    [   16.078444]  [<ffffffff817b8d20>] bus_for_each_dev+0x70/0xc0
    [   16.078449]  [<ffffffff817bb087>] driver_attach+0x27/0x50
    [   16.078454]  [<ffffffff817ba956>] bus_add_driver+0x166/0x2c0
    [   16.078460]  [<ffffffffa0369000>] ? 0xffffffffa0369000
    [   16.078465]  [<ffffffff817bd13d>] driver_register+0x7d/0x130
    [   16.078477]  [<ffffffffa083816f>] __hda_codec_driver_register+0x6f/0x90 [snd_hda_codec]
    [   16.078488]  [<ffffffffa036901e>] realtek_driver_init+0x1e/0x1000 [snd_hda_codec_realtek]
    [   16.078493]  [<ffffffff8100215e>] do_one_initcall+0x4e/0x1d0
    [   16.078499]  [<ffffffff8119f54d>] ? rcu_read_lock_sched_held+0x6d/0x80
    [   16.078504]  [<ffffffff813701b1>] ? kmem_cache_alloc_trace+0x391/0x560
    [   16.078510]  [<ffffffff812bb314>] ? do_init_module+0x28/0x273
    [   16.078515]  [<ffffffff812bb387>] do_init_module+0x9b/0x273
    [   16.078522]  [<ffffffff811e3782>] load_module+0x20b2/0x3410
    [   16.078527]  [<ffffffff811df140>] ? m_show+0x210/0x210
    [   16.078533]  [<ffffffff813b2b26>] ? kernel_read+0x66/0xe0
    [   16.078541]  [<ffffffff811e4cfa>] SYSC_finit_module+0xba/0xc0
    [   16.078547]  [<ffffffff811e4d1e>] SyS_finit_module+0xe/0x10
    [   16.078552]  [<ffffffff81a860fc>] entry_SYSCALL_64_fastpath+0x1f/0xbd
    [   16.078556] ================================================================================
    
    Fix by checking path->depth before use.
    
    Signed-off-by: Bob Copeland <me@bobcopeland.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d9b337e7440d3e0c8cd46a7a1f139e5d326fe23
Author: Vinod Koul <vkoul@kernel.org>
Date:   Wed Jun 29 10:27:52 2016 +0530

    ALSA: hda - Add PCI ID for Kabylake-H
    
    commit 6858107e78b4ecb9f244db814ffbdba1b5ce759b upstream.
    
    Kabylake-H shows up as PCI ID 0xa2f0. We missed adding this
    earlier with other KBL IDs.
    
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bfe8c575bf774e4fa8b1a0663fd16bf9b2c40f3
Author: Torsten Hilbrich <torsten.hilbrich@secunet.com>
Date:   Tue Jul 5 10:40:22 2016 +0200

    ALSA: hda/realtek: Add Lenovo L460 to docking unit fixup
    
    commit 9cd25743765cfe851aed8d655a62d60156aed293 upstream.
    
    This solves the issue that a headphone is not working on the docking
    unit.
    
    Signed-off-by: Torsten Hilbrich <torsten.hilbrich@secunet.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 547d982b7eeba37eba90597b2ba675e39dd2177d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jul 4 14:02:15 2016 +0200

    ALSA: timer: Fix negative queue usage by racy accesses
    
    commit 3fa6993fef634e05d200d141a85df0b044572364 upstream.
    
    The user timer tu->qused counter may go to a negative value when
    multiple concurrent reads are performed since both the check and the
    decrement of tu->qused are done in two individual locked contexts.
    This results in bogus read outs, and the endless loop in the
    user-space side.
    
    The fix is to move the decrement of the tu->qused counter into the
    same spinlock context as the zero-check of the counter.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02a49fd9d0ecc7956cf76b4f7161f2b463e4d73d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Jun 27 21:06:51 2016 +0200

    ALSA: echoaudio: Fix memory allocation
    
    commit 9c6795a9b3cbb56a9fbfaf43909c5c22999ba317 upstream.
    
    'commpage_bak' is allocated with 'sizeof(struct echoaudio)' bytes.
    We then copy 'sizeof(struct comm_page)' bytes in it.
    On my system, smatch complains because one is 2960 and the other is 3072.
    
    This would result in memory corruption or a oops.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0287f6374be41e411db4190e028fc577d338478b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jun 29 15:23:08 2016 +0200

    ALSA: au88x0: Fix calculation in vortex_wtdma_bufshift()
    
    commit 62db7152c924e4c060e42b34a69cd39658e8a0dc upstream.
    
    vortex_wtdma_bufshift() function does calculate the page index
    wrongly, first masking then shift, which always results in zero.
    The proper computation is to first shift, then mask.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ddd404402758aa28d51496ec68d3f28b052cf81
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Fri Jun 24 15:13:16 2016 +0200

    ALSA: hda / realtek - add two more Thinkpad IDs (5050,5053) for tpt460 fixup
    
    commit 0f087ee3f3b86a4507db4ff1d2d5a3880e4cfd16 upstream.
    
      See: https://bugzilla.redhat.com/show_bug.cgi?id=1349539
      See: https://bugzilla.kernel.org/show_bug.cgi?id=120961
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b939dbf83ab13f19781396dd43e5270834547d5
Author: Woodrow Shen <woodrow.shen@gmail.com>
Date:   Fri Jun 24 15:58:34 2016 +0800

    ALSA: hda - Fix the headset mic jack detection on Dell machine
    
    commit f83c32925d45926cd0e0f18bf28e6039116c4486 upstream.
    
    The new Dell laptop with codec 3246 can't detect headset mic when
    headset was inserted on the machine. So adding pin configurations
    into quirk table makes headset mic work correctly.
    
    Codec: Realtek ALC3246
    Vendor Id: 0x10ec0256
    Subsystem Id: 0x10280781
    
    Signed-off-by: Woodrow Shen <woodrow.shen@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a2c82f7ed138a28bfe3564cc4e49bcc33154899
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jun 24 15:15:26 2016 +0200

    ALSA: dummy: Fix a use-after-free at closing
    
    commit d5dbbe6569481bf12dcbe3e12cff72c5f78d272c upstream.
    
    syzkaller fuzzer spotted a potential use-after-free case in snd-dummy
    driver when hrtimer is used as backend:
    > ==================================================================
    > BUG: KASAN: use-after-free in rb_erase+0x1b17/0x2010 at addr ffff88005e5b6f68
    >  Read of size 8 by task syz-executor/8984
    > =============================================================================
    > BUG kmalloc-192 (Not tainted): kasan: bad access detected
    > -----------------------------------------------------------------------------
    >
    > Disabling lock debugging due to kernel taint
    > INFO: Allocated in 0xbbbbbbbbbbbbbbbb age=18446705582212484632
    > ....
    > [<      none      >] dummy_hrtimer_create+0x49/0x1a0 sound/drivers/dummy.c:464
    > ....
    > INFO: Freed in 0xfffd8e09 age=18446705496313138713 cpu=2164287125 pid=-1
    > [<      none      >] dummy_hrtimer_free+0x68/0x80 sound/drivers/dummy.c:481
    > ....
    > Call Trace:
    >  [<ffffffff8179e59e>] __asan_report_load8_noabort+0x3e/0x40 mm/kasan/report.c:333
    >  [<     inline     >] rb_set_parent include/linux/rbtree_augmented.h:111
    >  [<     inline     >] __rb_erase_augmented include/linux/rbtree_augmented.h:218
    >  [<ffffffff82ca5787>] rb_erase+0x1b17/0x2010 lib/rbtree.c:427
    >  [<ffffffff82cb02e8>] timerqueue_del+0x78/0x170 lib/timerqueue.c:86
    >  [<ffffffff814d0c80>] __remove_hrtimer+0x90/0x220 kernel/time/hrtimer.c:903
    >  [<     inline     >] remove_hrtimer kernel/time/hrtimer.c:945
    >  [<ffffffff814d23da>] hrtimer_try_to_cancel+0x22a/0x570 kernel/time/hrtimer.c:1046
    >  [<ffffffff814d2742>] hrtimer_cancel+0x22/0x40 kernel/time/hrtimer.c:1066
    >  [<ffffffff85420531>] dummy_hrtimer_stop+0x91/0xb0 sound/drivers/dummy.c:417
    >  [<ffffffff854228bf>] dummy_pcm_trigger+0x17f/0x1e0 sound/drivers/dummy.c:507
    >  [<ffffffff85392170>] snd_pcm_do_stop+0x160/0x1b0 sound/core/pcm_native.c:1106
    >  [<ffffffff85391b26>] snd_pcm_action_single+0x76/0x120 sound/core/pcm_native.c:956
    >  [<ffffffff85391e01>] snd_pcm_action+0x231/0x290 sound/core/pcm_native.c:974
    >  [<     inline     >] snd_pcm_stop sound/core/pcm_native.c:1139
    >  [<ffffffff8539754d>] snd_pcm_drop+0x12d/0x1d0 sound/core/pcm_native.c:1784
    >  [<ffffffff8539d3be>] snd_pcm_common_ioctl1+0xfae/0x2150 sound/core/pcm_native.c:2805
    >  [<ffffffff8539ee91>] snd_pcm_capture_ioctl1+0x2a1/0x5e0 sound/core/pcm_native.c:2976
    >  [<ffffffff8539f2ec>] snd_pcm_kernel_ioctl+0x11c/0x160 sound/core/pcm_native.c:3020
    >  [<ffffffff853d9a44>] snd_pcm_oss_sync+0x3a4/0xa30 sound/core/oss/pcm_oss.c:1693
    >  [<ffffffff853da27d>] snd_pcm_oss_release+0x1ad/0x280 sound/core/oss/pcm_oss.c:2483
    >  .....
    
    A workaround is to call hrtimer_cancel() in dummy_hrtimer_sync() which
    is called certainly before other blocking ops.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bb6a5196da9c8135b8758c6fe98d59fb4d9daf0
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Jun 18 00:54:47 2016 +0200

    hwmon: (dell-smm) Cache fan_type() calls and change fan detection
    
    commit 5ce91714b0d8c0a3ff9b858966721f508351cf4c upstream.
    
    On more Dell machines (e.g. Dell Precision M3800) fan_type() call is too
    expensive (CPU is too long in SMM mode) and cause kernel to hang. This is
    bug in Dell SMM or BIOS.
    
    This patch caches type for each fan (as it should not change) and changes
    the way how fan presense is detected. First it try function fan_status()
    as was before commit f989e55452c7 ("i8k: Add support for fan labels"). And
    if that fails fallback to fan_type(). *_status() functions can fail in case
    fan is not currently accessible (e.g. present on GPU which is currently
    turned off).
    
    Reported-by: Tolga Cakir <cevelnet@gmail.com>
    Signed-off-by: Pali Rohár <pali.rohar@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=112021
    Tested-by: Tolga Cakir <cevelnet@gmail.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a3d983a442aaaaa1b2c64f1c6b4b9d086db5a78
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Jun 18 00:54:46 2016 +0200

    hwmon: (dell-smm) Disallow fan_type() calls on broken machines
    
    commit 2744d2fde00dc8bcc3679eb72c81a63058e90faa upstream.
    
    Some Dell machines have especially broken SMM or BIOS which cause that once
    fan_type() is called then CPU fan speed going randomly up and down. And for
    fixing this behaviour reboot is required.
    
    So this patch creates fan_type blacklist of affected Dell machines and
    disallow fan_type() call on them to prevent that erratic behaviour.
    
    Old blacklist which disabled loading driver on some machines added in
    commits a4b45b25f18d ("hwmon: (dell-smm) Blacklist Dell Studio XPS 8100")
    and 6220f4ebd7b4 ("hwmon: (dell-smm) Blacklist Dell Studio XPS 8000") were
    moved to FAN_TYPE blacklist.
    
    Reported-by: Jan C Peters <jcpeters89@gmail.com>
    Signed-off-by: Pali Rohár <pali.rohar@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=100121
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c4182130d09db73fab11a23184b1215806877e1
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Jun 18 00:54:45 2016 +0200

    hwmon: (dell-smm) Restrict fan control and serial number to CAP_SYS_ADMIN by default
    
    commit 7613663cc186f8f3c50279390ddc60286758001c upstream.
    
    For security reasons ordinary user must not be able to control fan speed
    via /proc/i8k by default. Some malicious software running under "nobody"
    user could be able to turn fan off and cause HW problems. So this patch
    changes default value of "restricted" parameter to 1.
    
    Also restrict reading of DMI_PRODUCT_SERIAL from /proc/i8k via "restricted"
    parameter. It is because non root user cannot read DMI_PRODUCT_SERIAL from
    sysfs file /sys/class/dmi/id/product_serial.
    
    Old non secure behaviour of file /proc/i8k can be achieved by loading this
    module with "restricted" parameter set to 0.
    
    Note that this patch has effects only for kernels compiled with CONFIG_I8K
    and only for file /proc/i8k. Hwmon interface provided by this driver was
    not changed and root access for setting fan speed was needed also before.
    
    Reported-by: Mario Limonciello <Mario_Limonciello@dell.com>
    Signed-off-by: Pali Rohár <pali.rohar@gmail.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d091e02c94ad10414056a6dc9f37441e4a261fe
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Jun 27 14:12:34 2016 -0700

    tty/vt/keyboard: fix OOB access in do_compute_shiftstate()
    
    commit 510cccb5b0c8868a2b302a0ab524da7912da648b upstream.
    
    The size of individual keymap in drivers/tty/vt/keyboard.c is NR_KEYS,
    which is currently 256, whereas number of keys/buttons in input device (and
    therefor in key_down) is much larger - KEY_CNT - 768, and that can cause
    out-of-bound access when we do
    
            sym = U(key_maps[0][k]);
    
    with large 'k'.
    
    To fix it we should not attempt iterating beyond smaller of NR_KEYS and
    KEY_CNT.
    
    Also while at it let's switch to for_each_set_bit() instead of open-coding
    it.
    
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97c96c43d9ef67f57fde7943a5d8d34daec0432f
Author: David Daney <david.daney@cavium.com>
Date:   Tue May 17 11:41:04 2016 -0700

    tty: vt: Fix soft lockup in fbcon cursor blink timer.
    
    commit 1b45996d2ebf9680ccd0db875fc668aa025f40fd upstream.
    
    We are getting somewhat random soft lockups with this signature:
    
    [   86.992215] [<fffffc00080935e0>] el1_irq+0xa0/0x10c
    [   86.997082] [<fffffc000841822c>] cursor_timer_handler+0x30/0x54
    [   87.002991] [<fffffc000810ec44>] call_timer_fn+0x54/0x1a8
    [   87.008378] [<fffffc000810ef88>] run_timer_softirq+0x1c4/0x2bc
    [   87.014200] [<fffffc000809077c>] __do_softirq+0x114/0x344
    [   87.019590] [<fffffc00080af45c>] irq_exit+0x74/0x98
    [   87.024458] [<fffffc00080fac20>] __handle_domain_irq+0x98/0xfc
    [   87.030278] [<fffffc000809056c>] gic_handle_irq+0x94/0x190
    
    This is caused by the vt visual_init() function calling into
    fbcon_init() with a vc_cur_blink_ms value of zero.  This is a
    transient condition, as it is later set to a non-zero value.  But, if
    the timer happens to expire while the blink rate is zero, it goes into
    an endless loop, and we get soft lockup.
    
    The fix is to initialize vc_cur_blink_ms before calling the con_init()
    function.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Tested-by: Ming Lei <ming.lei@canonical.com>
    Acked-by: Scot Doyle <lkml14@scotdoyle.com>
    Tested-by: Henrique de Moraes Holschuh <hmh@hmh.eng.br>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 994b91f0ae10c1ffdbceda67e89b2f049d5be2d7
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jun 20 13:53:34 2016 +0100

    iio:ad7266: Fix probe deferral for vref
    
    commit 68b356eb3d9f5e38910fb62e22a78e2a18d544ae upstream.
    
    Currently the ad7266 driver treats any failure to get vref as though the
    regulator were not present but this means that if probe deferral is
    triggered the driver will act as though the regulator were not present.
    Instead only use the internal reference if we explicitly got -ENODEV which
    is what is returned for absent regulators.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa68652e2aa18274198dd03ed56827453b18dd2b
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jun 20 13:53:33 2016 +0100

    iio:ad7266: Fix support for optional regulators
    
    commit e5511c816e5ac4909bdd38e85ac344e2b9b8e984 upstream.
    
    The ad7266 driver attempts to support deciding between the use of internal
    and external power supplies by checking to see if an error is returned when
    requesting the regulator. This doesn't work with the current code since the
    driver uses a normal regulator_get() which is for non-optional supplies
    and so assumes that if a regulator is not provided by the platform then
    this is a bug in the platform integration and so substitutes a dummy
    regulator. Use regulator_get_optional() instead which indicates to the
    framework that the regulator may be absent and provides a dummy regulator
    instead.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad4dea695c591c29f0bd354dfebf707d9ea169b9
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jun 20 13:53:32 2016 +0100

    iio:ad7266: Fix broken regulator error handling
    
    commit 6b7f4e25f3309f106a5c7ff42c8231494cf285d3 upstream.
    
    All regulator_get() variants return either a pointer to a regulator or an
    ERR_PTR() so testing for NULL makes no sense and may lead to bugs if we
    use NULL as a valid regulator. Fix this by using IS_ERR() as expected.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebd052e9a258109df95e2222aedf10ead98f02df
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Fri Jun 17 15:22:24 2016 +0200

    iio: accel: kxsd9: fix the usage of spi_w8r8()
    
    commit 0c1f91b98552da49d9d8eed32b3132a58d2f4598 upstream.
    
    These two spi_w8r8() calls return a value with is used by the code
    following the error check. The dubious use was caused by a cleanup
    patch.
    
    Fixes: d34dbee8ac8e ("staging:iio:accel:kxsd9 cleanup and conversion to iio_chan_spec.")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 601818bdd4b0cef2e578030b09fb9ad632a4c7b6
Author: Luis de Bethencourt <luisbg@osg.samsung.com>
Date:   Wed Jun 22 20:43:30 2016 +0100

    staging: iio: accel: fix error check
    
    commit ef3149eb3ddb7f9125e11c90f8330e371b55cffd upstream.
    
    sca3000_read_ctrl_reg() returns a negative number on failure, check for
    this instead of zero.
    
    Signed-off-by: Luis de Bethencourt <luisbg@osg.samsung.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 784108d9df5aea1d58d2a56900efaa8149507964
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Sun May 29 19:52:02 2016 -0700

    iio: hudmidity: hdc100x: fix incorrect shifting and scaling
    
    commit 94bef000f1d4aa111f4ddda1482cf3b30ad069ce upstream.
    
    Shifting sensor data to the right 2 bits was incorrect and caused the
    scaling values + offsets to be invalid.
    
    Reported-by: Alison Schofield <amsfield22@gmail.com>
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Tested-by: Alison Schofield <amsfield22@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2be6f6172de75b807b48ef391fb7542402f554e
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Thu May 26 19:55:06 2016 -0700

    iio: humidity: hdc100x: fix IIO_TEMP channel reporting
    
    commit 09bc0ddaab6cab0fa95a67d5535ec772e2671193 upstream.
    
    IIO_TEMP channel was being incorrectly reported back as Celsius when it
    should have been milliCelsius. This is via an incorrect scale value being
    returned to userspace.
    
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7ba3de17a6a81e9301648c3b024510d6df5be37
Author: Alison Schofield <amsfield22@gmail.com>
Date:   Fri May 20 10:06:41 2016 -0700

    iio: humidity: hdc100x: correct humidity integration time mask
    
    commit 0e35cf5ce00d873d6e529d2b2cd7598d52438051 upstream.
    
    Apply the correct mask to enable all available humidity integration
    times.  Currently, the driver defaults to 6500 and all is okay with that.
    However, if 3850 is selected we get a stuck bit and can't change back
    to 6500 or select 2500.  (Verified with HDC1008)
    
    Signed-off-by: Alison Schofield <amsfield22@gmail.com>
    Cc: Daniel Baluta <daniel.baluta@gmail.com>
    Reviewed-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c00a4987faf46e3192dab01f0486038fdaf2ca1a
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Sat May 21 20:01:03 2016 -0700

    iio: proximity: as3935: fix buffer stack trashing
    
    commit 37b1ba2c68cfbe37f5f45bb91bcfaf2b016ae6a1 upstream.
    
    Buffer wasn't of a valid size to allow the timestamp, and correct padding.
    This patchset also moves the buffer off the stack, and onto the heap.
    
    Cc: george.mccollister@gmail.com
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd4a799390a02f6265a5f34d87b828b3ffdb59ff
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Sat May 21 20:01:02 2016 -0700

    iio: proximity: as3935: remove triggered buffer processing
    
    commit 7d0643634ea567969bf3f3ed6193a9d6fc75653b upstream.
    
    Triggered buffers shouldn't return processed data, and the respective
    conversion was overflowing the defined .realbits for the channel.
    
    Cc: george.mccollister@gmail.com
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97eabb321aeff04d62ddbc107bef6bb4a0f64707
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Sat May 21 20:01:01 2016 -0700

    iio: proximity: as3935: correct IIO_CHAN_INFO_RAW output
    
    commit 5138806f16c74c7cb8ac3e408a859c79eb7c9567 upstream.
    
    IIO_CHAN_INFO_RAW was returning processed data which was incorrect.
    This also adds the IIO_CHAN_INFO_SCALE value to convert to a processed value.
    
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3aeba867d5fca069cf779a6ee487f50dd4d17ee
Author: Yong Li <sdliyong@gmail.com>
Date:   Thu May 5 16:10:49 2016 +0800

    iio: light apds9960: Add the missing dev.parent
    
    commit 590b92a30242dd3f73de3d9a51d9924f1ab33e93 upstream.
    
    Without this, the iio:deviceX is missing in the /sys/bus/i2c/devices/0-0039
    Some userspace tools use this path to identify a specific instance of the
    device.
    
    Signed-off-by: Yong Li <sdliyong@gmail.com>
    Reviewed-By: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 923f209551914c4906fb78f4174470132ccf0947
Author: Gregor Boirie <gregor.boirie@parrot.com>
Date:   Tue Apr 19 11:18:33 2016 +0200

    iio:st_pressure: fix sampling gains (bring inline with ABI)
    
    commit d43a41152f8e9e4c0d19850884d1fada076dee10 upstream.
    
    Temperature channels report scaled samples in Celsius although expected as
    milli degree Celsius in Documentation/ABI/testing/sysfs-bus-iio.
    Gains are not implemented at all for LPS001WP pressure and temperature
    channels.
    
    This patch ensures that proper offsets and scales are exposed to userpace
    for both pressure and temperature channels.
    Also fix a NULL pointer exception when userspace reads content of sysfs
    scale attribute when gains are not defined.
    
    Signed-off-by: Gregor Boirie <gregor.boirie@parrot.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dda5d00a2a7d988069f835bea9688be1ec1dd062
Author: Crestez Dan Leonard <leonard.crestez@intel.com>
Date:   Tue May 3 15:27:09 2016 +0300

    iio: Fix error handling in iio_trigger_attach_poll_func
    
    commit 99543823357966ac938d9a310947e731b67338e6 upstream.
    
    When attaching a pollfunc iio_trigger_attach_poll_func will allocate a
    virtual irq and call the driver's set_trigger_state function. Fix error
    handling to undo previous steps if any fails.
    
    In particular this fixes handling errors from a driver's
    set_trigger_state function. When using triggered buffers a failure to
    enable the trigger used to make the buffer unusable.
    
    Signed-off-by: Crestez Dan Leonard <leonard.crestez@intel.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe29254aed62f14742a9d7fc6056aebac5ae8876
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue May 10 10:27:54 2016 +0100

    xen/balloon: Fix declared-but-not-defined warning
    
    commit 842775f1509054ea969f1787f38d6a0ec2ccfaba upstream.
    
    Fix a declared-but-not-defined warning when building with
    XEN_BALLOON_MEMORY_HOTPLUG=n. This fixes a regression introduced by
    commit dfd74a1edfab ("xen/balloon: Fix crash when ballooning on x86 32
    bit PAE").
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Acked-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e73be162f40972d6d16704811ae8e54d7c3677e6
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed May 11 16:51:51 2016 +0300

    perf/x86: Fix undefined shift on 32-bit kernels
    
    commit 6d6f2833bfbf296101f9f085e10488aef2601ba5 upstream.
    
    Jim reported:
    
            UBSAN: Undefined behaviour in arch/x86/events/intel/core.c:3708:12
            shift exponent 35 is too large for 32-bit type 'long unsigned int'
    
    The use of 'unsigned long' type obviously is not correct here, make it
    'unsigned long long' instead.
    
    Reported-by: Jim Cromie <jim.cromie@gmail.com>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Imre Palik <imrep@amazon.de>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: 2c33645d366d ("perf/x86: Honor the architectural performance monitoring version")
    Link: http://lkml.kernel.org/r/1462974711-10037-1-git-send-email-aryabinin@virtuozzo.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Kevin Christopher <kevinc@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f9e9704a561cf017eae1a0ffb1b5ea7b2dc11c0
Author: Ocquidant, Sebastien <sebastienocquidant@eaton.com>
Date:   Wed Jun 15 13:47:35 2016 +0200

    memory: omap-gpmc: Fix omap gpmc EXTRADELAY timing
    
    commit 8f50b8e57442d28e41bb736c173d8a2490549a82 upstream.
    
    In the omap gpmc driver it can be noticed that GPMC_CONFIG4_OEEXTRADELAY
    is overwritten by the WEEXTRADELAY value from the device tree and
    GPMC_CONFIG4_WEEXTRADELAY is not updated by the value from the device
    tree.
    
    As a consequence, the memory accesses cannot be configured properly when
    the extra delay are needed for OE and WE.
    
    Fix the update of GPMC_CONFIG4_WEEXTRADELAY with the value from the
    device tree file and prevents GPMC_CONFIG4_OEXTRADELAY
    being overwritten by the WEXTRADELAY value from the device tree.
    
    Signed-off-by: Ocquidant, Sebastien <sebastienocquidant@eaton.com>
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed71c68ba0d6b914e775456d75b600a74a001c62
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Thu Jul 7 11:01:30 2016 -0700

    drm/vmwgfx: Fix error paths when mapping framebuffer
    
    commit 58541f7a6458e17ab417321b284f0090f530aa91 upstream.
    
    Rather than returning immediately, make sure to unlock the
    mutexes first.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Charmaine Lee <charmainel@vmware.com>
    Reported-by: Emil Velikov <emil.l.velikov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82c882ccb21f2345cfea2781c8e6f75eb695a055
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Wed Jun 29 13:23:18 2016 -0700

    drm/vmwgfx: Delay pinning fbdev framebuffer until after mode set
    
    commit d5f1a291e32309324a8c481ed84b5c118d1360ea upstream.
    
    For the Screen Object display unit, we need to reserve a
    guest-invisible region equal to the size of the framebuffer for
    the host.  This region can only be reserved in VRAM, whereas
    the guest-visible framebuffer can be reserved in either VRAM or
    GMR.
    
    As such priority should be given to the guest-invisible
    region otherwise in a limited VRAM situation, we can fail to
    allocate this region.
    
    This patch makes it so that vmw_sou_backing_alloc() is called
    before the framebuffer is pinned.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e587d4e630827c5207ee15986fc83e29d78073c9
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Wed Jun 29 13:20:26 2016 -0700

    drm/vmwgfx: Check pin count before attempting to move a buffer
    
    commit 4ed7e2242b637bc4af0416e4aa9f945db30fb44a upstream.
    
    In certain scenarios, e.g. when fbdev is enabled, we can get into
    a situation where a vmw_framebuffer_pin() is called on a buffer
    that is already pinned.
    
    When this happens, ttm_bo_validate() will unintentially remove the
    TTM_PL_FLAG_NO_EVICT flag, thus unpinning it, and leaving no way
    to actually pin the buffer again.
    
    To prevent this, if a buffer is already pinned, then instead of
    calling ttm_bo_validate(), just make sure the proposed placement is
    compatible with the existing placement.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b40c9ac7286e6a5578649098861c7bfcd40451de
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Wed Jun 29 11:29:47 2016 -0700

    drm/vmwgfx: Work around mode set failure in 2D VMs
    
    commit 7c20d213dd3cd6295bf9162730e7a368af957854 upstream.
    
    In a low-memory 2D VM, fbdev can take up a large percentage of
    available memory, making them unavailable for other DRM clients.
    
    Since we do not take fbdev into account when filtering modes,
    we end up claiming to support more modes than we actually do.
    
    As a result, users get a black screen when setting a mode too
    large for current available memory.  In a low-memory VM
    configuration, users can get a black screen for a mode as low
    as 1024x768.
    
    The current mode filtering mechanism keys off of
    SVGA_REG_SUGGESTED_GBOBJECT_MEM_SIZE_KB, i.e. the maximum amount
    of surface memory we have.  Since this value is a performance
    suggestion, not a hard limit, and since there should not be much
    of a performance impact for a 2D VM, rather than filtering out
    more modes, we will just allow ourselves to exceed the SVGA's
    performance suggestion.
    
    Also changed assumed bpp to 32 from 16 to make sure we can
    actually support all the modes listed.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a216ed8d951f63fcce306f0471c4210c3db47aaa
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Wed Jun 29 12:15:48 2016 -0700

    drm/vmwgfx: Add an option to change assumed FB bpp
    
    commit 04319d89fbec72dfd60738003c3813b97c1d5f5a upstream.
    
    Offer an option for advanced users who want larger modes at 16bpp.
    
    This becomes necessary after the fix: "Work around mode set
    failure in 2D VMs."  Without this patch, there would be no way
    for existing advanced users to get to a high res mode, and the
    regression is they will likely get a black screen after a software
    update on their current VM.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c42c30a3d4535be17fe50be6fa549bd95dd415f
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Wed Jun 29 12:58:49 2016 -0700

    drm/ttm: Make ttm_bo_mem_compat available
    
    commit 94477bff390aa4612d2332c8abafaae0a13d6923 upstream.
    
    There are cases where it is desired to see if a proposed placement
    is compatible with a buffer object before calling ttm_bo_validate().
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6a2cb3a3b2431f2f8ebbac9b8fcc75f24e2e814
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Fri May 27 16:09:25 2016 +0200

    drm: atmel-hlcdc: actually disable scaling when no scaling is required
    
    commit 1b7e38b92b0bbd363369f5160f13f4d26140972d upstream.
    
    The driver is only enabling scaling, but never disabling it, thus, if you
    enable the scaling feature once it stays enabled forever.
    
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reported-by: Alex Vazquez <avazquez.dev@gmail.com>
    Reviewed-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Fixes: 1a396789f65a ("drm: add Atmel HLCDC Display Controller support")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f956468c5b6ca1e4a1048564706b06b8fc4a79b2
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Tue May 31 15:03:17 2016 +0300

    drm: make drm_atomic_set_mode_prop_for_crtc() more reliable
    
    commit 6709887c448d1cff51b52d09763c7b834ea5f0be upstream.
    
    drm_atomic_set_mode_prop_for_crtc() does not clear the state->mode, so
    old data may be left there when a new mode is set, possibly causing odd
    issues.
    
    This patch improves the situation by always clearing the state->mode
    first.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec00d4d71abfd92d6cc3023dec46ff1428f74514
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Tue May 31 15:03:15 2016 +0300

    drm: add missing drm_mode_set_crtcinfo call
    
    commit b201e743f42d143f4bcdcb14587caf7cb1d99229 upstream.
    
    When setting mode via MODE_ID property,
    drm_atomic_set_mode_prop_for_crtc() does not call
    drm_mode_set_crtcinfo() which possibly causes:
    
    "[drm:drm_calc_timestamping_constants [drm]] *ERROR* crtc 32: Can't
    calculate constants, dotclock = 0!"
    
    Whether the error is seen depends on the previous data in state->mode,
    as state->mode is not cleared when setting new mode.
    
    This patch adds drm_mode_set_crtcinfo() call to
    drm_mode_convert_umode(), which is called in both legacy and atomic
    paths. This should be fine as there's no reason to call
    drm_mode_convert_umode() without also setting the crtc related fields.
    
    drm_mode_set_crtcinfo() is removed from the legacy drm_mode_setcrtc() as
    that is no longer needed.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86383e482504c16fd2ad91a7ba4dcb250d4bdd51
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Apr 26 19:46:32 2016 +0300

    drm/i915: Update CDCLK_FREQ register on BDW after changing cdclk frequency
    
    commit a04e23d42a1ce5d5f421692bb1c7e9352832819d upstream.
    
    Update CDCLK_FREQ on BDW after changing the cdclk frequency. Not sure
    if this is a late addition to the spec, or if I simply overlooked this
    step when writing the original code.
    
    This is what Bspec has to say about CDCLK_FREQ:
    "Program this field to the CD clock frequency minus one. This is used to
     generate a divided down clock for miscellaneous timers in display."
    
    And the "Broadwell Sequences for Changing CD Clock Frequency" section
    clarifies this further:
    "For CD clock 337.5 MHz, program 337 decimal.
     For CD clock 450 MHz, program 449 decimal.
     For CD clock 540 MHz, program 539 decimal.
     For CD clock 675 MHz, program 674 decimal."
    
    Cc: stable@vger.kernel.org
    Cc: Mika Kahola <mika.kahola@intel.com>
    Fixes: b432e5cfd5e9 ("drm/i915: BDW clock change support")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1461689194-6079-2-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Mika Kahola <mika.kahola@intel.com>
    (cherry picked from commit 7f1052a8fa38df635ab0dc0e6025b64ab9834824)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edc185a40251e4727ba729ccb478d39cf76bfc54
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Jul 11 14:46:17 2016 +0100

    drm/i915: Update ifdeffery for mutex->owner
    
    commit b19240062722c39fa92c99f04cbfd93034625123 upstream.
    
    In commit 7608a43d8f2e ("locking/mutexes: Use MUTEX_SPIN_ON_OWNER when
    appropriate") the owner field in the mutex was updated from being
    dependent upon CONFIG_SMP to using optimistic spin. Update our peek
    function to suite.
    
    Fixes:7608a43d8f2e ("locking/mutexes: Use MUTEX_SPIN_ON_OWNER...")
    Reported-by: Hong Liu <hong.liu@intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: http://patchwork.freedesktop.org/patch/msgid/1468244777-4888-1-git-send-email-chris@chris-wilson.co.uk
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    (cherry picked from commit 4f074a5393431a7d2cc0de7fcfe2f61d24854628)
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ea2a7e9e976eda3906e0a400b339059e6141f0f
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri May 13 20:53:56 2016 +0300

    drm/i915: Refresh cached DP port register value on resume
    
    commit 664a84d2c77cbff2945ed7f96d08afbba42b6293 upstream.
    
    During hibernation the cached DP port register value will be left with
    whatever value we have there when we create the hibernation image.
    Currently that means the port (and eDP PLL) will be off in the cached
    value. However when we resume there is no guarantee that the value
    in the actual register will match the cached value. If i915 isn't
    loaded in the kernel that loads the hibernation image, the port may
    well be on (eg. left on by the BIOS). The encoder state readout
    does the right thing in this case and updates our encoder state
    to reflect the actual hardware state. However the post-resume modeset
    will then use the stale cached port register value in
    intel_dp_link_down() and potentially confuse the hardware.
    
    This was caught by the following assert
     WARNING: CPU: 3 PID: 5288 at ../drivers/gpu/drm/i915/intel_dp.c:2184 assert_edp_pll+0x99/0xa0 [i915]
     eDP PLL state assertion failure (expected on, current off)
    on account of the eDP PLL getting prematurely turned off when
    shutting down the port, since the DP_PLL_ENABLE bit wasn't set
    in the cached register value.
    
    Presumably I introduced this problem in
    commit 6fec76628333 ("drm/i915: Use intel_dp->DP in eDP PLL setup")
    as before that we didn't update the cached value after shuttting the
    port down. That's assuming the port got enabled at least once prior
    to hibernating. If that didn't happen then the cached value would
    still have been totally out of sync with reality (eg. first boot w/o
    eDP on, then hibernate, and then resume with eDP on).
    
    So, let's fix this properly and refresh the cached register value from
    the hardware register during resume.
    
    DDI platforms shouldn't use the cached value during port disable at
    least, so shouldn't have this particular issue. They might still have
    issues if we skip the initial modeset and then try to retrain the link
    or something. But untangling this DP vs. DDI mess is a bigger topic,
    so let's jut punt on DDI for now.
    
    Cc: Jani Nikula <jani.nikula@intel.com>
    Fixes: 6fec76628333 ("drm/i915: Use intel_dp->DP in eDP PLL setup")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1463162036-27931-1-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    (cherry picked from commit 64989ca4b27acb026b6496ec21e43bee66f86a5b)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b17d254d755aabaff680bb09a896bac62a238082
Author: Lyude <cpaul@redhat.com>
Date:   Tue Jun 14 11:04:09 2016 -0400

    drm/i915/ilk: Don't disable SSC source if it's in use
    
    commit 476490a945e1f0f6bd58e303058d2d8ca93a974c upstream.
    
    Thanks to Ville Syrjälä for pointing me towards the cause of this issue.
    
    Unfortunately one of the sideaffects of having the refclk for a DPLL set
    to SSC is that as long as it's set to SSC, the GPU will prevent us from
    powering down any of the pipes or transcoders using it. A couple of
    BIOSes enable SSC in both PCH_DREF_CONTROL and in the DPLL
    configurations. This causes issues on the first modeset, since we don't
    expect SSC to be left on and as a result, can't successfully power down
    the pipes or the transcoders using it. Here's an example from this Dell
    OptiPlex 990:
    
    [drm:intel_modeset_init] SSC enabled by BIOS, overriding VBT which says disabled
    [drm:intel_modeset_init] 2 display pipes available.
    [drm:intel_update_cdclk] Current CD clock rate: 400000 kHz
    [drm:intel_update_max_cdclk] Max CD clock rate: 400000 kHz
    [drm:intel_update_max_cdclk] Max dotclock rate: 360000 kHz
    vgaarb: device changed decodes: PCI:0000:00:02.0,olddecodes=io+mem,decodes=io+mem:owns=io+mem
    [drm:intel_crt_reset] crt adpa set to 0xf40000
    [drm:intel_dp_init_connector] Adding DP connector on port C
    [drm:intel_dp_aux_init] registering DPDDC-C bus for card0-DP-1
    [drm:ironlake_init_pch_refclk] has_panel 0 has_lvds 0 has_ck505 0
    [drm:ironlake_init_pch_refclk] Disabling SSC entirely
    … later we try committing the first modeset …
    [drm:intel_dump_pipe_config] [CRTC:26][modeset] config ffff88041b02e800 for pipe A
    [drm:intel_dump_pipe_config] cpu_transcoder: A
    …
    [drm:intel_dump_pipe_config] dpll_hw_state: dpll: 0xc4016001, dpll_md: 0x0, fp0: 0x20e08, fp1: 0x30d07
    [drm:intel_dump_pipe_config] planes on this crtc
    [drm:intel_dump_pipe_config] STANDARD PLANE:23 plane: 0.0 idx: 0 enabled
    [drm:intel_dump_pipe_config]     FB:42, fb = 800x600 format = 0x34325258
    [drm:intel_dump_pipe_config]     scaler:0 src (0, 0) 800x600 dst (0, 0) 800x600
    [drm:intel_dump_pipe_config] CURSOR PLANE:25 plane: 0.1 idx: 1 disabled, scaler_id = 0
    [drm:intel_dump_pipe_config] STANDARD PLANE:27 plane: 0.1 idx: 2 disabled, scaler_id = 0
    [drm:intel_get_shared_dpll] CRTC:26 allocated PCH DPLL A
    [drm:intel_get_shared_dpll] using PCH DPLL A for pipe A
    [drm:ilk_audio_codec_disable] Disable audio codec on port C, pipe A
    [drm:intel_disable_pipe] disabling pipe A
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 130 at drivers/gpu/drm/i915/intel_display.c:1146 intel_disable_pipe+0x297/0x2d0 [i915]
    pipe_off wait timed out
    …
    ---[ end trace 94fc8aa03ae139e8 ]---
    [drm:intel_dp_link_down]
    [drm:ironlake_crtc_disable [i915]] *ERROR* failed to disable transcoder A
    
    Later modesets succeed since they reset the DPLL's configuration anyway,
    but this is enough to get stuck with a big fat warning in dmesg.
    
    A better solution would be to add refcounts for the SSC source, but for
    now leaving the source clock on should suffice.
    
    Changes since v4:
     - Fix calculation of final for systems with LVDS panels (fixes BUG() on
       CI test suite)
    Changes since v3:
     - Move temp variable into loop
     - Move checks for using_ssc_source to after we've figured out has_ck505
     - Add using_ssc_source to debug output
    Changes since v2:
     - Fix debug output for when we disable the CPU source
    Changes since v1:
     - Leave the SSC source clock on instead of just shutting it off on all
       of the DPLL configurations.
    
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1465916649-10228-1-git-send-email-cpaul@redhat.com
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b69c00a8551731e64883dd7356e5de45ac834ab
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jul 6 06:50:36 2016 +1000

    drm/nouveau/disp/sor/gf119: select correct sor when poking training pattern
    
    commit 217215041b9285af2193a755b56a8f3ed408bfe2 upstream.
    
    Fixes a regression caused by a stupid thinko from "disp/sor/gf119: both
    links use the same training register".
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15dc6a484a8e4b4a4f8a43bc0ffdcb28dca51932
Author: Dmitrii Tcvetkov <demfloro@demfloro.ru>
Date:   Mon Jun 20 13:52:14 2016 +0300

    drm/nouveau: fix for disabled fbdev emulation
    
    commit 52dfcc5ccfbb6697ac3cac7f7ff1e712760e1216 upstream.
    
    Hello,
    
    after this commit:
    
    commit f045f459d925138fe7d6193a8c86406bda7e49da
    Author: Ben Skeggs <bskeggs@redhat.com>
    Date:   Thu Jun 2 12:23:31 2016 +1000
        drm/nouveau/fbcon: fix out-of-bounds memory accesses
    
    kernel started to oops when loading nouveau module when using GTX 780 Ti
    video adapter. This patch fixes the problem.
    
    Bug report: https://bugzilla.kernel.org/show_bug.cgi?id=120591
    
    Signed-off-by: Dmitrii Tcvetkov <demfloro@demfloro.ru>
    Suggested-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Fixes: f045f459d925 ("nouveau_fbcon_init()")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbf9b544a2bc0900142c723b804889aa0f35216c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jun 2 12:23:31 2016 +1000

    drm/nouveau/fbcon: fix out-of-bounds memory accesses
    
    commit f045f459d925138fe7d6193a8c86406bda7e49da upstream.
    
    Reported by KASAN.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8c3b35d3e3b1c750866e0c724711ef333652eb5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jun 1 16:20:10 2016 +1000

    drm/nouveau/gr/gf100-: update sm error decoding from gk20a nvgpu headers
    
    commit 383d0a419f8e63e3d65e706c3c515fa9505ce364 upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 921daff213acae3cde81b880d5d9a484d9005839
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Jun 3 14:37:40 2016 +1000

    drm/nouveau/disp/sor/gf119: both links use the same training register
    
    commit a8953c52b95167b5d21a66f0859751570271d834 upstream.
    
    It appears that, for whatever reason, both link A and B use the same
    register to control the training pattern.  It's a little odd, as the
    GPUs before this (Tesla/Fermi1) have per-link registers, as do newer
    GPUs (Maxwell).
    
    Fixes the third DP output on NVS 510 (GK107).
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7233bb86c334a1f09baff3a0bfc690078d332dd1
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue May 17 13:31:18 2016 +0300

    virtio_balloon: fix PFN format for virtio-1
    
    commit 87c9403b0d1de4676b0bd273eea68fcf6de68e68 upstream.
    
    Everything should be LE when using virtio-1, but
    the linux balloon driver does not seem to care about that.
    
    Reported-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Tested-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b752a2713709ac1f56e95a50868b89df6eaf0c1e
Author: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Date:   Wed May 25 16:45:43 2016 -0400

    drm/dp/mst: Always clear proposed vcpi table for port.
    
    commit fd2d2bac6e79b0be91ab86a6075a0c46ffda658a upstream.
    
    Not clearing mst manager's proposed vcpis table for destroyed connectors when the manager is stopped leaves it pointing to unrefernced memory, this causes pagefault when the manager is restarted when plugging back a branch.
    
    Fixes: 91a25e463130 ("drm/dp/mst: deallocate payload on port destruction")
    Signed-off-by: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
    Reviewed-by: Lyude <cpaul@redhat.com>
    Cc: Mykola Lysenko <Mykola.Lysenko@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83a6e52a5129266b77cd82de6c151c14dfc95138
Author: Oded Gabbay <oded.gabbay@gmail.com>
Date:   Thu May 26 08:41:48 2016 +0300

    drm/amdkfd: destroy dbgmgr in notifier release
    
    commit bc4755a4bd1845ef6e88ac8c62f12e05bb530256 upstream.
    
    amdkfd need to destroy the debug manager in case amdkfd's notifier
    function is called before the unbind function, because in that case,
    the unbind function will exit without destroying debug manager.
    
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf2e8061303f03be32a3c285cd06a73a42f7ceab
Author: Oded Gabbay <oded.gabbay@gmail.com>
Date:   Thu May 26 08:41:08 2016 +0300

    drm/amdkfd: unbind only existing processes
    
    commit 121b78e679ee3ffab780115e260b2775d0cc1f73 upstream.
    
    When unbinding a process from a device (initiated by amd_iommu_v2), the
    driver needs to make sure that process still exists in the process table.
    There is a possibility that amdkfd's own notifier handler -
    kfd_process_notifier_release() - was called before the unbind function
    and it already removed the process from the process table.
    
    v2:
    Because there can be only one process with the specified pasid, and
    because *p can't be NULL inside the hash_for_each_rcu macro, it is more
    reasonable to just put the whole code inside the if statement that
    compares the pasid value. That way, when we exit hash_for_each_rcu, we
    simply exit the function as well.
    
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca8a32b2170621da0bb1807470917cf30a2af2c8
Author: Richard Weinberger <richard@nod.at>
Date:   Tue Jun 21 00:31:50 2016 +0200

    ubi: Make recover_peb power cut aware
    
    commit 972228d87445dc46c0a01f5f3de673ac017626f7 upstream.
    
    recover_peb() was never power cut aware,
    if a power cut happened right after writing the VID header
    upon next attach UBI would blindly use the new partial written
    PEB and all data from the old PEB is lost.
    
    In order to make recover_peb() power cut aware, write the new
    VID with a proper crc and copy_flag set such that the UBI attach
    process will detect whether the new PEB is completely written
    or not.
    We cannot directly use ubi_eba_atomic_leb_change() since we'd
    have to unlock the LEB which is facing a write error.
    
    Reported-by: Jörg Pfähler <pfaehler@isse.de>
    Reviewed-by: Jörg Pfähler <pfaehler@isse.de>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69eab50dedd0c74f29c754f7fad190ce28a0b22f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Jun 13 18:26:24 2016 -0400

    drm/amdgpu/gfx7: fix broken condition check
    
    commit 8b18300c13a1e08e152f6b6a430faac84f986231 upstream.
    
    Wrong operator.
    
    Reported-by: David Binderman <linuxdev.baldrick@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc326bfa70b7518233bc43992958e0d5b1ef85b2
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Jun 13 15:37:34 2016 -0400

    drm/radeon: fix asic initialization for virtualized environments
    
    commit 05082b8bbd1a0ffc74235449c4b8930a8c240f85 upstream.
    
    When executing in a PCI passthrough based virtuzliation environment, the
    hypervisor will usually attempt to send a PCIe bus reset signal to the
    ASIC when the VM reboots. In this scenario, the card is not correctly
    initialized, but we still consider it to be posted. Therefore, in a
    passthrough based environemnt we should always post the card to guarantee
    it is in a good state for driver initialization.
    
    Ported from amdgpu commit:
    amdgpu: fix asic initialization for virtualized environments
    
    Cc: Andres Rodriguez <andres.rodriguez@amd.com>
    Cc: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13226e1ed87182883f877f6021c2b4a2f019c363
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Wed Jun 8 00:36:38 2016 -0400

    btrfs: account for non-CoW'd blocks in btrfs_abort_transaction
    
    commit 64c12921e11b3a0c10d088606e328c58e29274d8 upstream.
    
    The test for !trans->blocks_used in btrfs_abort_transaction is
    insufficient to determine whether it's safe to drop the transaction
    handle on the floor.  btrfs_cow_block, informed by should_cow_block,
    can return blocks that have already been CoW'd in the current
    transaction.  trans->blocks_used is only incremented for new block
    allocations. If an operation overlaps the blocks in the current
    transaction entirely and must abort the transaction, we'll happily
    let it clean up the trans handle even though it may have modified
    the blocks and will commit an incomplete operation.
    
    In the long-term, I'd like to do closer tracking of when the fs
    is actually modified so we can still recover as gracefully as possible,
    but that approach will need some discussion.  In the short term,
    since this is the only code using trans->blocks_used, let's just
    switch it to a bool indicating whether any blocks were used and set
    it when should_cow_block returns false.
    
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bb1138e7760404fb801f0b656f85d2fcfc2c39d
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 25 11:48:25 2016 -0400

    percpu: fix synchronization between synchronous map extension and chunk destruction
    
    commit 6710e594f71ccaad8101bc64321152af7cd9ea28 upstream.
    
    For non-atomic allocations, pcpu_alloc() can try to extend the area
    map synchronously after dropping pcpu_lock; however, the extension
    wasn't synchronized against chunk destruction and the chunk might get
    freed while extension is in progress.
    
    This patch fixes the bug by putting most of non-atomic allocations
    under pcpu_alloc_mutex to synchronize against pcpu_balance_work which
    is responsible for async chunk management including destruction.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-and-tested-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Fixes: 1a4d76076cda ("percpu: implement asynchronous chunk population")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c26ae537f16f653c2541df9e338013653fc3fcc7
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 25 11:48:25 2016 -0400

    percpu: fix synchronization between chunk->map_extend_work and chunk destruction
    
    commit 4f996e234dad488e5d9ba0858bc1bae12eff82c3 upstream.
    
    Atomic allocations can trigger async map extensions which is serviced
    by chunk->map_extend_work.  pcpu_balance_work which is responsible for
    destroying idle chunks wasn't synchronizing properly against
    chunk->map_extend_work and may end up freeing the chunk while the work
    item is still in flight.
    
    This patch fixes the bug by rolling async map extension operations
    into pcpu_balance_work.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-and-tested-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Fixes: 9c824b6a172c ("percpu: make sure chunk->map array has available space")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0da3127a76c2cf7ad2c56e88841fa83613a67a77
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri May 20 22:13:45 2016 +0200

    af_unix: fix hard linked sockets on overlay
    
    commit eb0a4a47ae89aaa0674ab3180de6a162f3be2ddf upstream.
    
    Overlayfs uses separate inodes even in the case of hard links on the
    underlying filesystems.  This is a problem for AF_UNIX socket
    implementation which indexes sockets based on the inode.  This resulted in
    hard linked sockets not working.
    
    The fix is to use the real, underlying inode.
    
    Test case follows:
    
    -- ovl-sock-test.c --
    #include <unistd.h>
    #include <err.h>
    #include <sys/socket.h>
    #include <sys/un.h>
    
    #define SOCK "test-sock"
    #define SOCK2 "test-sock2"
    
    int main(void)
    {
            int fd, fd2;
            struct sockaddr_un addr = {
                    .sun_family = AF_UNIX,
                    .sun_path = SOCK,
            };
            struct sockaddr_un addr2 = {
                    .sun_family = AF_UNIX,
                    .sun_path = SOCK2,
            };
    
            unlink(SOCK);
            unlink(SOCK2);
            if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) == -1)
                    err(1, "socket");
            if (bind(fd, (struct sockaddr *) &addr, sizeof(addr)) == -1)
                    err(1, "bind");
            if (listen(fd, 0) == -1)
                    err(1, "listen");
            if (link(SOCK, SOCK2) == -1)
                    err(1, "link");
            if ((fd2 = socket(AF_UNIX, SOCK_STREAM, 0)) == -1)
                    err(1, "socket");
            if (connect(fd2, (struct sockaddr *) &addr2, sizeof(addr2)) == -1)
                    err (1, "connect");
            return 0;
    }
    ----
    
    Reported-by: Alexander Morozov <alexandr.morozov@docker.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c65170792047969e2b129dbf6cdc633503a4087d
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri May 20 22:13:45 2016 +0200

    vfs: add d_real_inode() helper
    
    commit a118084432d642eeccb961c7c8cc61525a941fcb upstream.
    
    Needed by the following fix.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cff5b236fa152d98bd83d901a0870a585414d340
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Tue Mar 1 14:18:50 2016 +0000

    arm64: Rework valid_user_regs
    
    commit dbd4d7ca563fd0a8949718d35ce197e5642d5d9d upstream.
    
    We validate pstate using PSR_MODE32_BIT, which is part of the
    user-provided pstate (and cannot be trusted). Also, we conflate
    validation of AArch32 and AArch64 pstate values, making the code
    difficult to reason about.
    
    Instead, validate the pstate value based on the associated task. The
    task may or may not be current (e.g. when using ptrace), so this must be
    passed explicitly by callers. To avoid circular header dependencies via
    sched.h, is_compat_task is pulled out of asm/ptrace.h.
    
    To make the code possible to reason about, the AArch64 and AArch32
    validation is split into separate functions. Software must respect the
    RES0 policy for SPSR bits, and thus the kernel mirrors the hardware
    policy (RAZ/WI) for bits as-yet unallocated. When these acquire an
    architected meaning writes may be permitted (potentially with additional
    validation).
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Cc: Dave Martin <dave.martin@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Peter Maydell <peter.maydell@linaro.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    [ rebased for v4.1+
      This avoids a user-triggerable Oops() if a task is switched to a mode
      not supported by the kernel (e.g. switching a 64-bit task to AArch32).
    ]
    Signed-off-by: James Morse <james.morse@arm.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com> [backport]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de0f9fa7a50dafdfbc8e0558a39c872772fad6bb
Author: Junichi Nomura <j-nomura@ce.jp.nec.com>
Date:   Fri Jun 10 04:31:52 2016 +0000

    ipmi: Remove smi_msg from waiting_rcv_msgs list before handle_one_recv_msg()
    
    commit ae4ea9a2460c7fee2ae8feeb4dfe96f5f6c3e562 upstream.
    
    Commit 7ea0ed2b5be8 ("ipmi: Make the message handler easier to use for
    SMI interfaces") changed handle_new_recv_msgs() to call handle_one_recv_msg()
    for a smi_msg while the smi_msg is still connected to waiting_rcv_msgs list.
    That could lead to following list corruption problems:
    
    1) low-level function treats smi_msg as not connected to list
    
      handle_one_recv_msg() could end up calling smi_send(), which
      assumes the msg is not connected to list.
    
      For example, the following sequence could corrupt list by
      doing list_add_tail() for the entry still connected to other list.
    
        handle_new_recv_msgs()
          msg = list_entry(waiting_rcv_msgs)
          handle_one_recv_msg(msg)
            handle_ipmb_get_msg_cmd(msg)
              smi_send(msg)
                spin_lock(xmit_msgs_lock)
                list_add_tail(msg)
                spin_unlock(xmit_msgs_lock)
    
    2) race between multiple handle_new_recv_msgs() instances
    
      handle_new_recv_msgs() once releases waiting_rcv_msgs_lock before calling
      handle_one_recv_msg() then retakes the lock and list_del() it.
    
      If others call handle_new_recv_msgs() during the window shown below
      list_del() will be done twice for the same smi_msg.
    
      handle_new_recv_msgs()
        spin_lock(waiting_rcv_msgs_lock)
        msg = list_entry(waiting_rcv_msgs)
        spin_unlock(waiting_rcv_msgs_lock)
      |
      | handle_one_recv_msg(msg)
      |
        spin_lock(waiting_rcv_msgs_lock)
        list_del(msg)
        spin_unlock(waiting_rcv_msgs_lock)
    
    Fixes: 7ea0ed2b5be8 ("ipmi: Make the message handler easier to use for SMI interfaces")
    Signed-off-by: Jun'ichi Nomura <j-nomura@ce.jp.nec.com>
    [Added a comment to describe why this works.]
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Tested-by: Ye Feng <yefeng.yl@alibaba-inc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 084ad7f71e15e7f96d7dfe1ea1a438ae8b709255
Author: Mathieu Larouche <mathieu.larouche@matrox.com>
Date:   Fri May 27 15:12:50 2016 -0400

    drm/mgag200: Black screen fix for G200e rev 4
    
    commit d3922b69617b62bb2509936b68301f837229d9f0 upstream.
    
    - Fixed black screen for some resolutions of G200e rev4
    - Fixed testm & testn which had predetermined value.
    
    Reported-by: Jan Beulich <jbeulich@suse.com>
    
    Signed-off-by: Mathieu Larouche <mathieu.larouche@matrox.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e205592b31d0aed33edc1fbbb667dcba696aa173
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Jul 1 16:42:55 2016 +0200

    iommu/amd: Fix unity mapping initialization race
    
    commit 522e5cb76d0663c88f96b6a8301451c8efa37207 upstream.
    
    There is a race condition in the AMD IOMMU init code that
    causes requested unity mappings to be blocked by the IOMMU
    for a short period of time. This results on boot failures
    and IO_PAGE_FAULTs on some machines.
    
    Fix this by making sure the unity mappings are installed
    before all other DMA is blocked.
    
    Fixes: aafd8ba0ca74 ('iommu/amd: Implement add_device and remove_device')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72803a72a6b8444cf9cac844553056dae984dc3b
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Jun 17 11:29:48 2016 +0200

    iommu/vt-d: Enable QI on all IOMMUs before setting root entry
    
    commit a4c34ff1c029e90e7d5f8dd8d29b0a93b31c3cb2 upstream.
    
    This seems to be required on some X58 chipsets on systems
    with more than one IOMMU. QI does not work until it is
    enabled on all IOMMUs in the system.
    
    Reported-by: Dheeraj CVR <cvr.dheeraj@gmail.com>
    Tested-by: Dheeraj CVR <cvr.dheeraj@gmail.com>
    Fixes: 5f0a7f7614a9 ('iommu/vt-d: Make root entry visible for hardware right after allocation')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9566f67f09e6298845ec27bfbf4e7443a912715
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Fri Jun 3 11:50:30 2016 +0100

    iommu/arm-smmu: Wire up map_sg for arm-smmu-v3
    
    commit 9aeb26cfc2abc96be42b9df2d0f2dc5d805084ff upstream.
    
    The map_sg callback is missing from arm_smmu_ops, but is required by
    iommu.h. Similarly to most other IOMMU drivers, connect it to
    default_iommu_map_sg.
    
    Signed-off-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c705db27ed4e65574afac58cd7a696282db9131e
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Jun 10 10:54:32 2016 +0200

    base: make module_create_drivers_dir race-free
    
    commit 7e1b1fc4dabd6ec8e28baa0708866e13fa93c9b3 upstream.
    
    Modules which register drivers via standard path (driver_register) in
    parallel can cause a warning:
    WARNING: CPU: 2 PID: 3492 at ../fs/sysfs/dir.c:31 sysfs_warn_dup+0x62/0x80
    sysfs: cannot create duplicate filename '/module/saa7146/drivers'
    Modules linked in: hexium_gemini(+) mxb(+) ...
    ...
    Call Trace:
    ...
     [<ffffffff812e63a2>] sysfs_warn_dup+0x62/0x80
     [<ffffffff812e6487>] sysfs_create_dir_ns+0x77/0x90
     [<ffffffff8140f2c4>] kobject_add_internal+0xb4/0x340
     [<ffffffff8140f5b8>] kobject_add+0x68/0xb0
     [<ffffffff8140f631>] kobject_create_and_add+0x31/0x70
     [<ffffffff8157a703>] module_add_driver+0xc3/0xd0
     [<ffffffff8155e5d4>] bus_add_driver+0x154/0x280
     [<ffffffff815604c0>] driver_register+0x60/0xe0
     [<ffffffff8145bed0>] __pci_register_driver+0x60/0x70
     [<ffffffffa0273e14>] saa7146_register_extension+0x64/0x90 [saa7146]
     [<ffffffffa0033011>] hexium_init_module+0x11/0x1000 [hexium_gemini]
    ...
    
    As can be (mostly) seen, driver_register causes this call sequence:
      -> bus_add_driver
        -> module_add_driver
          -> module_create_drivers_dir
    The last one creates "drivers" directory in /sys/module/<...>. When
    this is done in parallel, the directory is attempted to be created
    twice at the same time.
    
    This can be easily reproduced by loading mxb and hexium_gemini in
    parallel:
    while :; do
      modprobe mxb &
      modprobe hexium_gemini
      wait
      rmmod mxb hexium_gemini saa7146_vv saa7146
    done
    
    saa7146 calls pci_register_driver for both mxb and hexium_gemini,
    which means /sys/module/saa7146/drivers is to be created for both of
    them.
    
    Fix this by a new mutex in module_create_drivers_dir which makes the
    test-and-create "drivers" dir atomic.
    
    I inverted the condition and removed 'return' to avoid multiple
    unlocks or a goto.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: fe480a2675ed (Modules: only add drivers/ direcory if needed)
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc64a83932dc9f5cebcbac38cd8a2dd5aa57db51
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Fri Jun 17 16:10:42 2016 -0400

    tracing: Handle NULL formats in hold_module_trace_bprintk_format()
    
    commit 70c8217acd4383e069fe1898bbad36ea4fcdbdcc upstream.
    
    If a task uses a non constant string for the format parameter in
    trace_printk(), then the trace_printk_fmt variable is set to NULL. This
    variable is then saved in the __trace_printk_fmt section.
    
    The function hold_module_trace_bprintk_format() checks to see if duplicate
    formats are used by modules, and reuses them if so (saves them to the list
    if it is new). But this function calls lookup_format() that does a strcmp()
    to the value (which is now NULL) and can cause a kernel oops.
    
    This wasn't an issue till 3debb0a9ddb ("tracing: Fix trace_printk() to print
    when not using bprintk()") which added "__used" to the trace_printk_fmt
    variable, and before that, the kernel simply optimized it out (no NULL value
    was saved).
    
    The fix is simply to handle the NULL pointer in lookup_format() and have the
    caller ignore the value if it was NULL.
    
    Link: http://lkml.kernel.org/r/1464769870-18344-1-git-send-email-zhengjun.xing@intel.com
    
    Reported-by: xingzhen <zhengjun.xing@intel.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Fixes: 3debb0a9ddb ("tracing: Fix trace_printk() to print when not using bprintk()")
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f839c956ebc05afd7d4e7bf75023180360b92cb
Author: Allen Hung <allen_hung@dell.com>
Date:   Thu Jun 23 16:31:30 2016 +0800

    HID: multitouch: enable palm rejection for Windows Precision Touchpad
    
    commit 6dd2e27a103d716921cc4a1a96a9adc0a8e3ab57 upstream.
    
    The usage Confidence is mandary to Windows Precision Touchpad devices. If
    it is examined in input_mapping on a WIndows Precision Touchpad, a new add
    quirk MT_QUIRK_CONFIDENCE desgned for such devices will be applied to the
    device. A touch with the confidence bit is not set is determined as
    invalid.
    
    Tested on Dell XPS13 9343
    
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Tested-by: Andy Lutomirski <luto@kernel.org> # XPS 13 9350, BIOS 1.4.3
    Signed-off-by: Allen Hung <allen_hung@dell.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 300851ff55f7777be2780207f1b60ad5e1fd1303
Author: Scott Bauer <sbauer@plzdonthack.me>
Date:   Thu Jun 23 08:59:47 2016 -0600

    HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES commands
    
    commit 93a2001bdfd5376c3dc2158653034c20392d15c5 upstream.
    
    This patch validates the num_values parameter from userland during the
    HIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was set
    to HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameter
    leading to a heap overflow.
    
    Signed-off-by: Scott Bauer <sbauer@plzdonthack.me>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d7a2ff18a99accba695b9208f36174a2983413a
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue May 31 14:48:15 2016 +0200

    HID: elo: kill not flush the work
    
    commit ed596a4a88bd161f868ccba078557ee7ede8a6ef upstream.
    
    Flushing a work that reschedules itself is not a sensible operation. It needs
    to be killed. Failure to do so leads to a kernel panic in the timer code.
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44dd5cec804b90b96dc10731711aa168312b0820
Author: Quentin Casasnovas <quentin.casasnovas@oracle.com>
Date:   Sat Jun 18 11:01:05 2016 +0200

    KVM: nVMX: VMX instructions: fix segment checks when L1 is in long mode.
    
    commit ff30ef40deca4658e27b0c596e7baf39115e858f upstream.
    
    I couldn't get Xen to boot a L2 HVM when it was nested under KVM - it was
    getting a GP(0) on a rather unspecial vmread from Xen:
    
         (XEN) ----[ Xen-4.7.0-rc  x86_64  debug=n  Not tainted ]----
         (XEN) CPU:    1
         (XEN) RIP:    e008:[<ffff82d0801e629e>] vmx_get_segment_register+0x14e/0x450
         (XEN) RFLAGS: 0000000000010202   CONTEXT: hypervisor (d1v0)
         (XEN) rax: ffff82d0801e6288   rbx: ffff83003ffbfb7c   rcx: fffffffffffab928
         (XEN) rdx: 0000000000000000   rsi: 0000000000000000   rdi: ffff83000bdd0000
         (XEN) rbp: ffff83000bdd0000   rsp: ffff83003ffbfab0   r8:  ffff830038813910
         (XEN) r9:  ffff83003faf3958   r10: 0000000a3b9f7640   r11: ffff83003f82d418
         (XEN) r12: 0000000000000000   r13: ffff83003ffbffff   r14: 0000000000004802
         (XEN) r15: 0000000000000008   cr0: 0000000080050033   cr4: 00000000001526e0
         (XEN) cr3: 000000003fc79000   cr2: 0000000000000000
         (XEN) ds: 0000   es: 0000   fs: 0000   gs: 0000   ss: 0000   cs: e008
         (XEN) Xen code around <ffff82d0801e629e> (vmx_get_segment_register+0x14e/0x450):
         (XEN)  00 00 41 be 02 48 00 00 <44> 0f 78 74 24 08 0f 86 38 56 00 00 b8 08 68 00
         (XEN) Xen stack trace from rsp=ffff83003ffbfab0:
    
         ...
    
         (XEN) Xen call trace:
         (XEN)    [<ffff82d0801e629e>] vmx_get_segment_register+0x14e/0x450
         (XEN)    [<ffff82d0801f3695>] get_page_from_gfn_p2m+0x165/0x300
         (XEN)    [<ffff82d0801bfe32>] hvmemul_get_seg_reg+0x52/0x60
         (XEN)    [<ffff82d0801bfe93>] hvm_emulate_prepare+0x53/0x70
         (XEN)    [<ffff82d0801ccacb>] handle_mmio+0x2b/0xd0
         (XEN)    [<ffff82d0801be591>] emulate.c#_hvm_emulate_one+0x111/0x2c0
         (XEN)    [<ffff82d0801cd6a4>] handle_hvm_io_completion+0x274/0x2a0
         (XEN)    [<ffff82d0801f334a>] __get_gfn_type_access+0xfa/0x270
         (XEN)    [<ffff82d08012f3bb>] timer.c#add_entry+0x4b/0xb0
         (XEN)    [<ffff82d08012f80c>] timer.c#remove_entry+0x7c/0x90
         (XEN)    [<ffff82d0801c8433>] hvm_do_resume+0x23/0x140
         (XEN)    [<ffff82d0801e4fe7>] vmx_do_resume+0xa7/0x140
         (XEN)    [<ffff82d080164aeb>] context_switch+0x13b/0xe40
         (XEN)    [<ffff82d080128e6e>] schedule.c#schedule+0x22e/0x570
         (XEN)    [<ffff82d08012c0cc>] softirq.c#__do_softirq+0x5c/0x90
         (XEN)    [<ffff82d0801602c5>] domain.c#idle_loop+0x25/0x50
         (XEN)
         (XEN)
         (XEN) ****************************************
         (XEN) Panic on CPU 1:
         (XEN) GENERAL PROTECTION FAULT
         (XEN) [error_code=0000]
         (XEN) ****************************************
    
    Tracing my host KVM showed it was the one injecting the GP(0) when
    emulating the VMREAD and checking the destination segment permissions in
    get_vmx_mem_address():
    
         3)               |    vmx_handle_exit() {
         3)               |      handle_vmread() {
         3)               |        nested_vmx_check_permission() {
         3)               |          vmx_get_segment() {
         3)   0.074 us    |            vmx_read_guest_seg_base();
         3)   0.065 us    |            vmx_read_guest_seg_selector();
         3)   0.066 us    |            vmx_read_guest_seg_ar();
         3)   1.636 us    |          }
         3)   0.058 us    |          vmx_get_rflags();
         3)   0.062 us    |          vmx_read_guest_seg_ar();
         3)   3.469 us    |        }
         3)               |        vmx_get_cs_db_l_bits() {
         3)   0.058 us    |          vmx_read_guest_seg_ar();
         3)   0.662 us    |        }
         3)               |        get_vmx_mem_address() {
         3)   0.068 us    |          vmx_cache_reg();
         3)               |          vmx_get_segment() {
         3)   0.074 us    |            vmx_read_guest_seg_base();
         3)   0.068 us    |            vmx_read_guest_seg_selector();
         3)   0.071 us    |            vmx_read_guest_seg_ar();
         3)   1.756 us    |          }
         3)               |          kvm_queue_exception_e() {
         3)   0.066 us    |            kvm_multiple_exception();
         3)   0.684 us    |          }
         3)   4.085 us    |        }
         3)   9.833 us    |      }
         3) + 10.366 us   |    }
    
    Cross-checking the KVM/VMX VMREAD emulation code with the Intel Software
    Developper Manual Volume 3C - "VMREAD - Read Field from Virtual-Machine
    Control Structure", I found that we're enforcing that the destination
    operand is NOT located in a read-only data segment or any code segment when
    the L1 is in long mode - BUT that check should only happen when it is in
    protected mode.
    
    Shuffling the code a bit to make our emulation follow the specification
    allows me to boot a Xen dom0 in a nested KVM and start HVM L2 guests
    without problems.
    
    Fixes: f9eb4af67c9d ("KVM: nVMX: VMX instructions: add checks for #GP/#SS exceptions")
    Signed-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Eugene Korenevsky <ekorenevsky@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54f87e16e030edf64894c3062eeb43acb484d15c
Author: Xiubo Li <lixiubo@cmss.chinamobile.com>
Date:   Wed Jun 15 18:00:33 2016 +0800

    kvm: Fix irq route entries exceeding KVM_MAX_IRQ_ROUTES
    
    commit caf1ff26e1aa178133df68ac3d40815fed2187d9 upstream.
    
    These days, we experienced one guest crash with 8 cores and 3 disks,
    with qemu error logs as bellow:
    
    qemu-system-x86_64: /build/qemu-2.0.0/kvm-all.c:984:
    kvm_irqchip_commit_routes: Assertion `ret == 0' failed.
    
    And then we found one patch(bdf026317d) in qemu tree, which said
    could fix this bug.
    
    Execute the following script will reproduce the BUG quickly:
    
    irq_affinity.sh
    ========================================================================
    
    vda_irq_num=25
    vdb_irq_num=27
    while [ 1 ]
    do
        for irq in {1,2,4,8,10,20,40,80}
            do
                echo $irq > /proc/irq/$vda_irq_num/smp_affinity
                echo $irq > /proc/irq/$vdb_irq_num/smp_affinity
                dd if=/dev/vda of=/dev/zero bs=4K count=100 iflag=direct
                dd if=/dev/vdb of=/dev/zero bs=4K count=100 iflag=direct
            done
    done
    ========================================================================
    
    The following qemu log is added in the qemu code and is displayed when
    this bug reproduced:
    
    kvm_irqchip_commit_routes: max gsi: 1008, nr_allocated_irq_routes: 1024,
    irq_routes->nr: 1024, gsi_count: 1024.
    
    That's to say when irq_routes->nr == 1024, there are 1024 routing entries,
    but in the kernel code when routes->nr >= 1024, will just return -EINVAL;
    
    The nr is the number of the routing entries which is in of
    [1 ~ KVM_MAX_IRQ_ROUTES], not the index in [0 ~ KVM_MAX_IRQ_ROUTES - 1].
    
    This patch fix the BUG above.
    
    Signed-off-by: Xiubo Li <lixiubo@cmss.chinamobile.com>
    Signed-off-by: Wei Tang <tangwei@cmss.chinamobile.com>
    Signed-off-by: Zhang Zhuoyu <zhangzhuoyu@cmss.chinamobile.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 398051f2f66ef4658c89388441d0c697d50c325c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jun 16 15:48:57 2016 +0100

    KEYS: potential uninitialized variable
    
    commit 38327424b40bcebe2de92d07312c89360ac9229a upstream.
    
    If __key_link_begin() failed then "edit" would be uninitialized.  I've
    added a check to fix that.
    
    This allows a random user to crash the kernel, though it's quite
    difficult to achieve.  There are three ways it can be done as the user
    would have to cause an error to occur in __key_link():
    
     (1) Cause the kernel to run out of memory.  In practice, this is difficult
         to achieve without ENOMEM cropping up elsewhere and aborting the
         attempt.
    
     (2) Revoke the destination keyring between the keyring ID being looked up
         and it being tested for revocation.  In practice, this is difficult to
         time correctly because the KEYCTL_REJECT function can only be used
         from the request-key upcall process.  Further, users can only make use
         of what's in /sbin/request-key.conf, though this does including a
         rejection debugging test - which means that the destination keyring
         has to be the caller's session keyring in practice.
    
     (3) Have just enough key quota available to create a key, a new session
         keyring for the upcall and a link in the session keyring, but not then
         sufficient quota to create a link in the nominated destination keyring
         so that it fails with EDQUOT.
    
    The bug can be triggered using option (3) above using something like the
    following:
    
            echo 80 >/proc/sys/kernel/keys/root_maxbytes
            keyctl request2 user debug:fred negate @t
    
    The above sets the quota to something much lower (80) to make the bug
    easier to trigger, but this is dependent on the system.  Note also that
    the name of the keyring created contains a random number that may be
    between 1 and 10 characters in size, so may throw the test off by
    changing the amount of quota used.
    
    Assuming the failure occurs, something like the following will be seen:
    
            kfree_debugcheck: out of range ptr 6b6b6b6b6b6b6b68h
            ------------[ cut here ]------------
            kernel BUG at ../mm/slab.c:2821!
            ...
            RIP: 0010:[<ffffffff811600f9>] kfree_debugcheck+0x20/0x25
            RSP: 0018:ffff8804014a7de8  EFLAGS: 00010092
            RAX: 0000000000000034 RBX: 6b6b6b6b6b6b6b68 RCX: 0000000000000000
            RDX: 0000000000040001 RSI: 00000000000000f6 RDI: 0000000000000300
            RBP: ffff8804014a7df0 R08: 0000000000000001 R09: 0000000000000000
            R10: ffff8804014a7e68 R11: 0000000000000054 R12: 0000000000000202
            R13: ffffffff81318a66 R14: 0000000000000000 R15: 0000000000000001
            ...
            Call Trace:
              kfree+0xde/0x1bc
              assoc_array_cancel_edit+0x1f/0x36
              __key_link_end+0x55/0x63
              key_reject_and_link+0x124/0x155
              keyctl_reject_key+0xb6/0xe0
              keyctl_negate_key+0x10/0x12
              SyS_keyctl+0x9f/0xe7
              do_syscall_64+0x63/0x13a
              entry_SYSCALL64_slow_path+0x25/0x25
    
    Fixes: f70e2e06196a ('KEYS: Do preallocation for __key_link()')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb4d339f0ffdbe8b6b3aa57940c4a40f538a1887
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue Mar 15 11:36:43 2016 +0530

    ARCv2: LLSC: software backoff is NOT needed starting HS2.1c
    
    commit b31ac42697bef4a3aa5d0aa42375a55657f57174 upstream.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f06a5a019b1161da6f47bde5e7ce63e70193caec
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Jan 29 16:47:44 2016 +0530

    ARCv2: Check for LL-SC livelock only if LLSC is enabled
    
    commit 4d0cb15fccd1db9dac0c964b2ccf10874e69f5b8 upstream.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c458a866844793b040ef496b635b2816b6ce31a
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Tue Jul 5 12:10:23 2016 -0700

    ipv6: Fix mem leak in rt6i_pcpu
    
    [ Upstream commit 903ce4abdf374e3365d93bcb3df56c62008835ba ]
    
    It was first reported and reproduced by Petr (thanks!) in
    https://bugzilla.kernel.org/show_bug.cgi?id=119581
    
    free_percpu(rt->rt6i_pcpu) used to always happen in ip6_dst_destroy().
    
    However, after fixing a deadlock bug in
    commit 9c7370a166b4 ("ipv6: Fix a potential deadlock when creating pcpu rt"),
    free_percpu() is not called before setting non_pcpu_rt->rt6i_pcpu to NULL.
    
    It is worth to note that rt6i_pcpu is protected by table->tb6_lock.
    
    kmemleak somehow did not report it.  We nailed it down by
    observing the pcpu entries in /proc/vmallocinfo (first suggested
    by Hannes, thanks!).
    
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Fixes: 9c7370a166b4 ("ipv6: Fix a potential deadlock when creating pcpu rt")
    Reported-by: Petr Novopashenniy <pety@rusnet.ru>
    Tested-by: Petr Novopashenniy <pety@rusnet.ru>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Cc: Petr Novopashenniy <pety@rusnet.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61f602d84a60a09f8b7f2cec5e852673bd7b4ed9
Author: Bjørn Mork <bjorn@mork.no>
Date:   Sun Jul 3 22:24:50 2016 +0200

    cdc_ncm: workaround for EM7455 "silent" data interface
    
    [ Upstream commit c086e7096170390594c425114d98172bc9aceb8a ]
    
    Several Lenovo users have reported problems with their Sierra
    Wireless EM7455 modem. The driver has loaded successfully and
    the MBIM management channel has appeared to work, including
    establishing a connection to the mobile network. But no frames
    have been received over the data interface.
    
    The problem affects all EM7455 and MC7455, and is assumed to
    affect other modems based on the same Qualcomm chipset and
    baseband firmware.
    
    Testing narrowed the problem down to what seems to be a
    firmware timing bug during initialization. Adding a short sleep
    while probing is sufficient to make the problem disappear.
    Experiments have shown that 1-2 ms is too little to have any
    effect, while 10-20 ms is enough to reliably succeed.
    
    Reported-by: Stefan Armbruster <ml001@armbruster-it.de>
    Reported-by: Ralph Plawetzki <ralph@purejava.org>
    Reported-by: Andreas Fett <andreas.fett@secunet.com>
    Reported-by: Rasmus Lerdorf <rasmus@lerdorf.com>
    Reported-by: Samo Ratnik <samo.ratnik@gmail.com>
    Reported-and-tested-by: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2832302fc90bbf2d99a449481a9bb6ee1a5eacc7
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Jun 30 10:15:22 2016 -0700

    net_sched: fix mirrored packets checksum
    
    [ Upstream commit 82a31b9231f02d9c1b7b290a46999d517b0d312a ]
    
    Similar to commit 9b368814b336 ("net: fix bridge multicast packet checksum validation")
    we need to fixup the checksum for CHECKSUM_COMPLETE when
    pushing skb on RX path. Otherwise we get similar splats.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Tom Herbert <tom@herbertland.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 424848bd9895979e2758156ca99e317a3c2d5804
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Jul 1 16:07:50 2016 -0400

    packet: Use symmetric hash for PACKET_FANOUT_HASH.
    
    [ Upstream commit eb70db8756717b90c01ccc765fdefc4dd969fc74 ]
    
    People who use PACKET_FANOUT_HASH want a symmetric hash, meaning that
    they want packets going in both directions on a flow to hash to the
    same bucket.
    
    The core kernel SKB hash became non-symmetric when the ipv6 flow label
    and other entities were incorporated into the standard flow hash order
    to increase entropy.
    
    But there are no users of PACKET_FANOUT_HASH who want an assymetric
    hash, they all want a symmetric one.
    
    Therefore, use the flow dissector to compute a flat symmetric hash
    over only the protocol, addresses and ports.  This hash does not get
    installed into and override the normal skb hash, so this change has
    no effect whatsoever on the rest of the stack.
    
    Reported-by: Eric Leblond <eric@regit.org>
    Tested-by: Eric Leblond <eric@regit.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b1bfec0e2d57497718fd01f7151b2c78de99fc
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jun 16 10:50:40 2016 +0200

    sched/fair: Fix cfs_rq avg tracking underflow
    
    commit 8974189222159154c55f24ddad33e3613960521a upstream.
    
    As per commit:
    
      b7fa30c9cc48 ("sched/fair: Fix post_init_entity_util_avg() serialization")
    
    > the code generated from update_cfs_rq_load_avg():
    >
    >       if (atomic_long_read(&cfs_rq->removed_load_avg)) {
    >               s64 r = atomic_long_xchg(&cfs_rq->removed_load_avg, 0);
    >               sa->load_avg = max_t(long, sa->load_avg - r, 0);
    >               sa->load_sum = max_t(s64, sa->load_sum - r * LOAD_AVG_MAX, 0);
    >               removed_load = 1;
    >       }
    >
    > turns into:
    >
    > ffffffff81087064:       49 8b 85 98 00 00 00    mov    0x98(%r13),%rax
    > ffffffff8108706b:       48 85 c0                test   %rax,%rax
    > ffffffff8108706e:       74 40                   je     ffffffff810870b0 <update_blocked_averages+0xc0>
    > ffffffff81087070:       4c 89 f8                mov    %r15,%rax
    > ffffffff81087073:       49 87 85 98 00 00 00    xchg   %rax,0x98(%r13)
    > ffffffff8108707a:       49 29 45 70             sub    %rax,0x70(%r13)
    > ffffffff8108707e:       4c 89 f9                mov    %r15,%rcx
    > ffffffff81087081:       bb 01 00 00 00          mov    $0x1,%ebx
    > ffffffff81087086:       49 83 7d 70 00          cmpq   $0x0,0x70(%r13)
    > ffffffff8108708b:       49 0f 49 4d 70          cmovns 0x70(%r13),%rcx
    >
    > Which you'll note ends up with sa->load_avg -= r in memory at
    > ffffffff8108707a.
    
    So I _should_ have looked at other unserialized users of ->load_avg,
    but alas. Luckily nikbor reported a similar /0 from task_h_load() which
    instantly triggered recollection of this here problem.
    
    Aside from the intermediate value hitting memory and causing problems,
    there's another problem: the underflow detection relies on the signed
    bit. This reduces the effective width of the variables, IOW its
    effectively the same as having these variables be of signed type.
    
    This patch changes to a different means of unsigned underflow
    detection to not rely on the signed bit. This allows the variables to
    use the 'full' unsigned range. And it does so with explicit LOAD -
    STORE to ensure any intermediate value will never be visible in
    memory, allowing these unserialized loads.
    
    Note: GCC generates crap code for this, might warrant a look later.
    
    Note2: I say 'full' above, if we end up at U*_MAX we'll still explode;
           maybe we should do clamping on add too.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yuyang Du <yuyang.du@intel.com>
    Cc: bsegall@google.com
    Cc: kernel@kyup.com
    Cc: morten.rasmussen@arm.com
    Cc: pjt@google.com
    Cc: steve.muckle@linaro.org
    Fixes: 9d89c257dfb9 ("sched/fair: Rewrite runnable load and utilization average tracking")
    Link: http://lkml.kernel.org/r/20160617091948.GJ30927@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e1f4ff765cb0cd011f30ed11a4ef18903329013
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Jun 16 23:26:15 2016 +0200

    UBIFS: Implement ->migratepage()
    
    commit 4ac1c17b2044a1b4b2fbed74451947e905fc2992 upstream.
    
    During page migrations UBIFS might get confused
    and the following assert triggers:
    [  213.480000] UBIFS assert failed in ubifs_set_page_dirty at 1451 (pid 436)
    [  213.490000] CPU: 0 PID: 436 Comm: drm-stress-test Not tainted 4.4.4-00176-geaa802524636-dirty #1008
    [  213.490000] Hardware name: Allwinner sun4i/sun5i Families
    [  213.490000] [<c0015e70>] (unwind_backtrace) from [<c0012cdc>] (show_stack+0x10/0x14)
    [  213.490000] [<c0012cdc>] (show_stack) from [<c02ad834>] (dump_stack+0x8c/0xa0)
    [  213.490000] [<c02ad834>] (dump_stack) from [<c0236ee8>] (ubifs_set_page_dirty+0x44/0x50)
    [  213.490000] [<c0236ee8>] (ubifs_set_page_dirty) from [<c00fa0bc>] (try_to_unmap_one+0x10c/0x3a8)
    [  213.490000] [<c00fa0bc>] (try_to_unmap_one) from [<c00fadb4>] (rmap_walk+0xb4/0x290)
    [  213.490000] [<c00fadb4>] (rmap_walk) from [<c00fb1bc>] (try_to_unmap+0x64/0x80)
    [  213.490000] [<c00fb1bc>] (try_to_unmap) from [<c010dc28>] (migrate_pages+0x328/0x7a0)
    [  213.490000] [<c010dc28>] (migrate_pages) from [<c00d0cb0>] (alloc_contig_range+0x168/0x2f4)
    [  213.490000] [<c00d0cb0>] (alloc_contig_range) from [<c010ec00>] (cma_alloc+0x170/0x2c0)
    [  213.490000] [<c010ec00>] (cma_alloc) from [<c001a958>] (__alloc_from_contiguous+0x38/0xd8)
    [  213.490000] [<c001a958>] (__alloc_from_contiguous) from [<c001ad44>] (__dma_alloc+0x23c/0x274)
    [  213.490000] [<c001ad44>] (__dma_alloc) from [<c001ae08>] (arm_dma_alloc+0x54/0x5c)
    [  213.490000] [<c001ae08>] (arm_dma_alloc) from [<c035cecc>] (drm_gem_cma_create+0xb8/0xf0)
    [  213.490000] [<c035cecc>] (drm_gem_cma_create) from [<c035cf20>] (drm_gem_cma_create_with_handle+0x1c/0xe8)
    [  213.490000] [<c035cf20>] (drm_gem_cma_create_with_handle) from [<c035d088>] (drm_gem_cma_dumb_create+0x3c/0x48)
    [  213.490000] [<c035d088>] (drm_gem_cma_dumb_create) from [<c0341ed8>] (drm_ioctl+0x12c/0x444)
    [  213.490000] [<c0341ed8>] (drm_ioctl) from [<c0121adc>] (do_vfs_ioctl+0x3f4/0x614)
    [  213.490000] [<c0121adc>] (do_vfs_ioctl) from [<c0121d30>] (SyS_ioctl+0x34/0x5c)
    [  213.490000] [<c0121d30>] (SyS_ioctl) from [<c000f2c0>] (ret_fast_syscall+0x0/0x34)
    
    UBIFS is using PagePrivate() which can have different meanings across
    filesystems. Therefore the generic page migration code cannot handle this
    case correctly.
    We have to implement our own migration function which basically does a
    plain copy but also duplicates the page private flag.
    UBIFS is not a block device filesystem and cannot use buffer_migrate_page().
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    [rw: Massaged changelog, build fixes, etc...]
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b1cb3c89efdafbb6a2459c3193107c2a058bedc
Author: Richard Weinberger <richard@nod.at>
Date:   Thu Jun 16 23:26:14 2016 +0200

    mm: Export migrate_page_move_mapping and migrate_page_copy
    
    commit 1118dce773d84f39ebd51a9fe7261f9169cb056e upstream.
    
    Export these symbols such that UBIFS can implement
    ->migratepage.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad26023ffea7669e0c23a44084e5ce41c4b54d7
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Jun 9 10:50:43 2016 +0100

    MIPS: KVM: Fix modular KVM under QEMU
    
    commit 797179bc4fe06c89e47a9f36f886f68640b423f8 upstream.
    
    Copy __kvm_mips_vcpu_run() into unmapped memory, so that we can never
    get a TLB refill exception in it when KVM is built as a module.
    
    This was observed to happen with the host MIPS kernel running under
    QEMU, due to a not entirely transparent optimisation in the QEMU TLB
    handling where TLB entries replaced with TLBWR are copied to a separate
    part of the TLB array. Code in those pages continue to be executable,
    but those mappings persist only until the next ASID switch, even if they
    are marked global.
    
    An ASID switch happens in __kvm_mips_vcpu_run() at exception level after
    switching to the guest exception base. Subsequent TLB mapped kernel
    instructions just prior to switching to the guest trigger a TLB refill
    exception, which enters the guest exception handlers without updating
    EPC. This appears as a guest triggered TLB refill on a host kernel
    mapped (host KSeg2) address, which is not handled correctly as user
    (guest) mode accesses to kernel (host) segments always generate address
    error exceptions.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: kvm@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 490a71c5feec87292126f5b5587d155f89fb2bd4
Author: Steve Capper <steve.capper@arm.com>
Date:   Tue Jun 7 17:58:06 2016 +0100

    ARM: 8579/1: mm: Fix definition of pmd_mknotpresent
    
    commit 56530f5d2ddc9b9fade7ef8db9cb886e9dc689b5 upstream.
    
    Currently pmd_mknotpresent will use a zero entry to respresent an
    invalidated pmd.
    
    Unfortunately this definition clashes with pmd_none, thus it is
    possible for a race condition to occur if zap_pmd_range sees pmd_none
    whilst __split_huge_pmd_locked is running too with pmdp_invalidate
    just called.
    
    This patch fixes the race condition by modifying pmd_mknotpresent to
    create non-zero faulting entries (as is done in other architectures),
    removing the ambiguity with pmd_none.
    
    [catalin.marinas@arm.com: using L_PMD_SECT_VALID instead of PMD_TYPE_SECT]
    
    Fixes: 8d9625070073 ("ARM: mm: Transparent huge page support for LPAE systems.")
    Reported-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54cf0dde4611d80703a7e184f17740169354b53d
Author: Will Deacon <will@kernel.org>
Date:   Tue Jun 7 17:57:54 2016 +0100

    ARM: 8578/1: mm: ensure pmd_present only checks the valid bit
    
    commit 624531886987f0f1b5d01fb598034d039198e090 upstream.
    
    In a subsequent patch, pmd_mknotpresent will clear the valid bit of the
    pmd entry, resulting in a not-present entry from the hardware's
    perspective. Unfortunately, pmd_present simply checks for a non-zero pmd
    value and will therefore continue to return true even after a
    pmd_mknotpresent operation. Since pmd_mknotpresent is only used for
    managing huge entries, this is only an issue for the 3-level case.
    
    This patch fixes the 3-level pmd_present implementation to take into
    account the valid bit. For bisectability, the change is made before the
    fix to pmd_mknotpresent.
    
    [catalin.marinas@arm.com: comment update regarding pmd_mknotpresent patch]
    
    Fixes: 8d9625070073 ("ARM: mm: Transparent huge page support for LPAE systems.")
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Steve Capper <Steve.Capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91ac7387fb451a7cac3ee10f846fac8da471a256
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Wed May 11 16:39:30 2016 -0300

    ARM: imx6ul: Fix Micrel PHY mask
    
    commit 20c15226d1c73150c4d9107301cac5dda0b7f995 upstream.
    
    The value used for Micrel PHY mask is not correct. Use the
    MICREL_PHY_ID_MASK definition instead.
    
    Thanks to Jiri Luznicky for proposing the fix at
    https://community.freescale.com/thread/387739
    
    Fixes: 709bc0657fe6f9f55 ("ARM: imx6ul: add fec MAC refrence clock and phy fixup init")
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5d4a793312969e4dcb0156d4a29bb5f2f5c15f0
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Sat Jun 25 19:19:28 2016 -0400

    NFS: Fix another OPEN_DOWNGRADE bug
    
    commit e547f2628327fec6afd2e03b46f113f614cca05b upstream.
    
    Olga Kornievskaia reports that the following test fails to trigger
    an OPEN_DOWNGRADE on the wire, and only triggers the final CLOSE.
    
            fd0 = open(foo, RDRW)   -- should be open on the wire for "both"
            fd1 = open(foo, RDONLY)  -- should be open on the wire for "read"
            close(fd0) -- should trigger an open_downgrade
            read(fd1)
            close(fd1)
    
    The issue is that we're missing a check for whether or not the current
    state transitioned from an O_RDWR state as opposed to having transitioned
    from a combination of O_RDONLY and O_WRONLY.
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Fixes: cd9288ffaea4 ("NFSv4: Fix another bug in the close/open_downgrade code")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44d86dbf9af1f5d328057eb1137265231da17540
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Mon Jun 20 13:14:36 2016 -0400

    make nfs_atomic_open() call d_drop() on all ->open_context() errors.
    
    commit d20cb71dbf3487f24549ede1a8e2d67579b4632e upstream.
    
    In "NFSv4: Move dentry instantiation into the NFSv4-specific atomic open code"
    unconditional d_drop() after the ->open_context() had been removed.  It had
    been correct for success cases (there ->open_context() itself had been doing
    dcache manipulations), but not for error ones.  Only one of those (ENOENT)
    got a compensatory d_drop() added in that commit, but in fact it should've
    been done for all errors.  As it is, the case of O_CREAT non-exclusive open
    on a hashed negative dentry racing with e.g. symlink creation from another
    client ended up with ->open_context() getting an error and proceeding to
    call nfs_lookup().  On a hashed dentry, which would've instantly triggered
    BUG_ON() in d_materialise_unique() (or, these days, its equivalent in
    d_splice_alias()).
    
    Tested-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 412cfeec2f4851f266b20a12b3a81dcef94cb979
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Jun 22 19:43:35 2016 +0100

    nfsd: check permissions when setting ACLs
    
    commit 999653786df6954a31044528ac3f7a5dadca08f4 upstream.
    
    Use set_posix_acl, which includes proper permission checks, instead of
    calling ->set_acl directly.  Without this anyone may be able to grant
    themselves permissions to a file by setting the ACL.
    
    Lock the inode to make the new checks atomic with respect to set_acl.
    (Also, nfsd was the only caller of set_acl not locking the inode, so I
    suspect this may fix other races.)
    
    This also simplifies the code, and ensures our ACLs are checked by
    posix_acl_valid.
    
    The permission checks and the inode locking were lost with commit
    4ac7249e, which changed nfsd to use the set_acl inode operation directly
    instead of going through xattr handlers.
    
    Reported-by: David Sinquin <david@sinquin.eu>
    [agreunba@redhat.com: use set_posix_acl]
    Fixes: 4ac7249e
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3fa141c1f288ac785c82ead9d06d1b5acd76d60
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Wed Jun 22 23:57:25 2016 +0200

    posix_acl: Add set_posix_acl
    
    commit 485e71e8fb6356c08c7fc6bcce4bf02c9a9a663f upstream.
    
    Factor out part of posix_acl_xattr_set into a common function that takes
    a posix_acl, which nfsd can also call.
    
    The prototype already exists in include/linux/posix_acl.h.
    
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f78ffdc2bb3c88792636f14d732cc1fce4073685
Author: Oleg Drokin <green@linuxhacker.ru>
Date:   Tue Jun 14 23:28:05 2016 -0400

    nfsd: Extend the mutex holding region around in nfsd4_process_open2()
    
    commit 5cc1fb2a093e254b656c64ff24b0b76bed1d34d9 upstream.
    
    To avoid racing entry into nfs4_get_vfs_file().
    Make init_open_stateid() return with locked stateid to be unlocked
    by the caller.
    
    Signed-off-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 087f8fe0074874a6072bdabbdf6dad03e0fbba2a
Author: Oleg Drokin <green@linuxhacker.ru>
Date:   Tue Jun 14 23:28:04 2016 -0400

    nfsd: Always lock state exclusively.
    
    commit feb9dad5209280085d5b0c094fa67e7a8d75c81a upstream.
    
    It used to be the case that state had an rwlock that was locked for write
    by downgrades, but for read for upgrades (opens). Well, the problem is
    if there are two competing opens for the same state, they step on
    each other toes potentially leading to leaking file descriptors
    from the state structure, since access mode is a bitmap only set once.
    
    Signed-off-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58e9e70ab997977776ab7b2d6b6ca3d8802d52b4
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Mon May 16 17:03:42 2016 -0400

    nfsd4/rpc: move backchannel create logic into rpc code
    
    commit d50039ea5ee63c589b0434baa5ecf6e5075bb6f9 upstream.
    
    Also simplify the logic a bit.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Acked-by: Trond Myklebust <trondmy@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 400850bd980554801a61737c43f47817adeaa5f5
Author: Tejun Heo <tj@kernel.org>
Date:   Fri May 27 14:34:46 2016 -0400

    writeback: use higher precision calculation in domain_dirty_limits()
    
    commit 62a584fe05eef1f80ed49a286a29328f1a224fb9 upstream.
    
    As vm.dirty_[background_]bytes can't be applied verbatim to multiple
    cgroup writeback domains, they get converted to percentages in
    domain_dirty_limits() and applied the same way as
    vm.dirty_[background]ratio.  However, if the specified bytes is lower
    than 1% of available memory, the calculated ratios become zero and the
    writeback domain gets throttled constantly.
    
    Fix it by using per-PAGE_SIZE instead of percentage for ratio
    calculations.  Also, the updated DIV_ROUND_UP() usages now should
    yield 1/4096 (0.0244%) as the minimum ratio as long as the specified
    bytes are above zero.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Miao Xie <miaoxie@huawei.com>
    Link: http://lkml.kernel.org/g/57333E75.3080309@huawei.com
    Fixes: 9fc3a43e1757 ("writeback: separate out domain_dirty_limits()")
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Adjusted comment based on Jan's suggestion.
    Signed-off-by: Jens Axboe <axboe@fb.com>

commit a519bfe6aeccf9a3555d76b30f9fdefa5b261c0c
Author: Lukasz Luba <lukasz.luba@arm.com>
Date:   Tue May 31 11:32:02 2016 +0100

    thermal: cpu_cooling: fix improper order during initialization
    
    commit f840ab18bdf2e415dac21d09fbbbd2873111bd48 upstream.
    
    The freq_table array is not populated before calling
    thermal_of_cooling_register. The code which populates the freq table was
    introduced in commit f6859014.
    This should be done before registering new thermal cooling device.
    The log shows effects of this wrong decision.
    [    2.172614] cpu cpu1: Failed to get voltage for frequency 1984518656000: -34
    [    2.220863] cpu cpu0: Failed to get voltage for frequency 1984524416000: -34
    
    Fixes: f6859014c7e7 ("thermal: cpu_cooling: Store frequencies in descending order")
    Signed-off-by: Lukasz Luba <lukasz.luba@arm.com>
    Acked-by: Javi Merino <javi.merino@arm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f77ea5cab24b87702240533e92da785ad121b986
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue May 24 15:13:02 2016 -0700

    uvc: Forward compat ioctls to their handlers directly
    
    commit a44323e2a8f342848bb77e8e04fcd85fcb91b3b4 upstream.
    
    The current code goes through a lot of indirection just to call a
    known handler.  Simplify it: just call the handlers directly.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93f25db7b827aa7c6910a19b52455969b5d149ed
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Jul 3 18:32:05 2016 +0200

    Revert "gpiolib: Split GPIO flags parsing and GPIO configuration"
    
    commit 85b03b3033fd4eba82665b3b9902c095a08cc52f upstream.
    
    This reverts commit 923b93e451db876d1479d3e4458fce14fec31d1c.
    
    Make sure consumers do not overwrite gpio flags for pins that have
    already been claimed.
    
    While adding support for gpio drivers to refuse a request using
    unsupported flags, the order of when the requested flag was checked and
    the new flags were applied was reversed to that consumers could
    overwrite flags for already requested gpios.
    
    This not only affects device-tree setups where two drivers could request
    the same gpio using conflicting configurations, but also allowed user
    space to clear gpio flags for already claimed pins simply by attempting
    to export them through the sysfs interface. By for example clearing the
    FLAG_ACTIVE_LOW flag this way, user space could effectively change the
    polarity of a signal.
    
    Reverting this change obviously prevents gpio drivers from doing sanity
    checks on the flags in their request callbacks. Fortunately only one
    recently added driver (gpio-tps65218 in v4.6) appears to do this, and a
    follow up patch could restore this functionality through a different
    interface.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9c5952f0aa481d0b703e05dd1ba6eca374d2dbc
Author: Borislav Petkov <bp@suse.de>
Date:   Thu Jun 16 19:13:49 2016 +0200

    x86/amd_nb: Fix boot crash on non-AMD systems
    
    commit 1ead852dd88779eda12cb09cc894a03d9abfe1ec upstream.
    
    Fix boot crash that triggers if this driver is built into a kernel and
    run on non-AMD systems.
    
    AMD northbridges users call amd_cache_northbridges() and it returns
    a negative value to signal that we weren't able to cache/detect any
    northbridges on the system.
    
    At least, it should do so as all its callers expect it to do so. But it
    does return a negative value only when kmalloc() fails.
    
    Fix it to return -ENODEV if there are no NBs cached as otherwise, amd_nb
    users like amd64_edac, for example, which relies on it to know whether
    it should load or not, gets loaded on systems like Intel Xeons where it
    shouldn't.
    
    Reported-and-tested-by: Tony Battersby <tonyb@cybernetics.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1466097230-5333-2-git-send-email-bp@alien8.de
    Link: https://lkml.kernel.org/r/5761BEB0.9000807@cybernetics.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66af3f62b66863562c6ecb1ba4dbf29ccd38dd95
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Jun 11 23:06:53 2016 +0900

    kprobes/x86: Clear TF bit in fault on single-stepping
    
    commit dcfc47248d3f7d28df6f531e6426b933de94370d upstream.
    
    Fix kprobe_fault_handler() to clear the TF (trap flag) bit of
    the flags register in the case of a fault fixup on single-stepping.
    
    If we put a kprobe on the instruction which caused a
    page fault (e.g. actual mov instructions in copy_user_*),
    that fault happens on the single-stepping buffer. In this
    case, kprobes resets running instance so that the CPU can
    retry execution on the original ip address.
    
    However, current code forgets to reset the TF bit. Since this
    fault happens with TF bit set for enabling single-stepping,
    when it retries, it causes a debug exception and kprobes
    can not handle it because it already reset itself.
    
    On the most of x86-64 platform, it can be easily reproduced
    by using kprobe tracer. E.g.
    
      # cd /sys/kernel/debug/tracing
      # echo p copy_user_enhanced_fast_string+5 > kprobe_events
      # echo 1 > events/kprobes/enable
    
    And you'll see a kernel panic on do_debug(), since the debug
    trap is not handled by kprobes.
    
    To fix this problem, we just need to clear the TF bit when
    resetting running kprobe.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: systemtap@sourceware.org
    Link: http://lkml.kernel.org/r/20160611140648.25885.37482.stgit@devbox
    [ Updated the comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7acd40ebc42783ccaba93c18af89aa6ff65f1c9
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Tue Apr 5 17:01:33 2016 -0700

    x86, build: copy ldlinux.c32 to image.iso
    
    commit 9c77679cadb118c0aa99e6f88533d91765a131ba upstream.
    
    For newer versions of Syslinux, we need ldlinux.c32 in addition to
    isolinux.bin to reside on the boot disk, so if the latter is found,
    copy it, too, to the isoimage tree.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71ef2c1131e7c380fa3a3ff2d5040b057c77fbc0
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jun 21 18:52:17 2016 +0200

    locking/static_key: Fix concurrent static_key_slow_inc()
    
    commit 4c5ea0a9cd02d6aa8adc86e100b2a4cff8d614ff upstream.
    
    The following scenario is possible:
    
        CPU 1                                   CPU 2
        static_key_slow_inc()
         atomic_inc_not_zero()
          -> key.enabled == 0, no increment
         jump_label_lock()
         atomic_inc_return()
          -> key.enabled == 1 now
                                                static_key_slow_inc()
                                                 atomic_inc_not_zero()
                                                  -> key.enabled == 1, inc to 2
                                                 return
                                                ** static key is wrong!
         jump_label_update()
         jump_label_unlock()
    
    Testing the static key at the point marked by (**) will follow the
    wrong path for jumps that have not been patched yet.  This can
    actually happen when creating many KVM virtual machines with userspace
    LAPIC emulation; just run several copies of the following program:
    
        #include <fcntl.h>
        #include <unistd.h>
        #include <sys/ioctl.h>
        #include <linux/kvm.h>
    
        int main(void)
        {
            for (;;) {
                int kvmfd = open("/dev/kvm", O_RDONLY);
                int vmfd = ioctl(kvmfd, KVM_CREATE_VM, 0);
                close(ioctl(vmfd, KVM_CREATE_VCPU, 1));
                close(vmfd);
                close(kvmfd);
            }
            return 0;
        }
    
    Every KVM_CREATE_VCPU ioctl will attempt a static_key_slow_inc() call.
    The static key's purpose is to skip NULL pointer checks and indeed one
    of the processes eventually dereferences NULL.
    
    As explained in the commit that introduced the bug:
    
      706249c222f6 ("locking/static_keys: Rework update logic")
    
    jump_label_update() needs key.enabled to be true.  The solution adopted
    here is to temporarily make key.enabled == -1, and use go down the
    slow path when key.enabled <= 0.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 706249c222f6 ("locking/static_keys: Rework update logic")
    Link: http://lkml.kernel.org/r/1466527937-69798-1-git-send-email-pbonzini@redhat.com
    [ Small stylistic edits to the changelog and the code. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a39e660a55e8ce5ae35a7694835ad464b72666ca
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jun 8 10:19:51 2016 +0200

    locking/qspinlock: Fix spin_unlock_wait() some more
    
    commit 2c610022711675ee908b903d242f0b90e1db661f upstream.
    
    While this prior commit:
    
      54cf809b9512 ("locking,qspinlock: Fix spin_is_locked() and spin_unlock_wait()")
    
    ... fixes spin_is_locked() and spin_unlock_wait() for the usage
    in ipc/sem and netfilter, it does not in fact work right for the
    usage in task_work and futex.
    
    So while the 2 locks crossed problem:
    
            spin_lock(A)            spin_lock(B)
            if (!spin_is_locked(B)) spin_unlock_wait(A)
              foo()                 foo();
    
    ... works with the smp_mb() injected by both spin_is_locked() and
    spin_unlock_wait(), this is not sufficient for:
    
            flag = 1;
            smp_mb();               spin_lock()
            spin_unlock_wait()      if (!flag)
                                      // add to lockless list
            // iterate lockless list
    
    ... because in this scenario, the store from spin_lock() can be delayed
    past the load of flag, uncrossing the variables and loosing the
    guarantee.
    
    This patch reworks spin_is_locked() and spin_unlock_wait() to work in
    both cases by exploiting the observation that while the lock byte
    store can be delayed, the contender must have registered itself
    visibly in other state contained in the word.
    
    It also allows for architectures to override both functions, as PPC
    and ARM64 have an additional issue for which we currently have no
    generic solution.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Boqun Feng <boqun.feng@gmail.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Giovanni Gherdovich <ggherdovich@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pan Xinhui <xinhui.pan@linux.vnet.ibm.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Waiman Long <waiman.long@hpe.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Fixes: 54cf809b9512 ("locking,qspinlock: Fix spin_is_locked() and spin_unlock_wait()")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7f47e59c31ddf80f239541ffb242d70210b36fb
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu May 26 21:08:17 2016 +0100

    locking/ww_mutex: Report recursive ww_mutex locking early
    
    commit 0422e83d84ae24b933e4b0d4c1e0f0b4ae8a0a3b upstream.
    
    Recursive locking for ww_mutexes was originally conceived as an
    exception. However, it is heavily used by the DRM atomic modesetting
    code. Currently, the recursive deadlock is checked after we have queued
    up for a busy-spin and as we never release the lock, we spin until
    kicked, whereupon the deadlock is discovered and reported.
    
    A simple solution for the now common problem is to move the recursive
    deadlock discovery to the first action when taking the ww_mutex.
    
    Suggested-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1464293297-19777-1-git-send-email-chris@chris-wilson.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5f2e833575b3ad7ab59a90d66d7f1a73e7afad1
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat May 28 23:02:50 2016 +0300

    of: irq: fix of_irq_get[_byname]() kernel-doc
    
    commit 3993546646baf1dab5f5c4f7d9bb58f2046fd1c1 upstream.
    
    The kernel-doc for the of_irq_get[_byname]()  is clearly inadequate in
    describing the return values -- of_irq_get_byname() is documented better
    than of_irq_get() but it  still doesn't mention that 0 is returned iff
    irq_create_of_mapping() fails (it doesn't return an error code in this
    case). Document all possible return value variants, making the writing
    of the word "IRQ" consistent, while at it...
    
    Fixes: 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    Fixes: ad69674e73a1 ("of/irq: do irq resolution in platform_get_irq_byname()")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d58954bafd97a3e3a99250cd8471e45521c0023
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Mon Jun 6 18:48:38 2016 +0200

    of: fix autoloading due to broken modalias with no 'compatible'
    
    commit b3c0a4dab7e35a9b6d69c0415641d2280fdefb2b upstream.
    
    Because of an improper dereference, a stray 'C' character was output to
    the modalias when no 'compatible' was specified. This is the case for
    some old PowerMac drivers which only set the 'name' property. Fix it to
    let them match again.
    
    Reported-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Tested-by: Mathieu Malaterre <malat@debian.org>
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: Andreas Schwab <schwab@linux-m68k.org>
    Fixes: 6543becf26fff6 ("mod/file2alias: make modalias generation safe for cross compiling")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a400a79321cdaf6cebf74666f975d6c8a3ee995f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Jun 6 15:36:07 2016 -0500

    mnt: If fs_fully_visible fails call put_filesystem.
    
    commit 97c1df3e54e811aed484a036a798b4b25d002ecf upstream.
    
    Add this trivial missing error handling.
    
    Fixes: 1b852bceb0d1 ("mnt: Refactor the logic for mounting sysfs and proc in a user namespace")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6256d2f541fc893083ebebb1369ff41803f6b129
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Jun 10 12:21:40 2016 -0500

    mnt: Account for MS_RDONLY in fs_fully_visible
    
    commit 695e9df010e40f407f4830dc11d53dce957710ba upstream.
    
    In rare cases it is possible for s_flags & MS_RDONLY to be set but
    MNT_READONLY to be clear.  This starting combination can cause
    fs_fully_visible to fail to ensure that the new mount is readonly.
    Therefore force MNT_LOCK_READONLY in the new mount if MS_RDONLY
    is set on the source filesystem of the mount.
    
    In general both MS_RDONLY and MNT_READONLY are set at the same for
    mounts so I don't expect any programs to care.  Nor do I expect
    MS_RDONLY to be set on proc or sysfs in the initial user namespace,
    which further decreases the likelyhood of problems.
    
    Which means this change should only affect system configurations by
    paranoid sysadmins who should welcome the additional protection
    as it keeps people from wriggling out of their policies.
    
    Fixes: 8c6cf9cc829f ("mnt: Modify fs_fully_visible to deal with locked ro nodev and atime")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57eb6e3dbdd3389a4325b8d5a42203591f64153d
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri May 27 14:50:05 2016 -0500

    mnt: fs_fully_visible test the proper mount for MNT_LOCKED
    
    commit d71ed6c930ac7d8f88f3cef6624a7e826392d61f upstream.
    
    MNT_LOCKED implies on a child mount implies the child is locked to the
    parent.  So while looping through the children the children should be
    tested (not their parent).
    
    Typically an unshare of a mount namespace locks all mounts together
    making both the parent and the slave as locked but there are a few
    corner cases where other things work.
    
    Fixes: ceeb0e5d39fc ("vfs: Ignore unlocked mounts in fs_fully_visible")
    Reported-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67799eb4ab84ce94c44346af672246dc90c1a8ad
Author: Oscar <oscar@naiandei.net>
Date:   Tue Jun 14 14:14:35 2016 +0800

    usb: common: otg-fsm: add license to usb-otg-fsm
    
    commit ea1d39a31d3b1b6060b6e83e5a29c069a124c68a upstream.
    
    Fix warning about tainted kernel because usb-otg-fsm has no license.
    WARNING: with this patch usb-otg-fsm module can be loaded
    but then the kernel will hang. Tested with a udoo quad board.
    
    Signed-off-by: Oscar <oscar@naiandei.net>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7577b85419cd0e17604c7bfd42120f26ef729da0
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Jun 23 14:54:37 2016 -0400

    USB: EHCI: declare hostpc register as zero-length array
    
    commit 7e8b3dfef16375dbfeb1f36a83eb9f27117c51fd upstream.
    
    The HOSTPC extension registers found in some EHCI implementations form
    a variable-length array, with one element for each port.  Therefore
    the hostpc field in struct ehci_regs should be declared as a
    zero-length array, not a single-element array.
    
    This fixes a problem reported by UBSAN.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    Tested-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b74d56f6a37ffa0397a8bdd8b5c1eb840ab90f3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri May 13 15:52:27 2016 +0200

    usb: dwc2: fix regression on big-endian PowerPC/ARM systems
    
    commit 23e3439296a55affce3ef0ab78f1c2e03aec8767 upstream.
    
    A patch that went into Linux-4.4 to fix big-endian mode on a Lantiq
    MIPS system unfortunately broke big-endian operation on PowerPC
    APM82181 as reported by Christian Lamparter, and likely other
    systems.
    
    It actually introduced multiple issues:
    
    - it broke big-endian ARM kernels: any machine that was working
      correctly with a little-endian kernel is no longer using byteswaps
      on big-endian kernels, which clearly breaks them.
    - On PowerPC the same thing must be true: if it was working before,
      using big-endian kernels is now broken. Unlike ARM, 32-bit PowerPC
      usually uses big-endian kernels, so they are likely all broken.
    - The barrier for dwc2_writel is on the wrong side of the __raw_writel(),
      so the MMIO no longer synchronizes with DMA operations.
    - On architectures that require specific CPU instructions for MMIO
      access, using the __raw_ variant may turn this into a pointer
      dereference that does not have the same effect as the readl/writel.
    
    This patch is a simple revert for all architectures other than MIPS,
    in the hope that we can more easily backport it to fix the regression
    on PowerPC and ARM systems without breaking the Lantiq system again.
    
    We should follow this up with a more elaborate change to add runtime
    detection of endianness, to make sure it also works on all other
    combinations of architectures and implementations of the usb-dwc2
    device. That patch however will be fairly large and not appropriate
    for backports to stable kernels.
    
    Felipe suggested a different approach, using an endianness switching
    register to always put the device into LE mode, but unfortunately
    the dwc2 hardware does not provide a generic way to do that. Also,
    I see no practical way of addressing the problem more generally by
    patching architecture specific code on MIPS.
    
    Fixes: 95c8bc360944 ("usb: dwc2: Use platform endianness when accessing registers")
    Acked-by: John Youn <johnyoun@synopsys.com>
    Tested-by: Christian Lamparter <chunkeey@googlemail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a35d2f92f1011145315f86a481f4f3e3f853095
Author: Cyril Bur <cyrilbur@gmail.com>
Date:   Fri Jun 17 14:58:34 2016 +1000

    powerpc/tm: Always reclaim in start_thread() for exec() class syscalls
    
    commit 8e96a87c5431c256feb65bcfc5aec92d9f7839b6 upstream.
    
    Userspace can quite legitimately perform an exec() syscall with a
    suspended transaction. exec() does not return to the old process, rather
    it load a new one and starts that, the expectation therefore is that the
    new process starts not in a transaction. Currently exec() is not treated
    any differently to any other syscall which creates problems.
    
    Firstly it could allow a new process to start with a suspended
    transaction for a binary that no longer exists. This means that the
    checkpointed state won't be valid and if the suspended transaction were
    ever to be resumed and subsequently aborted (a possibility which is
    exceedingly likely as exec()ing will likely doom the transaction) the
    new process will jump to invalid state.
    
    Secondly the incorrect attempt to keep the transactional state while
    still zeroing state for the new process creates at least two TM Bad
    Things. The first triggers on the rfid to return to userspace as
    start_thread() has given the new process a 'clean' MSR but the suspend
    will still be set in the hardware MSR. The second TM Bad Thing triggers
    in __switch_to() as the processor is still transactionally suspended but
    __switch_to() wants to zero the TM sprs for the new process.
    
    This is an example of the outcome of calling exec() with a suspended
    transaction. Note the first 700 is likely the first TM bad thing
    decsribed earlier only the kernel can't report it as we've loaded
    userspace registers. c000000000009980 is the rfid in
    fast_exception_return()
    
      Bad kernel stack pointer 3fffcfa1a370 at c000000000009980
      Oops: Bad kernel stack pointer, sig: 6 [#1]
      CPU: 0 PID: 2006 Comm: tm-execed Not tainted
      NIP: c000000000009980 LR: 0000000000000000 CTR: 0000000000000000
      REGS: c00000003ffefd40 TRAP: 0700   Not tainted
      MSR: 8000000300201031 <SF,ME,IR,DR,LE,TM[SE]>  CR: 00000000  XER: 00000000
      CFAR: c0000000000098b4 SOFTE: 0
      PACATMSCRATCH: b00000010000d033
      GPR00: 0000000000000000 00003fffcfa1a370 0000000000000000 0000000000000000
      GPR04: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR08: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR12: 00003fff966611c0 0000000000000000 0000000000000000 0000000000000000
      NIP [c000000000009980] fast_exception_return+0xb0/0xb8
      LR [0000000000000000]           (null)
      Call Trace:
      Instruction dump:
      f84d0278 e9a100d8 7c7b03a6 e84101a0 7c4ff120 e8410170 7c5a03a6 e8010070
      e8410080 e8610088 e8810090 e8210078 <4c000024> 48000000 e8610178 88ed023b
    
      Kernel BUG at c000000000043e80 [verbose debug info unavailable]
      Unexpected TM Bad Thing exception at c000000000043e80 (msr 0x201033)
      Oops: Unrecoverable exception, sig: 6 [#2]
      CPU: 0 PID: 2006 Comm: tm-execed Tainted: G      D
      task: c0000000fbea6d80 ti: c00000003ffec000 task.ti: c0000000fb7ec000
      NIP: c000000000043e80 LR: c000000000015a24 CTR: 0000000000000000
      REGS: c00000003ffef7e0 TRAP: 0700   Tainted: G      D
      MSR: 8000000300201033 <SF,ME,IR,DR,RI,LE,TM[SE]>  CR: 28002828  XER: 00000000
      CFAR: c000000000015a20 SOFTE: 0
      PACATMSCRATCH: b00000010000d033
      GPR00: 0000000000000000 c00000003ffefa60 c000000000db5500 c0000000fbead000
      GPR04: 8000000300001033 2222222222222222 2222222222222222 00000000ff160000
      GPR08: 0000000000000000 800000010000d033 c0000000fb7e3ea0 c00000000fe00004
      GPR12: 0000000000002200 c00000000fe00000 0000000000000000 0000000000000000
      GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR20: 0000000000000000 0000000000000000 c0000000fbea7410 00000000ff160000
      GPR24: c0000000ffe1f600 c0000000fbea8700 c0000000fbea8700 c0000000fbead000
      GPR28: c000000000e20198 c0000000fbea6d80 c0000000fbeab680 c0000000fbea6d80
      NIP [c000000000043e80] tm_restore_sprs+0xc/0x1c
      LR [c000000000015a24] __switch_to+0x1f4/0x420
      Call Trace:
      Instruction dump:
      7c800164 4e800020 7c0022a6 f80304a8 7c0222a6 f80304b0 7c0122a6 f80304b8
      4e800020 e80304a8 7c0023a6 e80304b0 <7c0223a6> e80304b8 7c0123a6 4e800020
    
    This fixes CVE-2016-5828.
    
    Fixes: bc2a9408fa65 ("powerpc: Hook in new transactional memory code")
    Signed-off-by: Cyril Bur <cyrilbur@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 044af1b034a0cbea5dea8d9d0f4a5c66968edd10
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Jun 8 10:01:23 2016 +1000

    powerpc/pseries: Fix IBM_ARCH_VEC_NRCORES_OFFSET since POWER8NVL was added
    
    commit 2c2a63e301fd19ccae673e79de59b30a232ff7f9 upstream.
    
    The recent commit 7cc851039d64 ("powerpc/pseries: Add POWER8NVL support
    to ibm,client-architecture-support call") added a new PVR mask & value
    to the start of the ibm_architecture_vec[] array.
    
    However it missed the fact that further down in the array, we hard code
    the offset of one of the fields, and then at boot use that value to
    patch the value in the array. This means every update to the array must
    also update the #define, ugh.
    
    This means that on pseries machines we will misreport to firmware the
    number of cores we support, by a factor of threads_per_core.
    
    Fix it for now by updating the #define.
    
    Fixes: 7cc851039d64 ("powerpc/pseries: Add POWER8NVL support to ibm,client-architecture-support call")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3abd809ecc4a9458a09dc8aeb5015f5e725ade20
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Thu May 26 09:56:07 2016 +1000

    powerpc/pseries: Fix PCI config address for DDW
    
    commit 8a934efe94347eee843aeea65bdec8077a79e259 upstream.
    
    In commit 8445a87f7092 "powerpc/iommu: Remove the dependency on EEH
    struct in DDW mechanism", the PE address was replaced with the PCI
    config address in order to remove dependency on EEH. According to PAPR
    spec, firmware (pHyp or QEMU) should accept "xxBBSSxx" format PCI config
    address, not "xxxxBBSS" provided by the patch. Note that "BB" is PCI bus
    number and "SS" is the combination of slot and function number.
    
    This fixes the PCI address passed to DDW RTAS calls.
    
    Fixes: 8445a87f7092 ("powerpc/iommu: Remove the dependency on EEH struct in DDW mechanism")
    Reported-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Tested-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bd26f4c241933e812a8b93430eb7bd9b551a0ba
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Mon Apr 11 16:17:23 2016 -0300

    powerpc/iommu: Remove the dependency on EEH struct in DDW mechanism
    
    commit 8445a87f7092bc8336ea1305be9306f26b846d93 upstream.
    
    Commit 39baadbf36ce ("powerpc/eeh: Remove eeh information from pci_dn")
    changed the pci_dn struct by removing its EEH-related members.
    As part of this clean-up, DDW mechanism was modified to read the device
    configuration address from eeh_dev struct.
    
    As a consequence, now if we disable EEH mechanism on kernel command-line
    for example, the DDW mechanism will fail, generating a kernel oops by
    dereferencing a NULL pointer (which turns to be the eeh_dev pointer).
    
    This patch just changes the configuration address calculation on DDW
    functions to a manual calculation based on pci_dn members instead of
    using eeh_dev-based address.
    
    No functional changes were made. This was tested on pSeries, both
    in PHyp and qemu guest.
    
    Fixes: 39baadbf36ce ("powerpc/eeh: Remove eeh information from pci_dn")
    Reviewed-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75012a8866ccb096013aab28e548a6456ad49b21
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Jun 8 17:28:29 2016 -0600

    IB/mlx4: Properly initialize GRH TClass and FlowLabel in AHs
    
    commit 8c5122e45a10a9262f872b53f151a592e870f905 upstream.
    
    When this code was reworked for IBoE support the order of assignments
    for the sl_tclass_flowlabel got flipped around resulting in
    TClass & FlowLabel being permanently set to 0 in the packet headers.
    
    This breaks IB routers that rely on these headers, but only affects
    kernel users - libmlx4 does this properly for user space.
    
    Fixes: fa417f7b520e ("IB/mlx4: Add support for IBoE")
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abb24accf23b932229c52cb7f91e892190e4df01
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Mar 25 08:33:16 2016 -0700

    IB/cm: Fix a recently introduced locking bug
    
    commit 943f44d94aa26bfdcaafc40d3701e24eeb58edce upstream.
    
    ib_cm_notify() can be called from interrupt context. Hence do not
    reenable interrupts unconditionally in cm_establish().
    
    This patch avoids that lockdep reports the following warning:
    
    WARNING: CPU: 0 PID: 23317 at kernel/locking/lockdep.c:2624 trace _hardirqs_on_caller+0x112/0x1b0
    DEBUG_LOCKS_WARN_ON(current->hardirq_context)
    Call Trace:
     <IRQ>  [<ffffffff812bd0e5>] dump_stack+0x67/0x92
     [<ffffffff81056f21>] __warn+0xc1/0xe0
     [<ffffffff81056f8a>] warn_slowpath_fmt+0x4a/0x50
     [<ffffffff810a5932>] trace_hardirqs_on_caller+0x112/0x1b0
     [<ffffffff810a59dd>] trace_hardirqs_on+0xd/0x10
     [<ffffffff815992c7>] _raw_spin_unlock_irq+0x27/0x40
     [<ffffffffa0382e9c>] ib_cm_notify+0x25c/0x290 [ib_cm]
     [<ffffffffa068fbc1>] srpt_qp_event+0xa1/0xf0 [ib_srpt]
     [<ffffffffa04efb97>] mlx4_ib_qp_event+0x67/0xd0 [mlx4_ib]
     [<ffffffffa034ec0a>] mlx4_qp_event+0x5a/0xc0 [mlx4_core]
     [<ffffffffa03365f8>] mlx4_eq_int+0x3d8/0xcf0 [mlx4_core]
     [<ffffffffa0336f9c>] mlx4_msi_x_interrupt+0xc/0x20 [mlx4_core]
     [<ffffffff810b0914>] handle_irq_event_percpu+0x64/0x100
     [<ffffffff810b09e4>] handle_irq_event+0x34/0x60
     [<ffffffff810b3a6a>] handle_edge_irq+0x6a/0x150
     [<ffffffff8101ad05>] handle_irq+0x15/0x20
     [<ffffffff8101a66c>] do_IRQ+0x5c/0x110
     [<ffffffff8159a2c9>] common_interrupt+0x89/0x89
     [<ffffffff81297a17>] blk_run_queue_async+0x37/0x40
     [<ffffffffa0163e53>] rq_completed+0x43/0x70 [dm_mod]
     [<ffffffffa0164896>] dm_softirq_done+0x176/0x280 [dm_mod]
     [<ffffffff812a26c2>] blk_done_softirq+0x52/0x90
     [<ffffffff8105bc1f>] __do_softirq+0x10f/0x230
     [<ffffffff8105bec8>] irq_exit+0xa8/0xb0
     [<ffffffff8103653e>] smp_trace_call_function_single_interrupt+0x2e/0x30
     [<ffffffff81036549>] smp_call_function_single_interrupt+0x9/0x10
     [<ffffffff8159a959>] call_function_single_interrupt+0x89/0x90
     <EOI>
    
    Fixes: commit be4b499323bf (IB/cm: Do not queue work to a device that's going away)
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Erez Shitrit <erezsh@mellanox.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Cc: Nikolay Borisov <kernel@kyup.com>
    Acked-by: Erez Shitrit <erezsh@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bf506067c4b2e1109b1462661914c1c0e180847
Author: Tony Luck <tony.luck@intel.com>
Date:   Tue May 31 11:50:28 2016 -0700

    EDAC, sb_edac: Fix rank lookup on Broadwell
    
    commit c7103f650a11328f28b9fa1c95027db331b7774b upstream.
    
    Broadwell made a small change to the rank target register moving the
    target rank ID field up from bits 16:19 to bits 20:23.
    
    Also found that the offset field grew by one bit in the IVY_BRIDGE to
    HASWELL transition, so fix the RIR_OFFSET() macro too.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: Aristeu Rozanski <arozansk@redhat.com>
    Cc: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/2943fb819b1f7e396681165db9c12bb3df0e0b16.1464735623.git.tony.luck@intel.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96d50acbd447f536b39cc3c2964a6231aeb6bb6f
Author: Jouni Malinen <j@w1.fi>
Date:   Sun Jun 19 23:51:02 2016 +0300

    mac80211: Fix mesh estab_plinks counting in STA removal case
    
    commit 126e7557328a1cd576be4fca95b133a2695283ff upstream.
    
    If a user space program (e.g., wpa_supplicant) deletes a STA entry that
    is currently in NL80211_PLINK_ESTAB state, the number of established
    plinks counter was not decremented and this could result in rejecting
    new plink establishment before really hitting the real maximum plink
    limit. For !user_mpm case, this decrementation is handled by
    mesh_plink_deactive().
    
    Fix this by decrementing estab_plinks on STA deletion
    (mesh_sta_cleanup() gets called from there) so that the counter has a
    correct value and the Beacon frame advertisement in Mesh Configuration
    element shows the proper value for capability to accept additional
    peers.
    
    Signed-off-by: Jouni Malinen <j@w1.fi>
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43e319d7c0ff644ab767c19e7669c9bf5d41a5b2
Author: Martin Willi <martin@strongswan.org>
Date:   Fri May 13 12:41:48 2016 +0200

    mac80211_hwsim: Add missing check for HWSIM_ATTR_SIGNAL
    
    commit 62397da50bb20a6b812c949ef465d7e69fe54bb6 upstream.
    
    A wmediumd that does not send this attribute causes a NULL pointer
    dereference, as the attribute is accessed even if it does not exist.
    
    The attribute was required but never checked ever since userspace frame
    forwarding has been introduced. The issue gets more problematic once we
    allow wmediumd registration from user namespaces.
    
    Fixes: 7882513bacb1 ("mac80211_hwsim driver support userspace frame tx/rx")
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b90e041d140f785fb2fb06e467ff152c9210082
Author: Bob Copeland <me@bobcopeland.com>
Date:   Sun May 15 13:19:16 2016 -0400

    mac80211: mesh: flush mesh paths unconditionally
    
    commit fe7a7c57629e8dcbc0e297363a9b2366d67a6dc5 upstream.
    
    Currently, the mesh paths associated with a nexthop station are cleaned
    up in the following code path:
    
        __sta_info_destroy_part1
        synchronize_net()
        __sta_info_destroy_part2
         -> cleanup_single_sta
           -> mesh_sta_cleanup
             -> mesh_plink_deactivate
               -> mesh_path_flush_by_nexthop
    
    However, there are a couple of problems here:
    
    1) the paths aren't flushed at all if the MPM is running in userspace
       (e.g. when using wpa_supplicant or authsae)
    
    2) there is no synchronize_rcu between removing the path and readers
       accessing the nexthop, which means the following race is possible:
    
    CPU0                            CPU1
    ~~~~                            ~~~~
                                    sta_info_destroy_part1()
                                    synchronize_net()
    rcu_read_lock()
    mesh_nexthop_resolve()
      mpath = mesh_path_lookup()
                                    [...] -> mesh_path_flush_by_nexthop()
      sta = rcu_dereference(
        mpath->next_hop)
                                    kfree(sta)
      access sta <-- CRASH
    
    Fix both of these by unconditionally flushing paths before destroying
    the sta, and by adding a synchronize_net() after path flush to ensure
    no active readers can still dereference the sta.
    
    Fixes this crash:
    
    [  348.529295] BUG: unable to handle kernel paging request at 00020040
    [  348.530014] IP: [<f929245d>] ieee80211_mps_set_frame_flags+0x40/0xaa [mac80211]
    [  348.530014] *pde = 00000000
    [  348.530014] Oops: 0000 [#1] PREEMPT
    [  348.530014] Modules linked in: drbg ansi_cprng ctr ccm ppp_generic slhc ipt_MASQUERADE nf_nat_masquerade_ipv4 8021q ]
    [  348.530014] CPU: 0 PID: 20597 Comm: wget Tainted: G           O 4.6.0-rc5-wt=V1 #1
    [  348.530014] Hardware name: To Be Filled By O.E.M./To be filled by O.E.M., BIOS 080016  11/07/2014
    [  348.530014] task: f64fa280 ti: f4f9c000 task.ti: f4f9c000
    [  348.530014] EIP: 0060:[<f929245d>] EFLAGS: 00010246 CPU: 0
    [  348.530014] EIP is at ieee80211_mps_set_frame_flags+0x40/0xaa [mac80211]
    [  348.530014] EAX: f4ce63e0 EBX: 00000088 ECX: f3788416 EDX: 00020008
    [  348.530014] ESI: 00000000 EDI: 00000088 EBP: f6409a4c ESP: f6409a40
    [  348.530014]  DS: 007b ES: 007b FS: 0000 GS: 0033 SS: 0068
    [  348.530014] CR0: 80050033 CR2: 00020040 CR3: 33190000 CR4: 00000690
    [  348.530014] Stack:
    [  348.530014]  00000000 f4ce63e0 f5f9bd80 f6409a64 f9291d80 0000ce67 f5d51e00 f4ce63e0
    [  348.530014]  f3788416 f6409a80 f9291dc1 f4ce8320 f4ce63e0 f5d51e00 f4ce63e0 f4ce8320
    [  348.530014]  f6409a98 f9277f6f 00000000 00000000 0000007c 00000000 f6409b2c f9278dd1
    [  348.530014] Call Trace:
    [  348.530014]  [<f9291d80>] mesh_nexthop_lookup+0xbb/0xc8 [mac80211]
    [  348.530014]  [<f9291dc1>] mesh_nexthop_resolve+0x34/0xd8 [mac80211]
    [  348.530014]  [<f9277f6f>] ieee80211_xmit+0x92/0xc1 [mac80211]
    [  348.530014]  [<f9278dd1>] __ieee80211_subif_start_xmit+0x807/0x83c [mac80211]
    [  348.530014]  [<c04df012>] ? sch_direct_xmit+0xd7/0x1b3
    [  348.530014]  [<c022a8c6>] ? __local_bh_enable_ip+0x5d/0x7b
    [  348.530014]  [<f956870c>] ? nf_nat_ipv4_out+0x4c/0xd0 [nf_nat_ipv4]
    [  348.530014]  [<f957e036>] ? iptable_nat_ipv4_fn+0xf/0xf [iptable_nat]
    [  348.530014]  [<c04c6f45>] ? netif_skb_features+0x14d/0x30a
    [  348.530014]  [<f9278e10>] ieee80211_subif_start_xmit+0xa/0xe [mac80211]
    [  348.530014]  [<c04c769c>] dev_hard_start_xmit+0x1f8/0x267
    [  348.530014]  [<c04c7261>] ?  validate_xmit_skb.isra.120.part.121+0x10/0x253
    [  348.530014]  [<c04defc6>] sch_direct_xmit+0x8b/0x1b3
    [  348.530014]  [<c04c7a9c>] __dev_queue_xmit+0x2c8/0x513
    [  348.530014]  [<c04c7cfb>] dev_queue_xmit+0xa/0xc
    [  348.530014]  [<f91bfc7a>] batadv_send_skb_packet+0xd6/0xec [batman_adv]
    [  348.530014]  [<f91bfdc4>] batadv_send_unicast_skb+0x15/0x4a [batman_adv]
    [  348.530014]  [<f91b5938>] batadv_dat_send_data+0x27e/0x310 [batman_adv]
    [  348.530014]  [<f91c30b5>] ? batadv_tt_global_hash_find.isra.11+0x8/0xa [batman_adv]
    [  348.530014]  [<f91b63f3>] batadv_dat_snoop_outgoing_arp_request+0x208/0x23d [batman_adv]
    [  348.530014]  [<f91c0cd9>] batadv_interface_tx+0x206/0x385 [batman_adv]
    [  348.530014]  [<c04c769c>] dev_hard_start_xmit+0x1f8/0x267
    [  348.530014]  [<c04c7261>] ?  validate_xmit_skb.isra.120.part.121+0x10/0x253
    [  348.530014]  [<c04defc6>] sch_direct_xmit+0x8b/0x1b3
    [  348.530014]  [<c04c7a9c>] __dev_queue_xmit+0x2c8/0x513
    [  348.530014]  [<f80cbd2a>] ? igb_xmit_frame+0x57/0x72 [igb]
    [  348.530014]  [<c04c7cfb>] dev_queue_xmit+0xa/0xc
    [  348.530014]  [<f843a326>] br_dev_queue_push_xmit+0xeb/0xfb [bridge]
    [  348.530014]  [<f843a35f>] br_forward_finish+0x29/0x74 [bridge]
    [  348.530014]  [<f843a23b>] ? deliver_clone+0x3b/0x3b [bridge]
    [  348.530014]  [<f843a714>] __br_forward+0x89/0xe7 [bridge]
    [  348.530014]  [<f843a336>] ? br_dev_queue_push_xmit+0xfb/0xfb [bridge]
    [  348.530014]  [<f843a234>] deliver_clone+0x34/0x3b [bridge]
    [  348.530014]  [<f843a68b>] ? br_flood+0x95/0x95 [bridge]
    [  348.530014]  [<f843a66d>] br_flood+0x77/0x95 [bridge]
    [  348.530014]  [<f843a809>] br_flood_forward+0x13/0x1a [bridge]
    [  348.530014]  [<f843a68b>] ? br_flood+0x95/0x95 [bridge]
    [  348.530014]  [<f843b877>] br_handle_frame_finish+0x392/0x3db [bridge]
    [  348.530014]  [<c04e9b2b>] ? nf_iterate+0x2b/0x6b
    [  348.530014]  [<f843baa6>] br_handle_frame+0x1e6/0x240 [bridge]
    [  348.530014]  [<f843b4e5>] ? br_handle_local_finish+0x6a/0x6a [bridge]
    [  348.530014]  [<c04c4ba0>] __netif_receive_skb_core+0x43a/0x66b
    [  348.530014]  [<f843b8c0>] ? br_handle_frame_finish+0x3db/0x3db [bridge]
    [  348.530014]  [<c023cea4>] ? resched_curr+0x19/0x37
    [  348.530014]  [<c0240707>] ? check_preempt_wakeup+0xbf/0xfe
    [  348.530014]  [<c0255dec>] ? ktime_get_with_offset+0x5c/0xfc
    [  348.530014]  [<c04c4fc1>] __netif_receive_skb+0x47/0x55
    [  348.530014]  [<c04c57ba>] netif_receive_skb_internal+0x40/0x5a
    [  348.530014]  [<c04c61ef>] napi_gro_receive+0x3a/0x94
    [  348.530014]  [<f80ce8d5>] igb_poll+0x6fd/0x9ad [igb]
    [  348.530014]  [<c0242bd8>] ? swake_up_locked+0x14/0x26
    [  348.530014]  [<c04c5d29>] net_rx_action+0xde/0x250
    [  348.530014]  [<c022a743>] __do_softirq+0x8a/0x163
    [  348.530014]  [<c022a6b9>] ? __hrtimer_tasklet_trampoline+0x19/0x19
    [  348.530014]  [<c021100f>] do_softirq_own_stack+0x26/0x2c
    [  348.530014]  <IRQ>
    [  348.530014]  [<c022a957>] irq_exit+0x31/0x6f
    [  348.530014]  [<c0210eb2>] do_IRQ+0x8d/0xa0
    [  348.530014]  [<c058152c>] common_interrupt+0x2c/0x40
    [  348.530014] Code: e7 8c 00 66 81 ff 88 00 75 12 85 d2 75 0e b2 c3 b8 83 e9 29 f9 e8 a7 5f f9 c6 eb 74 66 81 e3 8c 005
    [  348.530014] EIP: [<f929245d>] ieee80211_mps_set_frame_flags+0x40/0xaa [mac80211] SS:ESP 0068:f6409a40
    [  348.530014] CR2: 0000000000020040
    [  348.530014] ---[ end trace 48556ac26779732e ]---
    [  348.530014] Kernel panic - not syncing: Fatal exception in interrupt
    [  348.530014] Kernel Offset: disabled
    
    Reported-by: Fred Veldini <fred.veldini@gmail.com>
    Tested-by: Fred Veldini <fred.veldini@gmail.com>
    Signed-off-by: Bob Copeland <me@bobcopeland.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dcbb4d9fdae96d9320f5c794229a2c7e522cc5f
Author: Felix Fietkau <nbd@nbd.name>
Date:   Thu May 19 17:34:38 2016 +0200

    mac80211: fix fast_tx header alignment
    
    commit 6fe04128f158c5ad27e7504bfdf1b12e63331bc9 upstream.
    
    The header field is defined as u8[] but also accessed as struct
    ieee80211_hdr. Enforce an alignment of 2 to prevent unnecessary
    unaligned accesses, which can be very harmful for performance on many
    platforms.
    
    Fixes: e495c24731a2 ("mac80211: extend fast-xmit for more ciphers")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
