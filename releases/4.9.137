commit 5552683784c9e2641e8c74827565476a45827126
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 13 11:17:06 2018 -0800

    Linux 4.9.137

commit 627ab1faa16bab6183f94fbfc300d61590603b05
Author: Shaohua Li <shli@fb.com>
Date:   Sun Oct 14 17:05:07 2018 -0700

    MD: fix invalid stored role for a disk - try2
    
    commit 9e753ba9b9b405e3902d9f08aec5f2ea58a0c317 upstream.
    
    Commit d595567dc4f0 (MD: fix invalid stored role for a disk) broke linear
    hotadd. Let's only fix the role for disks in raid1/10.
    Based on Guoqing's original patch.
    
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Cc: Gioh Kim <gi-oh.kim@profitbricks.com>
    Cc: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3bc71fa0e6a9f4c3293f73f1cdd4d8ebf0f013e
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Oct 12 15:32:33 2018 -0400

    btrfs: set max_extent_size properly
    
    commit ad22cf6ea47fa20fbe11ac324a0a15c0a9a4a2a9 upstream.
    
    We can't use entry->bytes if our entry is a bitmap entry, we need to use
    entry->max_extent_size in that case.  Fix up all the logic to make this
    consistent.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a088035d99358bce2f84073c4b9857d2bd7d1d8f
Author: Filipe Manana <fdmanana@suse.com>
Date:   Sat Oct 13 00:37:25 2018 +0100

    Btrfs: fix null pointer dereference on compressed write path error
    
    commit 3527a018c00e5dbada2f9d7ed5576437b6dd5cfb upstream.
    
    At inode.c:compress_file_range(), under the "free_pages_out" label, we can
    end up dereferencing the "pages" pointer when it has a NULL value. This
    case happens when "start" has a value of 0 and we fail to allocate memory
    for the "pages" pointer. When that happens we jump to the "cont" label and
    then enter the "if (start == 0)" branch where we immediately call the
    cow_file_range_inline() function. If that function returns 0 (success
    creating an inline extent) or an error (like -ENOMEM for example) we jump
    to the "free_pages_out" label and then access "pages[i]" leading to a NULL
    pointer dereference, since "nr_pages" has a value greater than zero at
    that point.
    
    Fix this by setting "nr_pages" to 0 when we fail to allocate memory for
    the "pages" pointer.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201119
    Fixes: 771ed689d2cd ("Btrfs: Optimize compressed writeback and reads")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91b3675e1122693bf36bba210cad92ec326653b1
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Aug 10 10:20:26 2018 +0800

    btrfs: qgroup: Dirty all qgroups before rescan
    
    commit 9c7b0c2e8dbfbcd80a71e2cbfe02704f26c185c6 upstream.
    
    [BUG]
    In the following case, rescan won't zero out the number of qgroup 1/0:
    
      $ mkfs.btrfs -fq $DEV
      $ mount $DEV /mnt
    
      $ btrfs quota enable /mnt
      $ btrfs qgroup create 1/0 /mnt
      $ btrfs sub create /mnt/sub
      $ btrfs qgroup assign 0/257 1/0 /mnt
    
      $ dd if=/dev/urandom of=/mnt/sub/file bs=1k count=1000
      $ btrfs sub snap /mnt/sub /mnt/snap
      $ btrfs quota rescan -w /mnt
      $ btrfs qgroup show -pcre /mnt
      qgroupid         rfer         excl     max_rfer     max_excl parent  child
      --------         ----         ----     --------     -------- ------  -----
      0/5          16.00KiB     16.00KiB         none         none ---     ---
      0/257      1016.00KiB     16.00KiB         none         none 1/0     ---
      0/258      1016.00KiB     16.00KiB         none         none ---     ---
      1/0        1016.00KiB     16.00KiB         none         none ---     0/257
    
    So far so good, but:
    
      $ btrfs qgroup remove 0/257 1/0 /mnt
      WARNING: quotas may be inconsistent, rescan needed
      $ btrfs quota rescan -w /mnt
      $ btrfs qgroup show -pcre  /mnt
      qgoupid         rfer         excl     max_rfer     max_excl parent  child
      --------         ----         ----     --------     -------- ------  -----
      0/5          16.00KiB     16.00KiB         none         none ---     ---
      0/257      1016.00KiB     16.00KiB         none         none ---     ---
      0/258      1016.00KiB     16.00KiB         none         none ---     ---
      1/0        1016.00KiB     16.00KiB         none         none ---     ---
                 ^^^^^^^^^^     ^^^^^^^^ not cleared
    
    [CAUSE]
    Before rescan we call qgroup_rescan_zero_tracking() to zero out all
    qgroups' accounting numbers.
    
    However we don't mark all qgroups dirty, but rely on rescan to do so.
    
    If we have any high level qgroup without children, it won't be marked
    dirty during rescan, since we cannot reach that qgroup.
    
    This will cause QGROUP_INFO items of childless qgroups never get updated
    in the quota tree, thus their numbers will stay the same in "btrfs
    qgroup show" output.
    
    [FIX]
    Just mark all qgroups dirty in qgroup_rescan_zero_tracking(), so even if
    we have childless qgroups, their QGROUP_INFO items will still get
    updated during rescan.
    
    Reported-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Tested-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a0403a42c2d7d31587aab29639bb0a962d07c4b
Author: Filipe Manana <fdmanana@suse.com>
Date:   Tue Oct 9 15:05:29 2018 +0100

    Btrfs: fix wrong dentries after fsync of file that got its parent replaced
    
    commit 0f375eed92b5a407657532637ed9652611a682f5 upstream.
    
    In a scenario like the following:
    
      mkdir /mnt/A               # inode 258
      mkdir /mnt/B               # inode 259
      touch /mnt/B/bar           # inode 260
    
      sync
    
      mv /mnt/B/bar /mnt/A/bar
      mv -T /mnt/A /mnt/B
      fsync /mnt/B/bar
    
      <power fail>
    
    After replaying the log we end up with file bar having 2 hard links, both
    with the name 'bar' and one in the directory with inode number 258 and the
    other in the directory with inode number 259. Also, we end up with the
    directory inode 259 still existing and with the directory inode 258 still
    named as 'A', instead of 'B'. In this scenario, file 'bar' should only
    have one hard link, located at directory inode 258, the directory inode
    259 should not exist anymore and the name for directory inode 258 should
    be 'B'.
    
    This incorrect behaviour happens because when attempting to log the old
    parents of an inode, we skip any parents that no longer exist. Fix this
    by forcing a full commit if an old parent no longer exists.
    
    A test case for fstests follows soon.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c7b9a461dcbc0e3a939d2d61f273fbc04b3ea78
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Sep 28 07:18:02 2018 -0400

    btrfs: make sure we create all new block groups
    
    commit 545e3366db823dc3342ca9d7fea803f829c9062f upstream.
    
    Allocating new chunks modifies both the extent and chunk tree, which can
    trigger new chunk allocations.  So instead of doing list_for_each_safe,
    just do while (!list_empty()) so we make sure we don't exit with other
    pending bg's still on our list.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ff40fbfd05a07d6318fcad5e4c1bee992221abd
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Sep 28 07:18:00 2018 -0400

    btrfs: reset max_extent_size on clear in a bitmap
    
    commit 553cceb49681d60975d00892877d4c871bf220f9 upstream.
    
    We need to clear the max_extent_size when we clear bits from a bitmap
    since it could have been from the range that contains the
    max_extent_size.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c160dae0a3846dd4fd8bd13171da2ac1f4471a0e
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Sep 12 10:45:45 2018 -0400

    btrfs: wait on caching when putting the bg cache
    
    commit 3aa7c7a31c26321696b92841d5103461c6f3f517 upstream.
    
    While testing my backport I noticed there was a panic if I ran
    generic/416 generic/417 generic/418 all in a row.  This just happened to
    uncover a race where we had outstanding IO after we destroy all of our
    workqueues, and then we'd go to queue the endio work on those free'd
    workqueues.
    
    This is because we aren't waiting for the caching threads to be done
    before freeing everything up, so to fix this make sure we wait on any
    outstanding caching that's being done before we free up the block group,
    so we're sure to be done with all IO by the time we get to
    btrfs_stop_all_workers().  This fixes the panic I was seeing
    consistently in testing.
    
    ------------[ cut here ]------------
    kernel BUG at fs/btrfs/volumes.c:6112!
    SMP PTI
    Modules linked in:
    CPU: 1 PID: 27165 Comm: kworker/u4:7 Not tainted 4.16.0-02155-g3553e54a578d-dirty #875
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
    Workqueue: btrfs-cache btrfs_cache_helper
    RIP: 0010:btrfs_map_bio+0x346/0x370
    RSP: 0000:ffffc900061e79d0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: ffff880071542e00 RCX: 0000000000533000
    RDX: ffff88006bb74380 RSI: 0000000000000008 RDI: ffff880078160000
    RBP: 0000000000000001 R08: ffff8800781cd200 R09: 0000000000503000
    R10: ffff88006cd21200 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff8800781cd200 R15: ffff880071542e00
    FS:  0000000000000000(0000) GS:ffff88007fd00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000817ffc4 CR3: 0000000078314000 CR4: 00000000000006e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     btree_submit_bio_hook+0x8a/0xd0
     submit_one_bio+0x5d/0x80
     read_extent_buffer_pages+0x18a/0x320
     btree_read_extent_buffer_pages+0xbc/0x200
     ? alloc_extent_buffer+0x359/0x3e0
     read_tree_block+0x3d/0x60
     read_block_for_search.isra.30+0x1a5/0x360
     btrfs_search_slot+0x41b/0xa10
     btrfs_next_old_leaf+0x212/0x470
     caching_thread+0x323/0x490
     normal_work_helper+0xc5/0x310
     process_one_work+0x141/0x340
     worker_thread+0x44/0x3c0
     kthread+0xf8/0x130
     ? process_one_work+0x340/0x340
     ? kthread_bind+0x10/0x10
     ret_from_fork+0x35/0x40
    RIP: btrfs_map_bio+0x346/0x370 RSP: ffffc900061e79d0
    ---[ end trace 827eb13e50846033 ]---
    Kernel panic - not syncing: Fatal exception
    Kernel Offset: disabled
    ---[ end Kernel panic - not syncing: Fatal exception
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 391235fd9c3ff8b42eb964a8d225477b4ac01f45
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 17:18:15 2018 -0400

    btrfs: don't attempt to trim devices that don't support it
    
    commit 0be88e367fd8fbdb45257615d691f4675dda062f upstream.
    
    We check whether any device the file system is using supports discard in
    the ioctl call, but then we attempt to trim free extents on every device
    regardless of whether discard is supported.  Due to the way we mask off
    EOPNOTSUPP, we can end up issuing the trim operations on each free range
    on devices that don't support it, just wasting time.
    
    Fixes: 499f377f49f08 ("btrfs: iterate over unused chunk space in FITRIM")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d87af98c5ab77cd4125589ef59b54151481d9787
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 17:18:14 2018 -0400

    btrfs: iterate all devices during trim, instead of fs_devices::alloc_list
    
    commit d4e329de5e5e21594df2e0dd59da9acee71f133b upstream.
    
    btrfs_trim_fs iterates over the fs_devices->alloc_list while holding the
    device_list_mutex.  The problem is that ->alloc_list is protected by the
    chunk mutex.  We don't want to hold the chunk mutex over the trim of the
    entire file system.  Fortunately, the ->dev_list list is protected by
    the dev_list mutex and while it will give us all devices, including
    read-only devices, we already just skip the read-only devices.  Then we
    can continue to take and release the chunk mutex while scanning each
    device.
    
    Fixes: 499f377f49f ("btrfs: iterate over unused chunk space in FITRIM")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bd7112bb9313828b53c51e100f22c0db0427836
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 16:59:33 2018 -0400

    btrfs: fix error handling in free_log_tree
    
    commit 374b0e2d6ba5da7fd1cadb3247731ff27d011f6f upstream.
    
    When we hit an I/O error in free_log_tree->walk_log_tree during file system
    shutdown we can crash due to there not being a valid transaction handle.
    
    Use btrfs_handle_fs_error when there's no transaction handle to use.
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000060
      IP: free_log_tree+0xd2/0x140 [btrfs]
      PGD 0 P4D 0
      Oops: 0000 [#1] SMP DEBUG_PAGEALLOC PTI
      Modules linked in: <modules>
      CPU: 2 PID: 23544 Comm: umount Tainted: G        W        4.12.14-kvmsmall #9 SLE15 (unreleased)
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
      task: ffff96bfd3478880 task.stack: ffffa7cf40d78000
      RIP: 0010:free_log_tree+0xd2/0x140 [btrfs]
      RSP: 0018:ffffa7cf40d7bd10 EFLAGS: 00010282
      RAX: 00000000fffffffb RBX: 00000000fffffffb RCX: 0000000000000002
      RDX: 0000000000000000 RSI: ffff96c02f07d4c8 RDI: 0000000000000282
      RBP: ffff96c013cf1000 R08: ffff96c02f07d4c8 R09: ffff96c02f07d4d0
      R10: 0000000000000000 R11: 0000000000000002 R12: 0000000000000000
      R13: ffff96c005e800c0 R14: ffffa7cf40d7bdb8 R15: 0000000000000000
      FS:  00007f17856bcfc0(0000) GS:ffff96c03f600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000060 CR3: 0000000045ed6002 CR4: 00000000003606e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       ? wait_for_writer+0xb0/0xb0 [btrfs]
       btrfs_free_log+0x17/0x30 [btrfs]
       btrfs_drop_and_free_fs_root+0x9a/0xe0 [btrfs]
       btrfs_free_fs_roots+0xc0/0x130 [btrfs]
       ? wait_for_completion+0xf2/0x100
       close_ctree+0xea/0x2e0 [btrfs]
       ? kthread_stop+0x161/0x260
       generic_shutdown_super+0x6c/0x120
       kill_anon_super+0xe/0x20
       btrfs_kill_super+0x13/0x100 [btrfs]
       deactivate_locked_super+0x3f/0x70
       cleanup_mnt+0x3b/0x70
       task_work_run+0x78/0x90
       exit_to_usermode_loop+0x77/0xa6
       do_syscall_64+0x1c5/0x1e0
       entry_SYSCALL_64_after_hwframe+0x42/0xb7
      RIP: 0033:0x7f1784f90827
      RSP: 002b:00007ffdeeb03118 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      RAX: 0000000000000000 RBX: 0000556a60c62970 RCX: 00007f1784f90827
      RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000556a60c62b50
      RBP: 0000000000000000 R08: 0000000000000005 R09: 00000000ffffffff
      R10: 0000556a60c63900 R11: 0000000000000246 R12: 0000556a60c62b50
      R13: 00007f17854a81c4 R14: 0000000000000000 R15: 0000000000000000
      RIP: free_log_tree+0xd2/0x140 [btrfs] RSP: ffffa7cf40d7bd10
      CR2: 0000000000000060
    
    Fixes: 681ae50917df9 ("Btrfs: cleanup reserved space when freeing tree log on error")
    CC: <stable@vger.kernel.org> # v3.13
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5125564ae8ee2ae37e0d157f9a98dc842e689aa2
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Aug 21 09:53:47 2018 +0800

    btrfs: locking: Add extra check in btrfs_init_new_buffer() to avoid deadlock
    
    commit b72c3aba09a53fc7c1824250d71180ca154517a7 upstream.
    
    [BUG]
    For certain crafted image, whose csum root leaf has missing backref, if
    we try to trigger write with data csum, it could cause deadlock with the
    following kernel WARN_ON():
    
      WARNING: CPU: 1 PID: 41 at fs/btrfs/locking.c:230 btrfs_tree_lock+0x3e2/0x400
      CPU: 1 PID: 41 Comm: kworker/u4:1 Not tainted 4.18.0-rc1+ #8
      Workqueue: btrfs-endio-write btrfs_endio_write_helper
      RIP: 0010:btrfs_tree_lock+0x3e2/0x400
      Call Trace:
       btrfs_alloc_tree_block+0x39f/0x770
       __btrfs_cow_block+0x285/0x9e0
       btrfs_cow_block+0x191/0x2e0
       btrfs_search_slot+0x492/0x1160
       btrfs_lookup_csum+0xec/0x280
       btrfs_csum_file_blocks+0x2be/0xa60
       add_pending_csums+0xaf/0xf0
       btrfs_finish_ordered_io+0x74b/0xc90
       finish_ordered_fn+0x15/0x20
       normal_work_helper+0xf6/0x500
       btrfs_endio_write_helper+0x12/0x20
       process_one_work+0x302/0x770
       worker_thread+0x81/0x6d0
       kthread+0x180/0x1d0
       ret_from_fork+0x35/0x40
    
    [CAUSE]
    That crafted image has missing backref for csum tree root leaf.  And
    when we try to allocate new tree block, since there is no
    EXTENT/METADATA_ITEM for csum tree root, btrfs consider it's free slot
    and use it.
    
    The extent tree of the image looks like:
    
      Normal image                      |       This fuzzed image
      ----------------------------------+--------------------------------
      BG 29360128                       | BG 29360128
       One empty slot                   |  One empty slot
      29364224: backref to UUID tree    | 29364224: backref to UUID tree
       Two empty slots                  |  Two empty slots
      29376512: backref to CSUM tree    |  One empty slot (bad type) <<<
      29380608: backref to D_RELOC tree | 29380608: backref to D_RELOC tree
      ...                               | ...
    
    Since bytenr 29376512 has no METADATA/EXTENT_ITEM, when btrfs try to
    alloc tree block, it's an valid slot for btrfs.
    
    And for finish_ordered_write, when we need to insert csum, we try to CoW
    csum tree root.
    
    By accident, empty slots at bytenr BG_OFFSET, BG_OFFSET + 8K,
    BG_OFFSET + 12K is already used by tree block COW for other trees, the
    next empty slot is BG_OFFSET + 16K, which should be the backref for CSUM
    tree.
    
    But due to the bad type, btrfs can recognize it and still consider it as
    an empty slot, and will try to use it for csum tree CoW.
    
    Then in the following call trace, we will try to lock the new tree
    block, which turns out to be the old csum tree root which is already
    locked:
    
    btrfs_search_slot() called on csum tree root, which is at 29376512
    |- btrfs_cow_block()
       |- btrfs_set_lock_block()
       |  |- Now locks tree block 29376512 (old csum tree root)
       |- __btrfs_cow_block()
          |- btrfs_alloc_tree_block()
             |- btrfs_reserve_extent()
                | Now it returns tree block 29376512, which extent tree
                | shows its empty slot, but it's already hold by csum tree
                |- btrfs_init_new_buffer()
                   |- btrfs_tree_lock()
                      | Triggers WARN_ON(eb->lock_owner == current->pid)
                      |- wait_event()
                         Wait lock owner to release the lock, but it's
                         locked by ourself, so it will deadlock
    
    [FIX]
    This patch will do the lock_owner and current->pid check at
    btrfs_init_new_buffer().
    So above deadlock can be avoided.
    
    Since such problem can only happen in crafted image, we will still
    trigger kernel warning for later aborted transaction, but with a little
    more meaningful warning message.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200405
    Reported-by: Xu Wen <wen.xu@gatech.edu>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20d8180c6053e9cd122ae248b65a1c1cf0639fba
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Aug 21 09:42:03 2018 +0800

    btrfs: Handle owner mismatch gracefully when walking up tree
    
    commit 65c6e82becec33731f48786e5a30f98662c86b16 upstream.
    
    [BUG]
    When mounting certain crafted image, btrfs will trigger kernel BUG_ON()
    when trying to recover balance:
    
      kernel BUG at fs/btrfs/extent-tree.c:8956!
      invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
      CPU: 1 PID: 662 Comm: mount Not tainted 4.18.0-rc1-custom+ #10
      RIP: 0010:walk_up_proc+0x336/0x480 [btrfs]
      RSP: 0018:ffffb53540c9b890 EFLAGS: 00010202
      Call Trace:
       walk_up_tree+0x172/0x1f0 [btrfs]
       btrfs_drop_snapshot+0x3a4/0x830 [btrfs]
       merge_reloc_roots+0xe1/0x1d0 [btrfs]
       btrfs_recover_relocation+0x3ea/0x420 [btrfs]
       open_ctree+0x1af3/0x1dd0 [btrfs]
       btrfs_mount_root+0x66b/0x740 [btrfs]
       mount_fs+0x3b/0x16a
       vfs_kern_mount.part.9+0x54/0x140
       btrfs_mount+0x16d/0x890 [btrfs]
       mount_fs+0x3b/0x16a
       vfs_kern_mount.part.9+0x54/0x140
       do_mount+0x1fd/0xda0
       ksys_mount+0xba/0xd0
       __x64_sys_mount+0x21/0x30
       do_syscall_64+0x60/0x210
       entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    [CAUSE]
    Extent tree corruption.  In this particular case, reloc tree root's
    owner is DATA_RELOC_TREE (should be TREE_RELOC), thus its backref is
    corrupted and we failed the owner check in walk_up_tree().
    
    [FIX]
    It's pretty hard to take care of every extent tree corruption, but at
    least we can remove such BUG_ON() and exit more gracefully.
    
    And since in this particular image, DATA_RELOC_TREE and TREE_RELOC share
    the same root (which is obviously invalid), we needs to make
    __del_reloc_root() more robust to detect such invalid sharing to avoid
    possible NULL dereference as root->node can be NULL in this case.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200411
    Reported-by: Xu Wen <wen.xu@gatech.edu>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22a4f7ea5e3cb1e5a8647d0d9f6a096b0398caf9
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Nov 15 10:44:58 2017 +0100

    soc/tegra: pmc: Fix child-node lookup
    
    commit 1dc6bd5e39a29453bdcc17348dd2a89f1aa4004e upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent pmc node could end up being prematurely
    freed as of_find_node_by_name() drops a reference to its first argument.
    
    Fixes: 3568df3d31d6 ("soc: tegra: Add thermal reset (thermtrip) support to PMC")
    Cc: stable <stable@vger.kernel.org>     # 4.0
    Cc: Mikko Perttunen <mperttunen@nvidia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Mikko Perttunen <mperttunen@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cac77e1150df0e45e84b88095c33f8ffa59e3979
Author: Thor Thayer <thor.thayer@linux.intel.com>
Date:   Tue Sep 25 10:31:52 2018 -0500

    arm64: dts: stratix10: Correct System Manager register size
    
    commit 74121b9aa3cd571ddfff014a9f47db36cae3cda9 upstream.
    
    Correct the register size of the System Manager node.
    
    Cc: stable@vger.kernel.org
    Fixes: 78cd6a9d8e154 ("arm64: dts: Add base stratix 10 dtsi")
    Signed-off-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa52629c60b1c0a0957e3a679d169b0b85367e98
Author: Nicolas Pitre <nico@fluxnic.net>
Date:   Tue Oct 30 13:26:15 2018 -0400

    Cramfs: fix abad comparison when wrap-arounds occur
    
    commit 672ca9dd13f1aca0c17516f76fc5b0e8344b3e46 upstream.
    
    It is possible for corrupted filesystem images to produce very large
    block offsets that may wrap when a length is added, and wrongly pass
    the buffer size test.
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 245af7ee61ef0a399521a48babe12a32fa36d336
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Sep 27 22:36:27 2018 +0100

    rpmsg: smd: fix memory leak on channel create
    
    commit 940c620d6af8fca7d115de40f19870fba415efac upstream.
    
    Currently a failed allocation of channel->name leads to an
    immediate return without freeing channel. Fix this by setting
    ret to -ENOMEM and jumping to an exit path that kfree's channel.
    
    Detected by CoverityScan, CID#1473692 ("Resource Leak")
    
    Fixes: 53e2822e56c7 ("rpmsg: Introduce Qualcomm SMD backend")
    Cc: stable@vger.kernel.org
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fa09dbe0fd46da335f8870bacf8df723c2a6420
Author: Tri Vo <trong@android.com>
Date:   Wed Sep 19 12:27:50 2018 -0700

    arm64: lse: remove -fcall-used-x0 flag
    
    commit 2a6c7c367de82951c98a290a21156770f6f82c84 upstream.
    
    x0 is not callee-saved in the PCS. So there is no need to specify
    -fcall-used-x0.
    
    Clang doesn't currently support -fcall-used flags. This patch will help
    building the kernel with clang.
    
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Tri Vo <trong@android.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72a364cb4991dd08c079d68582ca5e9d90f6c32a
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 22:46:29 2018 -0400

    media: em28xx: make v4l2-compliance happier by starting sequence on zero
    
    commit afeaade90db4c5dab93f326d9582be1d5954a198 upstream.
    
    The v4l2-compliance tool complains if a video doesn't start
    with a zero sequence number.
    
    While this shouldn't cause any real problem for apps, let's
    make it happier, in order to better check the v4l2-compliance
    differences before and after patchsets.
    
    This is actually an old issue. It is there since at least its
    videobuf2 conversion, e. g. changeset 3829fadc461 ("[media]
    em28xx: convert to videobuf2"), if VB1 wouldn't suffer from
    the same issue.
    
    Cc: stable@vger.kernel.org
    Fixes: d3829fadc461 ("[media] em28xx: convert to videobuf2")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f294e26192de30656c4ea9516dddba9078c0e68e
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Fri Sep 14 00:20:21 2018 -0400

    media: em28xx: fix input name for Terratec AV 350
    
    commit 15644bfa195bd166d0a5ed76ae2d587f719c3dac upstream.
    
    Instead of using a register value, use an AMUX name, as otherwise
    VIDIOC_G_AUDIO would fail.
    
    Cc: stable@vger.kernel.org
    Fixes: 766ed64de554 ("V4L/DVB (11827): Add support for Terratec Grabster AV350")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78490e0ec071ce8cb32928edd0861560509e001b
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 16:49:51 2018 -0400

    media: tvp5150: avoid going past array on v4l2_querymenu()
    
    commit 5c4c4505b716cb782ad7263091edc466c4d1fbd4 upstream.
    
    The parameters of v4l2_ctrl_new_std_menu_items() are tricky: instead of
    the number of possible values, it requires the number of the maximum
    value. In other words, the ARRAY_SIZE() value should be decremented,
    otherwise it will go past the array bounds, as warned by KASAN:
    
    [  279.839688] BUG: KASAN: global-out-of-bounds in v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839709] Read of size 8 at addr ffffffffc10a4cb0 by task v4l2-compliance/16676
    
    [  279.839736] CPU: 1 PID: 16676 Comm: v4l2-compliance Not tainted 4.18.0-rc2+ #120
    [  279.839741] Hardware name:  /NUC5i7RYB, BIOS RYBDWi35.86A.0364.2017.0511.0949 05/11/2017
    [  279.839743] Call Trace:
    [  279.839758]  dump_stack+0x71/0xab
    [  279.839807]  ? v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839817]  print_address_description+0x1c9/0x270
    [  279.839863]  ? v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839871]  kasan_report+0x237/0x360
    [  279.839918]  v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839964]  __video_do_ioctl+0x2c8/0x590 [videodev]
    [  279.840011]  ? copy_overflow+0x20/0x20 [videodev]
    [  279.840020]  ? avc_ss_reset+0xa0/0xa0
    [  279.840028]  ? check_stack_object+0x21/0x60
    [  279.840036]  ? __check_object_size+0xe7/0x240
    [  279.840080]  video_usercopy+0xed/0x730 [videodev]
    [  279.840123]  ? copy_overflow+0x20/0x20 [videodev]
    [  279.840167]  ? v4l_enumstd+0x40/0x40 [videodev]
    [  279.840177]  ? __handle_mm_fault+0x9f9/0x1ba0
    [  279.840186]  ? __pmd_alloc+0x2c0/0x2c0
    [  279.840193]  ? __vfs_write+0xb6/0x350
    [  279.840200]  ? kernel_read+0xa0/0xa0
    [  279.840244]  ? video_usercopy+0x730/0x730 [videodev]
    [  279.840284]  v4l2_ioctl+0xa1/0xb0 [videodev]
    [  279.840295]  do_vfs_ioctl+0x117/0x8a0
    [  279.840303]  ? selinux_file_ioctl+0x211/0x2f0
    [  279.840313]  ? ioctl_preallocate+0x120/0x120
    [  279.840319]  ? selinux_capable+0x20/0x20
    [  279.840332]  ksys_ioctl+0x70/0x80
    [  279.840342]  __x64_sys_ioctl+0x3d/0x50
    [  279.840351]  do_syscall_64+0x6d/0x1c0
    [  279.840361]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  279.840367] RIP: 0033:0x7fdfb46275d7
    [  279.840369] Code: b3 66 90 48 8b 05 b1 48 2d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 81 48 2d 00 f7 d8 64 89 01 48
    [  279.840474] RSP: 002b:00007ffee1179038 EFLAGS: 00000202 ORIG_RAX: 0000000000000010
    [  279.840483] RAX: ffffffffffffffda RBX: 00007ffee1179180 RCX: 00007fdfb46275d7
    [  279.840488] RDX: 00007ffee11790c0 RSI: 00000000c02c5625 RDI: 0000000000000003
    [  279.840493] RBP: 0000000000000002 R08: 0000000000000020 R09: 00000000009f0902
    [  279.840497] R10: 0000000000000000 R11: 0000000000000202 R12: 00007ffee117a5a0
    [  279.840501] R13: 00007ffee11790c0 R14: 0000000000000002 R15: 0000000000000000
    
    [  279.840515] The buggy address belongs to the variable:
    [  279.840535]  tvp5150_test_patterns+0x10/0xffffffffffffe360 [tvp5150]
    
    Fixes: c43875f66140 ("[media] tvp5150: replace MEDIA_ENT_F_CONN_TEST by a control")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e7c0fc9a06a03697ea8960019e8bded70837aee
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 23:22:40 2018 -0400

    media: em28xx: use a default format if TRY_FMT fails
    
    commit f823ce2a1202d47110a7ef86b65839f0be8adc38 upstream.
    
    Follow the V4L2 spec, as warned by v4l2-compliance:
    
            warn: v4l2-test-formats.cpp(732): TRY_FMT cannot handle an invalid pixelformat.
            warn: v4l2-test-formats.cpp(733): This may or may not be a problem. For more information see:
    
    warn: v4l2-test-formats.cpp(734): http://www.mail-archive.com/linux-media@vger.kernel.org/msg56550.html
    
    Cc: stable@vger.kernel.org
    Fixes: bddcf63313c6 ("V4L/DVB (9927): em28xx: use a more standard way to specify video formats")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 782512e5c5b9198af5668755277a7dcf0a2beec6
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 8 08:35:06 2018 +0100

    xen: fix xen_qlock_wait()
    
    commit d3132b3860f6cf35ff7609a76bbcdbb814bd027c upstream.
    
    Commit a856531951dc80 ("xen: make xen_qlock_wait() nestable")
    introduced a regression for Xen guests running fully virtualized
    (HVM or PVH mode). The Xen hypervisor wouldn't return from the poll
    hypercall with interrupts disabled in case of an interrupt (for PV
    guests it does).
    
    So instead of disabling interrupts in xen_qlock_wait() use a nesting
    counter to avoid calling xen_clear_irq_pending() in case
    xen_qlock_wait() is nested.
    
    Fixes: a856531951dc80 ("xen: make xen_qlock_wait() nestable")
    Cc: stable@vger.kernel.org
    Reported-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c90ea7d8b3109d2a09af1791908f0edd91bbe745
Author: He Zhe <zhe.he@windriver.com>
Date:   Fri Aug 17 22:42:28 2018 +0800

    kgdboc: Passing ekgdboc to command line causes panic
    
    commit 1bd54d851f50dea6af30c3e6ff4f3e9aab5558f9 upstream.
    
    kgdboc_option_setup does not check input argument before passing it
    to strlen. The argument would be a NULL pointer if "ekgdboc", without
    its value, is set in command line and thus cause the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffff8fbbb620 error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.18-rc8+ #1
    [    0.000000] RIP: 0010:strlen+0x0/0x20
    ...
    [    0.000000] Call Trace
    [    0.000000]  ? kgdboc_option_setup+0x9/0xa0
    [    0.000000]  ? kgdboc_early_init+0x6/0x1b
    [    0.000000]  ? do_early_param+0x4d/0x82
    [    0.000000]  ? parse_args+0x212/0x330
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_options+0x20/0x23
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_param+0x2d/0x39
    [    0.000000]  ? setup_arch+0x2f7/0xbf4
    [    0.000000]  ? start_kernel+0x5e/0x4c2
    [    0.000000]  ? load_ucode_bsp+0x113/0x12f
    [    0.000000]  ? secondary_startup_64+0xa5/0xb0
    
    This patch adds a check to prevent the panic.
    
    Cc: stable@vger.kernel.org
    Cc: jason.wessel@windriver.com
    Cc: gregkh@linuxfoundation.org
    Cc: jslaby@suse.com
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c40015f3f3389232b22cbb98ea679d42a5604188
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Mon Oct 8 15:08:27 2018 -0400

    media: v4l2-tpg: fix kernel oops when enabling HFLIP and OSD
    
    commit 250854eed5d45a73d81e4137dfd85180af6f2ec3 upstream.
    
    When the OSD is on (i.e. vivid displays text on top of the test pattern), and
    you enable hflip, then the driver crashes.
    
    The cause turned out to be a division of a negative number by an unsigned value.
    You expect that -8 / 2U would be -4, but in reality it is 2147483644 :-(
    
    Fixes: 3e14e7a82c1ef ("vivid-tpg: add hor/vert downsampling support to tpg_gen_text")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Reported-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Cc: <stable@vger.kernel.org>      # for v4.1 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5378c0eac0b76747d64bd0ab4a31229798dcf0cf
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Wed Oct 3 13:21:07 2018 +0100

    TC: Set DMA masks for devices
    
    commit 3f2aa244ee1a0d17ed5b6c86564d2c1b24d1c96b upstream.
    
    Fix a TURBOchannel support regression with commit 205e1b7f51e4
    ("dma-mapping: warn when there is no coherent_dma_mask") that caused
    coherent DMA allocations to produce a warning such as:
    
    defxx: v1.11 2014/07/01  Lawrence V. Stefani and others
    tc1: DEFTA at MMIO addr = 0x1e900000, IRQ = 20, Hardware addr = 08-00-2b-a3-a3-29
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 1 at ./include/linux/dma-mapping.h:516 dfx_dev_register+0x670/0x678
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper Not tainted 4.19.0-rc6 #2
    Stack : ffffffff8009ffc0 fffffffffffffec0 0000000000000000 ffffffff80647650
            0000000000000000 0000000000000000 ffffffff806f5f80 ffffffffffffffff
            0000000000000000 0000000000000000 0000000000000001 ffffffff8065d4e8
            98000000031b6300 ffffffff80563478 ffffffff805685b0 ffffffffffffffff
            0000000000000000 ffffffff805d6720 0000000000000204 ffffffff80388df8
            0000000000000000 0000000000000009 ffffffff8053efd0 ffffffff806657d0
            0000000000000000 ffffffff803177f8 0000000000000000 ffffffff806d0000
            9800000003078000 980000000307b9e0 000000001e900000 ffffffff80067940
            0000000000000000 ffffffff805d6720 0000000000000204 ffffffff80388df8
            ffffffff805176c0 ffffffff8004dc78 0000000000000000 ffffffff80067940
            ...
    Call Trace:
    [<ffffffff8004dc78>] show_stack+0xa0/0x130
    [<ffffffff80067940>] __warn+0x128/0x170
    ---[ end trace b1d1e094f67f3bb2 ]---
    
    This is because the TURBOchannel bus driver fails to set the coherent
    DMA mask for devices enumerated.
    
    Set the regular and coherent DMA masks for TURBOchannel devices then,
    observing that the bus protocol supports a 34-bit (16GiB) DMA address
    space, by interpreting the value presented in the address cycle across
    the 32 `ad' lines as a 32-bit word rather than byte address[1].  The
    architectural size of the TURBOchannel DMA address space exceeds the
    maximum amount of RAM any actual TURBOchannel system in existence may
    have, hence both masks are the same.
    
    This removes the warning shown above.
    
    References:
    
    [1] "TURBOchannel Hardware Specification", EK-369AA-OD-007B, Digital
        Equipment Corporation, January 1993, Section "DMA", pp. 1-15 -- 1-17
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20835/
    Fixes: 205e1b7f51e4 ("dma-mapping: warn when there is no coherent_dma_mask")
    Cc: stable@vger.kernel.org # 4.16+
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f579349a3c7582a25e30e8d61618ed9d1563d4f2
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Sat Oct 27 01:46:34 2018 +0300

    MIPS: OCTEON: fix out of bounds array access on CN68XX
    
    commit c0fae7e2452b90c31edd2d25eb3baf0c76b400ca upstream.
    
    The maximum number of interfaces is returned by
    cvmx_helper_get_number_of_interfaces(), and the value is used to access
    interface_port_count[]. When CN68XX support was added, we forgot
    to increase the array size. Fix that.
    
    Fixes: 2c8c3f0201333 ("MIPS: Octeon: Support additional interfaces on CN68XX")
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20949/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org # v4.3+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38b57496ae2c0370c339be19255d4d53f2742642
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Oct 19 06:12:50 2018 +0000

    powerpc/msi: Fix compile error on mpc83xx
    
    commit 0f99153def98134403c9149128e59d3e1786cf04 upstream.
    
    mpic_get_primary_version() is not defined when not using MPIC.
    The compile error log like:
    
    arch/powerpc/sysdev/built-in.o: In function `fsl_of_msi_probe':
    fsl_msi.c:(.text+0x150c): undefined reference to `fsl_mpic_primary_get_version'
    
    Signed-off-by: Jia Hongtao <hongtao.jia@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Reported-by: Radu Rendec <radu.rendec@gmail.com>
    Fixes: 807d38b73b6 ("powerpc/mpic: Add get_version API both for internal and external use")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c446ad3622a67af92e6342c5678b06710c3777f
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Wed Oct 3 11:43:59 2018 -0500

    dm ioctl: harden copy_params()'s copy_from_user() from malicious users
    
    commit 800a7340ab7dd667edf95e74d8e4f23a17e87076 upstream.
    
    In copy_params(), the struct 'dm_ioctl' is first copied from the user
    space buffer 'user' to 'param_kernel' and the field 'data_size' is
    checked against 'minimum_data_size' (size of 'struct dm_ioctl' payload
    up to its 'data' member).  If the check fails, an error code EINVAL will be
    returned.  Otherwise, param_kernel->data_size is used to do a second copy,
    which copies from the same user-space buffer to 'dmi'.  After the second
    copy, only 'dmi->data_size' is checked against 'param_kernel->data_size'.
    Given that the buffer 'user' resides in the user space, a malicious
    user-space process can race to change the content in the buffer between
    the two copies.  This way, the attacker can inject inconsistent data
    into 'dmi' (versus previously validated 'param_kernel').
    
    Fix redundant copying of 'minimum_data_size' from user-space buffer by
    using the first copy stored in 'param_kernel'.  Also remove the
    'data_size' check after the second copy because it is now unnecessary.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c22b67bc29defe0a68f603f22456ee5c1024cbe
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Fri Sep 28 20:41:48 2018 +0300

    lockd: fix access beyond unterminated strings in prints
    
    commit 93f38b6fae0ea8987e22d9e6c38f8dfdccd867ee upstream.
    
    printk format used %*s instead of %.*s, so hostname_len does not limit
    the number of bytes accessed from hostname.
    
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5727dbcd2628f30b7063c89f6b1eb028e9fef540
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Tue Oct 9 15:54:15 2018 -0400

    nfsd: Fix an Oops in free_session()
    
    commit bb6ad5572c0022e17e846b382d7413cdcf8055be upstream.
    
    In call_xpt_users(), we delete the entry from the list, but we
    do not reinitialise it. This triggers the list poisoning when
    we later call unregister_xpt_user() in nfsd4_del_conns().
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65f27a3fac4c1c43cd334df47c70a7ca4658d40c
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Sep 18 10:07:44 2018 -0400

    NFSv4.1: Fix the r/wsize checking
    
    commit 943cff67b842839f4f35364ba2db5c2d3f025d94 upstream.
    
    The intention of nfs4_session_set_rwsize() was to cap the r/wsize to the
    buffer sizes negotiated by the CREATE_SESSION. The initial code had a
    bug whereby we would not check the values negotiated by nfs_probe_fsinfo()
    (the assumption being that CREATE_SESSION will always negotiate buffer values
    that are sane w.r.t. the server's preferred r/wsizes) but would only check
    values set by the user in the 'mount' command.
    
    The code was changed in 4.11 to _always_ set the r/wsize, meaning that we
    now never use the server preferred r/wsizes. This is the regression that
    this patch fixes.
    Also rename the function to nfs4_session_limit_rwsize() in order to avoid
    future confusion.
    
    Fixes: 033853325fe3 (NFSv4.1 respect server's max size in CREATE_SESSION")
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 404a83aca9092cf2fc3642e566653b00227d4fdf
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Oct 18 15:15:05 2018 +0200

    genirq: Fix race on spurious interrupt detection
    
    commit 746a923b863a1065ef77324e1e43f19b1a3eab5c upstream.
    
    Commit 1e77d0a1ed74 ("genirq: Sanitize spurious interrupt detection of
    threaded irqs") made detection of spurious interrupts work for threaded
    handlers by:
    
    a) incrementing a counter every time the thread returns IRQ_HANDLED, and
    b) checking whether that counter has increased every time the thread is
       woken.
    
    However for oneshot interrupts, the commit unmasks the interrupt before
    incrementing the counter.  If another interrupt occurs right after
    unmasking but before the counter is incremented, that interrupt is
    incorrectly considered spurious:
    
    time
     |  irq_thread()
     |    irq_thread_fn()
     |      action->thread_fn()
     |      irq_finalize_oneshot()
     |        unmask_threaded_irq()            /* interrupt is unmasked */
     |
     |                  /* interrupt fires, incorrectly deemed spurious */
     |
     |    atomic_inc(&desc->threads_handled); /* counter is incremented */
     v
    
    This is observed with a hi3110 CAN controller receiving data at high volume
    (from a separate machine sending with "cangen -g 0 -i -x"): The controller
    signals a huge number of interrupts (hundreds of millions per day) and
    every second there are about a dozen which are deemed spurious.
    
    In theory with high CPU load and the presence of higher priority tasks, the
    number of incorrectly detected spurious interrupts might increase beyond
    the 99,900 threshold and cause disablement of the interrupt.
    
    In practice it just increments the spurious interrupt count. But that can
    cause people to waste time investigating it over and over.
    
    Fix it by moving the accounting before the invocation of
    irq_finalize_oneshot().
    
    [ tglx: Folded change log update ]
    
    Fixes: 1e77d0a1ed74 ("genirq: Sanitize spurious interrupt detection of threaded irqs")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Mathias Duckeck <m.duckeck@kunbus.de>
    Cc: Akshay Bhat <akshay.bhat@timesys.com>
    Cc: Casey Fitzpatrick <casey.fitzpatrick@timesys.com>
    Cc: stable@vger.kernel.org # v3.16+
    Link: https://lkml.kernel.org/r/1dfd8bbd16163940648045495e3e9698e63b50ad.1539867047.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aa66ca294e6d5f29dc7b3ffcab994287958d0d6
Author: He Zhe <zhe.he@windriver.com>
Date:   Sun Sep 30 00:45:50 2018 +0800

    printk: Fix panic caused by passing log_buf_len to command line
    
    commit 277fcdb2cfee38ccdbe07e705dbd4896ba0c9930 upstream.
    
    log_buf_len_setup does not check input argument before passing it to
    simple_strtoull. The argument would be a NULL pointer if "log_buf_len",
    without its value, is set in command line and thus causes the following
    panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffffaaeacd0d error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.19.0-rc4-yocto-standard+ #1
    [    0.000000] RIP: 0010:_parse_integer_fixup_radix+0xd/0x70
    ...
    [    0.000000] Call Trace:
    [    0.000000]  simple_strtoull+0x29/0x70
    [    0.000000]  memparse+0x26/0x90
    [    0.000000]  log_buf_len_setup+0x17/0x22
    [    0.000000]  do_early_param+0x57/0x8e
    [    0.000000]  parse_args+0x208/0x320
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_options+0x29/0x2d
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_param+0x36/0x4d
    [    0.000000]  setup_arch+0x336/0x99e
    [    0.000000]  start_kernel+0x6f/0x4ee
    [    0.000000]  x86_64_start_reservations+0x24/0x26
    [    0.000000]  x86_64_start_kernel+0x6f/0x72
    [    0.000000]  secondary_startup_64+0xa4/0xb0
    
    This patch adds a check to prevent the panic.
    
    Link: http://lkml.kernel.org/r/1538239553-81805-1-git-send-email-zhe.he@windriver.com
    Cc: stable@vger.kernel.org
    Cc: rostedt@goodmis.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ad964c6cfb7cf3475606d2f87291798361e5bca
Author: Steve French <stfrench@microsoft.com>
Date:   Sun Oct 28 13:13:23 2018 -0500

    smb3: on kerberos mount if server doesn't specify auth type use krb5
    
    commit 926674de6705f0f1dbf29a62fd758d0977f535d6 upstream.
    
    Some servers (e.g. Azure) do not include a spnego blob in the SMB3
    negotiate protocol response, so on kerberos mounts ("sec=krb5")
    we can fail, as we expected the server to list its supported
    auth types (OIDs in the spnego blob in the negprot response).
    Change this so that on krb5 mounts we default to trying krb5 if the
    server doesn't list its supported protocol mechanisms.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 883f97972394cac488b532c900bd9b4dc83bd6a0
Author: Steve French <stfrench@microsoft.com>
Date:   Fri Oct 19 00:45:21 2018 -0500

    smb3: do not attempt cifs operation in smb3 query info error path
    
    commit 1e77a8c204c9d1b655c61751b8ad0fde22421dbb upstream.
    
    If backupuid mount option is sent, we can incorrectly retry
    (on access denied on query info) with a cifs (FindFirst) operation
    on an smb3 mount which causes the server to force the session close.
    
    We set backup intent on open so no need for this fallback.
    
    See kernel bugzilla 201435
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69922f7e47c868472b4ef251e940238817821ef0
Author: Steve French <stfrench@microsoft.com>
Date:   Sat Sep 15 23:04:41 2018 -0500

    smb3: allow stats which track session and share reconnects to be reset
    
    commit 2c887635cd6ab3af619dc2be94e5bf8f2e172b78 upstream.
    
    Currently, "echo 0 > /proc/fs/cifs/Stats" resets all of the stats
    except the session and share reconnect counts.  Fix it to
    reset those as well.
    
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcfc7f2e63402966b1f91d05d5a2eb3dc81bb7fb
Author: Andreas Kemnade <andreas@kemnade.info>
Date:   Sat Sep 22 21:20:54 2018 +0200

    w1: omap-hdq: fix missing bus unregister at removal
    
    commit a007734618fee1bf35556c04fa498d41d42c7301 upstream.
    
    The bus master was not removed after unloading the module
    or unbinding the driver. That lead to oopses like this
    
    [  127.842987] Unable to handle kernel paging request at virtual address bf01d04c
    [  127.850646] pgd = 70e3cd9a
    [  127.853698] [bf01d04c] *pgd=8f908811, *pte=00000000, *ppte=00000000
    [  127.860412] Internal error: Oops: 80000007 [#1] PREEMPT SMP ARM
    [  127.866668] Modules linked in: bq27xxx_battery overlay [last unloaded: omap_hdq]
    [  127.874542] CPU: 0 PID: 1022 Comm: w1_bus_master1 Not tainted 4.19.0-rc4-00001-g2d51da718324 #12
    [  127.883819] Hardware name: Generic OMAP36xx (Flattened Device Tree)
    [  127.890441] PC is at 0xbf01d04c
    [  127.893798] LR is at w1_search_process_cb+0x4c/0xfc
    [  127.898956] pc : [<bf01d04c>]    lr : [<c05f9580>]    psr: a0070013
    [  127.905609] sp : cf885f48  ip : bf01d04c  fp : ddf1e11c
    [  127.911132] r10: cf8fe040  r9 : c05f8d00  r8 : cf8fe040
    [  127.916656] r7 : 000000f0  r6 : cf8fe02c  r5 : cf8fe000  r4 : cf8fe01c
    [  127.923553] r3 : c05f8d00  r2 : 000000f0  r1 : cf8fe000  r0 : dde1ef10
    [  127.930450] Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [  127.938018] Control: 10c5387d  Table: 8f8f0019  DAC: 00000051
    [  127.944091] Process w1_bus_master1 (pid: 1022, stack limit = 0x9135699f)
    [  127.951171] Stack: (0xcf885f48 to 0xcf886000)
    [  127.955810] 5f40:                   cf8fe000 00000000 cf884000 cf8fe090 000003e8 c05f8d00
    [  127.964477] 5f60: dde5fc34 c05f9700 ddf1e100 ddf1e540 cf884000 cf8fe000 c05f9694 00000000
    [  127.973114] 5f80: dde5fc34 c01499a4 00000000 ddf1e540 c0149874 00000000 00000000 00000000
    [  127.981781] 5fa0: 00000000 00000000 00000000 c01010e8 00000000 00000000 00000000 00000000
    [  127.990447] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [  127.999114] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [  128.007781] [<c05f9580>] (w1_search_process_cb) from [<c05f9700>] (w1_process+0x6c/0x118)
    [  128.016479] [<c05f9700>] (w1_process) from [<c01499a4>] (kthread+0x130/0x148)
    [  128.024047] [<c01499a4>] (kthread) from [<c01010e8>] (ret_from_fork+0x14/0x2c)
    [  128.031677] Exception stack(0xcf885fb0 to 0xcf885ff8)
    [  128.037017] 5fa0:                                     00000000 00000000 00000000 00000000
    [  128.045684] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [  128.054351] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [  128.061340] Code: bad PC value
    [  128.064697] ---[ end trace af066e33c0e14119 ]---
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andreas Kemnade <andreas@kemnade.info>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5feed0720dbeb9b55e89c539d1655dcce947a874
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 24 10:51:44 2018 +0300

    iio: adc: at91: fix wrong channel number in triggered buffer mode
    
    commit aea835f2dc8a682942b859179c49ad1841a6c8b9 upstream.
    
    When channels are registered, the hardware channel number is not the
    actual iio channel number.
    This is because the driver is probed with a certain number of accessible
    channels. Some pins are routed and some not, depending on the description of
    the board in the DT.
    Because of that, channels 0,1,2,3 can correspond to hardware channels
    2,3,4,5 for example.
    In the buffered triggered case, we need to do the translation accordingly.
    Fixed the channel number to stop reading the wrong channel.
    
    Fixes: 0e589d5fb ("ARM: AT91: IIO: Add AT91 ADC driver.")
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be1898c25d776060d74483696feb8b4638e2655a
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 24 10:51:43 2018 +0300

    iio: adc: at91: fix acking DRDY irq on simple conversions
    
    commit bc1b45326223e7e890053cf6266357adfa61942d upstream.
    
    When doing simple conversions, the driver did not acknowledge the DRDY irq.
    If this irq status is not acked, it will be left pending, and as soon as a
    trigger is enabled, the irq handler will be called, it doesn't know why
    this status has occurred because no channel is pending, and then it will go
    int a irq loop and board will hang.
    To avoid this situation, read the LCDR after a raw conversion is done.
    
    Fixes: 0e589d5fb ("ARM: AT91: IIO: Add AT91 ADC driver.")
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 169a4398c855dcba5afe50a7409a21b5d2ec6438
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Sep 22 00:58:02 2018 +0300

    iio: adc: imx25-gcq: Fix leak of device_node in mx25_gcq_setup_cfgs()
    
    commit d3fa21c73c391975488818b085b894c2980ea052 upstream.
    
    Leaving for_each_child_of_node loop we should release child device node,
    if it is not stored for future use.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    JC: I'm not sending this as a quick fix as it's been wrong for years,
    but good to pick up for stable after the merge window.
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: 6df2e98c3ea56 ("iio: adc: Add imx25-gcq ADC driver")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e02771de481724daf35cade1a97eb240a465923e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Sep 28 11:23:40 2018 +0200

    iio: ad5064: Fix regulator handling
    
    commit 8911a43bc198877fad9f4b0246a866b26bb547ab upstream.
    
    The correct way to handle errors returned by regualtor_get() and friends is
    to propagate the error since that means that an regulator was specified,
    but something went wrong when requesting it.
    
    For handling optional regulators, e.g. when the device has an internal
    vref, regulator_get_optional() should be used to avoid getting the dummy
    regulator that the regulator core otherwise provides.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b48ce1a3f28428d722cb08e8f22157494b4efd5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Oct 30 15:07:32 2018 -0700

    kbuild: fix kernel/bounds.c 'W=1' warning
    
    commit 6a32c2469c3fbfee8f25bcd20af647326650a6cf upstream.
    
    Building any configuration with 'make W=1' produces a warning:
    
    kernel/bounds.c:16:6: warning: no previous prototype for 'foo' [-Wmissing-prototypes]
    
    When also passing -Werror, this prevents us from building any other files.
    Nobody ever calls the function, but we can't make it 'static' either
    since we want the compiler output.
    
    Calling it 'main' instead however avoids the warning, because gcc
    does not insist on having a declaration for main.
    
    Link: http://lkml.kernel.org/r/20181005083313.2088252-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbf05aa91c12d392da5db3f9f7de74c5a2af23f6
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Oct 26 15:10:58 2018 -0700

    hugetlbfs: dirty pages as they are added to pagecache
    
    commit 22146c3ce98962436e401f7b7016a6f664c9ffb5 upstream.
    
    Some test systems were experiencing negative huge page reserve counts and
    incorrect file block counts.  This was traced to /proc/sys/vm/drop_caches
    removing clean pages from hugetlbfs file pagecaches.  When non-hugetlbfs
    explicit code removes the pages, the appropriate accounting is not
    performed.
    
    This can be recreated as follows:
     fallocate -l 2M /dev/hugepages/foo
     echo 1 > /proc/sys/vm/drop_caches
     fallocate -l 2M /dev/hugepages/foo
     grep -i huge /proc/meminfo
       AnonHugePages:         0 kB
       ShmemHugePages:        0 kB
       HugePages_Total:    2048
       HugePages_Free:     2047
       HugePages_Rsvd:    18446744073709551615
       HugePages_Surp:        0
       Hugepagesize:       2048 kB
       Hugetlb:         4194304 kB
     ls -lsh /dev/hugepages/foo
       4.0M -rw-r--r--. 1 root root 2.0M Oct 17 20:05 /dev/hugepages/foo
    
    To address this issue, dirty pages as they are added to pagecache.  This
    can easily be reproduced with fallocate as shown above.  Read faulted
    pages will eventually end up being marked dirty.  But there is a window
    where they are clean and could be impacted by code such as drop_caches.
    So, just dirty them all as they are added to the pagecache.
    
    Link: http://lkml.kernel.org/r/b5be45b8-5afe-56cd-9482-28384699a049@oracle.com
    Fixes: 6bda666a03f0 ("hugepages: fold find_or_alloc_pages into huge_no_page()")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Acked-by: Mihcla Hocko <mhocko@suse.com>
    Reviewed-by: Khalid Aziz <khalid.aziz@oracle.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53de32d0417ce8eee809283e9f8e9f2c5fc1ce60
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Sep 7 14:33:24 2018 -0700

    ima: fix showing large 'violations' or 'runtime_measurements_count'
    
    commit 1e4c8dafbb6bf72fb5eca035b861e39c5896c2b7 upstream.
    
    The 12 character temporary buffer is not necessarily long enough to hold
    a 'long' value.  Increase it.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491cd0629de3665bb5911fafd9c17dfe5fa04cf4
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Wed Sep 12 16:20:48 2018 +0300

    crypto: tcrypt - fix ghash-generic speed test
    
    commit 331351f89c36bf7d03561a28b6f64fa10a9f6f3a upstream.
    
    ghash is a keyed hash algorithm, thus setkey needs to be called.
    Otherwise the following error occurs:
    $ modprobe tcrypt mode=318 sec=1
    testing speed of async ghash-generic (ghash-generic)
    tcrypt: test  0 (   16 byte blocks,   16 bytes per update,   1 updates):
    tcrypt: hashing failed ret=-126
    
    Cc: <stable@vger.kernel.org> # 4.6+
    Fixes: 0660511c0bee ("crypto: tcrypt - Use ahash")
    Tested-by: Franck Lenormand <franck.lenormand@nxp.com>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b957cd4d7de6892a35a66c1cf7b5199aafe1b2c9
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Thu Sep 13 10:51:31 2018 +0200

    crypto: lrw - Fix out-of bounds access on counter overflow
    
    commit fbe1a850b3b1522e9fc22319ccbbcd2ab05328d2 upstream.
    
    When the LRW block counter overflows, the current implementation returns
    128 as the index to the precomputed multiplication table, which has 128
    entries. This patch fixes it to return the correct value (127).
    
    Fixes: 64470f1b8510 ("[CRYPTO] lrw: Liskov Rivest Wagner, a tweakable narrow block cipher mode")
    Cc: <stable@vger.kernel.org> # 2.6.20+
    Reported-by: Eric Biggers <ebiggers@kernel.org>
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d699af340bfdea2a3fa94210dcfe743fa09f2cdd
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu Sep 13 11:28:01 2018 +0200

    signal/GenWQE: Fix sending of SIGKILL
    
    commit 0ab93e9c99f8208c0a1a7b7170c827936268c996 upstream.
    
    The genweq_add_file and genwqe_del_file by caching current without
    using reference counting embed the assumption that a file descriptor
    will never be passed from one process to another.  It even embeds the
    assumption that the the thread that opened the file will be in
    existence when the process terminates.   Neither of which are
    guaranteed to be true.
    
    Therefore replace caching the task_struct of the opener with
    pid of the openers thread group id.  All the knowledge of the
    opener is used for is as the target of SIGKILL and a SIGKILL
    will kill the entire process group.
    
    Rename genwqe_force_sig to genwqe_terminate, remove it's unncessary
    signal argument, update it's ownly caller, and use kill_pid
    instead of force_sig.
    
    The work force_sig does in changing signal handling state is not
    relevant to SIGKILL sent as SEND_SIG_PRIV.  The exact same processess
    will be killed just with less work, and less confusion.  The work done
    by force_sig is really only needed for handling syncrhonous
    exceptions.
    
    It will still be possible to cause genwqe_device_remove to wait
    8 seconds by passing a file descriptor to another process but
    the possible user after free is fixed.
    
    Fixes: eaf4722d4645 ("GenWQE Character device and DDCB queue")
    Cc: stable@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Frank Haverkamp <haver@linux.vnet.ibm.com>
    Cc: Joerg-Stephan Vogt <jsvogt@de.ibm.com>
    Cc: Michael Jung <mijung@gmx.net>
    Cc: Michael Ruettger <michael@ibmra.de>
    Cc: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
    Cc: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Cc: Eberhard S. Amann <esa@linux.vnet.ibm.com>
    Cc: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
    Cc: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a38f3a8260c9346c1144dd4cb7c7c5e83e705dd
Author: Bin Meng <bmeng.cn@gmail.com>
Date:   Wed Sep 26 08:14:01 2018 -0700

    PCI: Add Device IDs for Intel GPU "spurious interrupt" quirk
    
    commit d0c9606b31a21028fb5b753c8ad79626292accfd upstream.
    
    Add Device IDs to the Intel GPU "spurious interrupt" quirk table.
    
    For these devices, unplugging the VGA cable and plugging it in again causes
    spurious interrupts from the IGD.  Linux eventually disables the interrupt,
    but of course that disables any other devices sharing the interrupt.
    
    The theory is that this is a VGA BIOS defect: it should have disabled the
    IGD interrupt but failed to do so.
    
    See f67fd55fa96f ("PCI: Add quirk for still enabled interrupts on Intel
    Sandy Bridge GPUs") and 7c82126a94e6 ("PCI: Add new ID for Intel GPU
    "spurious interrupt" quirk") for some history.
    
    [bhelgaas: See link below for discussion about how to fix this more
    generically instead of adding device IDs for every new Intel GPU.  I hope
    this is the last patch to add device IDs.]
    
    Link: https://lore.kernel.org/linux-pci/1537974841-29928-1-git-send-email-bmeng.cn@gmail.com
    Signed-off-by: Bin Meng <bmeng.cn@gmail.com>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org      # v3.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ef899b3284315f17ae2c8295d17f05ac4ef03a9
Author: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
Date:   Tue Oct 9 10:20:25 2018 -0700

    EDAC, skx_edac: Fix logical channel intermediate decoding
    
    commit 8f18973877204dc8ca4ce1004a5d28683b9a7086 upstream.
    
    The code "lchan = (lchan << 1) | ~lchan" for logical channel
    intermediate decoding is wrong. The wrong intermediate decoding
    result is {0xffffffff, 0xfffffffe}.
    
    Fix it by replacing '~' with '!'. The correct intermediate
    decoding result is {0x1, 0x2}.
    
    Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    CC: Aristeu Rozanski <aris@redhat.com>
    CC: Mauro Carvalho Chehab <mchehab@kernel.org>
    CC: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20181009172025.18594-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2afa597ff52cddad9f6aba94a81b03eb7de7cdd
Author: Tony Luck <tony.luck@intel.com>
Date:   Fri Sep 28 14:39:34 2018 -0700

    EDAC, {i7core,sb,skx}_edac: Fix uncorrected error counting
    
    commit 432de7fd7630c84ad24f1c2acd1e3bb4ce3741ca upstream.
    
    The count of errors is picked up from bits 52:38 of the machine check
    bank status register. But this is the count of *corrected* errors. If an
    uncorrected error is being logged, the h/w sets this field to 0. Which
    means that when edac_mc_handle_error() is called, the EDAC core will
    carefully add zero to the appropriate uncorrected error counts.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    [ Massage commit message. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: stable@vger.kernel.org
    Cc: Aristeu Rozanski <aris@redhat.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180928213934.19890-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd0ee8a4221b2f8baceedc4bec987485f63fa29c
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Oct 19 17:01:33 2018 -0300

    HID: hiddev: fix potential Spectre v1
    
    commit f11274396a538b31bc010f782e05c2ce3f804c13 upstream.
    
    uref->usage_index can be indirectly controlled by userspace, hence leading
    to a potential exploitation of the Spectre variant 1 vulnerability.
    
    This field is used as an array index by the hiddev_ioctl_usage() function,
    when 'cmd' is either HIDIOCGCOLLECTIONINDEX, HIDIOCGUSAGES or
    HIDIOCSUSAGES.
    
    For cmd == HIDIOCGCOLLECTIONINDEX case, uref->usage_index is compared to
    field->maxusage and then used as an index to dereference field->usage
    array. The same thing happens to the cmd == HIDIOC{G,S}USAGES cases, where
    uref->usage_index is checked against an array maximum value and then it is
    used as an index in an array.
    
    This is a summary of the HIDIOCGCOLLECTIONINDEX case, which matches the
    traditional Spectre V1 first load:
    
            copy_from_user(uref, user_arg, sizeof(*uref))
            if (uref->usage_index >= field->maxusage)
                    goto inval;
            i = field->usage[uref->usage_index].collection_index;
            return i;
    
    This patch fixes this by sanitizing field uref->usage_index before using it
    to index field->usage (HIDIOCGCOLLECTIONINDEX) or field->value in
    HIDIOC{G,S}USAGES arrays, thus, avoiding speculation in the first load.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Breno Leitao <leitao@debian.org>
    v2: Contemplate cmd == HIDIOC{G,S}USAGES case
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e30869fa3298c54750d418d57b6f1995cef7bad
Author: Wang Shilong <wshilong@ddn.com>
Date:   Wed Oct 3 12:19:21 2018 -0400

    ext4: propagate error from dquot_initialize() in EXT4_IOC_FSSETXATTR
    
    commit 182a79e0c17147d2c2d3990a9a7b6b58a1561c7a upstream.
    
    We return most failure of dquota_initialize() except
    inode evict, this could make a bit sense, for example
    we allow file removal even quota files are broken?
    
    But it dosen't make sense to allow setting project
    if quota files etc are broken.
    
    Signed-off-by: Wang Shilong <wshilong@ddn.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c196200e6fad222c78caf32da421b8ae4283761
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Tue Oct 2 21:18:45 2018 -0400

    ext4: initialize retries variable in ext4_da_write_inline_data_begin()
    
    commit 625ef8a3acd111d5f496d190baf99d1a815bd03e upstream.
    
    Variable retries is not initialized in ext4_da_write_inline_data_begin()
    which can lead to nondeterministic number of retries in case we hit
    ENOSPC. Initialize retries to zero as we do everywhere else.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Fixes: bc0ca9df3b2a ("ext4: retry allocation when inline->extent conversion failed")
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b347ab6ee3c018c3007cb87fc4a8b1e4dd285e0
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Oct 13 00:19:13 2018 -0400

    gfs2_meta: ->mount() can get NULL dev_name
    
    commit 3df629d873f8683af6f0d34dfc743f637966d483 upstream.
    
    get in sync with mount_bdev() handling of the same
    
    Reported-by: syzbot+c54f8e94e6bba03b04e9@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2613e75968a07109ab1a1c4feca1afa493729aaa
Author: Jan Kara <jack@suse.cz>
Date:   Fri Oct 5 18:44:40 2018 -0400

    jbd2: fix use after free in jbd2_log_do_checkpoint()
    
    commit ccd3c4373eacb044eb3832966299d13d2631f66f upstream.
    
    The code cleaning transaction's lists of checkpoint buffers has a bug
    where it increases bh refcount only after releasing
    journal->j_list_lock. Thus the following race is possible:
    
    CPU0                                    CPU1
    jbd2_log_do_checkpoint()
                                            jbd2_journal_try_to_free_buffers()
                                              __journal_try_to_free_buffer(bh)
      ...
      while (transaction->t_checkpoint_io_list)
      ...
        if (buffer_locked(bh)) {
    
    <-- IO completes now, buffer gets unlocked -->
    
          spin_unlock(&journal->j_list_lock);
                                                spin_lock(&journal->j_list_lock);
                                                __jbd2_journal_remove_checkpoint(jh);
                                                spin_unlock(&journal->j_list_lock);
                                              try_to_free_buffers(page);
          get_bh(bh) <-- accesses freed bh
    
    Fix the problem by grabbing bh reference before unlocking
    journal->j_list_lock.
    
    Fixes: dc6e8d669cf5 ("jbd2: don't call get_bh() before calling __jbd2_journal_remove_checkpoint()")
    Fixes: be1158cc615f ("jbd2: fold __process_buffer() into jbd2_log_do_checkpoint()")
    Reported-by: syzbot+7f4a27091759e2fe7453@syzkaller.appspotmail.com
    CC: stable@vger.kernel.org
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b85c6659a7f76048f060e714a8dce2d5e4e647ec
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 3 19:31:44 2018 +0200

    ASoC: intel: skylake: Add missing break in skl_tplg_get_token()
    
    commit 9c80c5a8831471e0a3e139aad1b0d4c0fdc50b2f upstream.
    
    skl_tplg_get_token() misses a break in the big switch() block for
    SKL_TKN_U8_CORE_ID entry.
    Spotted nicely by -Wimplicit-fallthrough compiler option.
    
    Fixes: 6277e83292a2 ("ASoC: Intel: Skylake: Parse vendor tokens to build module data")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e63a7f25cc85d3d3e174b9b0e3489ebb7eaf4ab
Author: Alexander Duyck <alexander.h.duyck@linux.intel.com>
Date:   Tue Sep 25 13:53:02 2018 -0700

    libnvdimm: Hold reference on parent while scheduling async init
    
    commit b6eae0f61db27748606cc00dafcfd1e2c032f0a5 upstream.
    
    Unlike asynchronous initialization in the core we have not yet associated
    the device with the parent, and as such the device doesn't hold a reference
    to the parent.
    
    In order to resolve that we should be holding a reference on the parent
    until the asynchronous initialization has completed.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 4d88a97aa9e8 ("libnvdimm: ...base ... infrastructure")
    Signed-off-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6b45bc40bd118afacbbbb47f17727ce00c6d7f0
Author: Stefan Nuernberger <snu@amazon.com>
Date:   Mon Sep 17 19:46:53 2018 +0200

    net/ipv4: defensive cipso option parsing
    
    commit 076ed3da0c9b2f88d9157dbe7044a45641ae369e upstream.
    
    commit 40413955ee26 ("Cipso: cipso_v4_optptr enter infinite loop") fixed
    a possible infinite loop in the IP option parsing of CIPSO. The fix
    assumes that ip_options_compile filtered out all zero length options and
    that no other one-byte options beside IPOPT_END and IPOPT_NOOP exist.
    While this assumption currently holds true, add explicit checks for zero
    length and invalid length options to be safe for the future. Even though
    ip_options_compile should have validated the options, the introduction of
    new one-byte options can still confuse this code without the additional
    checks.
    
    Signed-off-by: Stefan Nuernberger <snu@amazon.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Simon Veith <sveith@amazon.de>
    Cc: stable@vger.kernel.org
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4579824bf9b8981aca6902e09eabb50ac4c88ef4
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Sat Oct 13 09:46:08 2018 +0300

    iwlwifi: mvm: check return value of rs_rate_from_ucode_rate()
    
    commit 3d71c3f1f50cf309bd20659422af549bc784bfff upstream.
    
    The rs_rate_from_ucode_rate() function may return -EINVAL if the rate
    is invalid, but none of the callsites check for the error, potentially
    making us access arrays with index IWL_RATE_INVALID, which is larger
    than the arrays, causing an out-of-bounds access.  This will trigger
    KASAN warnings, such as the one reported in the bugzilla issue
    mentioned below.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=200659
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37ef739a0aed98228e7e31c6465c6719f736a878
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Thu Oct 18 10:19:29 2018 -0600

    usbip:vudc: BUG kmalloc-2048 (Not tainted): Poison overwritten
    
    commit e28fd56ad5273be67d0fae5bedc7e1680e729952 upstream.
    
    In rmmod path, usbip_vudc does platform_device_put() twice once from
    platform_device_unregister() and then from put_vudc_device().
    
    The second put results in:
    
    BUG kmalloc-2048 (Not tainted): Poison overwritten error or
    BUG: KASAN: use-after-free in kobject_put+0x1e/0x230 if KASAN is
    enabled.
    
    [  169.042156] calling  init+0x0/0x1000 [usbip_vudc] @ 1697
    [  169.042396] =============================================================================
    [  169.043678] probe of usbip-vudc.0 returned 1 after 350 usecs
    [  169.044508] BUG kmalloc-2048 (Not tainted): Poison overwritten
    [  169.044509] -----------------------------------------------------------------------------
    ...
    [  169.057849] INFO: Freed in device_release+0x2b/0x80 age=4223 cpu=3 pid=1693
    [  169.057852]  kobject_put+0x86/0x1b0
    [  169.057853]  0xffffffffc0c30a96
    [  169.057855]  __x64_sys_delete_module+0x157/0x240
    
    Fix it to call platform_device_del() instead and let put_vudc_device() do
    the platform_device_put().
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8eca5196991e19d7b948bd739d40dddf437932cb
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sat Oct 6 22:12:32 2018 +0200

    libertas: don't set URB_ZERO_PACKET on IN USB transfer
    
    commit 6528d88047801b80d2a5370ad46fb6eff2f509e0 upstream.
    
    The USB core gets rightfully upset:
    
      usb 1-1: BOGUS urb flags, 240 --> 200
      WARNING: CPU: 0 PID: 60 at drivers/usb/core/urb.c:503 usb_submit_urb+0x2f8/0x3ed
      Modules linked in:
      CPU: 0 PID: 60 Comm: kworker/0:3 Not tainted 4.19.0-rc6-00319-g5206d00a45c7 #39
      Hardware name: OLPC XO/XO, BIOS OLPC Ver 1.00.01 06/11/2014
      Workqueue: events request_firmware_work_func
      EIP: usb_submit_urb+0x2f8/0x3ed
      Code: 75 06 8b 8f 80 00 00 00 8d 47 78 89 4d e4 89 55 e8 e8 35 1c f6 ff 8b 55 e8 56 52 8b 4d e4 51 50 68 e3 ce c7 c0 e8 ed 18 c6 ff <0f> 0b 83 c4 14 80 7d ef 01 74 0a 80 7d ef 03 0f 85 b8 00 00 00 8b
      EAX: 00000025 EBX: ce7d4980 ECX: 00000000 EDX: 00000001
      ESI: 00000200 EDI: ce7d8800 EBP: ce7f5ea8 ESP: ce7f5e70
      DS: 007b ES: 007b FS: 0000 GS: 00e0 SS: 0068 EFLAGS: 00210292
      CR0: 80050033 CR2: 00000000 CR3: 00e80000 CR4: 00000090
      Call Trace:
       ? if_usb_fw_timeo+0x64/0x64
       __if_usb_submit_rx_urb+0x85/0xe6
       ? if_usb_fw_timeo+0x64/0x64
       if_usb_submit_rx_urb_fwload+0xd/0xf
       if_usb_prog_firmware+0xc0/0x3db
       ? _request_firmware+0x54/0x47b
       ? _request_firmware+0x89/0x47b
       ? if_usb_probe+0x412/0x412
       lbs_fw_loaded+0x55/0xa6
       ? debug_smp_processor_id+0x12/0x14
       helper_firmware_cb+0x3c/0x3f
       request_firmware_work_func+0x37/0x6f
       process_one_work+0x164/0x25a
       worker_thread+0x1c4/0x284
       kthread+0xec/0xf1
       ? cancel_delayed_work_sync+0xf/0xf
       ? kthread_create_on_node+0x1a/0x1a
       ret_from_fork+0x2e/0x38
      ---[ end trace 3ef1e3b2dd53852f ]---
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00893f46a2bd62f56640abf9b2be0757e23646e9
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Oct 1 07:57:42 2018 +0200

    xen: make xen_qlock_wait() nestable
    
    commit a856531951dc8094359dfdac21d59cee5969c18e upstream.
    
    xen_qlock_wait() isn't safe for nested calls due to interrupts. A call
    of xen_qlock_kick() might be ignored in case a deeper nesting level
    was active right before the call of xen_poll_irq():
    
    CPU 1:                                   CPU 2:
    spin_lock(lock1)
                                             spin_lock(lock1)
                                             -> xen_qlock_wait()
                                                -> xen_clear_irq_pending()
                                                Interrupt happens
    spin_unlock(lock1)
    -> xen_qlock_kick(CPU 2)
    spin_lock_irqsave(lock2)
                                             spin_lock_irqsave(lock2)
                                             -> xen_qlock_wait()
                                                -> xen_clear_irq_pending()
                                                   clears kick for lock1
                                                -> xen_poll_irq()
    spin_unlock_irq_restore(lock2)
    -> xen_qlock_kick(CPU 2)
                                                wakes up
                                             spin_unlock_irq_restore(lock2)
                                             IRET
                                               resumes in xen_qlock_wait()
                                               -> xen_poll_irq()
                                               never wakes up
    
    The solution is to disable interrupts in xen_qlock_wait() and not to
    poll for the irq in case xen_qlock_wait() is called in nmi context.
    
    Cc: stable@vger.kernel.org
    Cc: Waiman.Long@hp.com
    Cc: peterz@infradead.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95f5d10f99b4968007373501f2b47eb923abf861
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Oct 1 07:57:42 2018 +0200

    xen: fix race in xen_qlock_wait()
    
    commit 2ac2a7d4d9ff4e01e36f9c3d116582f6f655ab47 upstream.
    
    In the following situation a vcpu waiting for a lock might not be
    woken up from xen_poll_irq():
    
    CPU 1:                CPU 2:                      CPU 3:
    takes a spinlock
                          tries to get lock
                          -> xen_qlock_wait()
    frees the lock
    -> xen_qlock_kick(cpu2)
                            -> xen_clear_irq_pending()
    
    takes lock again
                                                      tries to get lock
                                                      -> *lock = _Q_SLOW_VAL
                            -> *lock == _Q_SLOW_VAL ?
                            -> xen_poll_irq()
    frees the lock
    -> xen_qlock_kick(cpu3)
    
    And cpu 2 will sleep forever.
    
    This can be avoided easily by modifying xen_qlock_wait() to call
    xen_poll_irq() only if the related irq was not pending and to call
    xen_clear_irq_pending() only if it was pending.
    
    Cc: stable@vger.kernel.org
    Cc: Waiman.Long@hp.com
    Cc: peterz@infradead.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c29b0cc6378d29b04602772c7bd3fa9a7cacc73a
Author: Vasilis Liaskovitis <vliaskovitis@suse.com>
Date:   Mon Oct 15 15:25:08 2018 +0200

    xen/blkfront: avoid NULL blkfront_info dereference on device removal
    
    commit f92898e7f32e3533bfd95be174044bc349d416ca upstream.
    
    If a block device is hot-added when we are out of grants,
    gnttab_grant_foreign_access fails with -ENOSPC (log message "28
    granting access to ring page") in this code path:
    
      talk_to_blkback ->
            setup_blkring ->
                    xenbus_grant_ring ->
                            gnttab_grant_foreign_access
    
    and the failing path in talk_to_blkback sets the driver_data to NULL:
    
     destroy_blkring:
            blkif_free(info, 0);
    
            mutex_lock(&blkfront_mutex);
            free_info(info);
            mutex_unlock(&blkfront_mutex);
    
            dev_set_drvdata(&dev->dev, NULL);
    
    This results in a NULL pointer BUG when blkfront_remove and blkif_free
    try to access the failing device's NULL struct blkfront_info.
    
    Cc: stable@vger.kernel.org # 4.5 and later
    Signed-off-by: Vasilis Liaskovitis <vliaskovitis@suse.com>
    Reviewed-by: Roger Pau Monné <roger.pau@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a5bc211dbbb34ec2aa2133b87adcc6991776a25
Author: Dr. Greg Wettstein <greg@wind.enjellic.com>
Date:   Mon Sep 17 18:53:33 2018 -0400

    tpm: Restore functionality to xen vtpm driver.
    
    commit e487a0f52301293152a6f8c4e217f2a11dd808e3 upstream.
    
    Functionality of the xen-tpmfront driver was lost secondary to
    the introduction of xenbus multi-page support in commit ccc9d90a9a8b
    ("xenbus_client: Extend interface to support multi-page ring").
    
    In this commit pointer to location of where the shared page address
    is stored was being passed to the xenbus_grant_ring() function rather
    then the address of the shared page itself. This resulted in a situation
    where the driver would attach to the vtpm-stubdom but any attempt
    to send a command to the stub domain would timeout.
    
    A diagnostic finding for this regression is the following error
    message being generated when the xen-tpmfront driver probes for a
    device:
    
    <3>vtpm vtpm-0: tpm_transmit: tpm_send: error -62
    
    <3>vtpm vtpm-0: A TPM error (-62) occurred attempting to determine
    the timeouts
    
    This fix is relevant to all kernels from 4.1 forward which is the
    release in which multi-page xenbus support was introduced.
    
    Daniel De Graaf formulated the fix by code inspection after the
    regression point was located.
    
    Fixes: ccc9d90a9a8b ("xenbus_client: Extend interface to support multi-page ring")
    Signed-off-by: Dr. Greg Wettstein <greg@enjellic.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    [boris: Updated commit message, added Fixes tag]
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: stable@vger.kernel.org # v4.1+
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>

commit 9b4cb632e1af21d1fe02047e13b1022d50747a73
Author: Joe Jin <joe.jin@oracle.com>
Date:   Tue Oct 16 15:21:16 2018 -0700

    xen-swiotlb: use actually allocated size on check physical continuous
    
    commit 7250f422da0480d8512b756640f131b9b893ccda upstream.
    
    xen_swiotlb_{alloc,free}_coherent() allocate/free memory based on the
    order of the pages and not size argument (bytes). This is inconsistent with
    range_straddles_page_boundary and memset which use the 'size' value,
    which may lead to not exchanging memory with Xen (range_straddles_page_boundary()
    returned true). And then the call to xen_swiotlb_free_coherent() would
    actually try to exchange the memory with Xen, leading to the kernel
    hitting an BUG (as the hypercall returned an error).
    
    This patch fixes it by making the 'size' variable be of the same size
    as the amount of memory allocated.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Joe Jin <joe.jin@oracle.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Christoph Helwig <hch@lst.de>
    Cc: Dongli Zhang <dongli.zhang@oracle.com>
    Cc: John Sobecki <john.sobecki@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit add34b8660faaa1f128c357fc38e05eebe809e2c
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Aug 7 12:48:49 2018 +0200

    ARM: dts: exynos: Mark 1 GHz CPU OPP as suspend OPP on Exynos5250
    
    commit 645b23da6f8b47f295fa87051335d41d139717a5 upstream.
    
    1 GHz CPU OPP is the default boot value for the Exynos5250 SOC, so mark it
    as suspend OPP. This fixes suspend/resume on Samsung Exynos5250 Snow
    Chomebook, which was broken since switching to generic cpufreq-dt driver
    in v4.3.
    
    Cc: <stable@vger.kernel.org> # 4.3.x: cd6f55457eb4: ARM: dts: exynos: Remove "cooling-{min|max}-level" for CPU nodes
    Cc: <stable@vger.kernel.org> # 4.3.x: 672f33198bee: arm: dts: exynos: Add missing cooling device properties for CPUs
    Cc: <stable@vger.kernel.org> # 4.3.x
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c0996cd5a271a5880b81ffa1a57db6f32daed5f
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Aug 7 12:48:48 2018 +0200

    ARM: dts: exynos: Convert exynos5250.dtsi to opp-v2 bindings
    
    commit eb9e16d8573e243f8175647f851eb5085dbe97a4 upstream.
    
    Convert Exynos5250 to OPP-v2 bindings. This is a preparation to add proper
    support for suspend operation point, which cannot be marked in opp-v1.
    
    Cc: <stable@vger.kernel.org> # 4.3.x: cd6f55457eb4: ARM: dts: exynos: Remove "cooling-{min|max}-level" for CPU nodes
    Cc: <stable@vger.kernel.org> # 4.3.x: 672f33198bee: arm: dts: exynos: Add missing cooling device properties for CPUs
    Cc: <stable@vger.kernel.org> # 4.3.x
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 744ed1c1673fd15e2ca1830f667a73014cfb8f55
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri May 25 16:01:53 2018 +0530

    arm: dts: exynos: Add missing cooling device properties for CPUs
    
    commit 672f33198bee21ee91e6af2cb8f67cfc8bc97ec1 upstream.
    
    The cooling device properties, like "#cooling-cells" and
    "dynamic-power-coefficient", should either be present for all the CPUs
    of a cluster or none. If these are present only for a subset of CPUs of
    a cluster then things will start falling apart as soon as the CPUs are
    brought online in a different order. For example, this will happen
    because the operating system looks for such properties in the CPU node
    it is trying to bring up, so that it can register a cooling device.
    
    Add such missing properties.
    
    Fix other missing properties (clocks, OPP, clock latency) as well to
    make it all work.
    
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c33c25d23b5896c7bd690afed067a6e6fa53a9
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri Feb 9 14:28:01 2018 +0530

    ARM: dts: exynos: Remove "cooling-{min|max}-level" for CPU nodes
    
    commit cd6f55457eb449a388e793abd676e3a5b73510bc upstream.
    
    The "cooling-min-level" and "cooling-max-level" properties are not
    parsed by any part of the kernel currently and the max cooling state of
    a CPU cooling device is found by referring to the cpufreq table instead.
    
    Remove the unused properties from the CPU nodes.
    
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 430c63454a7f215ce4133a72cd0b87c5656ff347
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Aug 11 23:33:34 2018 +0200

    ALSA: hda: Check the non-cached stream buffers more explicitly
    
    [ Upstream commit 78c9be61c3a5cd9e2439fd27a5ffad73a81958c7 ]
    
    Introduce a new flag, uc_buffer, to indicate that the controller
    requires the non-cached pages for stream buffers, either as a
    chip-specific requirement or specified via snoop=0 option.
    This improves the code-readability.
    
    Also, this patch fixes the incorrect behavior for C-Media chip where
    the stream buffers were never handled as non-cached due to the check
    of driver_type even if you pass snoop=0 option.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0362b434cb0718fb1b6a1445d8047da3d1c505a
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Wed Aug 29 23:32:44 2018 +0200

    dmaengine: dma-jz4780: Return error if not probed from DT
    
    [ Upstream commit 54f919a04cf221bc1601d1193682d4379dacacbd ]
    
    The driver calls clk_get() with the clock name set to NULL, which means
    that the driver could only work when probed from devicetree. From now
    on, we explicitly require the driver to be probed from devicetree.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Tested-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba277fec4cc5d2227438958e52d3132f8b6afaf3
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Sep 3 20:02:46 2018 +0200

    signal: Always deliver the kernel's SIGKILL and SIGSTOP to a pid namespace init
    
    [ Upstream commit 3597dfe01d12f570bc739da67f857fd222a3ea66 ]
    
    Instead of playing whack-a-mole and changing SEND_SIG_PRIV to
    SEND_SIG_FORCED throughout the kernel to ensure a pid namespace init
    gets signals sent by the kernel, stop allowing a pid namespace init to
    ignore SIGKILL or SIGSTOP sent by the kernel.  A pid namespace init is
    only supposed to be able to ignore signals sent from itself and
    children with SIG_DFL.
    
    Fixes: 921cf9f63089 ("signals: protect cinit from unblocked SIG_DFL signals")
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93feaa02a89b86546adcde75a017fdf36f2a988e
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Sep 10 10:30:45 2018 -0700

    scsi: lpfc: Correct soft lockup when running mds diagnostics
    
    [ Upstream commit 0ef01a2d95fd62bb4f536e7ce4d5e8e74b97a244 ]
    
    When running an mds diagnostic that passes frames with the switch, soft
    lockups are detected. The driver is in a CQE processing loop and has
    sufficient amount of traffic that it never exits the ring processing routine,
    thus the "lockup".
    
    Cap the number of elements in the work processing routine to 64 elements. This
    ensures that the cpu will be given up and the handler reschedule to process
    additional items.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2274c76f8ea5aff6ddf6cca52b5b56d088bef73
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Aug 16 09:39:41 2018 +0200

    uio: ensure class is registered before devices
    
    [ Upstream commit ae61cf5b9913027c6953a79ed3894da4f47061bd ]
    
    When both uio and the uio drivers are built in the kernel, it is possible
    for a driver to register devices before the uio class is registered.
    
    This may result in a NULL pointer dereference later on in
    get_device_parent() when accessing the class glue_dirs spinlock.
    
    The trace looks like that:
    
    Unable to handle kernel NULL pointer dereference at virtual address 00000140
    [...]
    [<ffff0000089cc234>] _raw_spin_lock+0x14/0x48
    [<ffff0000084f56bc>] device_add+0x154/0x6a0
    [<ffff0000084f5e48>] device_create_groups_vargs+0x120/0x128
    [<ffff0000084f5edc>] device_create+0x54/0x60
    [<ffff0000086e72c0>] __uio_register_device+0x120/0x4a8
    [<ffff000008528b7c>] jaguar2_pci_probe+0x2d4/0x558
    [<ffff0000083fc18c>] local_pci_probe+0x3c/0xb8
    [<ffff0000083fd81c>] pci_device_probe+0x11c/0x180
    [<ffff0000084f88bc>] driver_probe_device+0x22c/0x2d8
    [<ffff0000084f8a24>] __driver_attach+0xbc/0xc0
    [<ffff0000084f69fc>] bus_for_each_dev+0x4c/0x98
    [<ffff0000084f81b8>] driver_attach+0x20/0x28
    [<ffff0000084f7d08>] bus_add_driver+0x1b8/0x228
    [<ffff0000084f93c0>] driver_register+0x60/0xf8
    [<ffff0000083fb918>] __pci_register_driver+0x40/0x48
    
    Return EPROBE_DEFER in that case so the driver can register the device
    later.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 479cd3e8ad91098db194dc995c7567fb480dd289
Author: Waiman Long <longman@redhat.com>
Date:   Fri Sep 14 14:53:32 2018 -0400

    driver/dma/ioat: Call del_timer_sync() without holding prep_lock
    
    [ Upstream commit cfb03be6c7e8a1591285849c361d67b09f5149f7 ]
    
    The following lockdep splat was observed:
    
    [ 1222.241750] ======================================================
    [ 1222.271301] WARNING: possible circular locking dependency detected
    [ 1222.301060] 4.16.0-10.el8+5.x86_64+debug #1 Not tainted
    [ 1222.326659] ------------------------------------------------------
    [ 1222.356565] systemd-shutdow/1 is trying to acquire lock:
    [ 1222.382660]  ((&ioat_chan->timer)){+.-.}, at: [<00000000f71e1a28>] del_timer_sync+0x5/0xf0
    [ 1222.422928]
    [ 1222.422928] but task is already holding lock:
    [ 1222.451743]  (&(&ioat_chan->prep_lock)->rlock){+.-.}, at: [<000000008ea98b12>] ioat_shutdown+0x86/0x100 [ioatdma]
       :
    [ 1223.524987] Chain exists of:
    [ 1223.524987]   (&ioat_chan->timer) --> &(&ioat_chan->cleanup_lock)->rlock --> &(&ioat_chan->prep_lock)->rlock
    [ 1223.524987]
    [ 1223.594082]  Possible unsafe locking scenario:
    [ 1223.594082]
    [ 1223.622630]        CPU0                    CPU1
    [ 1223.645080]        ----                    ----
    [ 1223.667404]   lock(&(&ioat_chan->prep_lock)->rlock);
    [ 1223.691535]                                lock(&(&ioat_chan->cleanup_lock)->rlock);
    [ 1223.728657]                                lock(&(&ioat_chan->prep_lock)->rlock);
    [ 1223.765122]   lock((&ioat_chan->timer));
    [ 1223.784095]
    [ 1223.784095]  *** DEADLOCK ***
    [ 1223.784095]
    [ 1223.813492] 4 locks held by systemd-shutdow/1:
    [ 1223.834677]  #0:  (reboot_mutex){+.+.}, at: [<0000000056d33456>] SYSC_reboot+0x10f/0x300
    [ 1223.873310]  #1:  (&dev->mutex){....}, at: [<00000000258dfdd7>] device_shutdown+0x1c8/0x660
    [ 1223.913604]  #2:  (&dev->mutex){....}, at: [<0000000068331147>] device_shutdown+0x1d6/0x660
    [ 1223.954000]  #3:  (&(&ioat_chan->prep_lock)->rlock){+.-.}, at: [<000000008ea98b12>] ioat_shutdown+0x86/0x100 [ioatdma]
    
    In the ioat_shutdown() function:
    
            spin_lock_bh(&ioat_chan->prep_lock);
            set_bit(IOAT_CHAN_DOWN, &ioat_chan->state);
            del_timer_sync(&ioat_chan->timer);
            spin_unlock_bh(&ioat_chan->prep_lock);
    
    According to the synchronization rule for the del_timer_sync() function,
    the caller must not hold locks which would prevent completion of the
    timer's handler.
    
    The timer structure has its own lock that manages its synchronization.
    Setting the IOAT_CHAN_DOWN bit should prevent other CPUs from
    trying to use that device anyway, there is probably no need to call
    del_timer_sync() while holding the prep_lock. So the del_timer_sync()
    call is now moved outside of the prep_lock critical section to prevent
    the circular lock dependency.
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae893bc61c0f55f49b4b9cdf9edb89197e5c84b8
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Tue Sep 4 17:18:57 2018 +0200

    usb: chipidea: Prevent unbalanced IRQ disable
    
    [ Upstream commit 8b97d73c4d72a2abf58f8e49062a7ee1e5f1334e ]
    
    The ChipIdea IRQ is disabled before scheduling the otg work and
    re-enabled on otg work completion. However if the job is already
    scheduled we have to undo the effect of disable_irq int order to
    balance the IRQ disable-depth value.
    
    Fixes: be6b0c1bd0be ("usb: chipidea: using one inline function to cover queue work operations")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffa426d68b5b12429aa14187f311d9313716eebb
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Wed Sep 12 11:59:30 2018 +0300

    crypto: caam - fix implicit casts in endianness helpers
    
    [ Upstream commit aae733a3f46f5ef338fbdde26e14cbb205a23de0 ]
    
    Fix the following sparse endianness warnings:
    
    drivers/crypto/caam/regs.h:95:1: sparse: incorrect type in return expression (different base types) @@    expected unsigned int @@    got restricted __le32unsigned int @@
    drivers/crypto/caam/regs.h:95:1:    expected unsigned int
    drivers/crypto/caam/regs.h:95:1:    got restricted __le32 [usertype] <noident>
    drivers/crypto/caam/regs.h:95:1: sparse: incorrect type in return expression (different base types) @@    expected unsigned int @@    got restricted __be32unsigned int @@
    drivers/crypto/caam/regs.h:95:1:    expected unsigned int
    drivers/crypto/caam/regs.h:95:1:    got restricted __be32 [usertype] <noident>
    
    drivers/crypto/caam/regs.h:92:1: sparse: cast to restricted __le32
    drivers/crypto/caam/regs.h:92:1: sparse: cast to restricted __be32
    
    Fixes: 261ea058f016 ("crypto: caam - handle core endianness != caam endianness")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2048b787ca652e26412ae1be0549d38414f089a1
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Sep 20 13:17:46 2018 -0600

    coresight: etb10: Fix handling of perf mode
    
    [ Upstream commit 987d1e8dcd370d96029a3d76a0031b043c4a69ae ]
    
    If the ETB is already enabled in sysfs mode, the ETB reports
    success even if a perf mode is requested. Fix this by checking
    the requested mode.
    
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8433138c41b421900a5a4bb4caa5c589cea3878
Author: Tonghao Zhang <xiangxia.m.yue@gmail.com>
Date:   Mon Sep 24 07:00:41 2018 -0700

    PCI/MSI: Warn and return error if driver enables MSI/MSI-X twice
    
    [ Upstream commit 4c1ef72e9b71a19fb405ebfcd37c0a5e16fa44ca ]
    
    It is a serious driver defect to enable MSI or MSI-X more than once.  Doing
    so may panic the kernel as in the stack trace below:
    
      Call Trace:
        sysfs_add_one+0xa5/0xd0
        create_dir+0x7c/0xe0
        sysfs_create_subdir+0x1c/0x20
        internal_create_group+0x6d/0x290
        sysfs_create_groups+0x4a/0xa0
        populate_msi_sysfs+0x1cd/0x210
        pci_enable_msix+0x31c/0x3e0
        igbuio_pci_open+0x72/0x300 [igb_uio]
        uio_open+0xcc/0x120 [uio]
        chrdev_open+0xa1/0x1e0
        [...]
        do_sys_open+0xf3/0x1f0
        SyS_open+0x1e/0x20
        system_call_fastpath+0x16/0x1b
        ---[ end trace 11042e2848880209 ]---
        Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: ffffffffa056b4fa
    
    We want to keep the WARN_ON() and stack trace so the driver can be fixed,
    but we can avoid the kernel panic by returning an error.  We may still get
    warnings like this:
    
      Call Trace:
        pci_enable_msix+0x3c9/0x3e0
        igbuio_pci_open+0x72/0x300 [igb_uio]
        uio_open+0xcc/0x120 [uio]
        chrdev_open+0xa1/0x1e0
        [...]
        do_sys_open+0xf3/0x1f0
        SyS_open+0x1e/0x20
        system_call_fastpath+0x16/0x1b
        ------------[ cut here ]------------
        WARNING: at fs/sysfs/dir.c:526 sysfs_add_one+0xa5/0xd0()
        sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:03.0/0000:01:00.1/msi_irqs'
    
    Signed-off-by: Tonghao Zhang <xiangxia.m.yue@gmail.com>
    [bhelgaas: changelog, fix patch whitespace, remove !!]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e1fabddcfcf1256f5805d3f2bcb89575e4f6683
Author: Shaohua Li <shli@fb.com>
Date:   Mon Oct 1 18:36:36 2018 -0700

    MD: fix invalid stored role for a disk
    
    [ Upstream commit d595567dc4f0c1d90685ec1e2e296e2cad2643ac ]
    
    If we change the number of array's device after device is removed from array,
    then add the device back to array, we can see that device is added as active
    role instead of spare which we expected.
    
    Please see the below link for details:
    https://marc.info/?l=linux-raid&m=153736982015076&w=2
    
    This is caused by that we prefer to use device's previous role which is
    recorded by saved_raid_disk, but we should respect the new number of
    conf->raid_disks since it could be changed after device is removed.
    
    Reported-by: Gioh Kim <gi-oh.kim@profitbricks.com>
    Tested-by: Gioh Kim <gi-oh.kim@profitbricks.com>
    Acked-by: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44760d8aa8a45cf726ca683f93db4973756b82fd
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Oct 2 01:34:44 2018 -0400

    ext4: fix argument checking in EXT4_IOC_MOVE_EXT
    
    [ Upstream commit f18b2b83a727a3db208308057d2c7945f368e625 ]
    
    If the starting block number of either the source or destination file
    exceeds the EOF, EXT4_IOC_MOVE_EXT should return EINVAL.
    
    Also fixed the helper function mext_check_coverage() so that if the
    logical block is beyond EOF, make it return immediately, instead of
    looping until the block number wraps all the away around.  This takes
    long enough that if there are multiple threads trying to do pound on
    an the same inode doing non-sensical things, it can end up triggering
    the kernel's soft lockup detector.
    
    Reported-by: syzbot+c61979f6f2cba5cb3c06@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9f5a3d1139eab05be6e665726528300c2c216c5
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Mon Sep 10 22:12:49 2018 +0200

    usb: gadget: udc: atmel: handle at91sam9rl PMC
    
    [ Upstream commit bb80e4fa57eb75ebd64ae9be4155da6d12c1a997 ]
    
    The at91sam9rl PMC is not quite the same as the at91sam9g45 one and now has
    its own compatible string. Add support for that.
    
    Fixes: 217bace8e548 ("ARM: dts: fix PMC compatible")
    Acked-by: Cristian Birsan <cristian.birsan@microchip.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b049a3ba40d56b85da5b48c3e825133aa9d0e2b
Author: Jorgen Hansen <jhansen@vmware.com>
Date:   Fri Sep 21 00:31:05 2018 -0700

    VMCI: Resource wildcard match fixed
    
    [ Upstream commit 11924ba5e671d6caef1516923e2bd8c72929a3fe ]
    
    When adding a VMCI resource, the check for an existing entry
    would ignore that the new entry could be a wildcard. This could
    result in multiple resource entries that would match a given
    handle. One disastrous outcome of this is that the
    refcounting used to ensure that delayed callbacks for VMCI
    datagrams have run before the datagram is destroyed can be
    wrong, since the refcount could be increased on the duplicate
    entry. This in turn leads to a use after free bug. This issue
    was discovered by Hangbin Liu using KASAN and syzkaller.
    
    Fixes: bc63dedb7d46 ("VMCI: resource object implementation")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Adit Ranadive <aditr@vmware.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Signed-off-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e269ca1835c62536f3d7e92ea9859bd7fce7daf6
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Thu Aug 30 16:40:05 2018 +0200

    tpm: suppress transmit cmd error logs when TPM 1.2 is disabled/deactivated
    
    [ Upstream commit 0d6d0d62d9505a9816716aa484ebd0b04c795063 ]
    
    For TPM 1.2 chips the system setup utility allows to set the TPM device in
    one of the following states:
    
      * Active: Security chip is functional
      * Inactive: Security chip is visible, but is not functional
      * Disabled: Security chip is hidden and is not functional
    
    When choosing the "Inactive" state, the TPM 1.2 device is enumerated and
    registered, but sending TPM commands fail with either TPM_DEACTIVATED or
    TPM_DISABLED depending if the firmware deactivated or disabled the TPM.
    
    Since these TPM 1.2 error codes don't have special treatment, inactivating
    the TPM leads to a very noisy kernel log buffer that shows messages like
    the following:
    
      tpm_tis 00:05: 1.2 TPM (device-id 0x0, rev-id 78)
      tpm tpm0: A TPM error (6) occurred attempting to read a pcr value
      tpm tpm0: TPM is disabled/deactivated (0x6)
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting to read a pcr value
      ima: No TPM chip found, activating TPM-bypass! (rc=6)
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting get random
    
    Let's just suppress error log messages for the TPM_{DEACTIVATED,DISABLED}
    return codes, since this is expected when the TPM 1.2 is set to Inactive.
    
    In that case the kernel log is cleaner and less confusing for users, i.e:
    
      tpm_tis 00:05: 1.2 TPM (device-id 0x0, rev-id 78)
      tpm tpm0: TPM is disabled/deactivated (0x6)
      ima: No TPM chip found, activating TPM-bypass! (rc=6)
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a48a3a51cfd66e6cec4335419b1787435a5306a3
Author: Denis Drozdov <denisd@mellanox.com>
Date:   Thu Oct 11 22:33:57 2018 +0300

    IB/ipoib: Clear IPCB before icmp_send
    
    [ Upstream commit 4d6e4d12da2c308f8f976d3955c45ee62539ac98 ]
    
    IPCB should be cleared before icmp_send, since it may contain data from
    previous layers and the data could be misinterpreted as ip header options,
    which later caused the ihl to be set to an invalid value and resulted in
    the following stack corruption:
    
    [ 1083.031512] ib0: packet len 57824 (> 2048) too long to send, dropping
    [ 1083.031843] ib0: packet len 37904 (> 2048) too long to send, dropping
    [ 1083.032004] ib0: packet len 4040 (> 2048) too long to send, dropping
    [ 1083.032253] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.032481] ib0: packet len 23960 (> 2048) too long to send, dropping
    [ 1083.033149] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.033439] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.033700] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.034124] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.034387] ==================================================================
    [ 1083.034602] BUG: KASAN: stack-out-of-bounds in __ip_options_echo+0xf08/0x1310
    [ 1083.034798] Write of size 4 at addr ffff880353457c5f by task kworker/u16:0/7
    [ 1083.034990]
    [ 1083.035104] CPU: 7 PID: 7 Comm: kworker/u16:0 Tainted: G           O      4.19.0-rc5+ #1
    [ 1083.035316] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu2 04/01/2014
    [ 1083.035573] Workqueue: ipoib_wq ipoib_cm_skb_reap [ib_ipoib]
    [ 1083.035750] Call Trace:
    [ 1083.035888]  dump_stack+0x9a/0xeb
    [ 1083.036031]  print_address_description+0xe3/0x2e0
    [ 1083.036213]  kasan_report+0x18a/0x2e0
    [ 1083.036356]  ? __ip_options_echo+0xf08/0x1310
    [ 1083.036522]  __ip_options_echo+0xf08/0x1310
    [ 1083.036688]  icmp_send+0x7b9/0x1cd0
    [ 1083.036843]  ? icmp_route_lookup.constprop.9+0x1070/0x1070
    [ 1083.037018]  ? netif_schedule_queue+0x5/0x200
    [ 1083.037180]  ? debug_show_all_locks+0x310/0x310
    [ 1083.037341]  ? rcu_dynticks_curr_cpu_in_eqs+0x85/0x120
    [ 1083.037519]  ? debug_locks_off+0x11/0x80
    [ 1083.037673]  ? debug_check_no_obj_freed+0x207/0x4c6
    [ 1083.037841]  ? check_flags.part.27+0x450/0x450
    [ 1083.037995]  ? debug_check_no_obj_freed+0xc3/0x4c6
    [ 1083.038169]  ? debug_locks_off+0x11/0x80
    [ 1083.038318]  ? skb_dequeue+0x10e/0x1a0
    [ 1083.038476]  ? ipoib_cm_skb_reap+0x2b5/0x650 [ib_ipoib]
    [ 1083.038642]  ? netif_schedule_queue+0xa8/0x200
    [ 1083.038820]  ? ipoib_cm_skb_reap+0x544/0x650 [ib_ipoib]
    [ 1083.038996]  ipoib_cm_skb_reap+0x544/0x650 [ib_ipoib]
    [ 1083.039174]  process_one_work+0x912/0x1830
    [ 1083.039336]  ? wq_pool_ids_show+0x310/0x310
    [ 1083.039491]  ? lock_acquire+0x145/0x3a0
    [ 1083.042312]  worker_thread+0x87/0xbb0
    [ 1083.045099]  ? process_one_work+0x1830/0x1830
    [ 1083.047865]  kthread+0x322/0x3e0
    [ 1083.050624]  ? kthread_create_worker_on_cpu+0xc0/0xc0
    [ 1083.053354]  ret_from_fork+0x3a/0x50
    
    For instance __ip_options_echo is failing to proceed with invalid srr and
    optlen passed from another layer via IPCB
    
    [  762.139568] IPv4: __ip_options_echo rr=0 ts=0 srr=43 cipso=0
    [  762.139720] IPv4: ip_options_build: IPCB 00000000f3cd969e opt 000000002ccb3533
    [  762.139838] IPv4: __ip_options_echo in srr: optlen 197 soffset 84
    [  762.139852] IPv4: ip_options_build srr=0 is_frag=0 rr_needaddr=0 ts_needaddr=0 ts_needtime=0 rr=0 ts=0
    [  762.140269] ==================================================================
    [  762.140713] IPv4: __ip_options_echo rr=0 ts=0 srr=0 cipso=0
    [  762.141078] BUG: KASAN: stack-out-of-bounds in __ip_options_echo+0x12ec/0x1680
    [  762.141087] Write of size 4 at addr ffff880353457c7f by task kworker/u16:0/7
    
    Signed-off-by: Denis Drozdov <denisd@mellanox.com>
    Reviewed-by: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Feras Daoud <ferasda@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2537f9adf5119d895df5d4623cec84c0aa675be7
Author: Parav Pandit <parav@mellanox.com>
Date:   Sun Oct 7 12:12:40 2018 +0300

    RDMA/core: Do not expose unsupported counters
    
    [ Upstream commit 0f6ef65d1c6ec8deb5d0f11f86631ec4cfe8f22e ]
    
    If the provider driver (such as rdma_rxe) doesn't support pma counters,
    avoid exposing its directory similar to optional hw_counters directory.
    If core fails to read the PMA counter, return an error so that user can
    retry later if needed.
    
    Fixes: 35c4cbb17811 ("IB/core: Create get_perf_mad function in sysfs.c")
    Reported-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b18de4e8bdc55f461c03d51d91f2887254a9b1e6
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Sat Oct 6 13:34:21 2018 -0500

    scsi: megaraid_sas: fix a missing-check bug
    
    [ Upstream commit 47db7873136a9c57c45390a53b57019cf73c8259 ]
    
    In megasas_mgmt_compat_ioctl_fw(), to handle the structure
    compat_megasas_iocpacket 'cioc', a user-space structure megasas_iocpacket
    'ioc' is allocated before megasas_mgmt_ioctl_fw() is invoked to handle
    the packet. Since the two data structures have different fields, the data
    is copied from 'cioc' to 'ioc' field by field. In the copy process,
    'sense_ptr' is prepared if the field 'sense_len' is not null, because it
    will be used in megasas_mgmt_ioctl_fw(). To prepare 'sense_ptr', the
    user-space data 'ioc->sense_off' and 'cioc->sense_off' are copied and
    saved to kernel-space variables 'local_sense_off' and 'user_sense_off'
    respectively. Given that 'ioc->sense_off' is also copied from
    'cioc->sense_off', 'local_sense_off' and 'user_sense_off' should have the
    same value. However, 'cioc' is in the user space and a malicious user can
    race to change the value of 'cioc->sense_off' after it is copied to
    'ioc->sense_off' but before it is copied to 'user_sense_off'. By doing
    so, the attacker can inject different values into 'local_sense_off' and
    'user_sense_off'. This can cause undefined behavior in the following
    execution, because the two variables are supposed to be same.
    
    This patch enforces a check on the two kernel variables 'local_sense_off'
    and 'user_sense_off' to make sure they are the same after the copy. In
    case they are not, an error code EINVAL will be returned.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57589690d423150d4464d86b2f2be60aff93804e
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Tue Oct 16 16:31:25 2018 +1100

    scsi: esp_scsi: Track residual for PIO transfers
    
    [ Upstream commit fd47d919d0c336e7c22862b51ee94927ffea227a ]
    
    If a target disconnects during a PIO data transfer the command may fail
    when the target reconnects:
    
    scsi host1: DMA length is zero!
    scsi host1: cur adr[04380000] len[00000000]
    
    The scsi bus is then reset. This happens because the residual reached
    zero before the transfer was completed.
    
    The usual residual calculation relies on the Transfer Count registers.
    That works for DMA transfers but not for PIO transfers. Fix the problem
    by storing the PIO transfer residual and using that to correctly
    calculate bytes_sent.
    
    Fixes: 6fe07aaffbf0 ("[SCSI] m68k: new mac_esp scsi driver")
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f413ec098fdc5c417ed67f2eda4b0a439907186
Author: Michal Hocko <mhocko@suse.com>
Date:   Thu Oct 18 10:56:17 2018 +0200

    cgroup, netclassid: add a preemption point to write_classid
    
    [ Upstream commit a90e90b7d55e789c71d85b946ffb5c1ab2f137ca ]
    
    We have seen a customer complaining about soft lockups on !PREEMPT
    kernel config with 4.4 based kernel
    
    [1072141.435366] NMI watchdog: BUG: soft lockup - CPU#21 stuck for 22s! [systemd:1]
    [1072141.444090] Modules linked in: mpt3sas raid_class binfmt_misc af_packet 8021q garp mrp stp llc xfs libcrc32c bonding iscsi_ibft iscsi_boot_sysfs msr ext4 crc16 jbd2 mbcache cdc_ether usbnet mii joydev hid_generic usbhid intel_rapl x86_pkg_temp_thermal intel_powerclamp coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ipmi_ssif mgag200 i2c_algo_bit ttm ipmi_devintf drbg ixgbe drm_kms_helper vxlan ansi_cprng ip6_udp_tunnel drm aesni_intel udp_tunnel aes_x86_64 iTCO_wdt syscopyarea ptp xhci_pci lrw iTCO_vendor_support pps_core gf128mul ehci_pci glue_helper sysfillrect mdio pcspkr sb_edac ablk_helper cryptd ehci_hcd sysimgblt xhci_hcd fb_sys_fops edac_core mei_me lpc_ich ses usbcore enclosure dca mfd_core ipmi_si mei i2c_i801 scsi_transport_sas usb_common ipmi_msghandler shpchp fjes wmi processor button acpi_pad btrfs xor raid6_pq sd_mod crc32c_intel megaraid_sas sg dm_multipath dm_mod scsi_dh_rdac scsi_dh_emc scsi_dh_alua scsi_mod md_mod autofs4
    [1072141.444146] Supported: Yes
    [1072141.444149] CPU: 21 PID: 1 Comm: systemd Not tainted 4.4.121-92.80-default #1
    [1072141.444150] Hardware name: LENOVO Lenovo System x3650 M5 -[5462P4U]- -[5462P4U]-/01GR451, BIOS -[TCE136H-2.70]- 06/13/2018
    [1072141.444151] task: ffff880191bd0040 ti: ffff880191bd4000 task.ti: ffff880191bd4000
    [1072141.444153] RIP: 0010:[<ffffffff815229f9>]  [<ffffffff815229f9>] update_classid_sock+0x29/0x40
    [1072141.444157] RSP: 0018:ffff880191bd7d58  EFLAGS: 00000286
    [1072141.444158] RAX: ffff883b177cb7c0 RBX: 0000000000000000 RCX: 0000000000000000
    [1072141.444159] RDX: 00000000000009c7 RSI: ffff880191bd7d5c RDI: ffff8822e29bb200
    [1072141.444160] RBP: ffff883a72230980 R08: 0000000000000101 R09: 0000000000000000
    [1072141.444161] R10: 0000000000000008 R11: f000000000000000 R12: ffffffff815229d0
    [1072141.444162] R13: 0000000000000000 R14: ffff881fd0a47ac0 R15: ffff880191bd7f28
    [1072141.444163] FS:  00007f3e2f1eb8c0(0000) GS:ffff882000340000(0000) knlGS:0000000000000000
    [1072141.444164] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [1072141.444165] CR2: 00007f3e2f200000 CR3: 0000001ffea4e000 CR4: 00000000001606f0
    [1072141.444166] Stack:
    [1072141.444166]  ffffffa800000246 00000000000009c7 ffffffff8121d583 ffff8818312a05c0
    [1072141.444168]  ffff8818312a1100 ffff880197c3b280 ffff881861422858 ffffffffffffffea
    [1072141.444170]  ffffffff81522b1c ffffffff81d0ca20 ffff8817fa17b950 ffff883fdd8121e0
    [1072141.444171] Call Trace:
    [1072141.444179]  [<ffffffff8121d583>] iterate_fd+0x53/0x80
    [1072141.444182]  [<ffffffff81522b1c>] write_classid+0x4c/0x80
    [1072141.444187]  [<ffffffff8111328b>] cgroup_file_write+0x9b/0x100
    [1072141.444193]  [<ffffffff81278bcb>] kernfs_fop_write+0x11b/0x150
    [1072141.444198]  [<ffffffff81201566>] __vfs_write+0x26/0x100
    [1072141.444201]  [<ffffffff81201bed>] vfs_write+0x9d/0x190
    [1072141.444203]  [<ffffffff812028c2>] SyS_write+0x42/0xa0
    [1072141.444207]  [<ffffffff815f58c3>] entry_SYSCALL_64_fastpath+0x1e/0xca
    [1072141.445490] DWARF2 unwinder stuck at entry_SYSCALL_64_fastpath+0x1e/0xca
    
    If a cgroup has many tasks with many open file descriptors then we would
    end up in a large loop without any rescheduling point throught the
    operation. Add cond_resched once per task.
    
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 771d03e4483e3837ab541737ac44eba00e54194b
Author: Martin Willi <martin@strongswan.org>
Date:   Wed Aug 22 09:39:52 2018 +0200

    ath10k: schedule hardware restart if WMI command times out
    
    [ Upstream commit a9911937e7d332761e8c4fcbc7ba0426bdc3956f ]
    
    When running in AP mode, ath10k sometimes suffers from TX credit
    starvation. The issue is hard to reproduce and shows up once in a
    few days, but has been repeatedly seen with QCA9882 and a large
    range of firmwares, including 10.2.4.70.67.
    
    Once the module is in this state, TX credits are never replenished,
    which results in "SWBA overrun" errors, as no beacons can be sent.
    Even worse, WMI commands run in a timeout while holding the conf
    mutex for three seconds each, making any further operations slow
    and the whole system unresponsive.
    
    The firmware/driver never recovers from that state automatically,
    and triggering TX flush or warm restarts won't work over WMI. So
    issue a hardware restart if a WMI command times out due to missing
    TX credits. This implies a connectivity outage of about 1.4s in AP
    mode, but brings back the interface and the whole system to a usable
    state. WMI command timeouts have not been seen in absent of this
    specific issue, so taking such drastic actions seems legitimate.
    
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4444593f461c8817a245d8a548fce4b971d29748
Author: Sebastian Basierski <sebastianx.basierski@intel.com>
Date:   Thu Aug 9 11:45:40 2018 +0200

    ixgbevf: VF2VF TCP RSS
    
    [ Upstream commit 7fb94bd58dd6650a0158e68d414e185077d8b57a ]
    
    While VF2VF with RSS communication, RSS Type were wrongly recognized
    and RSS hash was not calculated as it should be. Packets was
    distributed on various queues by accident.
    This commit fixes that behaviour and causes proper RSS Type recognition.
    
    Signed-off-by: Sebastian Basierski <sebastianx.basierski@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 989335821b0eb73bb84bcbb590936e59c3c19941
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Aug 30 08:23:38 2018 -0700

    pinctrl: ssbi-gpio: Fix pm8xxx_pin_config_get() to be compliant
    
    [ Upstream commit b432414b996d32a1bd9afe2bd595bd5729c1477f ]
    
    If you look at "pinconf-groups" in debugfs for ssbi-gpio you'll notice
    it looks like nonsense.
    
    The problem is fairly well described in commit 1cf86bc21257 ("pinctrl:
    qcom: spmi-gpio: Fix pmic_gpio_config_get() to be compliant") and
    commit 05e0c828955c ("pinctrl: msm: Fix msm_config_group_get() to be
    compliant"), but it was pointed out that ssbi-gpio has the same
    problem.  Let's fix it there too.
    
    Fixes: b4c45fe974bc ("pinctrl: qcom: ssbi: Family A gpio & mpp drivers")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b95f64912366bbcd54422b6bc68d8f6dc689dbf
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Aug 30 08:23:39 2018 -0700

    pinctrl: spmi-mpp: Fix pmic_mpp_config_get() to be compliant
    
    [ Upstream commit 0d5b476f8f57fcb06c45fe27681ac47254f63fd2 ]
    
    If you look at "pinconf-groups" in debugfs for ssbi-mpp you'll notice
    it looks like nonsense.
    
    The problem is fairly well described in commit 1cf86bc21257 ("pinctrl:
    qcom: spmi-gpio: Fix pmic_gpio_config_get() to be compliant") and
    commit 05e0c828955c ("pinctrl: msm: Fix msm_config_group_get() to be
    compliant"), but it was pointed out that ssbi-mpp has the same
    problem.  Let's fix it there too.
    
    NOTE: in case it's helpful to someone reading this, the way to tell
    whether to do the -EINVAL or not is to look at the PCONFDUMP for a
    given attribute.  If the last element (has_arg) is false then you need
    to do the -EINVAL trick.
    
    ALSO NOTE: it seems unlikely that the values returned when we try to
    get PIN_CONFIG_BIAS_PULL_UP will actually be printed since "has_arg"
    is false for that one, but I guess it's still fine to return different
    values so I kept doing that.  It seems like another driver (ssbi-gpio)
    uses a custom attribute (PM8XXX_QCOM_PULL_UP_STRENGTH) for something
    similar so maybe a future change should do that here too.
    
    Fixes: cfb24f6ebd38 ("pinctrl: Qualcomm SPMI PMIC MPP pin controller driver")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbd7095badc3db1022d68613f9de30723576a2a6
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Thu Aug 30 17:58:52 2018 -0700

    pinctrl: qcom: spmi-mpp: Fix drive strength setting
    
    [ Upstream commit 89c68b102f13f123aaef22b292526d6b92501334 ]
    
    It looks like we parse the drive strength setting here, but never
    actually write it into the hardware to update it. Parse the setting and
    then write it at the end of the pinconf setting function so that it
    actually sticks in the hardware.
    
    Fixes: 0e948042c420 ("pinctrl: qcom: spmi-mpp: Implement support for sink mode")
    Cc: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b915343462e66399284ce308475479dd29aae0e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Aug 27 09:45:44 2018 +0200

    ACPI / LPSS: Add alternative ACPI HIDs for Cherry Trail DMA controllers
    
    [ Upstream commit 240714061c58e6b1abfb3322398a7634151c06cb ]
    
    Bay and Cherry Trail DSTDs represent a different set of devices depending
    on which OS the device think it is booting. One set of decices for Windows
    and another set of devices for Android which targets the Android-x86 Linux
    kernel fork (which e.g. used to have its own display driver instead of
    using the i915 driver).
    
    Which set of devices we are actually going to get is out of our control,
    this is controlled by the ACPI OSID variable, which gets either set through
    an EFI setup option, or sometimes is autodetected. So we need to support
    both.
    
    This commit adds support for the 80862286 and 808622C0 ACPI HIDs which we
    get for the first resp. second DMA controller on Cherry Trail devices when
    OSID is set to Android.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c8b1db819e6948f27d1aa03c111965b3db73362
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Sep 11 19:20:40 2018 +0900

    kprobes: Return error if we fail to reuse kprobe instead of BUG_ON()
    
    [ Upstream commit 819319fc93461c07b9cdb3064f154bd8cfd48172 ]
    
    Make reuse_unused_kprobe() to return error code if
    it fails to reuse unused kprobe for optprobe instead
    of calling BUG_ON().
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naveen N . Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/153666124040.21306.14150398706331307654.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5b19a43871343bedf6524a1e69c2e4c8970b9a0
Author: Arend van Spriel <arend.vanspriel@broadcom.com>
Date:   Wed Sep 5 09:48:58 2018 +0200

    brcmfmac: fix for proper support of 160MHz bandwidth
    
    [ Upstream commit 330994e8e8ec5d0b269a5265e6032b37e29aa336 ]
    
    Decoding of firmware channel information was not complete for 160MHz
    support. This resulted in the following warning:
    
      WARNING: CPU: 2 PID: 2222 at .../broadcom/brcm80211/brcmutil/d11.c:196
            brcmu_d11ac_decchspec+0x2e/0x100 [brcmutil]
      Modules linked in: brcmfmac(O) brcmutil(O) sha256_generic cfg80211 ...
      CPU: 2 PID: 2222 Comm: kworker/2:0 Tainted: G           O
      4.17.0-wt-testing-x64-00002-gf1bed50 #1
      Hardware name: Dell Inc. Latitude E6410/07XJP9, BIOS A07 02/15/2011
      Workqueue: events request_firmware_work_func
      RIP: 0010:brcmu_d11ac_decchspec+0x2e/0x100 [brcmutil]
      RSP: 0018:ffffc90000047bd0 EFLAGS: 00010206
      RAX: 000000000000e832 RBX: ffff8801146fe910 RCX: ffff8801146fd3c0
      RDX: 0000000000002800 RSI: 0000000000000070 RDI: ffffc90000047c30
      RBP: ffffc90000047bd0 R08: 0000000000000000 R09: ffffffffa0798c80
      R10: ffff88012bca55e0 R11: ffff880110a4ea00 R12: ffff8801146f8000
      R13: ffffc90000047c30 R14: ffff8801146fe930 R15: ffff8801138e02e0
      FS:  0000000000000000(0000) GS:ffff88012bc80000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f18ce8b8070 CR3: 000000000200a003 CR4: 00000000000206e0
      Call Trace:
       brcmf_setup_wiphybands+0x212/0x780 [brcmfmac]
       brcmf_cfg80211_attach+0xae2/0x11a0 [brcmfmac]
       brcmf_attach+0x1fc/0x4b0 [brcmfmac]
       ? __kmalloc+0x13c/0x1c0
       brcmf_pcie_setup+0x99b/0xe00 [brcmfmac]
       brcmf_fw_request_done+0x16a/0x1f0 [brcmfmac]
       request_firmware_work_func+0x36/0x60
       process_one_work+0x146/0x350
       worker_thread+0x4a/0x3b0
       kthread+0x102/0x140
       ? process_one_work+0x350/0x350
       ? kthread_bind+0x20/0x20
       ret_from_fork+0x35/0x40
      Code: 66 90 0f b7 07 55 48 89 e5 89 c2 88 47 02 88 47 03 66 81 e2 00 38
            66 81 fa 00 18 74 6e 66 81 fa 00 20 74 39 66 81 fa 00 10 74 14 <0f>
            0b 66 25 00 c0 74 20 66 3d 00 c0 75 20 c6 47 04 01 5d c3 66
      ---[ end trace 550c46682415b26d ]---
      brcmfmac: brcmf_construct_chaninfo: Ignoring unexpected firmware channel 50
    
    This patch adds the missing stuff to properly handle this.
    
    Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
    Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
    Reviewed-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bcc01ae1a4a08200b895a30b587c417fe851f22
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Sep 20 01:58:18 2018 +0000

    pinctrl: qcom: spmi-mpp: Fix err handling of pmic_mpp_set_mux
    
    [ Upstream commit 69f8455f6cc78fa6cdf80d0105d7a748106271dc ]
    
    'ret' should be returned while pmic_mpp_write_mode_ctl fails.
    
    Fixes: 0e948042c420 ("pinctrl: qcom: spmi-mpp: Implement support for sink mode")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24395d641d0297ac89e832a5d699f58ab1b73684
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Sep 16 16:22:47 2018 +0100

    x86: boot: Fix EFI stub alignment
    
    [ Upstream commit 9c1442a9d039a1a3302fa93e9a11001c5f23b624 ]
    
    We currently align the end of the compressed image to a multiple of
    16.  However, the PE-COFF header included in the EFI stub says that
    the file alignment is 32 bytes, and when adding an EFI signature to
    the file it must first be padded to this alignment.
    
    sbsigntool commands warn about this:
    
      warning: file-aligned section .text extends beyond end of file
      warning: checksum areas are greater than image size. Invalid section table?
    
    Worse, pesign -at least when creating a detached signature- uses the
    hash of the unpadded file, resulting in an invalid signature if
    padding is required.
    
    Avoid both these problems by increasing alignment to 32 bytes when
    CONFIG_EFI_STUB is enabled.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21a5ff20aff5f7a9bf610b8e0b178807cac376bd
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Tue Sep 4 21:50:57 2018 +0400

    Bluetooth: btbcm: Add entry for BCM4335C0 UART bluetooth
    
    [ Upstream commit a357ea098c9605f60d92a66a9073f56ce25726da ]
    
    This patch adds the device ID for the AMPAK AP6335 combo module used
    in the 1st generation WeTek Hub Android/LibreELEC HTPC box. The WiFI
    chip identifies itself as BCM4339, while Bluetooth identifies itself
    as BCM4335 (rev C0):
    
    ```
    [    4.864248] Bluetooth: hci0: BCM: chip id 86
    [    4.866388] Bluetooth: hci0: BCM: features 0x2f
    [    4.889317] Bluetooth: hci0: BCM4335C0
    [    4.889332] Bluetooth: hci0: BCM4335C0 (003.001.009) build 0000
    [    9.778383] Bluetooth: hci0: BCM4335C0 (003.001.009) build 0268
    ```
    
    Output from hciconfig:
    
    ```
    hci0:   Type: Primary  Bus: UART
            BD Address: 43:39:00:00:1F:AC  ACL MTU: 1021:8  SCO MTU: 64:1
            UP RUNNING
            RX bytes:7567 acl:234 sco:0 events:386 errors:0
            TX bytes:53844 acl:77 sco:0 commands:304 errors:0
            Features: 0xbf 0xfe 0xcf 0xfe 0xdb 0xff 0x7b 0x87
            Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
            Link policy: RSWITCH SNIFF
            Link mode: SLAVE ACCEPT
            Name: 'HUB'
            Class: 0x0c0000
            Service Classes: Rendering, Capturing
            Device Class: Miscellaneous,
            HCI Version: 4.0 (0x6)  Revision: 0x10c
            LMP Version: 4.0 (0x6)  Subversion: 0x6109
            Manufacturer: Broadcom Corporation (15)
    ```
    
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36cce138cad886cab5e2d9af2ddf9248fe7e0836
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Oct 3 15:35:21 2018 +0530

    cpufreq: dt: Try freeing static OPPs only if we have added them
    
    [ Upstream commit 51c99dd2c06b234575661fa1e0a1dea6c3ef566f ]
    
    We can not call dev_pm_opp_of_cpumask_remove_table() freely anymore
    since the latest OPP core updates as that uses reference counting to
    free resources. There are cases where no static OPPs are added (using
    DT) for a platform and trying to remove the OPP table may end up
    decrementing refcount which is already zero and hence generating
    warnings.
    
    Lets track if we were able to add static OPPs or not and then only
    remove the table based on that. Some reshuffling of code is also done to
    do that.
    
    Reported-by: Niklas Cassel <niklas.cassel@linaro.org>
    Tested-by: Niklas Cassel <niklas.cassel@linaro.org>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a25ba419eaf13432f550f42daf60f686901c7726
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Thu Oct 4 18:08:08 2018 +0200

    x86/olpc: Indicate that legacy PC XO-1 platform should not register RTC
    
    [ Upstream commit d92116b800fb79a72ad26121f5011f6aa3ad94c2 ]
    
    On OLPC XO-1, the RTC is discovered via device tree from the arch
    initcall. Don't let the PC platform register another one from its device
    initcall, it's not going to work:
    
      sysfs: cannot create duplicate filename '/devices/platform/rtc_cmos'
      CPU: 0 PID: 1 Comm: swapper Not tainted 4.19.0-rc6 #12
      Hardware name: OLPC XO/XO, BIOS OLPC Ver 1.00.01 06/11/2014
      Call Trace:
       dump_stack+0x16/0x18
       sysfs_warn_dup+0x46/0x58
       sysfs_create_dir_ns+0x76/0x9b
       kobject_add_internal+0xed/0x209
       ? __schedule+0x3fa/0x447
       kobject_add+0x5b/0x66
       device_add+0x298/0x535
       ? insert_resource_conflict+0x2a/0x3e
       platform_device_add+0x14d/0x192
       ? io_delay_init+0x19/0x19
       platform_device_register+0x1c/0x1f
       add_rtc_cmos+0x16/0x31
       do_one_initcall+0x78/0x14a
       ? do_early_param+0x75/0x75
       kernel_init_freeable+0x152/0x1e0
       ? rest_init+0xa2/0xa2
       kernel_init+0x8/0xd5
       ret_from_fork+0x2e/0x38
      kobject_add_internal failed for rtc_cmos with -EEXIST, don't try to
        register things with the same name in the same directory.
      platform rtc_cmos: registered platform RTC device (no PNP device found)
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: x86-ml <x86@kernel.org>
    Link: http://lkml.kernel.org/r/20181004160808.307738-1-lkundrak@v3.sk
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ba19f9676c5b29a49962d757d2c8147a2559085
Author: Shaul Triebitz <shaul.triebitz@intel.com>
Date:   Wed Jun 6 17:20:58 2018 +0300

    iwlwifi: pcie: avoid empty free RB queue
    
    [ Upstream commit 868a1e863f95183f00809363fefba6d4f5bcd116 ]
    
    If all free RB queues are empty, the driver will never restock the
    free RB queue.  That's because the restocking happens in the Rx flow,
    and if the free queue is empty there will be no Rx.
    
    Although there's a background worker (a.k.a. allocator) allocating
    memory for RBs so that the Rx handler can restock them, the worker may
    run only after the free queue has become empty (and then it is too
    late for restocking as explained above).
    
    There is a solution for that called 'emergency': If the number of used
    RB's reaches half the amount of all RB's, the Rx handler will not wait
    for the allocator but immediately allocate memory for the used RB's
    and restock the free queue.
    
    But, since the used RB's is per queue, it may happen that the used
    RB's are spread between the queues such that the emergency check will
    fail for each of the queues
    (and still run out of RBs, causing the above symptom).
    
    To fix it, move to emergency mode if the sum of *all* used RBs (for
    all Rx queues) reaches half the amount of all RB's
    
    Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e3f33199020735d48b35d2639d1cd63c97101aa
Author: Yu Zhao <yuzhao@google.com>
Date:   Sun Sep 23 14:39:24 2018 -0600

    mmc: sdhci-pci-o2micro: Add quirk for O2 Micro dev 0x8620 rev 0x01
    
    [ Upstream commit 5169894982bb67486d93cc1e10151712bb86bcb6 ]
    
    This device reports SDHCI_CLOCK_INT_STABLE even though it's not
    ready to take SDHCI_CLOCK_CARD_EN. The symptom is that reading
    SDHCI_CLOCK_CONTROL after enabling the clock shows absence of the
    bit from the register (e.g. expecting 0x0000fa07 = 0x0000fa03 |
    SDHCI_CLOCK_CARD_EN but only observed the first operand).
    
    mmc1: Timeout waiting for hardware cmd interrupt.
    mmc1: sdhci: ============ SDHCI REGISTER DUMP ===========
    mmc1: sdhci: Sys addr:  0x00000000 | Version:  0x00000603
    mmc1: sdhci: Blk size:  0x00000000 | Blk cnt:  0x00000000
    mmc1: sdhci: Argument:  0x00000000 | Trn mode: 0x00000000
    mmc1: sdhci: Present:   0x01ff0001 | Host ctl: 0x00000001
    mmc1: sdhci: Power:     0x0000000f | Blk gap:  0x00000000
    mmc1: sdhci: Wake-up:   0x00000000 | Clock:    0x0000fa03
    mmc1: sdhci: Timeout:   0x00000000 | Int stat: 0x00000000
    mmc1: sdhci: Int enab:  0x00ff0083 | Sig enab: 0x00ff0083
    mmc1: sdhci: AC12 err:  0x00000000 | Slot int: 0x00000000
    mmc1: sdhci: Caps:      0x25fcc8bf | Caps_1:   0x00002077
    mmc1: sdhci: Cmd:       0x00000000 | Max curr: 0x005800c8
    mmc1: sdhci: Resp[0]:   0x00000000 | Resp[1]:  0x00000000
    mmc1: sdhci: Resp[2]:   0x00000000 | Resp[3]:  0x00000000
    mmc1: sdhci: Host ctl2: 0x00000008
    mmc1: sdhci: ADMA Err:  0x00000000 | ADMA Ptr: 0x00000000
    mmc1: sdhci: ============================================
    
    The problem happens during wakeup from S3. Adding a delay quirk
    after power up reliably fixes the problem.
    
    Signed-off-by: Yu Zhao <yuzhao@google.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af414f3468edb0dac689f87b17ccaee6d369a0ea
Author: Sanskriti Sharma <sansharm@redhat.com>
Date:   Tue Oct 2 10:29:10 2018 -0400

    perf strbuf: Match va_{add,copy} with va_end
    
    [ Upstream commit ce49d8436cffa9b7a6a5f110879d53e89dbc6746 ]
    
    Ensure that all code paths in strbuf_addv() call va_end() on the
    ap_saved copy that was made.
    
    Fixes the following coverity complaint:
    
      Error: VARARGS (CWE-237): [#def683]
      tools/perf/util/strbuf.c:106: missing_va_end: va_end was not called
      for "ap_saved".
    
    Signed-off-by: Sanskriti Sharma <sansharm@redhat.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Link: http://lkml.kernel.org/r/1538490554-8161-2-git-send-email-sansharm@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0af42d6754f3524eaf4d50333ce837a28727e9ee
Author: Sanskriti Sharma <sansharm@redhat.com>
Date:   Tue Oct 2 10:29:11 2018 -0400

    perf tools: Cleanup trace-event-info 'tdata' leak
    
    [ Upstream commit faedbf3fd19f2511a39397f76359e4cc6ee93072 ]
    
    Free tracing_data structure in tracing_data_get() error paths.
    
    Fixes the following coverity complaint:
    
      Error: RESOURCE_LEAK (CWE-772):
      leaked_storage: Variable "tdata" going out of scope leaks the storage
    
    Signed-off-by: Sanskriti Sharma <sansharm@redhat.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Link: http://lkml.kernel.org/r/1538490554-8161-3-git-send-email-sansharm@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 401bd18c7e419101d50ece8bd1bf23e62dfb08b3
Author: Sanskriti Sharma <sansharm@redhat.com>
Date:   Tue Oct 2 10:29:14 2018 -0400

    perf tools: Free temporary 'sys' string in read_event_files()
    
    [ Upstream commit 1e44224fb0528b4c0cc176bde2bb31e9127eb14b ]
    
    For each system in a given pevent, read_event_files() reads in a
    temporary 'sys' string.  Be sure to free this string before moving onto
    to the next system and/or leaving read_event_files().
    
    Fixes the following coverity complaints:
    
      Error: RESOURCE_LEAK (CWE-772):
    
      tools/perf/util/trace-event-read.c:343: overwrite_var: Overwriting
      "sys" in "sys = read_string()" leaks the storage that "sys" points to.
    
      tools/perf/util/trace-event-read.c:353: leaked_storage: Variable "sys"
      going out of scope leaks the storage it points to.
    
    Signed-off-by: Sanskriti Sharma <sansharm@redhat.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Link: http://lkml.kernel.org/r/1538490554-8161-6-git-send-email-sansharm@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 912d51f20c55c8b2149f7c141b3b79fa09bfeafd
Author: Thierry Reding <treding@nvidia.com>
Date:   Fri Sep 21 12:10:48 2018 +0200

    hwmon: (pwm-fan) Set fan speed to 0 on suspend
    
    [ Upstream commit 95dcd64bc5a27080beaa344edfe5bdcca3d2e7dc ]
    
    Technically this is not required because disabling the PWM should be
    enough. However, when support for atomic operations was implemented in
    the PWM subsystem, only actual changes to the PWM channel are applied
    during pwm_config(), which means that during after resume from suspend
    the old settings won't be applied.
    
    One possible solution is for the PWM driver to implement its own PM
    operations such that settings from before suspend get applied on resume.
    This has the disadvantage of completely ignoring any particular ordering
    requirements that PWM user drivers might have, so it is best to leave it
    up to the user drivers to apply the settings that they want at the
    appropriate time.
    
    Another way to solve this would be to read back the current state of the
    PWM at the time of resume. That way, in case the configuration was lost
    during suspend, applying the old settings in PWM user drivers would
    actually get them applied because they differ from the current settings.
    However, not all PWM drivers support reading the hardware state, and not
    all hardware may support it.
    
    The best workaround at this point seems to be to let PWM user drivers
    tell the PWM subsystem that the PWM is turned off by, in addition to
    disabling it, also setting the duty cycle to 0. This causes the resume
    operation to apply a configuration that is different from the current
    configuration, resulting in the proper state from before suspend getting
    restored.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fccb699cf361bace1add476a2ad02fc1df0dc4f1
Author: Janosch Frank <frankja@linux.ibm.com>
Date:   Tue Oct 2 10:57:52 2018 +0200

    s390/sthyi: Fix machine name validity indication
    
    [ Upstream commit b5130dc2224d1881f24224c0590c6d97f2168d6a ]
    
    When running as a level 3 guest with no host provided sthyi support
    sclp_ocf_cpc_name_copy() will only return zeroes. Zeroes are not a
    valid group name, so let's not indicate that the group name field is
    valid.
    
    Also the group name is not dependent on stsi, let's not return based
    on stsi before setting it.
    
    Fixes: 95ca2cb57985 ("KVM: s390: Add sthyi emulation")
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f008fce1f275c851f62a3bf2238d5f4fc27d4dc
Author: Serhey Popovych <serhe.popovych@gmail.com>
Date:   Tue Oct 9 21:21:01 2018 +0300

    tun: Consistently configure generic netdev params via rtnetlink
    
    [ Upstream commit df52eab23d703142c766ac00bdb8db19d71238d0 ]
    
    Configuring generic network device parameters on tun will fail in
    presence of IFLA_INFO_KIND attribute in IFLA_LINKINFO nested attribute
    since tun_validate() always return failure.
    
    This can be visualized with following ip-link(8) command sequences:
    
      # ip link set dev tun0 group 100
      # ip link set dev tun0 group 100 type tun
      RTNETLINK answers: Invalid argument
    
    with contrast to dummy and veth drivers:
    
      # ip link set dev dummy0 group 100
      # ip link set dev dummy0 type dummy
    
      # ip link set dev veth0 group 100
      # ip link set dev veth0 group 100 type veth
    
    Fix by returning zero in tun_validate() when @data is NULL that is
    always in case since rtnl_link_ops->maxtype is zero in tun driver.
    
    Fixes: f019a7a594d9 ("tun: Implement ip link del tunXXX")
    Signed-off-by: Serhey Popovych <serhe.popovych@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2b544ef5e0fada663a565857d688f7f61b5fa27
Author: Omar Sandoval <osandov@fb.com>
Date:   Thu Oct 11 12:20:41 2018 -0700

    swim: fix cleanup on setup error
    
    [ Upstream commit 1448a2a5360ae06f25e2edc61ae070dff5c0beb4 ]
    
    If we fail to allocate the request queue for a disk, we still need to
    free that disk, not just the previous ones. Additionally, we need to
    cleanup the previous request queues.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0915f56236d98fe73ba35fc03e00d1c76404cb8b
Author: Omar Sandoval <osandov@fb.com>
Date:   Thu Oct 11 12:20:49 2018 -0700

    ataflop: fix error handling during setup
    
    [ Upstream commit 71327f547ee3a46ec5c39fdbbd268401b2578d0e ]
    
    Move queue allocation next to disk allocation to fix a couple of issues:
    
    - If add_disk() hasn't been called, we should clear disk->queue before
      calling put_disk().
    - If we fail to allocate a request queue, we still need to put all of
      the disks, not just the ones that we allocated queues for.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81301a15a267ba132c07e01c70d5fbe91069bdfb
Author: Waiman Long <longman@redhat.com>
Date:   Thu Oct 18 21:45:17 2018 -0400

    locking/lockdep: Fix debug_locks off performance problem
    
    [ Upstream commit 9506a7425b094d2f1d9c877ed5a78f416669269b ]
    
    It was found that when debug_locks was turned off because of a problem
    found by the lockdep code, the system performance could drop quite
    significantly when the lock_stat code was also configured into the
    kernel. For instance, parallel kernel build time on a 4-socket x86-64
    server nearly doubled.
    
    Further analysis into the cause of the slowdown traced back to the
    frequent call to debug_locks_off() from the __lock_acquired() function
    probably due to some inconsistent lockdep states with debug_locks
    off. The debug_locks_off() function did an unconditional atomic xchg
    to write a 0 value into debug_locks which had already been set to 0.
    This led to severe cacheline contention in the cacheline that held
    debug_locks.  As debug_locks is being referenced in quite a few different
    places in the kernel, this greatly slow down the system performance.
    
    To prevent that trashing of debug_locks cacheline, lock_acquired()
    and lock_contended() now checks the state of debug_locks before
    proceeding. The debug_locks_off() function is also modified to check
    debug_locks before calling __debug_locks_off().
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Link: http://lkml.kernel.org/r/1539913518-15598-1-git-send-email-longman@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b110ef876eabe1c0f22c045434c09d59d65fd81
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Oct 19 21:15:26 2018 +0200

    i2c: rcar: cleanup DMA for all kinds of failure
    
    [ Upstream commit 31d86033a0749a0463ea654130b2de5c163154f1 ]
    
    DMA needs to be cleaned up not only on timeout, but on all errors where
    it has been setup before.
    
    Fixes: 73e8b0528346 ("i2c: rcar: add DMA support")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d38bd3e9a8807f06522731ec46d17b5c1bef2595
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 18 22:13:02 2018 +0900

    selftests: ftrace: Add synthetic event syntax testcase
    
    [ Upstream commit ba0e41ca81b935b958006c7120466e2217357827 ]
    
    Add a testcase to check the syntax and field types for
    synthetic_events interface.
    
    Link: http://lkml.kernel.org/r/153986838264.18251.16627517536956299922.stgit@devbox
    
    Acked-by: Shuah Khan <shuah@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a99c6f69f8cb7f96322222f9b6ff775ed230cf77
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Oct 12 19:14:58 2018 -0700

    net: qla3xxx: Remove overflowing shift statement
    
    [ Upstream commit 8c3bf9b62b667456a57aefcf1689e826df146159 ]
    
    Clang currently warns:
    
    drivers/net/ethernet/qlogic/qla3xxx.c:384:24: warning: signed shift
    result (0xF00000000) requires 37 bits to represent, but 'int' only has
    32 bits [-Wshift-overflow]
                        ((ISP_NVRAM_MASK << 16) | qdev->eeprom_cmd_data));
                          ~~~~~~~~~~~~~~ ^  ~~
    1 warning generated.
    
    The warning is certainly accurate since ISP_NVRAM_MASK is defined as
    (0x000F << 16) which is then shifted by 16, resulting in 64424509440,
    well above UINT_MAX.
    
    Given that this is the only location in this driver where ISP_NVRAM_MASK
    is shifted again, it seems likely that ISP_NVRAM_MASK was originally
    defined without a shift and during the move of the shift to the
    definition, this statement wasn't properly removed (since ISP_NVRAM_MASK
    is used in the statenent right above this). Only the maintainers can
    confirm this since this statment has been here since the driver was
    first added to the kernel.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/127
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52188404e175b2578477d000d6e595e1ca6ba99a
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Oct 16 22:25:24 2018 +0200

    x86/fpu: Remove second definition of fpu in __fpu__restore_sig()
    
    [ Upstream commit 6aa676761d4c1acfa31320e55fa1f83f3fcbbc7a ]
    
    Commit:
    
      c5bedc6847c3b ("x86/fpu: Get rid of PF_USED_MATH usage, convert it to fpu->fpstate_active")
    
    introduced the 'fpu' variable at top of __restore_xstate_sig(),
    which now shadows the other definition:
    
      arch/x86/kernel/fpu/signal.c:318:28: warning: symbol 'fpu' shadows an earlier one
      arch/x86/kernel/fpu/signal.c:271:20: originally declared here
    
    Remove the shadowed definition of 'fpu', as the two definitions are the same.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: c5bedc6847c3b ("x86/fpu: Get rid of PF_USED_MATH usage, convert it to fpu->fpstate_active")
    Link: http://lkml.kernel.org/r/20181016202525.29437-3-bigeasy@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c696b9797fb97d4540c9f7ac035722ad560622b
Author: David Miller <davem@davemloft.net>
Date:   Thu Oct 11 22:46:55 2018 -0700

    perf cpu_map: Align cpu map synthesized events properly.
    
    [ Upstream commit 0ed149cf5239cc6e7e65bf00f769e8f1e91076c0 ]
    
    The size of the resulting cpu map can be smaller than a multiple of
    sizeof(u64), resulting in SIGBUS on cpus like Sparc as the next event
    will not be aligned properly.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@intel.com>
    Fixes: 6c872901af07 ("perf cpu_map: Add cpu_map event synthesize function")
    Link: http://lkml.kernel.org/r/20181011.224655.716771175766946817.davem@davemloft.net
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2530be5401885114c0b0b634ba218b2e963063b3
Author: Song Muchun <smuchun@gmail.com>
Date:   Sun Oct 14 19:26:12 2018 +0800

    sched/fair: Fix the min_vruntime update logic in dequeue_entity()
    
    [ Upstream commit 9845c49cc9bbb317a0bc9e9cf78d8e09d54c9af0 ]
    
    The comment and the code around the update_min_vruntime() call in
    dequeue_entity() are not in agreement.
    
    >From commit:
    
      b60205c7c558 ("sched/fair: Fix min_vruntime tracking")
    
    I think that we want to update min_vruntime when a task is sleeping/migrating.
    So, the check is inverted there - fix it.
    
    Signed-off-by: Song Muchun <smuchun@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: b60205c7c558 ("sched/fair: Fix min_vruntime tracking")
    Link: http://lkml.kernel.org/r/20181014112612.2614-1-smuchun@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dc8764a316c6b714dd15bd934dc2dbbbe973113
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Oct 14 20:19:31 2018 -0700

    sparc64: Make proc_id signed.
    
    [ Upstream commit b3e1eb8e7ac9aaa283989496651d99267c4cad6c ]
    
    So that when it is unset, ie. '-1', userspace can see it
    properly.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c04e74c69338140164425abe9cd97394de9f356
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Oct 12 10:31:58 2018 -0700

    sparc: Fix single-pcr perf event counter management.
    
    [ Upstream commit cfdc3170d214046b9509183fe9b9544dc644d40b ]
    
    It is important to clear the hw->state value for non-stopped events
    when they are added into the PMU.  Otherwise when the event is
    scheduled out, we won't read the counter because HES_UPTODATE is still
    set.  This breaks 'perf stat' and similar use cases, causing all the
    events to show zero.
    
    This worked for multi-pcr because we make explicit sparc_pmu_start()
    calls in calculate_multiple_pcrs().  calculate_single_pcr() doesn't do
    this because the idea there is to accumulate all of the counter
    settings into the single pcr value.  So we have to add explicit
    hw->state handling there.
    
    Like x86, we use the PERF_HES_ARCH bit to track truly stopped events
    so that we don't accidently start them on a reload.
    
    Related to all of this, sparc_pmu_start() is missing a userpage update
    so add it.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9da255bbd10834825b4336655a51c7d73a0aa3af
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Oct 10 18:02:21 2018 +0200

    xfrm: policy: use hlist rcu variants on insert
    
    [ Upstream commit 9dffff200fd178f11dd50eb1fd8ccd0650c9284e ]
    
    bydst table/list lookups use rcu, so insertions must use rcu versions.
    
    Fixes: a7c44247f704e ("xfrm: policy: make xfrm_policy_lookup_bytype lockless")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9527bd3290b9a6b315d093c1937fe98028e02e6e
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed Oct 3 09:20:46 2018 +0200

    Revert "perf tools: Fix PMU term format max value calculation"
    
    [ Upstream commit 1b9caa10b31dda0866f4028e4bfb923fb6e4072f ]
    
    This reverts commit ac0e2cd555373ae6f8f3a3ad3fbbf5b6d1e7aaaa.
    
    Michael reported an issue with oversized terms values assignment
    and I noticed there was actually a misunderstanding of the max
    value check in the past.
    
    The above commit's changelog says:
    
      If bit 21 is set, there is parsing issues as below.
    
        $ perf stat -a -e uncore_qpi_0/event=0x200002,umask=0x8/
        event syntax error: '..pi_0/event=0x200002,umask=0x8/'
                                          \___ value too big for format, maximum is 511
    
    But there's no issue there, because the event value is distributed
    along the value defined by the format. Even if the format defines
    separated bit, the value is treated as a continual number, which
    should follow the format definition.
    
    In above case it's 9-bit value with last bit separated:
      $ cat uncore_qpi_0/format/event
      config:0-7,21
    
    Hence the value 0x200002 is correctly reported as format violation,
    because it exceeds 9 bits. It should have been 0x102 instead, which
    sets the 9th bit - the bit 21 of the format.
    
      $ perf stat -vv -a -e uncore_qpi_0/event=0x102,umask=0x8/
      Using CPUID GenuineIntel-6-2D
      ...
      ------------------------------------------------------------
      perf_event_attr:
        type                             10
        size                             112
        config                           0x200802
        sample_type                      IDENTIFIER
      ...
    
    Reported-by: Michael Petlan <mpetlan@redhat.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: ac0e2cd55537 ("perf tools: Fix PMU term format max value calculation")
    Link: http://lkml.kernel.org/r/20181003072046.29276-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6bded8904218cc838971101eb216e0446bc0e1a
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Oct 5 19:38:46 2018 -0700

    bpf: do not blindly change rlimit in reuseport net selftest
    
    [ Upstream commit 262f9d811c7608f1e74258ceecfe1fa213bdf912 ]
    
    If the current process has unlimited RLIMIT_MEMLOCK,
    we should should leave it as is.
    
    Fixes: 941ff6f11c02 ("bpf: fix rlimit in reuseport net selftest")
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c0545076348e3f6183a942664a799482ddb8f8
Author: Sai Praneeth <sai.praneeth.prakhya@intel.com>
Date:   Wed Aug 1 11:42:25 2018 -0700

    x86/speculation: Support Enhanced IBRS on future CPUs
    
    commit 706d51681d636a0c4a5ef53395ec3b803e45ed4d upstream.
    
    Future Intel processors will support "Enhanced IBRS" which is an "always
    on" mode i.e. IBRS bit in SPEC_CTRL MSR is enabled once and never
    disabled.
    
    From the specification [1]:
    
     "With enhanced IBRS, the predicted targets of indirect branches
      executed cannot be controlled by software that was executed in a less
      privileged predictor mode or on another logical processor. As a
      result, software operating on a processor with enhanced IBRS need not
      use WRMSR to set IA32_SPEC_CTRL.IBRS after every transition to a more
      privileged predictor mode. Software can isolate predictor modes
      effectively simply by setting the bit once. Software need not disable
      enhanced IBRS prior to entering a sleep state such as MWAIT or HLT."
    
    If Enhanced IBRS is supported by the processor then use it as the
    preferred spectre v2 mitigation mechanism instead of Retpoline. Intel's
    Retpoline white paper [2] states:
    
     "Retpoline is known to be an effective branch target injection (Spectre
      variant 2) mitigation on Intel processors belonging to family 6
      (enumerated by the CPUID instruction) that do not have support for
      enhanced IBRS. On processors that support enhanced IBRS, it should be
      used for mitigation instead of retpoline."
    
    The reason why Enhanced IBRS is the recommended mitigation on processors
    which support it is that these processors also support CET which
    provides a defense against ROP attacks. Retpoline is very similar to ROP
    techniques and might trigger false positives in the CET defense.
    
    If Enhanced IBRS is selected as the mitigation technique for spectre v2,
    the IBRS bit in SPEC_CTRL MSR is set once at boot time and never
    cleared. Kernel also has to make sure that IBRS bit remains set after
    VMEXIT because the guest might have cleared the bit. This is already
    covered by the existing x86_spec_ctrl_set_guest() and
    x86_spec_ctrl_restore_host() speculation control functions.
    
    Enhanced IBRS still requires IBPB for full mitigation.
    
    [1] Speculative-Execution-Side-Channel-Mitigations.pdf
    [2] Retpoline-A-Branch-Target-Injection-Mitigation.pdf
    Both documents are available at:
    https://bugzilla.kernel.org/show_bug.cgi?id=199511
    
    Originally-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tim C Chen <tim.c.chen@intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Ravi Shankar <ravi.v.shankar@intel.com>
    Link: https://lkml.kernel.org/r/1533148945-24095-1-git-send-email-sai.praneeth.prakhya@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 382a263d6c041c81ea3b57af827cddcd13061d8d
Author: He Zhe <zhe.he@windriver.com>
Date:   Tue Aug 14 23:33:42 2018 +0800

    x86/corruption-check: Fix panic in memory_corruption_check() when boot option without value is provided
    
    commit ccde460b9ae5c2bd5e4742af0a7f623c2daad566 upstream.
    
    memory_corruption_check[{_period|_size}]()'s handlers do not check input
    argument before passing it to kstrtoul() or simple_strtoull(). The argument
    would be a NULL pointer if each of the kernel parameters, without its
    value, is set in command line and thus cause the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffff73587c22 error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.18-rc8+ #2
    [    0.000000] RIP: 0010:kstrtoull+0x2/0x10
    ...
    [    0.000000] Call Trace
    [    0.000000]  ? set_corruption_check+0x21/0x49
    [    0.000000]  ? do_early_param+0x4d/0x82
    [    0.000000]  ? parse_args+0x212/0x330
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_options+0x20/0x23
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_param+0x2d/0x39
    [    0.000000]  ? setup_arch+0x2f7/0xbf4
    [    0.000000]  ? start_kernel+0x5e/0x4c2
    [    0.000000]  ? load_ucode_bsp+0x113/0x12f
    [    0.000000]  ? secondary_startup_64+0xa5/0xb0
    
    This patch adds checks to prevent the panic.
    
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: gregkh@linuxfoundation.org
    Cc: kstewart@linuxfoundation.org
    Cc: pombredanne@nexb.com
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/1534260823-87917-1-git-send-email-zhe.he@windriver.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66fe51cb35d91d75a67ec8a38caf03da95e8c191
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Tue Sep 25 14:38:55 2018 +0200

    x86/speculation: Enable cross-hyperthread spectre v2 STIBP mitigation
    
    commit 53c613fe6349994f023245519265999eed75957f upstream.
    
    STIBP is a feature provided by certain Intel ucodes / CPUs. This feature
    (once enabled) prevents cross-hyperthread control of decisions made by
    indirect branch predictors.
    
    Enable this feature if
    
    - the CPU is vulnerable to spectre v2
    - the CPU supports SMT and has SMT siblings online
    - spectre_v2 mitigation autoselection is enabled (default)
    
    After some previous discussion, this leaves STIBP on all the time, as wrmsr
    on crossing kernel boundary is a no-no. This could perhaps later be a bit
    more optimized (like disabling it in NOHZ, experiment with disabling it in
    idle, etc) if needed.
    
    Note that the synchronization of the mask manipulation via newly added
    spec_ctrl_mutex is currently not strictly needed, as the only updater is
    already being serialized by cpu_add_remove_lock, but let's make this a
    little bit more future-proof.
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc:  "WoodhouseDavid" <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc:  "SchauflerCasey" <casey.schaufler@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/nycvar.YFH.7.76.1809251438240.15880@cbobk.fhfr.pm
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edc9af2c38d38830a9d6d3fbb2e86391d4c912b6
Author: Alex Stanoev <alex@astanoev.com>
Date:   Sun Oct 28 16:55:12 2018 +0000

    ALSA: ca0106: Disable IZD on SB0570 DAC to fix audio pops
    
    commit ac237c28d5ac1b241d58b1b7b4b9fa10efb22fb5 upstream.
    
    The Creative Audigy SE (SB0570) card currently exhibits an audible pop
    whenever playback is stopped or resumed, or during silent periods of an
    audio stream. Initialise the IZD bit to the 0 to eliminate these pops.
    
    The Infinite Zero Detection (IZD) feature on the DAC causes the output
    to be shunted to Vcap after 2048 samples of silence. This discharges the
    AC coupling capacitor through the output and causes the aforementioned
    pop/click noise.
    
    The behaviour of the IZD bit is described on page 15 of the WM8768GEDS
    datasheet: "With IZD=1, applying MUTE for 1024 consecutive input samples
    will cause all outputs to be connected directly to VCAP. This also
    happens if 2048 consecutive zero input samples are applied to all 6
    channels, and IZD=0. It will be removed as soon as any channel receives
    a non-zero input". I believe the second sentence might be referring to
    IZD=1 instead of IZD=0 given the observed behaviour of the card.
    
    This change should make the DAC initialisation consistent with
    Creative's Windows driver, as this popping persists when initialising
    the card in Linux and soft rebooting into Windows, but is not present on
    a cold boot to Windows.
    
    Signed-off-by: Alex Stanoev <alex@astanoev.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe8d670a78aa6870bf158597a787d6d99ff79b8d
Author: Jeremy Cline <jcline@redhat.com>
Date:   Thu Oct 11 15:49:17 2018 -0400

    ALSA: hda - Add mic quirk for the Lenovo G50-30 (17aa:3905)
    
    commit e7bb6ad5685f05685dd8a6a5eda7bfcd14d5f95b upstream.
    
    The Lenovo G50-30, like other G50 models, has a Conexant codec that
    requires a quirk for its inverted stereo dmic.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1249364
    Reported-by: Alexander Ploumistos <alex.ploumistos@gmail.com>
    Tested-by: Alexander Ploumistos <alex.ploumistos@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c09158a2d92b93eb40e57773c87d5ec3b93b54d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 9 14:20:17 2018 +0200

    ALSA: hda - Fix headphone pin config for ASUS G751
    
    commit 5b7c5e1f4c36b99d0f694f38b9ad910f520cb7ef upstream.
    
    BIOS on ASUS G751 doesn't seem to map the headphone pin (NID 0x16)
    correctly.  Add a quirk to address it, as well as chaining to the
    previous fix for the microphone.
    
    Reported-by: Håvard <hovardslill@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f333be9a673acfc744f4f2cf9d640e77b179f8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Oct 7 09:44:17 2018 +0200

    ALSA: hda - Add quirk for ASUS G751 laptop
    
    commit 11ba6111160290ccd35562f4e05cec08942a6c4c upstream.
    
    ASUS G751 requires the extra COEF initialization to make it microphone
    working properly.
    
    Reported-and-tested-by: Håvard <hovardslill@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d35b161d487edd660dfb9759552b1e758a286de8
Author: Helge Deller <deller@gmx.de>
Date:   Fri Oct 12 22:37:46 2018 +0200

    parisc: Fix map_pages() to not overwrite existing pte entries
    
    commit 3c229b3f2dd8133f61bb81d3cb018be92f4bba39 upstream.
    
    Fix a long-existing small nasty bug in the map_pages() implementation which
    leads to overwriting already written pte entries with zero, *if* map_pages() is
    called a second time with an end address which isn't aligned on a pmd boundry.
    This happens for example if we want to remap only the text segment read/write
    in order to run alternative patching on the code. Exiting the loop when we
    reach the end address fixes this.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 662d2aef4cb1c73f2b7565dacf846f111a33ae0d
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sat Oct 6 13:11:30 2018 -0400

    parisc: Fix address in HPMC IVA
    
    commit 1138b6718ff74d2a934459643e3754423d23b5e2 upstream.
    
    Helge noticed that the address of the os_hpmc handler was not being
    correctly calculated in the hpmc macro.  As a result, PDCE_CHECK would
    fail to call os_hpmc:
    
    <Cpu2> e800009802e00000  0000000000000000  CC_ERR_CHECK_HPMC
    <Cpu2> 37000f7302e00000  8040004000000000  CC_ERR_CPU_CHECK_SUMMARY
    <Cpu2> f600105e02e00000  fffffff0f0c00000  CC_MC_HPMC_MONARCH_SELECTED
    <Cpu2> 140003b202e00000  000000000000000b  CC_ERR_HPMC_STATE_ENTRY
    <Cpu2> 5600100b02e00000  00000000000001a0  CC_MC_OS_HPMC_LEN_ERR
    <Cpu2> 5600106402e00000  fffffff0f0438e70  CC_MC_BR_TO_OS_HPMC_FAILED
    <Cpu2> e800009802e00000  0000000000000000  CC_ERR_CHECK_HPMC
    <Cpu2> 37000f7302e00000  8040004000000000  CC_ERR_CPU_CHECK_SUMMARY
    <Cpu2> 4000109f02e00000  0000000000000000  CC_MC_HPMC_INITIATED
    <Cpu2> 4000101902e00000  0000000000000000  CC_MC_MULTIPLE_HPMCS
    <Cpu2> 030010d502e00000  0000000000000000  CC_CPU_STOP
    
    The address problem can be seen by dumping the fault vector:
    
    0000000040159000 <fault_vector_20>:
        40159000:   63 6f 77 73     stb r15,-2447(dp)
        40159004:   20 63 61 6e     ldil L%b747000,r3
        40159008:   20 66 6c 79     ldil L%-1c3b3000,r3
            ...
        40159020:   08 00 02 40     nop
        40159024:   20 6e 60 02     ldil L%15d000,r3
        40159028:   34 63 00 00     ldo 0(r3),r3
        4015902c:   e8 60 c0 02     bv,n r0(r3)
        40159030:   08 00 02 40     nop
        40159034:   00 00 00 00     break 0,0
        40159038:   c0 00 70 00     bb,*< r0,sar,40159840 <fault_vector_20+0x840>
        4015903c:   00 00 00 00     break 0,0
    
    Location 40159038 should contain the physical address of os_hpmc:
    
    000000004015d000 <os_hpmc>:
        4015d000:   08 1a 02 43     copy r26,r3
        4015d004:   01 c0 08 a4     mfctl iva,r4
        4015d008:   48 85 00 68     ldw 34(r4),r5
    
    This patch moves the address setup into initialize_ivt to resolve the
    above problem.  I tested the change by dumping the HPMC entry after setup:
    
    0000000040209020:  8000240
    0000000040209024: 206a2004
    0000000040209028: 34630ac0
    000000004020902c: e860c002
    0000000040209030:  8000240
    0000000040209034: 1bdddce6
    0000000040209038:   15d000
    000000004020903c:      1a0
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aba7ddfc8cdd22907ce3a19906ef12894af9268
Author: Jan Glauber <jan.glauber@gmail.com>
Date:   Thu Oct 11 12:13:01 2018 +0200

    ipmi: Fix timer race with module unload
    
    commit 0711e8c1b4572d076264e71b0002d223f2666ed7 upstream.
    
    Please note that below oops is from an older kernel, but the same
    race seems to be present in the upstream kernel too.
    
    ---8<---
    
    The following panic was encountered during removing the ipmi_ssif
    module:
    
    [ 526.352555] Unable to handle kernel paging request at virtual address ffff000006923090
    [ 526.360464] Mem abort info:
    [ 526.363257] ESR = 0x86000007
    [ 526.366304] Exception class = IABT (current EL), IL = 32 bits
    [ 526.372221] SET = 0, FnV = 0
    [ 526.375269] EA = 0, S1PTW = 0
    [ 526.378405] swapper pgtable: 4k pages, 48-bit VAs, pgd = 000000008ae60416
    [ 526.385185] [ffff000006923090] *pgd=000000bffcffe803, *pud=000000bffcffd803, *pmd=0000009f4731a003, *pte=0000000000000000
    [ 526.396141] Internal error: Oops: 86000007 [#1] SMP
    [ 526.401008] Modules linked in: nls_iso8859_1 ipmi_devintf joydev input_leds ipmi_msghandler shpchp sch_fq_codel ib_iser rdma_cm iw_cm ib_cm ib_core iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi ip_tables x_tables autofs4 btrfs zstd_compress raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor raid6_pq libcrc32c raid1 raid0 multipath linear i2c_smbus hid_generic usbhid uas hid usb_storage ast aes_ce_blk i2c_algo_bit aes_ce_cipher qede ttm crc32_ce ptp crct10dif_ce drm_kms_helper ghash_ce syscopyarea sha2_ce sysfillrect sysimgblt pps_core fb_sys_fops sha256_arm64 sha1_ce mpt3sas qed drm raid_class ahci scsi_transport_sas libahci gpio_xlp i2c_xlp9xx aes_neon_bs aes_neon_blk crypto_simd cryptd aes_arm64 [last unloaded: ipmi_ssif]
    [ 526.468085] CPU: 125 PID: 0 Comm: swapper/125 Not tainted 4.15.0-35-generic #38~lp1775396+build.1
    [ 526.476942] Hardware name: To be filled by O.E.M. Saber/Saber, BIOS 0ACKL022 08/14/2018
    [ 526.484932] pstate: 00400009 (nzcv daif +PAN -UAO)
    [ 526.489713] pc : 0xffff000006923090
    [ 526.493198] lr : call_timer_fn+0x34/0x178
    [ 526.497194] sp : ffff000009b0bdd0
    [ 526.500496] x29: ffff000009b0bdd0 x28: 0000000000000082
    [ 526.505796] x27: 0000000000000002 x26: ffff000009515188
    [ 526.511096] x25: ffff000009515180 x24: ffff0000090f1018
    [ 526.516396] x23: ffff000009519660 x22: dead000000000200
    [ 526.521696] x21: ffff000006923090 x20: 0000000000000100
    [ 526.526995] x19: ffff809eeb466a40 x18: 0000000000000000
    [ 526.532295] x17: 000000000000000e x16: 0000000000000007
    [ 526.537594] x15: 0000000000000000 x14: 071c71c71c71c71c
    [ 526.542894] x13: 0000000000000000 x12: 0000000000000000
    [ 526.548193] x11: 0000000000000001 x10: ffff000009b0be88
    [ 526.553493] x9 : 0000000000000000 x8 : 0000000000000005
    [ 526.558793] x7 : ffff80befc1f8528 x6 : 0000000000000020
    [ 526.564092] x5 : 0000000000000040 x4 : 0000000020001b20
    [ 526.569392] x3 : 0000000000000000 x2 : ffff809eeb466a40
    [ 526.574692] x1 : ffff000006923090 x0 : ffff809eeb466a40
    [ 526.579992] Process swapper/125 (pid: 0, stack limit = 0x000000002eb50acc)
    [ 526.586854] Call trace:
    [ 526.589289] 0xffff000006923090
    [ 526.592419] expire_timers+0xc8/0x130
    [ 526.596070] run_timer_softirq+0xec/0x1b0
    [ 526.600070] __do_softirq+0x134/0x328
    [ 526.603726] irq_exit+0xc8/0xe0
    [ 526.606857] __handle_domain_irq+0x6c/0xc0
    [ 526.610941] gic_handle_irq+0x84/0x188
    [ 526.614679] el1_irq+0xe8/0x180
    [ 526.617822] cpuidle_enter_state+0xa0/0x328
    [ 526.621993] cpuidle_enter+0x34/0x48
    [ 526.625564] call_cpuidle+0x44/0x70
    [ 526.629040] do_idle+0x1b8/0x1f0
    [ 526.632256] cpu_startup_entry+0x2c/0x30
    [ 526.636174] secondary_start_kernel+0x11c/0x130
    [ 526.640694] Code: bad PC value
    [ 526.643800] ---[ end trace d020b0b8417c2498 ]---
    [ 526.648404] Kernel panic - not syncing: Fatal exception in interrupt
    [ 526.654778] SMP: stopping secondary CPUs
    [ 526.658734] Kernel Offset: disabled
    [ 526.662211] CPU features: 0x5800c38
    [ 526.665688] Memory Limit: none
    [ 526.668768] ---[ end Kernel panic - not syncing: Fatal exception in interrupt
    
    Prevent mod_timer from arming a timer that was already removed by
    del_timer during module unload.
    
    Signed-off-by: Jan Glauber <jglauber@cavium.com>
    Cc: <stable@vger.kernel.org> # 3.19
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c52a368de213645738d6d9de0fe1aef4988929d8
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Sun Sep 9 01:21:06 2018 +0200

    pcmcia: Implement CLKRUN protocol disabling for Ricoh bridges
    
    commit 95691e3eddc41da2d1cd3cca51fecdfb46bd85bc upstream.
    
    Currently, "disable_clkrun" yenta_socket module parameter is only
    implemented for TI CardBus bridges.
    Add also an implementation for Ricoh bridges that have the necessary
    setting documented in publicly available datasheets.
    
    Tested on a RL5C476II with a Sunrich C-160 CardBus NIC that doesn't work
    correctly unless the CLKRUN protocol is disabled.
    
    Let's also make it clear in its description that the "disable_clkrun"
    module parameter only works on these two previously mentioned brands of
    CardBus bridges.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a6b41642a7666bcfac946af5d4113cf0f8b38bc
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Oct 6 17:09:35 2018 +0800

    jffs2: free jffs2_sb_info through jffs2_kill_sb()
    
    commit 92e2921f7eee63450a5f953f4b15dc6210219430 upstream.
    
    When an invalid mount option is passed to jffs2, jffs2_parse_options()
    will fail and jffs2_sb_info will be freed, but then jffs2_sb_info will
    be used (use-after-free) and freeed (double-free) in jffs2_kill_sb().
    
    Fix it by removing the buggy invocation of kfree() when getting invalid
    mount options.
    
    Fixes: 92abc475d8de ("jffs2: implement mount option parsing and compression overriding")
    Cc: stable@kernel.org
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f173e6911cd68a4ace5c9311b4f6d9f804ec568
Author: Dmitry Bazhenov <bazhenov.dn@gmail.com>
Date:   Mon Oct 15 14:21:22 2018 +0500

    hwmon: (pmbus) Fix page count auto-detection.
    
    commit e7c6a55606b5c46b449d76588968b4d8caae903f upstream.
    
    Devices with compatible="pmbus" field have zero initial page count,
    and pmbus_clear_faults() being called before the page count auto-
    detection does not actually clear faults because it depends on the
    page count. Non-cleared faults in its turn may fail the subsequent
    page count auto-detection.
    
    This patch fixes this problem by calling pmbus_clear_fault_page()
    for currently set page and calling pmbus_clear_faults() after the
    page count was detected.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Bazhenov <bazhenov.dn@gmail.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d38b80894bfdda08f900299023f0e1118be68b7
Author: Tang Junhui <tang.junhui.linux@gmail.com>
Date:   Mon Oct 8 20:41:14 2018 +0800

    bcache: fix miss key refill->end in writeback
    
    commit 2d6cb6edd2c7fb4f40998895bda45006281b1ac5 upstream.
    
    refill->end record the last key of writeback, for example, at the first
    time, keys (1,128K) to (1,1024K) are flush to the backend device, but
    the end key (1,1024K) is not included, since the bellow code:
            if (bkey_cmp(k, refill->end) >= 0) {
                    ret = MAP_DONE;
                    goto out;
            }
    And in the next time when we refill writeback keybuf again, we searched
    key start from (1,1024K), and got a key bigger than it, so the key
    (1,1024K) missed.
    This patch modify the above code, and let the end key to be included to
    the writeback key buffer.
    
    Signed-off-by: Tang Junhui <tang.junhui.linux@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
