commit 79524e8c64bda80bb35ab490177d0e6813bf112c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Oct 29 09:55:18 2020 +0100

    Linux 4.19.153
    
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20201027135430.632029009@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1a4cfbd0d225cf53566cd56bb04f64c0fe24477
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Remove duplicated set_thresholds() call
    
    [ Upstream commit 420ab2bc7544d978a5d0762ee736412fe9c796ab ]
    
    The commentary at the call site seems to disagree with the code. The
    conditional prevents calling set_thresholds() via the exception handler,
    which appears to crash. Perhaps that's because it immediately triggers
    another TAU exception. Anyway, calling set_thresholds() from TAUupdate()
    is redundant because tau_timeout() does so.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/d7c7ee33232cf72a6a6bbb6ef05838b2e2b113c0.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9554fc1bbf5d0ac7735188fbeb666767777b5cab
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Convert from timer to workqueue
    
    [ Upstream commit b1c6a0a10bfaf36ec82fde6f621da72407fa60a1 ]
    
    Since commit 19dbdcb8039cf ("smp: Warn on function calls from softirq
    context") the Thermal Assist Unit driver causes a warning like the
    following when CONFIG_SMP is enabled.
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 0 at kernel/smp.c:428 smp_call_function_many_cond+0xf4/0x38c
      Modules linked in:
      CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.7.0-pmac #3
      NIP:  c00b37a8 LR: c00b3abc CTR: c001218c
      REGS: c0799c60 TRAP: 0700   Not tainted  (5.7.0-pmac)
      MSR:  00029032 <EE,ME,IR,DR,RI>  CR: 42000224  XER: 00000000
      GPR00: c00b3abc c0799d18 c076e300 c079ef5c c0011fec 00000000 00000000 00000000
      GPR08: 00000100 00000100 00008000 ffffffff 42000224 00000000 c079d040 c079d044
      GPR16: 00000001 00000000 00000004 c0799da0 c079f054 c07a0000 c07a0000 00000000
      GPR24: c0011fec 00000000 c079ef5c c079ef5c 00000000 00000000 00000000 00000000
      NIP [c00b37a8] smp_call_function_many_cond+0xf4/0x38c
      LR [c00b3abc] on_each_cpu+0x38/0x68
      Call Trace:
      [c0799d18] [ffffffff] 0xffffffff (unreliable)
      [c0799d68] [c00b3abc] on_each_cpu+0x38/0x68
      [c0799d88] [c0096704] call_timer_fn.isra.26+0x20/0x7c
      [c0799d98] [c0096b40] run_timer_softirq+0x1d4/0x3fc
      [c0799df8] [c05b4368] __do_softirq+0x118/0x240
      [c0799e58] [c0039c44] irq_exit+0xc4/0xcc
      [c0799e68] [c000ade8] timer_interrupt+0x1b0/0x230
      [c0799ea8] [c0013520] ret_from_except+0x0/0x14
      --- interrupt: 901 at arch_cpu_idle+0x24/0x6c
          LR = arch_cpu_idle+0x24/0x6c
      [c0799f70] [00000001] 0x1 (unreliable)
      [c0799f80] [c0060990] do_idle+0xd8/0x17c
      [c0799fa0] [c0060ba8] cpu_startup_entry+0x24/0x28
      [c0799fb0] [c072d220] start_kernel+0x434/0x44c
      [c0799ff0] [00003860] 0x3860
      Instruction dump:
      8129f204 2f890000 40beff98 3d20c07a 8929eec4 2f890000 40beff88 0fe00000
      81220000 552805de 550802ef 4182ff84 <0fe00000> 3860ffff 7f65db78 7f44d378
      ---[ end trace 34a886e47819c2eb ]---
    
    Don't call on_each_cpu() from a timer callback, call it from a worker
    thread instead.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/bb61650bea4f4c91fb8e24b9a6f130a1438651a7.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be141c42ce233121fd360cfb1694be5e872df5b1
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Use appropriate temperature sample interval
    
    [ Upstream commit 66943005cc41f48e4d05614e8f76c0ca1812f0fd ]
    
    According to the MPC750 Users Manual, the SITV value in Thermal
    Management Register 3 is 13 bits long. The present code calculates the
    SITV value as 60 * 500 cycles. This would overflow to give 10 us on
    a 500 MHz CPU rather than the intended 60 us. (But according to the
    Microprocessor Datasheet, there is also a factor of 266 that has to be
    applied to this value on certain parts i.e. speed sort above 266 MHz.)
    Always use the maximum cycle count, as recommended by the Datasheet.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/896f542e5f0f1d6cf8218524c2b67d79f3d69b3c.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 172fa0c25b25bd3945dd7c60b03bb1c25c94eef5
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Wed Sep 2 19:57:40 2020 +0300

    RDMA/qedr: Fix inline size returned for iWARP
    
    [ Upstream commit fbf58026b2256e9cd5f241a4801d79d3b2b7b89d ]
    
    commit 59e8970b3798 ("RDMA/qedr: Return max inline data in QP query
    result") changed query_qp max_inline size to return the max roce inline
    size.  When iwarp was introduced, this should have been modified to return
    the max inline size based on protocol.  This size is cached in the device
    attributes
    
    Fixes: 69ad0e7fe845 ("RDMA/qedr: Add support for iWARP in user space")
    Link: https://lore.kernel.org/r/20200902165741.8355-8-michal.kalderon@marvell.com
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9770055113e73b3afd629f83380338fd12b727b
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Wed Sep 2 19:57:36 2020 +0300

    RDMA/qedr: Fix use of uninitialized field
    
    [ Upstream commit a379ad54e55a12618cae7f6333fd1b3071de9606 ]
    
    dev->attr.page_size_caps was used uninitialized when setting device
    attributes
    
    Fixes: ec72fce401c6 ("qedr: Add support for RoCE HW init")
    Link: https://lore.kernel.org/r/20200902165741.8355-4-michal.kalderon@marvell.com
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dffa7657483b1e640196d54061dbcbfe8769444e
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Oct 13 08:46:27 2020 -0700

    xfs: fix high key handling in the rt allocator's query_range function
    
    [ Upstream commit d88850bd5516a77c6f727e8b6cefb64e0cc929c7 ]
    
    Fix some off-by-one errors in xfs_rtalloc_query_range.  The highest key
    in the realtime bitmap is always one less than the number of rt extents,
    which means that the key clamp at the start of the function is wrong.
    The 4th argument to xfs_rtfind_forw is the highest rt extent that we
    want to probe, which means that passing 1 less than the high key is
    wrong.  Finally, drop the rem variable that controls the loop because we
    can compare the iteration point (rtstart) against the high key directly.
    
    The sordid history of this function is that the original commit (fb3c3)
    incorrectly passed (high_rec->ar_startblock - 1) as the 'limit' parameter
    to xfs_rtfind_forw.  This was wrong because the "high key" is supposed
    to be the largest key for which the caller wants result rows, not the
    key for the first row that could possibly be outside the range that the
    caller wants to see.
    
    A subsequent attempt (8ad56) to strengthen the parameter checking added
    incorrect clamping of the parameters to the number of rt blocks in the
    system (despite the bitmap functions all taking units of rt extents) to
    avoid querying ranges past the end of rt bitmap file but failed to fix
    the incorrect _rtfind_forw parameter.  The original _rtfind_forw
    parameter error then survived the conversion of the startblock and
    blockcount fields to rt extents (a0e5c), and the most recent off-by-one
    fix (a3a37) thought it was patching a problem when the end of the rt
    volume is not in use, but none of these fixes actually solved the
    original problem that the author was confused about the "limit" argument
    to xfs_rtfind_forw.
    
    Sadly, all four of these patches were written by this author and even
    his own usage of this function and rt testing were inadequate to get
    this fixed quickly.
    
    Original-problem: fb3c3de2f65c ("xfs: add a couple of queries to iterate free extents in the rtbitmap")
    Not-fixed-by: 8ad560d2565e ("xfs: strengthen rtalloc query range checks")
    Not-fixed-by: a0e5c435babd ("xfs: fix xfs_rtalloc_rec units")
    Fixes: a3a374bf1889 ("xfs: fix off-by-one error in xfs_rtalloc_query_range")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56c37c5dba2ce51e67167a6c4545f230a23607b9
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Thu Oct 1 10:56:07 2020 -0700

    xfs: limit entries returned when counting fsmap records
    
    [ Upstream commit acd1ac3aa22fd58803a12d26b1ab7f70232f8d8d ]
    
    If userspace asked fsmap to count the number of entries, we cannot
    return more than UINT_MAX entries because fmh_entries is u32.
    Therefore, stop counting if we hit this limit or else we will waste time
    to return truncated results.
    
    Fixes: e89c041338ed ("xfs: implement the GETFSMAP ioctl")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3882d3641aff02002cc5c9570b0dd99f9685063c
Author: Necip Fazil Yildiran <fazilyildiran@gmail.com>
Date:   Mon Sep 14 14:46:52 2020 +0300

    arc: plat-hsdk: fix kconfig dependency warning when !RESET_CONTROLLER
    
    [ Upstream commit 63bcf87cb1c57956e1179f1a78dde625c7e3cba7 ]
    
    When ARC_SOC_HSDK is enabled and RESET_CONTROLLER is disabled, it results
    in the following Kbuild warning:
    
    WARNING: unmet direct dependencies detected for RESET_HSDK
      Depends on [n]: RESET_CONTROLLER [=n] && HAS_IOMEM [=y] && (ARC_SOC_HSDK [=y] || COMPILE_TEST [=n])
      Selected by [y]:
      - ARC_SOC_HSDK [=y] && ISA_ARCV2 [=y]
    
    The reason is that ARC_SOC_HSDK selects RESET_HSDK without depending on or
    selecting RESET_CONTROLLER while RESET_HSDK is subordinate to
    RESET_CONTROLLER.
    
    Honor the kconfig menu hierarchy to remove kconfig dependency warnings.
    
    Fixes: a528629dfd3b ("ARC: [plat-hsdk] select CONFIG_RESET_HSDK from Kconfig")
    Signed-off-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15d07887546e717df4e801c21259be7773356a71
Author: Guillaume Tucker <guillaume.tucker@collabora.com>
Date:   Tue Sep 1 16:58:06 2020 +0100

    ARM: 9007/1: l2c: fix prefetch bits init in L2X0_AUX_CTRL using DT values
    
    [ Upstream commit 8e007b367a59bcdf484c81f6df9bd5a4cc179ca6 ]
    
    The L310_PREFETCH_CTRL register bits 28 and 29 to enable data and
    instruction prefetch respectively can also be accessed via the
    L2X0_AUX_CTRL register.  They appear to be actually wired together in
    hardware between the registers.  Changing them in the prefetch
    register only will get undone when restoring the aux control register
    later on.  For this reason, set these bits in both registers during
    initialisation according to the devicetree property values.
    
    Link: https://lore.kernel.org/lkml/76f2f3ad5e77e356e0a5b99ceee1e774a2842c25.1597061474.git.guillaume.tucker@collabora.com/
    
    Fixes: ec3bd0e68a67 ("ARM: 8391/1: l2c: add options to overwrite prefetching behavior")
    Signed-off-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 593a1aa514c58d4bfbdfc9b388a8d81d5afaab17
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Thu Sep 3 15:42:17 2020 +1200

    mtd: mtdoops: Don't write panic data twice
    
    [ Upstream commit c1cf1d57d1492235309111ea6a900940213a9166 ]
    
    If calling mtdoops_write, don't also schedule work to be done later.
    
    Although this appears to not be causing an issue, possibly because the
    scheduled work will never get done, it is confusing.
    
    Fixes: 016c1291ce70 ("mtd: mtdoops: do not use mtd->panic_write directly")
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200903034217.23079-1-mark.tomlinson@alliedtelesis.co.nz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5389496b702d2bb8d71fc879391a068720d69133
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Thu Aug 13 10:11:31 2020 -0500

    powerpc/pseries: explicitly reschedule during drmem_lmb list traversal
    
    [ Upstream commit 9d6792ffe140240ae54c881cc4183f9acc24b4df ]
    
    The drmem lmb list can have hundreds of thousands of entries, and
    unfortunately lookups take the form of linear searches. As long as
    this is the case, traversals have the potential to monopolize the CPU
    and provoke lockup reports, workqueue stalls, and the like unless
    they explicitly yield.
    
    Rather than placing cond_resched() calls within various
    for_each_drmem_lmb() loop blocks in the code, put it in the iteration
    expression of the loop macro itself so users can't omit it.
    
    Introduce a drmem_lmb_next() iteration helper function which calls
    cond_resched() at a regular interval during array traversal. Each
    iteration of the loop in DLPAR code paths can involve around ten RTAS
    calls which can each take up to 250us, so this ensures the check is
    performed at worst every few milliseconds.
    
    Fixes: 6c6ea53725b3 ("powerpc/mm: Separate ibm, dynamic-memory data from DT format")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200813151131.2070161-1-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a38f352c2aa9272a1a9d94cb8956da388e32daa4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue May 5 16:01:16 2020 +0200

    mtd: lpddr: fix excessive stack usage with clang
    
    [ Upstream commit 3e1b6469f8324bee5927b063e2aca30d3e56b907 ]
    
    Building lpddr2_nvm with clang can result in a giant stack usage
    in one function:
    
    drivers/mtd/lpddr/lpddr2_nvm.c:399:12: error: stack frame size of 1144 bytes in function 'lpddr2_nvm_probe' [-Werror,-Wframe-larger-than=]
    
    The problem is that clang decides to build a copy of the mtd_info
    structure on the stack and then do a memcpy() into the actual version. It
    shouldn't really do it that way, but it's not strictly a bug either.
    
    As a workaround, use a static const version of the structure to assign
    most of the members upfront and then only set the few members that
    require runtime knowledge at probe time.
    
    Fixes: 96ba9dd65788 ("mtd: lpddr: add driver for LPDDR2-NVM PCM memories")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200505140136.263461-1-arnd@arndb.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0beef934d50822b1cb884f1e7bb115fe0a36a974
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Aug 18 15:05:22 2020 +0300

    RDMA/ucma: Add missing locking around rdma_leave_multicast()
    
    [ Upstream commit 38e03d092699891c3237b5aee9e8029d4ede0956 ]
    
    All entry points to the rdma_cm from a ULP must be single threaded,
    even this error unwinds. Add the missing locking.
    
    Fixes: 7c11910783a1 ("RDMA/ucma: Put a lock around every call to the rdma_cm layer")
    Link: https://lore.kernel.org/r/20200818120526.702120-11-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c62998f154356a6708070538ed4221f18ff6be02
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Aug 18 15:05:21 2020 +0300

    RDMA/ucma: Fix locking for ctx->events_reported
    
    [ Upstream commit 98837c6c3d7285f6eca86480b6f7fac6880e27a8 ]
    
    This value is locked under the file->mut, ensure it is held whenever
    touching it.
    
    The case in ucma_migrate_id() is a race, while in ucma_free_uctx() it is
    already not possible for the write side to run, the movement is just for
    clarity.
    
    Fixes: 88314e4dda1e ("RDMA/cma: add support for rdma_migrate_id()")
    Link: https://lore.kernel.org/r/20200818120526.702120-10-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97ebcf056f15c285e09307fbf50c9f99bdeafb3c
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Wed Jul 4 10:03:27 2018 +0200

    powerpc/icp-hv: Fix missing of_node_put() in success path
    
    [ Upstream commit d3e669f31ec35856f5e85df9224ede5bdbf1bc7b ]
    
    Both of_find_compatible_node() and of_find_node_by_type() will return
    a refcounted node on success - thus for the success path the node must
    be explicitly released with a of_node_put().
    
    Fixes: 0b05ac6e2480 ("powerpc/xics: Rewrite XICS driver")
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1530691407-3991-1-git-send-email-hofrat@osadl.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 479d8cae79cd295fb126ad7ecda19d9d1f4a849d
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Mon Jul 2 11:08:16 2018 +0200

    powerpc/pseries: Fix missing of_node_put() in rng_init()
    
    [ Upstream commit 67c3e59443f5fc77be39e2ce0db75fbfa78c7965 ]
    
    The call to of_find_compatible_node() returns a node pointer with
    refcount incremented thus it must be explicitly decremented here
    before returning.
    
    Fixes: a489043f4626 ("powerpc/pseries: Implement arch_get_random_long() based on H_RANDOM")
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1530522496-14816-1-git-send-email-hofrat@osadl.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23679f7acfdb49f7c2947b608de6a10b7eadb6d3
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Mon Aug 3 08:19:41 2020 +0200

    IB/mlx4: Adjust delayed work when a dup is observed
    
    [ Upstream commit 785167a114855c5aa75efca97000e405c2cc85bf ]
    
    When scheduling delayed work to clean up the cache, if the entry already
    has been scheduled for deletion, we adjust the delay.
    
    Fixes: 3cf69cc8dbeb ("IB/mlx4: Add CM paravirtualization")
    Link: https://lore.kernel.org/r/20200803061941.1139994-7-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 878cb32a0f197fc8ec897ab334cf5abe449ee6c3
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Mon Aug 3 08:19:39 2020 +0200

    IB/mlx4: Fix starvation in paravirt mux/demux
    
    [ Upstream commit 7fd1507df7cee9c533f38152fcd1dd769fcac6ce ]
    
    The mlx4 driver will proxy MAD packets through the PF driver. A VM or an
    instantiated VF will send its MAD packets to the PF driver using
    loop-back. The PF driver will be informed by an interrupt, but defer the
    handling and polling of CQEs to a worker thread running on an ordered
    work-queue.
    
    Consider the following scenario: the VMs will in short proximity in time,
    for example due to a network event, send many MAD packets to the PF
    driver. Lets say there are K VMs, each sending N packets.
    
    The interrupt from the first VM will start the worker thread, which will
    poll N CQEs. A common case here is where the PF driver will multiplex the
    packets received from the VMs out on the wire QP.
    
    But before the wire QP has returned a send CQE and associated interrupt,
    the other K - 1 VMs have sent their N packets as well.
    
    The PF driver has to multiplex K * N packets out on the wire QP. But the
    send-queue on the wire QP has a finite capacity.
    
    So, in this scenario, if K * N is larger than the send-queue capacity of
    the wire QP, we will get MAD packets dropped on the floor with this
    dynamic debug message:
    
    mlx4_ib_multiplex_mad: failed sending GSI to wire on behalf of slave 2 (-11)
    
    and this despite the fact that the wire send-queue could have capacity,
    but the PF driver isn't aware, because the wire send CQEs have not yet
    been polled.
    
    We can also have a similar scenario inbound, with a wire recv-queue larger
    than the tunnel QP's send-queue. If many remote peers send MAD packets to
    the very same VM, the tunnel send-queue destined to the VM could allegedly
    be construed to be full by the PF driver.
    
    This starvation is fixed by introducing separate work queues for the wire
    QPs vs. the tunnel QPs.
    
    With this fix, using a dual ported HCA, 8 VFs instantiated, we could run
    cmtime on each of the 18 interfaces towards a similar configured peer,
    each cmtime instance with 800 QPs (all in all 14400 QPs) without a single
    CM packet getting lost.
    
    Fixes: 3cf69cc8dbeb ("IB/mlx4: Add CM paravirtualization")
    Link: https://lore.kernel.org/r/20200803061941.1139994-5-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3d0ceee716047c5e8a2bcdd3192f885f404386d
Author: Suren Baghdasaryan <surenb@google.com>
Date:   Tue Oct 13 16:58:35 2020 -0700

    mm, oom_adj: don't loop through tasks in __set_oom_adj when not necessary
    
    [ Upstream commit 67197a4f28d28d0b073ab0427b03cb2ee5382578 ]
    
    Currently __set_oom_adj loops through all processes in the system to keep
    oom_score_adj and oom_score_adj_min in sync between processes sharing
    their mm.  This is done for any task with more that one mm_users, which
    includes processes with multiple threads (sharing mm and signals).
    However for such processes the loop is unnecessary because their signal
    structure is shared as well.
    
    Android updates oom_score_adj whenever a tasks changes its role
    (background/foreground/...) or binds to/unbinds from a service, making it
    more/less important.  Such operation can happen frequently.  We noticed
    that updates to oom_score_adj became more expensive and after further
    investigation found out that the patch mentioned in "Fixes" introduced a
    regression.  Using Pixel 4 with a typical Android workload, write time to
    oom_score_adj increased from ~3.57us to ~362us.  Moreover this regression
    linearly depends on the number of multi-threaded processes running on the
    system.
    
    Mark the mm with a new MMF_MULTIPROCESS flag bit when task is created with
    (CLONE_VM && !CLONE_THREAD && !CLONE_VFORK).  Change __set_oom_adj to use
    MMF_MULTIPROCESS instead of mm_users to decide whether oom_score_adj
    update should be synchronized between multiple processes.  To prevent
    races between clone() and __set_oom_adj(), when oom_score_adj of the
    process being cloned might be modified from userspace, we use
    oom_adj_mutex.  Its scope is changed to global.
    
    The combination of (CLONE_VM && !CLONE_THREAD) is rarely used except for
    the case of vfork().  To prevent performance regressions of vfork(), we
    skip taking oom_adj_mutex and setting MMF_MULTIPROCESS when CLONE_VFORK is
    specified.  Clearing the MMF_MULTIPROCESS flag (when the last process
    sharing the mm exits) is left out of this patch to keep it simple and
    because it is believed that this threading model is rare.  Should there
    ever be a need for optimizing that case as well, it can be done by hooking
    into the exit path, likely following the mm_update_next_owner pattern.
    
    With the combination of (CLONE_VM && !CLONE_THREAD && !CLONE_VFORK) being
    quite rare, the regression is gone after the change is applied.
    
    [surenb@google.com: v3]
      Link: https://lkml.kernel.org/r/20200902012558.2335613-1-surenb@google.com
    
    Fixes: 44a70adec910 ("mm, oom_adj: make sure processes sharing mm have same view of oom_score_adj")
    Reported-by: Tim Murray <timmurray@google.com>
    Suggested-by: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Eugene Syromiatnikov <esyr@redhat.com>
    Cc: Christian Kellner <christian@kellner.me>
    Cc: Adrian Reber <areber@redhat.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Aleksa Sarai <cyphar@cyphar.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Alexey Gladkov <gladkov.alexey@gmail.com>
    Cc: Michel Lespinasse <walken@google.com>
    Cc: Daniel Jordan <daniel.m.jordan@oracle.com>
    Cc: Andrei Vagin <avagin@gmail.com>
    Cc: Bernd Edlinger <bernd.edlinger@hotmail.de>
    Cc: John Johansen <john.johansen@canonical.com>
    Cc: Yafang Shao <laoar.shao@gmail.com>
    Link: https://lkml.kernel.org/r/20200824153036.3201505-1-surenb@google.com
    Debugged-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2761fff65fbf59cd77346fc63b76f651cf0f97d2
Author: Ralph Campbell <rcampbell@nvidia.com>
Date:   Tue Oct 13 16:53:13 2020 -0700

    mm/memcg: fix device private memcg accounting
    
    [ Upstream commit 9a137153fc8798a89d8fce895cd0a06ea5b8e37c ]
    
    The code in mc_handle_swap_pte() checks for non_swap_entry() and returns
    NULL before checking is_device_private_entry() so device private pages are
    never handled.  Fix this by checking for non_swap_entry() after handling
    device private swap PTEs.
    
    I assume the memory cgroup accounting would be off somehow when moving
    a process to another memory cgroup.  Currently, the device private page
    is charged like a normal anonymous page when allocated and is uncharged
    when the page is freed so I think that path is OK.
    
    Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Jerome Glisse <jglisse@redhat.com>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Link: https://lkml.kernel.org/r/20201009215952.2726-1-rcampbell@nvidia.com
    xFixes: c733a82874a7 ("mm/memcontrol: support MEMORY_DEVICE_PRIVATE")
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d74d61d90babd63b2fc953fbf0ce5f4fe2d47cf0
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Oct 12 17:06:06 2020 +0200

    netfilter: nf_log: missing vlan offload tag and proto
    
    [ Upstream commit 0d9826bc18ce356e8909919ad681ad65d0a6061e ]
    
    Dump vlan tag and proto for the usual vlan offload case if the
    NF_LOG_MACDECODE flag is set on. Without this information the logging is
    misleading as there is no reference to the VLAN header.
    
    [12716.993704] test: IN=veth0 OUT= MACSRC=86:6c:92:ea:d6:73 MACDST=0e:3b:eb:86:73:76 VPROTO=8100 VID=10 MACPROTO=0800 SRC=192.168.10.2 DST=172.217.168.163 LEN=52 TOS=0x00 PREC=0x00 TTL=64 ID=2548 DF PROTO=TCP SPT=55848 DPT=80 WINDOW=501 RES=0x00 ACK FIN URGP=0
    [12721.157643] test: IN=veth0 OUT= MACSRC=86:6c:92:ea:d6:73 MACDST=0e:3b:eb:86:73:76 VPROTO=8100 VID=10 MACPROTO=0806 ARP HTYPE=1 PTYPE=0x0800 OPCODE=2 MACSRC=86:6c:92:ea:d6:73 IPSRC=192.168.10.2 MACDST=0e:3b:eb:86:73:76 IPDST=192.168.10.1
    
    Fixes: 83e96d443b37 ("netfilter: log: split family specific code to nf_log_{ip,ip6,common}.c files")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfb5034154b431518c975d593c9240a2d8ebebad
Author: Valentin Vidic <vvidic@valentin-vidic.from.hr>
Date:   Mon Oct 12 00:03:29 2020 +0200

    net: korina: fix kfree of rx/tx descriptor array
    
    [ Upstream commit 3af5f0f5c74ecbaf757ef06c3f80d56751277637 ]
    
    kmalloc returns KSEG0 addresses so convert back from KSEG1
    in kfree. Also make sure array is freed when the driver is
    unloaded from the kernel.
    
    Fixes: ef11291bcd5f ("Add support the Korina (IDT RC32434) Ethernet MAC")
    Signed-off-by: Valentin Vidic <vvidic@valentin-vidic.from.hr>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69a117d795ac1c79105c2284452095eed5becc6d
Author: Julian Anastasov <ja@ssi.bg>
Date:   Fri Oct 9 21:24:25 2020 +0300

    ipvs: clear skb->tstamp in forwarding path
    
    [ Upstream commit 7980d2eabde82be86c5be18aa3d07e88ec13c6a1 ]
    
    fq qdisc requires tstamp to be cleared in forwarding path
    
    Reported-by: Evgeny B <abt-admin@mail.ru>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209427
    Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
    Fixes: 8203e2d844d3 ("net: clear skb->tstamp in forwarding paths")
    Fixes: fb420d5d91c1 ("tcp/fq: move back to CLOCK_MONOTONIC")
    Fixes: 80b14dee2bea ("net: Add a new socket option for a future transmit time.")
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b3eabc104e861c21fbb4aed96b8dd64f3943b32
Author: Tom Rix <trix@redhat.com>
Date:   Sun Oct 4 06:19:31 2020 -0700

    mwifiex: fix double free
    
    [ Upstream commit 53708f4fd9cfe389beab5c8daa763bcd0e0b4aef ]
    
    clang static analysis reports this problem:
    
    sdio.c:2403:3: warning: Attempt to free released memory
            kfree(card->mpa_rx.buf);
            ^~~~~~~~~~~~~~~~~~~~~~~
    
    When mwifiex_init_sdio() fails in its first call to
    mwifiex_alloc_sdio_mpa_buffer, it falls back to calling it
    again.  If the second alloc of mpa_tx.buf fails, the error
    handler will try to free the old, previously freed mpa_rx.buf.
    Reviewing the code, it looks like a second double free would
    happen with mwifiex_cleanup_sdio().
    
    So set both pointers to NULL when they are freed.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201004131931.29782-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e399ca8c4a31a264601d848f0b365012ab24f9a9
Author: Vadim Pasternak <vadimp@nvidia.com>
Date:   Wed Sep 23 20:20:49 2020 +0300

    platform/x86: mlx-platform: Remove PSU EEPROM configuration
    
    [ Upstream commit c071afcea6ecf24a3c119f25ce9f71ffd55b5dc2 ]
    
    Remove PSU EEPROM configuration for systems class equipped with
    Mellanox chip Spectrume-2. Till now all the systems from this class
    used few types of power units, all equipped with EEPROM device with
    address space two bytes. Thus, all these devices have been handled by
    EEPROM driver "24c32".
    There is a new requirement is to support power unit replacement by "off
    the shelf" device, matching electrical required parameters. Such device
    could be equipped with different EEPROM type, which could be one byte
    address space addressing or even could be not equipped with EEPROM.
    In such case "24c32" will not work.
    
    Fixes: 1bd42d94ccab ("platform/x86: mlx-platform: Add support for new 200G IB and Ethernet systems")
    Signed-off-by: Vadim Pasternak <vadimp@nvidia.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20200923172053.26296-2-vadimp@nvidia.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 787982f10982de6aab01a24f5650d9810028a3c2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 28 12:13:00 2020 +0300

    scsi: be2iscsi: Fix a theoretical leak in beiscsi_create_eqs()
    
    [ Upstream commit 38b2db564d9ab7797192ef15d7aade30633ceeae ]
    
    The be_fill_queue() function can only fail when "eq_vaddress" is NULL and
    since it's non-NULL here that means the function call can't fail.  But
    imagine if it could, then in that situation we would want to store the
    "paddr" so that dma memory can be released.
    
    Link: https://lore.kernel.org/r/20200928091300.GD377727@mwanda
    Fixes: bfead3b2cb46 ("[SCSI] be2iscsi: Adding msix and mcc_rings V3")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 052daa607a16822dd243ed6b63d08f6ed0ae1d3b
Author: John Donnelly <john.p.donnelly@oracle.com>
Date:   Wed Sep 23 17:19:20 2020 -0700

    scsi: target: tcmu: Fix warning: 'page' may be used uninitialized
    
    [ Upstream commit 61741d8699e1fc764a309ebd20211bb1cb193110 ]
    
    Corrects drivers/target/target_core_user.c:688:6: warning: 'page' may be
    used uninitialized.
    
    Link: https://lore.kernel.org/r/20200924001920.43594-1-john.p.donnelly@oracle.com
    Fixes: 3c58f737231e ("scsi: target: tcmu: Optimize use of flush_dcache_page")
    Cc: Mike Christie <michael.christie@oracle.com>
    Acked-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: John Donnelly <john.p.donnelly@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9796b5e2ab1878ab5e2c42fc783ab75a4949bf6
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Thu Sep 24 18:08:39 2020 +0400

    usb: dwc2: Fix INTR OUT transfers in DDMA mode.
    
    [ Upstream commit b2c586eb07efab982419f32b7c3bd96829bc8bcd ]
    
    In DDMA mode if INTR OUT transfers mps not multiple of 4 then single packet
    corresponds to single descriptor.
    
    Descriptor limit set to mps and desc chain limit set to mps *
    MAX_DMA_DESC_NUM_GENERIC. On that descriptors complete, to calculate
    transfer size should be considered correction value for each descriptor.
    
    In start request function, if "continue" is true then dma buffer address
    should be incremmented by offset for all type of transfers, not only for
    Control DATA_OUT transfers.
    
    Fixes: cf77b5fb9b394 ("usb: dwc2: gadget: Transfer length limit checking for DDMA")
    Fixes: e02f9aa6119e0 ("usb: dwc2: gadget: EP 0 specific DDMA programming")
    Fixes: aa3e8bc81311e ("usb: dwc2: gadget: DDMA transfer start and complete")
    
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60a6d2999750d04f106f4e376dc15d3c0914881f
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Sep 28 13:07:18 2020 +0200

    nl80211: fix non-split wiphy information
    
    [ Upstream commit ab10c22bc3b2024f0c9eafa463899a071eac8d97 ]
    
    When dumping wiphy information, we try to split the data into
    many submessages, but for old userspace we still support the
    old mode where this doesn't happen.
    
    However, in this case we were not resetting our state correctly
    and dumping multiple messages for each wiphy, which would have
    broken such older userspace.
    
    This was broken pretty much immediately afterwards because it
    only worked in the original commit where non-split dumps didn't
    have any more data than split dumps...
    
    Fixes: fe1abafd942f ("nl80211: re-add channel width and extended capa advertising")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://lore.kernel.org/r/20200928130717.3e6d9c6bada2.Ie0f151a8d0d00a8e1e18f6a8c9244dd02496af67@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 354ace7056a916dff00f73cb3f7100e8279f59b9
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Wed Aug 19 01:19:49 2020 +0900

    usb: gadget: u_ether: enable qmult on SuperSpeed Plus as well
    
    [ Upstream commit 4eea21dc67b0c6ba15ae41b1defa113a680a858e ]
    
    The u_ether driver has a qmult setting that multiplies the
    transmit queue length (which by default is 2).
    
    The intent is that it should be enabled at high/super speed, but
    because the code does not explicitly check for USB_SUPER_PLUS,
    it is disabled at that speed.
    
    Fix this by ensuring that the queue multiplier is enabled for any
    wired link at high speed or above. Using >= for USB_SPEED_*
    constants seems correct because it is what the gadget_is_xxxspeed
    functions do.
    
    The queue multiplier substantially helps performance at higher
    speeds. On a direct SuperSpeed Plus link to a Linux laptop,
    iperf3 single TCP stream:
    
    Before (qmult=1): 1.3 Gbps
    After  (qmult=5): 3.2 Gbps
    
    Fixes: 04617db7aa68 ("usb: gadget: add SS descriptors to Ethernet gadget")
    Reviewed-by: Maciej Żenczykowski <maze@google.com>
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f36c8ddaea41830ce53984dce111138097e7d62d
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Tue Aug 25 14:55:03 2020 +0900

    usb: gadget: f_ncm: fix ncm_bitrate for SuperSpeed and above.
    
    [ Upstream commit 986499b1569af980a819817f17238015b27793f6 ]
    
    Currently, SuperSpeed NCM gadgets report a speed of 851 Mbps
    in USB_CDC_NOTIFY_SPEED_CHANGE. But the calculation appears to
    assume 16 packets per microframe, and USB 3 and above no longer
    use microframes.
    
    Maximum speed is actually much higher. On a direct connection,
    theoretical throughput is at most 3.86 Gbps for gen1x1 and
    9.36 Gbps for gen2x1, and I have seen gadget->host iperf
    throughput of >2 Gbps for gen1x1 and >4 Gbps for gen2x1.
    
    Unfortunately the ConnectionSpeedChange defined in the CDC spec
    only uses 32-bit values, so we can't report accurate numbers for
    10Gbps and above. So, report 3.75Gbps for SuperSpeed (which is
    roughly maximum theoretical performance) and 4.25Gbps for
    SuperSpeed Plus (which is close to the maximum that we can report
    in a 32-bit unsigned integer).
    
    This results in:
    
    [50879.191272] cdc_ncm 2-2:1.0 enx228b127e050c: renamed from usb0
    [50879.234778] cdc_ncm 2-2:1.0 enx228b127e050c: 3750 mbit/s downlink 3750 mbit/s uplink
    
    on SuperSpeed and:
    
    [50798.434527] cdc_ncm 8-2:1.0 enx228b127e050c: renamed from usb0
    [50798.524278] cdc_ncm 8-2:1.0 enx228b127e050c: 4250 mbit/s downlink 4250 mbit/s uplink
    
    on SuperSpeed Plus.
    
    Fixes: 1650113888fe ("usb: gadget: f_ncm: add SuperSpeed descriptors for CDC NCM")
    Reviewed-by: Maciej Żenczykowski <maze@google.com>
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7446c752a23db6ba5da7f6b4aa616fa1032be88
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Sep 30 10:31:20 2020 +0300

    iwlwifi: mvm: split a print to avoid a WARNING in ROC
    
    [ Upstream commit 903b3f9badf1d54f77b468b96706dab679b45b14 ]
    
    A print in the remain on channel code was too long and caused
    a WARNING, split it.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Fixes: dc28e12f2125 ("iwlwifi: mvm: ROC: Extend the ROC max delay duration & limit ROC duration")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20200930102759.58d57c0bdc68.Ib06008665e7bf1199c360aa92691d9c74fb84990@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dbc537d702f6dbc43f7d6f3caca121c666a982e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 11 14:33:26 2020 +0300

    mfd: sm501: Fix leaks in probe()
    
    [ Upstream commit 8ce24f8967df2836b4557a23e74dc4bb098249f1 ]
    
    This code should clean up if sm501_init_dev() fails.
    
    Fixes: b6d6454fdb66 ("[PATCH] mfd: SM501 core driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d35b9ecdcb8f837f0cff36a2e6cb734055b30503
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Sep 29 22:25:10 2020 +0200

    net: enic: Cure the enic api locking trainwreck
    
    [ Upstream commit a53b59ece86c86d16d12ccdaa1ad0c78250a9d96 ]
    
    enic_dev_wait() has a BUG_ON(in_interrupt()).
    
    Chasing the callers of enic_dev_wait() revealed the gems of enic_reset()
    and enic_tx_hang_reset() which are both invoked through work queues in
    order to be able to call rtnl_lock(). So far so good.
    
    After locking rtnl both functions acquire enic::enic_api_lock which
    serializes against the (ab)use from infiniband. This is where the
    trainwreck starts.
    
    enic::enic_api_lock is a spin_lock() which implicitly disables preemption,
    but both functions invoke a ton of functions under that lock which can
    sleep. The BUG_ON(in_interrupt()) does not trigger in that case because it
    can't detect the preempt disabled condition.
    
    This clearly has never been tested with any of the mandatory debug options
    for 7+ years, which would have caught that for sure.
    
    Cure it by adding a enic_api_busy member to struct enic, which is modified
    and evaluated with enic::enic_api_lock held.
    
    If enic_api_devcmd_proxy_by_index() observes enic::enic_api_busy as true,
    it drops enic::enic_api_lock and busy waits for enic::enic_api_busy to
    become false.
    
    It would be smarter to wait for a completion of that busy period, but
    enic_api_devcmd_proxy_by_index() is called with other spin locks held which
    obviously can't sleep.
    
    Remove the BUG_ON(in_interrupt()) check as well because it's incomplete and
    with proper debugging enabled the problem would have been caught from the
    debug checks in schedule_timeout().
    
    Fixes: 0b038566c0ea ("drivers/net: enic: Add an interface for USNIC to interact with firmware")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa0abc3eb3acac7386ab20d86729417c69b24c10
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Sep 25 14:22:24 2020 +0100

    qtnfmac: fix resource leaks on unsupported iftype error return path
    
    [ Upstream commit 63f6982075d890d7563e2469643f05a37d193f01 ]
    
    Currently if an unsupported iftype is detected the error return path
    does not free the cmd_skb leading to a resource leak. Fix this by
    free'ing cmd_skb.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: 805b28c05c8e ("qtnfmac: prepare for AP_VLAN interface type support")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200925132224.21638-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8546708c182ba0080d74d8ff550350d264317163
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Sep 25 16:35:52 2020 -0700

    HID: hid-input: fix stylus battery reporting
    
    [ Upstream commit 505f394fa239cecb76d916aa858f87ed7ea7fde4 ]
    
    With commit 4f3882177240 hid-input started clearing of "ignored" usages
    to avoid using garbage that might have been left in them. However
    "battery strength" usages should not be ignored, as we do want to
    use them.
    
    Fixes: 4f3882177240 ("HID: hid-input: clear unmapped usages")
    Reported-by: Kenneth Albanowski <kenalba@google.com>
    Tested-by: Kenneth Albanowski <kenalba@google.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e375b1d6e54c490553c92677078dcd4e3626601
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Sep 25 10:55:20 2020 +0100

    slimbus: qcom-ngd-ctrl: disable ngd in qmi server down callback
    
    [ Upstream commit 709ec3f7fc5773ac4aa6fb22c3f0ac8103c674db ]
    
    In QMI new server notification we enable the NGD however during
    delete server notification we do not disable the NGD.
    
    This can lead to multiple instances of NGD being enabled, so make
    sure that we disable NGD in delete server callback to fix this issue!
    
    Fixes: 917809e2280b ("slimbus: ngd: Add qcom SLIMBus NGD driver")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200925095520.27316-4-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64a4133b161e90d9c79df1753b788a3892bd4b76
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Sep 25 10:55:19 2020 +0100

    slimbus: core: do not enter to clock pause mode in core
    
    [ Upstream commit df2c471c4ae07e18a0396db670dca2ef867c5153 ]
    
    Let the controller logic decide when to enter into clock pause mode!
    Entering in to pause mode during unregistration does not really make
    sense as the controller is totally going down at that point in time.
    
    Fixes: 4b14e62ad3c9e ("slimbus: Add support for 'clock-pause' feature")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200925095520.27316-3-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43f146dc16e5bb54fa4995600289e4b165f8bfbd
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Sep 25 10:55:18 2020 +0100

    slimbus: core: check get_addr before removing laddr ida
    
    [ Upstream commit f97769fde678e111a1b7b165b380d8a3dfe54f4e ]
    
    logical address can be either assigned by the SLIMBus controller or the core.
    Core uses IDA in cases where get_addr callback is not provided by the
    controller.
    Core already has this check while allocating IDR, however during absence
    reporting this is not checked. This patch fixes this issue.
    
    Fixes: 46a2bb5a7f7e ("slimbus: core: Add slim controllers support")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200925095520.27316-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a114d642aff8d47ca6cf70431e1983c22a94a899
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Sep 24 11:36:19 2020 -0700

    quota: clear padding in v2r1_mem2diskdqb()
    
    [ Upstream commit 3d3dc274ce736227e3197868ff749cff2f175f63 ]
    
    Freshly allocated memory contains garbage, better make sure
    to init all struct v2r1_disk_dqblk fields to avoid KMSAN report:
    
    BUG: KMSAN: uninit-value in qtree_entry_unused+0x137/0x1b0 fs/quota/quota_tree.c:218
    CPU: 0 PID: 23373 Comm: syz-executor.1 Not tainted 5.9.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x21c/0x280 lib/dump_stack.c:118
     kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:122
     __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:219
     qtree_entry_unused+0x137/0x1b0 fs/quota/quota_tree.c:218
     v2r1_mem2diskdqb+0x43d/0x710 fs/quota/quota_v2.c:285
     qtree_write_dquot+0x226/0x870 fs/quota/quota_tree.c:394
     v2_write_dquot+0x1ad/0x280 fs/quota/quota_v2.c:333
     dquot_commit+0x4af/0x600 fs/quota/dquot.c:482
     ext4_write_dquot fs/ext4/super.c:5934 [inline]
     ext4_mark_dquot_dirty+0x4d8/0x6a0 fs/ext4/super.c:5985
     mark_dquot_dirty fs/quota/dquot.c:347 [inline]
     mark_all_dquot_dirty fs/quota/dquot.c:385 [inline]
     dquot_alloc_inode+0xc05/0x12b0 fs/quota/dquot.c:1755
     __ext4_new_inode+0x8204/0x9d70 fs/ext4/ialloc.c:1155
     ext4_tmpfile+0x41a/0x850 fs/ext4/namei.c:2686
     vfs_tmpfile+0x2a2/0x570 fs/namei.c:3283
     do_tmpfile fs/namei.c:3316 [inline]
     path_openat+0x4035/0x6a90 fs/namei.c:3359
     do_filp_open+0x2b8/0x710 fs/namei.c:3395
     do_sys_openat2+0xa88/0x1140 fs/open.c:1168
     do_sys_open fs/open.c:1184 [inline]
     __do_compat_sys_openat fs/open.c:1242 [inline]
     __se_compat_sys_openat+0x2a4/0x310 fs/open.c:1240
     __ia32_compat_sys_openat+0x56/0x70 fs/open.c:1240
     do_syscall_32_irqs_on arch/x86/entry/common.c:80 [inline]
     __do_fast_syscall_32+0x129/0x180 arch/x86/entry/common.c:139
     do_fast_syscall_32+0x6a/0xc0 arch/x86/entry/common.c:162
     do_SYSENTER_32+0x73/0x90 arch/x86/entry/common.c:205
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    RIP: 0023:0xf7ff4549
    Code: b8 01 10 06 03 74 b4 01 10 07 03 74 b0 01 10 08 03 74 d8 01 00 00 00 00 00 00 00 00 00 00 00 00 00 51 52 55 89 e5 0f 34 cd 80 <5d> 5a 59 c3 90 90 90 90 eb 0d 90 90 90 90 90 90 90 90 90 90 90 90
    RSP: 002b:00000000f55cd0cc EFLAGS: 00000296 ORIG_RAX: 0000000000000127
    RAX: ffffffffffffffda RBX: 00000000ffffff9c RCX: 0000000020000000
    RDX: 0000000000410481 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    
    Uninit was created at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:143 [inline]
     kmsan_internal_poison_shadow+0x66/0xd0 mm/kmsan/kmsan.c:126
     kmsan_slab_alloc+0x8a/0xe0 mm/kmsan/kmsan_hooks.c:80
     slab_alloc_node mm/slub.c:2907 [inline]
     slab_alloc mm/slub.c:2916 [inline]
     __kmalloc+0x2bb/0x4b0 mm/slub.c:3982
     kmalloc include/linux/slab.h:559 [inline]
     getdqbuf+0x56/0x150 fs/quota/quota_tree.c:52
     qtree_write_dquot+0xf2/0x870 fs/quota/quota_tree.c:378
     v2_write_dquot+0x1ad/0x280 fs/quota/quota_v2.c:333
     dquot_commit+0x4af/0x600 fs/quota/dquot.c:482
     ext4_write_dquot fs/ext4/super.c:5934 [inline]
     ext4_mark_dquot_dirty+0x4d8/0x6a0 fs/ext4/super.c:5985
     mark_dquot_dirty fs/quota/dquot.c:347 [inline]
     mark_all_dquot_dirty fs/quota/dquot.c:385 [inline]
     dquot_alloc_inode+0xc05/0x12b0 fs/quota/dquot.c:1755
     __ext4_new_inode+0x8204/0x9d70 fs/ext4/ialloc.c:1155
     ext4_tmpfile+0x41a/0x850 fs/ext4/namei.c:2686
     vfs_tmpfile+0x2a2/0x570 fs/namei.c:3283
     do_tmpfile fs/namei.c:3316 [inline]
     path_openat+0x4035/0x6a90 fs/namei.c:3359
     do_filp_open+0x2b8/0x710 fs/namei.c:3395
     do_sys_openat2+0xa88/0x1140 fs/open.c:1168
     do_sys_open fs/open.c:1184 [inline]
     __do_compat_sys_openat fs/open.c:1242 [inline]
     __se_compat_sys_openat+0x2a4/0x310 fs/open.c:1240
     __ia32_compat_sys_openat+0x56/0x70 fs/open.c:1240
     do_syscall_32_irqs_on arch/x86/entry/common.c:80 [inline]
     __do_fast_syscall_32+0x129/0x180 arch/x86/entry/common.c:139
     do_fast_syscall_32+0x6a/0xc0 arch/x86/entry/common.c:162
     do_SYSENTER_32+0x73/0x90 arch/x86/entry/common.c:205
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    Fixes: 498c60153ebb ("quota: Implement quota format with 64-bit space and inode limits")
    Link: https://lore.kernel.org/r/20200924183619.4176790-1-edumazet@google.com
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Jan Kara <jack@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5577da3b9838108a02fe60fd817fb8e99e0ae16f
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Jul 24 23:03:54 2020 -0700

    usb: dwc2: Fix parameter type in function pointer prototype
    
    [ Upstream commit 362b9398c962c9ec563653444e15ef9032ef3a90 ]
    
    When booting up on a Raspberry Pi 4 with Control Flow Integrity checking
    enabled, the following warning/panic happens:
    
    [    1.626435] CFI failure (target: dwc2_set_bcm_params+0x0/0x4):
    [    1.632408] WARNING: CPU: 0 PID: 32 at kernel/cfi.c:30 __cfi_check_fail+0x54/0x5c
    [    1.640021] Modules linked in:
    [    1.643137] CPU: 0 PID: 32 Comm: kworker/0:1 Not tainted 5.8.0-rc6-next-20200724-00051-g89ba619726de #1
    [    1.652693] Hardware name: Raspberry Pi 4 Model B Rev 1.2 (DT)
    [    1.658637] Workqueue: events deferred_probe_work_func
    [    1.663870] pstate: 60000005 (nZCv daif -PAN -UAO BTYPE=--)
    [    1.669542] pc : __cfi_check_fail+0x54/0x5c
    [    1.673798] lr : __cfi_check_fail+0x54/0x5c
    [    1.678050] sp : ffff8000102bbaa0
    [    1.681419] x29: ffff8000102bbaa0 x28: ffffab09e21c7000
    [    1.686829] x27: 0000000000000402 x26: ffff0000f6e7c228
    [    1.692238] x25: 00000000fb7cdb0d x24: 0000000000000005
    [    1.697647] x23: ffffab09e2515000 x22: ffffab09e069a000
    [    1.703055] x21: 4c550309df1cf4c1 x20: ffffab09e2433c60
    [    1.708462] x19: ffffab09e160dc50 x18: ffff0000f6e8cc78
    [    1.713870] x17: 0000000000000041 x16: ffffab09e0bce6f8
    [    1.719278] x15: ffffab09e1c819b7 x14: 0000000000000003
    [    1.724686] x13: 00000000ffffefff x12: 0000000000000000
    [    1.730094] x11: 0000000000000000 x10: 00000000ffffffff
    [    1.735501] x9 : c932f7abfc4bc600 x8 : c932f7abfc4bc600
    [    1.740910] x7 : 077207610770075f x6 : ffff0000f6c38f00
    [    1.746317] x5 : 0000000000000000 x4 : 0000000000000000
    [    1.751723] x3 : 0000000000000000 x2 : 0000000000000000
    [    1.757129] x1 : ffff8000102bb7d8 x0 : 0000000000000032
    [    1.762539] Call trace:
    [    1.765030]  __cfi_check_fail+0x54/0x5c
    [    1.768938]  __cfi_check+0x5fa6c/0x66afc
    [    1.772932]  dwc2_init_params+0xd74/0xd78
    [    1.777012]  dwc2_driver_probe+0x484/0x6ec
    [    1.781180]  platform_drv_probe+0xb4/0x100
    [    1.785350]  really_probe+0x228/0x63c
    [    1.789076]  driver_probe_device+0x80/0xc0
    [    1.793247]  __device_attach_driver+0x114/0x160
    [    1.797857]  bus_for_each_drv+0xa8/0x128
    [    1.801851]  __device_attach.llvm.14901095709067289134+0xc0/0x170
    [    1.808050]  bus_probe_device+0x44/0x100
    [    1.812044]  deferred_probe_work_func+0x78/0xb8
    [    1.816656]  process_one_work+0x204/0x3c4
    [    1.820736]  worker_thread+0x2f0/0x4c4
    [    1.824552]  kthread+0x174/0x184
    [    1.827837]  ret_from_fork+0x10/0x18
    
    CFI validates that all indirect calls go to a function with the same
    exact function pointer prototype. In this case, dwc2_set_bcm_params
    is the target, which has a parameter of type 'struct dwc2_hsotg *',
    but it is being implicitly cast to have a parameter of type 'void *'
    because that is the set_params function pointer prototype. Make the
    function pointer protoype match the definitions so that there is no
    more violation.
    
    Fixes: 7de1debcd2de ("usb: dwc2: Remove platform static params")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1107
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbd411d70b96b6d4f4fff71ca3ae39dbaa5dfbd2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Sep 22 10:38:56 2020 +0200

    ALSA: seq: oss: Avoid mutex lock for a long-time ioctl
    
    [ Upstream commit 2759caad2600d503c3b0ed800e7e03d2cd7a4c05 ]
    
    Recently we applied a fix to cover the whole OSS sequencer ioctls with
    the mutex for dealing with the possible races.  This works fine in
    general, but in theory, this may lead to unexpectedly long stall if an
    ioctl like SNDCTL_SEQ_SYNC is issued and an event with the far future
    timestamp was queued.
    
    For fixing such a potential stall, this patch changes the mutex lock
    applied conditionally excluding such an ioctl command.  Also, change
    the mutex_lock() with the interruptible version for user to allow
    escaping from the big-hammer mutex.
    
    Fixes: 80982c7e834e ("ALSA: seq: oss: Serialize ioctls")
    Suggested-by: Pavel Machek <pavel@ucw.cz>
    Link: https://lore.kernel.org/r/20200922083856.28572-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62c3270489d509689cac88f377cc53f8decdd6a9
Author: Souptick Joarder <jrdr.linux@gmail.com>
Date:   Sun Sep 20 08:21:35 2020 +0530

    misc: mic: scif: Fix error handling path
    
    [ Upstream commit a81072a9c0ae734b7889929b0bc070fe3f353f0e ]
    
    Inside __scif_pin_pages(), when map_flags != SCIF_MAP_KERNEL it
    will call pin_user_pages_fast() to map nr_pages. However,
    pin_user_pages_fast() might fail with a return value -ERRNO.
    
    The return value is stored in pinned_pages->nr_pages. which in
    turn is passed to unpin_user_pages(), which expects
    pinned_pages->nr_pages >=0, else disaster.
    
    Fix this by assigning pinned_pages->nr_pages to 0 if
    pin_user_pages_fast() returns -ERRNO.
    
    Fixes: ba612aa8b487 ("misc: mic: SCIF memory registration and unregistration")
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
    Link: https://lore.kernel.org/r/1600570295-29546-1-git-send-email-jrdr.linux@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c4a2e9ab2599c5bf1dc02a69fa85d64c5027fea
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 18 17:27:32 2020 +0300

    ath6kl: wmi: prevent a shift wrapping bug in ath6kl_wmi_delete_pstream_cmd()
    
    [ Upstream commit 6a950755cec1a90ddaaff3e4acb5333617441c32 ]
    
    The "tsid" is a user controlled u8 which comes from debugfs.  Values
    more than 15 are invalid because "active_tsids" is a 16 bit variable.
    If the value of "tsid" is more than 31 then that leads to a shift
    wrapping bug.
    
    Fixes: 8fffd9e5ec9e ("ath6kl: Implement support for QOS-enable and QOS-disable from userspace")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200918142732.GA909725@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eca79d8158e8c7f06914fa45b4dff95214272664
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Sep 20 22:37:33 2020 +0200

    net: dsa: rtl8366rb: Support all 4096 VLANs
    
    [ Upstream commit a7920efdd86d8a0d74402dbc80ead03b023294ba ]
    
    There is an off-by-one error in rtl8366rb_is_vlan_valid()
    making VLANs 0..4094 valid while it should be 1..4095.
    Fix it.
    
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a919e725ff63275102dbe97719c3ee98097acb3
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sat Sep 19 00:29:54 2020 +0200

    net: dsa: rtl8366: Skip PVID setting if not requested
    
    [ Upstream commit 3dfe8dde093a07e82fa472c0f8c29a7f6a2006a5 ]
    
    We go to lengths to determine whether the PVID should be set
    for this port or not, and then fail to take it into account.
    Fix this oversight.
    
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 999c5c5f0665008b63206ebb4088101f5b8fdbfd
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Sep 2 00:09:35 2020 +0200

    net: dsa: rtl8366: Refactor VLAN/PVID init
    
    [ Upstream commit 7e1301ed1881447d2a25f9c6423738c33cbca133 ]
    
    The VLANs and PVIDs on the RTL8366 utilizes a "member
    configuration" (MC) which is largely unexplained in the
    code.
    
    This set-up requires a special ordering: rtl8366_set_pvid()
    must be called first, followed by rtl8366_set_vlan(),
    else the MC will not be properly allocated. Relax this
    by factoring out the code obtaining an MC and reuse
    the helper in both rtl8366_set_pvid() and
    rtl8366_set_vlan() so we remove this strict ordering
    requirement.
    
    In the process, add some better comments and debug prints
    so people who read the code understand what is going on.
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67248582ccd6716627fc70ac11a37444744fdf84
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Sep 2 00:09:34 2020 +0200

    net: dsa: rtl8366: Check validity of passed VLANs
    
    [ Upstream commit 6641a2c42b0a307b7638d10e5d4b90debc61389d ]
    
    The rtl8366_set_vlan() and rtl8366_set_pvid() get invalid
    VLANs tossed at it, especially VLAN0, something the hardware
    and driver cannot handle. Check validity and bail out like
    we do in the other callbacks.
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edf9400e13db380142306cc1b65cd353233ca476
Author: Pali Rohár <pali@kernel.org>
Date:   Mon Sep 7 15:27:16 2020 +0200

    cpufreq: armada-37xx: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit c942d1542f1bc5001216fabce9cb8ffbe515777e ]
    
    CONFIG_ARM_ARMADA_37XX_CPUFREQ is tristate option and therefore this
    cpufreq driver can be compiled as a module. This patch adds missing
    MODULE_DEVICE_TABLE which generates correct modalias for automatic
    loading of this cpufreq driver when is compiled as an external module.
    
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 92ce45fb875d7 ("cpufreq: Add DVFS support for Armada 37xx")
    [ Viresh: Added __maybe_unused ]
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2b54e0fc5ef13135a801c030aa166d32a247527
Author: Ong Boon Leong <boon.leong.ong@intel.com>
Date:   Tue Sep 15 09:28:40 2020 +0800

    net: stmmac: use netif_tx_start|stop_all_queues() function
    
    [ Upstream commit 9f19306d166688a73356aa636c62e698bf2063cc ]
    
    The current implementation of stmmac_stop_all_queues() and
    stmmac_start_all_queues() will not work correctly when the value of
    tx_queues_to_use is changed through ethtool -L DEVNAME rx N tx M command.
    
    Also, netif_tx_start|stop_all_queues() are only needed in driver open()
    and close() only.
    
    Fixes: c22a3f48 net: stmmac: adding multiple napi mechanism
    
    Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85c4859b4f54d4469b1dcf411104cc40243c8c05
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Tue Jun 16 12:07:10 2020 +0300

    net/mlx5: Don't call timecounter cyc2time directly from 1PPS flow
    
    [ Upstream commit 0d2ffdc8d4002a62de31ff7aa3bef28c843c3cbe ]
    
    Before calling timecounter_cyc2time(), clock->lock must be taken.
    Use mlx5_timecounter_cyc2time instead which guarantees a safe access.
    
    Fixes: afc98a0b46d8 ("net/mlx5: Update ptp_clock_event foreach PPS event")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 556ce4cb01ebb3cab50b5e3ab5b2ccf3f2c2cdd3
Author: Thomas Preston <thomas.preston@codethink.co.uk>
Date:   Fri Aug 28 22:32:26 2020 +0100

    pinctrl: mcp23s08: Fix mcp23x17 precious range
    
    [ Upstream commit b9b7fb29433b906635231d0a111224efa009198c ]
    
    On page 23 of the datasheet [0] it says "The register remains unchanged
    until the interrupt is cleared via a read of INTCAP or GPIO." Include
    INTCAPA and INTCAPB registers in precious range, so that they aren't
    accidentally cleared when we read via debugfs.
    
    [0] https://ww1.microchip.com/downloads/en/DeviceDoc/20001952C.pdf
    
    Fixes: 8f38910ba4f6 ("pinctrl: mcp23s08: switch to regmap caching")
    Signed-off-by: Thomas Preston <thomas.preston@codethink.co.uk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20200828213226.1734264-3-thomas.preston@codethink.co.uk
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0313dc6b78e5e466627b5992575b2154efd96bd2
Author: Thomas Preston <thomas.preston@codethink.co.uk>
Date:   Fri Aug 28 22:32:25 2020 +0100

    pinctrl: mcp23s08: Fix mcp23x17_regmap initialiser
    
    [ Upstream commit b445f6237744df5e8d4f56f8733b2108c611220a ]
    
    The mcp23x17_regmap is initialised with structs named "mcp23x16".
    However, the mcp23s08 driver doesn't support the MCP23016 device yet, so
    this appears to be a typo.
    
    Fixes: 8f38910ba4f6 ("pinctrl: mcp23s08: switch to regmap caching")
    Signed-off-by: Thomas Preston <thomas.preston@codethink.co.uk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20200828213226.1734264-2-thomas.preston@codethink.co.uk
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6644d1431aa0d78199408462bcf52847b472e433
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Aug 24 11:57:35 2020 +0300

    HID: roccat: add bounds checking in kone_sysfs_write_settings()
    
    [ Upstream commit d4f98dbfe717490e771b6e701904bfcf4b4557f0 ]
    
    This code doesn't check if "settings->startup_profile" is within bounds
    and that could result in an out of bounds array access.  What the code
    does do is it checks if the settings can be written to the firmware, so
    it's possible that the firmware has a bounds check?  It's safer and
    easier to verify when the bounds checking is done in the kernel.
    
    Fixes: 14bf62cde794 ("HID: add driver for Roccat Kone gaming mouse")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27fd3a2e53cce4072d568f69c489b17ce01d724b
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Tue Aug 25 14:29:00 2020 +0800

    video: fbdev: radeon: Fix memleak in radeonfb_pci_register
    
    [ Upstream commit fe6c6a4af2be8c15bac77f7ea160f947c04840d1 ]
    
    When radeon_kick_out_firmware_fb() fails, info should be
    freed just like the subsequent error paths.
    
    Fixes: 069ee21a82344 ("fbdev: Fix loading of module radeonfb on PowerMac")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Mathieu Malaterre <malat@debian.org>
    Cc: Kangjie Lu <kjlu@umn.edu>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200825062900.11210-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2422fb525b00956e8abecd04ad413e846fdf5202
Author: Tom Rix <trix@redhat.com>
Date:   Wed Aug 5 07:52:08 2020 -0700

    video: fbdev: sis: fix null ptr dereference
    
    [ Upstream commit ad6f93e9cd56f0b10e9b22e3e137d17a1a035242 ]
    
    Clang static analysis reports this representative error
    
    init.c:2501:18: warning: Array access (from variable 'queuedata') results
      in a null pointer dereference
          templ |= ((queuedata[i] & 0xc0) << 3);
    
    This is the problem block of code
    
       if(ModeNo > 0x13) {
          ...
          if(SiS_Pr->ChipType == SIS_730) {
             queuedata = &FQBQData730[0];
          } else {
             queuedata = &FQBQData[0];
          }
       } else {
    
       }
    
    queuedata is not set in the else block
    
    Reviewing the old code, the arrays FQBQData730 and FQBQData were
    used directly.
    
    So hoist the setting of queuedata out of the if-else block.
    
    Fixes: 544393fe584d ("[PATCH] sisfb update")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Cc: Thomas Winischhofer <thomas@winischhofer.net>
    Cc: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200805145208.17727-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32bc70b7edc0ae0f4078108eaaa9b348c3c42de1
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jul 23 18:02:27 2020 +0100

    video: fbdev: vga16fb: fix setting of pixclock because a pass-by-value error
    
    [ Upstream commit c72fab81ceaa54408b827a2f0486d9a0f4be34cf ]
    
    The pixclock is being set locally because it is being passed as a
    pass-by-value argument rather than pass-by-reference, so the computed
    pixclock is never being set in var->pixclock. Fix this by passing
    by reference.
    
    [This dates back to 2002, I found the offending commit from the git
    history git://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git ]
    
    Addresses-Coverity: ("Unused value")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jani Nikula <jani.nikula@intel.com>
    [b.zolnierkie: minor patch summary fixup]
    [b.zolnierkie: removed "Fixes:" tag (not in upstream tree)]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200723170227.996229-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34a5007852a16723566d3ce4943624bda1c3b279
Author: Souptick Joarder <jrdr.linux@gmail.com>
Date:   Wed Sep 2 02:51:11 2020 +0530

    drivers/virt/fsl_hypervisor: Fix error handling path
    
    [ Upstream commit 7f360bec37857bfd5a48cef21d86f58a09a3df63 ]
    
    First, when memory allocation for sg_list_unaligned failed, there
    is a bug of calling put_pages() as we haven't pinned any pages.
    
    Second, if get_user_pages_fast() failed we should unpin num_pinned
    pages.
    
    This will address both.
    
    As part of these changes, minor update in documentation.
    
    Fixes: 6db7199407ca ("drivers/virt: introduce Freescale hypervisor management driver")
    Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Link: https://lore.kernel.org/r/1598995271-6755-1-git-send-email-jrdr.linux@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02f420c5fd2047117312ab77e823184f63fc9568
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Sep 3 13:23:24 2020 +0200

    pwm: lpss: Add range limit check for the base_unit register value
    
    [ Upstream commit ef9f60daab309558c8bb3e086a9a11ee40bd6061 ]
    
    When the user requests a high enough period ns value, then the
    calculations in pwm_lpss_prepare() might result in a base_unit value of 0.
    
    But according to the data-sheet the way the PWM controller works is that
    each input clock-cycle the base_unit gets added to a N bit counter and
    that counter overflowing determines the PWM output frequency. Adding 0
    to the counter is a no-op. The data-sheet even explicitly states that
    writing 0 to the base_unit bits will result in the PWM outputting a
    continuous 0 signal.
    
    When the user requestes a low enough period ns value, then the
    calculations in pwm_lpss_prepare() might result in a base_unit value
    which is bigger then base_unit_range - 1. Currently the codes for this
    deals with this by applying a mask:
    
            base_unit &= (base_unit_range - 1);
    
    But this means that we let the value overflow the range, we throw away the
    higher bits and store whatever value is left in the lower bits into the
    register leading to a random output frequency, rather then clamping the
    output frequency to the highest frequency which the hardware can do.
    
    This commit fixes both issues by clamping the base_unit value to be
    between 1 and (base_unit_range - 1).
    
    Fixes: 684309e5043e ("pwm: lpss: Avoid potential overflow of base_unit")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200903112337.4113-5-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bec75ab830e158a1c3da0ebff147abc29fc13ea
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Sep 3 13:23:23 2020 +0200

    pwm: lpss: Fix off by one error in base_unit math in pwm_lpss_prepare()
    
    [ Upstream commit 181f4d2f44463fe09fe4df02e03095cb87151c29 ]
    
    According to the data-sheet the way the PWM controller works is that
    each input clock-cycle the base_unit gets added to a N bit counter and
    that counter overflowing determines the PWM output frequency.
    
    So assuming e.g. a 16 bit counter this means that if base_unit is set to 1,
    after 65535 input clock-cycles the counter has been increased from 0 to
    65535 and it will overflow on the next cycle, so it will overflow after
    every 65536 clock cycles and thus the calculations done in
    pwm_lpss_prepare() should use 65536 and not 65535.
    
    This commit fixes this. Note this also aligns the calculations in
    pwm_lpss_prepare() with those in pwm_lpss_get_state().
    
    Note this effectively reverts commit 684309e5043e ("pwm: lpss: Avoid
    potential overflow of base_unit"). The next patch in this series really
    fixes the potential overflow of the base_unit value.
    
    Fixes: 684309e5043e ("pwm: lpss: Avoid potential overflow of base_unit")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200903112337.4113-4-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d3ea48901521b17d2988564d3f748d8f35829b9
Author: Artem Savkov <asavkov@redhat.com>
Date:   Wed Sep 2 14:00:45 2020 +0200

    pty: do tty_flip_buffer_push without port->lock in pty_write
    
    [ Upstream commit 71a174b39f10b4b93223d374722aa894b5d8a82e ]
    
    b6da31b2c07c "tty: Fix data race in tty_insert_flip_string_fixed_flag"
    puts tty_flip_buffer_push under port->lock introducing the following
    possible circular locking dependency:
    
    [30129.876566] ======================================================
    [30129.876566] WARNING: possible circular locking dependency detected
    [30129.876567] 5.9.0-rc2+ #3 Tainted: G S      W
    [30129.876568] ------------------------------------------------------
    [30129.876568] sysrq.sh/1222 is trying to acquire lock:
    [30129.876569] ffffffff92c39480 (console_owner){....}-{0:0}, at: console_unlock+0x3fe/0xa90
    
    [30129.876572] but task is already holding lock:
    [30129.876572] ffff888107cb9018 (&pool->lock/1){-.-.}-{2:2}, at: show_workqueue_state.cold.55+0x15b/0x6ca
    
    [30129.876576] which lock already depends on the new lock.
    
    [30129.876577] the existing dependency chain (in reverse order) is:
    
    [30129.876578] -> #3 (&pool->lock/1){-.-.}-{2:2}:
    [30129.876581]        _raw_spin_lock+0x30/0x70
    [30129.876581]        __queue_work+0x1a3/0x10f0
    [30129.876582]        queue_work_on+0x78/0x80
    [30129.876582]        pty_write+0x165/0x1e0
    [30129.876583]        n_tty_write+0x47f/0xf00
    [30129.876583]        tty_write+0x3d6/0x8d0
    [30129.876584]        vfs_write+0x1a8/0x650
    
    [30129.876588] -> #2 (&port->lock#2){-.-.}-{2:2}:
    [30129.876590]        _raw_spin_lock_irqsave+0x3b/0x80
    [30129.876591]        tty_port_tty_get+0x1d/0xb0
    [30129.876592]        tty_port_default_wakeup+0xb/0x30
    [30129.876592]        serial8250_tx_chars+0x3d6/0x970
    [30129.876593]        serial8250_handle_irq.part.12+0x216/0x380
    [30129.876593]        serial8250_default_handle_irq+0x82/0xe0
    [30129.876594]        serial8250_interrupt+0xdd/0x1b0
    [30129.876595]        __handle_irq_event_percpu+0xfc/0x850
    
    [30129.876602] -> #1 (&port->lock){-.-.}-{2:2}:
    [30129.876605]        _raw_spin_lock_irqsave+0x3b/0x80
    [30129.876605]        serial8250_console_write+0x12d/0x900
    [30129.876606]        console_unlock+0x679/0xa90
    [30129.876606]        register_console+0x371/0x6e0
    [30129.876607]        univ8250_console_init+0x24/0x27
    [30129.876607]        console_init+0x2f9/0x45e
    
    [30129.876609] -> #0 (console_owner){....}-{0:0}:
    [30129.876611]        __lock_acquire+0x2f70/0x4e90
    [30129.876612]        lock_acquire+0x1ac/0xad0
    [30129.876612]        console_unlock+0x460/0xa90
    [30129.876613]        vprintk_emit+0x130/0x420
    [30129.876613]        printk+0x9f/0xc5
    [30129.876614]        show_pwq+0x154/0x618
    [30129.876615]        show_workqueue_state.cold.55+0x193/0x6ca
    [30129.876615]        __handle_sysrq+0x244/0x460
    [30129.876616]        write_sysrq_trigger+0x48/0x4a
    [30129.876616]        proc_reg_write+0x1a6/0x240
    [30129.876617]        vfs_write+0x1a8/0x650
    
    [30129.876619] other info that might help us debug this:
    
    [30129.876620] Chain exists of:
    [30129.876621]   console_owner --> &port->lock#2 --> &pool->lock/1
    
    [30129.876625]  Possible unsafe locking scenario:
    
    [30129.876626]        CPU0                    CPU1
    [30129.876626]        ----                    ----
    [30129.876627]   lock(&pool->lock/1);
    [30129.876628]                                lock(&port->lock#2);
    [30129.876630]                                lock(&pool->lock/1);
    [30129.876631]   lock(console_owner);
    
    [30129.876633]  *** DEADLOCK ***
    
    [30129.876634] 5 locks held by sysrq.sh/1222:
    [30129.876634]  #0: ffff8881d3ce0470 (sb_writers#3){.+.+}-{0:0}, at: vfs_write+0x359/0x650
    [30129.876637]  #1: ffffffff92c612c0 (rcu_read_lock){....}-{1:2}, at: __handle_sysrq+0x4d/0x460
    [30129.876640]  #2: ffffffff92c612c0 (rcu_read_lock){....}-{1:2}, at: show_workqueue_state+0x5/0xf0
    [30129.876642]  #3: ffff888107cb9018 (&pool->lock/1){-.-.}-{2:2}, at: show_workqueue_state.cold.55+0x15b/0x6ca
    [30129.876645]  #4: ffffffff92c39980 (console_lock){+.+.}-{0:0}, at: vprintk_emit+0x123/0x420
    
    [30129.876648] stack backtrace:
    [30129.876649] CPU: 3 PID: 1222 Comm: sysrq.sh Tainted: G S      W         5.9.0-rc2+ #3
    [30129.876649] Hardware name: Intel Corporation 2012 Client Platform/Emerald Lake 2, BIOS ACRVMBY1.86C.0078.P00.1201161002 01/16/2012
    [30129.876650] Call Trace:
    [30129.876650]  dump_stack+0x9d/0xe0
    [30129.876651]  check_noncircular+0x34f/0x410
    [30129.876653]  __lock_acquire+0x2f70/0x4e90
    [30129.876656]  lock_acquire+0x1ac/0xad0
    [30129.876658]  console_unlock+0x460/0xa90
    [30129.876660]  vprintk_emit+0x130/0x420
    [30129.876660]  printk+0x9f/0xc5
    [30129.876661]  show_pwq+0x154/0x618
    [30129.876662]  show_workqueue_state.cold.55+0x193/0x6ca
    [30129.876664]  __handle_sysrq+0x244/0x460
    [30129.876665]  write_sysrq_trigger+0x48/0x4a
    [30129.876665]  proc_reg_write+0x1a6/0x240
    [30129.876666]  vfs_write+0x1a8/0x650
    
    It looks like the commit was aimed to protect tty_insert_flip_string and
    there is no need for tty_flip_buffer_push to be under this lock.
    
    Fixes: b6da31b2c07c ("tty: Fix data race in tty_insert_flip_string_fixed_flag")
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Acked-by: Jiri Slaby <jirislaby@kernel.org>
    Link: https://lore.kernel.org/r/20200902120045.3693075-1-asavkov@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51ba64f0b37b2944758ae77d71ee099983ee930a
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Thu Aug 20 18:46:38 2020 -0500

    tty: hvcs: Don't NULL tty->driver_data until hvcs_cleanup()
    
    [ Upstream commit 63ffcbdad738e3d1c857027789a2273df3337624 ]
    
    The code currently NULLs tty->driver_data in hvcs_close() with the
    intent of informing the next call to hvcs_open() that device needs to be
    reconfigured. However, when hvcs_cleanup() is called we copy hvcsd from
    tty->driver_data which was previoulsy NULLed by hvcs_close() and our
    call to tty_port_put(&hvcsd->port) doesn't actually do anything since
    &hvcsd->port ends up translating to NULL by chance. This has the side
    effect that when hvcs_remove() is called we have one too many port
    references preventing hvcs_destuct_port() from ever being called. This
    also prevents us from reusing the /dev/hvcsX node in a future
    hvcs_probe() and we can eventually run out of /dev/hvcsX devices.
    
    Fix this by waiting to NULL tty->driver_data in hvcs_cleanup().
    
    Fixes: 27bf7c43a19c ("TTY: hvcs, add tty install")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Link: https://lore.kernel.org/r/20200820234643.70412-1-tyreld@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ee8f08ff33bf98896bcf46089f7ae7b45b30b32
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Fri Aug 28 08:39:50 2020 -0400

    tty: serial: earlycon dependency
    
    [ Upstream commit 0fb9342d06b0f667b915ba58bfefc030e534a218 ]
    
    parse_options() in drivers/tty/serial/earlycon.c calls uart_parse_earlycon
    in drivers/tty/serial/serial_core.c therefore selecting SERIAL_EARLYCON
    should automatically select SERIAL_CORE, otherwise will result in symbol
    not found error during linking if SERIAL_CORE is not configured as builtin
    
    Fixes: 9aac5887595b ("tty/serial: add generic serial earlycon")
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20200828123949.2642-1-ztong0001@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b02a43257805da6f670c1a1fe40d19499d9c741
Author: Alex Dewar <alex.dewar90@gmail.com>
Date:   Tue Aug 25 17:45:18 2020 +0100

    VMCI: check return value of get_user_pages_fast() for errors
    
    [ Upstream commit 90ca6333fd65f318c47bff425e1ea36c0a5539f6 ]
    
    In a couple of places in qp_host_get_user_memory(),
    get_user_pages_fast() is called without properly checking for errors. If
    e.g. -EFAULT is returned, this negative value will then be passed on to
    qp_release_pages(), which expects a u64 as input.
    
    Fix this by only calling qp_release_pages() when we have a positive
    number returned.
    
    Fixes: 06164d2b72aa ("VMCI: queue pairs implementation.")
    Signed-off-by: Alex Dewar <alex.dewar90@gmail.com>
    Link: https://lore.kernel.org/r/20200825164522.412392-1-alex.dewar90@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6621e5beab45ad7c2569fcfd1259c5b80d2a7f9e
Author: dinghao.liu@zju.edu.cn <dinghao.liu@zju.edu.cn>
Date:   Thu Aug 20 14:38:17 2020 +0800

    backlight: sky81452-backlight: Fix refcount imbalance on error
    
    [ Upstream commit b7a4f80bc316a56d6ec8750e93e66f42431ed960 ]
    
    When of_property_read_u32_array() returns an error code, a
    pairing refcount decrement is needed to keep np's refcount
    balanced.
    
    Fixes: f705806c9f355 ("backlight: Add support Skyworks SKY81452 backlight driver")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 157a5d49c07cebc227f8e91cc7ab5573e756ff59
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:31 2020 +0800

    scsi: csiostor: Fix wrong return value in csio_hw_prep_fw()
    
    [ Upstream commit 44f4daf8678ae5f08c93bbe70792f90cd88e4649 ]
    
    On an error exit path, a negative error code should be returned instead of
    a positive return value.
    
    Link: https://lore.kernel.org/r/20200802111531.5065-1-tianjia.zhang@linux.alibaba.com
    Fixes: f40e74ffa3de ("csiostor:firmware upgrade fix")
    Cc: Praveen Madhavan <praveenm@chelsio.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6f0744313817f0447c1ebad98b9bd5420783e40
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:30 2020 +0800

    scsi: qla2xxx: Fix wrong return value in qla_nvme_register_hba()
    
    [ Upstream commit ca4fb89a3d714a770e9c73c649da830f3f4a5326 ]
    
    On an error exit path, a negative error code should be returned instead of
    a positive return value.
    
    Link: https://lore.kernel.org/r/20200802111530.5020-1-tianjia.zhang@linux.alibaba.com
    Fixes: 8777e4314d39 ("scsi: qla2xxx: Migrate NVME N2N handling into state machine")
    Cc: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bff92c28da64d1561930638b58a3cbdada965bf2
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 12:15:27 2020 +0200

    scsi: qla4xxx: Fix an error handling path in 'qla4xxx_get_host_stats()'
    
    [ Upstream commit 574918e69720fe62ab3eb42ec3750230c8d16b06 ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()'.
    
    Link: https://lore.kernel.org/r/20200802101527.676054-1-christophe.jaillet@wanadoo.fr
    Fixes: 4161cee52df8 ("[SCSI] qla4xxx: Add host statistics support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37bc311de317d28a7325c273cdba725b76bd685f
Author: Tom Rix <trix@redhat.com>
Date:   Wed Aug 5 13:59:11 2020 -0700

    drm/gma500: fix error check
    
    [ Upstream commit cdd296cdae1af2d27dae3fcfbdf12c5252ab78cf ]
    
    Reviewing this block of code in cdv_intel_dp_init()
    
    ret = cdv_intel_dp_aux_native_read(gma_encoder, DP_DPCD_REV, ...
    
    cdv_intel_edp_panel_vdd_off(gma_encoder);
    if (ret == 0) {
            /* if this fails, presume the device is a ghost */
            DRM_INFO("failed to retrieve link info, disabling eDP\n");
            drm_encoder_cleanup(encoder);
            cdv_intel_dp_destroy(connector);
            goto err_priv;
    } else {
    
    The (ret == 0) is not strict enough.
    cdv_intel_dp_aux_native_read() returns > 0 on success
    otherwise it is failure.
    
    So change to <=
    
    Fixes: d112a8163f83 ("gma500/cdv: Add eDP support")
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200805205911.20927-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecb76221e5f32799879385a30d45920bed9db95e
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 13 19:34:58 2020 +0200

    staging: rtl8192u: Do not use GFP_KERNEL in atomic context
    
    [ Upstream commit acac75bb451fd39344eb54fad6602dfc9482e970 ]
    
    'rtl8192_irq_rx_tasklet()' is a tasklet initialized in
    'rtl8192_init_priv_task()'.
    >From this function it is possible to allocate some memory with the
    GFP_KERNEL flag, which is not allowed in the atomic context of a tasklet.
    
    Use GFP_ATOMIC instead.
    
    The call chain is:
      rtl8192_irq_rx_tasklet            (in r8192U_core.c)
        --> rtl8192_rx_nomal            (in r8192U_core.c)
          --> ieee80211_rx              (in ieee80211/ieee80211_rx.c)
            --> RxReorderIndicatePacket (in ieee80211/ieee80211_rx.c)
    
    Fixes: 79a5ccd97209 ("staging: rtl8192u: fix large frame size compiler warning")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20200813173458.758284-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 971b6d6fb1578d146678156f532078554b6ce57d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 9 11:29:06 2020 +0200

    mwifiex: Do not use GFP_KERNEL in atomic context
    
    [ Upstream commit d2ab7f00f4321370a8ee14e5630d4349fdacc42e ]
    
    A possible call chain is as follow:
      mwifiex_sdio_interrupt                            (sdio.c)
        --> mwifiex_main_process                        (main.c)
          --> mwifiex_process_cmdresp                   (cmdevt.c)
            --> mwifiex_process_sta_cmdresp             (sta_cmdresp.c)
              --> mwifiex_ret_802_11_scan               (scan.c)
                --> mwifiex_parse_single_response_buf   (scan.c)
    
    'mwifiex_sdio_interrupt()' is an interrupt function.
    
    Also note that 'mwifiex_ret_802_11_scan()' already uses GFP_ATOMIC.
    
    So use GFP_ATOMIC instead of GFP_KERNEL when memory is allocated in
    'mwifiex_parse_single_response_buf()'.
    
    Fixes: 7c6fa2a843c5 ("mwifiex: use cfg80211 dynamic scan table and cfg80211_get_bss API")
    or
    Fixes: 601216e12c65e ("mwifiex: process RX packets in SDIO IRQ thread directly")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200809092906.744621-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bb240a5dce34c6c8361a691695de86cac5c1c12
Author: Tom Rix <trix@redhat.com>
Date:   Sun Aug 2 09:18:04 2020 -0700

    brcmfmac: check ndev pointer
    
    [ Upstream commit 9c9f015bc9f8839831c7ba0a6d731a3853c464e2 ]
    
    Clang static analysis reports this error
    
    brcmfmac/core.c:490:4: warning: Dereference of null pointer
            (*ifp)->ndev->stats.rx_errors++;
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In this block of code
    
            if (ret || !(*ifp) || !(*ifp)->ndev) {
                    if (ret != -ENODATA && *ifp)
                            (*ifp)->ndev->stats.rx_errors++;
                    brcmu_pkt_buf_free_skb(skb);
                    return -ENODATA;
            }
    
    (*ifp)->ndev being NULL is caught as an error
    But then it is used to report the error.
    
    So add a check before using it.
    
    Fixes: 91b632803ee4 ("brcmfmac: Use net_device_stats from struct net_device")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200802161804.6126-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebbf54a8fb311af4b204ecb9a75cbd44ebb7b3e0
Author: Rohit kumar <rohitkr@codeaurora.org>
Date:   Fri Aug 14 16:23:02 2020 +0530

    ASoC: qcom: lpass-cpu: fix concurrency issue
    
    [ Upstream commit 753a6e17942f6f425ca622e1610625998312ad89 ]
    
    i2sctl register value is set to 0 during hw_free(). This
    impacts any ongoing concurrent session on the same i2s
    port. As trigger() stop already resets enable bit to 0,
    there is no need of explicit hw_free. Removing it to
    fix the issue.
    
    Fixes: 80beab8e1d86 ("ASoC: qcom: Add LPASS CPU DAI driver")
    Signed-off-by: Rohit kumar <rohitkr@codeaurora.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/1597402388-14112-7-git-send-email-rohitkr@codeaurora.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39676349044c80cd4376da758ff19a132bee3b89
Author: Rohit kumar <rohitkr@codeaurora.org>
Date:   Fri Aug 14 16:23:00 2020 +0530

    ASoC: qcom: lpass-platform: fix memory leak
    
    [ Upstream commit 5fd188215d4eb52703600d8986b22311099a5940 ]
    
    lpass_pcm_data is never freed. Free it in close
    ops to avoid memory leak.
    
    Fixes: 022d00ee0b55 ("ASoC: lpass-platform: Fix broken pcm data usage")
    Signed-off-by: Rohit kumar <rohitkr@codeaurora.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/1597402388-14112-5-git-send-email-rohitkr@codeaurora.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6025fe80dce405c04a5f13625bd2edd5bce7a0a2
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Sun Aug 2 01:48:24 2020 +0100

    wcn36xx: Fix reported 802.11n rx_highest rate wcn3660/wcn3680
    
    [ Upstream commit 3b9fb6791e7113679b1eb472e6ce1659e80f5797 ]
    
    Qualcomm's document "80-WL007-1 Rev. J" states that the highest rx rate for
    the WCN3660 and WCN3680 on MCS 7 is 150 Mbps not the 72 Mbps stated here.
    
    This patch fixes the data-rate declared in the 5GHz table.
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680
    hardware")
    
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200802004824.1307124-1-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fce8b6d2fce826e0a30f03157c2ba0392298d65e
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 14:22:27 2020 +0200

    ath10k: Fix the size used in a 'dma_free_coherent()' call in an error handling path
    
    [ Upstream commit 454530a9950b5a26d4998908249564cedfc4babc ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()'.
    
    Fixes: 1863008369ae ("ath10k: fix shadow register implementation for WCN3990")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Rakesh Pillai <pillair@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200802122227.678637-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc72a1bc52d6cee2603f149ff13a52144bc01b4e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 13 17:12:53 2020 +0300

    ath9k: Fix potential out of bounds in ath9k_htc_txcompletion_cb()
    
    [ Upstream commit 2705cd7558e718a7240c64eb0afb2edad5f8c190 ]
    
    The value of "htc_hdr->endpoint_id" comes from skb->data so Smatch marks
    it as untrusted so we have to check it before using it as an array
    offset.
    
    This is similar to a bug that syzkaller found in commit e4ff08a4d727
    ("ath9k: Fix use-after-free Write in ath9k_htc_rx_msg") so it is
    probably a real issue.
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200813141253.GA457408@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a277e5b8179117c9e2544580c1e2ebc297a699d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 13 17:13:15 2020 +0300

    ath6kl: prevent potential array overflow in ath6kl_add_new_sta()
    
    [ Upstream commit 54f9ab7b870934b70e5a21786d951fbcf663970f ]
    
    The value for "aid" comes from skb->data so Smatch marks it as
    untrusted.  If it's invalid then it can result in an out of bounds array
    access in ath6kl_add_new_sta().
    
    Fixes: 572e27c00c9d ("ath6kl: Fix AP mode connect event parsing and TIM updates")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200813141315.GB457408@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aea63181b6fcb6b9ccde1ada9ea51be19c4015af
Author: Samuel Holland <samuel@sholland.org>
Date:   Sat Aug 1 11:29:56 2020 -0500

    Bluetooth: hci_uart: Cancel init work before unregistering
    
    [ Upstream commit 3b799254cf6f481460719023d7a18f46651e5e7f ]
    
    If hci_uart_tty_close() or hci_uart_unregister_device() is called while
    hu->init_ready is scheduled, hci_register_dev() could be called after
    the hci_uart is torn down. Avoid this by ensuring the work is complete
    or canceled before checking the HCI_UART_REGISTERED flag.
    
    Fixes: 9f2aee848fe6 ("Bluetooth: Add delayed init sequence support for UART controllers")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41f77cc516d3f86a32c1fa46a8358ef8aefae5da
Author: Venkateswara Naralasetty <vnaralas@codeaurora.org>
Date:   Mon Jun 15 20:29:03 2020 +0300

    ath10k: provide survey info as accumulated data
    
    [ Upstream commit 720e5c03e5cb26d33d97f55192b791bb48478aa5 ]
    
    It is expected that the returned counters by .get_survey are monotonic
    increasing. But the data from ath10k gets reset to zero regularly. Channel
    active/busy time are then showing incorrect values (less than previous or
    sometimes zero) for the currently active channel during successive survey
    dump commands.
    
    example:
    
      $ iw dev wlan0 survey dump
      Survey data from wlan0
            frequency:                      5180 MHz [in use]
            channel active time:            54995 ms
            channel busy time:              432 ms
            channel receive time:           0 ms
            channel transmit time:          59 ms
      ...
    
      $ iw dev wlan0 survey dump
      Survey data from wlan0
            frequency:                      5180 MHz [in use]
            channel active time:            32592 ms
            channel busy time:              254 ms
            channel receive time:           0 ms
            channel transmit time:          0 ms
      ...
    
    The correct way to handle this is to use the non-clearing
    WMI_BSS_SURVEY_REQ_TYPE_READ wmi_bss_survey_req_type. The firmware will
    then accumulate the survey data and handle wrap arounds.
    
    Tested-on: QCA9984 hw1.0 10.4-3.5.3-00057
    Tested-on: QCA988X hw2.0 10.2.4-1.0-00047
    Tested-on: QCA9888 hw2.0 10.4-3.9.0.2-00024
    Tested-on: QCA4019 hw1.0 10.4-3.6-00140
    
    Fixes: fa7937e3d5c2 ("ath10k: update bss channel survey information")
    Signed-off-by: Venkateswara Naralasetty <vnaralas@codeaurora.org>
    Tested-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Tested-by: John Deere <24601deerej@gmail.com>
    [sven@narfation.org: adjust commit message]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1592232686-28712-1-git-send-email-kvalo@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71c611d6b2801c9d26db4a3ef7c369d73cea244c
Author: Łukasz Stelmach <l.stelmach@samsung.com>
Date:   Fri Oct 2 14:22:37 2020 +0200

    spi: spi-s3c64xx: Check return values
    
    [ Upstream commit 2f4db6f705c5cba85d23836c19b44d9687dc1334 ]
    
    Check return values in prepare_dma() and s3c64xx_spi_config() and
    propagate errors upwards.
    
    Fixes: 788437273fa8 ("spi: s3c64xx: move to generic dmaengine API")
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Łukasz Stelmach <l.stelmach@samsung.com>
    Link: https://lore.kernel.org/r/20201002122243.26849-4-l.stelmach@samsung.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96eb5e0dd2915a962b700ed118f1ec04bfb6b611
Author: Łukasz Stelmach <l.stelmach@samsung.com>
Date:   Fri Oct 2 14:22:35 2020 +0200

    spi: spi-s3c64xx: swap s3c64xx_spi_set_cs() and s3c64xx_enable_datapath()
    
    [ Upstream commit 581e2b41977dfc2d4c26c8e976f89c43bb92f9bf ]
    
    Fix issues with DMA transfers bigger than 512 bytes on Exynos3250. Without
    the patches such transfers fail to complete. This solution to the problem
    is found in the vendor kernel for ARTIK5 boards based on Exynos3250.
    
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Łukasz Stelmach <l.stelmach@samsung.com>
    Link: https://lore.kernel.org/r/20201002122243.26849-2-l.stelmach@samsung.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98f559201c875dcedffbb268c8308055db2dfeb8
Author: Necip Fazil Yildiran <fazilyildiran@gmail.com>
Date:   Mon Sep 14 17:40:26 2020 +0300

    pinctrl: bcm: fix kconfig dependency warning when !GPIOLIB
    
    [ Upstream commit 513034d8b089b9a49dab57845aee70e830fe7334 ]
    
    When PINCTRL_BCM2835 is enabled and GPIOLIB is disabled, it results in the
    following Kbuild warning:
    
    WARNING: unmet direct dependencies detected for GPIOLIB_IRQCHIP
      Depends on [n]: GPIOLIB [=n]
      Selected by [y]:
      - PINCTRL_BCM2835 [=y] && PINCTRL [=y] && OF [=y] && (ARCH_BCM2835 [=n] || ARCH_BRCMSTB [=n] || COMPILE_TEST [=y])
    
    The reason is that PINCTRL_BCM2835 selects GPIOLIB_IRQCHIP without
    depending on or selecting GPIOLIB while GPIOLIB_IRQCHIP is subordinate to
    GPIOLIB.
    
    Honor the kconfig menu hierarchy to remove kconfig dependency warnings.
    
    Fixes: 85ae9e512f43 ("pinctrl: bcm2835: switch to GPIOLIB_IRQCHIP")
    Signed-off-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Link: https://lore.kernel.org/r/20200914144025.371370-1-fazilyildiran@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fc99e38fdbf6b693693f861aa55a50a74c2d202
Author: Michał Mirosław <mirq-linux@rere.qmqm.pl>
Date:   Sat Sep 26 23:32:41 2020 +0200

    regulator: resolve supply after creating regulator
    
    [ Upstream commit aea6cb99703e17019e025aa71643b4d3e0a24413 ]
    
    When creating a new regulator its supply cannot create the sysfs link
    because the device is not yet published. Remove early supply resolving
    since it will be done later anyway. This makes the following error
    disappear and the symlinks get created instead.
    
      DCDC_REG1: supplied by VSYS
      VSYS: could not add device link regulator.3 err -2
    
    Note: It doesn't fix the problem for bypassed regulators, though.
    
    Fixes: 45389c47526d ("regulator: core: Add early supply resolution for regulators")
    Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Link: https://lore.kernel.org/r/ba09e0a8617ffeeb25cb4affffe6f3149319cef8.1601155770.git.mirq-linux@rere.qmqm.pl
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0284adc407d0c5b88f5feea1a3d1849e670acac6
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 04:56:05 2020 +0200

    media: ti-vpe: Fix a missing check and reference count leak
    
    [ Upstream commit 7dae2aaaf432767ca7aa11fa84643a7c2600dbdd ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    And also, when the call of function vpe_runtime_get() failed,
    we won't call vpe_runtime_put().
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails
    inside vpe_runtime_get().
    
    Fixes: 4571912743ac ("[media] v4l: ti-vpe: Add VPE mem to mem driver")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52efde52dfc47e263c8d7fce5129878efc8737bf
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 04:36:59 2020 +0200

    media: stm32-dcmi: Fix a reference count leak
    
    [ Upstream commit 88f50a05f907d96a27a9ce3cc9e8cbb91a6f0f22 ]
    
    Calling pm_runtime_get_sync increments the counter even in case of
    failure, causing incorrect ref count if pm_runtime_put is not
    called in error handling paths. Thus replace the jump target
    "err_release_buffers" by "err_pm_putw".
    
    Fixes: 152e0bf60219 ("media: stm32-dcmi: add power saving support")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 815501d08cde0dd4e62fb15e007e847b1a57140b
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 04:31:22 2020 +0200

    media: s5p-mfc: Fix a reference count leak
    
    [ Upstream commit 78741ce98c2e36188e2343434406b0e0bc50b0e7 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails.
    
    Fixes: c5086f130a77 ("[media] s5p-mfc: Use clock gating only on MFC v5 hardware")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 766fb94198edbd9c0917f948150e8c63f5bc4cd6
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 01:27:12 2020 +0200

    media: camss: Fix a reference count leak.
    
    [ Upstream commit d0675b67b42eb4f1a840d1513b5b00f78312f833 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    PM runtime put is not called in error handling paths.
    Thus call pm_runtime_put_sync() if pm_runtime_get_sync() fails.
    
    Fixes: 02afa816dbbf ("media: camss: Add basic runtime PM support")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 442bb53ffe8dff9f97289477510b611a0117246c
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 01:19:44 2020 +0200

    media: platform: fcp: Fix a reference count leak.
    
    [ Upstream commit 63e36a381d92a9cded97e90d481ee22566557dd1 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails.
    
    Fixes: 6eaafbdb668b ("[media] v4l: rcar-fcp: Keep the coding style consistent")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ead1800340964bbe1a884c70ca09e98101b71fb
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 01:13:49 2020 +0200

    media: rockchip/rga: Fix a reference count leak.
    
    [ Upstream commit 884d638e0853c4b5f01eb6d048fc3b6239012404 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus call pm_runtime_put_noidle()
    if pm_runtime_get_sync() fails.
    
    Fixes: f7e7b48e6d79 ("[media] rockchip/rga: v4l2 m2m support")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dc9270d00140d7ac5bf4aabf5abfac6b95d4467
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 00:30:08 2020 +0200

    media: rcar-vin: Fix a reference count leak.
    
    [ Upstream commit aaffa0126a111d65f4028c503c76192d4cc93277 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus call pm_runtime_put_noidle()
    if pm_runtime_get_sync() fails.
    
    Fixes: 90dedce9bc54 ("media: rcar-vin: add function to manipulate Gen3 chsel value")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e19d4e69cdf44ac3977b04d99d6d4117af49d41c
Author: Tom Rix <trix@redhat.com>
Date:   Wed Sep 2 20:32:12 2020 +0200

    media: tc358743: cleanup tc358743_cec_isr
    
    [ Upstream commit 877cb8a444dad2304e891294afb0915fe3c278d6 ]
    
    tc358743_cec_isr is misnammed, it is not the main isr.
    So rename it to be consistent with its siblings,
    tc358743_cec_handler.
    
    It also does not check if its input parameter 'handled' is
    is non NULL like its siblings, so add a check.
    
    Fixes: a0ec8d1dc42e ("media: tc358743: add CEC support")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6757a430008baf9664893ff51ffb0b5bafc157e4
Author: Tom Rix <trix@redhat.com>
Date:   Sun Aug 30 18:30:43 2020 +0200

    media: tc358743: initialize variable
    
    [ Upstream commit 274cf92d5dff5c2fec1a518078542ffe70d07646 ]
    
    clang static analysis flags this error
    
    tc358743.c:1468:9: warning: Branch condition evaluates
      to a garbage value
            return handled ? IRQ_HANDLED : IRQ_NONE;
                   ^~~~~~~
    handled should be initialized to false.
    
    Fixes: d747b806abf4 ("[media] tc358743: add direct interrupt handling")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cf628ac27fbab58512b2b1c26d44530fa31c566
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Aug 26 11:26:04 2020 +0200

    media: mx2_emmaprp: Fix memleak in emmaprp_probe
    
    [ Upstream commit 21d387b8d372f859d9e87fdcc7c3b4a432737f4d ]
    
    When platform_get_irq() fails, we should release
    vfd and unregister pcdev->v4l2_dev just like the
    subsequent error paths.
    
    Fixes: d4e192cc44914 ("media: mx2_emmaprp: Check for platform_get_irq() error")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97b4000637698d14dfe9bf052cc2ec4f6a071df4
Author: Xiaoliang Pang <dawning.pang@gmail.com>
Date:   Mon Sep 14 11:00:51 2020 +0800

    cypto: mediatek - fix leaks in mtk_desc_ring_alloc
    
    [ Upstream commit 228d284aac61283cde508a925d666f854b57af63 ]
    
    In the init loop, if an error occurs in function 'dma_alloc_coherent',
    then goto the err_cleanup section, after run i--,
    in the array ring, the struct mtk_ring with index i will not be released,
    causing memory leaks
    
    Fixes: 785e5c616c849 ("crypto: mediatek - Add crypto driver support for some MediaTek chips")
    Cc: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Xiaoliang Pang <dawning.pang@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 189b333897b697bc4bd5bc0cc1e83b37b4c04944
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu Sep 17 14:39:29 2020 -0700

    hwmon: (pmbus/max34440) Fix status register reads for MAX344{51,60,61}
    
    [ Upstream commit 6c094b31ea2ad773824362ba0fccb88d36f8d32d ]
    
    Starting with MAX34451, the chips of this series support STATUS_IOUT and
    STATUS_TEMPERATURE commands, and no longer report over-current and
    over-temperature status with STATUS_MFR_SPECIFIC.
    
    Fixes: 7a001dbab4ade ("hwmon: (pmbus/max34440) Add support for MAX34451.")
    Fixes: 50115ac9b6f35 ("hwmon: (pmbus/max34440) Add support for MAX34460 and MAX34461")
    Reported-by: Steve Foreman <foremans@google.com>
    Cc: Steve Foreman <foremans@google.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a2141fb67348468f2ffa9128a6870ccd27a6c33
Author: Tero Kristo <t-kristo@ti.com>
Date:   Mon Sep 7 10:56:24 2020 +0300

    crypto: omap-sham - fix digcnt register handling with export/import
    
    [ Upstream commit 3faf757bad75f3fc1b2736f0431e295a073a7423 ]
    
    Running export/import for hashes in peculiar order (mostly done by
    openssl) can mess up the internal book keeping of the OMAP SHA core.
    Fix by forcibly writing the correct DIGCNT back to hardware. This issue
    was noticed while transitioning to openssl 1.1 support.
    
    Fixes: 0d373d603202 ("crypto: omap-sham - Add OMAP4/AM33XX SHAM Support")
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cfd9b85b72b561912a9812ff7da7cb74a8cf82a
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Aug 24 08:53:52 2020 +0200

    media: omap3isp: Fix memleak in isp_probe
    
    [ Upstream commit d8fc21c17099635e8ebd986d042be65a6c6b5bd0 ]
    
    When devm_ioremap_resource() fails, isp should be
    freed just like other error paths in isp_probe.
    
    Fixes: 8644cdf972dd6 ("[media] omap3isp: Replace many MMIO regions by two")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26c139c2eab3add1fd1b8802edbc4459c8bd8e46
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Wed Aug 19 01:56:49 2020 +0200

    media: uvcvideo: Silence shift-out-of-bounds warning
    
    [ Upstream commit 171994e498a0426cbe17f874c5c6af3c0af45200 ]
    
    UBSAN reports a shift-out-of-bounds warning in uvc_get_le_value(). The
    report is correct, but the issue should be harmless as the computed
    value isn't used when the shift is negative. This may however cause
    incorrect behaviour if a negative shift could generate adverse side
    effects (such as a trap on some architectures for instance).
    
    Regardless of whether that may happen or not, silence the warning as a
    full WARN backtrace isn't nice.
    
    Reported-by: Bart Van Assche <bvanassche@acm.org>
    Fixes: c0efd232929c ("V4L/DVB (8145a): USB Video Class driver")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Tested-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bf923f220090e9dc71e6d684803bef5741b64fe
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Sun Jun 7 04:05:49 2020 +0200

    media: uvcvideo: Set media controller entity functions
    
    [ Upstream commit d6834b4b58d110814aaf3469e7fd87d34ae5ae81 ]
    
    The media controller core prints a warning when an entity is registered
    without a function being set. This affects the uvcvideo driver, as the
    warning was added without first addressing the issue in existing
    drivers. The problem is harmless, but unnecessarily worries users. Fix
    it by mapping UVC entity types to MC entity functions as accurately as
    possible using the existing functions.
    
    Fixes: b50bde4e476d ("[media] v4l2-subdev: use MEDIA_ENT_T_UNKNOWN for new subdevs")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1c2f8bb571eac621bc2d46544d0d0a90cc9eac1
Author: Tom Rix <trix@redhat.com>
Date:   Sun Jul 19 17:34:47 2020 +0200

    media: m5mols: Check function pointer in m5mols_sensor_power
    
    [ Upstream commit 52438c4463ac904d14bf3496765e67750766f3a6 ]
    
    clang static analysis reports this error
    
    m5mols_core.c:767:4: warning: Called function pointer
      is null (null dereference) [core.CallAndMessage]
        info->set_power(&client->dev, 0);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In other places, the set_power ptr is checked.
    So add a check.
    
    Fixes: bc125106f8af ("[media] Add support for M-5MOLS 8 Mega Pixel camera ISP")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d81bfffb3c16f41b40c15a2be093e5ed3c58aa18
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Mon Aug 10 17:32:39 2020 +0200

    media: Revert "media: exynos4-is: Add missed check for pinctrl_lookup_state()"
    
    [ Upstream commit 00d21f325d58567d81d9172096692d0a9ea7f725 ]
    
    The "idle" pinctrl state is optional as documented in the DT binding.
    The change introduced by the commit being reverted makes that pinctrl state
    mandatory and breaks initialization of the whole media driver, since the
    "idle" state is not specified in any mainline dts.
    
    This reverts commit 18ffec750578 ("media: exynos4-is: Add missed check for pinctrl_lookup_state()")
    to fix the regression.
    
    Fixes: 18ffec750578 ("media: exynos4-is: Add missed check for pinctrl_lookup_state()")
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9470165379bb518fb670d38fa3150931a225636
Author: Tom Rix <trix@redhat.com>
Date:   Sat Aug 22 23:15:47 2020 +0200

    media: tuner-simple: fix regression in simple_set_radio_freq
    
    [ Upstream commit 505bfc2a142f12ce7bc7a878b44abc3496f2e747 ]
    
    clang static analysis reports this problem
    
    tuner-simple.c:714:13: warning: Assigned value is
      garbage or undefined
            buffer[1] = buffer[3];
                      ^ ~~~~~~~~~
    In simple_set_radio_freq buffer[3] used to be done
    in-function with a switch of tuner type, now done
    by a call to simple_radio_bandswitch which has this case
    
            case TUNER_TENA_9533_DI:
            case TUNER_YMEC_TVF_5533MF:
                    tuner_dbg("This tuner doesn't ...
                    return 0;
    
    which does not set buffer[3].  In the old logic, this case
    would have returned 0 from simple_set_radio_freq.
    
    Recover this old behavior by returning an error for this
    codition. Since the old simple_set_radio_freq behavior
    returned a 0, do the same.
    
    Fixes: c7a9f3aa1e1b ("V4L/DVB (7129): tuner-simple: move device-specific code into three separate functions")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90b14b4fb5b91795ebeacb066d16d92a7e65545f
Author: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
Date:   Tue Aug 11 18:00:24 2020 +0530

    crypto: picoxcell - Fix potential race condition bug
    
    [ Upstream commit 64f4a62e3b17f1e473f971127c2924cae42afc82 ]
    
    engine->stat_irq_thresh was initialized after device_create_file() in
    the probe function, the initialization may race with call to
    spacc_stat_irq_thresh_store() which updates engine->stat_irq_thresh,
    therefore initialize it before creating the file in probe function.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: ce92136843cb ("crypto: picoxcell - add support for the...")
    Signed-off-by: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
    Acked-by: Jamie Iles <jamie@jamieiles.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae2de8949516aa66a81a1d9a359e2c117424158f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 16:56:48 2020 +0200

    crypto: ixp4xx - Fix the size used in a 'dma_free_coherent()' call
    
    [ Upstream commit f7ade9aaf66bd5599690acf0597df2c0f6cd825a ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()', in 'setup_crypt_desc()'.
    
    Fixes: 81bef0150074 ("crypto: ixp4xx - Hardware crypto support for IXP4xx CPUs")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7b164f4d6021ed1b3eea043bc9e21b6cdbdbbf8
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:32 2020 +0800

    crypto: mediatek - Fix wrong return value in mtk_desc_ring_alloc()
    
    [ Upstream commit 8cbde6c6a6d2b1599ff90f932304aab7e32fce89 ]
    
    In case of memory allocation failure, a negative error code should
    be returned.
    
    Fixes: 785e5c616c849 ("crypto: mediatek - Add crypto driver support for some MediaTek chips")
    Cc: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0112ecef7d8e65b71ee9e30d9635788ddcbb48b
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jul 31 17:03:27 2020 +1000

    crypto: algif_skcipher - EBUSY on aio should be an error
    
    [ Upstream commit 2a05b029c1ee045b886ebf9efef9985ca23450de ]
    
    I removed the MAY_BACKLOG flag on the aio path a while ago but
    the error check still incorrectly interpreted EBUSY as success.
    This may cause the submitter to wait for a request that will never
    complete.
    
    Fixes: dad419970637 ("crypto: algif_skcipher - Do not set...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e78c9feafb9e4399fc31d11df862afd6a7de5bfa
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Oct 1 12:39:00 2020 +0100

    x86/events/amd/iommu: Fix sizeof mismatch
    
    [ Upstream commit 59d5396a4666195f89a67e118e9e627ddd6f53a1 ]
    
    An incorrect sizeof is being used, struct attribute ** is not correct,
    it should be struct attribute *. Note that since ** is the same size as
    * this is not causing any issues.  Improve this fix by using sizeof(*attrs)
    as this allows us to not even reference the type of the pointer.
    
    Addresses-Coverity: ("Sizeof not portable (SIZEOF_MISMATCH)")
    Fixes: 51686546304f ("x86/events/amd/iommu: Fix sysfs perf attribute groups")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20201001113900.58889-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0cc22fa1ea248e48dfc354a33c0a34a70e8cfe6
Author: Libing Zhou <libing.zhou@nokia-sbell.com>
Date:   Thu Aug 20 10:56:41 2020 +0800

    x86/nmi: Fix nmi_handle() duration miscalculation
    
    [ Upstream commit f94c91f7ba3ba7de2bc8aa31be28e1abb22f849e ]
    
    When nmi_check_duration() is checking the time an NMI handler took to
    execute, the whole_msecs value used should be read from the @duration
    argument, not from the ->max_duration, the latter being used to store
    the current maximal duration.
    
     [ bp: Rewrite commit message. ]
    
    Fixes: 248ed51048c4 ("x86/nmi: Remove irq_work from the long duration NMI handler")
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Libing Zhou <libing.zhou@nokia-sbell.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Changbin Du <changbin.du@gmail.com>
    Link: https://lkml.kernel.org/r/20200820025641.44075-1-libing.zhou@nokia-sbell.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2fc0a13f93fad361fa412cfa5a26374ed8c695f
Author: Mark Salter <msalter@redhat.com>
Date:   Tue Sep 15 16:41:09 2020 -0400

    drivers/perf: xgene_pmu: Fix uninitialized resource struct
    
    [ Upstream commit a76b8236edcf5b785d044b930f9e14ad02b4a484 ]
    
    This splat was reported on newer Fedora kernels booting on certain
    X-gene based machines:
    
     xgene-pmu APMC0D83:00: X-Gene PMU version 3
     Unable to handle kernel read from unreadable memory at virtual \
     address 0000000000004006
     ...
     Call trace:
      string+0x50/0x100
      vsnprintf+0x160/0x750
      devm_kvasprintf+0x5c/0xb4
      devm_kasprintf+0x54/0x60
      __devm_ioremap_resource+0xdc/0x1a0
      devm_ioremap_resource+0x14/0x20
      acpi_get_pmu_hw_inf.isra.0+0x84/0x15c
      acpi_pmu_dev_add+0xbc/0x21c
      acpi_ns_walk_namespace+0x16c/0x1e4
      acpi_walk_namespace+0xb4/0xfc
      xgene_pmu_probe_pmu_dev+0x7c/0xe0
      xgene_pmu_probe.part.0+0x2c0/0x310
      xgene_pmu_probe+0x54/0x64
      platform_drv_probe+0x60/0xb4
      really_probe+0xe8/0x4a0
      driver_probe_device+0xe4/0x100
      device_driver_attach+0xcc/0xd4
      __driver_attach+0xb0/0x17c
      bus_for_each_dev+0x6c/0xb0
      driver_attach+0x30/0x40
      bus_add_driver+0x154/0x250
      driver_register+0x84/0x140
      __platform_driver_register+0x54/0x60
      xgene_pmu_driver_init+0x28/0x34
      do_one_initcall+0x40/0x204
      do_initcalls+0x104/0x144
      kernel_init_freeable+0x198/0x210
      kernel_init+0x20/0x12c
      ret_from_fork+0x10/0x18
     Code: 91000400 110004e1 eb08009f 540000c0 (38646846)
     ---[ end trace f08c10566496a703 ]---
    
    This is due to use of an uninitialized local resource struct in the xgene
    pmu driver. The thunderx2_pmu driver avoids this by using the resource list
    constructed by acpi_dev_get_resources() rather than using a callback from
    that function. The callback in the xgene driver didn't fully initialize
    the resource. So get rid of the callback and search the resource list as
    done by thunderx2.
    
    Fixes: 832c927d119b ("perf: xgene: Add APM X-Gene SoC Performance Monitoring Unit driver")
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Link: https://lore.kernel.org/r/20200915204110.326138-1-msalter@redhat.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87ab5f1415a7619983cc10fa099574512fdb9045
Author: Arvind Sankar <nivedita@alum.mit.edu>
Date:   Mon Sep 7 17:39:19 2020 -0400

    x86/fpu: Allow multiple bits in clearcpuid= parameter
    
    [ Upstream commit 0a4bb5e5507a585532cc413125b921c8546fc39f ]
    
    Commit
    
      0c2a3913d6f5 ("x86/fpu: Parse clearcpuid= as early XSAVE argument")
    
    changed clearcpuid parsing from __setup() to cmdline_find_option().
    While the __setup() function would have been called for each clearcpuid=
    parameter on the command line, cmdline_find_option() will only return
    the last one, so the change effectively made it impossible to disable
    more than one bit.
    
    Allow a comma-separated list of bit numbers as the argument for
    clearcpuid to allow multiple bits to be disabled again. Log the bits
    being disabled for informational purposes.
    
    Also fix the check on the return value of cmdline_find_option(). It
    returns -1 when the option is not found, so testing as a boolean is
    incorrect.
    
    Fixes: 0c2a3913d6f5 ("x86/fpu: Parse clearcpuid= as early XSAVE argument")
    Signed-off-by: Arvind Sankar <nivedita@alum.mit.edu>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200907213919.2423441-1-nivedita@alum.mit.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc0e1c91848e0615d73d4c22aa7b52d682cb8a9d
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Aug 27 09:07:43 2020 +0200

    EDAC/ti: Fix handling of platform_get_irq() error
    
    [ Upstream commit 66077adb70a2a9e92540155b2ace33ec98299c90 ]
    
    platform_get_irq() returns a negative error number on error. In such a
    case, comparison to 0 would pass the check therefore check the return
    value properly, whether it is negative.
    
     [ bp: Massage commit message. ]
    
    Fixes: 86a18ee21e5e ("EDAC, ti: Add support for TI keystone and DRA7xx EDAC")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Tero Kristo <t-kristo@ti.com>
    Link: https://lkml.kernel.org/r/20200827070743.26628-2-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00aed0eabc551d8f4544e8788e474e2887f8cc18
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Aug 26 20:14:37 2020 +0800

    EDAC/i5100: Fix error handling order in i5100_init_one()
    
    [ Upstream commit 857a3139bd8be4f702c030c8ca06f3fd69c1741a ]
    
    When pci_get_device_func() fails, the driver doesn't need to execute
    pci_dev_put(). mci should still be freed, though, to prevent a memory
    leak. When pci_enable_device() fails, the error injection PCI device
    "einj" doesn't need to be disabled either.
    
     [ bp: Massage commit message, rename label to "bail_mc_free". ]
    
    Fixes: 52608ba205461 ("i5100_edac: probe for device 19 function 0")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200826121437.31606-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba6c542786da102ad91ffae53579b2f83efba39
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jul 31 17:03:50 2020 +1000

    crypto: algif_aead - Do not set MAY_BACKLOG on the async path
    
    commit cbdad1f246dd98e6c9c32a6e5212337f542aa7e0 upstream.
    
    The async path cannot use MAY_BACKLOG because it is not meant to
    block, which is what MAY_BACKLOG does.  On the other hand, both
    the sync and async paths can make use of MAY_SLEEP.
    
    Fixes: 83094e5e9e49 ("crypto: af_alg - add async support to...")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c470dc530c9ee6ef4b22fed19c77e20c745564e1
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Fri Sep 4 11:23:28 2020 +0200

    ima: Don't ignore errors from crypto_shash_update()
    
    commit 60386b854008adc951c470067f90a2d85b5d520f upstream.
    
    Errors returned by crypto_shash_update() are not checked in
    ima_calc_boot_aggregate_tfm() and thus can be overwritten at the next
    iteration of the loop. This patch adds a check after calling
    crypto_shash_update() and returns immediately if the result is not zero.
    
    Cc: stable@vger.kernel.org
    Fixes: 3323eec921efd ("integrity: IMA as an integrity service provider")
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f61c8449cb879b3d89d7e9a996e42e7881f18c78
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Sat Oct 3 23:27:07 2020 +0000

    KVM: SVM: Initialize prev_ga_tag before use
    
    commit f6426ab9c957e97418ac5b0466538792767b1738 upstream.
    
    The function amd_ir_set_vcpu_affinity makes use of the parameter struct
    amd_iommu_pi_data.prev_ga_tag to determine if it should delete struct
    amd_iommu_pi_data from a list when not running in AVIC mode.
    
    However, prev_ga_tag is initialized only when AVIC is enabled. The non-zero
    uninitialized value can cause unintended code path, which ends up making
    use of the struct vcpu_svm.ir_list and ir_list_lock without being
    initialized (since they are intended only for the AVIC case).
    
    This triggers NULL pointer dereference bug in the function vm_ir_list_del
    with the following call trace:
    
        svm_update_pi_irte+0x3c2/0x550 [kvm_amd]
        ? proc_create_single_data+0x41/0x50
        kvm_arch_irq_bypass_add_producer+0x40/0x60 [kvm]
        __connect+0x5f/0xb0 [irqbypass]
        irq_bypass_register_producer+0xf8/0x120 [irqbypass]
        vfio_msi_set_vector_signal+0x1de/0x2d0 [vfio_pci]
        vfio_msi_set_block+0x77/0xe0 [vfio_pci]
        vfio_pci_set_msi_trigger+0x25c/0x2f0 [vfio_pci]
        vfio_pci_set_irqs_ioctl+0x88/0xb0 [vfio_pci]
        vfio_pci_ioctl+0x2ea/0xed0 [vfio_pci]
        ? alloc_file_pseudo+0xa5/0x100
        vfio_device_fops_unl_ioctl+0x26/0x30 [vfio]
        ? vfio_device_fops_unl_ioctl+0x26/0x30 [vfio]
        __x64_sys_ioctl+0x96/0xd0
        do_syscall_64+0x37/0x80
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Therefore, initialize prev_ga_tag to zero before use. This should be safe
    because ga_tag value 0 is invalid (see function avic_vm_init).
    
    Fixes: dfa20099e26e ("KVM: SVM: Refactor AVIC vcpu initialization into avic_init_vcpu()")
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Message-Id: <20201003232707.4662-1-suravee.suthikulpanit@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ea11b1622e91682ad4b36f737e46bb6483ebe3e
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Sep 23 11:37:28 2020 -0700

    KVM: x86/mmu: Commit zap of remaining invalid pages when recovering lpages
    
    commit e89505698c9f70125651060547da4ff5046124fc upstream.
    
    Call kvm_mmu_commit_zap_page() after exiting the "prepare zap" loop in
    kvm_recover_nx_lpages() to finish zapping pages in the unlikely event
    that the loop exited due to lpage_disallowed_mmu_pages being empty.
    Because the recovery thread drops mmu_lock() when rescheduling, it's
    possible that lpage_disallowed_mmu_pages could be emptied by a different
    thread without to_zap reaching zero despite to_zap being derived from
    the number of disallowed lpages.
    
    Fixes: 1aa9b9572b105 ("kvm: x86: mmu: Recovery of shattered NX large pages")
    Cc: Junaid Shahid <junaids@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200923183735.584-2-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4f751c41a8b67770667451167bdc2ac61e077ac
Author: Shyam Prasad N <sprasad@microsoft.com>
Date:   Thu Oct 15 10:41:31 2020 -0700

    cifs: Return the error from crypt_message when enc/dec key not found.
    
    commit 0bd294b55a5de442370c29fa53bab17aef3ff318 upstream.
    
    In crypt_message, when smb2_get_enc_key returns error, we need to
    return the error back to the caller. If not, we end up processing
    the message further, causing a kernel oops due to unwarranted access
    of memory.
    
    Call Trace:
    smb3_receive_transform+0x120/0x870 [cifs]
    cifs_demultiplex_thread+0xb53/0xc20 [cifs]
    ? cifs_handle_standard+0x190/0x190 [cifs]
    kthread+0x116/0x130
    ? kthread_park+0x80/0x80
    ret_from_fork+0x1f/0x30
    
    Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab57a8aa9d6ccbee6c8b8bcc4e32a5772272cbcf
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 16 23:18:21 2020 +0300

    cifs: remove bogus debug code
    
    commit d367cb960ce88914898cbfa43645c2e43ede9465 upstream.
    
    The "end" pointer is either NULL or it points to the next byte to parse.
    If there isn't a next byte then dereferencing "end" is an off-by-one out
    of bounds error.  And, of course, if it's NULL that leads to an Oops.
    Printing "*end" doesn't seem very useful so let's delete this code.
    
    Also for the last debug statement, I noticed that it should be printing
    "sequence_end" instead of "end" so fix that as well.
    
    Reported-by: Dominik Maier <dmaier@sect.tu-berlin.de>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c19c5ef5a6e5a4194ba8e4c02aa7f2149b62924e
Author: Jian-Hong Pan <jhp@endlessos.org>
Date:   Wed Oct 7 13:22:25 2020 +0800

    ALSA: hda/realtek: Enable audio jacks of ASUS D700SA with ALC887
    
    commit ca184355db8e60290fa34bf61c13308e6f4f50d3 upstream.
    
    The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
    the headset microphone and another headphone jack until
    ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
    The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
    headphone jack. Also need the function like alc887_fixup_asus_jack to
    enable the audio jacks.
    
    Signed-off-by: Jian-Hong Pan <jhp@endlessos.org>
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6c552505c0d1719dda42b4af2def0618bd7bf54
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 15 11:42:00 2020 -0700

    icmp: randomize the global rate limiter
    
    [ Upstream commit b38e7819cae946e2edf869e604af1e65a5d241c5 ]
    
    Keyu Man reported that the ICMP rate limiter could be used
    by attackers to get useful signal. Details will be provided
    in an upcoming academic publication.
    
    Our solution is to add some noise, so that the attackers
    no longer can get help from the predictable token bucket limiter.
    
    Fixes: 4cdf507d5452 ("icmp: add a global rate limitation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Keyu Man <kman001@ucr.edu>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f044e107b24e3c644ab97f996a8703994f65e20
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sun Oct 18 18:38:59 2020 +0200

    r8169: fix operation under forced interrupt threading
    
    [ Upstream commit 424a646e072a887aa87283b53aa6f8b19c2a7bef ]
    
    For several network drivers it was reported that using
    __napi_schedule_irqoff() is unsafe with forced threading. One way to
    fix this is switching back to __napi_schedule, but then we lose the
    benefit of the irqoff version in general. As stated by Eric it doesn't
    make sense to make the minimal hard irq handlers in drivers using NAPI
    a thread. Therefore ensure that the hard irq handler is never
    thread-ified.
    
    Fixes: 9a899a35b0d6 ("r8169: switch to napi_schedule_irqoff")
    Link: https://lkml.org/lkml/2020/10/18/19
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Link: https://lore.kernel.org/r/4d3ef84a-c812-5072-918a-22a6f6468310@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e1c74befe158d86c5b4e2ef3f174db5dd537000
Author: Neal Cardwell <ncardwell@google.com>
Date:   Thu Oct 22 10:33:31 2020 -0400

    tcp: fix to update snd_wl1 in bulk receiver fast path
    
    [ Upstream commit 18ded910b589839e38a51623a179837ab4cc3789 ]
    
    In the header prediction fast path for a bulk data receiver, if no
    data is newly acknowledged then we do not call tcp_ack() and do not
    call tcp_ack_update_window(). This means that a bulk receiver that
    receives large amounts of data can have the incoming sequence numbers
    wrap, so that the check in tcp_may_update_window fails:
       after(ack_seq, tp->snd_wl1)
    
    If the incoming receive windows are zero in this state, and then the
    connection that was a bulk data receiver later wants to send data,
    that connection can find itself persistently rejecting the window
    updates in incoming ACKs. This means the connection can persistently
    fail to discover that the receive window has opened, which in turn
    means that the connection is unable to send anything, and the
    connection's sending process can get permanently "stuck".
    
    The fix is to update snd_wl1 in the header prediction fast path for a
    bulk data receiver, so that it keeps up and does not see wrapping
    problems.
    
    This fix is based on a very nice and thorough analysis and diagnosis
    by Apollon Oikonomopoulos (see link below).
    
    This is a stable candidate but there is no Fixes tag here since the
    bug predates current git history. Just for fun: looks like the bug
    dates back to when header prediction was added in Linux v2.1.8 in Nov
    1996. In that version tcp_rcv_established() was added, and the code
    only updates snd_wl1 in tcp_ack(), and in the new "Bulk data transfer:
    receiver" code path it does not call tcp_ack(). This fix seems to
    apply cleanly at least as far back as v3.2.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Reported-by: Apollon Oikonomopoulos <apoikos@dmesg.gr>
    Tested-by: Apollon Oikonomopoulos <apoikos@dmesg.gr>
    Link: https://www.spinics.net/lists/netdev/msg692430.html
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20201022143331.1887495-1-ncardwell.kernel@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e75f421a8d6a5aa69a65b63cf2c6348e7ea6e138
Author: Defang Bo <bodefang@126.com>
Date:   Mon Oct 19 19:38:58 2020 +0800

    nfc: Ensure presence of NFC_ATTR_FIRMWARE_NAME attribute in nfc_genl_fw_download()
    
    [ Upstream commit 280e3ebdafb863b3cb50d5842f056267e15bf40c ]
    
    Check that the NFC_ATTR_FIRMWARE_NAME attributes are provided by
    the netlink client prior to accessing them.This prevents potential
    unhandled NULL pointer dereference exceptions which can be triggered
    by malicious user-mode programs, if they omit one or both of these
    attributes.
    
    Similar to commit a0323b979f81 ("nfc: Ensure presence of required attributes in the activate_target handler").
    
    Fixes: 9674da8759df ("NFC: Add firmware upload netlink command")
    Signed-off-by: Defang Bo <bodefang@126.com>
    Link: https://lore.kernel.org/r/1603107538-4744-1-git-send-email-bodefang@126.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a298ba5e7d1715d4c3a5844b6e7a5c7bd7feff87
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Oct 21 00:02:40 2020 +0200

    net/sched: act_tunnel_key: fix OOB write in case of IPv6 ERSPAN tunnels
    
    [ Upstream commit a7a12b5a0f950bc6b9f7153390634ea798738db9 ]
    
    the following command
    
     # tc action add action tunnel_key \
     > set src_ip 2001:db8::1 dst_ip 2001:db8::2 id 10 erspan_opts 1:6789:0:0
    
    generates the following splat:
    
     BUG: KASAN: slab-out-of-bounds in tunnel_key_copy_opts+0xcc9/0x1010 [act_tunnel_key]
     Write of size 4 at addr ffff88813f5f1cc8 by task tc/873
    
     CPU: 2 PID: 873 Comm: tc Not tainted 5.9.0+ #282
     Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014
     Call Trace:
      dump_stack+0x99/0xcb
      print_address_description.constprop.7+0x1e/0x230
      kasan_report.cold.13+0x37/0x7c
      tunnel_key_copy_opts+0xcc9/0x1010 [act_tunnel_key]
      tunnel_key_init+0x160c/0x1f40 [act_tunnel_key]
      tcf_action_init_1+0x5b5/0x850
      tcf_action_init+0x15d/0x370
      tcf_action_add+0xd9/0x2f0
      tc_ctl_action+0x29b/0x3a0
      rtnetlink_rcv_msg+0x341/0x8d0
      netlink_rcv_skb+0x120/0x380
      netlink_unicast+0x439/0x630
      netlink_sendmsg+0x719/0xbf0
      sock_sendmsg+0xe2/0x110
      ____sys_sendmsg+0x5ba/0x890
      ___sys_sendmsg+0xe9/0x160
      __sys_sendmsg+0xd3/0x170
      do_syscall_64+0x33/0x40
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
     RIP: 0033:0x7f872a96b338
     Code: 89 02 48 c7 c0 ff ff ff ff eb b5 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 8d 05 25 43 2c 00 8b 00 85 c0 75 17 b8 2e 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 58 c3 0f 1f 80 00 00 00 00 41 54 41 89 d4 55
     RSP: 002b:00007ffffe367518 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
     RAX: ffffffffffffffda RBX: 000000005f8f5aed RCX: 00007f872a96b338
     RDX: 0000000000000000 RSI: 00007ffffe367580 RDI: 0000000000000003
     RBP: 0000000000000000 R08: 0000000000000001 R09: 000000000000001c
     R10: 000000000000000b R11: 0000000000000246 R12: 0000000000000001
     R13: 0000000000686760 R14: 0000000000000601 R15: 0000000000000000
    
     Allocated by task 873:
      kasan_save_stack+0x19/0x40
      __kasan_kmalloc.constprop.7+0xc1/0xd0
      __kmalloc+0x151/0x310
      metadata_dst_alloc+0x20/0x40
      tunnel_key_init+0xfff/0x1f40 [act_tunnel_key]
      tcf_action_init_1+0x5b5/0x850
      tcf_action_init+0x15d/0x370
      tcf_action_add+0xd9/0x2f0
      tc_ctl_action+0x29b/0x3a0
      rtnetlink_rcv_msg+0x341/0x8d0
      netlink_rcv_skb+0x120/0x380
      netlink_unicast+0x439/0x630
      netlink_sendmsg+0x719/0xbf0
      sock_sendmsg+0xe2/0x110
      ____sys_sendmsg+0x5ba/0x890
      ___sys_sendmsg+0xe9/0x160
      __sys_sendmsg+0xd3/0x170
      do_syscall_64+0x33/0x40
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
     The buggy address belongs to the object at ffff88813f5f1c00
      which belongs to the cache kmalloc-256 of size 256
     The buggy address is located 200 bytes inside of
      256-byte region [ffff88813f5f1c00, ffff88813f5f1d00)
     The buggy address belongs to the page:
     page:0000000011b48a19 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x13f5f0
     head:0000000011b48a19 order:1 compound_mapcount:0
     flags: 0x17ffffc0010200(slab|head)
     raw: 0017ffffc0010200 0000000000000000 0000000d00000001 ffff888107c43400
     raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000
     page dumped because: kasan: bad access detected
    
     Memory state around the buggy address:
      ffff88813f5f1b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff88813f5f1c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     >ffff88813f5f1c80: 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc fc
                                                   ^
      ffff88813f5f1d00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff88813f5f1d80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    
    using IPv6 tunnels, act_tunnel_key allocates a fixed amount of memory for
    the tunnel metadata, but then it expects additional bytes to store tunnel
    specific metadata with tunnel_key_copy_opts().
    
    Fix the arguments of __ipv6_tun_set_dst(), so that 'md_size' contains the
    size previously computed by tunnel_key_get_opts_len(), like it's done for
    IPv4 tunnels.
    
    Fixes: 0ed5269f9e41 ("net/sched: add tunnel option support to act_tunnel_key")
    Reported-by: Shuang Li <shuali@redhat.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Link: https://lore.kernel.org/r/36ebe969f6d13ff59912d6464a4356fe6f103766.1603231100.git.dcaratti@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1313c39cb4f4050c563b79622dd0c92dabc3a96
Author: Xie He <xie.he.0141@gmail.com>
Date:   Mon Oct 19 23:34:20 2020 -0700

    net: hdlc_raw_eth: Clear the IFF_TX_SKB_SHARING flag after calling ether_setup
    
    [ Upstream commit 5fce1e43e2d5bf2f7e3224d7b99b1c65ab2c26e2 ]
    
    This driver calls ether_setup to set up the network device.
    The ether_setup function would add the IFF_TX_SKB_SHARING flag to the
    device. This flag indicates that it is safe to transmit shared skbs to
    the device.
    
    However, this is not true. This driver may pad the frame (in eth_tx)
    before transmission, so the skb may be modified.
    
    Fixes: 550fd08c2ceb ("net: Audit drivers to identify those needing IFF_TX_SKB_SHARING cleared")
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Cc: Krzysztof Halasa <khc@pm.waw.pl>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Link: https://lore.kernel.org/r/20201020063420.187497-1-xie.he.0141@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d8e0e542e39e652b29c3cbe137890065b107c82
Author: Xie He <xie.he.0141@gmail.com>
Date:   Mon Oct 19 18:31:52 2020 -0700

    net: hdlc: In hdlc_rcv, check to make sure dev is an HDLC device
    
    [ Upstream commit 01c4ceae0a38a0bdbfea6896f41efcd985a9c064 ]
    
    The hdlc_rcv function is used as hdlc_packet_type.func to process any
    skb received in the kernel with skb->protocol == htons(ETH_P_HDLC).
    The purpose of this function is to provide second-stage processing for
    skbs not assigned a "real" L3 skb->protocol value in the first stage.
    
    This function assumes the device from which the skb is received is an
    HDLC device (a device created by this module). It assumes that
    netdev_priv(dev) returns a pointer to "struct hdlc_device".
    
    However, it is possible that some driver in the kernel (not necessarily
    in our control) submits a received skb with skb->protocol ==
    htons(ETH_P_HDLC), from a non-HDLC device. In this case, the skb would
    still be received by hdlc_rcv. This will cause problems.
    
    hdlc_rcv should be able to recognize and drop invalid skbs. It should
    first make sure "dev" is actually an HDLC device, before starting its
    processing. This patch adds this check to hdlc_rcv.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: Krzysztof Halasa <khc@pm.waw.pl>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Link: https://lore.kernel.org/r/20201020013152.89259-1-xie.he.0141@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01a1e63227e978187c20f6eb9701d3fa1f28dde0
Author: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
Date:   Mon Oct 19 17:20:24 2020 +0530

    chelsio/chtls: correct function return and return type
    
    [ Upstream commit 8580a61aede28d441e1c80588803411ee86aa299 ]
    
    csk_mem_free() should return true if send buffer is available,
    false otherwise.
    
    Fixes: 3b8305f5c844 ("crypto: chtls - wait for memory sendmsg, sendpage")
    Signed-off-by: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79548c70b2979c09f33c5ca8d14fee013c27578e
Author: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
Date:   Mon Oct 19 17:20:21 2020 +0530

    chelsio/chtls: correct netdevice for vlan interface
    
    [ Upstream commit 81519d1f7df7ed1bd5b1397540c8884438f57ae2 ]
    
    Check if netdevice is a vlan interface and find real vlan netdevice.
    
    Fixes: cc35c88ae4db ("crypto : chtls - CPL handler definition")
    Signed-off-by: Venkatesh Ellapu <venkatesh.e@chelsio.com>
    Signed-off-by: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b82a1097b911cadc5c42337b337dcf653c89b41b
Author: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
Date:   Mon Oct 19 17:20:20 2020 +0530

    chelsio/chtls: fix socket lock
    
    [ Upstream commit 0fb5f0160a36d7acaa8e84ce873af99f94b60484 ]
    
    In chtls_sendpage() socket lock is released but not acquired,
    fix it by taking lock.
    
    Fixes: 36bedb3f2e5b ("crypto: chtls - Inline TLS record Tx")
    Signed-off-by: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7ca1a78c9c2fb53b8620d5dcb29b696cd7d1753
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 7 10:49:28 2020 +0300

    ALSA: bebob: potential info leak in hwdep_read()
    
    commit b41c15f4e1c1f1657da15c482fa837c1b7384452 upstream.
    
    The "count" variable needs to be capped on every path so that we don't
    copy too much information to the user.
    
    Fixes: 618eabeae711 ("ALSA: bebob: Add hwdep interface")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201007074928.GA2529578@mwanda
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35cc2facc2a5ff52b9aa03f2dc81dcb000d97da3
Author: Todd Kjos <tkjos@google.com>
Date:   Fri Oct 9 16:24:55 2020 -0700

    binder: fix UAF when releasing todo list
    
    commit f3277cbfba763cd2826396521b9296de67cf1bbc upstream.
    
    When releasing a thread todo list when tearing down
    a binder_proc, the following race was possible which
    could result in a use-after-free:
    
    1.  Thread 1: enter binder_release_work from binder_thread_release
    2.  Thread 2: binder_update_ref_for_handle() -> binder_dec_node_ilocked()
    3.  Thread 2: dec nodeA --> 0 (will free node)
    4.  Thread 1: ACQ inner_proc_lock
    5.  Thread 2: block on inner_proc_lock
    6.  Thread 1: dequeue work (BINDER_WORK_NODE, part of nodeA)
    7.  Thread 1: REL inner_proc_lock
    8.  Thread 2: ACQ inner_proc_lock
    9.  Thread 2: todo list cleanup, but work was already dequeued
    10. Thread 2: free node
    11. Thread 2: REL inner_proc_lock
    12. Thread 1: deref w->type (UAF)
    
    The problem was that for a BINDER_WORK_NODE, the binder_work element
    must not be accessed after releasing the inner_proc_lock while
    processing the todo list elements since another thread might be
    handling a deref on the node containing the binder_work element
    leading to the node being freed.
    
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20201009232455.4054810-1-tkjos@google.com
    Cc: <stable@vger.kernel.org> # 4.14, 4.19, 5.4, 5.8
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2d31640d4045d8bb7cf25d2bd53ce8d1b14fb40
Author: Rohit Maheshwari <rohitm@chelsio.com>
Date:   Thu Oct 8 00:10:21 2020 +0530

    net/tls: sendfile fails with ktls offload
    
    [ Upstream commit ea1dd3e9d080c961b9a451130b61c72dc9a5397b ]
    
    At first when sendpage gets called, if there is more data, 'more' in
    tls_push_data() gets set which later sets pending_open_record_frags, but
    when there is no more data in file left, and last time tls_push_data()
    gets called, pending_open_record_frags doesn't get reset. And later when
    2 bytes of encrypted alert comes as sendmsg, it first checks for
    pending_open_record_frags, and since this is set, it creates a record with
    0 data bytes to encrypt, meaning record length is prepend_size + tag_size
    only, which causes problem.
     We should set/reset pending_open_record_frags based on more bit.
    
    Fixes: e8f69799810c ("net/tls: Add generic NIC offload infrastructure")
    Signed-off-by: Rohit Maheshwari <rohitm@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bf51ad6408fc39ea6b80c23f0fafcfe30f49377
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Thu Oct 1 09:23:02 2020 +0200

    r8169: fix data corruption issue on RTL8402
    
    [ Upstream commit ef9da46ddef071e1bbb943afbbe9b38771855554 ]
    
    Petr reported that after resume from suspend RTL8402 partially
    truncates incoming packets, and re-initializing register RxConfig
    before the actual chip re-initialization sequence is needed to avoid
    the issue.
    
    Reported-by: Petr Tesarik <ptesarik@suse.cz>
    Proposed-by: Petr Tesarik <ptesarik@suse.cz>
    Tested-by: Petr Tesarik <ptesarik@suse.cz>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9db62b759161b9e75626e419d85d6944a23a2ab1
Author: Maciej Żenczykowski <maze@google.com>
Date:   Wed Sep 23 13:18:15 2020 -0700

    net/ipv4: always honour route mtu during forwarding
    
    [ Upstream commit 02a1b175b0e92d9e0fa5df3957ade8d733ceb6a0 ]
    
    Documentation/networking/ip-sysctl.txt:46 says:
      ip_forward_use_pmtu - BOOLEAN
        By default we don't trust protocol path MTUs while forwarding
        because they could be easily forged and can lead to unwanted
        fragmentation by the router.
        You only need to enable this if you have user-space software
        which tries to discover path mtus by itself and depends on the
        kernel honoring this information. This is normally not the case.
        Default: 0 (disabled)
        Possible values:
        0 - disabled
        1 - enabled
    
    Which makes it pretty clear that setting it to 1 is a potential
    security/safety/DoS issue, and yet it is entirely reasonable to want
    forwarded traffic to honour explicitly administrator configured
    route mtus (instead of defaulting to device mtu).
    
    Indeed, I can't think of a single reason why you wouldn't want to.
    Since you configured a route mtu you probably know better...
    
    It is pretty common to have a higher device mtu to allow receiving
    large (jumbo) frames, while having some routes via that interface
    (potentially including the default route to the internet) specify
    a lower mtu.
    
    Note that ipv6 forwarding uses device mtu unless the route is locked
    (in which case it will use the route mtu).
    
    This approach is not usable for IPv4 where an 'mtu lock' on a route
    also has the side effect of disabling TCP path mtu discovery via
    disabling the IPv4 DF (don't frag) bit on all outgoing frames.
    
    I'm not aware of a way to lock a route from an IPv6 RA, so that also
    potentially seems wrong.
    
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Cc: Sunmeet Gill (Sunny) <sgill@quicinc.com>
    Cc: Vinay Paradkar <vparadka@qti.qualcomm.com>
    Cc: Tyler Wear <twear@quicinc.com>
    Cc: David Ahern <dsahern@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26217e062f976fc4e2b7b8b6981a6d119435ea51
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Oct 7 21:12:50 2020 -0700

    tipc: fix the skb_unshare() in tipc_buf_append()
    
    [ Upstream commit ed42989eab57d619667d7e87dfbd8fe207db54fe ]
    
    skb_unshare() drops a reference count on the old skb unconditionally,
    so in the failure case, we end up freeing the skb twice here.
    And because the skb is allocated in fclone and cloned by caller
    tipc_msg_reassemble(), the consequence is actually freeing the
    original skb too, thus triggered the UAF by syzbot.
    
    Fix this by replacing this skb_unshare() with skb_cloned()+skb_copy().
    
    Fixes: ff48b6222e65 ("tipc: use skb_unshare() instead in tipc_buf_append()")
    Reported-and-tested-by: syzbot+e96a7ba46281824cc46a@syzkaller.appspotmail.com
    Cc: Jon Maloy <jmaloy@redhat.com>
    Cc: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be431112aaae464aa60f7616cdf6457230aa5664
Author: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
Date:   Thu Oct 8 09:21:38 2020 +0200

    net: usb: qmi_wwan: add Cellient MPL200 card
    
    [ Upstream commit 28802e7c0c9954218d1830f7507edc9d49b03a00 ]
    
    Add usb ids of the Cellient MPL200 card.
    
    Signed-off-by: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cca96df3732fef913c0f7c48f7118a90db466da
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Wed Oct 14 19:43:28 2020 +0200

    net/smc: fix valid DMBE buffer sizes
    
    [ Upstream commit ef12ad45880b696eb993d86c481ca891836ab593 ]
    
    The SMCD_DMBE_SIZES should include all valid DMBE buffer sizes, so the
    correct value is 6 which means 1MB. With 7 the registration of an ISM
    buffer would always fail because of the invalid size requested.
    Fix that and set the value to 6.
    
    Fixes: c6ba7c9ba43d ("net/smc: add base infrastructure for SMC-D and ISM")
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b00f0321c69e28228cc3024724c679463b4e863
Author: Yonghong Song <yhs@fb.com>
Date:   Wed Oct 14 07:46:12 2020 -0700

    net: fix pos incrementment in ipv6_route_seq_next
    
    [ Upstream commit 6617dfd440149e42ce4d2be615eb31a4755f4d30 ]
    
    Commit 4fc427e05158 ("ipv6_route_seq_next should increase position index")
    tried to fix the issue where seq_file pos is not increased
    if a NULL element is returned with seq_ops->next(). See bug
      https://bugzilla.kernel.org/show_bug.cgi?id=206283
    The commit effectively does:
      - increase pos for all seq_ops->start()
      - increase pos for all seq_ops->next()
    
    For ipv6_route, increasing pos for all seq_ops->next() is correct.
    But increasing pos for seq_ops->start() is not correct
    since pos is used to determine how many items to skip during
    seq_ops->start():
      iter->skip = *pos;
    seq_ops->start() just fetches the *current* pos item.
    The item can be skipped only after seq_ops->show() which essentially
    is the beginning of seq_ops->next().
    
    For example, I have 7 ipv6 route entries,
      root@arch-fb-vm1:~/net-next dd if=/proc/net/ipv6_route bs=4096
      00000000000000000000000000000000 40 00000000000000000000000000000000 00 00000000000000000000000000000000 00000400 00000001 00000000 00000001     eth0
      fe800000000000000000000000000000 40 00000000000000000000000000000000 00 00000000000000000000000000000000 00000100 00000001 00000000 00000001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
      00000000000000000000000000000001 80 00000000000000000000000000000000 00 00000000000000000000000000000000 00000000 00000003 00000000 80200001       lo
      fe800000000000002050e3fffebd3be8 80 00000000000000000000000000000000 00 00000000000000000000000000000000 00000000 00000002 00000000 80200001     eth0
      ff000000000000000000000000000000 08 00000000000000000000000000000000 00 00000000000000000000000000000000 00000100 00000004 00000000 00000001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
      0+1 records in
      0+1 records out
      1050 bytes (1.0 kB, 1.0 KiB) copied, 0.00707908 s, 148 kB/s
      root@arch-fb-vm1:~/net-next
    
    In the above, I specify buffer size 4096, so all records can be returned
    to user space with a single trip to the kernel.
    
    If I use buffer size 128, since each record size is 149, internally
    kernel seq_read() will read 149 into its internal buffer and return the data
    to user space in two read() syscalls. Then user read() syscall will trigger
    next seq_ops->start(). Since the current implementation increased pos even
    for seq_ops->start(), it will skip record #2, #4 and #6, assuming the first
    record is #1.
    
      root@arch-fb-vm1:~/net-next dd if=/proc/net/ipv6_route bs=128
      00000000000000000000000000000000 40 00000000000000000000000000000000 00 00000000000000000000000000000000 00000400 00000001 00000000 00000001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
      fe800000000000002050e3fffebd3be8 80 00000000000000000000000000000000 00 00000000000000000000000000000000 00000000 00000002 00000000 80200001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
    4+1 records in
    4+1 records out
    600 bytes copied, 0.00127758 s, 470 kB/s
    
    To fix the problem, create a fake pos pointer so seq_ops->start()
    won't actually increase seq_file pos. With this fix, the
    above `dd` command with `bs=128` will show correct result.
    
    Fixes: 4fc427e05158 ("ipv6_route_seq_next should increase position index")
    Cc: Alexei Starovoitov <ast@kernel.org>
    Suggested-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bffdde0bb2650df06a6f3c1b78ceed971b68482
Author: Marek Vasut <marex@denx.de>
Date:   Tue Oct 6 15:52:53 2020 +0200

    net: fec: Fix PHY init after phy_reset_after_clk_enable()
    
    [ Upstream commit 0da1ccbbefb662915228bc17e1c7d4ad28b3ddab ]
    
    The phy_reset_after_clk_enable() does a PHY reset, which means the PHY
    loses its register settings. The fec_enet_mii_probe() starts the PHY
    and does the necessary calls to configure the PHY via PHY framework,
    and loads the correct register settings into the PHY. Therefore,
    fec_enet_mii_probe() should be called only after the PHY has been
    reset, not before as it is now.
    
    Fixes: 1b0a83ac04e3 ("net: fec: add phy_reset_after_clk_enable() support")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c068e505f229ca5f778f825f1401817ce818e917
Author: Marek Vasut <marex@denx.de>
Date:   Sat Oct 10 11:10:00 2020 +0200

    net: fec: Fix phy_device lookup for phy_reset_after_clk_enable()
    
    [ Upstream commit 64a632da538a6827fad0ea461925cedb9899ebe2 ]
    
    The phy_reset_after_clk_enable() is always called with ndev->phydev,
    however that pointer may be NULL even though the PHY device instance
    already exists and is sufficient to perform the PHY reset.
    
    This condition happens in fec_open(), where the clock must be enabled
    first, then the PHY must be reset, and then the PHY IDs can be read
    out of the PHY.
    
    If the PHY still is not bound to the MAC, but there is OF PHY node
    and a matching PHY device instance already, use the OF PHY node to
    obtain the PHY device instance, and then use that PHY device instance
    when triggering the PHY reset.
    
    Fixes: 1b0a83ac04e3 ("net: fec: add phy_reset_after_clk_enable() support")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Cc: Richard Leitner <richard.leitner@skidata.com>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0cded2aa1db11246240b24234e3c4470d431635
Author: Jonathan Lemon <bsd@fb.com>
Date:   Thu Oct 8 11:45:26 2020 -0700

    mlx4: handle non-napi callers to napi_poll
    
    [ Upstream commit b2b8a92733b288128feb57ffa694758cf475106c ]
    
    netcons calls napi_poll with a budget of 0 to transmit packets.
    Handle this by:
     - skipping RX processing
     - do not try to recycle TX packets to the RX cache
    
    Signed-off-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fecbf3ffd468ba0c398171ef7f6b2ed848c42f2
Author: David Ahern <dsahern@kernel.org>
Date:   Fri Oct 9 11:01:01 2020 -0700

    ipv4: Restore flowi4_oif update before call to xfrm_lookup_route
    
    [ Upstream commit 874fb9e2ca949b443cc419a4f2227cafd4381d39 ]
    
    Tobias reported regressions in IPsec tests following the patch
    referenced by the Fixes tag below. The root cause is dropping the
    reset of the flowi4_oif after the fib_lookup. Apparently it is
    needed for xfrm cases, so restore the oif update to ip_route_output_flow
    right before the call to xfrm_lookup_route.
    
    Fixes: 2fbc6e89b2f1 ("ipv4: Update exception handling for multipath routes via same device")
    Reported-by: Tobias Brunner <tobias@strongswan.org>
    Signed-off-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0b6776567797433f754ca8ce70581306ddb42ed
Author: David Wilder <dwilder@us.ibm.com>
Date:   Tue Oct 13 16:20:14 2020 -0700

    ibmveth: Identify ingress large send packets.
    
    [ Upstream commit 413f142cc05cb03f2d1ea83388e40c1ddc0d74e9 ]
    
    Ingress large send packets are identified by either:
    The IBMVETH_RXQ_LRG_PKT flag in the receive buffer
    or with a -1 placed in the ip header checksum.
    The method used depends on firmware version. Frame
    geometry and sufficient header validation is performed by the
    hypervisor eliminating the need for further header checks here.
    
    Fixes: 7b5967389f5a ("ibmveth: set correct gso_size and gso_type")
    Signed-off-by: David Wilder <dwilder@us.ibm.com>
    Reviewed-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Reviewed-by: Cristobal Forno <cris.forno@ibm.com>
    Reviewed-by: Pradeep Satyanarayana <pradeeps@linux.vnet.ibm.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3472a36a0d3ad8b379801f4fd58d27cda76282b0
Author: David Wilder <dwilder@us.ibm.com>
Date:   Tue Oct 13 16:20:13 2020 -0700

    ibmveth: Switch order of ibmveth_helper calls.
    
    [ Upstream commit 5ce9ad815a296374ca21f43f3b1ab5083d202ee1 ]
    
    ibmveth_rx_csum_helper() must be called after ibmveth_rx_mss_helper()
    as ibmveth_rx_csum_helper() may alter ip and tcp checksum values.
    
    Fixes: 66aa0678efc2 ("ibmveth: Support to enable LSO/CSO for Trunk VEA.")
    Signed-off-by: David Wilder <dwilder@us.ibm.com>
    Reviewed-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Reviewed-by: Cristobal Forno <cris.forno@ibm.com>
    Reviewed-by: Pradeep Satyanarayana <pradeeps@linux.vnet.ibm.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
