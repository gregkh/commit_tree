commit 4e66893c7de2a28de0c0671d8522e6617a907571
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Aug 7 09:33:11 2020 +0200

    Linux 5.7.14
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c986f31a942017b63aa8733e34e353607c5b22e1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 5 12:39:48 2020 -0700

    random: random.h should include archrandom.h, not the other way around
    
    commit 585524081ecdcde1c719e63916c514866d898217 upstream.
    
    This is hopefully the final piece of the crazy puzzle with random.h
    dependencies.
    
    And by "hopefully" I obviously mean "Linus is a hopeless optimist".
    
    Reported-and-tested-by: Daniel Díaz <daniel.diaz@linaro.org>
    Acked-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0deb86e6f81f315cfd21a20f03054b08bf9d6803
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Aug 5 12:10:44 2020 +0100

    arm64: Workaround circular dependency in pointer_auth.h
    
    With the backport of f227e3ec3b5c ("random32: update the net random
    state on interrupt and activity") and its associated fixes, the
    arm64 build explodes early:
    
    In file included from ../include/linux/smp.h:67,
                      from ../include/linux/percpu.h:7,
                      from ../include/linux/prandom.h:12,
                      from ../include/linux/random.h:118,
                      from ../arch/arm64/include/asm/pointer_auth.h:6,
                      from ../arch/arm64/include/asm/processor.h:39,
                      from ../include/linux/mutex.h:19,
                      from ../include/linux/kernfs.h:12,
                      from ../include/linux/sysfs.h:16,
                      from ../include/linux/kobject.h:20,
                      from ../include/linux/of.h:17,
                      from ../include/linux/irqdomain.h:35,
                      from ../include/linux/acpi.h:13,
                      from ../include/acpi/apei.h:9,
                      from ../include/acpi/ghes.h:5,
                      from ../include/linux/arm_sdei.h:8,
                      from ../arch/arm64/kernel/asm-offsets.c:10:
    ../arch/arm64/include/asm/smp.h:100:29: error: field ‘ptrauth_key’ has
    incomplete type
    
    This is due to struct ptrauth_keys_kernel not being defined before
    we transitively include asm/smp.h from linux/random.h.
    
    Paper over it by moving the inclusion of linux/random.h *after* the
    type has been defined.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92e5a448d129d1cc4bd8e332365052c6e524ec39
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 31 07:51:14 2020 +0200

    random32: move the pseudo-random 32-bit definitions to prandom.h
    
    commit c0842fbc1b18c7a044e6ff3e8fa78bfa822c7d1a upstream.
    
    The addition of percpu.h to the list of includes in random.h revealed
    some circular dependencies on arm64 and possibly other platforms.  This
    include was added solely for the pseudo-random definitions, which have
    nothing to do with the rest of the definitions in this file but are
    still there for legacy reasons.
    
    This patch moves the pseudo-random parts to linux/prandom.h and the
    percpu.h include with it, which is now guarded by _LINUX_PRANDOM_H and
    protected against recursive inclusion.
    
    A further cleanup step would be to remove this from <linux/random.h>
    entirely, and make people who use the prandom infrastructure include
    just the new header file.  That's a bit of a churn patch, but grepping
    for "prandom_" and "next_pseudo_random32" "struct rnd_state" should
    catch most users.
    
    But it turns out that that nice cleanup step is fairly painful, because
    a _lot_ of code currently seems to depend on the implicit include of
    <linux/random.h>, which can currently come in a lot of ways, including
    such fairly core headfers as <linux/net.h>.
    
    So the "nice cleanup" part may or may never happen.
    
    Fixes: 1c9df907da83 ("random: fix circular include dependency on arm64 after addition of percpu.h")
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c1c2d6c241d22e01169f9aa3a9117b73177e904
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 29 19:11:00 2020 -0700

    random32: remove net_rand_state from the latent entropy gcc plugin
    
    commit 83bdc7275e6206f560d247be856bceba3e1ed8f2 upstream.
    
    It turns out that the plugin right now ends up being really unhappy
    about the change from 'static' to 'extern' storage that happened in
    commit f227e3ec3b5c ("random32: update the net random state on interrupt
    and activity").
    
    This is probably a trivial fix for the latent_entropy plugin, but for
    now, just remove net_rand_state from the list of things the plugin
    worries about.
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Emese Revfy <re.emese@gmail.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dc2031946047a6f1d011463174f920995bab35f
Author: Willy Tarreau <w@1wt.eu>
Date:   Thu Jul 30 07:59:24 2020 +0200

    random: fix circular include dependency on arm64 after addition of percpu.h
    
    commit 1c9df907da83812e4f33b59d3d142c864d9da57f upstream.
    
    Daniel Díaz and Kees Cook independently reported that commit
    f227e3ec3b5c ("random32: update the net random state on interrupt and
    activity") broke arm64 due to a circular dependency on include files
    since the addition of percpu.h in random.h.
    
    The correct fix would definitely be to move all the prandom32 stuff out
    of random.h but for backporting, a smaller solution is preferred.
    
    This one replaces linux/percpu.h with asm/percpu.h, and this fixes the
    problem on x86_64, arm64, arm, and mips.  Note that moving percpu.h
    around didn't change anything and that removing it entirely broke
    differently.  When backporting, such options might still be considered
    if this patch fails to help.
    
    [ It turns out that an alternate fix seems to be to just remove the
      troublesome <asm/pointer_auth.h> remove from the arm64 <asm/smp.h>
      that causes the circular dependency.
    
      But we might as well do the whole belt-and-suspenders thing, and
      minimize inclusion in <linux/random.h> too. Either will fix the
      problem, and both are good changes.   - Linus ]
    
    Reported-by: Daniel Díaz <daniel.diaz@linaro.org>
    Reported-by: Kees Cook <keescook@chromium.org>
    Tested-by: Marc Zyngier <maz@kernel.org>
    Fixes: f227e3ec3b5c
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80803d46cb666cbe72ced2df24fc76267e9a488d
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Thu Jul 30 22:05:01 2020 +0300

    ARM: percpu.h: fix build error
    
    commit aa54ea903abb02303bf55855fb51e3fcee135d70 upstream.
    
    Fix build error for the case:
      defined(CONFIG_SMP) && !defined(CONFIG_CPU_V6)
    
    config: keystone_defconfig
    
      CC      arch/arm/kernel/signal.o
      In file included from ../include/linux/random.h:14,
                        from ../arch/arm/kernel/signal.c:8:
      ../arch/arm/include/asm/percpu.h: In function ‘__my_cpu_offset’:
      ../arch/arm/include/asm/percpu.h:29:34: error: ‘current_stack_pointer’ undeclared (first use in this function); did you mean ‘user_stack_pointer’?
          : "Q" (*(const unsigned long *)current_stack_pointer));
                                         ^~~~~~~~~~~~~~~~~~~~~
                                         user_stack_pointer
    
    Fixes: f227e3ec3b5c ("random32: update the net random state on interrupt and activity")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 378a4d2215334fa4d3c5888a008f8896066bc231
Author: Willy Tarreau <w@1wt.eu>
Date:   Fri Jul 10 15:23:19 2020 +0200

    random32: update the net random state on interrupt and activity
    
    commit f227e3ec3b5cad859ad15666874405e8c1bbc1d4 upstream.
    
    This modifies the first 32 bits out of the 128 bits of a random CPU's
    net_rand_state on interrupt or CPU activity to complicate remote
    observations that could lead to guessing the network RNG's internal
    state.
    
    Note that depending on some network devices' interrupt rate moderation
    or binding, this re-seeding might happen on every packet or even almost
    never.
    
    In addition, with NOHZ some CPUs might not even get timer interrupts,
    leaving their local state rarely updated, while they are running
    networked processes making use of the random state.  For this reason, we
    also perform this update in update_process_times() in order to at least
    update the state when there is user or system activity, since it's the
    only case we care about.
    
    Reported-by: Amit Klein <aksecurity@gmail.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: "Jason A. Donenfeld" <Jason@zx2c4.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
