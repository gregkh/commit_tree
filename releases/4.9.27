commit 89f3b8d5f264d5dab9818c6667c71e3cc55b13f5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon May 8 07:48:32 2017 +0200

    Linux 4.9.27

commit a0d50c80a29e13a56f9830d0b4bc6e333fc09da2
Author: Adrian Salido <salidoa@google.com>
Date:   Thu Apr 27 10:32:55 2017 -0700

    dm ioctl: prevent stack leak in dm ioctl call
    
    commit 4617f564c06117c7d1b611be49521a4430042287 upstream.
    
    When calling a dm ioctl that doesn't process any data
    (IOCTL_FLAGS_NO_PARAMS), the contents of the data field in struct
    dm_ioctl are left initialized.  Current code is incorrectly extending
    the size of data copied back to user, causing the contents of kernel
    stack to be leaked to user.  Fix by only copying contents before data
    and allow the functions processing the ioctl to override.
    
    Signed-off-by: Adrian Salido <salidoa@google.com>
    Reviewed-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad6de43deda083f1eab1e9a5cc48166e4ee52f5
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Mar 14 16:06:45 2017 +0100

    cpu/hotplug: Serialize callback invocations proper
    
    commit dc434e056fe1dada20df7ba07f32739d3a701adf upstream.
    
    The setup/remove_state/instance() functions in the hotplug core code are
    serialized against concurrent CPU hotplug, but unfortunately not serialized
    against themself.
    
    As a consequence a concurrent invocation of these function results in
    corruption of the callback machinery because two instances try to invoke
    callbacks on remote cpus at the same time. This results in missing callback
    invocations and initiator threads waiting forever on the completion.
    
    The obvious solution to replace get_cpu_online() with cpu_hotplug_begin()
    is not possible because at least one callsite calls into these functions
    from a get_online_cpu() locked region.
    
    Extend the protection scope of the cpuhp_state_mutex from solely protecting
    the state arrays to cover the callback invocation machinery as well.
    
    Fixes: 5b7aa87e0482 ("cpu/hotplug: Implement setup/removal interface")
    Reported-and-tested-by: Bart Van Assche <Bart.VanAssche@sandisk.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: hpa@zytor.com
    Cc: mingo@kernel.org
    Cc: akpm@linux-foundation.org
    Cc: torvalds@linux-foundation.org
    Link: http://lkml.kernel.org/r/20170314150645.g4tdyoszlcbajmna@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e99b0ea39354cf308423588df5daf69c42dbd735
Author: Yan, Zheng <zyan@redhat.com>
Date:   Tue Oct 25 10:51:55 2016 +0800

    ceph: try getting buffer capability for readahead/fadvise
    
    commit 2b1ac852eb67a6e95595e576371d23519105559f upstream.
    
    For readahead/fadvise cases, caller of ceph_readpages does not
    hold buffer capability. Pages can be added to page cache while
    there is no buffer capability. This can cause data integrity
    issue.
    
    Signed-off-by: Yan, Zheng <zyan@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bf9bc48133851121d92f0cc908bb5a1446aeba5
Author: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
Date:   Wed Dec 28 16:42:00 2016 -0200

    8250_pci: Fix potential use-after-free in error path
    
    commit c130b666a9a711f985a0a44b58699ebe14bb7245 upstream.
    
    Commit f209fa03fc9d ("serial: 8250_pci: Detach low-level driver during
    PCI error recovery") introduces a potential use-after-free in case the
    pciserial_init_ports call in serial8250_io_resume fails, which may
    happen if a memory allocation fails or if the .init quirk failed for
    whatever reason).  If this happen, further pci_get_drvdata will return a
    pointer to freed memory.
    
    This patch reworks the PCI recovery resume hook to restore the old priv
    structure in this case, which should be ok, since the ports were already
    detached. Such error during recovery causes us to give up on the
    recovery.
    
    Fixes: f209fa03fc9d ("serial: 8250_pci: Detach low-level driver during PCI error recovery")
    Reported-by: Michal Suchanek <msuchanek@suse.com>
    Signed-off-by: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fbd2ba1da3f79e0352e6c772fab964c3ad963a3
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sun Mar 12 06:18:58 2017 -0700

    hwmon: (it87) Avoid registering the same chip on both SIO addresses
    
    commit 8358378b22518d92424597503d3c1cd302a490b6 upstream.
    
    IT8705F is known to respond on both SIO addresses. Registering it twice
    may result in system lockups.
    
    Reported-by: Russell King <linux@armlinux.org.uk>
    Fixes: e84bd9535e2b ("hwmon: (it87) Add support for second Super-IO chip")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d24261e567e12e85f2ecea39e512ee8de7d9858b
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Tue Mar 7 09:15:53 2017 -0800

    scsi: storvsc: Workaround for virtual DVD SCSI version
    
    commit f1c635b439a5c01776fe3a25b1e2dc546ea82e6f upstream.
    
    Hyper-V host emulation of SCSI for virtual DVD device reports SCSI
    version 0 (UNKNOWN) but is still capable of supporting REPORTLUN.
    
    Without this patch, a GEN2 Linux guest on Hyper-V will not boot 4.11
    successfully with virtual DVD ROM device. What happens is that the SCSI
    scan process falls back to doing sequential probing by INQUIRY.  But the
    storvsc driver has a previous workaround that masks/blocks all errors
    reports from INQUIRY (or MODE_SENSE) commands.  This workaround causes
    the scan to then populate a full set of bogus LUN's on the target and
    then sends kernel spinning off into a death spiral doing block reads on
    the non-existent LUNs.
    
    By setting the correct blacklist flags, the target with the DVD device
    is scanned with REPORTLUN and that works correctly.
    
    Patch needs to go in current 4.11, it is safe but not necessary in older
    kernels.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b7f385e049c46ae723126ccea343165e26a943f
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Fri Jan 13 22:37:00 2017 +0100

    tpm_tis: use default timeout value if chip reports it as zero
    
    commit 1d70fe9d9c3a4c627f9757cbba5d628687b121c1 upstream.
    
    Since commit 1107d065fdf1 ("tpm_tis: Introduce intermediate layer for
    TPM access") Atmel 3203 TPM on ThinkPad X61S (TPM firmware version 13.9)
    no longer works.  The initialization proceeds fine until we get and
    start using chip-reported timeouts - and the chip reports C and D
    timeouts of zero.
    
    It turns out that until commit 8e54caf407b98e ("tpm: Provide a generic
    means to override the chip returned timeouts") we had actually let
    default timeout values remain in this case, so let's bring back this
    behavior to make chips like Atmel 3203 work again.
    
    Use a common code that was introduced by that commit so a warning is
    printed in this case and /sys/class/tpm/tpm*/timeouts correctly says the
    timeouts aren't chip-original.
    
    
    This is a backport for 4.9 kernel version of the original commit, with
    renaming of "TPM_TIS_ITPM_POSSIBLE" flag removed since it was only a
    cosmetic change and not a part of the real bug fix.
    
    Fixes: 1107d065fdf1 ("tpm_tis: Introduce intermediate layer for TPM access")
    Cc: stable@vger.kernel.org
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8fd99d4721d4a33c928ee0de8370b294a2df150
Author: Sachin Prabhu <sprabhu@redhat.com>
Date:   Fri Mar 3 15:41:38 2017 -0800

    Handle mismatched open calls
    
    commit 38bd49064a1ecb67baad33598e3d824448ab11ec upstream.
    
    A signal can interrupt a SendReceive call which result in incoming
    responses to the call being ignored. This is a problem for calls such as
    open which results in the successful response being ignored. This
    results in an open file resource on the server.
    
    The patch looks into responses which were cancelled after being sent and
    in case of successful open closes the open fids.
    
    For this patch, the check is only done in SendReceive2()
    
    RH-bz: 1403319
    
    Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Acked-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00cca9768ebe1ac4ac16366662dd9087b6e5f4e7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 31 15:24:03 2017 +0100

    timerfd: Protect the might cancel mechanism proper
    
    commit 1e38da300e1e395a15048b0af1e5305bd91402f6 upstream.
    
    The handling of the might_cancel queueing is not properly protected, so
    parallel operations on the file descriptor can race with each other and
    lead to list corruptions or use after free.
    
    Protect the context for these operations with a seperate lock.
    
    The wait queue lock cannot be reused for this because that would create a
    lock inversion scenario vs. the cancel lock. Replacing might_cancel with an
    atomic (atomic_t or atomic bit) does not help either because it still can
    race vs. the actual list operation.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "linux-fsdevel@vger.kernel.org"
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: linux-fsdevel@vger.kernel.org
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1701311521430.3457@nanos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
