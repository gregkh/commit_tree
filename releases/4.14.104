commit 30921fc1e5fcf904f9afddeece1288f5b16ba017
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 10:08:09 2019 +0100

    Linux 4.14.104

commit 418d77caf233c1fa01ec1c9c880b8af855cfd02e
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Feb 11 15:04:24 2019 +0000

    net: phylink: avoid resolving link state too early
    
    commit 87454b6edc1b0143fdb3d9853285477e95af74a4 upstream.
    
    During testing on Armada 388 platforms, it was found with a certain
    module configuration that it was possible to trigger a kernel oops
    during the module load process, caused by the phylink resolver being
    triggered for a currently disabled interface.
    
    This problem was introduced by changing the way the SFP registration
    works, which now can result in the sfp link down notification being
    called during phylink_create().
    
    Fixes: b5bfc21af5cb ("net: sfp: do not probe SFP module before we're attached")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81bafd09bb8d98370d8d5d21a1b3bbc48f3dcf28
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Mon Oct 30 11:08:16 2017 -0700

    sched/sysctl: Fix attributes of some extern declarations
    
    commit a9903f04e0a4ea522d959c2f287cdf0ab029e324 upstream.
    
    The definition of sysctl_sched_migration_cost, sysctl_sched_nr_migrate
    and sysctl_sched_time_avg includes the attribute const_debug. This
    attribute is not part of the extern declaration of these variables in
    include/linux/sched/sysctl.h, while it is in kernel/sched/sched.h,
    and as a result Clang generates warnings like this:
    
      kernel/sched/sched.h:1618:33: warning: section attribute is specified on redeclared variable [-Wsection]
      extern const_debug unsigned int sysctl_sched_time_avg;
                                    ^
      ./include/linux/sched/sysctl.h:42:21: note: previous declaration is here
      extern unsigned int sysctl_sched_time_avg;
    
    The header only declares the variables when CONFIG_SCHED_DEBUG is defined,
    therefore it is not necessary to duplicate the definition of const_debug.
    Instead we can use the attribute __read_mostly, which is the expansion of
    const_debug when CONFIG_SCHED_DEBUG=y is set.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Nick Desaulniers <nick.desaulniers@gmail.com>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: Guenter Roeck <groeck@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Shile Zhang <shile.zhang@nokia.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171030180816.170850-1-mka@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc96cdc8e6532f2b3c934318e65901c599f2175c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Nov 23 11:10:47 2017 +0000

    phy: tegra: remove redundant self assignment of 'map'
    
    commit a0dd6773038f3fd2bd1b4f7ec193887cffc49046 upstream.
    
    The assignment of map to itself is redundant and can be removed.
    Detected with Coccinelle.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6de4ca8627b74fca198df8c0c02c52acb8231aa
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 31 17:50:21 2018 -0700

    pinctrl: max77620: Use define directive for max77620_pinconf_param values
    
    commit 1f60652dd586d1b3eee7c4602892a97a62fa937a upstream.
    
    Clang warns when one enumerated type is implicitly converted to another:
    
    drivers/pinctrl/pinctrl-max77620.c:56:12: warning: implicit conversion
    from enumeration type 'enum max77620_pinconf_param' to different
    enumeration type 'enum pin_config_param' [-Wenum-conversion]
                    .param = MAX77620_ACTIVE_FPS_SOURCE,
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~
    
    It is expected that pinctrl drivers can extend pin_config_param because
    of the gap between PIN_CONFIG_END and PIN_CONFIG_MAX so this conversion
    isn't an issue. Most drivers that take advantage of this define the
    PIN_CONFIG variables as constants, rather than enumerated values. Do the
    same thing here so that Clang no longer warns.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/139
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c2183d845a2ba36eefd9df8d3e975932ce5fd6b
Author: Eli Cooper <elicooper@gmx.com>
Date:   Mon Jan 21 18:45:27 2019 +0800

    netfilter: ipv6: Don't preserve original oif for loopback address
    
    commit 15df03c661cb362366ecfc3a21820cb934f3e4ca upstream.
    
    Commit 508b09046c0f ("netfilter: ipv6: Preserve link scope traffic
    original oif") made ip6_route_me_harder() keep the original oif for
    link-local and multicast packets. However, it also affected packets
    for the loopback address because it used rt6_need_strict().
    
    REDIRECT rules in the OUTPUT chain rewrite the destination to loopback
    address; thus its oif should not be preserved. This commit fixes the bug
    that redirected local packets are being dropped. Actually the packet was
    not exactly dropped; Instead it was sent out to the original oif rather
    than lo. When a packet with daddr ::1 is sent to the router, it is
    effectively dropped.
    
    Fixes: 508b09046c0f ("netfilter: ipv6: Preserve link scope traffic original oif")
    Signed-off-by: Eli Cooper <elicooper@gmx.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cfbf4cefbc9374abe54b4838a737e348e907337
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Feb 13 13:03:53 2019 +0100

    netfilter: nft_compat: use-after-free when deleting targets
    
    commit 753c111f655e38bbd52fc01321266633f022ebe2 upstream.
    
    Fetch pointer to module before target object is released.
    
    Fixes: 29e3880109e3 ("netfilter: nf_tables: fix use-after-free when deleting compat expressions")
    Fixes: 0ca743a55991 ("netfilter: nf_tables: add compatibility layer for x_tables")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c92ba8820aca58e38dceeec554904307ac2e0851
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Feb 15 12:50:24 2019 +0100

    netfilter: nf_tables: fix flush after rule deletion in the same batch
    
    commit 23b7ca4f745f21c2b9cfcb67fdd33733b3ae7e66 upstream.
    
    Flush after rule deletion bogusly hits -ENOENT. Skip rules that have
    been already from nft_delrule_by_chain() which is always called from the
    flush path.
    
    Fixes: cf9dc09d0949 ("netfilter: nf_tables: fix missing rules flushing per table")
    Reported-by: Phil Sutter <phil@nwl.cc>
    Acked-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ac5e6507acbe06a25de03ea9f3089c2f662a72f
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Feb 22 21:22:32 2019 +0800

    Revert "bridge: do not add port to router list when receives query with source 0.0.0.0"
    
    commit 278e2148c07559dd4ad8602f22366d61eb2ee7b7 upstream.
    
    This reverts commit 5a2de63fd1a5 ("bridge: do not add port to router list
    when receives query with source 0.0.0.0") and commit 0fe5119e267f ("net:
    bridge: remove ipv6 zero address check in mcast queries")
    
    The reason is RFC 4541 is not a standard but suggestive. Currently we
    will elect 0.0.0.0 as Querier if there is no ip address configured on
    bridge. If we do not add the port which recives query with source
    0.0.0.0 to router list, the IGMP reports will not be about to forward
    to Querier, IGMP data will also not be able to forward to dest.
    
    As Nikolay suggested, revert this change first and add a boolopt api
    to disable none-zero election in future if needed.
    
    Reported-by: Linus LÃ¼ssing <linus.luessing@c0d3.blue>
    Reported-by: Sebastian Gottschall <s.gottschall@newmedia-net.de>
    Fixes: 5a2de63fd1a5 ("bridge: do not add port to router list when receives query with source 0.0.0.0")
    Fixes: 0fe5119e267f ("net: bridge: remove ipv6 zero address check in mcast queries")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d996573ebd5c528c613e90b7e7daa961d58fa16e
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Feb 18 23:37:12 2019 -0500

    net: avoid false positives in untrusted gso validation
    
    commit 9e8db5913264d3967b93c765a6a9e464d9c473db upstream.
    
    GSO packets with vnet_hdr must conform to a small set of gso_types.
    The below commit uses flow dissection to drop packets that do not.
    
    But it has false positives when the skb is not fully initialized.
    Dissection needs skb->protocol and skb->network_header.
    
    Infer skb->protocol from gso_type as the two must agree.
    SKB_GSO_UDP can use both ipv4 and ipv6, so try both.
    
    Exclude callers for which network header offset is not known.
    
    Fixes: d5be7f632bad ("net: validate untrusted gso packets without csum offload")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dac7d4432b13d6b58923c1178b786bcda37c9e9e
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri Feb 15 12:15:47 2019 -0500

    net: validate untrusted gso packets without csum offload
    
    commit d5be7f632bad0f489879eed0ff4b99bd7fe0b74c upstream.
    
    Syzkaller again found a path to a kernel crash through bad gso input.
    By building an excessively large packet to cause an skb field to wrap.
    
    If VIRTIO_NET_HDR_F_NEEDS_CSUM was set this would have been dropped in
    skb_partial_csum_set.
    
    GSO packets that do not set checksum offload are suspicious and rare.
    Most callers of virtio_net_hdr_to_skb already pass them to
    skb_probe_transport_header.
    
    Move that test forward, change it to detect parse failure and drop
    packets on failure as those cleary are not one of the legitimate
    VIRTIO_NET_HDR_GSO types.
    
    Fixes: bfd5f4a3d605 ("packet: Add GSO/csum offload support.")
    Fixes: f43798c27684 ("tun: Allow GSO using virtio_net_hdr")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6964c1d5062de1fb26864f59b41a5ad00f641db9
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Feb 15 12:30:19 2019 +0000

    drm/i915/fbdev: Actually configure untiled displays
    
    commit d179b88deb3bf6fed4991a31fd6f0f2cad21fab5 upstream.
    
    If we skipped all the connectors that were not part of a tile, we would
    leave conn_seq=0 and conn_configured=0, convincing ourselves that we
    had stagnated in our configuration attempts. Avoid this situation by
    starting conn_seq=ALL_CONNECTORS, and repeating until we find no more
    connectors to configure.
    
    Fixes: 754a76591b12 ("drm/i915/fbdev: Stop repeating tile configuration on stagnation")
    Reported-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190215123019.32283-1-chris@chris-wilson.co.uk
    Cc: <stable@vger.kernel.org> # v3.19+
    (cherry picked from commit d9b308b1f8a1acc0c3279f443d4fe0f9f663252e)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 238209c654d50e74deed8ec1fdb3ff61f4d0ea32
Author: Alexey Brodkin <abrodkin@synopsys.com>
Date:   Fri Feb 8 13:55:19 2019 +0300

    ARC: define ARCH_SLAB_MINALIGN = 8
    
    commit b6835ea77729e7faf4656ca637ba53f42b8ee3fd upstream.
    
    The default value of ARCH_SLAB_MINALIGN in "include/linux/slab.h" is
    "__alignof__(unsigned long long)" which for ARC unexpectedly turns out
    to be 4. This is not a compiler bug, but as defined by ARC ABI [1]
    
    Thus slab allocator would allocate a struct which is 32-bit aligned,
    which is generally OK even if struct has long long members.
    There was however potetial problem when it had any atomic64_t which
    use LLOCKD/SCONDD instructions which are required by ISA to take
    64-bit addresses. This is the problem we ran into
    
    [    4.015732] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)
    [    4.167881] Misaligned Access
    [    4.172356] Path: /bin/busybox.nosuid
    [    4.176004] CPU: 2 PID: 171 Comm: rm Not tainted 4.19.14-yocto-standard #1
    [    4.182851]
    [    4.182851] [ECR   ]: 0x000d0000 => Check Programmer's Manual
    [    4.190061] [EFA   ]: 0xbeaec3fc
    [    4.190061] [BLINK ]: ext4_delete_entry+0x210/0x234
    [    4.190061] [ERET  ]: ext4_delete_entry+0x13e/0x234
    [    4.202985] [STAT32]: 0x80080002 : IE K
    [    4.207236] BTA: 0x9009329c   SP: 0xbe5b1ec4  FP: 0x00000000
    [    4.212790] LPS: 0x9074b118  LPE: 0x9074b120 LPC: 0x00000000
    [    4.218348] r00: 0x00000040  r01: 0x00000021 r02: 0x00000001
    ...
    ...
    [    4.270510] Stack Trace:
    [    4.274510]   ext4_delete_entry+0x13e/0x234
    [    4.278695]   ext4_rmdir+0xe0/0x238
    [    4.282187]   vfs_rmdir+0x50/0xf0
    [    4.285492]   do_rmdir+0x9e/0x154
    [    4.288802]   EV_Trap+0x110/0x114
    
    The fix is to make sure slab allocations are 64-bit aligned.
    
    Do note that atomic64_t is __attribute__((aligned(8)) which means gcc
    does generate 64-bit aligned references, relative to beginning of
    container struct. However the issue is if the container itself is not
    64-bit aligned, atomic64_t ends up unaligned which is what this patch
    ensures.
    
    [1] https://github.com/foss-for-synopsys-dwc-arc-processors/toolchain/wiki/files/ARCv2_ABI.pdf
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Cc: <stable@vger.kernel.org> # 4.8+
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    [vgupta: reworked changelog, added dependency on LL64+LLSC]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7264579eb80ef67efd337ffb32b7d57e7b1ea54
Author: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
Date:   Thu Feb 14 18:07:44 2019 +0300

    ARC: U-boot: check arguments paranoidly
    
    commit a66f2e57bd566240d8b3884eedf503928fbbe557 upstream.
    
    Handle U-boot arguments paranoidly:
     * don't allow to pass unknown tag.
     * try to use external device tree blob only if corresponding tag
       (TAG_DTB) is set.
     * don't check uboot_tag if kernel build with no ARC_UBOOT_SUPPORT.
    
    NOTE:
    If U-boot args are invalid we skip them and try to use embedded device
    tree blob. We can't panic on invalid U-boot args as we really pass
    invalid args due to bug in U-boot code.
    This happens if we don't provide external DTB to U-boot and
    don't set 'bootargs' U-boot environment variable (which is default
    case at least for HSDK board) In that case we will pass
    {r0 = 1 (bootargs in r2); r1 = 0; r2 = 0;} to linux which is invalid.
    
    While I'm at it refactor U-boot arguments handling code.
    
    Cc: stable@vger.kernel.org
    Tested-by: Corentin LABBE <clabbe@baylibre.com>
    Signed-off-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f44814198f800319b56945199c82d28ab700d47
Author: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
Date:   Wed Jan 16 14:29:50 2019 +0300

    ARCv2: Enable unaligned access in early ASM code
    
    commit 252f6e8eae909bc075a1b1e3b9efb095ae4c0b56 upstream.
    
    It is currently done in arc_init_IRQ() which might be too late
    considering gcc 7.3.1 onwards (GNU 2018.03) generates unaligned
    memory accesses by default
    
    Cc: stable@vger.kernel.org #4.4+
    Signed-off-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    [vgupta: rewrote changelog]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc423b651a3ea0f8d4abf108b24eb7a130ea5284
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Sat Feb 16 16:10:39 2019 +0300

    parisc: Fix ptrace syscall number modification
    
    commit b7dc5a071ddf69c0350396b203cba32fe5bab510 upstream.
    
    Commit 910cd32e552e ("parisc: Fix and enable seccomp filter support")
    introduced a regression in ptrace-based syscall tampering: when tracer
    changes syscall number to -1, the kernel fails to initialize %r28 with
    -ENOSYS and subsequently fails to return the error code of the failed
    syscall to userspace.
    
    This erroneous behaviour could be observed with a simple strace syscall
    fault injection command which is expected to print something like this:
    
    $ strace -a0 -ewrite -einject=write:error=enospc echo hello
    write(1, "hello\n", 6) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "echo: ", 6) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "write error", 11) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "\n", 1) = -1 ENOSPC (No space left on device) (INJECTED)
    +++ exited with 1 +++
    
    After commit 910cd32e552ea09caa89cdbe328e468979b030dd it loops printing
    something like this instead:
    
    write(1, "hello\n", 6../strace: Failed to tamper with process 12345: unexpectedly got no error (return value 0, error 0)
    ) = 0 (INJECTED)
    
    This bug was found by strace test suite.
    
    Fixes: 910cd32e552e ("parisc: Fix and enable seccomp filter support")
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Tested-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50d039d91d1007a1799b036763eed07e17feb75b
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Feb 22 15:36:18 2019 +0000

    KEYS: always initialize keyring_index_key::desc_len
    
    commit ede0fa98a900e657d1fcd80b50920efc896c1a4c upstream.
    
    syzbot hit the 'BUG_ON(index_key->desc_len == 0);' in __key_link_begin()
    called from construct_alloc_key() during sys_request_key(), because the
    length of the key description was never calculated.
    
    The problem is that we rely on ->desc_len being initialized by
    search_process_keyrings(), specifically by search_nested_keyrings().
    But, if the process isn't subscribed to any keyrings that never happens.
    
    Fix it by always initializing keyring_index_key::desc_len as soon as the
    description is set, like we already do in some places.
    
    The following program reproduces the BUG_ON() when it's run as root and
    no session keyring has been installed.  If it doesn't work, try removing
    pam_keyinit.so from /etc/pam.d/login and rebooting.
    
        #include <stdlib.h>
        #include <unistd.h>
        #include <keyutils.h>
    
        int main(void)
        {
                int id = add_key("keyring", "syz", NULL, 0, KEY_SPEC_USER_KEYRING);
    
                keyctl_setperm(id, KEY_OTH_WRITE);
                setreuid(5000, 5000);
                request_key("user", "desc", "", id);
        }
    
    Reported-by: syzbot+ec24e95ea483de0a24da@syzkaller.appspotmail.com
    Fixes: b2a4df200d57 ("KEYS: Expand the capacity of a keyring")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56a682bde39c5f16135ef513d062ace480ca679e
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Feb 20 13:32:11 2019 +0000

    KEYS: user: Align the payload buffer
    
    commit cc1780fc42c76c705dd07ea123f1143dc5057630 upstream.
    
    Align the payload of "user" and "logon" keys so that users of the
    keyrings service can access it as a struct that requires more than
    2-byte alignment.  fscrypt currently does this which results in the read
    of fscrypt_key::size being misaligned as it needs 4-byte alignment.
    
    Align to __alignof__(u64) rather than __alignof__(long) since in the
    future it's conceivable that people would use structs beginning with
    u64, which on some platforms would require more than 'long' alignment.
    
    Reported-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Fixes: 2aa349f6e37c ("[PATCH] Keys: Export user-defined keyring operations")
    Fixes: 88bd6ccdcdd6 ("ext4 crypto: add encryption key management facilities")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Tested-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4040907e22d2441574871ea35befa4e3d6ec8028
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jan 30 14:05:55 2019 -0800

    RDMA/srp: Rework SCSI device reset handling
    
    commit 48396e80fb6526ea5ed267bd84f028bae56d2f9e upstream.
    
    Since .scsi_done() must only be called after scsi_queue_rq() has
    finished, make sure that the SRP initiator driver does not call
    .scsi_done() while scsi_queue_rq() is in progress. Although
    invoking sg_reset -d while I/O is in progress works fine with kernel
    v4.20 and before, that is not the case with kernel v5.0-rc1. This
    patch avoids that the following crash is triggered with kernel
    v5.0-rc1:
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000138
    CPU: 0 PID: 360 Comm: kworker/0:1H Tainted: G    B             5.0.0-rc1-dbg+ #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1 04/01/2014
    Workqueue: kblockd blk_mq_run_work_fn
    RIP: 0010:blk_mq_dispatch_rq_list+0x116/0xb10
    Call Trace:
     blk_mq_sched_dispatch_requests+0x2f7/0x300
     __blk_mq_run_hw_queue+0xd6/0x180
     blk_mq_run_work_fn+0x27/0x30
     process_one_work+0x4f1/0xa20
     worker_thread+0x67/0x5b0
     kthread+0x1cf/0x1f0
     ret_from_fork+0x24/0x30
    
    Cc: <stable@vger.kernel.org>
    Fixes: 94a9174c630c ("IB/srp: reduce lock coverage of command completion")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3daca16bdddef8b84cb79f4327c81fb2af2d2cb3
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sat Feb 9 13:35:52 2019 +0300

    inet_diag: fix reporting cgroup classid and fallback to priority
    
    [ Upstream commit 1ec17dbd90f8b638f41ee650558609c1af63dfa0 ]
    
    Field idiag_ext in struct inet_diag_req_v2 used as bitmap of requested
    extensions has only 8 bits. Thus extensions starting from DCTCPINFO
    cannot be requested directly. Some of them included into response
    unconditionally or hook into some of lower 8 bits.
    
    Extension INET_DIAG_CLASS_ID has not way to request from the beginning.
    
    This patch bundle it with INET_DIAG_TCLASS (ipv6 tos), fixes space
    reservation, and documents behavior for other extensions.
    
    Also this patch adds fallback to reporting socket priority. This filed
    is more widely used for traffic classification because ipv4 sockets
    automatically maps TOS to priority and default qdisc pfifo_fast knows
    about that. But priority could be changed via setsockopt SO_PRIORITY so
    INET_DIAG_TOS isn't enough for predicting class.
    
    Also cgroup2 obsoletes net_cls classid (it always zero), but we cannot
    reuse this field for reporting cgroup2 id because it is 64-bit (ino+gen).
    
    So, after this patch INET_DIAG_CLASS_ID will report socket priority
    for most common setup when net_cls isn't set and/or cgroup2 in use.
    
    Fixes: 0888e372c37f ("net: inet: diag: expose sockets cgroup classid")
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fde4151ca8c2b7673769a6e150115b25f414173e
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Mon Feb 11 18:04:17 2019 +0200

    net/mlx4_en: Force CHECKSUM_NONE for short ethernet frames
    
    [ Upstream commit 29dded89e80e3fff61efb34f07a8a3fba3ea146d ]
    
    When an ethernet frame is padded to meet the minimum ethernet frame
    size, the padding octets are not covered by the hardware checksum.
    Fortunately the padding octets are usually zero's, which don't affect
    checksum. However, it is not guaranteed. For example, switches might
    choose to make other use of these octets.
    This repeatedly causes kernel hardware checksum fault.
    
    Prior to the cited commit below, skb checksum was forced to be
    CHECKSUM_NONE when padding is detected. After it, we need to keep
    skb->csum updated. However, fixing up CHECKSUM_COMPLETE requires to
    verify and parse IP headers, it does not worth the effort as the packets
    are so small that CHECKSUM_COMPLETE has no significant advantage.
    
    Future work: when reporting checksum complete is not an option for
    IP non-TCP/UDP packets, we can actually fallback to report checksum
    unnecessary, by looking at cqe IPOK bit.
    
    Fixes: 88078d98d1bb ("net: pskb_trim_rcsum() and CHECKSUM_COMPLETE are friends")
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67b462305b2345a8b673aa69b2d4c1f4ce554364
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Feb 7 18:36:11 2019 +0800

    sit: check if IPv6 enabled before calling ip6_err_gen_icmpv6_unreach()
    
    [ Upstream commit 173656accaf583698bac3f9e269884ba60d51ef4 ]
    
    If we disabled IPv6 from the kernel command line (ipv6.disable=1), we should
    not call ip6_err_gen_icmpv6_unreach(). This:
    
      ip link add sit1 type sit local 192.0.2.1 remote 192.0.2.2 ttl 1
      ip link set sit1 up
      ip addr add 198.51.100.1/24 dev sit1
      ping 198.51.100.2
    
    if IPv6 is disabled at boot time, will crash the kernel.
    
    v2: there's no need to use in6_dev_get(), use __in6_dev_get() instead,
        as we only need to check that idev exists and we are under
        rcu_read_lock() (from netif_receive_skb_internal()).
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Fixes: ca15a078bd90 ("sit: generate icmpv6 error when receiving icmpv4 error")
    Cc: Oussama Ghorbel <ghorbel@pivasoftware.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90dbd485b32b80633e37bef242619f48bf312ea7
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Feb 11 21:59:51 2019 -0800

    team: avoid complex list operations in team_nl_cmd_options_set()
    
    [ Upstream commit 2fdeee2549231b1f989f011bb18191f5660d3745 ]
    
    The current opt_inst_list operations inside team_nl_cmd_options_set()
    is too complex to track:
    
        LIST_HEAD(opt_inst_list);
        nla_for_each_nested(...) {
            list_for_each_entry(opt_inst, &team->option_inst_list, list) {
                if (__team_option_inst_tmp_find(&opt_inst_list, opt_inst))
                    continue;
                list_add(&opt_inst->tmp_list, &opt_inst_list);
            }
        }
        team_nl_send_event_options_get(team, &opt_inst_list);
    
    as while we retrieve 'opt_inst' from team->option_inst_list, it could
    be added to the local 'opt_inst_list' for multiple times. The
    __team_option_inst_tmp_find() doesn't work, as the setter
    team_mode_option_set() still calls team->ops.exit() which uses
    ->tmp_list too in __team_options_change_check().
    
    Simplify the list operations by moving the 'opt_inst_list' and
    team_nl_send_event_options_get() into the nla_for_each_nested() loop so
    that it can be guranteed that we won't insert a same list entry for
    multiple times. Therefore, __team_option_inst_tmp_find() can be removed
    too.
    
    Fixes: 4fb0534fb7bb ("team: avoid adding twice the same option to the event list")
    Fixes: 2fcdb2c9e659 ("team: allow to send multiple set events in one message")
    Reported-by: syzbot+4d4af685432dc0e56c91@syzkaller.appspotmail.com
    Reported-by: syzbot+68ee510075cf64260cc4@syzkaller.appspotmail.com
    Cc: Jiri Pirko <jiri@resnulli.us>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Reviewed-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77278f05f0bbc3409363b844d179aea19504acb6
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Feb 12 18:47:30 2019 +0800

    sctp: call gso_reset_checksum when computing checksum in sctp_gso_segment
    
    [ Upstream commit fc228abc2347e106a44c0e9b29ab70b712c4ca51 ]
    
    Jianlin reported a panic when running sctp gso over gre over vlan device:
    
      [   84.772930] RIP: 0010:do_csum+0x6d/0x170
      [   84.790605] Call Trace:
      [   84.791054]  csum_partial+0xd/0x20
      [   84.791657]  gre_gso_segment+0x2c3/0x390
      [   84.792364]  inet_gso_segment+0x161/0x3e0
      [   84.793071]  skb_mac_gso_segment+0xb8/0x120
      [   84.793846]  __skb_gso_segment+0x7e/0x180
      [   84.794581]  validate_xmit_skb+0x141/0x2e0
      [   84.795297]  __dev_queue_xmit+0x258/0x8f0
      [   84.795949]  ? eth_header+0x26/0xc0
      [   84.796581]  ip_finish_output2+0x196/0x430
      [   84.797295]  ? skb_gso_validate_network_len+0x11/0x80
      [   84.798183]  ? ip_finish_output+0x169/0x270
      [   84.798875]  ip_output+0x6c/0xe0
      [   84.799413]  ? ip_append_data.part.50+0xc0/0xc0
      [   84.800145]  iptunnel_xmit+0x144/0x1c0
      [   84.800814]  ip_tunnel_xmit+0x62d/0x930 [ip_tunnel]
      [   84.801699]  gre_tap_xmit+0xac/0xf0 [ip_gre]
      [   84.802395]  dev_hard_start_xmit+0xa5/0x210
      [   84.803086]  sch_direct_xmit+0x14f/0x340
      [   84.803733]  __dev_queue_xmit+0x799/0x8f0
      [   84.804472]  ip_finish_output2+0x2e0/0x430
      [   84.805255]  ? skb_gso_validate_network_len+0x11/0x80
      [   84.806154]  ip_output+0x6c/0xe0
      [   84.806721]  ? ip_append_data.part.50+0xc0/0xc0
      [   84.807516]  sctp_packet_transmit+0x716/0xa10 [sctp]
      [   84.808337]  sctp_outq_flush+0xd7/0x880 [sctp]
    
    It was caused by SKB_GSO_CB(skb)->csum_start not set in sctp_gso_segment.
    sctp_gso_segment() calls skb_segment() with 'feature | NETIF_F_HW_CSUM',
    which causes SKB_GSO_CB(skb)->csum_start not to be set in skb_segment().
    
    For TCP/UDP, when feature supports HW_CSUM, CHECKSUM_PARTIAL will be set
    and gso_reset_checksum will be called to set SKB_GSO_CB(skb)->csum_start.
    
    So SCTP should do the same as TCP/UDP, to call gso_reset_checksum() when
    computing checksum in sctp_gso_segment.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4ba68b8691e4879cc43c37ad395ea529709bf81
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 6 10:52:30 2019 +0000

    net: sfp: do not probe SFP module before we're attached
    
    [ Upstream commit b5bfc21af5cb3d53f9cee0ef82eaa43762a90f81 ]
    
    When we probe a SFP module, we expect to be able to call the upstream
    device's module_insert() function so that the upstream link can be
    configured.  However, when the upstream device is delayed, we currently
    may end up probing the module before the upstream device is available,
    and lose the module_insert() call.
    
    Avoid this by holding off probing the module until the SFP bus is
    properly connected to both the SFP socket driver and the upstream
    driver.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2226f9592422c320e37585825a4f7b8bfb8c8504
Author: Kal Conley <kal.conley@dectris.com>
Date:   Sun Feb 10 09:57:11 2019 +0100

    net/packet: fix 4gb buffer limit due to overflow check
    
    [ Upstream commit fc62814d690cf62189854464f4bd07457d5e9e50 ]
    
    When calculating rb->frames_per_block * req->tp_block_nr the result
    can overflow. Check it for overflow without limiting the total buffer
    size to UINT_MAX.
    
    This change fixes support for packet ring buffers >= UINT_MAX.
    
    Fixes: 8f8d28e4d6d8 ("net/packet: fix overflow in check for tp_frame_nr")
    Signed-off-by: Kal Conley <kal.conley@dectris.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c3969ff8bd40272dfbbc00dd16bf87547c818c8
Author: Tonghao Zhang <xiangxia.m.yue@gmail.com>
Date:   Mon Jan 28 15:28:06 2019 -0800

    net/mlx5e: Don't overwrite pedit action when multiple pedit used
    
    [ Upstream commit 218d05ce326f9e1b40a56085431fa1068b43d5d9 ]
    
    In some case, we may use multiple pedit actions to modify packets.
    The command shown as below: the last pedit action is effective.
    
    $ tc filter add dev netdev_rep parent ffff: protocol ip prio 1    \
            flower skip_sw ip_proto icmp dst_ip 3.3.3.3        \
            action pedit ex munge ip dst set 192.168.1.100 pipe    \
            action pedit ex munge eth src set 00:00:00:00:00:01 pipe    \
            action pedit ex munge eth dst set 00:00:00:00:00:02 pipe    \
            action csum ip pipe    \
            action tunnel_key set src_ip 1.1.1.100 dst_ip 1.1.1.200 dst_port 4789 id 100 \
            action mirred egress redirect dev vxlan0
    
    To fix it, we add max_mod_hdr_actions to mlx5e_tc_flow_parse_attr struction,
    max_mod_hdr_actions will store the max pedit action number we support and
    num_mod_hdr_actions indicates how many pedit action we used, and store all
    pedit action to mod_hdr_actions.
    
    Fixes: d79b6df6b10a ("net/mlx5e: Add parsing of TC pedit actions to HW format")
    Cc: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Tonghao Zhang <xiangxia.m.yue@gmail.com>
    Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
    Acked-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb506ddb2f72ca3973f692e7d901776043f62158
Author: Li RongQing <lirongqing@baidu.com>
Date:   Mon Feb 11 19:32:20 2019 +0800

    ipv6: propagate genlmsg_reply return code
    
    [ Upstream commit d1f20798a119be71746949ba9b2e2ff330fdc038 ]
    
    genlmsg_reply can fail, so propagate its return code
    
    Fixes: 915d7e5e593 ("ipv6: sr: add code base for control plane support of SR-IPv6")
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f08f5424a728156caca52efc2678fdec05e51439
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 11 14:41:22 2019 -0800

    batman-adv: fix uninit-value in batadv_interface_tx()
    
    [ Upstream commit 4ffcbfac60642f63ae3d80891f573ba7e94a265c ]
    
    KMSAN reported batadv_interface_tx() was possibly using a
    garbage value [1]
    
    batadv_get_vid() does have a pskb_may_pull() call
    but batadv_interface_tx() does not actually make sure
    this did not fail.
    
    [1]
    BUG: KMSAN: uninit-value in batadv_interface_tx+0x908/0x1e40 net/batman-adv/soft-interface.c:231
    CPU: 0 PID: 10006 Comm: syz-executor469 Not tainted 4.20.0-rc7+ #5
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x173/0x1d0 lib/dump_stack.c:113
     kmsan_report+0x12e/0x2a0 mm/kmsan/kmsan.c:613
     __msan_warning+0x82/0xf0 mm/kmsan/kmsan_instr.c:313
     batadv_interface_tx+0x908/0x1e40 net/batman-adv/soft-interface.c:231
     __netdev_start_xmit include/linux/netdevice.h:4356 [inline]
     netdev_start_xmit include/linux/netdevice.h:4365 [inline]
     xmit_one net/core/dev.c:3257 [inline]
     dev_hard_start_xmit+0x607/0xc40 net/core/dev.c:3273
     __dev_queue_xmit+0x2e42/0x3bc0 net/core/dev.c:3843
     dev_queue_xmit+0x4b/0x60 net/core/dev.c:3876
     packet_snd net/packet/af_packet.c:2928 [inline]
     packet_sendmsg+0x8306/0x8f30 net/packet/af_packet.c:2953
     sock_sendmsg_nosec net/socket.c:621 [inline]
     sock_sendmsg net/socket.c:631 [inline]
     __sys_sendto+0x8c4/0xac0 net/socket.c:1788
     __do_sys_sendto net/socket.c:1800 [inline]
     __se_sys_sendto+0x107/0x130 net/socket.c:1796
     __x64_sys_sendto+0x6e/0x90 net/socket.c:1796
     do_syscall_64+0xbc/0xf0 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x63/0xe7
    RIP: 0033:0x441889
    Code: 18 89 d0 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 bb 10 fc ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007ffdda6fd468 EFLAGS: 00000216 ORIG_RAX: 000000000000002c
    RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000441889
    RDX: 000000000000000e RSI: 00000000200000c0 RDI: 0000000000000003
    RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000216 R12: 00007ffdda6fd4c0
    R13: 00007ffdda6fd4b0 R14: 0000000000000000 R15: 0000000000000000
    
    Uninit was created at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:204 [inline]
     kmsan_internal_poison_shadow+0x92/0x150 mm/kmsan/kmsan.c:158
     kmsan_kmalloc+0xa6/0x130 mm/kmsan/kmsan_hooks.c:176
     kmsan_slab_alloc+0xe/0x10 mm/kmsan/kmsan_hooks.c:185
     slab_post_alloc_hook mm/slab.h:446 [inline]
     slab_alloc_node mm/slub.c:2759 [inline]
     __kmalloc_node_track_caller+0xe18/0x1030 mm/slub.c:4383
     __kmalloc_reserve net/core/skbuff.c:137 [inline]
     __alloc_skb+0x309/0xa20 net/core/skbuff.c:205
     alloc_skb include/linux/skbuff.h:998 [inline]
     alloc_skb_with_frags+0x1c7/0xac0 net/core/skbuff.c:5220
     sock_alloc_send_pskb+0xafd/0x10e0 net/core/sock.c:2083
     packet_alloc_skb net/packet/af_packet.c:2781 [inline]
     packet_snd net/packet/af_packet.c:2872 [inline]
     packet_sendmsg+0x661a/0x8f30 net/packet/af_packet.c:2953
     sock_sendmsg_nosec net/socket.c:621 [inline]
     sock_sendmsg net/socket.c:631 [inline]
     __sys_sendto+0x8c4/0xac0 net/socket.c:1788
     __do_sys_sendto net/socket.c:1800 [inline]
     __se_sys_sendto+0x107/0x130 net/socket.c:1796
     __x64_sys_sendto+0x6e/0x90 net/socket.c:1796
     do_syscall_64+0xbc/0xf0 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x63/0xe7
    
    Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc:     Marek Lindner <mareklindner@neomailbox.ch>
    Cc:     Simon Wunderlich <sw@simonwunderlich.de>
    Cc:     Antonio Quartulli <a@unstable.cc>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cbc51d68f485a7b339562db0d95175e4a7014ac
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Jan 9 22:41:08 2019 -0700

    isdn: avm: Fix string plus integer warning from Clang
    
    [ Upstream commit 7afa81c55fca0cad589722cb4bce698b4803b0e1 ]
    
    A recent commit in Clang expanded the -Wstring-plus-int warning, showing
    some odd behavior in this file.
    
    drivers/isdn/hardware/avm/b1.c:426:30: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                    cinfo->version[j] = "\0\0" + 1;
                                        ~~~~~~~^~~
    drivers/isdn/hardware/avm/b1.c:426:30: note: use array indexing to silence this warning
                    cinfo->version[j] = "\0\0" + 1;
                                               ^
                                        &      [  ]
    1 warning generated.
    
    This is equivalent to just "\0". Nick pointed out that it is smarter to
    use "" instead of "\0" because "" is used elsewhere in the kernel and
    can be deduplicated at the linking stage.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/309
    Suggested-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bbc4cbe1f77b77267f2d0b46aff51efd1dec08b
Author: Tariq Toukan <tariqt@mellanox.com>
Date:   Thu Nov 8 12:06:53 2018 +0200

    net/mlx5e: Fix wrong (zero) TX drop counter indication for representor
    
    [ Upstream commit 7fdc1adc52d3975740547a78c2df329bb207f15d ]
    
    For representors, the TX dropped counter is not folded from the
    per-ring counters. Fix it.
    
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91252e8e872272d09b3f7b5552b2f90cf02be669
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Fri Jan 18 15:58:01 2019 +0000

    mlxsw: spectrum_switchdev: Do not treat static FDB entries as sticky
    
    [ Upstream commit 64254a2054611205798e6bde634639bc704573ac ]
    
    The driver currently treats static FDB entries as both static and
    sticky. This is incorrect and prevents such entries from being roamed to
    a different port via learning.
    
    Fix this by configuring static entries with ageing disabled and roaming
    enabled.
    
    In net-next we can add proper support for the newly introduced 'sticky'
    flag.
    
    Fixes: 56ade8fe3fe1 ("mlxsw: spectrum: Add initial support for Spectrum ASIC")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Alexander Petrovskiy <alexpe@mellanox.com>
    Reviewed-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f040249c14ed75436f86e9b59e7e0eeb1027ff6c
Author: Peter Oskolkov <posk@google.com>
Date:   Wed Jan 16 08:47:54 2019 -0800

    bpf: bpf_setsockopt: reset sock dst on SO_MARK changes
    
    [ Upstream commit f4924f24da8c7ef64195096817f3cde324091d97 ]
    
    In sock_setsockopt() (net/core/sock.h), when SO_MARK option is used
    to change sk_mark, sk_dst_reset(sk) is called. The same should be
    done in bpf_setsockopt().
    
    Fixes: 8c4b4c7e9ff0 ("bpf: Add setsockopt helper function to bpf")
    Reported-by: Maciej Å»enczykowski <maze@google.com>
    Signed-off-by: Peter Oskolkov <posk@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Reviewed-by: Maciej Å»enczykowski <maze@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit caa27a81df46e5a697ca6731677deeb45100883b
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Dec 25 22:18:23 2018 -0600

    leds: lp5523: fix a missing check of return value of lp55xx_read
    
    [ Upstream commit 248b57015f35c94d4eae2fdd8c6febf5cd703900 ]
    
    When lp55xx_read() fails, "status" is an uninitialized variable and thus
    may contain random value; using it leads to undefined behaviors.
    
    The fix inserts a check for the return value of lp55xx_read: if it
    fails, returns with its error code.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 733d1915bf571616746f563632015d3bf568bc87
Author: Cheng-Min Ao <tony_ao@wiwynn.com>
Date:   Mon Jan 7 14:29:32 2019 +0800

    hwmon: (tmp421) Correct the misspelling of the tmp442 compatible attribute in OF device ID table
    
    [ Upstream commit f422449b58548a41e98fc97b259a283718e527db ]
    
    Correct a typo in OF device ID table
    The last one should be 'ti,tmp442'
    
    Signed-off-by: Cheng-Min Ao <tony_ao@wiwynn.com>
    Signed-off-by: Yu-Hsiang Chen <matt_chen@wiwynn.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5d7ffdeec096953e097d4f7b5565c455fcc9bf6
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Jan 15 18:03:38 2019 +0000

    atm: he: fix sign-extension overflow on large shift
    
    [ Upstream commit cb12d72b27a6f41325ae23a11033cf5fedfa1b97 ]
    
    Shifting the 1 by exp by an int can lead to sign-extension overlow when
    exp is 31 since 1 is an signed int and sign-extending this result to an
    unsigned long long will set the upper 32 bits.  Fix this by shifting an
    unsigned long.
    
    Detected by cppcheck:
    (warning) Shifting signed 32-bit value by 31 bits is undefined behaviour
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 170c71065fec7c5851b2219793788cfdbf2c6eba
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Sun Jan 13 10:44:51 2019 +0100

    drm/meson: add missing of_node_put
    
    [ Upstream commit f672b93e4a0a4947d2e1103ed8780e01e13eadb6 ]
    
    Add an of_node_put when the result of of_graph_get_remote_port_parent is
    not available.
    
    An of_node_put is also needed when meson_probe_remote completes.  This was
    present at the recursive call, but not in the call from meson_drv_probe.
    
    The semantic match that finds this problem is as follows
    (http://coccinelle.lip6.fr):
    
    // <smpl>
    @r exists@
    local idexpression e;
    expression x;
    @@
    e = of_graph_get_remote_port_parent(...);
    ... when != x = e
        when != true e == NULL
        when != of_node_put(e)
        when != of_fwnode_handle(e)
    (
    return e;
    |
    *return ...;
    )
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1547372691-28324-4-git-send-email-Julia.Lawall@lip6.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b226fe953da01c4f6267e65c178e315526cb244f
Author: Talons Lee <xin.li@citrix.com>
Date:   Mon Dec 10 18:03:00 2018 +0800

    always clear the X2APIC_ENABLE bit for PV guest
    
    [ Upstream commit 5268c8f39e0efef81af2aaed160272d9eb507beb ]
    
    Commit e657fcc clears cpu capability bit instead of using fake cpuid
    value, the EXTD should always be off for PV guest without depending
    on cpuid value. So remove the cpuid check in xen_read_msr_safe() to
    always clear the X2APIC_ENABLE bit.
    
    Signed-off-by: Talons Lee <xin.li@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88c556795a158bbdee44abb46ac195eef4d5e2f6
Author: Manish Rangankar <mrangankar@marvell.com>
Date:   Wed Jan 9 01:39:07 2019 -0800

    scsi: qedi: Add ep_state for login completion on un-reachable targets
    
    [ Upstream commit 34a2ce887668db9dda4b56e6f155c49ac13f3e54 ]
    
    When the driver finds invalid destination MAC for the first un-reachable
    target, and before completes the PATH_REQ operation, set new ep_state to
    OFFLDCONN_NONE so that as part of driver ep_poll mechanism, the upper
    open-iscsi layer is notified to complete the login process on the first
    un-reachable target and thus proceed login to other reachable targets.
    
    Signed-off-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7e2a3857feb21fe06fc1d65363b6e3c5aef0cee
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Mon Jan 7 22:19:34 2019 +0800

    scsi: ufs: Fix system suspend status
    
    [ Upstream commit ce9e7bce43526626f7cffe2e657953997870197e ]
    
    hba->is_sys_suspended is set after successful system suspend but
    not clear after successful system resume.
    
    According to current behavior, hba->is_sys_suspended will not be set if
    host is runtime-suspended but not system-suspended. Thus we shall aligh the
    same policy: clear this flag even if host remains runtime-suspended after
    ufshcd_system_resume is successfully returned.
    
    Simply fix this flag to correct host status logs.
    
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64717501b578a37243d6ad8bb9698745d260386e
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Tue Jan 8 21:04:48 2019 +0800

    isdn: i4l: isdn_tty: Fix some concurrency double-free bugs
    
    [ Upstream commit 2ff33d6637393fe9348357285931811b76e1402f ]
    
    The functions isdn_tty_tiocmset() and isdn_tty_set_termios() may be
    concurrently executed.
    
    isdn_tty_tiocmset
      isdn_tty_modem_hup
        line 719: kfree(info->dtmf_state);
        line 721: kfree(info->silence_state);
        line 723: kfree(info->adpcms);
        line 725: kfree(info->adpcmr);
    
    isdn_tty_set_termios
      isdn_tty_modem_hup
        line 719: kfree(info->dtmf_state);
        line 721: kfree(info->silence_state);
        line 723: kfree(info->adpcms);
        line 725: kfree(info->adpcmr);
    
    Thus, some concurrency double-free bugs may occur.
    
    These possible bugs are found by a static tool written by myself and
    my manual code review.
    
    To fix these possible bugs, the mutex lock "modem_info_mutex" used in
    isdn_tty_tiocmset() is added in isdn_tty_set_termios().
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 486942ea8d78a034942a2f6729b8b013bc34a012
Author: Jose Abreu <jose.abreu@synopsys.com>
Date:   Wed Jan 9 10:05:56 2019 +0100

    net: stmmac: Fix PCI module removal leak
    
    [ Upstream commit 6dea7e1881fd86b80da64e476ac398008daed857 ]
    
    Since commit b7d0f08e9129, the enable / disable of PCI device is not
    managed which will result in IO regions not being automatically unmapped.
    As regions continue mapped it is currently not possible to remove and
    then probe again the PCI module of stmmac.
    
    Fix this by manually unmapping regions on remove callback.
    
    Changes from v1:
    - Fix build error
    
    Cc: Joao Pinto <jpinto@synopsys.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    Fixes: b7d0f08e9129 ("net: stmmac: Fix WoL for PCI-based setups")
    Signed-off-by: Jose Abreu <joabreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1bf951df56775f4401ece4101470936b47c27c1
Author: Yuchung Cheng <ycheng@google.com>
Date:   Tue Jan 8 18:12:24 2019 -0800

    bpf: correctly set initial window on active Fast Open sender
    
    [ Upstream commit 31aa6503a15ba00182ea6dbbf51afb63bf9e851d ]
    
    The existing BPF TCP initial congestion window (TCP_BPF_IW) does not
    to work on (active) Fast Open sender. This is because it changes the
    (initial) window only if data_segs_out is zero -- but data_segs_out
    is also incremented on SYN-data.  This patch fixes the issue by
    proerly accounting for SYN-data additionally.
    
    Fixes: fc7478103c84 ("bpf: Adds support for setting initial cwnd")
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Reviewed-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Lawrence Brakmo <brakmo@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6e33e07b8311764414969f5ddde93e052d226ea
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Jan 9 18:12:16 2019 +0100

    MIPS: jazz: fix 64bit build
    
    [ Upstream commit 41af167fbc0032f9d7562854f58114eaa9270336 ]
    
    64bit JAZZ builds failed with
    
      linux-next/arch/mips/jazz/jazzdma.c: In function `vdma_init`:
      /linux-next/arch/mips/jazz/jazzdma.c:77:30: error: implicit declaration
        of function `KSEG1ADDR`; did you mean `CKSEG1ADDR`?
        [-Werror=implicit-function-declaration]
        pgtbl = (VDMA_PGTBL_ENTRY *)KSEG1ADDR(pgtbl);
                                    ^~~~~~~~~
                                    CKSEG1ADDR
      /linux-next/arch/mips/jazz/jazzdma.c:77:10: error: cast to pointer from
        integer of different size [-Werror=int-to-pointer-cast]
        pgtbl = (VDMA_PGTBL_ENTRY *)KSEG1ADDR(pgtbl);
                ^
      In file included from /linux-next/arch/mips/include/asm/barrier.h:11:0,
                       from /linux-next/include/linux/compiler.h:248,
                       from /linux-next/include/linux/kernel.h:10,
                       from /linux-next/arch/mips/jazz/jazzdma.c:11:
      /linux-next/arch/mips/include/asm/addrspace.h:41:29: error: cast from
        pointer to integer of different size [-Werror=pointer-to-int-cast]
       #define _ACAST32_  (_ATYPE_)(_ATYPE32_) /* widen if necessary */
                                   ^
      /linux-next/arch/mips/include/asm/addrspace.h:53:25: note: in
        expansion of macro `_ACAST32_`
       #define CPHYSADDR(a)  ((_ACAST32_(a)) & 0x1fffffff)
                               ^~~~~~~~~
      /linux-next/arch/mips/jazz/jazzdma.c:84:44: note: in expansion of
        macro `CPHYSADDR`
        r4030_write_reg32(JAZZ_R4030_TRSTBL_BASE, CPHYSADDR(pgtbl));
    
    Using correct casts and CKSEG1ADDR when dealing with the pgtbl setup
    fixes this.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8c1fc1b64727399f196f72ef5ed766188c010ad
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Tue Jan 8 13:50:43 2019 -0700

    scsi: isci: initialize shost fully before calling scsi_add_host()
    
    [ Upstream commit cc29a1b0a3f2597ce887d339222fa85b9307706d ]
    
    scsi_mq_setup_tags(), which is called by scsi_add_host(), calculates the
    command size to allocate based on the prot_capabilities. In the isci
    driver, scsi_host_set_prot() is called after scsi_add_host() so the command
    size gets calculated to be smaller than it needs to be.  Eventually,
    scsi_mq_init_request() locates the 'prot_sdb' after the command assuming it
    was sized correctly and a buffer overrun may occur.
    
    However, seeing blk_mq_alloc_rqs() rounds up to the nearest cache line
    size, the mistake can go unnoticed.
    
    The bug was noticed after the struct request size was reduced by commit
    9d037ad707ed ("block: remove req->timeout_list")
    
    Which likely reduced the allocated space for the request by an entire cache
    line, enough that the overflow could be hit and it caused a panic, on boot,
    at:
    
      RIP: 0010:t10_pi_complete+0x77/0x1c0
      Call Trace:
        <IRQ>
        sd_done+0xf5/0x340
        scsi_finish_command+0xc3/0x120
        blk_done_softirq+0x83/0xb0
        __do_softirq+0xa1/0x2e6
        irq_exit+0xbc/0xd0
        call_function_single_interrupt+0xf/0x20
        </IRQ>
    
    sd_done() would call scsi_prot_sg_count() which reads the number of
    entities in 'prot_sdb', but seeing 'prot_sdb' is located after the end of
    the allocated space it reads a garbage number and erroneously calls
    t10_pi_complete().
    
    To prevent this, the calls to scsi_host_set_prot() are moved into
    isci_host_alloc() before the call to scsi_add_host(). Out of caution, also
    move the similar call to scsi_host_set_guard().
    
    Fixes: 3d2d75254915 ("[SCSI] isci: T10 DIF support")
    Link: http://lkml.kernel.org/r/da851333-eadd-163a-8c78-e1f4ec5ec857@deltatee.com
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Cc: Intel SCU Linux support <intel-linux-scu@intel.com>
    Cc: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9062c77b061ff44176ec06466857a271718999b
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Dec 20 11:16:07 2018 +0800

    scsi: qla4xxx: check return code of qla4xxx_copy_from_fwddb_param
    
    [ Upstream commit 72b4a0465f995175a2e22cf4a636bf781f1f28a7 ]
    
    The return code should be check while qla4xxx_copy_from_fwddb_param fails.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c541a5aec7dde179457cdff8b0f50c8d4ace050
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Fri Jan 4 17:56:16 2019 +0900

    netfilter: nf_tables: fix leaking object reference count
    
    [ Upstream commit b91d9036883793122cf6575ca4dfbfbdd201a83d ]
    
    There is no code that decreases the reference count of stateful objects
    in error path of the nft_add_set_elem(). this causes a leak of reference
    count of stateful objects.
    
    Test commands:
       $nft add table ip filter
       $nft add counter ip filter c1
       $nft add map ip filter m1 { type ipv4_addr : counter \;}
       $nft add element ip filter m1 { 1 : c1 }
       $nft add element ip filter m1 { 1 : c1 }
       $nft delete element ip filter m1 { 1 }
       $nft delete counter ip filter c1
    
    Result:
       Error: Could not process rule: Device or resource busy
       delete counter ip filter c1
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    At the second 'nft add element ip filter m1 { 1 : c1 }', the reference
    count of the 'c1' is increased then it tries to insert into the 'm1'. but
    the 'm1' already has same element so it returns -EEXIST.
    But it doesn't decrease the reference count of the 'c1' in the error path.
    Due to a leak of the reference count of the 'c1', the 'c1' can't be
    removed by 'nft delete counter ip filter c1'.
    
    Fixes: 8aeff920dcc9 ("netfilter: nf_tables: add stateful object reference to set elements")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fe178a747ddbfdf7cf68d03ec9771e01ac95087
Author: Alban Bedel <albeu@free.fr>
Date:   Mon Jan 7 20:45:15 2019 +0100

    MIPS: ath79: Enable OF serial ports in the default config
    
    [ Upstream commit 565dc8a4f55e491935bfb04866068d21784ea9a4 ]
    
    CONFIG_SERIAL_OF_PLATFORM is needed to get a working console on the OF
    boards, enable it in the default config to get a working setup out of
    the box.
    
    Signed-off-by: Alban Bedel <albeu@free.fr>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: linux-mips@vger.kernel.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ada3ccb5e9b90961416734c882e3705af2695e35
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Fri Jan 4 20:18:11 2019 +0800

    net: hns: Fix use after free identified by SLUB debug
    
    [ Upstream commit bb989501abcafa0de5f18b0ec0ec459b5b817908 ]
    
    When enable SLUB debug, than remove hns_enet_drv module, SLUB debug will
    identify a use after free bug:
    
    [134.189505] Unable to handle kernel paging request at virtual address
                    006b6b6b6b6b6b6b
    [134.197553] Mem abort info:
    [134.200381]   ESR = 0x96000004
    [134.203487]   Exception class = DABT (current EL), IL = 32 bits
    [134.209497]   SET = 0, FnV = 0
    [134.212596]   EA = 0, S1PTW = 0
    [134.215777] Data abort info:
    [134.218701]   ISV = 0, ISS = 0x00000004
    [134.222596]   CM = 0, WnR = 0
    [134.225606] [006b6b6b6b6b6b6b] address between user and kernel address ranges
    [134.232851] Internal error: Oops: 96000004 [#1] SMP
    [134.237798] CPU: 21 PID: 27834 Comm: rmmod Kdump: loaded Tainted: G
                    OE     4.19.5-1.2.34.aarch64 #1
    [134.247856] Hardware name: Huawei TaiShan 2280 /BC11SPCD, BIOS 1.58 10/24/2018
    [134.255181] pstate: 20000005 (nzCv daif -PAN -UAO)
    [134.260044] pc : hns_ae_put_handle+0x38/0x60
    [134.264372] lr : hns_ae_put_handle+0x24/0x60
    [134.268700] sp : ffff00001be93c50
    [134.272054] x29: ffff00001be93c50 x28: ffff802faaec8040
    [134.277442] x27: 0000000000000000 x26: 0000000000000000
    [134.282830] x25: 0000000056000000 x24: 0000000000000015
    [134.288284] x23: ffff0000096fe098 x22: ffff000001050070
    [134.293671] x21: ffff801fb3c044a0 x20: ffff80afb75ec098
    [134.303287] x19: ffff80afb75ec098 x18: 0000000000000000
    [134.312945] x17: 0000000000000000 x16: 0000000000000000
    [134.322517] x15: 0000000000000002 x14: 0000000000000000
    [134.332030] x13: dead000000000100 x12: ffff7e02bea3c988
    [134.341487] x11: ffff80affbee9e68 x10: 0000000000000000
    [134.351033] x9 : 6fffff8000008101 x8 : 0000000000000000
    [134.360569] x7 : dead000000000100 x6 : ffff000009579748
    [134.370059] x5 : 0000000000210d00 x4 : 0000000000000000
    [134.379550] x3 : 0000000000000001 x2 : 0000000000000000
    [134.388813] x1 : 6b6b6b6b6b6b6b6b x0 : 0000000000000000
    [134.397993] Process rmmod (pid: 27834, stack limit = 0x00000000d474b7fd)
    [134.408498] Call trace:
    [134.414611]  hns_ae_put_handle+0x38/0x60
    [134.422208]  hnae_put_handle+0xd4/0x108
    [134.429563]  hns_nic_dev_remove+0x60/0xc0 [hns_enet_drv]
    [134.438342]  platform_drv_remove+0x2c/0x70
    [134.445958]  device_release_driver_internal+0x174/0x208
    [134.454810]  driver_detach+0x70/0xd8
    [134.461913]  bus_remove_driver+0x64/0xe8
    [134.469396]  driver_unregister+0x34/0x60
    [134.476822]  platform_driver_unregister+0x20/0x30
    [134.485130]  hns_nic_dev_driver_exit+0x14/0x6e4 [hns_enet_drv]
    [134.494634]  __arm64_sys_delete_module+0x238/0x290
    
    struct hnae_handle is a member of struct hnae_vf_cb, so when vf_cb is
    freed, than use hnae_handle will cause use after free panic.
    
    This patch frees vf_cb after hnae_handle used.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10b1df1928ab64d5904d07cdb5445621046b02c5
Author: Denis Bolotin <dbolotin@marvell.com>
Date:   Thu Jan 3 12:02:40 2019 +0200

    qed: Fix qed_ll2_post_rx_buffer_notify_fw() by adding a write memory barrier
    
    [ Upstream commit 46721c3d9e273aea880e9ff835b0e1271e1cd2fb ]
    
    Make sure chain element is updated before ringing the doorbell.
    
    Signed-off-by: Denis Bolotin <dbolotin@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a096429cac56f3d4571ae7914f98bd2eb201b5fe
Author: Denis Bolotin <dbolotin@marvell.com>
Date:   Thu Jan 3 12:02:39 2019 +0200

    qed: Fix qed_chain_set_prod() for PBL chains with non power of 2 page count
    
    [ Upstream commit 2d533a9287f2011632977e87ce2783f4c689c984 ]
    
    In PBL chains with non power of 2 page count, the producer is not at the
    beginning of the chain when index is 0 after a wrap. Therefore, after the
    producer index wrap around, page index should be calculated more carefully.
    
    Signed-off-by: Denis Bolotin <dbolotin@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3abbc145c7f7dd6f2ba3e89a8e2e691fb16e1f85
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Jan 4 06:03:40 2019 +0000

    xen/pvcalls: remove set but not used variable 'intf'
    
    [ Upstream commit 1f8ce09b36c41a026a37a24b20efa32000892a64 ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    drivers/xen/pvcalls-back.c: In function 'pvcalls_sk_state_change':
    drivers/xen/pvcalls-back.c:286:28: warning:
     variable 'intf' set but not used [-Wunused-but-set-variable]
    
    It not used since e6587cdbd732 ("pvcalls-back: set -ENOTCONN in
    pvcalls_conn_back_read")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f1408d9088c3bb2ce9c4ca066f24b3e147ba14e
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Thu Dec 20 15:12:11 2018 -0600

    mfd: mc13xxx: Fix a missing check of a register-read failure
    
    [ Upstream commit 9e28989d41c0eab57ec0bb156617a8757406ff8a ]
    
    When mc13xxx_reg_read() fails, "old_adc0" is uninitialized and will
    contain random value. Further execution uses "old_adc0" even when
    mc13xxx_reg_read() fails.
    The fix checks the return value of mc13xxx_reg_read(), and exits
    the execution when it fails.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0d7f5c733ca24aa549a54f78333102b4d197a24
Author: Keerthy <j-keerthy@ti.com>
Date:   Sun Dec 9 19:29:31 2018 +0530

    mfd: tps65218: Use devm_regmap_add_irq_chip and clean up error path in probe()
    
    [ Upstream commit 75d4c5e03c2ae9902ab521024b10291f6fc9515b ]
    
    Use devm_regmap_add_irq_chip and clean up error path in probe
    and also the remove function.
    
    Reported-by: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c324254fce40ad0ab1c30a9d0be1ed7c6110afa
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Wed Nov 28 10:04:22 2018 +0000

    mfd: wm5110: Add missing ASRC rate register
    
    [ Upstream commit 04c801c18ded421845324255e660147a6f58dcd6 ]
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74c14405e96dcdbebf07aa57f5737a24cb666271
Author: Jonathan Marek <jonathan@marek.ca>
Date:   Mon Nov 19 14:53:17 2018 -0500

    mfd: qcom_rpm: write fw_version to CTRL_REG
    
    [ Upstream commit 504e4175829c44328773b96ad9c538e4783a8d22 ]
    
    This is required as part of the initialization sequence on certain SoCs.
    
    If these registers are not initialized, the hardware can be unresponsive.
    This fixes the driver on apq8060 (HP TouchPad device).
    
    Signed-off-by: Jonathan Marek <jonathan@marek.ca>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8949511dfaa0f4314402f632091e6add32d76d31
Author: Dien Pham <dien.pham.ry@renesas.com>
Date:   Wed Oct 3 15:58:41 2018 +0200

    mfd: bd9571mwv: Add volatile register to make DVFS work
    
    [ Upstream commit b0aff01e7aa6ad2d6998ef1323843212d1db8b04 ]
    
    Because BD9571MWV_DVFS_MONIVDAC is not defined in the volatile table,
    the physical register value is not updated by regmap and DVFS doesn't
    work as expected. Fix it!
    
    Fixes: d3ea21272094 ("mfd: Add ROHM BD9571MWV-M MFD PMIC driver")
    Signed-off-by: Dien Pham <dien.pham.ry@renesas.com>
    [wsa: rebase, add 'Fixes', reword commit message]
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Marek Vasut <marek.vasut@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8f1d61766adeb1839eb39b04ddde5299bfc101a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Oct 25 15:43:44 2018 +0300

    mfd: ab8500-core: Return zero in get_register_interruptible()
    
    [ Upstream commit 10628e3ecf544fa2e4e24f8e112d95c37884dc98 ]
    
    This function is supposed to return zero on success or negative error
    codes on error.  Unfortunately, there is a bug so it sometimes returns
    non-zero, positive numbers on success.
    
    I noticed this bug during review and I can't test it.  It does appear
    that the return is sometimes propogated back to _regmap_read() where all
    non-zero returns are treated as failure so this may affect run time.
    
    Fixes: 47c1697508f2 ("mfd: Align ab8500 with the abx500 interface")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf0abe19df03fe398c7bc4fec954469d9ab467f0
Author: Nicolas Boichat <drinkcat@chromium.org>
Date:   Mon Oct 22 10:55:06 2018 +0800

    mfd: mt6397: Do not call irq_domain_remove if PMIC unsupported
    
    [ Upstream commit a177276aa098aa47a100d51a13eaaef029604b6d ]
    
    If the PMIC ID is unknown, the current code would call
    irq_domain_remove and panic, as pmic->irq_domain is only
    initialized by mt6397_irq_init.
    
    Return immediately with an error, if the chip ID is unsupported.
    
    Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9856cd1a04dc15f8199147caf3f7e8ba2864cb15
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 17 17:56:28 2018 -0700

    mfd: db8500-prcmu: Fix some section annotations
    
    [ Upstream commit a3888f62fe66429fad3be7f2ba962e1e08c26fd6 ]
    
    When building the kernel with Clang, the following section mismatch
    warnings appear:
    
    WARNING: vmlinux.o(.text+0x7239cc): Section mismatch in reference from
    the function db8500_prcmu_probe() to the function
    .init.text:init_prcm_registers()
    The function db8500_prcmu_probe() references
    the function __init init_prcm_registers().
    This is often because db8500_prcmu_probe lacks a __init
    annotation or the annotation of init_prcm_registers is wrong.
    
    WARNING: vmlinux.o(.text+0x723e28): Section mismatch in reference from
    the function db8500_prcmu_probe() to the function
    .init.text:fw_project_name()
    The function db8500_prcmu_probe() references
    the function __init fw_project_name().
    This is often because db8500_prcmu_probe lacks a __init
    annotation or the annotation of fw_project_name is wrong.
    
    db8500_prcmu_probe should not be marked as __init so remove the __init
    annotation from fw_project_name and init_prcm_registers.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a195375096d2ce059b29f7c15a63204ebc6866a
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 17 10:13:23 2018 -0700

    mfd: twl-core: Fix section annotations on {,un}protect_pm_master
    
    [ Upstream commit 8838555089f0345b87f4277fe5a8dd647dc65589 ]
    
    When building the kernel with Clang, the following section mismatch
    warning appears:
    
    WARNING: vmlinux.o(.text+0x3d84a3b): Section mismatch in reference from
    the function twl_probe() to the function
    .init.text:unprotect_pm_master()
    The function twl_probe() references
    the function __init unprotect_pm_master().
    This is often because twl_probe lacks a __init
    annotation or the annotation of unprotect_pm_master is wrong.
    
    Remove the __init annotation on the *protect_pm_master functions so
    there is no more mismatch.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46625b8a4687e321394643609291ebe6637a30e1
Author: Stefano Stabellini <sstabellini@kernel.org>
Date:   Fri Dec 21 15:06:33 2018 -0800

    pvcalls-back: set -ENOTCONN in pvcalls_conn_back_read
    
    [ Upstream commit e6587cdbd732eacb4c7ce592ed46f7bbcefb655f ]
    
    When a connection is closing we receive on pvcalls_sk_state_change
    notification. Instead of setting the connection as closed immediately
    (-ENOTCONN), let's read one more time from it: pvcalls_conn_back_read
    will set the connection as closed when necessary.
    
    That way, we avoid races between pvcalls_sk_state_change and
    pvcalls_back_ioworker.
    
    Signed-off-by: Stefano Stabellini <stefanos@xilinx.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 368a5c8beed054f8069de5f480b99e8f1008ce1f
Author: Vignesh R <vigneshr@ti.com>
Date:   Mon Dec 3 13:31:17 2018 +0530

    mfd: ti_am335x_tscadc: Use PLATFORM_DEVID_AUTO while registering mfd cells
    
    [ Upstream commit b40ee006fe6a8a25093434e5d394128c356a48f3 ]
    
    Use PLATFORM_DEVID_AUTO to number mfd cells while registering, so that
    different instances are uniquely identified. This is required in order
    to support registering of multiple instances of same ti_am335x_tscadc IP.
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe303ba7ab936c0f5dedf931fdef8fd419053336
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 14 16:20:01 2019 +0000

    KEYS: allow reaching the keys quotas exactly
    
    commit a08bf91ce28ed3ae7b6fef35d843fef8dc8c2cd9 upstream.
    
    If the sysctl 'kernel.keys.maxkeys' is set to some number n, then
    actually users can only add up to 'n - 1' keys.  Likewise for
    'kernel.keys.maxbytes' and the root_* versions of these sysctls.  But
    these sysctls are apparently supposed to be *maximums*, as per their
    names and all documentation I could find -- the keyrings(7) man page,
    Documentation/security/keys/core.rst, and all the mentions of EDQUOT
    meaning that the key quota was *exceeded* (as opposed to reached).
    
    Thus, fix the code to allow reaching the quotas exactly.
    
    Fixes: 0b77f5bfb45c ("keys: make the keyring quotas controllable through /proc/sys")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e69eb7e8a0c70f2316228aefa3cbf87a190d8fd0
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Feb 20 22:19:42 2019 -0800

    proc, oom: do not report alien mms when setting oom_score_adj
    
    commit b2b469939e93458753cfbf8282ad52636495965e upstream.
    
    Tetsuo has reported that creating a thousands of processes sharing MM
    without SIGHAND (aka alien threads) and setting
    /proc/<pid>/oom_score_adj will swamp the kernel log and takes ages [1]
    to finish.  This is especially worrisome that all that printing is done
    under RCU lock and this can potentially trigger RCU stall or softlockup
    detector.
    
    The primary reason for the printk was to catch potential users who might
    depend on the behavior prior to 44a70adec910 ("mm, oom_adj: make sure
    processes sharing mm have same view of oom_score_adj") but after more
    than 2 years without a single report I guess it is safe to simply remove
    the printk altogether.
    
    The next step should be moving oom_score_adj over to the mm struct and
    remove all the tasks crawling as suggested by [2]
    
    [1] http://lkml.kernel.org/r/97fce864-6f75-bca5-14bc-12c9f890e740@i-love.sakura.ne.jp
    [2] http://lkml.kernel.org/r/20190117155159.GA4087@dhcp22.suse.cz
    
    Link: http://lkml.kernel.org/r/20190212102129.26288-1-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Yong-Taek Lee <ytk.lee@samsung.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3af9907c2a544d3d3a55f68cb75018a98b4c1899
Author: Ralph Campbell <rcampbell@nvidia.com>
Date:   Wed Feb 20 22:18:58 2019 -0800

    numa: change get_mempolicy() to use nr_node_ids instead of MAX_NUMNODES
    
    commit 050c17f239fd53adb55aa768d4f41bc76c0fe045 upstream.
    
    The system call, get_mempolicy() [1], passes an unsigned long *nodemask
    pointer and an unsigned long maxnode argument which specifies the length
    of the user's nodemask array in bits (which is rounded up).  The manual
    page says that if the maxnode value is too small, get_mempolicy will
    return EINVAL but there is no system call to return this minimum value.
    To determine this value, some programs search /proc/<pid>/status for a
    line starting with "Mems_allowed:" and use the number of digits in the
    mask to determine the minimum value.  A recent change to the way this line
    is formatted [2] causes these programs to compute a value less than
    MAX_NUMNODES so get_mempolicy() returns EINVAL.
    
    Change get_mempolicy(), the older compat version of get_mempolicy(), and
    the copy_nodes_to_user() function to use nr_node_ids instead of
    MAX_NUMNODES, thus preserving the defacto method of computing the minimum
    size for the nodemask array and the maxnode argument.
    
    [1] http://man7.org/linux/man-pages/man2/get_mempolicy.2.html
    [2] https://lore.kernel.org/lkml/1545405631-6808-1-git-send-email-longman@redhat.com
    
    Link: http://lkml.kernel.org/r/20190211180245.22295-1-rcampbell@nvidia.com
    Fixes: 4fb8e5b89bcbbbb ("include/linux/nodemask.h: use nr_node_ids (not MAX_NUMNODES) in __nodemask_pr_numnodes()")
    Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
    Suggested-by: Alexander Duyck <alexander.duyck@gmail.com>
    Cc: Waiman Long <longman@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eddbdfe4a2c4db0760f5d134e9f97c6bdcc975b6
Author: Yan, Zheng <zyan@redhat.com>
Date:   Mon Feb 11 15:18:52 2019 +0800

    ceph: avoid repeatedly adding inode to mdsc->snap_flush_list
    
    commit 04242ff3ac0abbaa4362f97781dac268e6c3541a upstream.
    
    Otherwise, mdsc->snap_flush_list may get corrupted.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41b824a63da3af6c9f0abf51c830df6ced8e098d
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Tue Feb 5 20:30:27 2019 +0100

    libceph: handle an empty authorize reply
    
    commit 0fd3fd0a9bb0b02b6435bb7070e9f7b82a23f068 upstream.
    
    The authorize reply can be empty, for example when the ticket used to
    build the authorizer is too old and TAG_BADAUTHORIZER is returned from
    the service.  Calling ->verify_authorizer_reply() results in an attempt
    to decrypt and validate (somewhat) random data in au->buf (most likely
    the signature block from calc_signature()), which fails and ends up in
    con_fault_finish() with !con->auth_retry.  The ticket isn't invalidated
    and the connection is retried again and again until a new ticket is
    obtained from the monitor:
    
      libceph: osd2 192.168.122.1:6809 bad authorize reply
      libceph: osd2 192.168.122.1:6809 bad authorize reply
      libceph: osd2 192.168.122.1:6809 bad authorize reply
      libceph: osd2 192.168.122.1:6809 bad authorize reply
    
    Let TAG_BADAUTHORIZER handler kick in and increment con->auth_retry.
    
    Cc: stable@vger.kernel.org
    Fixes: 5c056fdc5b47 ("libceph: verify authorize reply on connect")
    Link: https://tracker.ceph.com/issues/20164
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Sage Weil <sage@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62bb080fa345122d14eea764e577bc29458ffdb3
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu Feb 14 22:03:25 2019 +0800

    mac80211: Free mpath object when rhashtable insertion fails
    
    commit 4ff3a9d14c6c06eaa4e5976c61599ea2bd9e81b2 upstream.
    
    When rhashtable insertion fails the mesh table code doesn't free
    the now-orphan mesh path object.  This patch fixes that.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f9d7b24e6fae276260c6dafc3c7d753c766a947
Author: Rakesh Pillai <pillair@codeaurora.org>
Date:   Fri Feb 15 14:16:02 2019 +0530

    mac80211: Restore vif beacon interval if start ap fails
    
    commit 83e37e0bdd1470bbe6612250b745ad39b1a7b130 upstream.
    
    The starting of AP interface can fail due to invalid
    beacon interval, which does not match the minimum gcd
    requirement set by the wifi driver. In such case, the
    beacon interval of that interface gets updated with
    that invalid beacon interval.
    
    The next time that interface is brought up in AP mode,
    an interface combination check is performed and the
    beacon interval is taken from the previously set value.
    
    In a case where an invalid beacon interval, i.e. a beacon
    interval value which does not satisfy the minimum gcd criteria
    set by the driver, is set, all the subsequent trials to
    bring that interface in AP mode will fail, even if the
    subsequent trials have a valid beacon interval.
    
    To avoid this, in case of a failure in bringing up an
    interface in AP mode due to interface combination error,
    the interface beacon interval which is stored in bss
    conf, needs to be restored with the last working value
    of beacon interval.
    
    Tested on ath10k using WCN3990.
    
    Cc: stable@vger.kernel.org
    Fixes: 0c317a02ca98 ("cfg80211: support virtual interfaces with different beacon intervals")
    Signed-off-by: Rakesh Pillai <pillair@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3f5fbb23264a0a7cebbcd1b24c4b494b3229fe7
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Feb 15 20:14:15 2019 +0000

    MIPS: eBPF: Always return sign extended 32b values
    
    commit 13443154f6cac61d148471ede6d7f1f6b5ea946a upstream.
    
    The function prototype used to call JITed eBPF code (ie. the type of the
    struct bpf_prog bpf_func field) returns an unsigned int. The MIPS n64
    ABI that MIPS64 kernels target defines that 32 bit integers should
    always be sign extended when passed in registers as either arguments or
    return values.
    
    This means that when returning any value which may not already be sign
    extended (ie. of type REG_64BIT or REG_32BIT_ZERO_EX) we need to perform
    that sign extension in order to comply with the n64 ABI. Without this we
    see strange looking test failures from test_bpf.ko, such as:
    
      test_bpf: #65 ALU64_MOV_X:
        dst = 4294967295 jited:1 ret -1 != -1 FAIL (1 times)
    
    Although the return value printed matches the expected value, this is
    only because printf is only examining the least significant 32 bits of
    the 64 bit register value we returned. The register holding the expected
    value is sign extended whilst the v0 register was set to a zero extended
    value by our JITed code, so when compared by a conditional branch
    instruction the values are not equal.
    
    We already handle this when the return value register is of type
    REG_32BIT_ZERO_EX, so simply extend this to also cover REG_64BIT.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: b6bd53f9c4e8 ("MIPS: Add missing file for eBPF JIT.")
    Cc: stable@vger.kernel.org # v4.13+
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee6e4d34b4d9b5da00ac502e68e4d2ac04c5c1f3
Author: Quentin Perret <qperret@qperret.net>
Date:   Thu Feb 14 15:29:50 2019 +0000

    tracing: Fix number of entries in trace header
    
    commit 9e7382153f80ba45a0bbcd540fb77d4b15f6e966 upstream.
    
    The following commit
    
      441dae8f2f29 ("tracing: Add support for display of tgid in trace output")
    
    removed the call to print_event_info() from print_func_help_header_irq()
    which results in the ftrace header not reporting the number of entries
    written in the buffer. As this wasn't the original intent of the patch,
    re-introduce the call to print_event_info() to restore the orginal
    behaviour.
    
    Link: http://lkml.kernel.org/r/20190214152950.4179-1-quentin.perret@arm.com
    
    Acked-by: Joel Fernandes <joelaf@google.com>
    Cc: stable@vger.kernel.org
    Fixes: 441dae8f2f29 ("tracing: Add support for display of tgid in trace output")
    Signed-off-by: Quentin Perret <quentin.perret@arm.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d783d3ceb4005584751ca01f71004f1fb4c30f8f
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Tue Feb 5 16:37:40 2019 +0100

    ARM: 8834/1: Fix: kprobes: optimized kprobes illegal instruction
    
    commit 0ac569bf6a7983c0c5747d6df8db9dc05bc92b6c upstream.
    
    commit e46daee53bb5 ("ARM: 8806/1: kprobes: Fix false positive with
    FORTIFY_SOURCE") introduced a regression in optimized kprobes. It
    triggers "invalid instruction" oopses when using kprobes instrumentation
    through lttng and perf. This commit was introduced in kernel v4.20, and
    has been backported to stable kernels 4.19 and 4.14.
    
    This crash was also reported by Hongzhi Song on the redhat bugzilla
    where the patch was originally introduced.
    
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=1639397
    Link: https://bugs.lttng.org/issues/1174
    Link: https://lore.kernel.org/lkml/342740659.2887.1549307721609.JavaMail.zimbra@efficios.com
    
    Fixes: e46daee53bb5 ("ARM: 8806/1: kprobes: Fix false positive with FORTIFY_SOURCE")
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Reported-by: Robert Berger <Robert.Berger@ReliableEmbeddedSystems.com>
    Tested-by: Robert Berger <Robert.Berger@ReliableEmbeddedSystems.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Cc: Robert Berger <Robert.Berger@ReliableEmbeddedSystems.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: William Cohen <wcohen@redhat.com>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: <stable@vger.kernel.org> # v4.14+
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: patches@armlinux.org.uk
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
