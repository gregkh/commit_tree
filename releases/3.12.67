commit f39d88a0973bf45e3937e39b5cbbb93b8b161a62
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Mon Nov 7 13:49:12 2016 +0100

    Linux 3.12.67

commit caba5960bdb0bae8b432e3664e425b2b53631771
Author: Yonglong Wu <yonglong.wu@mediatek.com>
Date:   Fri Aug 19 11:37:26 2016 +0800

    usb: hub: change CLEAR_FEATURE to SET_FEATURE
    
    commit 4e248000e0d3b406bd6612186835467f2f84486e upstream.
    
    In USB20 specification, describes in chapter 9.4.5: The Remote Wakeup
    field can be modified by the SetFeature() and ClearFeature() requests
    using the DEVICE_REMOTE_WAKEUP feature selector.
    
    In USB30 specification, also describes in chapter 9.4.5: The Function
    Remote Wakeup field can be modified by the SetFeature() requests
    using the FUNCTION_SUSPEND feature selector. In chapter 9.4.9 Set
    Feature reference, it describes Function Remote Wake Enabled/Disabled
    at suspend options by SET_FEATURE.
    
    In USB30 specification only mentioned SetFeature(), so we need use
    SET_FEATURE replace CLEAR_FEATURE to disable USB30 function remote
    wakeup in suspend options.
    
    Signed-off-by: Yonglong Wu <yonglong.wu@mediatek.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e50a611253c70bdb3fad29b7a3411c3b1237cc8e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 15 16:44:56 2016 +0300

    scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()
    
    commit 7bc2b55a5c030685b399bb65b6baa9ccc3d1f167 upstream.
    
    We need to put an upper bound on "user_len" so the memcpy() doesn't
    overflow.
    
    [js] no ARCMSR_API_DATA_BUFLEN defined, use the number
    
    Reported-by: Marco Grassi <marco.gra@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0101f124afabafcf409587e48cf5b4bd66afa7c3
Author: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
Date:   Mon Oct 31 21:46:24 2016 +0200

    i2c: core: fix NULL pointer dereference under race condition
    
    commit 147b36d5b70c083cc76770c47d60b347e8eaf231 upstream.
    
    Race condition between registering an I2C device driver and
    deregistering an I2C adapter device which is assumed to manage that
    I2C device may lead to a NULL pointer dereference due to the
    uninitialized list head of driver clients.
    
    The root cause of the issue is that the I2C bus may know about the
    registered device driver and thus it is matched by bus_for_each_drv(),
    but the list of clients is not initialized and commonly it is NULL,
    because I2C device drivers define struct i2c_driver as static and
    clients field is expected to be initialized by I2C core:
    
      i2c_register_driver()             i2c_del_adapter()
        driver_register()                 ...
          bus_add_driver()                ...
            ...                           bus_for_each_drv(..., __process_removed_adapter)
          ...                               i2c_do_del_adapter()
        ...                                   list_for_each_entry_safe(..., &driver->clients, ...)
        INIT_LIST_HEAD(&driver->clients);
    
    To solve the problem it is sufficient to do clients list head
    initialization before calling driver_register().
    
    The problem was found while using an I2C device driver with a sluggish
    registration routine on a bus provided by a physically detachable I2C
    master controller, but practically the oops may be reproduced under
    the race between arbitraty I2C device driver registration and managing
    I2C bus device removal e.g. by unbinding the latter over sysfs:
    
    % echo 21a4000.i2c > /sys/bus/platform/drivers/imx-i2c/unbind
      Unable to handle kernel NULL pointer dereference at virtual address 00000000
      Internal error: Oops: 17 [#1] SMP ARM
      CPU: 2 PID: 533 Comm: sh Not tainted 4.9.0-rc3+ #61
      Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
      task: e5ada400 task.stack: e4936000
      PC is at i2c_do_del_adapter+0x20/0xcc
      LR is at __process_removed_adapter+0x14/0x1c
      Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
      Control: 10c5387d  Table: 35bd004a  DAC: 00000051
      Process sh (pid: 533, stack limit = 0xe4936210)
      Stack: (0xe4937d28 to 0xe4938000)
      Backtrace:
      [<c0667be0>] (i2c_do_del_adapter) from [<c0667cc0>] (__process_removed_adapter+0x14/0x1c)
      [<c0667cac>] (__process_removed_adapter) from [<c0516998>] (bus_for_each_drv+0x6c/0xa0)
      [<c051692c>] (bus_for_each_drv) from [<c06685ec>] (i2c_del_adapter+0xbc/0x284)
      [<c0668530>] (i2c_del_adapter) from [<bf0110ec>] (i2c_imx_remove+0x44/0x164 [i2c_imx])
      [<bf0110a8>] (i2c_imx_remove [i2c_imx]) from [<c051a838>] (platform_drv_remove+0x2c/0x44)
      [<c051a80c>] (platform_drv_remove) from [<c05183d8>] (__device_release_driver+0x90/0x12c)
      [<c0518348>] (__device_release_driver) from [<c051849c>] (device_release_driver+0x28/0x34)
      [<c0518474>] (device_release_driver) from [<c0517150>] (unbind_store+0x80/0x104)
      [<c05170d0>] (unbind_store) from [<c0516520>] (drv_attr_store+0x28/0x34)
      [<c05164f8>] (drv_attr_store) from [<c0298acc>] (sysfs_kf_write+0x50/0x54)
      [<c0298a7c>] (sysfs_kf_write) from [<c029801c>] (kernfs_fop_write+0x100/0x214)
      [<c0297f1c>] (kernfs_fop_write) from [<c0220130>] (__vfs_write+0x34/0x120)
      [<c02200fc>] (__vfs_write) from [<c0221088>] (vfs_write+0xa8/0x170)
      [<c0220fe0>] (vfs_write) from [<c0221e74>] (SyS_write+0x4c/0xa8)
      [<c0221e28>] (SyS_write) from [<c0108a20>] (ret_fast_syscall+0x0/0x1c)
    
    Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2a6257bbdcfa57c6edf658e0d57f0c7c232bce18
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Mon Oct 31 20:30:43 2016 +0100

    Revert "fix minor infoleak in get_user_ex()"
    
    This reverts commit d42924ab1ec523c0671f5560d51750996be31d3a which is
    1c109fabbd51863475cd12ac206bdd249aee35af upstream.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>

commit d4f4a8c3632d2572e3e76ab79c44a0fc50184b0c
Author: Pan Xinhui <xinhui.pan@linux.vnet.ibm.com>
Date:   Thu Dec 10 15:30:02 2015 +0800

    powerpc/nvram: Fix an incorrect partition merge
    
    commit 11b7e154b132232535befe51c55db048069c8461 upstream.
    
    When we merge two contiguous partitions whose signatures are marked
    NVRAM_SIG_FREE, We need update prev's length and checksum, then write it
    to nvram, not cur's. So lets fix this mistake now.
    
    Also use memset instead of strncpy to set the partition's name. It's
    more readable if we want to fill up with duplicate chars .
    
    Fixes: fa2b4e54d41f ("powerpc/nvram: Improve partition removal")
    Signed-off-by: Pan Xinhui <xinhui.pan@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8748ad71f1f38f57468e3f77b5e614214bed79c2
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Sep 1 11:00:23 2016 -0300

    perf symbols: Fixup symbol sizes before picking best ones
    
    commit 432746f8e0b6a82ba832b771afe31abd51af6752 upstream.
    
    When we call symbol__fixup_duplicate() we use algorithms to pick the
    "best" symbols for cases where there are various functions/aliases to an
    address, and those check zero size symbols, which, before calling
    symbol__fixup_end() are _all_ symbols in a just parsed kallsyms file.
    
    So first fixup the end, then fixup the duplicates.
    
    Found while trying to figure out why 'perf test vmlinux' failed, see the
    output of 'perf test -v vmlinux' to see cases where the symbols picked
    as best for vmlinux don't match the ones picked for kallsyms.
    
    Cc: Anton Blanchard <anton@samba.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Fixes: 694bf407b061 ("perf symbols: Add some heuristics for choosing the best duplicate symbol")
    Link: http://lkml.kernel.org/n/tip-rxqvdgr0mqjdxee0kf8i2ufn@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 8146d19c374d341e14dbed49920a6de9118908d3
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Tue Sep 20 10:25:40 2016 -0500

    hwrng: omap - Only fail if pm_runtime_get_sync returns < 0
    
    commit ad8529fde9e3601180a839867a8ab041109aebb5 upstream.
    
    Currently omap-rng checks the return value of pm_runtime_get_sync and
    reports failure if anything is returned, however it should be checking
    if ret < 0 as pm_runtime_get_sync return 0 on success but also can return
    1 if the device was already active which is not a failure case. Only
    values < 0 are actual failures.
    
    Fixes: 61dc0a446e5d ("hwrng: omap - Fix assumption that runtime_get_sync will always succeed")
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 83bffee1b0b05863fc29afa03b64358ee74ccc3f
Author: Ondrej Mosnáček <omosnacek@gmail.com>
Date:   Fri Sep 23 10:47:32 2016 +0200

    crypto: gcm - Fix IV buffer size in crypto_gcm_setkey
    
    commit 50d2e6dc1f83db0563c7d6603967bf9585ce934b upstream.
    
    The cipher block size for GCM is 16 bytes, and thus the CTR transform
    used in crypto_gcm_setkey() will also expect a 16-byte IV. However,
    the code currently reserves only 8 bytes for the IV, causing
    an out-of-bounds access in the CTR transform. This patch fixes
    the issue by setting the size of the IV buffer to 16 bytes.
    
    Fixes: 84c911523020 ("[CRYPTO] gcm: Add support for async ciphers")
    Signed-off-by: Ondrej Mosnacek <omosnacek@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a5177e0002d94503acf5023ca3514eab08aa0621
Author: Jan Viktorin <viktorin@rehivetech.com>
Date:   Tue May 17 11:22:17 2016 +0200

    uio: fix dmem_region_start computation
    
    commit 4d31a2588ae37a5d0f61f4d956454e9504846aeb upstream.
    
    The variable i contains a total number of resources (including
    IORESOURCE_IRQ). However, we want the dmem_region_start to point
    after the last resource of type IORESOURCE_MEM. The original behaviour
    leads (very likely) to skipping several UIO mapping regions and makes
    them useless. Fix this by computing dmem_region_start from the uiomem
    which points to the last used UIO mapping.
    
    Fixes: 0a0c3b5a24bd ("Add new uio device for dynamic memory allocation")
    
    Signed-off-by: Jan Viktorin <viktorin@rehivetech.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit dbec46d6eeeee4e60cdf6fc24d94a4228e3a8e32
Author: Sebastian Frias <sf84@laposte.net>
Date:   Mon Aug 1 16:27:38 2016 +0200

    genirq/generic_chip: Add irq_unmap callback
    
    commit ee26c013cdee0b947e29d6cadfb9ff3341c69ff9 upstream.
    
    Without this patch irq_domain_disassociate() cannot properly release the
    interrupt. In fact, irq_map_generic_chip() checks a bit on 'gc->installed'
    but said bit is never cleared, only set.
    
    Commit 088f40b7b027 ("genirq: Generic chip: Add linear irq domain support")
    added irq_map_generic_chip() function and also stated "This lacks a removal
    function for now".
    
    This commit provides an implementation of an unmap function that can be
    called by irq_domain_disassociate().
    
    [ tglx: Made the function static and removed the export as we have neither
            a prototype nor a modular user. ]
    
    [js] use irq_get_irq_data, irq_set_chip_and_handler, and
         irq_set_chip_data in 3.12
    
    Fixes: 088f40b7b027 ("genirq: Generic chip: Add linear irq domain support")
    Signed-off-by: Sebastian Frias <sf84@laposte.net>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Mason <slash.tmp@free.fr>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Link: http://lkml.kernel.org/r/579F5C5A.2070507@laposte.net
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 28fe711180ecba29d36063c8ae37b29469e61cd6
Author: Russell Currey <ruscur@russell.cc>
Date:   Mon Sep 12 14:17:22 2016 +1000

    powerpc/eeh: Null check uses of eeh_pe_bus_get
    
    commit 04fec21c06e35b169a83e75a84a015ab4606bf5e upstream.
    
    eeh_pe_bus_get() can return NULL if a PCI bus isn't found for a given PE.
    Some callers don't check this, and can cause a null pointer dereference
    under certain circumstances.
    
    Fix this by checking NULL everywhere eeh_pe_bus_get() is called.
    
    Fixes: 8a6b1bc70dbb ("powerpc/eeh: EEH core to handle special event")
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 526857ca8efea190a020465cc5147f5649d34a97
Author: Jesse Gross <jesse@kernel.org>
Date:   Sat Mar 19 09:32:02 2016 -0700

    tunnels: Remove encapsulation offloads on decap.
    
    commit a09a4c8dd1ec7f830e1fb9e59eb72bddc965d168 upstream.
    
    If a packet is either locally encapsulated or processed through GRO
    it is marked with the offloads that it requires. However, when it is
    decapsulated these tunnel offload indications are not removed. This
    means that if we receive an encapsulated TCP packet, aggregate it with
    GRO, decapsulate, and retransmit the resulting frame on a NIC that does
    not support encapsulation, we won't be able to take advantage of hardware
    offloads even though it is just a simple TCP packet at this point.
    
    This fixes the problem by stripping off encapsulation offload indications
    when packets are decapsulated.
    
    The performance impacts of this bug are significant. In a test where a
    Geneve encapsulated TCP stream is sent to a hypervisor, GRO'ed, decapsulated,
    and bridged to a VM performance is improved by 60% (5Gbps->8Gbps) as a
    result of avoiding unnecessary segmentation at the VM tap interface.
    
    [js] no fou in 3.12 yet
    
    Reported-by: Ramu Ramamurthy <sramamur@linux.vnet.ibm.com>
    Fixes: 68c33163 ("v4 GRE: Add TCP segmentation offload for GRE")
    Signed-off-by: Jesse Gross <jesse@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    (backported from commit a09a4c8dd1ec7f830e1fb9e59eb72bddc965d168)
    [adapt iptunnel_pull_header arguments, avoid 7f290c9]
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Juerg Haefliger <juerg.haefliger@hpe.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit feae920ff8433e2c2fa48d4bc9e0a12acd6d0909
Author: Pravin B Shelar <pshelar@nicira.com>
Date:   Thu Jul 17 15:14:15 2014 -0700

    introduce NETIF_F_GSO_ENCAP_ALL helper mask
    
    part of commit f6eec614d2252a99b861e288b6301599d2d58da4 upstream.
    
    Add NETIF_F_GSO_ENCAP_ALL mask covering all encapsulation GSO flags.
    
    [mk] only introduce the helper, do not pick the openvswitch change the
    original commit was about.
    
    Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
    Acked-by: Andy Zhou <azhou@nicira.com>
    Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 6e49bc65cb8eed81638ef66ac6ea3b8b9c4b65c1
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Fri Oct 7 17:01:07 2016 -0700

    mm/hugetlb: fix memory offline with hugepage size > memory block size
    
    commit 2247bb335ab9c40058484cac36ea74ee652f3b7b upstream.
    
    Patch series "mm/hugetlb: memory offline issues with hugepages", v4.
    
    This addresses several issues with hugepages and memory offline.  While
    the first patch fixes a panic, and is therefore rather important, the
    last patch is just a performance optimization.
    
    The second patch fixes a theoretical issue with reserved hugepages,
    while still leaving some ugly usability issue, see description.
    
    This patch (of 3):
    
    dissolve_free_huge_pages() will either run into the VM_BUG_ON() or a
    list corruption and addressing exception when trying to set a memory
    block offline that is part (but not the first part) of a "gigantic"
    hugetlb page with a size > memory block size.
    
    When no other smaller hugetlb page sizes are present, the VM_BUG_ON()
    will trigger directly.  In the other case we will run into an addressing
    exception later, because dissolve_free_huge_page() will not work on the
    head page of the compound hugetlb page which will result in a NULL
    hstate from page_hstate().
    
    To fix this, first remove the VM_BUG_ON() because it is wrong, and then
    use the compound head page in dissolve_free_huge_page().  This means
    that an unused pre-allocated gigantic page that has any part of itself
    inside the memory block that is going offline will be dissolved
    completely.  Losing an unused gigantic hugepage is preferable to failing
    the memory offline, for example in the situation where a (possibly
    faulty) memory DIMM needs to go offline.
    
    Changes for v4.4 stable:
      - make it apply w/o commit c1470b33 "mm/hugetlb: fix incorrect
        hugepages count during mem hotplug"
    
    Fixes: c8721bbb ("mm: memory-hotplug: enable memory hotplug to handle hugepage")
    Link: http://lkml.kernel.org/r/20160926172811.94033-2-gerald.schaefer@de.ibm.com
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Rui Teng <rui.teng@linux.vnet.ibm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 7c6e84a8ede9e372f286d2893071679606482f3f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Oct 12 15:28:55 2016 -0400

    drm/radeon: change vblank_time's calculation method to reduce computational error.
    
    commit 02cfb5fccb0f9f968f0e208d89d9769aa16267bc upstream.
    
    Ported from Rex's amdgpu change.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 5478f85a66081e99d9ed9f354a28939ce3edd9e9
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Sep 27 14:51:53 2016 -0400

    drm/radeon/si/dpm: fix phase shedding setup
    
    commit 427920292b00474d978d632bc03a8e4e50029af3 upstream.
    
    Used the wrong index to setup the phase shedding mask.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2e9d6ef43db00f8139c01a9e2afd8a21815c236a
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Sep 19 12:35:22 2016 -0400

    drm/radeon: narrow asic_init for virtualization
    
    commit 884031f0aacf57dad1575f96714efc80de9b19cc upstream.
    
    Only needed on CIK+ due to the way pci reset is handled
    by the GPU.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit dd149fcba8ae178da9de0ec58b2a07d6c9485fa6
Author: Richard Weinberger <richard@nod.at>
Date:   Tue Sep 20 10:08:30 2016 +0200

    ubifs: Fix xattr_names length in exit paths
    
    commit 843741c5778398ea67055067f4cc65ae6c80ca0e upstream.
    
    When the operation fails we also have to undo the changes
    we made to ->xattr_names. Otherwise listxattr() will report
    wrong lengths.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit b3ee4ab2764091e9cc4c26e3dd0dec9ab9c87a0d
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Mon Oct 3 10:58:28 2016 +0200

    mmc: core: Annotate cmd_hdr as __le32
    
    commit 3f2d26643595973e835e8356ea90c7c15cb1b0f1 upstream.
    
    Commit f68381a70bb2 (mmc: block: fix packed command header endianness)
    correctly fixed endianness handling of packed_cmd_hdr in
    mmc_blk_packed_hdr_wrq_prep.
    
    But now, sparse complains about incorrect types:
    drivers/mmc/card/block.c:1613:27: sparse: incorrect type in assignment (different base types)
    drivers/mmc/card/block.c:1613:27:    expected unsigned int [unsigned] [usertype] <noident>
    drivers/mmc/card/block.c:1613:27:    got restricted __le32 [usertype] <noident>
    ...
    
    So annotate cmd_hdr properly using __le32 to make everyone happy.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: f68381a70bb2 (mmc: block: fix packed command header endianness)
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9fe0f41d8f1f95563d58e8b8a93bc5d8135e706d
Author: Jan Kara <jack@suse.cz>
Date:   Tue Oct 4 13:44:06 2016 +0200

    isofs: Do not return EACCES for unknown filesystems
    
    commit a2ed0b391dd9c3ef1d64c7c3e370f4a5ffcd324a upstream.
    
    When isofs_mount() is called to mount a device read-write, it returns
    EACCES even before it checks that the device actually contains an isofs
    filesystem. This may confuse mount(8) which then tries to mount all
    subsequent filesystem types in read-only mode.
    
    Fix the problem by returning EACCES only once we verify that the device
    indeed contains an iso9660 filesystem.
    
    Fixes: 17b7f7cf58926844e1dd40f5eb5348d481deca6a
    Reported-by: Kent Overstreet <kent.overstreet@gmail.com>
    Reported-by: Karel Zak <kzak@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 44e7562a8a6822f2eac29255dc3e707694c33578
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Wed Mar 2 17:47:46 2016 +0200

    net/mlx4_core: Allow resetting VF admin mac to zero
    
    commit 6e5224224faa50ec4c8949dcefadf895e565f0d1 upstream.
    
    The VF administrative mac addresses (stored in the PF driver) are
    initialized to zero when the PF driver starts up.
    
    These addresses may be modified in the PF driver through ndo calls
    initiated by iproute2 or libvirt.
    
    While we allow the PF/host to change the VF admin mac address from zero
    to a valid unicast mac, we do not allow restoring the VF admin mac to
    zero. We currently only allow changing this mac to a different unicast mac.
    
    This leads to problems when libvirt scripts are used to deal with
    VF mac addresses, and libvirt attempts to revoke the mac so this
    host will not use it anymore.
    
    Fix this by allowing resetting a VF administrative MAC back to zero.
    
    Fixes: 8f7ba3ca12f6 ('net/mlx4: Add set VF mac address support')
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Reported-by: Moshe Levi <moshele@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Juerg Haefliger <juerg.haefliger@hpe.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c9670b79465cc0ce229064c443d1092057596069
Author: Steve French <smfrench@gmail.com>
Date:   Mon Sep 26 14:23:08 2016 -0500

    Do not send SMB3 SET_INFO request if nothing is changing
    
    commit 18dd8e1a65ddae2351d0f0d6dd4a334f441fc5fa upstream.
    
    [CIFS] We had cases where we sent a SMB2/SMB3 setinfo request with all
    timestamp (and DOS attribute) fields marked as 0 (ie do not change)
    e.g. on chmod or chown.
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 41d2edf9365c0e0597b8590477019dd030cf3052
Author: Steve French <smfrench@gmail.com>
Date:   Thu Sep 22 00:39:34 2016 -0500

    SMB3: GUIDs should be constructed as random but valid uuids
    
    commit fa70b87cc6641978b20e12cc5d517e9ffc0086d4 upstream.
    
    GUIDs although random, and 16 bytes, need to be generated as
    proper uuids.
    
    [js] no create_durable_v2_buf in 3.12 yet
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Reported-by: David Goebels <davidgoe@microsoft.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit ab74f261cd803527a4e2a2c22bd56501409d5c11
Author: Steve French <smfrench@gmail.com>
Date:   Tue Sep 20 22:56:13 2016 -0500

    Set previous session id correctly on SMB3 reconnect
    
    commit c2afb8147e69819885493edf3a7c1ce03aaf2d4e upstream.
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Reported-by: David Goebel <davidgoe@microsoft.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 384dce514cbb8430b028c58cc2423a34ece4f7fc
Author: Steve French <smfrench@gmail.com>
Date:   Mon Sep 19 22:06:35 2016 -0500

    Display number of credits available
    
    commit 9742805d6b1bfb45d7f267648c34fb5bcd347397 upstream.
    
    In debugging smb3, it is useful to display the number
    of credits available, so we can see when the server has not granted
    sufficient operations for the client to make progress, or alternatively
    the client has requested too many credits (as we saw in a recent bug)
    so we can compare with the number of credits the server thinks
    we have.
    
    Add a /proc/fs/cifs/DebugData line to display the client view
    on how many credits are available.
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Reported-by: Germano Percossi <germano.percossi@citrix.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 521a8bab53423328e7326ccdca4040e1ea20ed7c
Author: Steve French <smfrench@gmail.com>
Date:   Thu Sep 22 18:58:16 2016 -0500

    Clarify locking of cifs file and tcon structures and make more granular
    
    commit 3afca265b5f53a0b15b79531c13858049505582d upstream.
    
    Remove the global file_list_lock to simplify cifs/smb3 locking and
    have spinlocks that more closely match the information they are
    protecting.
    
    Add new tcon->open_file_lock and file->file_info_lock spinlocks.
    Locks continue to follow a heirachy,
            cifs_socket --> cifs_ses --> cifs_tcon --> cifs_file
    where global tcp_ses_lock still protects socket and cifs_ses, while the
    the newer locks protect the lower level structure's information
    (tcon and cifs_file respectively).
    
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Germano Percossi <germano.percossi@citrix.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 28b81381300eb1183e46388d50cf49df6165c118
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Sep 20 13:37:13 2016 +0100

    cifs: Limit the overall credit acquired
    
    commit 7d414f396c91a3382e51cf628c1cf0709ad0188b upstream.
    
    The kernel client requests 2 credits for many operations even though
    they only use 1 credit (presumably to build up a buffer of credit).
    Some servers seem to give the client as much credit as is requested.  In
    this case, the amount of credit the client has continues increasing to
    the point where (server->credits * MAX_BUFFER_SIZE) overflows in
    smb2_wait_mtu_credits().
    
    Fix this by throttling the credit requests if an set limit is reached.
    For async requests where the credit charge may be > 1, request as much
    credit as what is charged.
    The limit is chosen somewhat arbitrarily. The Windows client
    defaults to 128 credits, the Windows server allows clients up to
    512 credits (or 8192 for Windows 2016), and the NetApp server
    (and at least one other) does not limit clients at all.
    Choose a high enough value such that the client shouldn't limit
    performance.
    
    This behavior was seen with a NetApp filer (NetApp Release 9.0RC2).
    
    [js] no smb2_async_readv and smb2_async_writev yet
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2bf8991794f06d5625f8f67cd62466a67a7f88d8
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon Sep 26 18:07:48 2016 +0200

    fs/super.c: fix race between freeze_super() and thaw_super()
    
    commit 89f39af129382a40d7cd1f6914617282cfeee28e upstream.
    
    Change thaw_super() to check frozen != SB_FREEZE_COMPLETE rather than
    frozen == SB_UNFROZEN, otherwise it can race with freeze_super() which
    drops sb->s_umount after SB_FREEZE_WRITE to preserve the lock ordering.
    
    In this case thaw_super() will wrongly call s_op->unfreeze_fs() before
    it was actually frozen, and call sb_freeze_unlock() which leads to the
    unbalanced percpu_up_write(). Unfortunately lockdep can't detect this,
    so this triggers misc BUG_ON()'s in kernel/rcu/sync.c.
    
    Reported-and-tested-by: Nikolay Borisov <kernel@kyup.com>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9b2f30c7fa84247064d8095e57caed630476475a
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 10 16:31:04 2016 -0400

    arc: don't leak bits of kernel stack into coredump
    
    commit 7798bf2140ebcc36eafec6a4194fffd8d585d471 upstream.
    
    On faulting sigreturn we do get SIGSEGV, all right, but anything
    we'd put into pt_regs could end up in the coredump.  And since
    __copy_from_user() never zeroed on arc, we'd better bugger off
    on its failure without copying random uninitialized bits of
    kernel stack into pt_regs...
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9e42ba1d58a79444cf8fce9a5b8477a3494a2fdc
Author: Manfred Spraul <manfred@colorfullife.com>
Date:   Tue Oct 11 13:54:50 2016 -0700

    ipc/sem.c: fix complex_count vs. simple op race
    
    commit 5864a2fd3088db73d47942370d0f7210a807b9bc upstream.
    
    Commit 6d07b68ce16a ("ipc/sem.c: optimize sem_lock()") introduced a
    race:
    
    sem_lock has a fast path that allows parallel simple operations.
    There are two reasons why a simple operation cannot run in parallel:
     - a non-simple operations is ongoing (sma->sem_perm.lock held)
     - a complex operation is sleeping (sma->complex_count != 0)
    
    As both facts are stored independently, a thread can bypass the current
    checks by sleeping in the right positions.  See below for more details
    (or kernel bugzilla 105651).
    
    The patch fixes that by creating one variable (complex_mode)
    that tracks both reasons why parallel operations are not possible.
    
    The patch also updates stale documentation regarding the locking.
    
    With regards to stable kernels:
    The patch is required for all kernels that include the
    commit 6d07b68ce16a ("ipc/sem.c: optimize sem_lock()") (3.10?)
    
    The alternative is to revert the patch that introduced the race.
    
    The patch is safe for backporting, i.e. it makes no assumptions
    about memory barriers in spin_unlock_wait().
    
    Background:
    Here is the race of the current implementation:
    
    Thread A: (simple op)
    - does the first "sma->complex_count == 0" test
    
    Thread B: (complex op)
    - does sem_lock(): This includes an array scan. But the scan can't
      find Thread A, because Thread A does not own sem->lock yet.
    - the thread does the operation, increases complex_count,
      drops sem_lock, sleeps
    
    Thread A:
    - spin_lock(&sem->lock), spin_is_locked(sma->sem_perm.lock)
    - sleeps before the complex_count test
    
    Thread C: (complex op)
    - does sem_lock (no array scan, complex_count==1)
    - wakes up Thread B.
    - decrements complex_count
    
    Thread A:
    - does the complex_count test
    
    Bug:
    Now both thread A and thread C operate on the same array, without
    any synchronization.
    
    [js] use set_mb instead of smp_store_mb
    
    Fixes: 6d07b68ce16a ("ipc/sem.c: optimize sem_lock()")
    Link: http://lkml.kernel.org/r/1469123695-5661-1-git-send-email-manfred@colorfullife.com
    Reported-by: <felixh@informatik.uni-bremen.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: <1vier1@web.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit c70798ffa483ee124468af4b189b455faa1cbffc
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Mon Dec 21 09:22:18 2015 +0200

    x86/um: reuse asm-generic/barrier.h
    
    commit 577f183acc88645eae116326cc2203dc88ea730c upstream.
    
    On x86/um CONFIG_SMP is never defined.  As a result, several macros
    match the asm-generic variant exactly. Drop the local definitions and
    pull in asm-generic/barrier.h instead.
    
    This is in preparation to refactoring this code area.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Richard Weinberger <richard@nod.at>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit afe98b3b0e72a1238d8ef394195f3ce5aff27e05
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri Sep 5 11:14:48 2014 -0700

    compiler: Allow 1- and 2-byte smp_load_acquire() and smp_store_release()
    
    commit 536fa402221f09633e7c5801b327055ab716a363 upstream.
    
    CPUs without single-byte and double-byte loads and stores place some
    "interesting" requirements on concurrent code.  For example (adapted
    from Peter Hurley's test code), suppose we have the following structure:
    
            struct foo {
                    spinlock_t lock1;
                    spinlock_t lock2;
                    char a; /* Protected by lock1. */
                    char b; /* Protected by lock2. */
            };
            struct foo *foop;
    
    Of course, it is common (and good) practice to place data protected
    by different locks in separate cache lines.  However, if the locks are
    rarely acquired (for example, only in rare error cases), and there are
    a great many instances of the data structure, then memory footprint can
    trump false-sharing concerns, so that it can be better to place them in
    the same cache cache line as above.
    
    But if the CPU does not support single-byte loads and stores, a store
    to foop->a will do a non-atomic read-modify-write operation on foop->b,
    which will come as a nasty surprise to someone holding foop->lock2.  So we
    now require CPUs to support single-byte and double-byte loads and stores.
    Therefore, this commit adjusts the definition of __native_word() to allow
    these sizes to be used by smp_load_acquire() and smp_store_release().
    
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e4dfd3655a9d59b625f4450587cfa90a1eaa023a
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Oct 7 10:40:59 2016 -0700

    metag: Only define atomic_dec_if_positive conditionally
    
    commit 35d04077ad96ed33ceea2501f5a4f1eacda77218 upstream.
    
    The definition of atomic_dec_if_positive() assumes that
    atomic_sub_if_positive() exists, which is only the case if
    metag specific atomics are used. This results in the following
    build error when trying to build metag1_defconfig.
    
    kernel/ucount.c: In function 'dec_ucount':
    kernel/ucount.c:211: error:
            implicit declaration of function 'atomic_sub_if_positive'
    
    Moving the definition of atomic_dec_if_positive() into the metag
    conditional code fixes the problem.
    
    Fixes: 6006c0d8ce94 ("metag: Atomics, locks and bitops")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 04b46ca8677862d101ea6a1b82452d62c1fd10bb
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Sun Oct 9 13:23:27 2016 +0800

    scsi: Fix use-after-free
    
    commit bcd8f2e94808fcddf6ef3af5f060a36820dcc432 upstream.
    
    This patch fixes one use-after-free report[1] by KASAN.
    
    In __scsi_scan_target(), when a type 31 device is probed,
    SCSI_SCAN_TARGET_PRESENT is returned and the target will be scanned
    again.
    
    Inside the following scsi_report_lun_scan(), one new scsi_device
    instance is allocated, and scsi_probe_and_add_lun() is called again to
    probe the target and still see type 31 device, finally
    __scsi_remove_device() is called to remove & free the device at the end
    of scsi_probe_and_add_lun(), so cause use-after-free in
    scsi_report_lun_scan().
    
    And the following SCSI log can be observed:
    
            scsi 0:0:2:0: scsi scan: INQUIRY pass 1 length 36
            scsi 0:0:2:0: scsi scan: INQUIRY successful with code 0x0
            scsi 0:0:2:0: scsi scan: peripheral device type of 31, no device added
            scsi 0:0:2:0: scsi scan: Sending REPORT LUNS to (try 0)
            scsi 0:0:2:0: scsi scan: REPORT LUNS successful (try 0) result 0x0
            scsi 0:0:2:0: scsi scan: REPORT LUN scan
            scsi 0:0:2:0: scsi scan: INQUIRY pass 1 length 36
            scsi 0:0:2:0: scsi scan: INQUIRY successful with code 0x0
            scsi 0:0:2:0: scsi scan: peripheral device type of 31, no device added
            BUG: KASAN: use-after-free in __scsi_scan_target+0xbf8/0xe40 at addr ffff88007b44a104
    
    This patch fixes the issue by moving the putting reference at
    the end of scsi_report_lun_scan().
    
    [1] KASAN report
    ==================================================================
    [    3.274597] PM: Adding info for serio:serio1
    [    3.275127] BUG: KASAN: use-after-free in __scsi_scan_target+0xd87/0xdf0 at addr ffff880254d8c304
    [    3.275653] Read of size 4 by task kworker/u10:0/27
    [    3.275903] CPU: 3 PID: 27 Comm: kworker/u10:0 Not tainted 4.8.0 #2121
    [    3.276258] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [    3.276797] Workqueue: events_unbound async_run_entry_fn
    [    3.277083]  ffff880254d8c380 ffff880259a37870 ffffffff94bbc6c1 ffff880078402d80
    [    3.277532]  ffff880254d8bb80 ffff880259a37898 ffffffff9459fec1 ffff880259a37930
    [    3.277989]  ffff880254d8bb80 ffff880078402d80 ffff880259a37920 ffffffff945a0165
    [    3.278436] Call Trace:
    [    3.278528]  [<ffffffff94bbc6c1>] dump_stack+0x65/0x84
    [    3.278797]  [<ffffffff9459fec1>] kasan_object_err+0x21/0x70
    [    3.279063] device: 'psaux': device_add
    [    3.279616]  [<ffffffff945a0165>] kasan_report_error+0x205/0x500
    [    3.279651] PM: Adding info for No Bus:psaux
    [    3.280202]  [<ffffffff944ecd22>] ? kfree_const+0x22/0x30
    [    3.280486]  [<ffffffff94bc2dc9>] ? kobject_release+0x119/0x370
    [    3.280805]  [<ffffffff945a0543>] __asan_report_load4_noabort+0x43/0x50
    [    3.281170]  [<ffffffff9507e1f7>] ? __scsi_scan_target+0xd87/0xdf0
    [    3.281506]  [<ffffffff9507e1f7>] __scsi_scan_target+0xd87/0xdf0
    [    3.281848]  [<ffffffff9507d470>] ? scsi_add_device+0x30/0x30
    [    3.282156]  [<ffffffff94f7f660>] ? pm_runtime_autosuspend_expiration+0x60/0x60
    [    3.282570]  [<ffffffff956ddb07>] ? _raw_spin_lock+0x17/0x40
    [    3.282880]  [<ffffffff9507e505>] scsi_scan_channel+0x105/0x160
    [    3.283200]  [<ffffffff9507e8a2>] scsi_scan_host_selected+0x212/0x2f0
    [    3.283563]  [<ffffffff9507eb3c>] do_scsi_scan_host+0x1bc/0x250
    [    3.283882]  [<ffffffff9507efc1>] do_scan_async+0x41/0x450
    [    3.284173]  [<ffffffff941c1fee>] async_run_entry_fn+0xfe/0x610
    [    3.284492]  [<ffffffff941a8954>] ? pwq_dec_nr_in_flight+0x124/0x2a0
    [    3.284876]  [<ffffffff941d1770>] ? preempt_count_add+0x130/0x160
    [    3.285207]  [<ffffffff941a9a84>] process_one_work+0x544/0x12d0
    [    3.285526]  [<ffffffff941aa8e9>] worker_thread+0xd9/0x12f0
    [    3.285844]  [<ffffffff941aa810>] ? process_one_work+0x12d0/0x12d0
    [    3.286182]  [<ffffffff941bb365>] kthread+0x1c5/0x260
    [    3.286443]  [<ffffffff940855cd>] ? __switch_to+0x88d/0x1430
    [    3.286745]  [<ffffffff941bb1a0>] ? kthread_worker_fn+0x5a0/0x5a0
    [    3.287085]  [<ffffffff956dde9f>] ret_from_fork+0x1f/0x40
    [    3.287368]  [<ffffffff941bb1a0>] ? kthread_worker_fn+0x5a0/0x5a0
    [    3.287697] Object at ffff880254d8bb80, in cache kmalloc-2048 size: 2048
    [    3.288064] Allocated:
    [    3.288147] PID = 27
    [    3.288218]  [<ffffffff940b27ab>] save_stack_trace+0x2b/0x50
    [    3.288531]  [<ffffffff9459f246>] save_stack+0x46/0xd0
    [    3.288806]  [<ffffffff9459f4bd>] kasan_kmalloc+0xad/0xe0
    [    3.289098]  [<ffffffff9459c07e>] __kmalloc+0x13e/0x250
    [    3.289378]  [<ffffffff95078e5a>] scsi_alloc_sdev+0xea/0xcf0
    [    3.289701]  [<ffffffff9507de76>] __scsi_scan_target+0xa06/0xdf0
    [    3.290034]  [<ffffffff9507e505>] scsi_scan_channel+0x105/0x160
    [    3.290362]  [<ffffffff9507e8a2>] scsi_scan_host_selected+0x212/0x2f0
    [    3.290724]  [<ffffffff9507eb3c>] do_scsi_scan_host+0x1bc/0x250
    [    3.291055]  [<ffffffff9507efc1>] do_scan_async+0x41/0x450
    [    3.291354]  [<ffffffff941c1fee>] async_run_entry_fn+0xfe/0x610
    [    3.291695]  [<ffffffff941a9a84>] process_one_work+0x544/0x12d0
    [    3.292022]  [<ffffffff941aa8e9>] worker_thread+0xd9/0x12f0
    [    3.292325]  [<ffffffff941bb365>] kthread+0x1c5/0x260
    [    3.292594]  [<ffffffff956dde9f>] ret_from_fork+0x1f/0x40
    [    3.292886] Freed:
    [    3.292945] PID = 27
    [    3.293016]  [<ffffffff940b27ab>] save_stack_trace+0x2b/0x50
    [    3.293327]  [<ffffffff9459f246>] save_stack+0x46/0xd0
    [    3.293600]  [<ffffffff9459fa61>] kasan_slab_free+0x71/0xb0
    [    3.293916]  [<ffffffff9459bac2>] kfree+0xa2/0x1f0
    [    3.294168]  [<ffffffff9508158a>] scsi_device_dev_release_usercontext+0x50a/0x730
    [    3.294598]  [<ffffffff941ace9a>] execute_in_process_context+0xda/0x130
    [    3.294974]  [<ffffffff9508107c>] scsi_device_dev_release+0x1c/0x20
    [    3.295322]  [<ffffffff94f566f6>] device_release+0x76/0x1e0
    [    3.295626]  [<ffffffff94bc2db7>] kobject_release+0x107/0x370
    [    3.295942]  [<ffffffff94bc29ce>] kobject_put+0x4e/0xa0
    [    3.296222]  [<ffffffff94f56e17>] put_device+0x17/0x20
    [    3.296497]  [<ffffffff9505201c>] scsi_device_put+0x7c/0xa0
    [    3.296801]  [<ffffffff9507e1bc>] __scsi_scan_target+0xd4c/0xdf0
    [    3.297132]  [<ffffffff9507e505>] scsi_scan_channel+0x105/0x160
    [    3.297458]  [<ffffffff9507e8a2>] scsi_scan_host_selected+0x212/0x2f0
    [    3.297829]  [<ffffffff9507eb3c>] do_scsi_scan_host+0x1bc/0x250
    [    3.298156]  [<ffffffff9507efc1>] do_scan_async+0x41/0x450
    [    3.298453]  [<ffffffff941c1fee>] async_run_entry_fn+0xfe/0x610
    [    3.298777]  [<ffffffff941a9a84>] process_one_work+0x544/0x12d0
    [    3.299105]  [<ffffffff941aa8e9>] worker_thread+0xd9/0x12f0
    [    3.299408]  [<ffffffff941bb365>] kthread+0x1c5/0x260
    [    3.299676]  [<ffffffff956dde9f>] ret_from_fork+0x1f/0x40
    [    3.299967] Memory state around the buggy address:
    [    3.300209]  ffff880254d8c200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [    3.300608]  ffff880254d8c280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [    3.300986] >ffff880254d8c300: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [    3.301408]                    ^
    [    3.301550]  ffff880254d8c380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [    3.301987]  ffff880254d8c400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [    3.302396]
    ==================================================================
    
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit b160dbbd90a51169f0fb894012e0e16a61fda6c1
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Sep 22 13:39:18 2016 -0400

    NFSv4: Open state recovery must account for file permission changes
    
    commit 304020fe48c6c7fff8b5a38f382b54404f0f79d3 upstream.
    
    If the file permissions change on the server, then we may not be able to
    recover open state. If so, we need to ensure that we mark the file
    descriptor appropriately.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 689c691b7ec33e1dae97bc350a0224c0c2ff0657
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Oct 5 22:49:30 2016 -0700

    Input: elantech - add Fujitsu Lifebook E556 to force crc_enabled
    
    commit 62837b3c1a95535d1a287c9c8c6563bbd8d37033 upstream.
    
    Another Lifebook machine that needs the same quirk as other similar
    models to make the driver working.
    
    Also let's reorder elantech_dmi_force_crc_enabled list so LIfebook enries
    are in alphabetical order.
    
    Reported-by: William Linna <william.linna@gmail.com>
    Tested-by: William Linna <william.linna@gmail.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2ace5a2594767ddf1dac5d4f940c8b2265b3fef8
Author: Matti Kurkela <Matti.Kurkela@iki.fi>
Date:   Mon Oct 3 16:48:17 2016 -0700

    Input: elantech - force needed quirks on Fujitsu H760
    
    commit f9a703a54d16ba2470391c4b12236ee56591d50c upstream.
    
    Just like Fujitsu CELSIUS H730, the H760 also has an Elantech touchpad with
    the same quirks. Without this patch, the touchpad is useless out-of-the-box
    as the mouse pointer won't move.
    
    This patch makes the driver aware of both the crc_enabled=1 requirement and
    the middle button, making the touchpad fully functional out-of-the-box.
    
    Signed-off-by: Matti Kurkela <Matti.Kurkela@iki.fi>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 75393dbe932eec4d00d15faa5cb18a512d1d7bfe
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Wed Oct 12 09:32:56 2016 +0200

    MIPS: ptrace: Fix regs_return_value for kernel context
    
    commit 74f1077b5b783e7bf4fa3007cefdc8dbd6c07518 upstream.
    
    Currently regs_return_value always negates reg[2] if it determines
    the syscall has failed, but when called in kernel context this check is
    invalid and may result in returning a wrong value.
    
    This fixes errors reported by CONFIG_KPROBES_SANITY_TEST
    
    Fixes: d7e7528bcd45 ("Audit: push audit success and retcode into arch ptrace.h")
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14381/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9802f2db0751d0e3669b730fe55dda95bd9628ad
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Sep 4 10:06:39 2016 -0300

    cx231xx: fix GPIOs for Pixelview SBTVD hybrid
    
    commit 24b923f073ac37eb744f56a2c7f77107b8219ab2 upstream.
    
    This device uses GPIOs: 28 to switch between analog and
    digital modes: on digital mode, it should be set to 1.
    
    The code that sets it on analog mode is OK, but it misses
    the logic that sets it on digital mode.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 38cbcc780bd8a6f3133b1ddb9843401217a49033
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Sep 4 09:56:33 2016 -0300

    cx231xx: don't return error on success
    
    commit 1871d718a9db649b70f0929d2778dc01bc49b286 upstream.
    
    The cx231xx_set_agc_analog_digital_mux_select() callers
    expect it to return 0 or an error. Returning a positive value
    makes the first attempt to switch between analog/digital to fail.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e258efb3c7f01a8e229b4a9f8b170b877a21b35a
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Sep 4 10:43:53 2016 -0300

    mb86a20s: fix demod settings
    
    commit 505a0ea706fc1db4381baa6c6bd2e596e730a55e upstream.
    
    With the current settings, only one channel locks properly.
    That's likely because, when this driver was written, Brazil
    were still using experimental transmissions.
    
    Change it to reproduce the settings used by the newer drivers.
    That makes it lock on other channels.
    
    Tested with both PixelView SBTVD Hybrid (cx231xx-based) and
    C3Tech Digital Duo HDTV/SDTV (em28xx-based) devices.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit d49f16e7f616b213a82b508f3b5ac8a417362911
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Sep 4 10:16:18 2016 -0300

    mb86a20s: fix the locking logic
    
    commit dafb65fb98d85d8e78405e82c83e81975e5d5480 upstream.
    
    On this frontend, it takes a while to start output normal
    TS data. That only happens on state S9. On S8, the TS output
    is enabled, but it is not reliable enough.
    
    However, the zigzag loop is too fast to let it sync.
    
    As, on practical tests, the zigzag software loop doesn't
    seem to be helping, but just slowing down the tuning, let's
    switch to hardware algorithm, as the tuners used on such
    devices are capable of work with frequency drifts without
    any help from software.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e559b035d7a1e607519b84c98ea068723167b037
Author: Max Staudt <mstaudt@suse.de>
Date:   Mon Jun 13 19:15:59 2016 +0200

    fbdev/efifb: Fix 16 color palette entry calculation
    
    commit d50b3f43db739f03fcf8c0a00664b3d2fed0496e upstream.
    
    When using efifb with a 16-bit (5:6:5) visual, fbcon's text is rendered
    in the wrong colors - e.g. text gray (#aaaaaa) is rendered as green
    (#50bc50) and neighboring pixels have slightly different values
    (such as #50bc78).
    
    The reason is that fbcon loads its 16 color palette through
    efifb_setcolreg(), which in turn calculates a 32-bit value to write
    into memory for each palette index.
    Until now, this code could only handle 8-bit visuals and didn't mask
    overlapping values when ORing them.
    
    With this patch, fbcon displays the correct colors when a qemu VM is
    booted in 16-bit mode (in GRUB: "set gfxpayload=800x600x16").
    
    Fixes: 7c83172b98e5 ("x86_64 EFI boot support: EFI frame buffer driver")  # v2.6.24+
    Signed-off-by: Max Staudt <mstaudt@suse.de>
    Acked-By: Peter Jones <pjones@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 919b4765826fb1abc086537fdb401646a6673179
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 14 16:18:39 2016 -0400

    scsi: zfcp: spin_lock_irqsave() is not nestable
    
    commit e7cb08e894a0b876443ef8fdb0706575dc00a5d2 upstream.
    
    We accidentally overwrite the original saved value of "flags" so that we
    can't re-enable IRQs at the end of the function.  Presumably this
    function is mostly called with IRQs disabled or it would be obvious in
    testing.
    
    Fixes: aceeffbb59bb ("zfcp: trace full payload of all SAN records (req,resp,iels)")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 6f5790ba6a18b8a2f56aa4e5b69f19cf78c47305
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:53 2016 +0200

    zfcp: trace full payload of all SAN records (req,resp,iels)
    
    commit aceeffbb59bb91404a0bda32a542d7ebf878433a upstream.
    
    This was lost with commit 2c55b750a884b86dea8b4cc5f15e1484cc47a25c
    ("[SCSI] zfcp: Redesign of the debug tracing for SAN records.")
    but is necessary for problem determination, e.g. to see the
    currently active zone set during automatic port scan.
    
    For the large GPN_FT response (4 pages), save space by not dumping
    any empty residual entries.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 2c55b750a884 ("[SCSI] zfcp: Redesign of the debug tracing for SAN records.")
    Reviewed-by: Alexey Ishchuk <aishchuk@linux.vnet.ibm.com>
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9e70e9eec96ce861ca585ab9b4316789d8ddebe7
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:52 2016 +0200

    zfcp: fix payload trace length for SAN request&response
    
    commit 94db3725f049ead24c96226df4a4fb375b880a77 upstream.
    
    commit 2c55b750a884b86dea8b4cc5f15e1484cc47a25c
    ("[SCSI] zfcp: Redesign of the debug tracing for SAN records.")
    started to add FC_CT_HDR_LEN which made zfcp dump random data
    out of bounds for RSPN GS responses because u.rspn.rsp
    is the largest and last field in the union of struct zfcp_fc_req.
    Other request/response types only happened to stay within bounds
    due to the padding of the union or
    due to the trace capping of u.gspn.rsp to ZFCP_DBF_SAN_MAX_PAYLOAD.
    
    Timestamp      : ...
    Area           : SAN
    Subarea        : 00
    Level          : 1
    Exception      : -
    CPU id         : ..
    Caller         : ...
    Record id      : 2
    Tag            : fsscth2
    Request id     : 0x...
    Destination ID : 0x00fffffc
    Payload short  : 01000000 fc020000 80020000 00000000
                     xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx <===
                     00000000 00000000 00000000 00000000
    Payload length : 32                                  <===
    
    struct zfcp_fc_req {
        [0] struct zfcp_fsf_ct_els ct_els;
       [56] struct scatterlist sg_req;
       [96] struct scatterlist sg_rsp;
            union {
                struct {req; rsp;} adisc;    SIZE: 28+28=   56
                struct {req; rsp;} gid_pn;   SIZE: 24+20=   44
                struct {rspsg; req;} gpn_ft; SIZE: 40*4+20=180
                struct {req; rsp;} gspn;     SIZE: 20+273= 293
                struct {req; rsp;} rspn;     SIZE: 277+16= 293
      [136] } u;
    }
    SIZE: 432
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 2c55b750a884 ("[SCSI] zfcp: Redesign of the debug tracing for SAN records.")
    Reviewed-by: Alexey Ishchuk <aishchuk@linux.vnet.ibm.com>
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit ac00aa8912c4fd5cefdc9e4a4c60abc8b8e37ec5
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:51 2016 +0200

    zfcp: fix D_ID field with actual value on tracing SAN responses
    
    commit 771bf03537ddfa4a4dde62ef9dfbc82e4f77ab20 upstream.
    
    With commit 2c55b750a884b86dea8b4cc5f15e1484cc47a25c
    ("[SCSI] zfcp: Redesign of the debug tracing for SAN records.")
    we lost the N_Port-ID where an ELS response comes from.
    With commit 7c7dc196814b9e1d5cc254dc579a5fa78ae524f7
    ("[SCSI] zfcp: Simplify handling of ct and els requests")
    we lost the N_Port-ID where a CT response comes from.
    It's especially useful if the request SAN trace record
    with D_ID was already lost due to trace buffer wrap.
    
    GS uses an open WKA port handle and ELS just a D_ID, and
    only for ELS we could get D_ID from QTCB bottom via zfcp_fsf_req.
    To cover both cases, add a new field to zfcp_fsf_ct_els
    and fill it in on request to use in SAN response trace.
    Strictly speaking the D_ID on SAN response is the FC frame's S_ID.
    We don't need a field for the other end which is always us.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 2c55b750a884 ("[SCSI] zfcp: Redesign of the debug tracing for SAN records.")
    Fixes: 7c7dc196814b ("[SCSI] zfcp: Simplify handling of ct and els requests")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 95772bc480cd7ad4f0d2b34f04a015aa55f23cb6
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:50 2016 +0200

    zfcp: restore tracing of handle for port and LUN with HBA records
    
    commit 7c964ffe586bc0c3d9febe9bf97a2e4b2866e5b7 upstream.
    
    This information was lost with
    commit a54ca0f62f953898b05549391ac2a8a4dad6482b
    ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    but is required to debug e.g. invalid handle situations.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: a54ca0f62f95 ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit d04263620985d482845e51221932ae44595f0103
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:49 2016 +0200

    zfcp: trace on request for open and close of WKA port
    
    commit d27a7cb91960cf1fdd11b10071e601828cbf4b1f upstream.
    
    Since commit a54ca0f62f953898b05549391ac2a8a4dad6482b
    ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    HBA records no longer contain WWPN, D_ID, or LUN
    to reduce duplicate information which is already in REC records.
    In contrast to "regular" target ports, we don't use recovery to open
    WKA ports such as directory/nameserver, so we don't get REC records.
    Therefore, introduce pseudo REC running records without any
    actual recovery action but including D_ID of WKA port on open/close.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: a54ca0f62f95 ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2a6fc747d071bdb07ca0d5c9e789ed589242ce3a
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:48 2016 +0200

    zfcp: restore: Dont use 0 to indicate invalid LUN in rec trace
    
    commit 0102a30a6ff60f4bb4c07358ca3b1f92254a6c25 upstream.
    
    bring back
    commit d21e9daa63e009ce5b87bbcaa6d11ce48e07bbbe
    ("[SCSI] zfcp: Dont use 0 to indicate invalid LUN in rec trace")
    which was lost with
    commit ae0904f60fab7cb20c48d32eefdd735e478b91fb
    ("[SCSI] zfcp: Redesign of the debug tracing for recovery actions.")
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: ae0904f60fab ("[SCSI] zfcp: Redesign of the debug tracing for recovery actions.")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 9a71e7e6a8028430b6a9ed8367fed937ac64720b
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:47 2016 +0200

    zfcp: retain trace level for SCSI and HBA FSF response records
    
    commit 35f040df97fa0e94c7851c054ec71533c88b4b81 upstream.
    
    While retaining the actual filtering according to trace level,
    the following commits started to write such filtered records
    with a hardcoded record level of 1 instead of the actual record level:
    commit 250a1352b95e1db3216e5c5d4f4365bea5122f4a
    ("[SCSI] zfcp: Redesign of the debug tracing for SCSI records.")
    commit a54ca0f62f953898b05549391ac2a8a4dad6482b
    ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    
    Now we can distinguish written records again for offline level filtering.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 250a1352b95e ("[SCSI] zfcp: Redesign of the debug tracing for SCSI records.")
    Fixes: a54ca0f62f95 ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 3498aa775a8ec841d231bcf0156561795a4f9822
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:46 2016 +0200

    zfcp: close window with unblocked rport during rport gone
    
    commit 4eeaa4f3f1d6c47b69f70e222297a4df4743363e upstream.
    
    On a successful end of reopen port forced,
    zfcp_erp_strategy_followup_success() re-uses the port erp_action
    and the subsequent zfcp_erp_action_cleanup() now
    sees ZFCP_ERP_SUCCEEDED with
    erp_action->action==ZFCP_ERP_ACTION_REOPEN_PORT
    instead of ZFCP_ERP_ACTION_REOPEN_PORT_FORCED
    but must not perform zfcp_scsi_schedule_rport_register().
    
    We can detect this because the fresh port reopen erp_action
    is in its very first step ZFCP_ERP_STEP_UNINITIALIZED.
    
    Otherwise this opens a time window with unblocked rport
    (until the followup port reopen recovery would block it again).
    If a scsi_cmnd timeout occurs during this time window
    fc_timed_out() cannot work as desired and such command
    would indeed time out and trigger scsi_eh. This prevents
    a clean and timely path failover.
    This should not happen if the path issue can be recovered
    on FC transport layer such as path issues involving RSCNs.
    
    Also, unnecessary and repeated DID_IMM_RETRY for pending and
    undesired new requests occur because internally zfcp still
    has its zfcp_port blocked.
    
    As follow-on errors with scsi_eh, it can cause,
    in the worst case, permanently lost paths due to one of:
    sd <scsidev>: [<scsidisk>] Medium access timeout failure. Offlining disk!
    sd <scsidev>: Device offlined - not ready after error recovery
    
    For fix validation and to aid future debugging with other recoveries
    we now also trace (un)blocking of rports.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 5767620c383a ("[SCSI] zfcp: Do not unblock rport from REOPEN_PORT_FORCED")
    Fixes: a2fa0aede07c ("[SCSI] zfcp: Block FC transport rports early on errors")
    Fixes: 5f852be9e11d ("[SCSI] zfcp: Fix deadlock between zfcp ERP and SCSI")
    Fixes: 338151e06608 ("[SCSI] zfcp: make use of fc_remote_port_delete when target port is unavailable")
    Fixes: 3859f6a248cb ("[PATCH] zfcp: add rports to enable scsi_add_device to work again")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f2d495a30b633dc3734b5f0897ed53c5ed7ef202
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:45 2016 +0200

    zfcp: fix ELS/GS request&response length for hardware data router
    
    commit 70369f8e15b220f50a16348c79a61d3f7054813c upstream.
    
    In the hardware data router case, introduced with kernel 3.2
    commit 86a9668a8d29 ("[SCSI] zfcp: support for hardware data router")
    the ELS/GS request&response length needs to be initialized
    as in the chained SBAL case.
    
    Otherwise, the FCP channel rejects ELS requests with
    FSF_REQUEST_SIZE_TOO_LARGE.
    
    Such ELS requests can be issued by user space through BSG / HBA API,
    or zfcp itself uses ADISC ELS for remote port link test on RSCN.
    The latter can cause a short path outage due to
    unnecessary remote target port recovery because the always
    failing ADISC cannot detect extremely short path interruptions
    beyond the local FCP channel.
    
    Below example is decoded with zfcpdbf from s390-tools:
    
    Timestamp      : ...
    Area           : SAN
    Subarea        : 00
    Level          : 1
    Exception      : -
    CPU id         : ..
    Caller         : zfcp_dbf_san_req+0408
    Record id      : 1
    Tag            : fssels1
    Request id     : 0x<reqid>
    Destination ID : 0x00<target d_id>
    Payload info   : 52000000 00000000 <our wwpn       >           [ADISC]
                     <our wwnn       > 00<s_id> 00000000
                     00000000 00000000 00000000 00000000
    
    Timestamp      : ...
    Area           : HBA
    Subarea        : 00
    Level          : 1
    Exception      : -
    CPU id         : ..
    Caller         : zfcp_dbf_hba_fsf_res+0740
    Record id      : 1
    Tag            : fs_ferr
    Request id     : 0x<reqid>
    Request status : 0x00000010
    FSF cmnd       : 0x0000000b               [FSF_QTCB_SEND_ELS]
    FSF sequence no: 0x...
    FSF issued     : ...
    FSF stat       : 0x00000061               [FSF_REQUEST_SIZE_TOO_LARGE]
    FSF stat qual  : 00000000 00000000 00000000 00000000
    Prot stat      : 0x00000100
    Prot stat qual : 00000000 00000000 00000000 00000000
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 86a9668a8d29 ("[SCSI] zfcp: support for hardware data router")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 36dc83b57a0d07bc6b13cf3ff9d94b228fdcc8ca
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:30:44 2016 +0200

    zfcp: fix fc_host port_type with NPIV
    
    commit bd77befa5bcff8c51613de271913639edf85fbc2 upstream.
    
    For an NPIV-enabled FCP device, zfcp can erroneously show
    "NPort (fabric via point-to-point)" instead of "NPIV VPORT"
    for the port_type sysfs attribute of the corresponding
    fc_host.
    s390-tools that can be affected are dbginfo.sh and ziomon.
    
    zfcp_fsf_exchange_config_evaluate() ignores
    fsf_qtcb_bottom_config.connection_features indicating NPIV
    and only sets fc_host_port_type to FC_PORTTYPE_NPORT if
    fsf_qtcb_bottom_config.fc_topology is FSF_TOPO_FABRIC.
    
    Only the independent zfcp_fsf_exchange_port_evaluate()
    evaluates connection_features to overwrite fc_host_port_type
    to FC_PORTTYPE_NPIV in case of NPIV.
    Code was introduced with upstream kernel 2.6.30
    commit 0282985da5923fa6365adcc1a1586ae0c13c1617
    ("[SCSI] zfcp: Report fc_host_port_type as NPIV").
    
    This works during FCP device recovery (such as set online)
    because it performs FSF_QTCB_EXCHANGE_CONFIG_DATA followed by
    FSF_QTCB_EXCHANGE_PORT_DATA in sequence.
    
    However, the zfcp-specific scsi host sysfs attributes
    "requests", "megabytes", or "seconds_active" trigger only
    zfcp_fsf_exchange_config_evaluate() resetting fc_host
    port_type to FC_PORTTYPE_NPORT despite NPIV.
    
    The zfcp-specific scsi host sysfs attribute "utilization"
    triggers only zfcp_fsf_exchange_port_evaluate() correcting
    the fc_host port_type again in case of NPIV.
    
    Evaluate fsf_qtcb_bottom_config.connection_features
    in zfcp_fsf_exchange_config_evaluate() where it belongs to.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 0282985da592 ("[SCSI] zfcp: Report fc_host_port_type as NPIV")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 429074e8a20ae08dd1a0429e690ba024e02c2f36
Author: Laurent Dufour <ldufour@linux.vnet.ibm.com>
Date:   Thu Oct 6 15:33:21 2016 +0200

    powerpc/pseries: Fix stack corruption in htpe code
    
    commit 05af40e885955065aee8bb7425058eb3e1adca08 upstream.
    
    This commit fixes a stack corruption in the pseries specific code dealing
    with the huge pages.
    
    In __pSeries_lpar_hugepage_invalidate() the buffer used to pass arguments
    to the hypervisor is not large enough. This leads to a stack corruption
    where a previously saved register could be corrupted leading to unexpected
    result in the caller, like the following panic:
    
      Oops: Kernel access of bad area, sig: 11 [#1]
      SMP NR_CPUS=2048 NUMA pSeries
      Modules linked in: virtio_balloon ip_tables x_tables autofs4
      virtio_blk 8139too virtio_pci virtio_ring 8139cp virtio
      CPU: 11 PID: 1916 Comm: mmstress Not tainted 4.8.0 #76
      task: c000000005394880 task.stack: c000000005570000
      NIP: c00000000027bf6c LR: c00000000027bf64 CTR: 0000000000000000
      REGS: c000000005573820 TRAP: 0300   Not tainted  (4.8.0)
      MSR: 8000000000009033 <SF,EE,ME,IR,DR,RI,LE>  CR: 84822884  XER: 20000000
      CFAR: c00000000010a924 DAR: 420000000014e5e0 DSISR: 40000000 SOFTE: 1
      GPR00: c00000000027bf64 c000000005573aa0 c000000000e02800 c000000004447964
      GPR04: c00000000404de18 c000000004d38810 00000000042100f5 00000000f5002104
      GPR08: e0000000f5002104 0000000000000001 042100f5000000e0 00000000042100f5
      GPR12: 0000000000002200 c00000000fe02c00 c00000000404de18 0000000000000000
      GPR16: c1ffffffffffe7ff 00003fff62000000 420000000014e5e0 00003fff63000000
      GPR20: 0008000000000000 c0000000f7014800 0405e600000000e0 0000000000010000
      GPR24: c000000004d38810 c000000004447c10 c00000000404de18 c000000004447964
      GPR28: c000000005573b10 c000000004d38810 00003fff62000000 420000000014e5e0
      NIP [c00000000027bf6c] zap_huge_pmd+0x4c/0x470
      LR [c00000000027bf64] zap_huge_pmd+0x44/0x470
      Call Trace:
      [c000000005573aa0] [c00000000027bf64] zap_huge_pmd+0x44/0x470 (unreliable)
      [c000000005573af0] [c00000000022bbd8] unmap_page_range+0xcf8/0xed0
      [c000000005573c30] [c00000000022c2d4] unmap_vmas+0x84/0x120
      [c000000005573c80] [c000000000235448] unmap_region+0xd8/0x1b0
      [c000000005573d80] [c0000000002378f0] do_munmap+0x2d0/0x4c0
      [c000000005573df0] [c000000000237be4] SyS_munmap+0x64/0xb0
      [c000000005573e30] [c000000000009560] system_call+0x38/0x108
      Instruction dump:
      fbe1fff8 fb81ffe0 7c7f1b78 7ca32b78 7cbd2b78 f8010010 7c9a2378 f821ffb1
      7cde3378 4bfffea9 7c7b1b79 41820298 <e87f0000> 48000130 7fa5eb78 7fc4f378
    
    Most of the time, the bug is surfacing in a caller up in the stack from
    __pSeries_lpar_hugepage_invalidate() which is quite confusing.
    
    This bug is pending since v3.11 but was hidden if a caller of the
    caller of __pSeries_lpar_hugepage_invalidate() has pushed the corruped
    register (r18 in this case) in the stack and is not using it until
    restoring it. GCC 6.2.0 seems to raise it more frequently.
    
    This commit also change the definition of the parameter buffer in
    pSeries_lpar_flush_hash_range() to rely on the global define
    PLPAR_HCALL9_BUFSIZE (no functional change here).
    
    Fixes: 1a5272866f87 ("powerpc: Optimize hugepage invalidate")
    Signed-off-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 61bc5e39f2a0720c58f0db6679912c6cb6d2fb52
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Tue Oct 11 22:25:47 2016 +1100

    powerpc/64: Fix incorrect return value from __copy_tofrom_user
    
    commit 1a34439e5a0b2235e43f96816dbb15ee1154f656 upstream.
    
    Debugging a data corruption issue with virtio-net/vhost-net led to
    the observation that __copy_tofrom_user was occasionally returning
    a value 16 larger than it should.  Since the return value from
    __copy_tofrom_user is the number of bytes not copied, this means
    that __copy_tofrom_user can occasionally return a value larger
    than the number of bytes it was asked to copy.  In turn this can
    cause higher-level copy functions such as copy_page_to_iter_iovec
    to corrupt memory by copying data into the wrong memory locations.
    
    It turns out that the failing case involves a fault on the store
    at label 79, and at that point the first unmodified byte of the
    destination is at R3 + 16.  Consequently the exception handler
    for that store needs to add 16 to R3 before using it to work out
    how many bytes were not copied, but in this one case it was not
    adding the offset to R3.  To fix it, this moves the label 179 to
    the point where we add 16 to R3.  I have checked manually all the
    exception handlers for the loads and stores in this code and the
    rest of them are correct (it would be excellent to have an
    automated test of all the exception cases).
    
    This bug has been present since this code was initially
    committed in May 2002 to Linux version 2.5.20.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit b63c03afdd5a1f3875c06e9d57d7c87ffc893f17
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Tue Aug 2 14:10:32 2016 +1000

    powerpc/powernv: Use CPU-endian PEST in pnv_pci_dump_p7ioc_diag_data()
    
    commit 5adaf8629b193f185ca5a1665b9e777a0579f518 upstream.
    
    This fixes the warnings reported from sparse:
    
      pci.c:312:33: warning: restricted __be64 degrades to integer
      pci.c:313:33: warning: restricted __be64 degrades to integer
    
    Fixes: cee72d5bb489 ("powerpc/powernv: Display diag data on p7ioc EEH errors")
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 62c65d8792347c7f347594d464a9e6fc79a0ab1b
Author: Anton Blanchard <anton@samba.org>
Date:   Sun Sep 25 17:16:53 2016 +1000

    powerpc/vdso64: Use double word compare on pointers
    
    commit 5045ea37377ce8cca6890d32b127ad6770e6dce5 upstream.
    
    __kernel_get_syscall_map() and __kernel_clock_getres() use cmpli to
    check if the passed in pointer is non zero. cmpli maps to a 32 bit
    compare on binutils, so we ignore the top 32 bits.
    
    A simple test case can be created by passing in a bogus pointer with
    the bottom 32 bits clear. Using a clk_id that is handled by the VDSO,
    then one that is handled by the kernel shows the problem:
    
      printf("%d\n", clock_getres(CLOCK_REALTIME, (void *)0x100000000));
      printf("%d\n", clock_getres(CLOCK_BOOTTIME, (void *)0x100000000));
    
    And we get:
    
      0
      -1
    
    The bigger issue is if we pass a valid pointer with the bottom 32 bits
    clear, in this case we will return success but won't write any data
    to the pointer.
    
    I stumbled across this issue because the LLVM integrated assembler
    doesn't accept cmpli with 3 arguments. Fix this by converting them to
    cmpldi.
    
    Fixes: a7f290dad32e ("[PATCH] powerpc: Merge vdso's and add vdso support to 32 bits kernel")
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 2210e6dc67d9dfc1b9811b8f0a82548a208e96d6
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Aug 31 15:17:49 2016 -0700

    dm: mark request_queue dead before destroying the DM device
    
    commit 3b785fbcf81c3533772c52b717f77293099498d3 upstream.
    
    This avoids that new requests are queued while __dm_destroy() is in
    progress.
    
    [js] use md->queue instead of non-present helper
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 74bf47cac98b4282480ae6ed99e797d07b9c2424
Author: Andrew Bresticker <abrestic@chromium.org>
Date:   Mon Feb 15 09:19:49 2016 +0100

    pstore/ram: Use memcpy_fromio() to save old buffer
    
    commit d771fdf94180de2bd811ac90cba75f0f346abf8d upstream.
    
    The ramoops buffer may be mapped as either I/O memory or uncached
    memory.  On ARM64, this results in a device-type (strongly-ordered)
    mapping.  Since unnaligned accesses to device-type memory will
    generate an alignment fault (regardless of whether or not strict
    alignment checking is enabled), it is not safe to use memcpy().
    memcpy_fromio() is guaranteed to only use aligned accesses, so use
    that instead.
    
    Signed-off-by: Andrew Bresticker <abrestic@chromium.org>
    Signed-off-by: Enric Balletbo Serra <enric.balletbo@collabora.com>
    Reviewed-by: Puneet Kumar <puneetster@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit a883eadab5eac556a56065f088931bc3e6c0d052
Author: Furquan Shaikh <furquan@google.com>
Date:   Mon Feb 15 09:19:48 2016 +0100

    pstore/ram: Use memcpy_toio instead of memcpy
    
    commit 7e75678d23167c2527e655658a8ef36a36c8b4d9 upstream.
    
    persistent_ram_update uses vmap / iomap based on whether the buffer is in
    memory region or reserved region. However, both map it as non-cacheable
    memory. For armv8 specifically, non-cacheable mapping requests use a
    memory type that has to be accessed aligned to the request size. memcpy()
    doesn't guarantee that.
    
    Signed-off-by: Furquan Shaikh <furquan@google.com>
    Signed-off-by: Enric Balletbo Serra <enric.balletbo@collabora.com>
    Reviewed-by: Aaron Durbin <adurbin@chromium.org>
    Reviewed-by: Olof Johansson <olofj@chromium.org>
    Tested-by: Furquan Shaikh <furquan@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 16ba28089361691b9d4a3ee37dbc974e0587bd7e
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Sep 8 13:48:06 2016 +0200

    pstore/core: drop cmpxchg based updates
    
    commit d5a9bf0b38d2ac85c9a693c7fb851f74fd2a2494 upstream.
    
    I have here a FPGA behind PCIe which exports SRAM which I use for
    pstore. Now it seems that the FPGA no longer supports cmpxchg based
    updates and writes back 0xff…ff and returns the same.  This leads to
    crash during crash rendering pstore useless.
    Since I doubt that there is much benefit from using cmpxchg() here, I am
    dropping this atomic access and use the spinlock based version.
    
    Cc: Anton Vorontsov <anton@enomsg.org>
    Cc: Colin Cross <ccross@android.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Rabin Vincent <rabinv@axis.com>
    Tested-by: Rabin Vincent <rabinv@axis.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    [kees: remove "_locked" suffix since it's the only option now]
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit acc2317b2df1c92cf27b2ce194e8004d59debca6
Author: Daniel Glöckner <dg@emlix.com>
Date:   Tue Aug 30 14:17:30 2016 +0200

    mmc: block: don't use CMD23 with very old MMC cards
    
    commit 0ed50abb2d8fc81570b53af25621dad560cd49b3 upstream.
    
    CMD23 aka SET_BLOCK_COUNT was introduced with MMC v3.1.
    Older versions of the specification allowed to terminate
    multi-block transfers only with CMD12.
    
    The patch fixes the following problem:
    
      mmc0: new MMC card at address 0001
      mmcblk0: mmc0:0001 SDMB-16 15.3 MiB
      mmcblk0: timed out sending SET_BLOCK_COUNT command, card status 0x400900
      ...
      blk_update_request: I/O error, dev mmcblk0, sector 0
      Buffer I/O error on dev mmcblk0, logical block 0, async page read
       mmcblk0: unable to read partition table
    
    Signed-off-by: Daniel Glöckner <dg@emlix.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 402ae64c4ccbf0adb4d2044520e2fa9eb047e88b
Author: Jan Remmet <j.remmet@phytec.de>
Date:   Fri Sep 23 10:52:00 2016 +0200

    regulator: tps65910: Work around silicon erratum SWCZ010
    
    commit 8f9165c981fed187bb483de84caf9adf835aefda upstream.
    
    http://www.ti.com/lit/pdf/SWCZ010:
      DCDC o/p voltage can go higher than programmed value
    
    Impact:
    VDDI, VDD2, and VIO output programmed voltage level can go higher than
    expected or crash, when coming out of PFM to PWM mode or using DVFS.
    
    Description:
    When DCDC CLK SYNC bits are 11/01:
    * VIO 3-MHz oscillator is the source clock of the digital core and input
      clock of VDD1 and VDD2
    * Turn-on of VDD1 and VDD2 HSD PFETis synchronized or at a constant
      phase shift
    * Current pulled though VCC1+VCC2 is Iload(VDD1) + Iload(VDD2)
    * The 3 HSD PFET will be turned-on at the same time, causing the highest
      possible switching noise on the application. This noise level depends
      on the layout, the VBAT level, and the load current. The noise level
      increases with improper layout.
    
    When DCDC CLK SYNC bits are 00:
    * VIO 3-MHz oscillator is the source clock of digital core
    * VDD1 and VDD2 are running on their own 3-MHz oscillator
    * Current pulled though VCC1+VCC2 average of Iload(VDD1) + Iload(VDD2)
    * The switching noise of the 3 SMPS will be randomly spread over time,
      causing lower overall switching noise.
    
    Workaround:
    Set DCDCCTRL_REG[1:0]= 00.
    
    Signed-off-by: Jan Remmet <j.remmet@phytec.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 11db4e7901836c9ad0e4b2a014b9a93279494af3
Author: Liu Gang <Gang.Liu@nxp.com>
Date:   Fri Oct 21 15:31:28 2016 +0800

    gpio: mpc8xxx: Correct irq handler function
    
    commit d71cf15b865bdd45925f7b094d169aaabd705145 upstream.
    
    From the beginning of the gpio-mpc8xxx.c, the "handle_level_irq"
    has being used to handle GPIO interrupts in the PowerPC/Layerscape
    platforms. But actually, almost all PowerPC/Layerscape platforms
    assert an interrupt request upon either a high-to-low change or
    any change on the state of the signal.
    
    So the "handle_level_irq" is not reasonable for PowerPC/Layerscape
    GPIO interrupt, it should be "handle_edge_irq". Otherwise the system
    may lost some interrupts from the PIN's state changes.
    
    Signed-off-by: Liu Gang <Gang.Liu@nxp.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit dbeba38c64b4918d8c33ca2fd2af6001b4f9b4d1
Author: Joe Perches <joe@perches.com>
Date:   Wed Apr 15 16:17:54 2015 -0700

    ipc: remove use of seq_printf return value
    
    commit 7f032d6ef6154868a2a5d5f6b2c3f8587292196c upstream.
    
    The seq_printf return value, because it's frequently misused,
    will eventually be converted to void.
    
    See: commit 1f33c41c03da ("seq_file: Rename seq_overflow() to
         seq_has_overflowed() and make public")
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit e3286c43ba1252aac99b9a9a7c0bcb2e752cf47c
Author: Liu ShuoX <shuox.liu@intel.com>
Date:   Wed Mar 12 21:24:44 2014 +0800

    pstore: Fix buffer overflow while write offset equal to buffer size
    
    commit 017321cf390045dd4c4afc4a232995ea50bcf66d upstream.
    
    In case new offset is equal to prz->buffer_size, it won't wrap at this
    time and will return old(overflow) value next time.
    
    Signed-off-by: Liu ShuoX <shuox.liu@intel.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 03a140b717bbbe3c08eb87cb9ac6d40bdd2f36e4
Author: Glauber Costa <glauber@scylladb.com>
Date:   Thu Sep 22 20:59:59 2016 -0400

    cfq: fix starvation of asynchronous writes
    
    commit 3932a86b4b9d1f0b049d64d4591ce58ad18b44ec upstream.
    
    While debugging timeouts happening in my application workload (ScyllaDB), I have
    observed calls to open() taking a long time, ranging everywhere from 2 seconds -
    the first ones that are enough to time out my application - to more than 30
    seconds.
    
    The problem seems to happen because XFS may block on pending metadata updates
    under certain circumnstances, and that's confirmed with the following backtrace
    taken by the offcputime tool (iovisor/bcc):
    
        ffffffffb90c57b1 finish_task_switch
        ffffffffb97dffb5 schedule
        ffffffffb97e310c schedule_timeout
        ffffffffb97e1f12 __down
        ffffffffb90ea821 down
        ffffffffc046a9dc xfs_buf_lock
        ffffffffc046abfb _xfs_buf_find
        ffffffffc046ae4a xfs_buf_get_map
        ffffffffc046babd xfs_buf_read_map
        ffffffffc0499931 xfs_trans_read_buf_map
        ffffffffc044a561 xfs_da_read_buf
        ffffffffc0451390 xfs_dir3_leaf_read.constprop.16
        ffffffffc0452b90 xfs_dir2_leaf_lookup_int
        ffffffffc0452e0f xfs_dir2_leaf_lookup
        ffffffffc044d9d3 xfs_dir_lookup
        ffffffffc047d1d9 xfs_lookup
        ffffffffc0479e53 xfs_vn_lookup
        ffffffffb925347a path_openat
        ffffffffb9254a71 do_filp_open
        ffffffffb9242a94 do_sys_open
        ffffffffb9242b9e sys_open
        ffffffffb97e42b2 entry_SYSCALL_64_fastpath
        00007fb0698162ed [unknown]
    
    Inspecting my run with blktrace, I can see that the xfsaild kthread exhibit very
    high "Dispatch wait" times, on the dozens of seconds range and consistent with
    the open() times I have saw in that run.
    
    Still from the blktrace output, we can after searching a bit, identify the
    request that wasn't dispatched:
    
      8,0   11      152    81.092472813   804  A  WM 141698288 + 8 <- (8,1) 141696240
      8,0   11      153    81.092472889   804  Q  WM 141698288 + 8 [xfsaild/sda1]
      8,0   11      154    81.092473207   804  G  WM 141698288 + 8 [xfsaild/sda1]
      8,0   11      206    81.092496118   804  I  WM 141698288 + 8 (   22911) [xfsaild/sda1]
      <==== 'I' means Inserted (into the IO scheduler) ===================================>
      8,0    0   289372    96.718761435     0  D  WM 141698288 + 8 (15626265317) [swapper/0]
      <==== Only 15s later the CFQ scheduler dispatches the request ======================>
    
    As we can see above, in this particular example CFQ took 15 seconds to dispatch
    this request. Going back to the full trace, we can see that the xfsaild queue
    had plenty of opportunity to run, and it was selected as the active queue many
    times. It would just always be preempted by something else (example):
    
      8,0    1        0    81.117912979     0  m   N cfq1618SN / insert_request
      8,0    1        0    81.117913419     0  m   N cfq1618SN / add_to_rr
      8,0    1        0    81.117914044     0  m   N cfq1618SN / preempt
      8,0    1        0    81.117914398     0  m   N cfq767A  / slice expired t=1
      8,0    1        0    81.117914755     0  m   N cfq767A  / resid=40
      8,0    1        0    81.117915340     0  m   N / served: vt=1948520448 min_vt=1948520448
      8,0    1        0    81.117915858     0  m   N cfq767A  / sl_used=1 disp=0 charge=0 iops=1 sect=0
    
    where cfq767 is the xfsaild queue and cfq1618 corresponds to one of the ScyllaDB
    IO dispatchers.
    
    The requests preempting the xfsaild queue are synchronous requests. That's a
    characteristic of ScyllaDB workloads, as we only ever issue O_DIRECT requests.
    While it can be argued that preempting ASYNC requests in favor of SYNC is part
    of the CFQ logic, I don't believe that doing so for 15+ seconds is anyone's
    goal.
    
    Moreover, unless I am misunderstanding something, that breaks the expectation
    set by the "fifo_expire_async" tunable, which in my system is set to the
    default.
    
    Looking at the code, it seems to me that the issue is that after we make
    an async queue active, there is no guarantee that it will execute any request.
    
    When the queue itself tests if it cfq_may_dispatch() it can bail if it sees SYNC
    requests in flight. An incoming request from another queue can also preempt it
    in such situation before we have the chance to execute anything (as seen in the
    trace above).
    
    This patch sets the must_dispatch flag if we notice that we have requests
    that are already fifo_expired. This flag is always cleared after
    cfq_dispatch_request() returns from cfq_dispatch_requests(), so it won't pin
    the queue for subsequent requests (unless they are themselves expired)
    
    Care is taken during preempt to still allow rt requests to preempt us
    regardless.
    
    Testing my workload with this patch applied produces much better results.
    From the application side I see no timeouts, and the open() latency histogram
    generated by systemtap looks much better, with the worst outlier at 131ms:
    
    Latency histogram of xfs_buf_lock acquisition (microseconds):
     value |-------------------------------------------------- count
         0 |                                                     11
         1 |@@@@                                                161
         2 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  1966
         4 |@                                                    54
         8 |                                                     36
        16 |                                                      7
        32 |                                                      0
        64 |                                                      0
           ~
      1024 |                                                      0
      2048 |                                                      0
      4096 |                                                      1
      8192 |                                                      1
     16384 |                                                      2
     32768 |                                                      0
     65536 |                                                      0
    131072 |                                                      1
    262144 |                                                      0
    524288 |                                                      0
    
    Signed-off-by: Glauber Costa <glauber@scylladb.com>
    CC: Jens Axboe <axboe@kernel.dk>
    CC: linux-block@vger.kernel.org
    CC: linux-kernel@vger.kernel.org
    Signed-off-by: Glauber Costa <glauber@scylladb.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 474832ec6a35913b968ef162724f562a794a2959
Author: Ross Zwisler <zwisler@kernel.org>
Date:   Thu Sep 22 11:49:38 2016 -0400

    ext4: allow DAX writeback for hole punch
    
    commit cca32b7eeb4ea24fa6596650e06279ad9130af98 upstream.
    
    Currently when doing a DAX hole punch with ext4 we fail to do a writeback.
    This is because the logic around filemap_write_and_wait_range() in
    ext4_punch_hole() only looks for dirty page cache pages in the radix tree,
    not for dirty DAX exceptional entries.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit f0e1bad85179039f78bc04f05ee0d3d3e62b939e
Author: Daeho Jeong <daeho.jeong@samsung.com>
Date:   Mon Sep 5 22:56:10 2016 -0400

    ext4: reinforce check of i_dtime when clearing high fields of uid and gid
    
    commit 93e3b4e6631d2a74a8cf7429138096862ff9f452 upstream.
    
    Now, ext4_do_update_inode() clears high 16-bit fields of uid/gid
    of deleted and evicted inode to fix up interoperability with old
    kernels. However, it checks only i_dtime of an inode to determine
    whether the inode was deleted and evicted, and this is very risky,
    because i_dtime can be used for the pointer maintaining orphan inode
    list, too. We need to further check whether the i_dtime is being
    used for the orphan inode list even if the i_dtime is not NULL.
    
    We found that high 16-bit fields of uid/gid of inode are unintentionally
    and permanently cleared when the inode truncation is just triggered,
    but not finished, and the inode metadata, whose high uid/gid bits are
    cleared, is written on disk, and the sudden power-off follows that
    in order.
    
    Signed-off-by: Daeho Jeong <daeho.jeong@samsung.com>
    Signed-off-by: Hobin Woo <hobin.woo@samsung.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 393328a0b885f3e7b3ba06f14ce5adad94638250
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Mon Sep 19 08:59:19 2016 -0500

    scsi: ibmvfc: Fix I/O hang when port is not mapped
    
    commit 07d0e9a847401ffd2f09bd450d41644cd090e81d upstream.
    
    If a VFC port gets unmapped in the VIOS, it may not respond with a CRQ
    init complete following H_REG_CRQ. If this occurs, we can end up having
    called scsi_block_requests and not a resulting unblock until the init
    complete happens, which may never occur, and we end up hanging I/O
    requests.  This patch ensures the host action stay set to
    IBMVFC_HOST_ACTION_TGT_DEL so we move all rports into devloss state and
    unblock unless we receive an init complete.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 643a9a21c6ba06b01fb1b33a7f6bbc4bfaafcd07
Author: Mike Galbraith <efault@gmx.de>
Date:   Mon Aug 13 15:21:23 2012 +0200

    reiserfs: Unlock superblock before calling reiserfs_quota_on_mount()
    
    commit 420902c9d086848a7548c83e0a49021514bd71b7 upstream.
    
    If we hold the superblock lock while calling reiserfs_quota_on_mount(), we can
    deadlock our own worker - mount blocks kworker/3:2, sleeps forever more.
    
    crash> ps|grep UN
        715      2   3  ffff880220734d30  UN   0.0       0      0  [kworker/3:2]
       9369   9341   2  ffff88021ffb7560  UN   1.3  493404 123184  Xorg
       9665   9664   3  ffff880225b92ab0  UN   0.0   47368    812  udisks-daemon
      10635  10403   3  ffff880222f22c70  UN   0.0   14904    936  mount
    crash> bt ffff880220734d30
    PID: 715    TASK: ffff880220734d30  CPU: 3   COMMAND: "kworker/3:2"
     #0 [ffff8802244c3c20] schedule at ffffffff8144584b
     #1 [ffff8802244c3cc8] __rt_mutex_slowlock at ffffffff814472b3
     #2 [ffff8802244c3d28] rt_mutex_slowlock at ffffffff814473f5
     #3 [ffff8802244c3dc8] reiserfs_write_lock at ffffffffa05f28fd [reiserfs]
     #4 [ffff8802244c3de8] flush_async_commits at ffffffffa05ec91d [reiserfs]
     #5 [ffff8802244c3e08] process_one_work at ffffffff81073726
     #6 [ffff8802244c3e68] worker_thread at ffffffff81073eba
     #7 [ffff8802244c3ec8] kthread at ffffffff810782e0
     #8 [ffff8802244c3f48] kernel_thread_helper at ffffffff81450064
    crash> rd ffff8802244c3cc8 10
    ffff8802244c3cc8:  ffffffff814472b3 ffff880222f23250   .rD.....P2."....
    ffff8802244c3cd8:  0000000000000000 0000000000000286   ................
    ffff8802244c3ce8:  ffff8802244c3d30 ffff880220734d80   0=L$.....Ms ....
    ffff8802244c3cf8:  ffff880222e8f628 0000000000000000   (.."............
    ffff8802244c3d08:  0000000000000000 0000000000000002   ................
    crash> struct rt_mutex ffff880222e8f628
    struct rt_mutex {
      wait_lock = {
        raw_lock = {
          slock = 65537
        }
      },
      wait_list = {
        node_list = {
          next = 0xffff8802244c3d48,
          prev = 0xffff8802244c3d48
        }
      },
      owner = 0xffff880222f22c71,
      save_state = 0
    }
    crash> bt 0xffff880222f22c70
    PID: 10635  TASK: ffff880222f22c70  CPU: 3   COMMAND: "mount"
     #0 [ffff8802216a9868] schedule at ffffffff8144584b
     #1 [ffff8802216a9910] schedule_timeout at ffffffff81446865
     #2 [ffff8802216a99a0] wait_for_common at ffffffff81445f74
     #3 [ffff8802216a9a30] flush_work at ffffffff810712d3
     #4 [ffff8802216a9ab0] schedule_on_each_cpu at ffffffff81074463
     #5 [ffff8802216a9ae0] invalidate_bdev at ffffffff81178aba
     #6 [ffff8802216a9af0] vfs_load_quota_inode at ffffffff811a3632
     #7 [ffff8802216a9b50] dquot_quota_on_mount at ffffffff811a375c
     #8 [ffff8802216a9b80] finish_unfinished at ffffffffa05dd8b0 [reiserfs]
     #9 [ffff8802216a9cc0] reiserfs_fill_super at ffffffffa05de825 [reiserfs]
        RIP: 00007f7b9303997a  RSP: 00007ffff443c7a8  RFLAGS: 00010202
        RAX: 00000000000000a5  RBX: ffffffff8144ef12  RCX: 00007f7b932e9ee0
        RDX: 00007f7b93d9a400  RSI: 00007f7b93d9a3e0  RDI: 00007f7b93d9a3c0
        RBP: 00007f7b93d9a2c0   R8: 00007f7b93d9a550   R9: 0000000000000001
        R10: ffffffffc0ed040e  R11: 0000000000000202  R12: 000000000000040e
        R13: 0000000000000000  R14: 00000000c0ed040e  R15: 00007ffff443ca20
        ORIG_RAX: 00000000000000a5  CS: 0033  SS: 002b
    
    Signed-off-by: Mike Galbraith <efault@gmx.de>
    Acked-by: Frederic Weisbecker <fweisbec@gmail.com>
    Acked-by: Mike Galbraith <mgalbraith@suse.de>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 0f3caac741164dcff670ae0f4d1cfcb0a7026a1c
Author: Guilherme G Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Mon Oct 3 00:31:12 2016 -0700

    i40e: avoid NULL pointer dereference and recursive errors on early PCI error
    
    commit edfc23ee3e0ebbb6713d7574ab1b00abff178f6c upstream.
    
    Although rare, it's possible to hit PCI error early on device
    probe, meaning possibly some structs are not entirely initialized,
    and some might even be completely uninitialized, leading to NULL
    pointer dereference.
    
    The i40e driver currently presents a "bad" behavior if device hits
    such early PCI error: firstly, the struct i40e_pf might not be
    attached to pci_dev yet, leading to a NULL pointer dereference on
    access to pf->state.
    
    Even checking if the struct is NULL and avoiding the access in that
    case isn't enough, since the driver cannot recover from PCI error
    that early; in our experiments we saw multiple failures on kernel
    log, like:
    
      [549.664] i40e 0007:01:00.1: Initial pf_reset failed: -15
      [549.664] i40e: probe of 0007:01:00.1 failed with error -15
      [...]
      [871.644] i40e 0007:01:00.1: The driver for the device stopped because the
      device firmware failed to init. Try updating your NVM image.
      [871.644] i40e: probe of 0007:01:00.1 failed with error -32
      [...]
      [872.516] i40e 0007:01:00.0: ARQ: Unknown event 0x0000 ignored
    
    Between the first probe failure (error -15) and the second (error -32)
    another PCI error happened due to the first bad probe. Also, driver
    started to flood console with those ARQ event messages.
    
    This patch will prevent these issues by allowing error recovery
    mechanism to remove the failed device from the system instead of
    trying to recover from early PCI errors during device probe.
    
    Signed-off-by: Guilherme G Piccoli <gpiccoli@linux.vnet.ibm.com>
    Acked-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
