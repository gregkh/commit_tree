commit 50961e4888a1d53544ac4ea6f185fc27ee4fee4f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Nov 4 14:52:51 2018 +0100

    Linux 4.14.79

commit fe54a7c4f0d1f313ea341ebd92d1f3ff9eb65007
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Mon May 14 15:38:10 2018 -0700

    net/mlx5: Fix build break when CONFIG_SMP=n
    
    [ Upstream commit e3ca34880652250f524022ad89e516f8ba9a805b ]
    
    Avoid using the kernel's irq_descriptor and return IRQ vector affinity
    directly from the driver.
    
    This fixes the following build break when CONFIG_SMP=n
    
    include/linux/mlx5/driver.h: In function ‘mlx5_get_vector_affinity_hint’:
    include/linux/mlx5/driver.h:1299:13: error:
            ‘struct irq_desc’ has no member named ‘affinity_hint’
    
    Fixes: 6082d9c9c94a ("net/mlx5: Fix mlx5_get_vector_affinity function")
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    CC: Randy Dunlap <rdunlap@infradead.org>
    CC: Guenter Roeck <linux@roeck-us.net>
    CC: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Israel Rukshin <israelr@mellanox.com>
    Reported-by: kbuild test robot <lkp@intel.com>
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0ee9bd40d74001cd98de6bac252dd728130dbaa
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Oct 10 22:00:58 2018 +0200

    net/sched: cls_api: add missing validation of netlink attributes
    
    [ Upstream commit e331473fee3d500bb0d2582a1fe598df3326d8cd ]
    
    Similarly to what has been done in 8b4c3cdd9dd8 ("net: sched: Add policy
    validation for tc attributes"), fix classifier code to add validation of
    TCA_CHAIN and TCA_KIND netlink attributes.
    
    tested with:
     # ./tdc.py -c filter
    
    v2: Let sch_api and cls_api share nla_policy they have in common, thanks
        to David Ahern.
    v3: Avoid EXPORT_SYMBOL(), as validation of those attributes is not done
        by TC modules, thanks to Cong Wang.
        While at it, restore the 'Delete / get qdisc' comment to its orginal
        position, just above tc_get_qdisc() function prototype.
    
    Fixes: 5bc1701881e39 ("net: sched: introduce multichain support for filters")
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8c2df18eedfcb504ed2f5d8ab24e87da7fd3959
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Oct 11 15:06:33 2018 -0700

    net: bcmgenet: Poll internal PHY for GENETv5
    
    [ Upstream commit 64bd9c8135751b561f27edaaffe93d07093f81af ]
    
    On GENETv5, there is a hardware issue which prevents the GENET hardware
    from generating a link UP interrupt when the link is operating at
    10Mbits/sec. Since we do not have any way to configure the link
    detection logic, fallback to polling in that case.
    
    Fixes: 421380856d9c ("net: bcmgenet: add support for the GENETv5 hardware")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71944eb54288509c7c19ac54b485ac774c8253fe
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed Oct 17 22:34:34 2018 +0300

    net: ipmr: fix unresolved entry dumps
    
    [ Upstream commit eddf016b910486d2123675a6b5fd7d64f77cdca8 ]
    
    If the skb space ends in an unresolved entry while dumping we'll miss
    some unresolved entries. The reason is due to zeroing the entry counter
    between dumping resolved and unresolved mfc entries. We should just
    keep counting until the whole table is dumped and zero when we move to
    the next as we have a separate table counter.
    
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Fixes: 8fb472c09b9d ("ipmr: improve hash scalability")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ca72d6336df434171218f047dbcaf86d65253fe
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Mon Oct 29 20:36:43 2018 +0000

    rtnetlink: Disallow FDB configuration for non-Ethernet device
    
    [ Upstream commit da71577545a52be3e0e9225a946e5fd79cfab015 ]
    
    When an FDB entry is configured, the address is validated to have the
    length of an Ethernet address, but the device for which the address is
    configured can be of any type.
    
    The above can result in the use of uninitialized memory when the address
    is later compared against existing addresses since 'dev->addr_len' is
    used and it may be greater than ETH_ALEN, as with ip6tnl devices.
    
    Fix this by making sure that FDB entries are only configured for
    Ethernet devices.
    
    BUG: KMSAN: uninit-value in memcmp+0x11d/0x180 lib/string.c:863
    CPU: 1 PID: 4318 Comm: syz-executor998 Not tainted 4.19.0-rc3+ #49
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:77 [inline]
      dump_stack+0x14b/0x190 lib/dump_stack.c:113
      kmsan_report+0x183/0x2b0 mm/kmsan/kmsan.c:956
      __msan_warning+0x70/0xc0 mm/kmsan/kmsan_instr.c:645
      memcmp+0x11d/0x180 lib/string.c:863
      dev_uc_add_excl+0x165/0x7b0 net/core/dev_addr_lists.c:464
      ndo_dflt_fdb_add net/core/rtnetlink.c:3463 [inline]
      rtnl_fdb_add+0x1081/0x1270 net/core/rtnetlink.c:3558
      rtnetlink_rcv_msg+0xa0b/0x1530 net/core/rtnetlink.c:4715
      netlink_rcv_skb+0x36e/0x5f0 net/netlink/af_netlink.c:2454
      rtnetlink_rcv+0x50/0x60 net/core/rtnetlink.c:4733
      netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]
      netlink_unicast+0x1638/0x1720 net/netlink/af_netlink.c:1343
      netlink_sendmsg+0x1205/0x1290 net/netlink/af_netlink.c:1908
      sock_sendmsg_nosec net/socket.c:621 [inline]
      sock_sendmsg net/socket.c:631 [inline]
      ___sys_sendmsg+0xe70/0x1290 net/socket.c:2114
      __sys_sendmsg net/socket.c:2152 [inline]
      __do_sys_sendmsg net/socket.c:2161 [inline]
      __se_sys_sendmsg+0x2a3/0x3d0 net/socket.c:2159
      __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2159
      do_syscall_64+0xb8/0x100 arch/x86/entry/common.c:291
      entry_SYSCALL_64_after_hwframe+0x63/0xe7
    RIP: 0033:0x440ee9
    Code: e8 cc ab 02 00 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7
    48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff
    ff 0f 83 bb 0a fc ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007fff6a93b518 EFLAGS: 00000213 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 0000000000440ee9
    RDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000003
    RBP: 0000000000000000 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 00000000004002c8 R11: 0000000000000213 R12: 000000000000b4b0
    R13: 0000000000401ec0 R14: 0000000000000000 R15: 0000000000000000
    
    Uninit was created at:
      kmsan_save_stack_with_flags mm/kmsan/kmsan.c:256 [inline]
      kmsan_internal_poison_shadow+0xb8/0x1b0 mm/kmsan/kmsan.c:181
      kmsan_kmalloc+0x98/0x100 mm/kmsan/kmsan_hooks.c:91
      kmsan_slab_alloc+0x10/0x20 mm/kmsan/kmsan_hooks.c:100
      slab_post_alloc_hook mm/slab.h:446 [inline]
      slab_alloc_node mm/slub.c:2718 [inline]
      __kmalloc_node_track_caller+0x9e7/0x1160 mm/slub.c:4351
      __kmalloc_reserve net/core/skbuff.c:138 [inline]
      __alloc_skb+0x2f5/0x9e0 net/core/skbuff.c:206
      alloc_skb include/linux/skbuff.h:996 [inline]
      netlink_alloc_large_skb net/netlink/af_netlink.c:1189 [inline]
      netlink_sendmsg+0xb49/0x1290 net/netlink/af_netlink.c:1883
      sock_sendmsg_nosec net/socket.c:621 [inline]
      sock_sendmsg net/socket.c:631 [inline]
      ___sys_sendmsg+0xe70/0x1290 net/socket.c:2114
      __sys_sendmsg net/socket.c:2152 [inline]
      __do_sys_sendmsg net/socket.c:2161 [inline]
      __se_sys_sendmsg+0x2a3/0x3d0 net/socket.c:2159
      __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2159
      do_syscall_64+0xb8/0x100 arch/x86/entry/common.c:291
      entry_SYSCALL_64_after_hwframe+0x63/0xe7
    
    v2:
    * Make error message more specific (David)
    
    Fixes: 090096bf3db1 ("net: generic fdb support for drivers without ndo_fdb_<op>")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-and-tested-by: syzbot+3a288d5f5530b901310e@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+d53ab4e92a1db04110ff@syzkaller.appspotmail.com
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: David Ahern <dsahern@gmail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac65fd7094ac5ec86d167801f2101d02bbe1da6e
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 30 00:57:25 2018 -0700

    net/mlx5e: fix csum adjustments caused by RXFCS
    
    [ Upstream commit d48051c5b8376038c2b287c3b1bd55b8d391d567 ]
    
    As shown by Dmitris, we need to use csum_block_add() instead of csum_add()
    when adding the FCS contribution to skb csum.
    
    Before 4.18 (more exactly commit 88078d98d1bb "net: pskb_trim_rcsum()
    and CHECKSUM_COMPLETE are friends"), the whole skb csum was thrown away,
    so RXFCS changes were ignored.
    
    Then before commit d55bef5059dd ("net: fix pskb_trim_rcsum_slow() with
    odd trim offset") both mlx5 and pskb_trim_rcsum_slow() bugs were canceling
    each other.
    
    Now we fixed pskb_trim_rcsum_slow() we need to fix mlx5.
    
    Note that this patch also rewrites mlx5e_get_fcs() to :
    
    - Use skb_header_pointer() instead of reinventing it.
    - Use __get_unaligned_cpu32() to avoid possible non aligned accesses
      as Dmitris pointed out.
    
    Fixes: 902a545904c7 ("net/mlx5e: When RXFCS is set, add FCS data into checksum calculation")
    Reported-by: Paweł Staszewski <pstaszewski@itcare.pl>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Eran Ben Elisha <eranbe@mellanox.com>
    Cc: Saeed Mahameed <saeedm@mellanox.com>
    Cc: Dimitris Michailidis <dmichail@google.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: Paweł Staszewski <pstaszewski@itcare.pl>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Tested-By: Maria Pasechnik <mariap@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 855cb69f4e6d3068ad18738f0cd6ff3cd099ccfc
Author: Dimitris Michailidis <dmichail@google.com>
Date:   Fri Oct 19 17:07:13 2018 -0700

    net: fix pskb_trim_rcsum_slow() with odd trim offset
    
    [ Upstream commit d55bef5059dd057bd077155375c581b49d25be7e ]
    
    We've been getting checksum errors involving small UDP packets, usually
    59B packets with 1 extra non-zero padding byte. netdev_rx_csum_fault()
    has been complaining that HW is providing bad checksums. Turns out the
    problem is in pskb_trim_rcsum_slow(), introduced in commit 88078d98d1bb
    ("net: pskb_trim_rcsum() and CHECKSUM_COMPLETE are friends").
    
    The source of the problem is that when the bytes we are trimming start
    at an odd address, as in the case of the 1 padding byte above,
    skb_checksum() returns a byte-swapped value. We cannot just combine this
    with skb->csum using csum_sub(). We need to use csum_block_sub() here
    that takes into account the parity of the start address and handles the
    swapping.
    
    Matches existing code in __skb_postpull_rcsum() and esp_remove_trailer().
    
    Fixes: 88078d98d1bb ("net: pskb_trim_rcsum() and CHECKSUM_COMPLETE are friends")
    Signed-off-by: Dimitris Michailidis <dmichail@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 623670a9f20755b389f958b85bcb5b1eb17cdaed
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Nov 1 12:02:37 2018 -0700

    net: drop skb on failure in ip_check_defrag()
    
    [ Upstream commit 7de414a9dd91426318df7b63da024b2b07e53df5 ]
    
    Most callers of pskb_trim_rcsum() simply drop the skb when
    it fails, however, ip_check_defrag() still continues to pass
    the skb up to stack. This is suspicious.
    
    In ip_check_defrag(), after we learn the skb is an IP fragment,
    passing the skb to callers makes no sense, because callers expect
    fragments are defrag'ed on success. So, dropping the skb when we
    can't defrag it is reasonable.
    
    Note, prior to commit 88078d98d1bb, this is not a big problem as
    checksum will be fixed up anyway. After it, the checksum is not
    correct on failure.
    
    Found this during code review.
    
    Fixes: 88078d98d1bb ("net: pskb_trim_rcsum() and CHECKSUM_COMPLETE are friends")
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd090ba395fb60c71abb0c35bd026c4dcf5a4a1d
Author: Phil Sutter <phil@nwl.cc>
Date:   Thu Oct 18 10:34:26 2018 +0200

    net: sched: Fix for duplicate class dump
    
    [ Upstream commit 3c53ed8fef6881a864f0ee8240ed2793ef73ad0d ]
    
    When dumping classes by parent, kernel would return classes twice:
    
    | # tc qdisc add dev lo root prio
    | # tc class show dev lo
    | class prio 8001:1 parent 8001:
    | class prio 8001:2 parent 8001:
    | class prio 8001:3 parent 8001:
    | # tc class show dev lo parent 8001:
    | class prio 8001:1 parent 8001:
    | class prio 8001:2 parent 8001:
    | class prio 8001:3 parent 8001:
    | class prio 8001:1 parent 8001:
    | class prio 8001:2 parent 8001:
    | class prio 8001:3 parent 8001:
    
    This comes from qdisc_match_from_root() potentially returning the root
    qdisc itself if its handle matched. Though in that case, root's classes
    were already dumped a few lines above.
    
    Fixes: cb395b2010879 ("net: sched: optimize class dumps")
    Signed-off-by: Phil Sutter <phil@nwl.cc>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc478700368780c5460391282a098d5ba57464db
Author: Huy Nguyen <huyn@mellanox.com>
Date:   Tue Sep 11 14:58:22 2018 -0500

    net/mlx5: Take only bit 24-26 of wqe.pftype_wq for page fault type
    
    [ Upstream commit a48bc513159d4767f9988f0d857b2b0c38a4d614 ]
    
    The HW spec defines only bits 24-26 of pftype_wq as the page fault type,
    use the required mask to ensure that.
    
    Fixes: d9aaed838765 ("{net,IB}/mlx5: Refactor page fault handling")
    Signed-off-by: Huy Nguyen <huyn@mellanox.com>
    Signed-off-by: Eli Cohen <eli@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d50b74a33d0b201a4bef20461b585317cbf3eb0
Author: Jaime Caamaño Ruiz <jcaamano@suse.com>
Date:   Wed Oct 31 18:52:03 2018 +0100

    openvswitch: Fix push/pop ethernet validation
    
    [ Upstream commit 46ebe2834ba5b541f28ee72e556a3fed42c47570 ]
    
    When there are both pop and push ethernet header actions among the
    actions to be applied to a packet, an unexpected EINVAL (Invalid
    argument) error is obtained. This is due to mac_proto not being reset
    correctly when those actions are validated.
    
    Reported-at:
    https://mail.openvswitch.org/pipermail/ovs-discuss/2018-October/047554.html
    Fixes: 91820da6ae85 ("openvswitch: add Ethernet push and pop actions")
    Signed-off-by: Jaime Caamaño Ruiz <jcaamano@suse.com>
    Tested-by: Greg Rose <gvrose8192@gmail.com>
    Reviewed-by: Greg Rose <gvrose8192@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f288424ea85ef806c0f35adc9fd904ac636ffe81
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Thu Oct 18 21:25:07 2018 +0200

    ip6_tunnel: Fix encapsulation layout
    
    [ Upstream commit d4d576f5ab7edcb757bb33e6a5600666a0b1232d ]
    
    Commit 058214a4d1df ("ip6_tun: Add infrastructure for doing
    encapsulation") added the ip6_tnl_encap() call in ip6_tnl_xmit(), before
    the call to ipv6_push_frag_opts() to append the IPv6 Tunnel Encapsulation
    Limit option (option 4, RFC 2473, par. 5.1) to the outer IPv6 header.
    
    As long as the option didn't actually end up in generated packets, this
    wasn't an issue. Then commit 89a23c8b528b ("ip6_tunnel: Fix missing tunnel
    encapsulation limit option") fixed sending of this option, and the
    resulting layout, e.g. for FoU, is:
    
    .-------------------.------------.----------.-------------------.----- - -
    | Outer IPv6 Header | UDP header | Option 4 | Inner IPv6 Header | Payload
    '-------------------'------------'----------'-------------------'----- - -
    
    Needless to say, FoU and GUE (at least) won't work over IPv6. The option
    is appended by default, and I couldn't find a way to disable it with the
    current iproute2.
    
    Turn this into a more reasonable:
    
    .-------------------.----------.------------.-------------------.----- - -
    | Outer IPv6 Header | Option 4 | UDP header | Inner IPv6 Header | Payload
    '-------------------'----------'------------'-------------------'----- - -
    
    With this, and with 84dad55951b0 ("udp6: fix encap return code for
    resubmitting"), FoU and GUE work again over IPv6.
    
    Fixes: 058214a4d1df ("ip6_tun: Add infrastructure for doing encapsulation")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a865095d399f3318f30176e5d2f677d0354f8d8
Author: Tobias Jungel <tobias.jungel@gmail.com>
Date:   Sun Oct 28 12:54:10 2018 +0100

    bonding: fix length of actor system
    
    [ Upstream commit 414dd6fb9a1a1b59983aea7bf0f79f0085ecc5b8 ]
    
    The attribute IFLA_BOND_AD_ACTOR_SYSTEM is sent to user space having the
    length of sizeof(bond->params.ad_actor_system) which is 8 byte. This
    patch aligns the length to ETH_ALEN to have the same MAC address exposed
    as using sysfs.
    
    Fixes: f87fda00b6ed2 ("bonding: prevent out of bound accesses")
    Signed-off-by: Tobias Jungel <tobias.jungel@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95c337646585c27b5e2d94a1daff53ed5e294cb7
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Mon Oct 8 10:49:35 2018 -0500

    ethtool: fix a privilege escalation bug
    
    [ Upstream commit 58f5bbe331c566f49c9559568f982202a278aa78 ]
    
    In dev_ethtool(), the eth command 'ethcmd' is firstly copied from the
    use-space buffer 'useraddr' and checked to see whether it is
    ETHTOOL_PERQUEUE. If yes, the sub-command 'sub_cmd' is further copied from
    the user space. Otherwise, 'sub_cmd' is the same as 'ethcmd'. Next,
    according to 'sub_cmd', a permission check is enforced through the function
    ns_capable(). For example, the permission check is required if 'sub_cmd' is
    ETHTOOL_SCOALESCE, but it is not necessary if 'sub_cmd' is
    ETHTOOL_GCOALESCE, as suggested in the comment "Allow some commands to be
    done by anyone". The following execution invokes different handlers
    according to 'ethcmd'. Specifically, if 'ethcmd' is ETHTOOL_PERQUEUE,
    ethtool_set_per_queue() is called. In ethtool_set_per_queue(), the kernel
    object 'per_queue_opt' is copied again from the user-space buffer
    'useraddr' and 'per_queue_opt.sub_command' is used to determine which
    operation should be performed. Given that the buffer 'useraddr' is in the
    user space, a malicious user can race to change the sub-command between the
    two copies. In particular, the attacker can supply ETHTOOL_PERQUEUE and
    ETHTOOL_GCOALESCE to bypass the permission check in dev_ethtool(). Then
    before ethtool_set_per_queue() is called, the attacker changes
    ETHTOOL_GCOALESCE to ETHTOOL_SCOALESCE. In this way, the attacker can
    bypass the permission check and execute ETHTOOL_SCOALESCE.
    
    This patch enforces a check in ethtool_set_per_queue() after the second
    copy from 'useraddr'. If the sub-command is different from the one obtained
    in the first copy in dev_ethtool(), an error code EINVAL will be returned.
    
    Fixes: f38d138a7da6 ("net/ethtool: support set coalesce per queue")
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Reviewed-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 574af67123c3da1e094813d122baa6cd37ccc4af
Author: Ake Koomsin <ake@igel.co.jp>
Date:   Wed Oct 17 19:44:12 2018 +0900

    virtio_net: avoid using netif_tx_disable() for serializing tx routine
    
    [ Upstream commit 05c998b738fdd3e5d6a257bcacc8f34b6284d795 ]
    
    Commit 713a98d90c5e ("virtio-net: serialize tx routine during reset")
    introduces netif_tx_disable() after netif_device_detach() in order to
    avoid use-after-free of tx queues. However, there are two issues.
    
    1) Its operation is redundant with netif_device_detach() in case the
       interface is running.
    2) In case of the interface is not running before suspending and
       resuming, the tx does not get resumed by netif_device_attach().
       This results in losing network connectivity.
    
    It is better to use netif_tx_lock_bh()/netif_tx_unlock_bh() instead for
    serializing tx routine during reset. This also preserves the symmetry
    of netif_device_detach() and netif_device_attach().
    
    Fixes commit 713a98d90c5e ("virtio-net: serialize tx routine during reset")
    Signed-off-by: Ake Koomsin <ake@igel.co.jp>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b522f279f91b8ba916d941e0e73a01ecee5da77a
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Oct 30 14:10:49 2018 +0800

    vhost: Fix Spectre V1 vulnerability
    
    [ Upstream commit ff002269a4ee9c769dbf9365acef633ebcbd6cbe ]
    
    The idx in vhost_vring_ioctl() was controlled by userspace, hence a
    potential exploitation of the Spectre variant 1 vulnerability.
    
    Fixing this by sanitizing idx before using it to index d->vqs.
    
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 189771d69e14404b0e6eb57aa40bed2a95f7e2c2
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed Oct 17 11:44:04 2018 +0200

    udp6: fix encap return code for resubmitting
    
    [ Upstream commit 84dad55951b0d009372ec21760b650634246e144 ]
    
    The commit eb63f2964dbe ("udp6: add missing checks on edumux packet
    processing") used the same return code convention of the ipv4 counterpart,
    but ipv6 uses the opposite one: positive values means resubmit.
    
    This change addresses the issue, using positive return value for
    resubmitting. Also update the related comment, which was broken, too.
    
    Fixes: eb63f2964dbe ("udp6: add missing checks on edumux packet processing")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 606694e5ec81d598c0300f9e16db0464659df557
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Tue Oct 16 15:18:17 2018 -0300

    sctp: fix race on sctp_id2asoc
    
    [ Upstream commit b336decab22158937975293aea79396525f92bb3 ]
    
    syzbot reported an use-after-free involving sctp_id2asoc.  Dmitry Vyukov
    helped to root cause it and it is because of reading the asoc after it
    was freed:
    
            CPU 1                       CPU 2
    (working on socket 1)            (working on socket 2)
                                     sctp_association_destroy
    sctp_id2asoc
       spin lock
         grab the asoc from idr
       spin unlock
                                       spin lock
                                         remove asoc from idr
                                       spin unlock
                                       free(asoc)
       if asoc->base.sk != sk ... [*]
    
    This can only be hit if trying to fetch asocs from different sockets. As
    we have a single IDR for all asocs, in all SCTP sockets, their id is
    unique on the system. An application can try to send stuff on an id
    that matches on another socket, and the if in [*] will protect from such
    usage. But it didn't consider that as that asoc may belong to another
    socket, it may be freed in parallel (read: under another socket lock).
    
    We fix it by moving the checks in [*] into the protected region. This
    fixes it because the asoc cannot be freed while the lock is held.
    
    Reported-by: syzbot+c7dd55d7aec49d48e49a@syzkaller.appspotmail.com
    Acked-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa8d067c8547ad146ef18baecabc032618f7efb6
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Thu Oct 18 19:56:01 2018 +0200

    r8169: fix NAPI handling under high load
    
    [ Upstream commit 6b839b6cf9eada30b086effb51e5d6076bafc761 ]
    
    rtl_rx() and rtl_tx() are called only if the respective bits are set
    in the interrupt status register. Under high load NAPI may not be
    able to process all data (work_done == budget) and it will schedule
    subsequent calls to the poll callback.
    rtl_ack_events() however resets the bits in the interrupt status
    register, therefore subsequent calls to rtl8169_poll() won't call
    rtl_rx() and rtl_tx() - chip interrupts are still disabled.
    
    Fix this by calling rtl_rx() and rtl_tx() independent of the bits
    set in the interrupt status register. Both functions will detect
    if there's nothing to do for them.
    
    Fixes: da78dbff2e05 ("r8169: remove work from irq handler.")
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ecebdfb2e3a8a22ec157c5d388a6ac3a557919b
Author: Sean Tranchetti <stranche@codeaurora.org>
Date:   Tue Oct 23 16:04:31 2018 -0600

    net: udp: fix handling of CHECKSUM_COMPLETE packets
    
    [ Upstream commit db4f1be3ca9b0ef7330763d07bf4ace83ad6f913 ]
    
    Current handling of CHECKSUM_COMPLETE packets by the UDP stack is
    incorrect for any packet that has an incorrect checksum value.
    
    udp4/6_csum_init() will both make a call to
    __skb_checksum_validate_complete() to initialize/validate the csum
    field when receiving a CHECKSUM_COMPLETE packet. When this packet
    fails validation, skb->csum will be overwritten with the pseudoheader
    checksum so the packet can be fully validated by software, but the
    skb->ip_summed value will be left as CHECKSUM_COMPLETE so that way
    the stack can later warn the user about their hardware spewing bad
    checksums. Unfortunately, leaving the SKB in this state can cause
    problems later on in the checksum calculation.
    
    Since the the packet is still marked as CHECKSUM_COMPLETE,
    udp_csum_pull_header() will SUBTRACT the checksum of the UDP header
    from skb->csum instead of adding it, leaving us with a garbage value
    in that field. Once we try to copy the packet to userspace in the
    udp4/6_recvmsg(), we'll make a call to skb_copy_and_csum_datagram_msg()
    to checksum the packet data and add it in the garbage skb->csum value
    to perform our final validation check.
    
    Since the value we're validating is not the proper checksum, it's possible
    that the folded value could come out to 0, causing us not to drop the
    packet. Instead, we believe that the packet was checksummed incorrectly
    by hardware since skb->ip_summed is still CHECKSUM_COMPLETE, and we attempt
    to warn the user with netdev_rx_csum_fault(skb->dev);
    
    Unfortunately, since this is the UDP path, skb->dev has been overwritten
    by skb->dev_scratch and is no longer a valid pointer, so we end up
    reading invalid memory.
    
    This patch addresses this problem in two ways:
            1) Do not use the dev pointer when calling netdev_rx_csum_fault()
               from skb_copy_and_csum_datagram_msg(). Since this gets called
               from the UDP path where skb->dev has been overwritten, we have
               no way of knowing if the pointer is still valid. Also for the
               sake of consistency with the other uses of
               netdev_rx_csum_fault(), don't attempt to call it if the
               packet was checksummed by software.
    
            2) Add better CHECKSUM_COMPLETE handling to udp4/6_csum_init().
               If we receive a packet that's CHECKSUM_COMPLETE that fails
               verification (i.e. skb->csum_valid == 0), check who performed
               the calculation. It's possible that the checksum was done in
               software by the network stack earlier (such as Netfilter's
               CONNTRACK module), and if that says the checksum is bad,
               we can drop the packet immediately instead of waiting until
               we try and copy it to userspace. Otherwise, we need to
               mark the SKB as CHECKSUM_NONE, since the skb->csum field
               no longer contains the full packet checksum after the
               call to __skb_checksum_validate_complete().
    
    Fixes: e6afc8ace6dd ("udp: remove headers from UDP packets before queueing")
    Fixes: c84d949057ca ("udp: copy skb->truesize in the first cache line")
    Cc: Sam Kumar <samanthakumar@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Sean Tranchetti <stranche@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 441d0e7540824732f25f38cc270343d34427bebe
Author: Niklas Cassel <niklas.cassel@linaro.org>
Date:   Wed Oct 31 16:08:10 2018 +0100

    net: stmmac: Fix stmmac_mdio_reset() when building stmmac as modules
    
    [ Upstream commit 30549aab146ccb1275230c3b4b4bc6b4181fd54e ]
    
    When building stmmac, it is only possible to select CONFIG_DWMAC_GENERIC,
    or any of the glue drivers, when CONFIG_STMMAC_PLATFORM is set.
    The only exception is CONFIG_STMMAC_PCI.
    
    When calling of_mdiobus_register(), it will call our ->reset()
    callback, which is set to stmmac_mdio_reset().
    
    Most of the code in stmmac_mdio_reset() is protected by a
    "#if defined(CONFIG_STMMAC_PLATFORM)", which will evaluate
    to false when CONFIG_STMMAC_PLATFORM=m.
    
    Because of this, the phy reset gpio will only be pulled when
    stmmac is built as built-in, but not when built as modules.
    
    Fix this by using "#if IS_ENABLED()" instead of "#if defined()".
    
    Signed-off-by: Niklas Cassel <niklas.cassel@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d58456872c4a65926541e8aa983056bd91f8ed6
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Thu Oct 18 09:36:46 2018 -0500

    net: socket: fix a missing-check bug
    
    [ Upstream commit b6168562c8ce2bd5a30e213021650422e08764dc ]
    
    In ethtool_ioctl(), the ioctl command 'ethcmd' is checked through a switch
    statement to see whether it is necessary to pre-process the ethtool
    structure, because, as mentioned in the comment, the structure
    ethtool_rxnfc is defined with padding. If yes, a user-space buffer 'rxnfc'
    is allocated through compat_alloc_user_space(). One thing to note here is
    that, if 'ethcmd' is ETHTOOL_GRXCLSRLALL, the size of the buffer 'rxnfc' is
    partially determined by 'rule_cnt', which is actually acquired from the
    user-space buffer 'compat_rxnfc', i.e., 'compat_rxnfc->rule_cnt', through
    get_user(). After 'rxnfc' is allocated, the data in the original user-space
    buffer 'compat_rxnfc' is then copied to 'rxnfc' through copy_in_user(),
    including the 'rule_cnt' field. However, after this copy, no check is
    re-enforced on 'rxnfc->rule_cnt'. So it is possible that a malicious user
    race to change the value in the 'compat_rxnfc->rule_cnt' between these two
    copies. Through this way, the attacker can bypass the previous check on
    'rule_cnt' and inject malicious data. This can cause undefined behavior of
    the kernel and introduce potential security risk.
    
    This patch avoids the above issue via copying the value acquired by
    get_user() to 'rxnfc->rule_cn', if 'ethcmd' is ETHTOOL_GRXCLSRLALL.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29d871195e9e63ff567fe3fb02b01be60e015877
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 26 15:51:06 2018 -0700

    net: sched: gred: pass the right attribute to gred_change_table_def()
    
    [ Upstream commit 38b4f18d56372e1e21771ab7b0357b853330186c ]
    
    gred_change_table_def() takes a pointer to TCA_GRED_DPS attribute,
    and expects it will be able to interpret its contents as
    struct tc_gred_sopt.  Pass the correct gred attribute, instead of
    TCA_OPTIONS.
    
    This bug meant the table definition could never be changed after
    Qdisc was initialized (unless whatever TCA_OPTIONS contained both
    passed netlink validation and was a valid struct tc_gred_sopt...).
    
    Old behaviour:
    $ ip link add type dummy
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    RTNETLINK answers: Invalid argument
    
    Now:
    $ ip link add type dummy
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    
    Fixes: f62d6b936df5 ("[PKT_SCHED]: GRED: Use central VQ change procedure")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e581e28f9dcbb461751df6eeb6d24335f94e9f11
Author: David Ahern <dsahern@gmail.com>
Date:   Fri Oct 19 10:00:19 2018 -0700

    net/ipv6: Fix index counter for unicast addresses in in6_dump_addrs
    
    [ Upstream commit 4ba4c566ba8448a05e6257e0b98a21f1a0d55315 ]
    
    The loop wants to skip previously dumped addresses, so loops until
    current index >= saved index. If the message fills it wants to save
    the index for the next address to dump - ie., the one that did not
    fit in the current message.
    
    Currently, it is incrementing the index counter before comparing to the
    saved index, and then the saved index is off by 1 - it assumes the
    current address is going to fit in the message.
    
    Change the index handling to increment only after a succesful dump.
    
    Fixes: 502a2ffd7376a ("ipv6: convert idev_list to list macros")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff96a397744084e6eb13ab4afe47add5c03435bf
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Mon Oct 15 05:19:00 2018 +0000

    net: fec: don't dump RX FIFO register when not available
    
    [ Upstream commit ec20a63aa8b8ec3223fb25cdb2a49f9f9dfda88c ]
    
    Commit db65f35f50e0 ("net: fec: add support of ethtool get_regs") introduce
    ethool "--register-dump" interface to dump all FEC registers.
    
    But not all silicon implementations of the Freescale FEC hardware module
    have the FRBR (FIFO Receive Bound Register) and FRSR (FIFO Receive Start
    Register) register, so we should not be trying to dump them on those that
    don't.
    
    To fix it we create a quirk flag, FEC_QUIRK_HAS_RFREG, and check it before
    dump those RX FIFO registers.
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bb1381cc8650c9b86e41ea639db4dfaed750ad4
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Oct 11 11:15:13 2018 -0700

    llc: set SOCK_RCU_FREE in llc_sap_add_socket()
    
    [ Upstream commit 5a8e7aea953bdb6d4da13aff6f1e7f9c62023499 ]
    
    WHen an llc sock is added into the sk_laddr_hash of an llc_sap,
    it is not marked with SOCK_RCU_FREE.
    
    This causes that the sock could be freed while it is still being
    read by __llc_lookup_established() with RCU read lock. sock is
    refcounted, but with RCU read lock, nothing prevents the readers
    getting a zero refcnt.
    
    Fix it by setting SOCK_RCU_FREE in llc_sap_add_socket().
    
    Reported-by: syzbot+11e05f04c15e03be5254@syzkaller.appspotmail.com
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e42e97af9832848bbeba5c1f7f35dbcffec5642
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Wed Oct 24 14:37:21 2018 +0200

    ipv6/ndisc: Preserve IPv6 control buffer if protocol error handlers are called
    
    [ Upstream commit ee1abcf689353f36d9322231b4320926096bdee0 ]
    
    Commit a61bbcf28a8c ("[NET]: Store skb->timestamp as offset to a base
    timestamp") introduces a neighbour control buffer and zeroes it out in
    ndisc_rcv(), as ndisc_recv_ns() uses it.
    
    Commit f2776ff04722 ("[IPV6]: Fix address/interface handling in UDP and
    DCCP, according to the scoping architecture.") introduces the usage of the
    IPv6 control buffer in protocol error handlers (e.g. inet6_iif() in
    present-day __udp6_lib_err()).
    
    Now, with commit b94f1c0904da ("ipv6: Use icmpv6_notify() to propagate
    redirect, instead of rt6_redirect()."), we call protocol error handlers
    from ndisc_redirect_rcv(), after the control buffer is already stolen and
    some parts are already zeroed out. This implies that inet6_iif() on this
    path will always return zero.
    
    This gives unexpected results on UDP socket lookup in __udp6_lib_err(), as
    we might actually need to match sockets for a given interface.
    
    Instead of always claiming the control buffer in ndisc_rcv(), do that only
    when needed.
    
    Fixes: b94f1c0904da ("ipv6: Use icmpv6_notify() to propagate redirect, instead of rt6_redirect().")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d4c5861211f62be25e36254981521c1e5030b19
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Oct 12 18:58:53 2018 -0700

    ipv6: mcast: fix a use-after-free in inet6_mc_check
    
    [ Upstream commit dc012f3628eaecfb5ba68404a5c30ef501daf63d ]
    
    syzbot found a use-after-free in inet6_mc_check [1]
    
    The problem here is that inet6_mc_check() uses rcu
    and read_lock(&iml->sflock)
    
    So the fact that ip6_mc_leave_src() is called under RTNL
    and the socket lock does not help us, we need to acquire
    iml->sflock in write mode.
    
    In the future, we should convert all this stuff to RCU.
    
    [1]
    BUG: KASAN: use-after-free in ipv6_addr_equal include/net/ipv6.h:521 [inline]
    BUG: KASAN: use-after-free in inet6_mc_check+0xae7/0xb40 net/ipv6/mcast.c:649
    Read of size 8 at addr ffff8801ce7f2510 by task syz-executor0/22432
    
    CPU: 1 PID: 22432 Comm: syz-executor0 Not tainted 4.19.0-rc7+ #280
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c4/0x2b4 lib/dump_stack.c:113
     print_address_description.cold.8+0x9/0x1ff mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.9+0x242/0x309 mm/kasan/report.c:412
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:433
     ipv6_addr_equal include/net/ipv6.h:521 [inline]
     inet6_mc_check+0xae7/0xb40 net/ipv6/mcast.c:649
     __raw_v6_lookup+0x320/0x3f0 net/ipv6/raw.c:98
     ipv6_raw_deliver net/ipv6/raw.c:183 [inline]
     raw6_local_deliver+0x3d3/0xcb0 net/ipv6/raw.c:240
     ip6_input_finish+0x467/0x1aa0 net/ipv6/ip6_input.c:345
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ip6_input+0xe9/0x600 net/ipv6/ip6_input.c:426
     ip6_mc_input+0x48a/0xd20 net/ipv6/ip6_input.c:503
     dst_input include/net/dst.h:450 [inline]
     ip6_rcv_finish+0x17a/0x330 net/ipv6/ip6_input.c:76
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ipv6_rcv+0x120/0x640 net/ipv6/ip6_input.c:271
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     netif_receive_skb_internal+0x12c/0x620 net/core/dev.c:5126
     napi_frags_finish net/core/dev.c:5664 [inline]
     napi_gro_frags+0x75a/0xc90 net/core/dev.c:5737
     tun_get_user+0x3189/0x4250 drivers/net/tun.c:1923
     tun_chr_write_iter+0xb9/0x154 drivers/net/tun.c:1968
     call_write_iter include/linux/fs.h:1808 [inline]
     do_iter_readv_writev+0x8b0/0xa80 fs/read_write.c:680
     do_iter_write+0x185/0x5f0 fs/read_write.c:959
     vfs_writev+0x1f1/0x360 fs/read_write.c:1004
     do_writev+0x11a/0x310 fs/read_write.c:1039
     __do_sys_writev fs/read_write.c:1112 [inline]
     __se_sys_writev fs/read_write.c:1109 [inline]
     __x64_sys_writev+0x75/0xb0 fs/read_write.c:1109
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x457421
    Code: 75 14 b8 14 00 00 00 0f 05 48 3d 01 f0 ff ff 0f 83 34 b5 fb ff c3 48 83 ec 08 e8 1a 2d 00 00 48 89 04 24 b8 14 00 00 00 0f 05 <48> 8b 3c 24 48 89 c2 e8 63 2d 00 00 48 89 d0 48 83 c4 08 48 3d 01
    RSP: 002b:00007f2d30ecaba0 EFLAGS: 00000293 ORIG_RAX: 0000000000000014
    RAX: ffffffffffffffda RBX: 000000000000003e RCX: 0000000000457421
    RDX: 0000000000000001 RSI: 00007f2d30ecabf0 RDI: 00000000000000f0
    RBP: 0000000020000500 R08: 00000000000000f0 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000293 R12: 00007f2d30ecb6d4
    R13: 00000000004c4890 R14: 00000000004d7b90 R15: 00000000ffffffff
    
    Allocated by task 22437:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc7/0xe0 mm/kasan/kasan.c:553
     __do_kmalloc mm/slab.c:3718 [inline]
     __kmalloc+0x14e/0x760 mm/slab.c:3727
     kmalloc include/linux/slab.h:518 [inline]
     sock_kmalloc+0x15a/0x1f0 net/core/sock.c:1983
     ip6_mc_source+0x14dd/0x1960 net/ipv6/mcast.c:427
     do_ipv6_setsockopt.isra.9+0x3afb/0x45d0 net/ipv6/ipv6_sockglue.c:743
     ipv6_setsockopt+0xbd/0x170 net/ipv6/ipv6_sockglue.c:933
     rawv6_setsockopt+0x59/0x140 net/ipv6/raw.c:1069
     sock_common_setsockopt+0x9a/0xe0 net/core/sock.c:3038
     __sys_setsockopt+0x1ba/0x3c0 net/socket.c:1902
     __do_sys_setsockopt net/socket.c:1913 [inline]
     __se_sys_setsockopt net/socket.c:1910 [inline]
     __x64_sys_setsockopt+0xbe/0x150 net/socket.c:1910
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Freed by task 22430:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x102/0x150 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kfree+0xcf/0x230 mm/slab.c:3813
     __sock_kfree_s net/core/sock.c:2004 [inline]
     sock_kfree_s+0x29/0x60 net/core/sock.c:2010
     ip6_mc_leave_src+0x11a/0x1d0 net/ipv6/mcast.c:2448
     __ipv6_sock_mc_close+0x20b/0x4e0 net/ipv6/mcast.c:310
     ipv6_sock_mc_close+0x158/0x1d0 net/ipv6/mcast.c:328
     inet6_release+0x40/0x70 net/ipv6/af_inet6.c:452
     __sock_release+0xd7/0x250 net/socket.c:579
     sock_close+0x19/0x20 net/socket.c:1141
     __fput+0x385/0xa30 fs/file_table.c:278
     ____fput+0x15/0x20 fs/file_table.c:309
     task_work_run+0x1e8/0x2a0 kernel/task_work.c:113
     tracehook_notify_resume include/linux/tracehook.h:193 [inline]
     exit_to_usermode_loop+0x318/0x380 arch/x86/entry/common.c:166
     prepare_exit_to_usermode arch/x86/entry/common.c:197 [inline]
     syscall_return_slowpath arch/x86/entry/common.c:268 [inline]
     do_syscall_64+0x6be/0x820 arch/x86/entry/common.c:293
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The buggy address belongs to the object at ffff8801ce7f2500
     which belongs to the cache kmalloc-192 of size 192
    The buggy address is located 16 bytes inside of
     192-byte region [ffff8801ce7f2500, ffff8801ce7f25c0)
    The buggy address belongs to the page:
    page:ffffea000739fc80 count:1 mapcount:0 mapping:ffff8801da800040 index:0x0
    flags: 0x2fffc0000000100(slab)
    raw: 02fffc0000000100 ffffea0006f6e548 ffffea000737b948 ffff8801da800040
    raw: 0000000000000000 ffff8801ce7f2000 0000000100000010 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8801ce7f2400: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff8801ce7f2480: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc
    >ffff8801ce7f2500: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                             ^
     ffff8801ce7f2580: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc
     ffff8801ce7f2600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3cf86dac56dbacab38d27c072b492cbbe89f4f1
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Sat Oct 27 12:07:47 2018 +0300

    net: bridge: remove ipv6 zero address check in mcast queries
    
    commit 0fe5119e267f3e3d8ac206895f5922195ec55a8a upstream.
    
    Recently a check was added which prevents marking of routers with zero
    source address, but for IPv6 that cannot happen as the relevant RFCs
    actually forbid such packets:
    RFC 2710 (MLDv1):
    "To be valid, the Query message MUST
     come from a link-local IPv6 Source Address, be at least 24 octets
     long, and have a correct MLD checksum."
    
    Same goes for RFC 3810.
    
    And also it can be seen as a requirement in ipv6_mc_check_mld_query()
    which is used by the bridge to validate the message before processing
    it. Thus any queries with :: source address won't be processed anyway.
    So just remove the check for zero IPv6 source address from the query
    processing function.
    
    Fixes: 5a2de63fd1a5 ("bridge: do not add port to router list when receives query with source 0.0.0.0")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bd68d5612af83ed392f066861eb5033bfcad28c
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Oct 26 10:28:43 2018 +0800

    bridge: do not add port to router list when receives query with source 0.0.0.0
    
    commit 5a2de63fd1a59c30c02526d427bc014b98adf508 upstream.
    
    Based on RFC 4541, 2.1.1.  IGMP Forwarding Rules
    
      The switch supporting IGMP snooping must maintain a list of
      multicast routers and the ports on which they are attached.  This
      list can be constructed in any combination of the following ways:
    
      a) This list should be built by the snooping switch sending
         Multicast Router Solicitation messages as described in IGMP
         Multicast Router Discovery [MRDISC].  It may also snoop
         Multicast Router Advertisement messages sent by and to other
         nodes.
    
      b) The arrival port for IGMP Queries (sent by multicast routers)
         where the source address is not 0.0.0.0.
    
    We should not add the port to router list when receives query with source
    0.0.0.0.
    
    Reported-by: Ying Xu <yinxu@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6534b3e08e8e10e871b53ce5a1e9ce4bcb94907
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Apr 10 13:33:12 2018 +0100

    drm/i915/gvt: fix memory leak of a cmd_entry struct on error exit path
    
    commit ffdf16edfbbe77f5f5c3c87fe8d7387ecd16241b upstream
    
    The error exit path when a duplicate is found does not kfree and cmd_entry
    struct and hence there is a small memory leak.  Fix this by kfree'ing it.
    
    Detected by CoverityScan, CID#1370198 ("Resource Leak")
    
    Fixes: be1da7070aea ("drm/i915/gvt: vGPU command scanner")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Acked-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2980235974cdb243b06d8eb9d12a3fce44f401a1
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Thu Jul 5 15:15:27 2018 +0200

    perf tools: Disable parallelism for 'make clean'
    
    [ Upstream commit da15fc2fa9c07b23db8f5e479bd8a9f0d741ca07 ]
    
    The Yocto build system does a 'make clean' when rebuilding due to
    changed dependencies, and that consistently fails for me (causing the
    whole BSP build to fail) with errors such as
    
    | find: '[...]/perf/1.0-r9/perf-1.0/plugin_mac80211.so': No such file or directory
    | find: '[...]/perf/1.0-r9/perf-1.0/plugin_mac80211.so': No such file or directory
    | find: find: '[...]/perf/1.0-r9/perf-1.0/libtraceevent.a''[...]/perf/1.0-r9/perf-1.0/libtraceevent.a': No such file or directory: No such file or directory
    |
    [...]
    | find: cannot delete '/mnt/xfs/devel/pil/yocto/tmp-glibc/work/wandboard-oe-linux-gnueabi/perf/1.0-r9/perf-1.0/util/.pstack.o.cmd': No such file or directory
    
    Apparently (despite the comment), 'make clean' ends up launching
    multiple sub-makes that all want to remove the same things - perhaps
    this only happens in combination with a O=... parameter. In any case, we
    don't lose much by explicitly disabling the parallelism for the clean
    target, and it makes automated builds much more reliable.
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20180705131527.19749-1-linux@rasmusvillemoes.dk
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac7c2bb59870b8fd41c09502e73e72fcb63b85c3
Author: Sasha Levin <sashal@kernel.org>
Date:   Wed Oct 31 11:05:19 2018 -0400

    Revert "netfilter: ipv6: nf_defrag: drop skb dst before queueing"
    
    This reverts commit 28c74ff85efd192aeca9005499ca50c24d795f61.
    
    From Florian Westphal <fw@strlen.de>:
    
            It causes kernel crash for locally generated ipv6 fragments
            when netfilter ipv6 defragmentation is used.
    
            The faulty commit is not essential for -stable, it only
            delays netns teardown for longer than needed when that netns
            still has ipv6 frags queued.  Much better than crash :-/
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee66ad5896aef9b67b7b1e3db6fa9430b907fa58
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 6 10:47:14 2017 +0100

    ALSA: usx2y: Fix invalid stream URBs
    
    commit f9a1c372299fed53d4b72bb601f7f3bfe6f9999c upstream
    
    The us122l driver creates URBs per the fixed endpoints, and this may
    end up with URBs with inconsistent pipes when a fuzzer or a malicious
    program deals with the manipulated endpoints.  It ends up with a
    kernel warning like:
    
      usb 1-1: BOGUS urb xfer, pipe 0 != type 3
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 24 at drivers/usb/core/urb.c:471
      usb_submit_urb+0x113e/0x1400
      Call Trace:
       usb_stream_start+0x48a/0x9f0 sound/usb/usx2y/usb_stream.c:690
       us122l_start+0x116/0x290 sound/usb/usx2y/us122l.c:365
       us122l_create_card sound/usb/usx2y/us122l.c:502
       us122l_usb_probe sound/usb/usx2y/us122l.c:588
       ....
    
    For avoiding the bad access, this patch adds a few sanity checks of
    the validity of created URBs like previous similar fixes using the new
    usb_urb_ep_type_check() helper function.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e75194d294421704baf4c577e504cb9c92ec7ce2
Author: Philipp Zabel <philipp.zabel@gmail.com>
Date:   Mon May 21 06:24:58 2018 -0400

    media: uvcvideo: Fix driver reference counting
    
    commit f9ffcb0a21e1fa8e64d09ed613d884e054ae8191 upstream
    
    kref_init initializes the reference count to 1, not 0. This additional
    reference is never released since the conversion to reference counters.
    As a result, uvc_delete is not called anymore when UVC cameras are
    disconnected.
    Fix this by adding an additional kref_put in uvc_disconnect and in the
    probe error path. This also allows to remove the temporary additional
    reference in uvc_unregister_video.
    
    Fixes: 9d15cd958c17 ("media: uvcvideo: Convert from using an atomic variable to a reference count")
    
    Signed-off-by: Philipp Zabel <philipp.zabel@gmail.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdb44bdafc3a846aa785102f65a26762fbe32037
Author: Chris Paterson <chris.paterson2@renesas.com>
Date:   Thu Dec 14 09:08:39 2017 +0000

    ARM: dts: r8a7790: Correct critical CPU temperature
    
    commit fcab5651fae4258a993170b7aaf443adbd3d4d84 upstream
    
    The R-Car H2 hardware manual states that Tc = –40°C to +105°C. The
    thermal sensor has an accuracy of ±5°C and there can be a temperature
    difference of 1 or 2 degrees between Tjmax and the thermal sensor due
    to the location of the latter.
    
    This means that 95°C is a safer value to use.
    
    Fixes: a8b805f3606f7af7 ("ARM: dts: r8a7790: enable to use thermal-zone")
    Signed-off-by: Chris Paterson <chris.paterson2@renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 871424f0c3cfcf51727cb56a0a5f1cbfc9e429c6
Author: Peter Xu <peterx@redhat.com>
Date:   Tue Dec 12 17:15:02 2017 +0100

    kvm: x86: fix WARN due to uninitialized guest FPU state
    
    commit 5663d8f9bbe4bf15488f7351efb61ea20fa6de06 upstream
    
    ------------[ cut here ]------------
     Bad FPU state detected at kvm_put_guest_fpu+0xd8/0x2d0 [kvm], reinitializing FPU registers.
     WARNING: CPU: 1 PID: 4594 at arch/x86/mm/extable.c:103 ex_handler_fprestore+0x88/0x90
     CPU: 1 PID: 4594 Comm: qemu-system-x86 Tainted: G    B      OE    4.15.0-rc2+ #10
     RIP: 0010:ex_handler_fprestore+0x88/0x90
     Call Trace:
      fixup_exception+0x4e/0x60
      do_general_protection+0xff/0x270
      general_protection+0x22/0x30
     RIP: 0010:kvm_put_guest_fpu+0xd8/0x2d0 [kvm]
     RSP: 0018:ffff8803d5627810 EFLAGS: 00010246
      kvm_vcpu_reset+0x3b4/0x3c0 [kvm]
      kvm_apic_accept_events+0x1c0/0x240 [kvm]
      kvm_arch_vcpu_ioctl_run+0x1658/0x2fb0 [kvm]
      kvm_vcpu_ioctl+0x479/0x880 [kvm]
      do_vfs_ioctl+0x142/0x9a0
      SyS_ioctl+0x74/0x80
      do_syscall_64+0x15f/0x600
    
    where kvm_put_guest_fpu is called without a prior kvm_load_guest_fpu.
    To fix it, move kvm_load_guest_fpu to the very beginning of
    kvm_arch_vcpu_ioctl_run.
    
    Cc: stable@vger.kernel.org
    Fixes: f775b13eedee2f7f3c6fdd4e90fb79090ce5d339
    Signed-off-by: Peter Xu <peterx@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3642e35447495208665e30ffbc2466a2a488b99e
Author: Kimmo Rautkoski <ext-kimmo.rautkoski@vaisala.com>
Date:   Sat Oct 20 22:44:42 2018 +0300

    mtd: spi-nor: Add support for is25wp series chips
    
    [ Upstream commit d616f81cdd2a21edfa90a595a4e9b143f5ba8414 ]
    
    Added support for is25wp032, is25wp064 and is25wp128.
    
    Signed-off-by: Kimmo Rautkoski <ext-kimmo.rautkoski@vaisala.com>
    Reviewed-by: Marek Vasut <marek.vasut@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    [ Adrian Bunk: Trivial adaption to changed context. ]
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd6df7a19559f9b52049f97c3188a7d1544e16df
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Thu Oct 18 13:38:40 2018 -0700

    sch_netem: restore skb->dev after dequeuing from the rbtree
    
    Upstream commit bffa72cf7f9d ("net: sk_buff rbnode reorg") got
    backported as commit 6b921536f170 ("net: sk_buff rbnode reorg") into the
    v4.14.x-tree.
    
    However, the backport does not include the changes in sch_netem.c
    
    We need these, as otherwise the skb->dev pointer is not set when
    dequeueing from the netem rbtree, resulting in a panic:
    
    [   15.427748] BUG: unable to handle kernel NULL pointer dereference at 00000000000000d0
    [   15.428863] IP: netif_skb_features+0x24/0x230
    [   15.429402] PGD 0 P4D 0
    [   15.429733] Oops: 0000 [#1] SMP PTI
    [   15.430169] Modules linked in:
    [   15.430614] CPU: 3 PID: 0 Comm: swapper/3 Not tainted 4.14.77.mptcp #77
    [   15.431497] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 0.5.1 01/01/2011
    [   15.432568] task: ffff88042db19680 task.stack: ffffc90000070000
    [   15.433356] RIP: 0010:netif_skb_features+0x24/0x230
    [   15.433977] RSP: 0018:ffff88043fd83e70 EFLAGS: 00010286
    [   15.434665] RAX: ffff880429ad80c0 RBX: ffff88042bd0e400 RCX: ffff880429ad8000
    [   15.435585] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff88042bd0e400
    [   15.436551] RBP: ffff88042bd0e400 R08: ffff88042a4b6c9c R09: 0000000000000001
    [   15.437485] R10: 0000000000000004 R11: 0000000000000000 R12: ffff88042c700000
    [   15.438393] R13: ffff88042c700000 R14: ffff88042a4b6c00 R15: ffff88042c6bb000
    [   15.439315] FS:  0000000000000000(0000) GS:ffff88043fd80000(0000) knlGS:0000000000000000
    [   15.440314] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   15.441084] CR2: 00000000000000d0 CR3: 000000042c374000 CR4: 00000000000006e0
    [   15.442016] Call Trace:
    [   15.442333]  <IRQ>
    [   15.442596]  validate_xmit_skb+0x17/0x270
    [   15.443134]  validate_xmit_skb_list+0x38/0x60
    [   15.443698]  sch_direct_xmit+0x102/0x190
    [   15.444198]  __qdisc_run+0xe3/0x240
    [   15.444671]  net_tx_action+0x121/0x140
    [   15.445177]  __do_softirq+0xe2/0x224
    [   15.445654]  irq_exit+0xbf/0xd0
    [   15.446072]  smp_apic_timer_interrupt+0x5d/0x90
    [   15.446654]  apic_timer_interrupt+0x7d/0x90
    [   15.447185]  </IRQ>
    [   15.447460] RIP: 0010:native_safe_halt+0x2/0x10
    [   15.447992] RSP: 0018:ffffc90000073f10 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff10
    [   15.449008] RAX: ffffffff816667d0 RBX: ffffffff820946b0 RCX: 0000000000000000
    [   15.449895] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
    [   15.450768] RBP: ffffffff82026940 R08: 00000004e858e5e1 R09: ffff88042a4b6d58
    [   15.451643] R10: 0000000000000000 R11: 000000d0d56879bb R12: 0000000000000000
    [   15.452478] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    [   15.453340]  ? __sched_text_end+0x2/0x2
    [   15.453835]  default_idle+0xf/0x20
    [   15.454259]  do_idle+0x170/0x200
    [   15.454653]  cpu_startup_entry+0x14/0x20
    [   15.455142]  secondary_startup_64+0xa5/0xb0
    [   15.455715] Code: 1f 84 00 00 00 00 00 55 53 48 89 fd 48 83 ec 08 8b 87 bc 00 00 00 48 8b 8f c0 00 00 00 0f b6 97 81 00 00 00 48 8b 77 10 48 01 c8 <48> 8b 9
    [   15.458138] RIP: netif_skb_features+0x24/0x230 RSP: ffff88043fd83e70
    [   15.458933] CR2: 00000000000000d0
    [   15.459352] ---[ end trace 083925903ae60570 ]---
    
    Fixes: 6b921536f170 ("net: sk_buff rbnode reorg")
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Soheil Hassas Yeganeh <soheil@google.com>
    Cc: Wei Wang <weiwan@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d69b85e14be7a6604a8820f80c1b712c65241d7
Author: Khazhismel Kumykov <khazhy@google.com>
Date:   Fri Oct 12 21:34:40 2018 -0700

    fs/fat/fatent.c: add cond_resched() to fat_count_free_clusters()
    
    [ Upstream commit ac081c3be3fae6d0cc3e1862507fca3862d30b67 ]
    
    On non-preempt kernels this loop can take a long time (more than 50 ticks)
    processing through entries.
    
    Link: http://lkml.kernel.org/r/20181010172623.57033-1-khazhy@google.com
    Signed-off-by: Khazhismel Kumykov <khazhy@google.com>
    Acked-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5309191ec0496e58167421042d42263bd6e13dac
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Oct 11 10:54:52 2018 +0200

    selftests: rtnetlink.sh explicitly requires bash.
    
    [ Upstream commit 3c718e677c2b35b449992adc36ecce883c467e98 ]
    
    the script rtnetlink.sh requires a bash-only features (sleep with sub-second
    precision). This may cause random test failure if the default shell is not
    bash.
    Address the above explicitly requiring bash as the script interpreter.
    
    Fixes: 33b01b7b4f19 ("selftests: add rtnetlink test script")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e4f8315a5c8e914fb6365c930b45fffd73b02cd
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Oct 9 11:21:29 2018 +0300

    net: ena: fix NULL dereference due to untimely napi initialization
    
    [ Upstream commit 78a55d05def95144ca5fa9a64c49b2a0636a9866 ]
    
    napi poll functions should be initialized before running request_irq(),
    to handle a rare condition where there is a pending interrupt, causing
    the ISR to fire immediately while the poll function wasn't set yet,
    causing a NULL dereference.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba4cf1eefd54fbeadf90cfe8236643bed5681548
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Oct 9 11:21:27 2018 +0300

    net: ena: fix warning in rmmod caused by double iounmap
    
    [ Upstream commit d79c3888bde6581da7ff9f9d6f581900ecb5e632 ]
    
    Memory mapped with devm_ioremap is automatically freed when the driver
    is disconnected from the device. Therefore there is no need to
    explicitly call devm_iounmap.
    
    Fixes: 0857d92f71b6 ("net: ena: add missing unmap bars on device removal")
    Fixes: 411838e7b41c ("net: ena: fix rare kernel crash when bar memory remap fails")
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 252869e5fb49b6397584d9dbe46b246bb1787ef3
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 8 15:46:17 2018 +0100

    rxrpc: Fix connection-level abort handling
    
    [ Upstream commit 647530924f47c93db472ee3cf43b7ef1425581b6 ]
    
    Fix connection-level abort handling to cache the abort and error codes
    properly so that a new incoming call can be properly aborted if it races
    with the parent connection being aborted by another CPU.
    
    The abort_code and error parameters can then be dropped from
    rxrpc_abort_calls().
    
    Fixes: f5c17aaeb2ae ("rxrpc: Calls should only have one terminal state")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1d27ff6e027204e6bec8dd01153a196219d9d9b
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 8 15:46:11 2018 +0100

    rxrpc: Only take the rwind and mtu values from latest ACK
    
    [ Upstream commit 298bc15b2079c324e82d0a6fda39c3d762af7282 ]
    
    Move the out-of-order and duplicate ACK packet check to before the call to
    rxrpc_input_ackinfo() so that the receive window size and MTU size are only
    checked in the latest ACK packet and don't regress.
    
    Fixes: 248f219cb8bc ("rxrpc: Rewrite the data and ack handling code")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a6d45700adf03085add4ab26bcdca6ee2487a05
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 8 15:46:01 2018 +0100

    rxrpc: Don't check RXRPC_CALL_TX_LAST after calling rxrpc_rotate_tx_window()
    
    [ Upstream commit c479d5f2c2e1ce609da08c075054440d97ddff52 ]
    
    We should only call the function to end a call's Tx phase if we rotated the
    marked-last packet out of the transmission buffer.
    
    Make rxrpc_rotate_tx_window() return an indication of whether it just
    rotated the packet marked as the last out of the transmit buffer, carrying
    the information out of the locked section in that function.
    
    We can then check the return value instead of examining RXRPC_CALL_TX_LAST.
    
    Fixes: 70790dbe3f66 ("rxrpc: Pass the last Tx packet marker in the annotation buffer")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fdaadbce403a7cb20ac0c9c3be260d0cf17177d
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Tue Sep 18 16:08:02 2018 -0300

    perf python: Use -Wno-redundant-decls to build with PYTHON=python3
    
    [ Upstream commit 05a2f54679861deb188750ba2a70187000b2c71f ]
    
    When building in ClearLinux using 'make PYTHON=python3' with gcc 8.2.1
    it fails with:
    
        GEN      /tmp/build/perf/python/perf.so
      In file included from /usr/include/python3.7m/Python.h:126,
                       from /git/linux/tools/perf/util/python.c:2:
      /usr/include/python3.7m/import.h:58:24: error: redundant redeclaration of ‘_PyImport_AddModuleObject’ [-Werror=redundant-decls]
       PyAPI_FUNC(PyObject *) _PyImport_AddModuleObject(PyObject *, PyObject *);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
      /usr/include/python3.7m/import.h:47:24: note: previous declaration of ‘_PyImport_AddModuleObject’ was here
       PyAPI_FUNC(PyObject *) _PyImport_AddModuleObject(PyObject *name,
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
      cc1: all warnings being treated as errors
      error: command 'gcc' failed with exit status 1
    
    And indeed there is a redundant declaration in that Python.h file, one
    with parameter names and the other without, so just add
    -Wno-error=redundant-decls to the python setup instructions.
    
    Now perf builds with gcc in ClearLinux with the following Dockerfile:
    
      # docker.io/acmel/linux-perf-tools-build-clearlinux:latest
      FROM docker.io/clearlinux:latest
      MAINTAINER Arnaldo Carvalho de Melo <acme@kernel.org>
      RUN swupd update && \
          swupd bundle-add sysadmin-basic-dev
      RUN mkdir -m 777 -p /git /tmp/build/perf /tmp/build/objtool /tmp/build/linux && \
          groupadd -r perfbuilder && \
          useradd -m -r -g perfbuilder perfbuilder && \
          chown -R perfbuilder.perfbuilder /tmp/build/ /git/
      USER perfbuilder
      COPY rx_and_build.sh /
      ENV EXTRA_MAKE_ARGS=PYTHON=python3
      ENTRYPOINT ["/rx_and_build.sh"]
    
    Now to figure out why the build fails with clang, that is present in the
    above container as detected by the rx_and_build.sh script:
    
      clang version 6.0.1 (tags/RELEASE_601/final)
      Target: x86_64-unknown-linux-gnu
      Thread model: posix
      InstalledDir: /usr/sbin
      make: Entering directory '/git/linux/tools/perf'
        BUILD:   Doing 'make -j4' parallel build
        HOSTCC   /tmp/build/perf/fixdep.o
        HOSTLD   /tmp/build/perf/fixdep-in.o
        LINK     /tmp/build/perf/fixdep
    
      Auto-detecting system features:
      ...                         dwarf: [ OFF ]
      ...            dwarf_getlocations: [ OFF ]
      ...                         glibc: [ OFF ]
      ...                          gtk2: [ OFF ]
      ...                      libaudit: [ OFF ]
      ...                        libbfd: [ OFF ]
      ...                        libelf: [ OFF ]
      ...                       libnuma: [ OFF ]
      ...        numa_num_possible_cpus: [ OFF ]
      ...                       libperl: [ OFF ]
      ...                     libpython: [ OFF ]
      ...                      libslang: [ OFF ]
      ...                     libcrypto: [ OFF ]
      ...                     libunwind: [ OFF ]
      ...            libdw-dwarf-unwind: [ OFF ]
      ...                          zlib: [ OFF ]
      ...                          lzma: [ OFF ]
      ...                     get_cpuid: [ OFF ]
      ...                           bpf: [ OFF ]
    
      Makefile.config:331: *** No gnu/libc-version.h found, please install glibc-dev[el].  Stop.
      make[1]: *** [Makefile.perf:206: sub-make] Error 2
      make: *** [Makefile:70: all] Error 2
      make: Leaving directory '/git/linux/tools/perf'
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Thiago Macieira <thiago.macieira@intel.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-c3khb9ac86s00qxzjrueomme@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c005e014fbc6391ed6f22b141865bf826bbc278d
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Wed Sep 12 08:23:01 2018 +0200

    ARM: dts: imx53-qsb: disable 1.2GHz OPP
    
    [ Upstream commit eea96566c189c77e5272585984eb2729881a2f1d ]
    
    The maximum CPU frequency for the i.MX53 QSB is 1GHz, so disable the
    1.2GHz OPP. This makes the board work again with configs that have
    cpufreq enabled like imx_v6_v7_defconfig on which the board stopped
    working with the addition of cpufreq-dt support.
    
    Fixes: 791f416608 ("ARM: dts: imx53: add cpufreq-dt support")
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c3bec81e267a6be198c540ea8d6f80e8f51b433
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Aug 20 15:36:17 2018 -0700

    compiler.h: Allow arch-specific asm/compiler.h
    
    [ Upstream commit 04f264d3a8b0eb25d378127bd78c3c9a0261c828 ]
    
    We have a need to override the definition of
    barrier_before_unreachable() for MIPS, which means we either need to add
    architecture-specific code into linux/compiler-gcc.h or we need to allow
    the architecture to provide a header that can define the macro before
    the generic definition. The latter seems like the better approach.
    
    A straightforward approach to the per-arch header is to make use of
    asm-generic to provide a default empty header & adjust architectures
    which don't need anything specific to make use of that by adding the
    header to generic-y. Unfortunately this doesn't work so well due to
    commit 28128c61e08e ("kconfig.h: Include compiler types to avoid missed
    struct attributes") which caused linux/compiler_types.h to be included
    in the compilation of every C file via the -include linux/kconfig.h flag
    in c_flags.
    
    Because the -include flag is present for all C files we compile, we need
    the architecture-provided header to be present before any C files are
    compiled. If any C files can be compiled prior to the asm-generic header
    wrappers being generated then we hit a build failure due to missing
    header. Such cases do exist - one pointed out by the kbuild test robot
    is the compilation of arch/ia64/kernel/nr-irqs.c, which occurs as part
    of the archprepare target [1].
    
    This leaves us with a few options:
    
      1) Use generic-y & fix any build failures we find by enforcing
         ordering such that the asm-generic target occurs before any C
         compilation, such that linux/compiler_types.h can always include
         the generated asm-generic wrapper which in turn includes the empty
         asm-generic header. This would rely on us finding all the
         problematic cases - I don't know for sure that the ia64 issue is
         the only one.
    
      2) Add an actual empty header to each architecture, so that we don't
         need the generated asm-generic wrapper. This seems messy.
    
      3) Give up & add #ifdef CONFIG_MIPS or similar to
         linux/compiler_types.h. This seems messy too.
    
      4) Include the arch header only when it's actually needed, removing
         the need for the asm-generic wrapper for all other architectures.
    
    This patch allows us to use approach 4, by including an asm/compiler.h
    header from linux/compiler_types.h after the inclusion of the
    compiler-specific linux/compiler-*.h header(s). We do this
    conditionally, only when CONFIG_HAVE_ARCH_COMPILER_H is selected, in
    order to avoid the need for asm-generic wrappers & the associated build
    ordering issue described above. The asm/compiler.h header is included
    after the generic linux/compiler-*.h header(s) for consistency with the
    way linux/compiler-intel.h & linux/compiler-clang.h are included after
    the linux/compiler-gcc.h header that they override.
    
    [1] https://lists.01.org/pipermail/kbuild-all/2018-August/051175.html
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20269/
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-arch@vger.kernel.org
    Cc: linux-kbuild@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8f4d375cd1ebc1bb5fbb174a0237eff24dcbd68
Author: Sandipan Das <sandipan@linux.ibm.com>
Date:   Thu Jul 26 22:47:33 2018 +0530

    perf tests: Fix indexing when invoking subtests
    
    [ Upstream commit aa90f9f9554616d5738f7bedb4a8f0e5e14d1bc6 ]
    
    Recently, the subtest numbering was changed to start from 1.  While it
    is fine for displaying results, this should not be the case when the
    subtests are actually invoked.
    
    Typically, the subtests are stored in zero-indexed arrays and invoked
    based on the index passed to the main test function.  Since the index
    now starts from 1, the second subtest in the array (index 1) gets
    invoked instead of the first (index 0).  This applies to all of the
    following subtests but for the last one, the subtest always fails
    because it does not meet the boundary condition of the subtest index
    being lesser than the number of subtests.
    
    This can be observed on powerpc64 and x86_64 systems running Fedora 28
    as shown below.
    
    Before:
    
      # perf test "builtin clang support"
      55: builtin clang support                                 :
      55.1: builtin clang compile C source to IR                : Ok
      55.2: builtin clang compile C source to ELF object        : FAILED!
    
      # perf test "LLVM search and compile"
      38: LLVM search and compile                               :
      38.1: Basic BPF llvm compile                              : Ok
      38.2: kbuild searching                                    : Ok
      38.3: Compile source for BPF prologue generation          : Ok
      38.4: Compile source for BPF relocation                   : FAILED!
    
      # perf test "BPF filter"
      40: BPF filter                                            :
      40.1: Basic BPF filtering                                 : Ok
      40.2: BPF pinning                                         : Ok
      40.3: BPF prologue generation                             : Ok
      40.4: BPF relocation checker                              : FAILED!
    
    After:
    
      # perf test "builtin clang support"
      55: builtin clang support                                 :
      55.1: builtin clang compile C source to IR                : Ok
      55.2: builtin clang compile C source to ELF object        : Ok
    
      # perf test "LLVM search and compile"
      38: LLVM search and compile                               :
      38.1: Basic BPF llvm compile                              : Ok
      38.2: kbuild searching                                    : Ok
      38.3: Compile source for BPF prologue generation          : Ok
      38.4: Compile source for BPF relocation                   : Ok
    
      # perf test "BPF filter"
      40: BPF filter                                            :
      40.1: Basic BPF filtering                                 : Ok
      40.2: BPF pinning                                         : Ok
      40.3: BPF prologue generation                             : Ok
      40.4: BPF relocation checker                              : Ok
    
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Reported-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Fixes: 9ef0112442bd ("perf test: Fix subtest number when showing results")
    Link: http://lkml.kernel.org/r/20180726171733.33208-1-sandipan@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 543f1084b67fb8ad62fc7398620e0ecd839594ea
Author: Daniel Mack <daniel@zonque.org>
Date:   Mon Oct 8 22:03:57 2018 +0200

    libertas: call into generic suspend code before turning off power
    
    [ Upstream commit 4f666675cdff0b986195413215eb062b7da6586f ]
    
    When powering down a SDIO connected card during suspend, make sure to call
    into the generic lbs_suspend() function before pulling the plug. This will
    make sure the card is successfully deregistered from the system to avoid
    communication to the card starving out.
    
    Fixes: 7444a8092906 ("libertas: fix suspend and resume for SDIO connected cards")
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Acked-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48f1b3b56ee4f936c105b550ca4357722d6460da
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Aug 9 15:47:06 2018 +0900

    kconfig: fix the rule of mainmenu_stmt symbol
    
    [ Upstream commit 56869d45e364244a721de34ce9c5dc9ed022779e ]
    
    The rule of mainmenu_stmt does not have debug print of zconf_lineno(),
    but if it had, it would print a wrong line number for the same reason
    as commit b2d00d7c61c8 ("kconfig: fix line numbers for if-entries in
    menu tree").
    
    The mainmenu_stmt does not need to eat following empty lines because
    they are reduced to common_stmt.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbc38304947ea2e57440bb38b733613e3f003605
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Aug 13 23:50:41 2018 +0200

    net: stmmac: mark PM functions as __maybe_unused
    
    [ Upstream commit 81a8b0799632627b587af31ecd06112397e4ec36 ]
    
    The newly added suspend/resume functions cause a build warning
    when CONFIG_PM is disabled:
    
    drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c:324:12: error: 'stmmac_pci_resume' defined but not used [-Werror=unused-function]
    drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c:306:12: error: 'stmmac_pci_suspend' defined but not used [-Werror=unused-function]
    
    Mark them as __maybe_unused so gcc can drop them silently.
    
    Fixes: b7d0f08e9129 ("net: stmmac: Fix WoL for PCI-based setups")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 726f05951941cc88e91b25b98921182cfc8d45f7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 19 13:35:53 2018 +0300

    x86/paravirt: Fix some warning messages
    
    [ Upstream commit 571d0563c8881595f4ab027aef9ed1c55e3e7b7c ]
    
    The first argument to WARN_ONCE() is a condition.
    
    Fixes: 5800dc5c19f3 ("x86/paravirt: Fix spectre-v2 mitigations for paravirt guests")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Alok Kataria <akataria@vmware.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: virtualization@lists.linux-foundation.org
    Cc: kernel-janitors@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180919103553.GD9238@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa3aff5b469b7520932fa8816efb78a0eaf012d4
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Sun May 20 20:49:47 2018 -0700

    net: phy: phylink: Don't release NULL GPIO
    
    [ Upstream commit 3bcd47726c3b744fd08781795cca905cc59a1382 ]
    
    If CONFIG_GPIOLIB is disabled, gpiod_put() becomes a stub that produces a
    warning, this helped identify that we could be attempting to release a NULL
    pl->link_gpio GPIO descriptor, so guard against that.
    
    Fixes: daab3349ad1a ("net: phy: phylink: Release link GPIO")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f72388e3670e870a32854058eff63d0021036457
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Jun 27 18:19:55 2018 +0800

    btrfs: quota: Set rescan progress to (u64)-1 if we hit last leaf
    
    [ Upstream commit 6f7de19ed3d4d3526ca5eca428009f97cf969c2f ]
    
    Commit ff3d27a048d9 ("btrfs: qgroup: Finish rescan when hit the last leaf
    of extent tree") added a new exit for rescan finish.
    
    However after finishing quota rescan, we set
    fs_info->qgroup_rescan_progress to (u64)-1 before we exit through the
    original exit path.
    While we missed that assignment of (u64)-1 in the new exit path.
    
    The end result is, the quota status item doesn't have the same value.
    (-1 vs the last bytenr + 1)
    Although it doesn't affect quota accounting, it's still better to keep
    the original behavior.
    
    Reported-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Fixes: ff3d27a048d9 ("btrfs: qgroup: Finish rescan when hit the last leaf of extent tree")
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c92c7e96fc447f62d3a7b8f6d1e932388b0b8df
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Wed Mar 14 12:15:56 2018 -0400

    scsi: sd: Remember that READ CAPACITY(16) succeeded
    
    [ Upstream commit 597d74005ba85e87c256cd732128ebf7faf54247 ]
    
    The USB storage glue sets the try_rc_10_first flag in an attempt to
    avoid wedging poorly implemented legacy USB devices.
    
    If the device capacity is too large to be expressed in the provided
    response buffer field of READ CAPACITY(10), a well-behaved device will
    set the reported capacity to 0xFFFFFFFF. We will then attempt to issue a
    READ CAPACITY(16) to obtain the real capacity.
    
    Since this part of the discovery logic is not covered by the first_scan
    flag, a warning will be printed a couple of times times per revalidate
    attempt if we upgrade from READ CAPACITY(10) to READ CAPACITY(16).
    
    Remember that we have successfully issued READ CAPACITY(16) so we can
    take the fast path on subsequent revalidate attempts.
    
    Reported-by: Menion <menion@gmail.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5aa0d86363b2f89789619907dd6f886989eb1c4a
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Wed Mar 14 17:13:39 2018 -0500

    scsi: ibmvfc: Avoid unnecessary port relogin
    
    [ Upstream commit 09dd15e0d9547ca424de4043bcd429bab6f285c8 ]
    
    Following an RSCN, ibmvfc will issue an ADISC to determine if the
    underlying target has changed, comparing the SCSI ID, WWPN, and WWNN to
    determine how to handle the rport in discovery. However, the comparison
    of the WWPN and WWNN was performing a memcmp between a big endian field
    against a CPU endian field, which resulted in the wrong answer on LE
    systems. This was observed as unexpected errors getting logged at boot
    time as targets were getting relogins when not needed.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07e2121f4f2b8f6534a3dc42d67fd32403c6b65e
Author: Michael Neuling <mikey@neuling.org>
Date:   Tue May 22 16:14:27 2018 +1000

    selftests/powerpc: Add ptrace hw breakpoint test
    
    [ Upstream commit 9c2ddfe55c42bf4b9bc336a0650ab78f9222a159 ]
    
    This test the ptrace hw breakpoints via PTRACE_SET_DEBUGREG and
    PPC_PTRACE_SETHWDEBUG.  This test was use to find the bugs fixed by
    these recent commits:
    
      4f7c06e26e powerpc/ptrace: Fix setting 512B aligned breakpoints with PTRACE_SET_DEBUGREG
      cd6ef7eebf powerpc/ptrace: Fix enforcement of DAWR constraints
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    [mpe: Add SPDX tag, clang format it]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 672fdbd5966e8182a0afbc0b178f03bb133cad5a
Author: Phil Reid <preid@electromag.com.au>
Date:   Tue Jun 5 14:15:10 2018 +0800

    iio: buffer: fix the function signature to match implementation
    
    [ Upstream commit 92397a6c38d139d50fabbe9e2dc09b61d53b2377 ]
    
    linux/iio/buffer-dma.h was not updated to when length was changed to
    unsigned int.
    
    Fixes: c043ec1ca5ba ("iio:buffer: make length types match kfifo types")
    Signed-off-by: Phil Reid <preid@electromag.com.au>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bee5f3d9530c5e4153c017190994b9a6b3144b7
Author: Govindarajulu Varadarajan <gvaradar@cisco.com>
Date:   Mon Jun 18 10:01:05 2018 -0700

    enic: do not overwrite error code
    
    [ Upstream commit 56f772279a762984f6e9ebbf24a7c829faba5712 ]
    
    In failure path, we overwrite err to what vnic_rq_disable() returns. In
    case it returns 0, enic_open() returns success in case of error.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Fixes: e8588e268509 ("enic: enable rq before updating rq descriptors")
    Signed-off-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9627a218e2b2a42b812499ccb5d92707482d5d0
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Tue Apr 10 13:18:25 2018 +0100

    lan78xx: Don't reset the interface on open
    
    [ Upstream commit 47b998653fea4ef69e3e89574956386f262bccca ]
    
    Commit 92571a1aae40 ("lan78xx: Connect phy early") moves the PHY
    initialisation into lan78xx_probe, but lan78xx_open subsequently calls
    lan78xx_reset. As well as forcing a second round of link negotiation,
    this reset frequently prevents the phy interrupt from being generated
    (even though the link is up), rendering the interface unusable.
    
    Fix this issue by removing the lan78xx_reset call from lan78xx_open.
    
    Fixes: 92571a1aae40 ("lan78xx: Connect phy early")
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f18ed65d70f019aae09437e5b6a317d365571208
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Aug 20 15:36:18 2018 -0700

    MIPS: Workaround GCC __builtin_unreachable reordering bug
    
    [ Upstream commit 906d441febc0de974b2a6ef848a8f058f3bfada3 ]
    
    Some versions of GCC for the MIPS architecture suffer from a bug which
    can lead to instructions from beyond an unreachable statement being
    incorrectly reordered into earlier branch delay slots if the unreachable
    statement is the only content of a case in a switch statement. This can
    lead to seemingly random behaviour, such as invalid memory accesses from
    incorrectly reordered loads or stores, and link failures on microMIPS
    builds.
    
    See this potential GCC fix for details:
    
        https://gcc.gnu.org/ml/gcc-patches/2015-09/msg00360.html
    
    Runtime problems resulting from this bug were initially observed using a
    maltasmvp_defconfig v4.4 kernel built using GCC 4.9.2 (from a Codescape
    SDK 2015.06-05 toolchain), with the result being an address exception
    taken after log messages about the L1 caches (during probe of the L2
    cache):
    
        Initmem setup node 0 [mem 0x0000000080000000-0x000000009fffffff]
        VPE topology {2,2} total 4
        Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.
        Primary data cache 64kB, 4-way, PIPT, no aliases, linesize 32 bytes
        <AdEL exception here>
    
    This is early enough that the kernel exception vectors are not in use,
    so any further output depends upon the bootloader. This is reproducible
    in QEMU where no further output occurs - ie. the system hangs here.
    Given the nature of the bug it may potentially be hit with differing
    symptoms. The bug is known to affect GCC versions as recent as 7.3, and
    it is unclear whether GCC 8 fixed it or just happens not to encounter
    the bug in the testcase found at the link above due to differing
    optimizations.
    
    This bug can be worked around by placing a volatile asm statement, which
    GCC is prevented from reordering past, prior to the
    __builtin_unreachable call.
    
    That was actually done already for other reasons by commit 173a3efd3edb
    ("bug.h: work around GCC PR82365 in BUG()"), but creates problems for
    microMIPS builds due to the lack of a .insn directive. The microMIPS ISA
    allows for interlinking with regular MIPS32 code by repurposing bit 0 of
    the program counter as an ISA mode bit. To switch modes one changes the
    value of this bit in the PC. However typical branch instructions encode
    their offsets as multiples of 2-byte instruction halfwords, which means
    they cannot change ISA mode - this must be done using either an indirect
    branch (a jump-register in MIPS terminology) or a dedicated jalx
    instruction. In order to ensure that regular branches don't attempt to
    target code in a different ISA which they can't actually switch to, the
    linker will check that branch targets are code in the same ISA as the
    branch.
    
    Unfortunately our empty asm volatile statements don't qualify as code,
    and the link for microMIPS builds fails with errors such as:
    
        arch/mips/mm/dma-default.s:3265: Error: branch to a symbol in another ISA mode
        arch/mips/mm/dma-default.s:5027: Error: branch to a symbol in another ISA mode
    
    Resolve this by adding a .insn directive within the asm statement which
    declares that what comes next is code. This may or may not be true,
    since we don't really know what comes next, but as this code is in an
    unreachable path anyway that doesn't matter since we won't execute it.
    
    We do this in asm/compiler.h & select CONFIG_HAVE_ARCH_COMPILER_H in
    order to have this included by linux/compiler_types.h after
    linux/compiler-gcc.h. This will result in asm/compiler.h being included
    in all C compilations via the -include linux/compiler_types.h argument
    in c_flags, which should be harmless.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 173a3efd3edb ("bug.h: work around GCC PR82365 in BUG()")
    Patchwork: https://patchwork.linux-mips.org/patch/20270/
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f274c57f0479e860f40bad85b046967e3af04f40
Author: John Keeping <john@metanate.com>
Date:   Thu Mar 1 10:36:25 2018 +0000

    mmc: dw_mmc-rockchip: correct property names in debug
    
    [ Upstream commit e988867fd774d00aeaf5d3c332032bf5b97a4147 ]
    
    Following up the device tree fixed in commits e78c637127ee ("ARM: dts:
    rockchip: Fix DWMMC clocks") and ca9eee95a2de ("arm64: dts: rockchip:
    Fix DWMMC clocks", 2018-02-15), avoid confusion by using the correct
    property name in the debug output if clocks are not found.
    
    Signed-off-by: John Keeping <john@metanate.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6df57b60b86698cd2e3cc00cb773e06e96df604
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Jun 13 11:19:42 2018 -0600

    IB/usnic: Update with bug fixes from core code
    
    [ Upstream commit 43cbd64b1fdc1da89abdad88a022d9e87a98e9c6 ]
    
    usnic has a modified version of the core codes' ib_umem_get() and
    related, and the copy misses many of the bug fixes done over the years:
    
    Commit bc3e53f682d9 ("mm: distinguish between mlocked and pinned pages")
    Commit 87773dd56d54 ("IB: ib_umem_release() should decrement mm->pinned_vm
                          from ib_umem_get")
    Commit 8494057ab5e4 ("IB/uverbs: Prevent integer overflow in ib_umem_get
                          address arithmetic")
    Commit 8abaae62f3fd ("IB/core: disallow registering 0-sized memory region")
    Commit 66578b0b2f69 ("IB/core: don't disallow registering region starting
                          at 0x0")
    Commit 53376fedb9da ("RDMA/core: not to set page dirty bit if it's already
                          set.")
    Commit 8e907ed48827 ("IB/umem: Use the correct mm during ib_umem_release")
    
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d29f27192a2d88d9255265b258abaeef1ee1726f
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:20 2018 +0100

    xen-netfront: Fix mismatched rtnl_unlock
    
    [ Upstream commit cb257783c2927b73614b20f915a91ff78aa6f3e8 ]
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0fcefb70022c7b39a873b16e36fca40eb354ec8
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:21 2018 +0100

    xen-netfront: Update features after registering netdev
    
    [ Upstream commit 45c8184c1bed1ca8a7f02918552063a00b909bf5 ]
    
    Update the features after calling register_netdev() otherwise the
    device features are not set up correctly and it not possible to change
    the MTU of the device. After this change, the features reported by
    ethtool match the device's features before the commit which introduced
    the issue and it is possible to change the device's MTU.
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Liam Shepherd <liam@dancer.es>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9de255666ce3729cdd50e7defb649b82dbb538f6
Author: Winkler, Tomas <tomas.winkler@intel.com>
Date:   Sat Apr 7 19:12:36 2018 +0300

    tpm: tpm_crb: relinquish locality on error path.
    
    [ Upstream commit 1fbad3028664e114d210dc65d768947a3a553eaa ]
    
    In crb_map_io() function, __crb_request_locality() is called prior
    to crb_cmd_ready(), but if one of the consecutive function fails
    the flow bails out instead of trying to relinquish locality.
    This patch adds goto jump to __crb_relinquish_locality() on the error path.
    
    Fixes: 888d867df441 (tpm: cmd_ready command can be issued only after granting locality)
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c0cff34e91e4ea1fdf74df65db98ee455190dfa
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Mon Apr 23 15:39:23 2018 -0700

    bpf: sockmap, map_release does not hold refcnt for pinned maps
    
    [ Upstream commit ba6b8de423f8d0dee48d6030288ed81c03ddf9f0 ]
    
    Relying on map_release hook to decrement the reference counts when a
    map is removed only works if the map is not being pinned. In the
    pinned case the ref is decremented immediately and the BPF programs
    released. After this BPF programs may not be in-use which is not
    what the user would expect.
    
    This patch moves the release logic into bpf_map_put_uref() and brings
    sockmap in-line with how a similar case is handled in prog array maps.
    
    Fixes: 3d9e952697de ("bpf: sockmap, fix leaking maps with attached but not detached progs")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db9d15988afb923b6e559c8aa3ef56d596f74524
Author: Nayna Jain <nayna@linux.vnet.ibm.com>
Date:   Mon Apr 2 21:50:06 2018 +0530

    tpm: move the delay_msec increment after sleep in tpm_transmit()
    
    [ Upstream commit 92980756979a9c51be0275f395f4e89c42cf199a ]
    
    Commit e2fb992d82c6 ("tpm: add retry logic") introduced a new loop to
    handle the TPM2_RC_RETRY error. The loop retries the command after
    sleeping for the specified time, which is incremented exponentially in
    every iteration.
    
    Unfortunately, the loop doubles the time before sleeping, causing the
    initial sleep to be doubled. This patch fixes the initial sleep time.
    
    Fixes: commit e2fb992d82c6 ("tpm: add retry logic")
    Signed-off-by: Nayna Jain <nayna@linux.vnet.ibm.com>
    Reviewed-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1fdafea627c843099518ebb5ec3fcc9396ae4a8
Author: David S. Miller <davem@davemloft.net>
Date:   Thu Mar 15 14:18:00 2018 -0700

    sparc64: Fix regression in pmdp_invalidate().
    
    [ Upstream commit cfb61b5e3e09f8b49bc4d685429df75f45127adc ]
    
    pmdp_invalidate() was changed to update the pmd atomically
    (to not lose dirty/access bits) and return the original pmd
    value.
    
    However, in doing so, we lost a lot of the essential work that
    set_pmd_at() does, namely to update hugepage mapping counts and
    queuing up the batched TLB flush entry.
    
    Thus we were not flushing entries out of the TLB when making
    such PMD changes.
    
    Fix this by abstracting the accounting work of set_pmd_at() out into a
    separate function, and call it from pmdp_establish().
    
    Fixes: a8e654f01cb7 ("sparc64: update pmdp_invalidate() to return old pmd value")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 090246ff5f6c38b0219564d0d46ae52cac22e243
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Wed Feb 28 19:06:48 2018 +0100

    KVM: x86: Update the exit_qualification access bits while walking an address
    
    [ Upstream commit ddd6f0e94d3153951580d5b88b9d97c7e26a0e00 ]
    
    ... to avoid having a stale value when handling an EPT misconfig for MMIO
    regions.
    
    MMIO regions that are not passed-through to the guest are handled through
    EPT misconfigs. The first time a certain MMIO page is touched it causes an
    EPT violation, then KVM marks the EPT entry to cause an EPT misconfig
    instead. Any subsequent accesses to the entry will generate an EPT
    misconfig.
    
    Things gets slightly complicated with nested guest handling for MMIO
    regions that are not passed through from L0 (i.e. emulated by L0
    user-space).
    
    An EPT violation for one of these MMIO regions from L2, exits to L0
    hypervisor. L0 would then look at the EPT12 mapping for L1 hypervisor and
    realize it is not present (or not sufficient to serve the request). Then L0
    injects an EPT violation to L1. L1 would then update its EPT mappings. The
    EXIT_QUALIFICATION value for L1 would come from exit_qualification variable
    in "struct vcpu". The problem is that this variable is only updated on EPT
    violation and not on EPT misconfig. So if an EPT violation because of a
    read happened first, then an EPT misconfig because of a write happened
    afterwards. The L0 hypervisor will still contain exit_qualification value
    from the previous read instead of the write and end up injecting an EPT
    violation to the L1 hypervisor with an out of date EXIT_QUALIFICATION.
    
    The EPT violation that is injected from L0 to L1 needs to have the correct
    EXIT_QUALIFICATION specially for the access bits because the individual
    access bits for MMIO EPTs are updated only on actual access of this
    specific type. So for the example above, the L1 hypervisor will keep
    updating only the read bit in the EPT then resume the L2 guest. The L2
    guest would end up causing another exit where the L0 *again* will inject
    another EPT violation to L1 hypervisor with *again* an out of date
    exit_qualification which indicates a read and not a write. Then this
    ping-pong just keeps happening without making any forward progress.
    
    The behavior of mapping MMIO regions changed in:
    
       commit a340b3e229b24 ("kvm: Map PFN-type memory regions as writable (if possible)")
    
    ... where an EPT violation for a read would also fixup the write bits to
    avoid another EPT violation which by acciddent would fix the bug mentioned
    above.
    
    This commit fixes this situation and ensures that the access bits for the
    exit_qualifcation is up to date. That ensures that even L1 hypervisor
    running with a KVM version before the commit mentioned above would still
    work.
    
    ( The description above assumes EPT to be available and used by L1
      hypervisor + the L1 hypervisor is passing through the MMIO region to the L2
      guest while this MMIO region is emulated by the L0 user-space ).
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: x86@kernel.org
    Cc: kvm@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d768c84ec311468d7fd61250700ef8b21f8cf6d
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Mar 20 09:58:51 2018 -0300

    test_bpf: Fix testing with CONFIG_BPF_JIT_ALWAYS_ON=y on other arches
    
    [ Upstream commit 52fda36d63bfc8c8e8ae5eda8eb5ac6f52cd67ed ]
    
    Function bpf_fill_maxinsns11 is designed to not be able to be JITed on
    x86_64. So, it fails when CONFIG_BPF_JIT_ALWAYS_ON=y, and
    commit 09584b406742 ("bpf: fix selftests/bpf test_kmod.sh failure when
    CONFIG_BPF_JIT_ALWAYS_ON=y") makes sure that failure is detected on that
    case.
    
    However, it does not fail on other architectures, which have a different
    JIT compiler design. So, test_bpf has started to fail to load on those.
    
    After this fix, test_bpf loads fine on both x86_64 and ppc64el.
    
    Fixes: 09584b406742 ("bpf: fix selftests/bpf test_kmod.sh failure when CONFIG_BPF_JIT_ALWAYS_ON=y")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Reviewed-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f041940aaf2674dcccd15753d68ff885f90d5e7
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Apr 5 14:57:11 2018 +0200

    cifs: Use ULL suffix for 64-bit constant
    
    [ Upstream commit 3995bbf53bd2047f2720c6fdd4bf38f6d942a0c0 ]
    
    On 32-bit (e.g. with m68k-linux-gnu-gcc-4.1):
    
        fs/cifs/inode.c: In function ‘simple_hashstr’:
        fs/cifs/inode.c:713: warning: integer constant is too large for ‘long’ type
    
    Fixes: 7ea884c77e5c97f1 ("smb3: Fix root directory when server returns inode number of zero")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c097f55e980d5578bec4e5d99759ead834a6358
Author: James Chapman <jchapman@katalix.com>
Date:   Wed Jan 3 22:48:06 2018 +0000

    l2tp: remove configurable payload offset
    
    [ Upstream commit 900631ee6a2651dc4fbaecb8ef9fa5f1e3378853 ]
    
    If L2TP_ATTR_OFFSET is set to a non-zero value in L2TPv3 tunnels, it
    results in L2TPv3 packets being transmitted which might not be
    compliant with the L2TPv3 RFC. This patch has l2tp ignore the offset
    setting and send all packets with no offset.
    
    In more detail:
    
    L2TPv2 supports a variable offset from the L2TPv2 header to the
    payload. The offset value is indicated by an optional field in the
    L2TP header.  Our L2TP implementation already detects the presence of
    the optional offset and skips that many bytes when handling data
    received packets. All transmitted packets are always transmitted with
    no offset.
    
    L2TPv3 has no optional offset field in the L2TPv3 packet
    header. Instead, L2TPv3 defines optional fields in a "Layer-2 Specific
    Sublayer". At the time when the original L2TP code was written, there
    was talk at IETF of offset being implemented in a new Layer-2 Specific
    Sublayer. A L2TP_ATTR_OFFSET netlink attribute was added so that this
    offset could be configured and the intention was to allow it to be
    also used to set the tx offset for L2TPv2. However, no L2TPv3 offset
    was ever specified and the L2TP_ATTR_OFFSET parameter was forgotten
    about.
    
    Setting L2TP_ATTR_OFFSET results in L2TPv3 packets being transmitted
    with the specified number of bytes padding between L2TPv3 header and
    payload. This is not compliant with L2TPv3 RFC3931. This change
    removes the configurable offset altogether while retaining
    L2TP_ATTR_OFFSET for backwards compatibility. Any L2TP_ATTR_OFFSET
    value is ignored.
    
    Signed-off-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b39ac54215190bc178ae7de799e74d327a3c1a33
Author: Marcel Ziswiler <marcel.ziswiler@toradex.com>
Date:   Thu Feb 22 15:38:25 2018 +0100

    ARM: tegra: Fix ULPI regression on Tegra20
    
    [ Upstream commit 4c9a27a6c66d4427f3cba4019d4ba738fe99fa87 ]
    
    Since commit f8f8f1d04494 ("clk: Don't touch hardware when reparenting
    during registration") ULPI has been broken on Tegra20 leading to the
    following error message during boot:
    
    [    1.974698] ulpi_phy_power_on: ulpi write failed
    [    1.979384] tegra-ehci c5004000.usb: Failed to power on the phy
    [    1.985434] tegra-ehci: probe of c5004000.usb failed with error -110
    
    Debugging through the changes and finally also consulting the TRM
    revealed that rather than the CDEV2 clock off OSC requiring such pin
    muxing actually the PLL_P_OUT4 clock is in use. It looks like so far it
    just worked by chance of that one having been enabled which Stephen's
    commit now changed when reparenting sclk away from pll_p_out4 leaving
    that one disabled. Fix this by properly assigning the PLL_P_OUT4 clock
    as the ULPI PHY clock.
    
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Reviewed-by: Dmitry Osipenko <digetx@gmail.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 579493b9f689910b49c071d0acdec43c4f447d65
Author: Noa Osherovich <noaos@mellanox.com>
Date:   Sun Feb 25 13:39:51 2018 +0200

    IB/mlx5: Avoid passing an invalid QP type to firmware
    
    [ Upstream commit e7b169f34403becd3c9fd3b6e46614ab788f2187 ]
    
    During QP creation, the mlx5 driver translates the QP type to an
    internal value which is passed on to FW. There was no check to make
    sure that the translated value is valid, and -EINVAL was coerced into
    the mailbox command.
    
    Current firmware refuses this as an invalid QP type, but future/past
    firmware may do something else.
    
    Fixes: 09a7d9eca1a6c ('{net,IB}/mlx5: QP/XRCD commands via mlx5 ifc')
    Reviewed-by: Ilya Lesokhin <ilyal@mellanox.com>
    Signed-off-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cfb67394a42072981c2884114b3850a3cdd5b2b
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Mar 19 22:12:53 2018 +0100

    kbuild: set no-integrated-as before incl. arch Makefile
    
    [ Upstream commit 0f0e8de334c54c38818a4a5390a39aa09deff5bf ]
    
    In order to make sure compiler flag detection for ARM works
    correctly the no-integrated-as flags need to be set before
    including the arch specific Makefile.
    
    Fixes: cfe17c9bbe6a ("kbuild: move cc-option and cc-disable-warning after incl. arch Makefile")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a972222a6a3004df0ba6295d9ea14617dff0964a
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Tue Mar 20 21:05:48 2018 +0000

    scsi: qla2xxx: Avoid double completion of abort command
    
    [ Upstream commit 3a9910d7b686546dcc9986e790af17e148f1c888 ]
    
    qla2x00_tmf_sp_done() now deletes the timer that will run
    qla2x00_tmf_iocb_timeout(), but doesn't check whether the timer already
    expired.  Check the return value from del_timer() to avoid calling
    complete() a second time.
    
    Fixes: 4440e46d5db7 ("[SCSI] qla2xxx: Add IOCB Abort command asynchronous ...")
    Fixes: 1514839b3664 ("scsi: qla2xxx: Fix NULL pointer crash due to active ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 651f11a83af35ea3c57d53dcb8a4a6640bb3fb5d
Author: Shay Agroskin <shayag@mellanox.com>
Date:   Wed Jun 27 15:43:07 2018 +0300

    net/mlx5e: Refine ets validation function
    
    [ Upstream commit e279d634f3d57452eb106a0c0e99a6add3fba1a6 ]
    
    Removed an error message received when configuring ETS total
    bandwidth to be zero.
    Our hardware doesn't support such configuration, so we shall
    reject it in the driver. Nevertheless, we removed the error message
    in order to eliminate error messages caused by old userspace tools
    who try to pass such configuration.
    
    Fixes: ff0891915cd7 ("net/mlx5e: Fix ETS BW check")
    Signed-off-by: Shay Agroskin <shayag@mellanox.com>
    Reviewed-by: Huy Nguyen <huyn@mellanox.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b882dbba71768ff1d9a70e85488a9b5210f7b8f
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Mar 20 09:44:52 2018 +0800

    net: phy: Add general dummy stubs for MMD register access
    
    [ Upstream commit 5df7af85ecd88e8b5f1f31d6456c3cf38a8bbdda ]
    
    For some phy devices, even though they don't support the MMD extended
    register access, it does have some side effect if we are trying to
    read/write the MMD registers via indirect method. So introduce general
    dummy stubs for MMD register access which these devices can use to avoid
    such side effect.
    
    Fixes: b6b5e8a69118 ("gianfar: Disable EEE autoneg by default")
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d9d7f018464129de99ba5c63e00866a3a88750c
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Mar 20 09:44:53 2018 +0800

    net: phy: realtek: Use the dummy stubs for MMD register access for rtl8211b
    
    [ Upstream commit 0231b1a074c672f8c00da00a57144072890d816b ]
    
    The Ethernet on mpc8315erdb is broken since commit b6b5e8a69118
    ("gianfar: Disable EEE autoneg by default"). The reason is that
    even though the rtl8211b doesn't support the MMD extended registers
    access, it does return some random values if we trying to access
    the MMD register via indirect method. This makes it seem that the
    EEE is supported by this phy device. And the subsequent writing to
    the MMD registers does cause the phy malfunction. So use the dummy
    stubs for the MMD register access to fix this issue.
    
    Fixes: b6b5e8a69118 ("gianfar: Disable EEE autoneg by default")
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fbd26a1484c5819208b87e54d35515fd678a140
Author: Milan Broz <gmazyland@gmail.com>
Date:   Tue Feb 13 14:50:50 2018 +0100

    dm integrity: fail early if required HMAC key is not available
    
    [ Upstream commit e16b4f99f0f79682a7efe191a8ce694d87ca9fc8 ]
    
    Since crypto API commit 9fa68f62004 ("crypto: hash - prevent using keyed
    hashes without setting key") dm-integrity cannot use keyed algorithms
    without the key being set.
    
    The dm-integrity recognizes this too late (during use of HMAC), so it
    allows creation and formatting of superblock, but the device is in fact
    unusable.
    
    Fix it by detecting the key requirement in integrity table constructor.
    
    Signed-off-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa2a0c23c9b7e6fb17db4c77cbe0967512f5d274
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Feb 14 12:17:47 2018 +0000

    powerpc/pseries: Add empty update_numa_cpu_lookup_table() for NUMA=n
    
    [ Upstream commit c1e150ceb61e4a585bad156da15c33bfe89f5858 ]
    
    When CONFIG_NUMA is not set, the build fails with:
    
      arch/powerpc/platforms/pseries/hotplug-cpu.c:335:4:
      error: déclaration implicite de la fonction « update_numa_cpu_lookup_table »
    
    So we have to add update_numa_cpu_lookup_table() as an empty function
    when CONFIG_NUMA is not set.
    
    Fixes: 1d9a090783be ("powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71a9d1240a30504af52fdd48995a3c9ef2cc467c
Author: Israel Rukshin <israelr@mellanox.com>
Date:   Thu Apr 12 09:49:11 2018 +0000

    net/mlx5: Fix mlx5_get_vector_affinity function
    
    [ Upstream commit 6082d9c9c94a408d7409b5f2e4e42ac9e8b16d0d ]
    
    Adding the vector offset when calling to mlx5_vector2eqn() is wrong.
    This is because mlx5_vector2eqn() checks if EQ index is equal to vector number
    and the fact that the internal completion vectors that mlx5 allocates
    don't get an EQ index.
    
    The second problem here is that using effective_affinity_mask gives the same
    CPU for different vectors.
    This leads to unmapped queues when calling it from blk_mq_rdma_map_queues().
    This doesn't happen when using affinity_hint mask.
    
    Fixes: 2572cf57d75a ("mlx5: fix mlx5_get_vector_affinity to start from completion vector 0")
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Signed-off-by: Israel Rukshin <israelr@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 049fee28bba39dcf1bcec5fa56fa2a8eefd2e853
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Thu Apr 19 12:52:06 2018 +0200

    s390/qeth: fix error handling in adapter command callbacks
    
    [ Upstream commit 686c97ee29c886ee07d17987d0059874c5c3b5af ]
    
    Make sure to check both return code fields before(!) processing the
    command response. Otherwise we risk operating on invalid data.
    
    This matches an earlier fix for SETASSPARMS commands, see
    commit ad3cbf613329 ("s390/qeth: fix error handling in checksum cmd callback").
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18addd960fe854df99727139040535e72addc6ea
Author: Doug Ledford <dledford@redhat.com>
Date:   Mon Oct 9 09:11:32 2017 -0400

    IB/rxe: put the pool on allocation failure
    
    [ Upstream commit 6b9f8970cd30929cb6b372fa44fa66da9e59c650 ]
    
    If the allocation of elem fails, it is not sufficient to simply check
    for NULL and return.  We need to also put our reference on the pool or
    else we will leave the pool with a permanent ref count and we will never
    be able to free it.
    
    Fixes: 4831ca9e4a8e ("IB/rxe: check for allocation failure on elem")
    Suggested-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c954368de6915c4dcbbceca279758ab654bad37
Author: Alex Vesker <valex@mellanox.com>
Date:   Thu Dec 21 17:38:27 2017 +0200

    IB/ipoib: Fix lockdep issue found on ipoib_ib_dev_heavy_flush
    
    [ Upstream commit 1f80bd6a6cc8358b81194e1f5fc16449947396ec ]
    
    The locking order of vlan_rwsem (LOCK A) and then rtnl (LOCK B),
    contradicts other flows such as ipoib_open possibly causing a deadlock.
    To prevent this deadlock heavy flush is called with RTNL locked and
    only then tries to acquire vlan_rwsem.
    This deadlock is possible only when there are child interfaces.
    
    [  140.941758] ======================================================
    [  140.946276] WARNING: possible circular locking dependency detected
    [  140.950950] 4.15.0-rc1+ #9 Tainted: G           O
    [  140.954797] ------------------------------------------------------
    [  140.959424] kworker/u32:1/146 is trying to acquire lock:
    [  140.963450]  (rtnl_mutex){+.+.}, at: [<ffffffffc083516a>] __ipoib_ib_dev_flush+0x2da/0x4e0 [ib_ipoib]
    [  140.970006]
    but task is already holding lock:
    [  140.975141]  (&priv->vlan_rwsem){++++}, at: [<ffffffffc0834ee1>] __ipoib_ib_dev_flush+0x51/0x4e0 [ib_ipoib]
    [  140.982105]
    which lock already depends on the new lock.
    [  140.990023]
    the existing dependency chain (in reverse order) is:
    [  140.998650]
    -> #1 (&priv->vlan_rwsem){++++}:
    [  141.005276]        down_read+0x4d/0xb0
    [  141.009560]        ipoib_open+0xad/0x120 [ib_ipoib]
    [  141.014400]        __dev_open+0xcb/0x140
    [  141.017919]        __dev_change_flags+0x1a4/0x1e0
    [  141.022133]        dev_change_flags+0x23/0x60
    [  141.025695]        devinet_ioctl+0x704/0x7d0
    [  141.029156]        sock_do_ioctl+0x20/0x50
    [  141.032526]        sock_ioctl+0x221/0x300
    [  141.036079]        do_vfs_ioctl+0xa6/0x6d0
    [  141.039656]        SyS_ioctl+0x74/0x80
    [  141.042811]        entry_SYSCALL_64_fastpath+0x1f/0x96
    [  141.046891]
    -> #0 (rtnl_mutex){+.+.}:
    [  141.051701]        lock_acquire+0xd4/0x220
    [  141.055212]        __mutex_lock+0x88/0x970
    [  141.058631]        __ipoib_ib_dev_flush+0x2da/0x4e0 [ib_ipoib]
    [  141.063160]        __ipoib_ib_dev_flush+0x71/0x4e0 [ib_ipoib]
    [  141.067648]        process_one_work+0x1f5/0x610
    [  141.071429]        worker_thread+0x4a/0x3f0
    [  141.074890]        kthread+0x141/0x180
    [  141.078085]        ret_from_fork+0x24/0x30
    [  141.081559]
    
    other info that might help us debug this:
    [  141.088967]  Possible unsafe locking scenario:
    [  141.094280]        CPU0                    CPU1
    [  141.097953]        ----                    ----
    [  141.101640]   lock(&priv->vlan_rwsem);
    [  141.104771]                                lock(rtnl_mutex);
    [  141.109207]                                lock(&priv->vlan_rwsem);
    [  141.114032]   lock(rtnl_mutex);
    [  141.116800]
     *** DEADLOCK ***
    
    Fixes: b4b678b06f6e ("IB/ipoib: Grab rtnl lock on heavy flush when calling ndo_open/stop")
    Signed-off-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c750773f3942863a37e7415934a646a0da7b1040
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Nov 28 14:25:25 2017 +0100

    scsi: aacraid: address UBSAN warning regression
    
    [ Upstream commit d18539754d97876503275efc7d00a1901bb0cfad ]
    
    As reported by Meelis Roos, my previous patch causes an incorrect
    calculation of the timeout, through an undefined signed integer
    overflow:
    
    [   12.228155] UBSAN: Undefined behaviour in drivers/scsi/aacraid/commsup.c:2514:49
    [   12.228229] signed integer overflow:
    [   12.228283] 964297611 * 250 cannot be represented in type 'long int'
    
    The problem is that doing a multiplication with HZ first and then
    dividing by USEC_PER_SEC worked correctly for 32-bit microseconds,
    but not for 32-bit nanoseconds, which would require up to 41 bits.
    
    This reworks the calculation to first convert the nanoseconds into
    jiffies, which should give us the same result as before and not overflow.
    
    Unfortunately I did not understand the exact intention of the algorithm,
    in particular the part where we add half a second, so it's possible that
    there is still a preexisting problem in this function. I added a comment
    that this would be handled more nicely using usleep_range(), which
    generally works better for waking up at a particular time than the
    current schedule_timeout() based implementation. I did not feel
    comfortable trying to implement that without being sure what the
    intent is here though.
    
    Fixes: 820f18865912 ("scsi: aacraid: use timespec64 instead of timeval")
    Tested-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b6c6d9cbdea50aed8f6bf22575461d8009e3951
Author: Shuah Khan <shuah@kernel.org>
Date:   Thu Jan 18 17:25:30 2018 -0700

    usbip: vhci_hcd: update 'status' file header and format
    
    [ Upstream commit 5468099c747240ed97dbb34340fece8ca87be34f ]
    
    Commit 2f2d0088eb93
    ("usbip: prevent vhci_hcd driver from leaking a socket pointer address")
    in the /sys/devices/platform/vhci_hcd/status.
    
    Fix the header and field alignment to reflect the changes and make it
    easier to read.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e37e383a4e6610b5a78111f88d2a74f2a533f78c
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Sun Nov 12 14:54:23 2017 -0800

    tools/testing/nvdimm: unit test clear-error commands
    
    [ Upstream commit fb2a1748355161e050e9f49f1ea9a0ae707a148b ]
    
    Validate command parsing in acpi_nfit_ctl for the clear error command.
    This tests for a crash condition introduced by commit 4b27db7e26cd
    "acpi, nfit: add support for the _LSI, _LSR, and _LSW label methods".
    
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18a83c0133928c5162c607a45fe541687adc03b1
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Tue Nov 7 23:54:17 2017 +0200

    iwlwifi: fix the ALIVE notification layout
    
    [ Upstream commit 5cd2d8fc6c6bca979ac5dd8ad0e41153f1f982f9 ]
    
    The ucode_major and ucode_minor were swapped. This has
    no practical consequences since those fields are not used.
    Same goes for umac_major and umac_minor which were only
    printed under certain debug flags.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4187fbd60c3993ca4a26b20db218dd4023df841c
Author: Liad Kaufman <liad.kaufman@intel.com>
Date:   Tue Oct 31 15:54:50 2017 +0200

    iwlwifi: dbg: allow wrt collection before ALIVE
    
    [ Upstream commit dfd4b08cf44f27587e2053e006e43a1603328006 ]
    
    Even if no ALIVE was received, the WRT data can still
    be collected. Add this.
    
    Signed-off-by: Liad Kaufman <liad.kaufman@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1efab095c20ee5051d3273123d950da4e88361e
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Sun Oct 29 10:46:39 2017 +0200

    iwlwifi: mvm: check for short GI only for OFDM
    
    [ Upstream commit 4c59ff5a9a9c54cc26c807dc2fa6933f7e9fa4ef ]
    
    This bit will be used in CCK to indicate short preamble.
    
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f83f38fcf17fffd875f1f7f20213aaf4dfdbe5d0
Author: Larry Chen <lchen@suse.com>
Date:   Fri Oct 5 15:51:37 2018 -0700

    ocfs2: fix crash in ocfs2_duplicate_clusters_by_page()
    
    [ Upstream commit 69eb7765b9c6902444c89c54e7043242faf981e5 ]
    
    ocfs2_duplicate_clusters_by_page() may crash if one of the extent's pages
    is dirty.  When a page has not been written back, it is still in dirty
    state.  If ocfs2_duplicate_clusters_by_page() is called against the dirty
    page, the crash happens.
    
    To fix this bug, we can just unlock the page and wait until the page until
    its not dirty.
    
    The following is the backtrace:
    
    kernel BUG at /root/code/ocfs2/refcounttree.c:2961!
    [exception RIP: ocfs2_duplicate_clusters_by_page+822]
    __ocfs2_move_extent+0x80/0x450 [ocfs2]
    ? __ocfs2_claim_clusters+0x130/0x250 [ocfs2]
    ocfs2_defrag_extent+0x5b8/0x5e0 [ocfs2]
    __ocfs2_move_extents_range+0x2a4/0x470 [ocfs2]
    ocfs2_move_extents+0x180/0x3b0 [ocfs2]
    ? ocfs2_wait_for_recovery+0x13/0x70 [ocfs2]
    ocfs2_ioctl_move_extents+0x133/0x2d0 [ocfs2]
    ocfs2_ioctl+0x253/0x640 [ocfs2]
    do_vfs_ioctl+0x90/0x5f0
    SyS_ioctl+0x74/0x80
    do_syscall_64+0x74/0x140
    entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    Once we find the page is dirty, we do not wait until it's clean, rather we
    use write_one_page() to write it back
    
    Link: http://lkml.kernel.org/r/20180829074740.9438-1-lchen@suse.com
    [lchen@suse.com: update comments]
      Link: http://lkml.kernel.org/r/20180830075041.14879-1-lchen@suse.com
    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Larry Chen <lchen@suse.com>
    Acked-by: Changwei Ge <ge.changwei@h3c.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0539c56391d449603f7ff2bcddf38995df49749
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Fri Oct 5 10:59:36 2018 -0500

    yam: fix a missing-check bug
    
    [ Upstream commit 0781168e23a2fc8dceb989f11fc5b39b3ccacc35 ]
    
    In yam_ioctl(), the concrete ioctl command is firstly copied from the
    user-space buffer 'ifr->ifr_data' to 'ioctl_cmd' and checked through the
    following switch statement. If the command is not as expected, an error
    code EINVAL is returned. In the following execution the buffer
    'ifr->ifr_data' is copied again in the cases of the switch statement to
    specific data structures according to what kind of ioctl command is
    requested. However, after the second copy, no re-check is enforced on the
    newly-copied command. Given that the buffer 'ifr->ifr_data' is in the user
    space, a malicious user can race to change the command between the two
    copies. This way, the attacker can inject inconsistent data and cause
    undefined behavior.
    
    This patch adds a re-check in each case of the switch statement if there is
    a second copy in that case, to re-check whether the command obtained in the
    second copy is the same as the one in the first copy. If not, an error code
    EINVAL will be returned.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec4e9618d1fdc980b7018c698cccbc1bbcd6e3fc
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Fri Oct 5 08:48:27 2018 -0500

    net: cxgb3_main: fix a missing-check bug
    
    [ Upstream commit 2c05d88818ab6571816b93edce4d53703870d7ae ]
    
    In cxgb_extension_ioctl(), the command of the ioctl is firstly copied from
    the user-space buffer 'useraddr' to 'cmd' and checked through the
    switch statement. If the command is not as expected, an error code
    EOPNOTSUPP is returned. In the following execution, i.e., the cases of the
    switch statement, the whole buffer of 'useraddr' is copied again to a
    specific data structure, according to what kind of command is requested.
    However, after the second copy, there is no re-check on the newly-copied
    command. Given that the buffer 'useraddr' is in the user space, a malicious
    user can race to change the command between the two copies. By doing so,
    the attacker can supply malicious data to the kernel and cause undefined
    behavior.
    
    This patch adds a re-check in each case of the switch statement if there is
    a second copy in that case, to re-check whether the command obtained in the
    second copy is the same as the one in the first copy. If not, an error code
    EINVAL is returned.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 049b662eeaddf34fab850cc4023d8cc1a7709ef6
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Oct 3 15:20:58 2018 +0200

    be2net: don't flip hw_features when VXLANs are added/deleted
    
    [ Upstream commit 2d52527e80c2dc0c5f43f50adf183781262ec565 ]
    
    the be2net implementation of .ndo_tunnel_{add,del}() changes the value of
    NETIF_F_GSO_UDP_TUNNEL bit in 'features' and 'hw_features', but it forgets
    to call netdev_features_change(). Moreover, ethtool setting for that bit
    can potentially be reverted after a tunnel is added or removed.
    
    GSO already does software segmentation when 'hw_enc_features' is 0, even
    if VXLAN offload is turned on. In addition, commit 096de2f83ebc ("benet:
    stricter vxlan offloading check in be_features_check") avoids hardware
    segmentation of non-VXLAN tunneled packets, or VXLAN packets having wrong
    destination port. So, it's safe to avoid flipping the above feature on
    addition/deletion of VXLAN tunnels.
    
    Fixes: 630f4b70567f ("be2net: Export tunnel offloads only when a VxLAN tunnel is created")
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45894023bee9e2733083891650b03eaa2ce794a1
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Oct 2 14:48:49 2018 -0700

    locking/ww_mutex: Fix runtime warning in the WW mutex selftest
    
    [ Upstream commit e4a02ed2aaf447fa849e3254bfdb3b9b01e1e520 ]
    
    If CONFIG_WW_MUTEX_SELFTEST=y is enabled, booting an image
    in an arm64 virtual machine results in the following
    traceback if 8 CPUs are enabled:
    
      DEBUG_LOCKS_WARN_ON(__owner_task(owner) != current)
      WARNING: CPU: 2 PID: 537 at kernel/locking/mutex.c:1033 __mutex_unlock_slowpath+0x1a8/0x2e0
      ...
      Call trace:
       __mutex_unlock_slowpath()
       ww_mutex_unlock()
       test_cycle_work()
       process_one_work()
       worker_thread()
       kthread()
       ret_from_fork()
    
    If requesting b_mutex fails with -EDEADLK, the error variable
    is reassigned to the return value from calling ww_mutex_lock
    on a_mutex again. If this call fails, a_mutex is not locked.
    It is, however, unconditionally unlocked subsequently, causing
    the reported warning. Fix the problem by using two error variables.
    
    With this change, the selftest still fails as follows:
    
      cyclic deadlock not resolved, ret[7/8] = -35
    
    However, the traceback is gone.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Fixes: d1b42b800e5d0 ("locking/ww_mutex: Add kselftests for resolving ww_mutex cyclic deadlocks")
    Link: http://lkml.kernel.org/r/1538516929-9734-1-git-send-email-linux@roeck-us.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0ab962b674dd64a7bce9de8b5a108f4832d6139
Author: Sean Tranchetti <stranche@codeaurora.org>
Date:   Tue Oct 2 18:52:01 2018 -0600

    net: qualcomm: rmnet: Skip processing loopback packets
    
    [ Upstream commit a07f388e2cde2be74b263f85df6f672fea0305a1 ]
    
    RMNET RX handler was processing invalid packets that were
    originally sent on the real device and were looped back via
    dev_loopback_xmit(). This was detected using syzkaller.
    
    Fixes: ceed73a2cf4a ("drivers: net: ethernet: qualcomm: rmnet: Initial implementation")
    Signed-off-by: Sean Tranchetti <stranche@codeaurora.org>
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3095f0c98c6a2a3e279c801955efdd73ff54c76e
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Tue Oct 2 14:23:45 2018 +0100

    declance: Fix continuation with the adapter identification message
    
    [ Upstream commit fe3a83af6a50199bf250fa331e94216912f79395 ]
    
    Fix a commit 4bcc595ccd80 ("printk: reinstate KERN_CONT for printing
    continuation lines") regression with the `declance' driver, which caused
    the adapter identification message to be split between two lines, e.g.:
    
    declance.c: v0.011 by Linux MIPS DECstation task force
    tc6: PMAD-AA
    , addr = 08:00:2b:1b:2a:6a, irq = 14
    tc6: registered as eth0.
    
    Address that properly, by printing identification with a single call,
    making the messages now look like:
    
    declance.c: v0.011 by Linux MIPS DECstation task force
    tc6: PMAD-AA, addr = 08:00:2b:1b:2a:6a, irq = 14
    tc6: registered as eth0.
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Fixes: 4bcc595ccd80 ("printk: reinstate KERN_CONT for printing continuation lines")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1837dbb25cc517d96d51e4c9e1e8bffd80e9b48c
Author: Rickard x Andersson <rickaran@axis.com>
Date:   Tue Oct 2 14:49:32 2018 +0200

    net: fec: fix rare tx timeout
    
    [ Upstream commit 657ade07df72847f591ccdb36bd9b91ed0edbac3 ]
    
    During certain heavy network loads TX could time out
    with TX ring dump.
    TX is sometimes never restarted after reaching
    "tx_stop_threshold" because function "fec_enet_tx_queue"
    only tests the first queue.
    
    In addition the TX timeout callback function failed to
    recover because it also operated only on the first queue.
    
    Signed-off-by: Rickard x Andersson <rickaran@axis.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 784f8395895f7b7c56b3c1195c7ce0f0376085dc
Author: Natarajan, Janakarajan <Janakarajan.Natarajan@amd.com>
Date:   Thu Sep 27 15:51:55 2018 +0000

    perf/x86/amd/uncore: Set ThreadMask and SliceMask for L3 Cache perf events
    
    [ Upstream commit d7cbbe49a9304520181fb8c9272d1327deec8453 ]
    
    In Family 17h, some L3 Cache Performance events require the ThreadMask
    and SliceMask to be set. For other events, these fields do not affect
    the count either way.
    
    Set ThreadMask and SliceMask to 0xFF and 0xF respectively.
    
    Signed-off-by: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: H . Peter Anvin <hpa@zytor.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Suravee <Suravee.Suthikulpanit@amd.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/Message-ID:
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40568f21f235aefb8755650f2a09797b3d297ec1
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Sep 21 07:07:06 2018 -0700

    perf/x86/intel/uncore: Fix PCI BDF address of M3UPI on SKX
    
    [ Upstream commit 9d92cfeaf5215158d26d2991be7f7ff865cb98f3 ]
    
    The counters on M3UPI Link 0 and Link 3 don't count properly, and writing
    0 to these counters may causes system crash on some machines.
    
    The PCI BDF addresses of the M3UPI in the current code are incorrect.
    
    The correct addresses should be:
    
      D18:F1        0x204D
      D18:F2        0x204E
      D18:F5        0x204D
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: cd34cd97b7b4 ("perf/x86/intel/uncore: Add Skylake server uncore support")
    Link: http://lkml.kernel.org/r/1537538826-55489-1-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a18e2159c3ffcc8fe18155302d208adec443cd66
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Sun Sep 23 18:13:43 2018 +0200

    perf/ring_buffer: Prevent concurent ring buffer access
    
    [ Upstream commit cd6fb677ce7e460c25bdd66f689734102ec7d642 ]
    
    Some of the scheduling tracepoints allow the perf_tp_event
    code to write to ring buffer under different cpu than the
    code is running on.
    
    This results in corrupted ring buffer data demonstrated in
    following perf commands:
    
      # perf record -e 'sched:sched_switch,sched:sched_wakeup' perf bench sched messaging
      # Running 'sched/messaging' benchmark:
      # 20 sender and receiver processes per group
      # 10 groups == 400 processes run
    
           Total time: 0.383 [sec]
      [ perf record: Woken up 8 times to write data ]
      0x42b890 [0]: failed to process type: -1765585640
      [ perf record: Captured and wrote 4.825 MB perf.data (29669 samples) ]
    
      # perf report --stdio
      0x42b890 [0]: failed to process type: -1765585640
    
    The reason for the corruption are some of the scheduling tracepoints,
    that have __perf_task dfined and thus allow to store data to another
    cpu ring buffer:
    
      sched_waking
      sched_wakeup
      sched_wakeup_new
      sched_stat_wait
      sched_stat_sleep
      sched_stat_iowait
      sched_stat_blocked
    
    The perf_tp_event function first store samples for current cpu
    related events defined for tracepoint:
    
        hlist_for_each_entry_rcu(event, head, hlist_entry)
          perf_swevent_event(event, count, &data, regs);
    
    And then iterates events of the 'task' and store the sample
    for any task's event that passes tracepoint checks:
    
      ctx = rcu_dereference(task->perf_event_ctxp[perf_sw_context]);
    
      list_for_each_entry_rcu(event, &ctx->event_list, event_entry) {
        if (event->attr.type != PERF_TYPE_TRACEPOINT)
          continue;
        if (event->attr.config != entry->type)
          continue;
    
        perf_swevent_event(event, count, &data, regs);
      }
    
    Above code can race with same code running on another cpu,
    ending up with 2 cpus trying to store under the same ring
    buffer, which is specifically not allowed.
    
    This patch prevents the problem, by allowing only events with the same
    current cpu to receive the event.
    
    NOTE: this requires the use of (per-task-)per-cpu buffers for this
    feature to work; perf-record does this.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    [peterz: small edits to Changelog]
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andrew Vagin <avagin@openvz.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: e6dab5ffab59 ("perf/trace: Add ability to set a target task for events")
    Link: http://lkml.kernel.org/r/20180923161343.GB15054@krava
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffc3cb561ecea45c95ba1690876c5e905eef3791
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Sep 25 17:58:35 2018 +0200

    perf/core: Fix perf_pmu_unregister() locking
    
    [ Upstream commit a9f9772114c8b07ae75bcb3654bd017461248095 ]
    
    When we unregister a PMU, we fail to serialize the @pmu_idr properly.
    Fix that by doing the entire thing under pmu_lock.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: 2e80a82a49c4 ("perf: Dynamic pmu types")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 492a81318e8cf41f18ad6845152b54f4a3387556
Author: Yu Zhao <yuzhao@google.com>
Date:   Thu Sep 27 17:05:04 2018 -0600

    cfg80211: fix use-after-free in reg_process_hint()
    
    [ Upstream commit 1db58529454742f67ebd96e3588315e880b72837 ]
    
    reg_process_hint_country_ie() can free regulatory_request and return
    REG_REQ_ALREADY_SET. We shouldn't use regulatory_request after it's
    called. KASAN error was observed when this happens.
    
    BUG: KASAN: use-after-free in reg_process_hint+0x839/0x8aa [cfg80211]
    Read of size 4 at addr ffff8800c430d434 by task kworker/1:3/89
    <snipped>
    Workqueue: events reg_todo [cfg80211]
    Call Trace:
     dump_stack+0xc1/0x10c
     ? _atomic_dec_and_lock+0x1ad/0x1ad
     ? _raw_spin_lock_irqsave+0xa0/0xd2
     print_address_description+0x86/0x26f
     ? reg_process_hint+0x839/0x8aa [cfg80211]
     kasan_report+0x241/0x29b
     reg_process_hint+0x839/0x8aa [cfg80211]
     reg_todo+0x204/0x5b9 [cfg80211]
     process_one_work+0x55f/0x8d0
     ? worker_detach_from_pool+0x1b5/0x1b5
     ? _raw_spin_unlock_irq+0x65/0xdd
     ? _raw_spin_unlock_irqrestore+0xf3/0xf3
     worker_thread+0x5dd/0x841
     ? kthread_parkme+0x1d/0x1d
     kthread+0x270/0x285
     ? pr_cont_work+0xe3/0xe3
     ? rcu_read_unlock_sched_notrace+0xca/0xca
     ret_from_fork+0x22/0x40
    
    Allocated by task 2718:
     set_track+0x63/0xfa
     __kmalloc+0x119/0x1ac
     regulatory_hint_country_ie+0x38/0x329 [cfg80211]
     __cfg80211_connect_result+0x854/0xadd [cfg80211]
     cfg80211_rx_assoc_resp+0x3bc/0x4f0 [cfg80211]
    smsc95xx v1.0.6
     ieee80211_sta_rx_queued_mgmt+0x1803/0x7ed5 [mac80211]
     ieee80211_iface_work+0x411/0x696 [mac80211]
     process_one_work+0x55f/0x8d0
     worker_thread+0x5dd/0x841
     kthread+0x270/0x285
     ret_from_fork+0x22/0x40
    
    Freed by task 89:
     set_track+0x63/0xfa
     kasan_slab_free+0x6a/0x87
     kfree+0xdc/0x470
     reg_process_hint+0x31e/0x8aa [cfg80211]
     reg_todo+0x204/0x5b9 [cfg80211]
     process_one_work+0x55f/0x8d0
     worker_thread+0x5dd/0x841
     kthread+0x270/0x285
     ret_from_fork+0x22/0x40
    <snipped>
    
    Signed-off-by: Yu Zhao <yuzhao@google.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35ffbd523797f58a3017906904a718db6035fc56
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:56 2018 -0700

    smsc95xx: Check for Wake-on-LAN modes
    
    [ Upstream commit c530c471ba37bdd9fe1c7185b01455c00ae606fb ]
    
    The driver does not check for Wake-on-LAN modes specified by an user,
    but will conditionally set the device as wake-up enabled or not based on
    that, which could be a very confusing user experience.
    
    Fixes: e0e474a83c18 ("smsc95xx: add wol magic packet support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e3a0366365bf82da3668d6e20cc753476fb9519
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:55 2018 -0700

    smsc75xx: Check for Wake-on-LAN modes
    
    [ Upstream commit 9c734b2769a73eea2e9e9767c0e0bf839ff23679 ]
    
    The driver does not check for Wake-on-LAN modes specified by an user,
    but will conditionally set the device as wake-up enabled or not based on
    that, which could be a very confusing user experience.
    
    Fixes: 6c636503260d ("smsc75xx: add wol magic packet support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9eaabc0a77799b3563a5be757e551ae7463d2706
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:54 2018 -0700

    r8152: Check for supported Wake-on-LAN Modes
    
    [ Upstream commit f2750df1548bd8a2b060eb609fc43ca82811af4c ]
    
    The driver does not check for Wake-on-LAN modes specified by an user,
    but will conditionally set the device as wake-up enabled or not based on
    that, which could be a very confusing user experience.
    
    Fixes: 21ff2e8976b1 ("r8152: support WOL")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4301fb3391eddf9c697bac653320749735d5a2a9
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:53 2018 -0700

    sr9800: Check for supported Wake-on-LAN modes
    
    [ Upstream commit c5cb93e994ffb43b7b3b1ff10b9f928f54574a36 ]
    
    The driver currently silently accepts unsupported Wake-on-LAN modes
    (other than WAKE_PHY or WAKE_MAGIC) without reporting that to the user,
    which is confusing.
    
    Fixes: 19a38d8e0aa3 ("USB2NET : SR9800 : One chip USB2.0 USB2NET SR9800 Device Driver Support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f0962c0f6f7126c0d407989e86daeb1317e0dda
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:52 2018 -0700

    lan78xx: Check for supported Wake-on-LAN modes
    
    [ Upstream commit eb9ad088f96653a26b340f7c447c44cf023d5cdc ]
    
    The driver supports a fair amount of Wake-on-LAN modes, but is not
    checking that the user specified one that is supported.
    
    Fixes: 55d7de9de6c3 ("Microchip's LAN7800 family USB 2/3 to 10/100/1000 Ethernet device driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Woojung Huh <Woojung.Huh@Microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0fc063355300102c96ee8b9b9c460102a93a7c0
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:51 2018 -0700

    ax88179_178a: Check for supported Wake-on-LAN modes
    
    [ Upstream commit 5ba6b4aa9a410c5e2c6417df52b5e2118ea9b467 ]
    
    The driver currently silently accepts unsupported Wake-on-LAN modes
    (other than WAKE_PHY or WAKE_MAGIC) without reporting that to the user,
    which is confusing.
    
    Fixes: e2ca90c276e1 ("ax88179_178a: ASIX AX88179_178A USB 3.0/2.0 to gigabit ethernet adapter driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eef5935c2d7a349479c6992ddb60b2c4d9e17263
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Sep 28 16:18:50 2018 -0700

    asix: Check for supported Wake-on-LAN modes
    
    [ Upstream commit c4ce446e33d7a0e978256ac6fea4c80e59d9de5f ]
    
    The driver currently silently accepts unsupported Wake-on-LAN modes
    (other than WAKE_PHY or WAKE_MAGIC) without reporting that to the user,
    which is confusing.
    
    Fixes: 2e55cc7210fe ("[PATCH] USB: usbnet (3/9) module for ASIX Ethernet adapters")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 915670c48eb3d073ef8dc29a12db92cbde233195
Author: Masashi Honma <masashi.honma@gmail.com>
Date:   Tue Sep 25 11:15:01 2018 +0900

    nl80211: Fix possible Spectre-v1 for CQM RSSI thresholds
    
    [ Upstream commit 1222a16014888ed9733c11e221730d4a8196222b ]
    
    Use array_index_nospec() to sanitize i with respect to speculation.
    
    Note that the user doesn't control i directly, but can make it out
    of bounds by not finding a threshold in the array.
    
    Signed-off-by: Masashi Honma <masashi.honma@gmail.com>
    [add note about user control, as explained by Masashi]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b93393d63d8f66135acc32a3ff8f3680f923aa08
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Sep 24 14:42:12 2018 -0700

    qed: Avoid implicit enum conversion in qed_iwarp_parse_rx_pkt
    
    [ Upstream commit 77f2d753819b7d50c16abfb778caf1fe075faed0 ]
    
    Clang warns when one enumerated type is implicitly converted to another.
    
    drivers/net/ethernet/qlogic/qed/qed_iwarp.c:1713:25: warning: implicit
    conversion from enumeration type 'enum tcp_ip_version' to different
    enumeration type 'enum qed_tcp_ip_version' [-Wenum-conversion]
                    cm_info->ip_version = TCP_IPV4;
                                        ~ ^~~~~~~~
    drivers/net/ethernet/qlogic/qed/qed_iwarp.c:1733:25: warning: implicit
    conversion from enumeration type 'enum tcp_ip_version' to different
    enumeration type 'enum qed_tcp_ip_version' [-Wenum-conversion]
                    cm_info->ip_version = TCP_IPV6;
                                        ~ ^~~~~~~~
    2 warnings generated.
    
    Use the appropriate values from the expected type, qed_tcp_ip_version:
    
    TCP_IPV4 = QED_TCP_IPV4 = 0
    TCP_IPV6 = QED_TCP_IPV6 = 1
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/125
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee86b4d659c23f735c3162b0c9c461a2e6f07a8b
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Sep 24 15:17:03 2018 -0700

    qed: Avoid constant logical operation warning in qed_vf_pf_acquire
    
    [ Upstream commit 1c492a9d55ba99079210ed901dd8a5423f980487 ]
    
    Clang warns when a constant is used in a boolean context as it thinks a
    bitwise operation may have been intended.
    
    drivers/net/ethernet/qlogic/qed/qed_vf.c:415:27: warning: use of logical
    '&&' with constant operand [-Wconstant-logical-operand]
            if (!p_iov->b_pre_fp_hsi &&
                                     ^
    drivers/net/ethernet/qlogic/qed/qed_vf.c:415:27: note: use '&' for a
    bitwise operation
            if (!p_iov->b_pre_fp_hsi &&
                                     ^~
                                     &
    drivers/net/ethernet/qlogic/qed/qed_vf.c:415:27: note: remove constant
    to silence this warning
            if (!p_iov->b_pre_fp_hsi &&
                                    ~^~
    1 warning generated.
    
    This has been here since commit 1fe614d10f45 ("qed: Relax VF firmware
    requirements") and I am not entirely sure why since 0 isn't a special
    case. Just remove the statement causing Clang to warn since it isn't
    required.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/126
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 935d441968b1877707367cc7ac78b1822bf483fc
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Sep 24 14:34:53 2018 -0700

    qed: Avoid implicit enum conversion in qed_roce_mode_to_flavor
    
    [ Upstream commit d3a315795b4ce8b105a64a90699103121bde04a8 ]
    
    Clang warns when one enumerated type is implicitly converted to another.
    
    drivers/net/ethernet/qlogic/qed/qed_roce.c:153:12: warning: implicit
    conversion from enumeration type 'enum roce_mode' to different
    enumeration type 'enum roce_flavor' [-Wenum-conversion]
                    flavor = ROCE_V2_IPV6;
                           ~ ^~~~~~~~~~~~
    drivers/net/ethernet/qlogic/qed/qed_roce.c:156:12: warning: implicit
    conversion from enumeration type 'enum roce_mode' to different
    enumeration type 'enum roce_flavor' [-Wenum-conversion]
                    flavor = MAX_ROCE_MODE;
                           ~ ^~~~~~~~~~~~~
    2 warnings generated.
    
    Use the appropriate values from the expected type, roce_flavor:
    
    ROCE_V2_IPV6 = RROCE_IPV6 = 2
    MAX_ROCE_MODE = MAX_ROCE_FLAVOR = 3
    
    While we're add it, ditch the local variable flavor, we can just return
    the value directly from the switch statement.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/125
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab7998abfea24e59acd3d387e46760628f95ff28
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Sep 24 14:05:27 2018 -0700

    qed: Fix mask parameter in qed_vf_prep_tunn_req_tlv
    
    [ Upstream commit db803f36e56f23b5a2266807e190d1dc11554d54 ]
    
    Clang complains when one enumerated type is implicitly converted to
    another.
    
    drivers/net/ethernet/qlogic/qed/qed_vf.c:686:6: warning: implicit
    conversion from enumeration type 'enum qed_tunn_mode' to different
    enumeration type 'enum qed_tunn_clss' [-Wenum-conversion]
                                     QED_MODE_L2GENEVE_TUNN,
                                     ^~~~~~~~~~~~~~~~~~~~~~
    
    Update mask's parameter to expect qed_tunn_mode, which is what was
    intended.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/125
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76f86190774e9b1655cc53781311e065462f1fc4
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Sep 24 13:53:34 2018 -0700

    qed: Avoid implicit enum conversion in qed_set_tunn_cls_info
    
    [ Upstream commit a898fba32229efd5e6b6154f83fa86a7145156b9 ]
    
    Clang warns when one enumerated type is implicitly converted to another.
    
    drivers/net/ethernet/qlogic/qed/qed_sp_commands.c:163:25: warning:
    implicit conversion from enumeration type 'enum tunnel_clss' to
    different enumeration type 'enum qed_tunn_clss' [-Wenum-conversion]
            p_tun->vxlan.tun_cls = type;
                                 ~ ^~~~
    drivers/net/ethernet/qlogic/qed/qed_sp_commands.c:165:26: warning:
    implicit conversion from enumeration type 'enum tunnel_clss' to
    different enumeration type 'enum qed_tunn_clss' [-Wenum-conversion]
            p_tun->l2_gre.tun_cls = type;
                                  ~ ^~~~
    drivers/net/ethernet/qlogic/qed/qed_sp_commands.c:167:26: warning:
    implicit conversion from enumeration type 'enum tunnel_clss' to
    different enumeration type 'enum qed_tunn_clss' [-Wenum-conversion]
            p_tun->ip_gre.tun_cls = type;
                                  ~ ^~~~
    drivers/net/ethernet/qlogic/qed/qed_sp_commands.c:169:29: warning:
    implicit conversion from enumeration type 'enum tunnel_clss' to
    different enumeration type 'enum qed_tunn_clss' [-Wenum-conversion]
            p_tun->l2_geneve.tun_cls = type;
                                     ~ ^~~~
    drivers/net/ethernet/qlogic/qed/qed_sp_commands.c:171:29: warning:
    implicit conversion from enumeration type 'enum tunnel_clss' to
    different enumeration type 'enum qed_tunn_clss' [-Wenum-conversion]
            p_tun->ip_geneve.tun_cls = type;
                                     ~ ^~~~
    5 warnings generated.
    
    Avoid this by changing type to an int.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/125
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 865741554925b7f53c1ccc01d38d3854dffbbcb3
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Wed Sep 26 18:11:22 2018 +0200

    pxa168fb: prepare the clock
    
    [ Upstream commit d85536cde91fcfed6fb8d983783bd2b92c843939 ]
    
    Add missing prepare/unprepare operations for fbi->clk,
    this fixes following kernel warning:
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 1 at drivers/clk/clk.c:874 clk_core_enable+0x2c/0x1b0
      Enabling unprepared disp0_clk
      Modules linked in:
      CPU: 0 PID: 1 Comm: swapper Not tainted 4.18.0-rc8-00032-g02b43ddd4f21-dirty #25
      Hardware name: Marvell MMP2 (Device Tree Support)
      [<c010f7cc>] (unwind_backtrace) from [<c010cc6c>] (show_stack+0x10/0x14)
      [<c010cc6c>] (show_stack) from [<c011dab4>] (__warn+0xd8/0xf0)
      [<c011dab4>] (__warn) from [<c011db10>] (warn_slowpath_fmt+0x44/0x6c)
      [<c011db10>] (warn_slowpath_fmt) from [<c043898c>] (clk_core_enable+0x2c/0x1b0)
      [<c043898c>] (clk_core_enable) from [<c0439ec8>] (clk_core_enable_lock+0x18/0x2c)
      [<c0439ec8>] (clk_core_enable_lock) from [<c0436698>] (pxa168fb_probe+0x464/0x6ac)
      [<c0436698>] (pxa168fb_probe) from [<c04779a0>] (platform_drv_probe+0x48/0x94)
      [<c04779a0>] (platform_drv_probe) from [<c0475bec>] (driver_probe_device+0x328/0x470)
      [<c0475bec>] (driver_probe_device) from [<c0475de4>] (__driver_attach+0xb0/0x124)
      [<c0475de4>] (__driver_attach) from [<c0473c38>] (bus_for_each_dev+0x64/0xa0)
      [<c0473c38>] (bus_for_each_dev) from [<c0474ee0>] (bus_add_driver+0x1b8/0x230)
      [<c0474ee0>] (bus_add_driver) from [<c0476a20>] (driver_register+0xac/0xf0)
      [<c0476a20>] (driver_register) from [<c0102dd4>] (do_one_initcall+0xb8/0x1f0)
      [<c0102dd4>] (do_one_initcall) from [<c0b010a0>] (kernel_init_freeable+0x294/0x2e0)
      [<c0b010a0>] (kernel_init_freeable) from [<c07e9eb8>] (kernel_init+0x8/0x10c)
      [<c07e9eb8>] (kernel_init) from [<c01010e8>] (ret_from_fork+0x14/0x2c)
      Exception stack(0xd008bfb0 to 0xd008bff8)
      bfa0:                                     00000000 00000000 00000000 00000000
      bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
      bfe0: 00000000 00000000 00000000 00000000 00000013 00000000
      ---[ end trace c0af40f9e2ed7cb4 ]---
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    [b.zolnierkie: enhance patch description a bit]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f8a689c6a2f93cbbc16b0ff2003b3240241bdc5
Author: Matias Karhumaa <matias.karhumaa@gmail.com>
Date:   Wed Sep 26 09:13:46 2018 +0300

    Bluetooth: SMP: fix crash in unpairing
    
    [ Upstream commit cb28c306b93b71f2741ce1a5a66289db26715f4d ]
    
    In case unpair_device() was called through mgmt interface at the same time
    when pairing was in progress, Bluetooth kernel module crash was seen.
    
    [  600.351225] general protection fault: 0000 [#1] SMP PTI
    [  600.351235] CPU: 1 PID: 11096 Comm: btmgmt Tainted: G           OE     4.19.0-rc1+ #1
    [  600.351238] Hardware name: Dell Inc. Latitude E5440/08RCYC, BIOS A18 05/14/2017
    [  600.351272] RIP: 0010:smp_chan_destroy.isra.10+0xce/0x2c0 [bluetooth]
    [  600.351276] Code: c0 0f 84 b4 01 00 00 80 78 28 04 0f 84 53 01 00 00 4d 85 ed 0f 85 ab 00 00 00 48 8b 08 48 8b 50 08 be 10 00 00 00 48 89 51 08 <48> 89 0a 48 b9 00 02 00 00 00 00 ad de 48 89 48 08 48 8b 83 00 01
    [  600.351279] RSP: 0018:ffffa9be839b3b50 EFLAGS: 00010246
    [  600.351282] RAX: ffff9c999ac565a0 RBX: ffff9c9996e98c00 RCX: ffff9c999aa28b60
    [  600.351285] RDX: dead000000000200 RSI: 0000000000000010 RDI: ffff9c999e403500
    [  600.351287] RBP: ffffa9be839b3b70 R08: 0000000000000000 R09: ffffffff92a25c00
    [  600.351290] R10: ffffa9be839b3ae8 R11: 0000000000000001 R12: ffff9c995375b800
    [  600.351292] R13: 0000000000000000 R14: ffff9c99619a5000 R15: ffff9c9962a01c00
    [  600.351295] FS:  00007fb2be27c700(0000) GS:ffff9c999e880000(0000) knlGS:0000000000000000
    [  600.351298] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  600.351300] CR2: 00007fb2bdadbad0 CR3: 000000041c328001 CR4: 00000000001606e0
    [  600.351302] Call Trace:
    [  600.351325]  smp_failure+0x4f/0x70 [bluetooth]
    [  600.351345]  smp_cancel_pairing+0x74/0x80 [bluetooth]
    [  600.351370]  unpair_device+0x1c1/0x330 [bluetooth]
    [  600.351399]  hci_sock_sendmsg+0x960/0x9f0 [bluetooth]
    [  600.351409]  ? apparmor_socket_sendmsg+0x1e/0x20
    [  600.351417]  sock_sendmsg+0x3e/0x50
    [  600.351422]  sock_write_iter+0x85/0xf0
    [  600.351429]  do_iter_readv_writev+0x12b/0x1b0
    [  600.351434]  do_iter_write+0x87/0x1a0
    [  600.351439]  vfs_writev+0x98/0x110
    [  600.351443]  ? ep_poll+0x16d/0x3d0
    [  600.351447]  ? ep_modify+0x73/0x170
    [  600.351451]  do_writev+0x61/0xf0
    [  600.351455]  ? do_writev+0x61/0xf0
    [  600.351460]  __x64_sys_writev+0x1c/0x20
    [  600.351465]  do_syscall_64+0x5a/0x110
    [  600.351471]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  600.351474] RIP: 0033:0x7fb2bdb62fe0
    [  600.351477] Code: 73 01 c3 48 8b 0d b8 6e 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 69 c7 2c 00 00 75 10 b8 14 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 de 80 01 00 48 89 04 24
    [  600.351479] RSP: 002b:00007ffe062cb8f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000014
    [  600.351484] RAX: ffffffffffffffda RBX: 000000000255b3d0 RCX: 00007fb2bdb62fe0
    [  600.351487] RDX: 0000000000000001 RSI: 00007ffe062cb920 RDI: 0000000000000004
    [  600.351490] RBP: 00007ffe062cb920 R08: 000000000255bd80 R09: 0000000000000000
    [  600.351494] R10: 0000000000000353 R11: 0000000000000246 R12: 0000000000000001
    [  600.351497] R13: 00007ffe062cbbe0 R14: 0000000000000000 R15: 0000000000000000
    [  600.351501] Modules linked in: algif_hash algif_skcipher af_alg cmac ipt_MASQUERADE nf_conntrack_netlink nfnetlink xfrm_user xfrm_algo iptable_nat nf_nat_ipv4 xt_addrtype iptable_filter ip_tables xt_conntrack x_tables nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c br_netfilter bridge stp llc overlay arc4 nls_iso8859_1 dm_crypt intel_rapl x86_pkg_temp_thermal intel_powerclamp coretemp dell_laptop kvm_intel crct10dif_pclmul dell_smm_hwmon crc32_pclmul ghash_clmulni_intel pcbc aesni_intel aes_x86_64 crypto_simd cryptd glue_helper intel_cstate intel_rapl_perf uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common videodev media hid_multitouch input_leds joydev serio_raw dell_wmi snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic dell_smbios dcdbas sparse_keymap
    [  600.351569]  snd_hda_intel btusb snd_hda_codec btrtl btbcm btintel snd_hda_core bluetooth(OE) snd_hwdep snd_pcm iwlmvm ecdh_generic wmi_bmof dell_wmi_descriptor snd_seq_midi mac80211 snd_seq_midi_event lpc_ich iwlwifi snd_rawmidi snd_seq snd_seq_device snd_timer cfg80211 snd soundcore mei_me mei dell_rbtn dell_smo8800 mac_hid parport_pc ppdev lp parport autofs4 hid_generic usbhid hid i915 nouveau kvmgt vfio_mdev mdev vfio_iommu_type1 vfio kvm irqbypass i2c_algo_bit ttm drm_kms_helper syscopyarea sysfillrect sysimgblt mxm_wmi psmouse ahci sdhci_pci cqhci libahci fb_sys_fops sdhci drm e1000e video wmi
    [  600.351637] ---[ end trace e49e9f1df09c94fb ]---
    [  600.351664] RIP: 0010:smp_chan_destroy.isra.10+0xce/0x2c0 [bluetooth]
    [  600.351666] Code: c0 0f 84 b4 01 00 00 80 78 28 04 0f 84 53 01 00 00 4d 85 ed 0f 85 ab 00 00 00 48 8b 08 48 8b 50 08 be 10 00 00 00 48 89 51 08 <48> 89 0a 48 b9 00 02 00 00 00 00 ad de 48 89 48 08 48 8b 83 00 01
    [  600.351669] RSP: 0018:ffffa9be839b3b50 EFLAGS: 00010246
    [  600.351672] RAX: ffff9c999ac565a0 RBX: ffff9c9996e98c00 RCX: ffff9c999aa28b60
    [  600.351674] RDX: dead000000000200 RSI: 0000000000000010 RDI: ffff9c999e403500
    [  600.351676] RBP: ffffa9be839b3b70 R08: 0000000000000000 R09: ffffffff92a25c00
    [  600.351679] R10: ffffa9be839b3ae8 R11: 0000000000000001 R12: ffff9c995375b800
    [  600.351681] R13: 0000000000000000 R14: ffff9c99619a5000 R15: ffff9c9962a01c00
    [  600.351684] FS:  00007fb2be27c700(0000) GS:ffff9c999e880000(0000) knlGS:0000000000000000
    [  600.351686] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  600.351689] CR2: 00007fb2bdadbad0 CR3: 000000041c328001 CR4: 00000000001606e0
    
    Crash happened because list_del_rcu() was called twice for smp->ltk. This
    was possible if unpair_device was called right after ltk was generated
    but before keys were distributed.
    
    In this commit smp_cancel_pairing was refactored to cancel pairing if it
    is in progress and otherwise just removes keys. Once keys are removed from
    rcu list, pointers to smp context's keys are set to NULL to make sure
    removed list items are not accessed later.
    
    This commit also adjusts the functionality of mgmt unpair_device() little
    bit. Previously pairing was canceled only if pairing was in state that
    keys were already generated. With this commit unpair_device() cancels
    pairing already in earlier states.
    
    Bug was found by fuzzing kernel SMP implementation using Synopsys
    Defensics.
    
    Reported-by: Pekka Oikarainen <pekka.oikarainen@synopsys.com>
    Signed-off-by: Matias Karhumaa <matias.karhumaa@gmail.com>
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db2a11e706bf59d60dbd250f19a383d102a92e69
Author: Martin Willi <martin@strongswan.org>
Date:   Tue Sep 25 09:51:02 2018 +0200

    mac80211_hwsim: do not omit multicast announce of first added radio
    
    [ Upstream commit 28ef8b49a338dc1844e86b7954cfffc7dfa2660a ]
    
    The allocation of hwsim radio identifiers uses a post-increment from 0,
    so the first radio has idx 0. This idx is explicitly excluded from
    multicast announcements ever since, but it is unclear why.
    
    Drop that idx check and announce the first radio as well. This makes
    userspace happy if it relies on these events.
    
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7b66583c9edb63ab7613a6ff545367175f95125
Author: Masashi Honma <masashi.honma@gmail.com>
Date:   Tue Sep 25 11:15:00 2018 +0900

    nl80211: Fix possible Spectre-v1 for NL80211_TXRATE_HT
    
    [ Upstream commit 30fe6d50eb088783c8729c7d930f65296b2b3fa7 ]
    
    Use array_index_nospec() to sanitize ridx with respect to speculation.
    
    Signed-off-by: Masashi Honma <masashi.honma@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa1578ec411d8cf9724166738fd41fc5b686e28e
Author: Zhao Qiang <qiang.zhao@nxp.com>
Date:   Thu Feb 1 14:54:32 2018 +0800

    soc: fsl: qe: Fix copy/paste bug in ucc_get_tdm_sync_shift()
    
    [ Upstream commit 96fc74333f84cfdf8d434c6c07254e215e2aad00 ]
    
    There is a copy and paste bug so we accidentally use the RX_ shift when
    we're in TX_ mode.
    
    Fixes: bb8b2062aff3 ("fsl/qe: setup clock source for TDM mode")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Zhao Qiang <qiang.zhao@nxp.com>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    (cherry picked from commit 3cb31b634052ed458922e0c8e2b4b093d7fb60b9)
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 795b13034224f1b82fc22d749f9226a8c97977d4
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Aug 23 23:36:00 2018 +0200

    soc: fsl: qbman: qman: avoid allocating from non existing gen_pool
    
    [ Upstream commit 64e9e22e68512da8df3c9a7430f07621e48db3c2 ]
    
    If the qman driver didn't probe, calling qman_alloc_fqid_range,
    qman_alloc_pool_range or qman_alloc_cgrid_range (as done in dpaa_eth) will
    pass a NULL pointer to gen_pool_alloc, leading to a NULL pointer
    dereference.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Reviewed-by: Roy Pledge <roy.pledge@nxp.com>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    (cherry picked from commit f72487a2788aa70c3aee1d0ebd5470de9bac953a)
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9e742766c763db1e8ead9a9fbd7640232735ede
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Tue Sep 25 08:32:50 2018 +0200

    net: macb: Clean 64b dma addresses if they are not detected
    
    [ Upstream commit e1e5d8a9fe737d94ccc0ccbaf0c97f69a8f3e000 ]
    
    Clear ADDR64 dma bit in DMACFG register in case that HW_DMA_CAP_64B is
    not detected on 64bit system.
    The issue was observed when bootloader(u-boot) does not check macb
    feature at DCFG6 register (DAW64_OFFSET) and enabling 64bit dma support
    by default. Then macb driver is reading DMACFG register back and only
    adding 64bit dma configuration but not cleaning it out.
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5bdfc6892b5f6c4d131c246771dc67a55460691
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Sep 19 17:14:01 2018 -0700

    ARM: dts: BCM63xx: Fix incorrect interrupt specifiers
    
    [ Upstream commit 3ab97942d0213b6583a5408630a8cbbfbf54730f ]
    
    A number of our interrupts were incorrectly specified, fix both the PPI
    and SPI interrupts to be correct.
    
    Fixes: b5762cacc411 ("ARM: bcm63138: add NAND DT support")
    Fixes: 46d4bca0445a ("ARM: BCM63XX: add BCM63138 minimal Device Tree")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1241679ce248b13db2193ef04b942098fa85e3ec
Author: Steve Capper <steve.capper@arm.com>
Date:   Fri Sep 21 16:34:04 2018 +0100

    arm64: hugetlb: Fix handling of young ptes
    
    [ Upstream commit 469ed9d823b7d240d6b9574f061ded7c3834c167 ]
    
    In the contiguous bit hugetlb break-before-make code we assume that all
    hugetlb pages are young.
    
    In fact, remove_migration_pte is able to place an old hugetlb pte so
    this assumption is not valid.
    
    This patch fixes the contiguous hugetlb scanning code to preserve young
    ptes.
    
    Fixes: d8bdcff28764 ("arm64: hugetlb: Add break-before-make logic for contiguous entries")
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1157713407a691eb48b2d6abfda1bc87b0c3848d
Author: David Ahern <dsahern@gmail.com>
Date:   Mon Sep 17 08:20:36 2018 -0700

    netfilter: bridge: Don't sabotage nf_hook calls from an l3mdev
    
    [ Upstream commit a173f066c7cfc031acb8f541708041e009fc9812 ]
    
    For starters, the bridge netfilter code registers operations that
    are invoked any time nh_hook is called. Specifically, ip_sabotage_in
    watches for nested calls for NF_INET_PRE_ROUTING when a bridge is in
    the stack.
    
    Packet wise, the bridge netfilter hook runs first. br_nf_pre_routing
    allocates nf_bridge, sets in_prerouting to 1 and calls NF_HOOK for
    NF_INET_PRE_ROUTING. It's finish function, br_nf_pre_routing_finish,
    then resets in_prerouting flag to 0 and the packet continues up the
    stack. The packet eventually makes it to the VRF driver and it invokes
    nf_hook for NF_INET_PRE_ROUTING in case any rules have been added against
    the vrf device.
    
    Because of the registered operations the call to nf_hook causes
    ip_sabotage_in to be invoked. That function sees the nf_bridge on the
    skb and that in_prerouting is not set. Thinking it is an invalid nested
    call it steals (drops) the packet.
    
    Update ip_sabotage_in to recognize that the bridge or one of its upper
    devices (e.g., vlan) can be enslaved to a VRF (L3 master device) and
    allow the packet to go through the nf_hook a second time.
    
    Fixes: 73e20b761acf ("net: vrf: Add support for PREROUTING rules on vrf device")
    Reported-by: D'Souza, Nelson <ndsouza@ciena.com>
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26c6b9da7a001cf37e1b2029a33955cdc890d676
Author: Sean Tranchetti <stranche@codeaurora.org>
Date:   Wed Sep 19 13:54:56 2018 -0600

    xfrm: validate template mode
    
    [ Upstream commit 32bf94fb5c2ec4ec842152d0e5937cd4bb6738fa ]
    
    XFRM mode parameters passed as part of the user templates
    in the IP_XFRM_POLICY are never properly validated. Passing
    values other than valid XFRM modes can cause stack-out-of-bounds
    reads to occur later in the XFRM processing:
    
    [  140.535608] ================================================================
    [  140.543058] BUG: KASAN: stack-out-of-bounds in xfrm_state_find+0x17e4/0x1cc4
    [  140.550306] Read of size 4 at addr ffffffc0238a7a58 by task repro/5148
    [  140.557369]
    [  140.558927] Call trace:
    [  140.558936] dump_backtrace+0x0/0x388
    [  140.558940] show_stack+0x24/0x30
    [  140.558946] __dump_stack+0x24/0x2c
    [  140.558949] dump_stack+0x8c/0xd0
    [  140.558956] print_address_description+0x74/0x234
    [  140.558960] kasan_report+0x240/0x264
    [  140.558963] __asan_report_load4_noabort+0x2c/0x38
    [  140.558967] xfrm_state_find+0x17e4/0x1cc4
    [  140.558971] xfrm_resolve_and_create_bundle+0x40c/0x1fb8
    [  140.558975] xfrm_lookup+0x238/0x1444
    [  140.558977] xfrm_lookup_route+0x48/0x11c
    [  140.558984] ip_route_output_flow+0x88/0xc4
    [  140.558991] raw_sendmsg+0xa74/0x266c
    [  140.558996] inet_sendmsg+0x258/0x3b0
    [  140.559002] sock_sendmsg+0xbc/0xec
    [  140.559005] SyS_sendto+0x3a8/0x5a8
    [  140.559008] el0_svc_naked+0x34/0x38
    [  140.559009]
    [  140.592245] page dumped because: kasan: bad access detected
    [  140.597981] page_owner info is not active (free page?)
    [  140.603267]
    [  140.653503] ================================================================
    
    Signed-off-by: Sean Tranchetti <stranche@codeaurora.org>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d7bf7b4d022ba0f5a01f2fc2be352fad925a627
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Thu Sep 13 16:48:08 2018 +0100

    ARM: 8799/1: mm: fix pci_ioremap_io() offset check
    
    [ Upstream commit 3a58ac65e2d7969bcdf1b6acb70fa4d12a88e53e ]
    
    IO_SPACE_LIMIT is the ending address of the PCI IO space, i.e
    something like 0xfffff (and not 0x100000).
    
    Therefore, when offset = 0xf0000 is passed as argument, this function
    fails even though the offset + SZ_64K fits below the
    IO_SPACE_LIMIT. This makes the last chunk of 64 KB of the I/O space
    not usable as it cannot be mapped.
    
    This patch fixes that by substracing 1 to offset + SZ_64K, so that we
    compare the addrss of the last byte of the I/O space against
    IO_SPACE_LIMIT instead of the address of the first byte of what is
    after the I/O space.
    
    Fixes: c2794437091a4 ("ARM: Add fixed PCI i/o mapping")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73c6f86060703daf8b7aa72c51451a6339164915
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Tue Sep 11 10:31:15 2018 +0200

    xfrm: Fix NULL pointer dereference when skb_dst_force clears the dst_entry.
    
    [ Upstream commit 9e1437937807b0122e8da1ca8765be2adca9aee6 ]
    
    Since commit 222d7dbd258d ("net: prevent dst uses after free")
    skb_dst_force() might clear the dst_entry attached to the skb.
    The xfrm code don't expect this to happen, so we crash with
    a NULL pointer dereference in this case. Fix it by checking
    skb_dst(skb) for NULL after skb_dst_force() and drop the packet
    in cast the dst_entry was cleared.
    
    Fixes: 222d7dbd258d ("net: prevent dst uses after free")
    Reported-by: Tobias Hommel <netdev-list@genoetigt.de>
    Reported-by: Kristian Evensen <kristian.evensen@gmail.com>
    Reported-by: Wolfgang Walter <linux@stwm.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35507aabf0e5e50525de25603328f09a7a629da5
Author: Yuan-Chi Pang <fu3mo6goo@gmail.com>
Date:   Thu Sep 6 16:57:48 2018 +0800

    mac80211: fix TX status reporting for ieee80211s
    
    [ Upstream commit c42055105785580563535e6d3143cad95c7ac7ee ]
    
    TX status reporting to ieee80211s is through ieee80211s_update_metric.
    There are two problems about ieee80211s_update_metric:
    
    1. The purpose is to estimate the fail probability
    to a specific link. No need to restrict to data frame.
    
    2. Current implementation does not work if wireless driver does not
    pass tx_status with skb.
    
    Fix this by removing ieee80211_is_data condition, passing
    ieee80211_tx_status directly to ieee80211s_update_metric, and
    putting it in both __ieee80211_tx_status and ieee80211_tx_status_ext.
    
    Signed-off-by: Yuan-Chi Pang <fu3mo6goo@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebec37ed21a220b824f9ac8f467c81d0955b01ce
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Sep 5 13:34:02 2018 +0200

    mac80211: TDLS: fix skb queue/priority assignment
    
    [ Upstream commit cb59bc14e830028d2244861216df038165d7625d ]
    
    If the TDLS setup happens over a connection to an AP that
    doesn't have QoS, we nevertheless assign a non-zero TID
    (skb->priority) and queue mapping, which may confuse us or
    drivers later.
    
    Fix it by just assigning the special skb->priority and then
    using ieee80211_select_queue() just like other data frames
    would go through.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9da59d2e283d424cd9c947b849fc819536bd0882
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Wed Sep 5 18:52:22 2018 +0300

    cfg80211: Address some corner cases in scan result channel updating
    
    [ Upstream commit 119f94a6fefcc76d47075b83d2b73d04c895df78 ]
    
    cfg80211_get_bss_channel() is used to update the RX channel based on the
    available frame payload information (channel number from DSSS Parameter
    Set element or HT Operation element). This is needed on 2.4 GHz channels
    where frames may be received on neighboring channels due to overlapping
    frequency range.
    
    This might of some use on the 5 GHz band in some corner cases, but
    things are more complex there since there is no n:1 or 1:n mapping
    between channel numbers and frequencies due to multiple different
    starting frequencies in different operating classes. This could result
    in ieee80211_channel_to_frequency() returning incorrect frequency and
    ieee80211_get_channel() returning incorrect channel information (or
    indication of no match). In the previous implementation, this could
    result in some scan results being dropped completely, e.g., for the 4.9
    GHz channels. That prevented connection to such BSSs.
    
    Fix this by using the driver-provided channel pointer if
    ieee80211_get_channel() does not find matching channel data for the
    channel number in the frame payload and if the scan is done with 5 MHz
    or 10 MHz channel bandwidth. While doing this, also add comments
    describing what the function is trying to achieve to make it easier to
    understand what happens here and why.
    
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 574be53ab82c3525236c8a3dd70f3dcaebd9e9aa
Author: Bob Copeland <me@bobcopeland.com>
Date:   Wed Sep 5 06:22:59 2018 -0400

    mac80211: fix pending queue hang due to TX_DROP
    
    [ Upstream commit 6eae4a6c2be387fec41b0d2782c4fffb57159498 ]
    
    In our environment running lots of mesh nodes, we are seeing the
    pending queue hang periodically, with the debugfs queues file showing
    lines such as:
    
        00: 0x00000000/348
    
    i.e. there are a large number of frames but no stop reason set.
    
    One way this could happen is if queue processing from the pending
    tasklet exited early without processing all frames, and without having
    some future event (incoming frame, stop reason flag, ...) to reschedule
    it.
    
    Exactly this can occur today if ieee80211_tx() returns false due to
    packet drops or power-save buffering in the tx handlers.  In the
    past, this function would return true in such cases, and the change
    to false doesn't seem to be intentional.  Fix this case by reverting
    to the previous behavior.
    
    Fixes: bb42f2d13ffc ("mac80211: Move reorder-sensitive TX handlers to after TXQ dequeue")
    Signed-off-by: Bob Copeland <bobcopeland@fb.com>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d46c334f07f5f67cf0fc56a1e8dace1a97f8b908
Author: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
Date:   Wed Sep 5 08:06:12 2018 +0300

    cfg80211: reg: Init wiphy_idx in regulatory_hint_core()
    
    [ Upstream commit 24f33e64fcd0d50a4b1a8e5b41bd0257aa66b0e8 ]
    
    Core regulatory hints didn't set wiphy_idx to WIPHY_IDX_INVALID. Since
    the regulatory request is zeroed, wiphy_idx was always implicitly set to
    0. This resulted in updating only phy #0.
    Fix that.
    
    Fixes: 806a9e39670b ("cfg80211: make regulatory_request use wiphy_idx instead of wiphy")
    Signed-off-by: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    [add fixes tag]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0be0d83fc6894337b807cbf66ee66e001caf89b
Author: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
Date:   Wed Sep 5 08:06:13 2018 +0300

    mac80211: Always report TX status
    
    [ Upstream commit 8682250b3c1b75a45feb7452bc413d004cfe3778 ]
    
    If a frame is dropped for any reason, mac80211 wouldn't report the TX
    status back to user space.
    
    As the user space may rely on the TX_STATUS to kick its state
    machines, resends etc, it's better to just report this frame as not
    acked instead.
    
    Signed-off-by: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64f38286c7be284f4eba70bff165269a65461183
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Mon Sep 3 04:36:53 2018 -0700

    xfrm: reset crypto_done when iterating over multiple input xfrms
    
    [ Upstream commit 782710e333a526780d65918d669cb96646983ba2 ]
    
    We only support one offloaded xfrm (we do not have devices that
    can handle more than one offload), so reset crypto_done in
    xfrm_input() when iterating over multiple transforms in xfrm_input,
    so that we can invoke the appropriate x->type->input for the
    non-offloaded transforms
    
    Fixes: d77e38e612a0 ("xfrm: Add an IPsec hardware offloading API")
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a95d9004fbdedebb2e2550352808f0e8b1b0ae79
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Mon Sep 3 04:36:52 2018 -0700

    xfrm: reset transport header back to network header after all input transforms ahave been applied
    
    [ Upstream commit bfc0698bebcb16d19ecfc89574ad4d696955e5d3 ]
    
    A policy may have been set up with multiple transforms (e.g., ESP
    and ipcomp). In this situation, the ingress IPsec processing
    iterates in xfrm_input() and applies each transform in turn,
    processing the nexthdr to find any additional xfrm that may apply.
    
    This patch resets the transport header back to network header
    only after the last transformation so that subsequent xfrms
    can find the correct transport header.
    
    Fixes: 7785bba299a8 ("esp: Add a software GRO codepath")
    Suggested-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a55e64d5c5e98e425f7eafd2c480440b4aa78c2
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Fri Aug 31 08:38:49 2018 -0300

    xfrm6: call kfree_skb when skb is toobig
    
    [ Upstream commit 215ab0f021c9fea3c18b75e7d522400ee6a49990 ]
    
    After commit d6990976af7c5d8f55903bfb4289b6fb030bf754 ("vti6: fix PMTU caching
    and reporting on xmit"), some too big skbs might be potentially passed down to
    __xfrm6_output, causing it to fail to transmit but not free the skb, causing a
    leak of skb, and consequentially a leak of dst references.
    
    After running pmtu.sh, that shows as failure to unregister devices in a namespace:
    
    [  311.397671] unregister_netdevice: waiting for veth_b to become free. Usage count = 1
    
    The fix is to call kfree_skb in case of transmit failures.
    
    Fixes: dd767856a36e ("xfrm6: Don't call icmpv6_send on local error")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b5d512831af3a43303d1c3615a0a7d6c693bce9
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Aug 1 13:45:11 2018 +0200

    xfrm: Validate address prefix lengths in the xfrm selector.
    
    [ Upstream commit 07bf7908950a8b14e81aa1807e3c667eab39287a ]
    
    We don't validate the address prefix lengths in the xfrm
    selector we got from userspace. This can lead to undefined
    behaviour in the address matching functions if the prefix
    is too big for the given address family. Fix this by checking
    the prefixes and refuse SA/policy insertation when a prefix
    is invalid.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Air Icy <icytxw@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
