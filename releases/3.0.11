commit 7a576d2dcd5807a7310032b380442eeba8c1c293
Author: Greg Kroah-Hartman <gregkh@suse.de>
Date:   Sat Nov 26 09:11:26 2011 -0800

    Linux 3.0.11

commit 49b3e19e8062ab93b1c313e6c7934ff5987426c7
Author: Jesse Barnes <jbarnes@virtuousgeek.org>
Date:   Mon Oct 10 14:28:52 2011 -0700

    drm/i915: always set FDI composite sync bit
    
    commit c4f9c4c2b3f1831e932e04db992cf6fe92c2a95a upstream.
    
    It's needed for 3 pipe support as well as just regular functionality
    (e.g. DisplayPort).
    
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
    Tested-by: Adam Jackson <ajax@redhat.com>
    Tested-by: Eugeni Dodonov <eugeni.dodonov@intel.com>
    Signed-off-by: Keith Packard <keithp@keithp.com>
    Signed-off-by: Robert Hooker <robert.hooker@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit e01b0328fa4df58b3d0ccd03f8b1b2768f05e539
Author: Jesse Barnes <jbarnes@virtuousgeek.org>
Date:   Wed Oct 12 11:10:21 2011 -0700

    drm/i915: fix IVB cursor support
    
    commit 65a21cd65316145f9302594be8e69074369e1050 upstream.
    
    The cursor regs have moved around, add the offsets and new macros for
    getting at them.
    
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
    Tested-By: Eugeni Dodonov <eugeni.dodonov@intel.com>
    Reviewed-By: Eugeni Dodonov <eugeni.dodonov@intel.com>
    Signed-off-by: Keith Packard <keithp@keithp.com>
    Signed-off-by: Robert Hooker <robert.hooker@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit ae6c19cd6c32f88b2d8549984ff2a5fcdcc932b2
Author: Christoph Hellwig <hch@infradead.org>
Date:   Sat Nov 19 13:13:39 2011 -0500

    xfs: fix ->write_inode return values
    
    patch 58d84c4ee0389ddeb86238d5d8359a982c9f7a5b upstream.
    
    Currently we always redirty an inode that was attempted to be written out
    synchronously but has been cleaned by an AIL pushed internall, which is
    rather bogus.  Fix that by doing the i_update_core check early on and
    return 0 for it.  Also include async calls for it, as doing any work for
    those is just as pointless.  While we're at it also fix the sign for the
    EIO return in case of a filesystem shutdown, and fix the completely
    non-sensical locking around xfs_log_inode.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 7d7e5d33408819c084528dcff139fc4564c7bdda
Author: Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>
Date:   Sat Nov 19 13:13:45 2011 -0500

    xfs: use doalloc flag in xfs_qm_dqattach_one()
    
    commit db3e74b582915d66e10b0c73a62763418f54c340 upstream
    
    The doalloc arg in xfs_qm_dqattach_one() is a flag that indicates
    whether a new area to handle quota information will be allocated
    if needed. Originally, it was passed to xfs_qm_dqget(), but has
    been removed by the following commit (probably by mistake):
    
            commit 8e9b6e7fa4544ea8a0e030c8987b918509c8ff47
            Author: Christoph Hellwig <hch@lst.de>
            Date:   Sun Feb 8 21:51:42 2009 +0100
    
            xfs: remove the unused XFS_QMOPT_DQLOCK flag
    
    As the result, xfs_qm_dqget() called from xfs_qm_dqattach_one()
    never allocates the new area even if it is needed.
    
    This patch gives the doalloc arg to xfs_qm_dqget() in
    xfs_qm_dqattach_one() to fix this problem.
    
    Signed-off-by: Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>
    Cc: Alex Elder <aelder@sgi.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ben Myers <bpm@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 626ff2d51fc1127814fa28bdfb1df761ea894755
Author: Carlos Maiolino <cmaiolino@redhat.com>
Date:   Sat Nov 19 13:13:44 2011 -0500

    xfs: Fix possible memory corruption in xfs_readlink
    
    commit b52a360b2aa1c59ba9970fb0f52bbb093fcc7a24 upstream.
    
    Fixes a possible memory corruption when the link is larger than
    MAXPATHLEN and XFS_DEBUG is not enabled. This also remove the
    S_ISLNK assert, since the inode mode is checked previously in
    xfs_readlink_by_handle() and via VFS.
    
    Updated to address concerns raised by Ben Hutchings about the loose
    attention paid to 32- vs 64-bit values, and the lack of handling a
    potentially negative pathlen value:
     - Changed type of "pathlen" to be xfs_fsize_t, to match that of
       ip->i_d.di_size
     - Added checking for a negative pathlen to the too-long pathlen
       test, and generalized the message that gets reported in that case
       to reflect the change
    As a result, if a negative pathlen were encountered, this function
    would return EFSCORRUPTED (and would fail an assertion for a debug
    build)--just as would a too-long pathlen.
    
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 70f589ceb96bbf1d4c2c2f5b6c3d6dff19ddd31d
Author: Christoph Hellwig <hch@infradead.org>
Date:   Sat Nov 19 13:13:43 2011 -0500

    xfs: fix buffer flushing during unmount
    
    commit 87c7bec7fc3377b3873eb3a0f4b603981ea16ebb upstream.
    
    The code to flush buffers in the umount code is a bit iffy: we first
    flush all delwri buffers out, but then might be able to queue up a
    new one when logging the sb counts.  On a normal shutdown that one
    would get flushed out when doing the synchronous superblock write in
    xfs_unmountfs_writesb, but we skip that one if the filesystem has
    been shut down.
    
    Fix this by moving the delwri list flushing until just before unmounting
    the log, and while we're at it also remove the superflous delwri list
    and buffer lru flusing for the rt and log device that can never have
    cached or delwri buffers.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reported-by: Amit Sahrawat <amit.sahrawat83@gmail.com>
    Tested-by: Amit Sahrawat <amit.sahrawat83@gmail.com>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 5b9d69bca6a43e7cd61df13e820ee4e5f99e1615
Author: Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>
Date:   Sat Nov 19 13:13:42 2011 -0500

    xfs: Return -EIO when xfs_vn_getattr() failed
    
    commit ed32201e65e15f3e6955cb84cbb544b08f81e5a5 upstream.
    
    An attribute of inode can be fetched via xfs_vn_getattr() in XFS.
    Currently it returns EIO, not negative value, when it failed.  As a
    result, the system call returns not negative value even though an
    error occured. The stat(2), ls and mv commands cannot handle this
    error and do not work correctly.
    
    This patch fixes this bug, and returns -EIO, not EIO when an error
    is detected in xfs_vn_getattr().
    
    Signed-off-by: Mitsuo Hayasaka <mitsuo.hayasaka.hu@hitachi.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 3da97f9710ca1df6cebe2558896dae3ed62337be
Author: Christoph Hellwig <hch@infradead.org>
Date:   Sat Nov 19 13:13:41 2011 -0500

    xfs: avoid direct I/O write vs buffered I/O race
    
    commit c58cb165bd44de8aaee9755a144136ae743be116 upstream.
    
    Currently a buffered reader or writer can add pages to the pagecache
    while we are waiting for the iolock in xfs_file_dio_aio_write.  Prevent
    this by re-checking mapping->nrpages after we got the iolock, and if
    nessecary upgrade the lock to exclusive mode.  To simplify this a bit
    only take the ilock inside of xfs_file_aio_write_checks.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 16ba92e591d31d3213956e581867f46892648038
Author: Dave Chinner <dchinner@redhat.com>
Date:   Sat Nov 19 13:13:40 2011 -0500

    xfs: dont serialise direct IO reads on page cache
    
    commit 0c38a2512df272b14ef4238b476a2e4f70da1479 upstream.
    
    There is no need to grab the i_mutex of the IO lock in exclusive
    mode if we don't need to invalidate the page cache. Taking these
    locks on every direct IO effective serialises them as taking the IO
    lock in exclusive mode has to wait for all shared holders to drop
    the lock. That only happens when IO is complete, so effective it
    prevents dispatch of concurrent direct IO reads to the same inode.
    
    Fix this by taking the IO lock shared to check the page cache state,
    and only then drop it and take the IO lock exclusively if there is
    work to be done. Hence for the normal direct IO case, no exclusive
    locking will occur.
    
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Tested-by: Joern Engel <joern@logfs.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit afd717d6cd334fc89f3ac938e19aade2f939b629
Author: Christoph Hellwig <hch@infradead.org>
Date:   Sat Nov 19 13:13:38 2011 -0500

    xfs: fix xfs_mark_inode_dirty during umount
    
    commit 866e4ed77448a0c311e1b055eb72ea05423fd799 upstream.
    
    During umount we do not add a dirty inode to the lru and wait for it to
    become clean first, but force writeback of data and metadata with
    I_WILL_FREE set.  Currently there is no way for XFS to detect that the
    inode has been redirtied for metadata operations, as we skip the
    mark_inode_dirty call during teardown.  Fix this by setting i_update_core
    nanually in that case, so that the inode gets flushed during inode reclaim.
    
    Alternatively we could enable calling mark_inode_dirty for inodes in
    I_WILL_FREE state, and let the VFS dirty tracking handle this.  I decided
    against this as we will get better I/O patterns from reclaim compared to
    the synchronous writeout in write_inode_now, and always marking the inode
    dirty in some way from xfs_mark_inode_dirty is a better safetly net in
    either case.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit e62cccfcf5535487daf8c1d3613b9dabc2315b44
Author: Christoph Hellwig <hch@infradead.org>
Date:   Sat Nov 19 13:13:37 2011 -0500

    xfs: fix error handling for synchronous writes
    
    If removed storage while synchronous buffer write underway,
    "xfslogd" hangs.
    
    Detailed log http://oss.sgi.com/archives/xfs/2011-07/msg00740.html
    
    Related work bfc60177f8ab509bc225becbb58f7e53a0e33e81
    "xfs: fix error handling for synchronous writes"
    
    Given that xfs_bwrite actually does the shutdown already after
    waiting for the b_iodone completion and given that we actually
    found that calling xfs_force_shutdown from inside
    xfs_buf_iodone_callbacks was a major contributor the problem
    it better to drop this call.
    
    Signed-off-by: Ajeet Yadav <ajeet.yadav.77@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Alex Elder <aelder@sgi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 10318b5517baa2ae7e4bb884c6acb9cf572eebc8
Author: sordna <sordna@gmail.com>
Date:   Thu Oct 27 21:06:26 2011 -0700

    USB: quirks: adding more quirky webcams to avoid squeaky audio
    
    commit 0d145d7d4a241c321c832a810bb6edad18e2217b upstream.
    
    The following patch contains additional affected webcam models, on top of the
    patches commited to linux-next 2394d67e446bf616a0885167d5f0d397bdacfdfc
    and 5b253d88cc6c65a23cefc457a5a4ef139913c5fc
    
    Signed-off-by: sordna <sordna@gmail.com>
    Cc: Oliver Neukum <oliver@neukum.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 85e9996fdfe3e3095ab24c4f926695ad2e4ea8d9
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Wed Oct 26 13:53:17 2011 -0400

    USB: add quirk for Logitech C600 web cam
    
    commit 60c71ca972a2dd3fd9d0165b405361c8ad48349b upstream.
    
    We've had another report of the "chipmunk" sound on a Logitech C600 webcam.
    This patch resolves the issue.
    
    Signed-off-by: Josh Boyer <jwboyer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 317451c11fefcb0e05383f0a0080bb7f5445cfcf
Author: Thomas Poussevin <thomas.poussevin@parrot.com>
Date:   Thu Oct 27 18:46:48 2011 +0200

    USB: EHCI: fix HUB TT scheduling issue with iso transfer
    
    commit 811c926c538f7e8d3c08b630dd5844efd7e000f6 upstream.
    
    The current TT scheduling doesn't allow to play and then record on a
    full-speed device connected to a high speed hub.
    
    The IN iso stream can only start on the first uframe (0-2 for a 165 us)
    because of CSPLIT transactions.
    For the OUT iso stream there no such restriction. uframe 0-5 are possible.
    
    The idea of this patch is that the first uframe are precious (for IN TT iso
    stream) and we should allocate the last uframes first if possible.
    
    For that we reverse the order of uframe allocation (last uframe first).
    
    Here an example :
    
    hid interrupt stream
    ----------------------------------------------------------------------
    uframe                |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |
    ----------------------------------------------------------------------
    max_tt_usecs          | 125 | 125 | 125 | 125 | 125 | 125 | 30  |  0  |
    ----------------------------------------------------------------------
    used usecs on a frame | 13  |  0  |  0  |  0  |  0  |  0  |  0  |  0  |
    ----------------------------------------------------------------------
    
    iso OUT stream
    ----------------------------------------------------------------------
    uframe                |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |
    ----------------------------------------------------------------------
    max_tt_usecs          | 125 | 125 | 125 | 125 | 125 | 125 | 30  |  0  |
    ----------------------------------------------------------------------
    used usecs on a frame | 13  | 125 |  39 |  0  |  0  |  0  |  0  |  0  |
    ----------------------------------------------------------------------
    
    There no place for iso IN stream  (uframe 0-2 are used) and we got "cannot
    submit datapipe for urb 0, error -28: not enough bandwidth" error.
    
    With the patch this become.
    
    iso OUT stream
    ----------------------------------------------------------------------
    uframe                |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |
    ----------------------------------------------------------------------
    max_tt_usecs          | 125 | 125 | 125 | 125 | 125 | 125 | 30  |  0  |
    ----------------------------------------------------------------------
    used usecs on a frame |  13 |  0  |  0  |  0  | 125 |  39 |  0  |  0  |
    ----------------------------------------------------------------------
    
    iso IN stream
    ----------------------------------------------------------------------
    uframe                |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |
    ----------------------------------------------------------------------
    max_tt_usecs          | 125 | 125 | 125 | 125 | 125 | 125 | 30  |  0  |
    ----------------------------------------------------------------------
    used usecs on a frame |  13 |  0  | 125 | 40  | 125 |  39 |  0  |  0  |
    ----------------------------------------------------------------------
    
    Signed-off-by: Matthieu Castet <matthieu.castet@parrot.com>
    Signed-off-by: Thomas Poussevin <thomas.poussevin@parrot.com>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit a7a656cfe46e8278458a8c897aacd6bf28def1fe
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Oct 25 10:50:58 2011 -0400

    usb-storage: Accept 8020i-protocol commands longer than 12 bytes
    
    commit 2f640bf4c94324aeaa1b6385c10aab8c5ad1e1cf upstream.
    
    The 8020i protocol (also 8070i and QIC-157) uses 12-byte commands;
    shorter commands must be padded.  Simon Detheridge reports that his
    3-TB USB disk drive claims to use the 8020i protocol (which is
    normally meant for ATAPI devices like CD drives), and because of its
    large size, the disk drive requires the use of 16-byte commands.
    However the usb_stor_pad12_command() routine in usb-storage always
    sets the command length to 12, making the drive impossible to use.
    
    Since the SFF-8020i specification allows for 16-byte commands in
    future extensions, we may as well accept them.  This patch (as1490)
    changes usb_stor_pad12_command() to leave commands larger than 12
    bytes alone rather than truncating them.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Tested-by: Simon Detheridge <simon@widgit.com>
    CC: Matthew Dharm <mdharm-usb@one-eyed-alien.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit b987edee414235e29984d424043761b735bb4a5e
Author: Andrew Worsley <amworsley@gmail.com>
Date:   Fri Nov 18 23:13:33 2011 +1100

    USB: Fix Corruption issue in USB ftdi driver ftdi_sio.c
    
    commit b1ffb4c851f185e9051ba837c16d9b84ef688d26 upstream.
    
    Fix for ftdi_set_termios() glitching output
    
    ftdi_set_termios() is constantly setting the baud rate, data bits and parity
    unnecessarily on every call, . When called while characters are being
    transmitted can cause the FTDI chip to corrupt the serial port bit stream
    output by stalling the output half a bit during the output of a character.
    Simple fix by skipping this setting if the baud rate/data bits/parity are
    unchanged.
    
    Signed-off-by: Andrew Worsley <amworsley@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 1c9e0eba2b5954bfb213ce2facfd439eeb3cda3b
Author: Bart Hartgers <bart.hartgers@gmail.com>
Date:   Wed Oct 26 13:29:42 2011 +0200

    USB: ark3116 initialisation fix
    
    commit 583182ba5f02c8c9be82ea550f2051eaec15b975 upstream.
    
    This patch for the usb serial ark3116 driver fixes an initialisation
    ordering bug that gets triggered on hotplug when using at least recent
    debian/ubuntu userspace. Without it, ark3116 serial cables don't work.
    
    Signed-off-by: Bart Hartgers <bart.hartgers@gmail.com>
    Tested-by: law_ence.dev@ntlworld.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 3d396a3b21f381ffb651f481252508243c0325a6
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Oct 27 11:20:21 2011 -0400

    USB: workaround for bug in old version of GCC
    
    commit 97ff22ee3b4cb3a334f7385e269773141aed702f upstream.
    
    This patch (as1491) works around a bug in GCC-3.4.6, which is still
    supposed to be supported.  The number of microseconds in the udelay()
    call in quirk_usb_disable_ehci() is fixed at 100, but the compiler
    doesn't understand this and generates a link-time error.  So we
    replace the otherwise unused variable "delta" with a simple constant
    100.  This same pattern is already used in other delay loops in that
    source file.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Konrad Rzepecki <krzepecki@dentonet.pl>
    Tested-by: Konrad Rzepecki <krzepecki@dentonet.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit bbf54d177037d268d9a744ee4c2add570ba8a9ad
Author: Havard Skinnemoen <hskinnemoen@google.com>
Date:   Wed Nov 9 13:47:38 2011 -0800

    USB: cdc-acm: Fix disconnect() vs close() race
    
    commit 5dc2470c602da8851907ec18942cd876c3b4ecc1 upstream.
    
    There's a race between the USB disconnect handler and the TTY close
    handler which may cause the acm object to be freed while it's still
    being used. This may lead to things like
    
    http://article.gmane.org/gmane.linux.usb.general/54250
    
    and
    
    https://lkml.org/lkml/2011/5/29/64
    
    This is the simplest fix I could come up with. Holding on to open_mutex
    while closing the TTY device prevents acm_disconnect() from freeing the
    acm object between acm->port.count drops to 0 and the TTY side of the
    cleanups are finalized.
    
    Signed-off-by: Havard Skinnemoen <hskinnemoen@google.com>
    Cc: Oliver Neukum <oliver@neukum.name>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 0841db56cfb4cd090cbdd52dc2c7f39a70042e15
Author: wangyanqing <udknight@gmail.com>
Date:   Thu Nov 10 14:04:08 2011 +0800

    USB: serial: pl2303: rm duplicate id
    
    commit 0c16595539b612fe948559433dda08ff96a8bdc7 upstream.
    
    I get report from customer that his usb-serial
    converter doesn't work well,it sometimes work,
    but sometimes it doesn't.
    
    The usb-serial converter's id:
    vendor_id product_id
    0x4348    0x5523
    
    Then I search the usb-serial codes, and there are
    two drivers announce support this device, pl2303
    and ch341, commit 026dfaf1 cause it. Through many
    times to test, ch341 works well with this device,
    and pl2303 doesn't work quite often(it just work quite little).
    
    ch341 works well with this device, so we doesn't
    need pl2303 to support.I try to revert 026dfaf1 first,
    but it failed. So I prepare this patch by hand to revert it.
    
    Signed-off-by: Wang YanQing <Udknight@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit fe18f66a2d61962b28d319e9d8a5bf68edaeb215
Author: Ferenc Wagner <wferi@niif.hu>
Date:   Thu Nov 17 16:44:58 2011 +0100

    USB: option: add PID of Huawei E173s 3G modem
    
    commit 4aa3648c719265bac9c2742c9ebb043e6dbdd790 upstream.
    
    Signed-off-by: Ferenc Wagner <wferi@niif.hu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit ad8a9b61e60399e909b99ae9be457d5c4450c69d
Author: zheng.zhijian@zte.com.cn <zheng.zhijian@zte.com.cn>
Date:   Thu Nov 17 19:23:25 2011 +0800

    USB: option: release new PID for ZTE 3G modem
    
    commit 46b5a277ed90317a4d17e936c16037e76011b219 upstream.
    
    This patch adds new PIDs for ZTE 3G modem, after we confirm it and tested.
    Thanks for Dan's work at kernel option devier.
    
    Signed-off-by: Alvin.Zheng <zheng.zhijian@zte.com.cn>
    Signed-off-by: wsalvin <wsalvin@yahoo.com.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit a07b39fcd6a9aecdc4093f5b7480ba0bdfc85854
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Nov 3 11:37:10 2011 -0400

    USB: XHCI: resume root hubs when the controller resumes
    
    commit f69e3120df82391a0ee8118e0a156239a06b2afb upstream.
    
    This patch (as1494) fixes a problem in xhci-hcd's resume routine.
    When the controller is runtime-resumed, this can only mean that one of
    the two root hubs has made a wakeup request and therefore needs to be
    resumed as well.  Rather than try to determine which root hub requires
    attention (which might be difficult in the case where a new
    non-SuperSpeed device has been plugged in), the patch simply resumes
    both root hubs.
    
    Without this change, there is a race: The controller might be put back
    to sleep before it can activate its IRQ line, and the wakeup condition
    might never get handled.
    
    The patch also simplifies the logic in xhci_resume a little, combining
    some repeated flag settings into a single pair of statements.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Tested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 614b35af53468f13a41192ffb4ea34f264035b91
Author: Don Zickus <dzickus@redhat.com>
Date:   Thu Oct 20 23:52:14 2011 -0400

    usb, xhci: fix lockdep warning on endpoint timeout
    
    commit f43d623164022dcbf6750ef220b7a1133a1183eb upstream.
    
    While debugging a usb3 problem, I stumbled upon this lockdep warning.
    
    Oct 18 21:41:17 dhcp47-74 kernel: =================================
    Oct 18 21:41:17 dhcp47-74 kernel: [ INFO: inconsistent lock state ]
    Oct 18 21:41:17 dhcp47-74 kernel: 3.1.0-rc4nmi+ #456
    Oct 18 21:41:17 dhcp47-74 kernel: ---------------------------------
    Oct 18 21:41:17 dhcp47-74 kernel: inconsistent {IN-HARDIRQ-W} -> {HARDIRQ-ON-W} usage.
    Oct 18 21:41:17 dhcp47-74 kernel: swapper/0 [HC0[0]:SC1[1]:HE1:SE0] takes:
    Oct 18 21:41:17 dhcp47-74 kernel: (&(&xhci->lock)->rlock){?.-...}, at: [<ffffffffa0228990>] xhci_stop_endpoint_command_watchdog+0x30/0x340 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel: {IN-HARDIRQ-W} state was registered at:
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8109a941>] __lock_acquire+0x781/0x1660
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8109bed7>] lock_acquire+0x97/0x170
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff81501b46>] _raw_spin_lock+0x46/0x80
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffffa02299fa>] xhci_irq+0x3a/0x1960 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffffa022b351>] xhci_msi_irq+0x31/0x40 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff810d2305>] handle_irq_event_percpu+0x85/0x320
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff810d25e8>] handle_irq_event+0x48/0x70
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff810d537d>] handle_edge_irq+0x6d/0x130
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff810048c9>] handle_irq+0x49/0xa0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8150d56d>] do_IRQ+0x5d/0xe0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff815029b0>] ret_from_intr+0x0/0x13
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff81388aca>] usb_set_device_state+0x8a/0x180
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8138f038>] usb_add_hcd+0x2b8/0x730
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffffa022ed7e>] xhci_pci_probe+0x9e/0xd4 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8127915f>] local_pci_probe+0x5f/0xd0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8127a569>] pci_device_probe+0x119/0x120
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff81334473>] driver_probe_device+0xa3/0x2c0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8133473b>] __driver_attach+0xab/0xb0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8133373c>] bus_for_each_dev+0x6c/0xa0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff813341fe>] driver_attach+0x1e/0x20
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff81333b88>] bus_add_driver+0x1f8/0x2b0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff81334df6>] driver_register+0x76/0x140
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8127a7c6>] __pci_register_driver+0x66/0xe0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffffa013c04a>] snd_timer_find+0x4a/0x70 [snd_timer]
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffffa013c00e>] snd_timer_find+0xe/0x70 [snd_timer]
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff810001d3>] do_one_initcall+0x43/0x180
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff810a9ed2>] sys_init_module+0x92/0x1f0
    Oct 18 21:41:17 dhcp47-74 kernel:  [<ffffffff8150ab6b>] system_call_fastpath+0x16/0x1b
    Oct 18 21:41:17 dhcp47-74 kernel: irq event stamp: 631984
    Oct 18 21:41:17 dhcp47-74 kernel: hardirqs last  enabled at (631984): [<ffffffff81502720>] _raw_spin_unlock_irq+0x30/0x50
    Oct 18 21:41:17 dhcp47-74 kernel: hardirqs last disabled at (631983): [<ffffffff81501c49>] _raw_spin_lock_irq+0x19/0x90
    Oct 18 21:41:17 dhcp47-74 kernel: softirqs last  enabled at (631980): [<ffffffff8105ff63>] _local_bh_enable+0x13/0x20
    Oct 18 21:41:17 dhcp47-74 kernel: softirqs last disabled at (631981): [<ffffffff8150ce6c>] call_softirq+0x1c/0x30
    Oct 18 21:41:17 dhcp47-74 kernel:
    Oct 18 21:41:17 dhcp47-74 kernel: other info that might help us debug this:
    Oct 18 21:41:17 dhcp47-74 kernel: Possible unsafe locking scenario:
    Oct 18 21:41:17 dhcp47-74 kernel:
    Oct 18 21:41:17 dhcp47-74 kernel:       CPU0
    Oct 18 21:41:17 dhcp47-74 kernel:       ----
    Oct 18 21:41:17 dhcp47-74 kernel:  lock(&(&xhci->lock)->rlock);
    Oct 18 21:41:17 dhcp47-74 kernel:  <Interrupt>
    Oct 18 21:41:17 dhcp47-74 kernel:    lock(&(&xhci->lock)->rlock);
    Oct 18 21:41:17 dhcp47-74 kernel:
    Oct 18 21:41:17 dhcp47-74 kernel: *** DEADLOCK ***
    Oct 18 21:41:17 dhcp47-74 kernel:
    Oct 18 21:41:17 dhcp47-74 kernel: 1 lock held by swapper/0:
    Oct 18 21:41:17 dhcp47-74 kernel: #0:  (&ep->stop_cmd_timer){+.-...}, at: [<ffffffff8106abf2>] run_timer_softirq+0x162/0x570
    Oct 18 21:41:17 dhcp47-74 kernel:
    Oct 18 21:41:17 dhcp47-74 kernel: stack backtrace:
    Oct 18 21:41:17 dhcp47-74 kernel: Pid: 0, comm: swapper Tainted: G        W   3.1.0-rc4nmi+ #456
    Oct 18 21:41:17 dhcp47-74 kernel: Call Trace:
    Oct 18 21:41:17 dhcp47-74 kernel: <IRQ>  [<ffffffff81098ed7>] print_usage_bug+0x227/0x270
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff810999c6>] mark_lock+0x346/0x410
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8109a7de>] __lock_acquire+0x61e/0x1660
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81099893>] ? mark_lock+0x213/0x410
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8109bed7>] lock_acquire+0x97/0x170
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffffa0228990>] ? xhci_stop_endpoint_command_watchdog+0x30/0x340 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81501b46>] _raw_spin_lock+0x46/0x80
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffffa0228990>] ? xhci_stop_endpoint_command_watchdog+0x30/0x340 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffffa0228990>] xhci_stop_endpoint_command_watchdog+0x30/0x340 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8106abf2>] ? run_timer_softirq+0x162/0x570
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8106ac9d>] run_timer_softirq+0x20d/0x570
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8106abf2>] ? run_timer_softirq+0x162/0x570
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffffa0228960>] ? xhci_queue_isoc_tx_prepare+0x8e0/0x8e0 [xhci_hcd]
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff810604d2>] __do_softirq+0xf2/0x3f0
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81020edd>] ? lapic_next_event+0x1d/0x30
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81090d4e>] ? clockevents_program_event+0x5e/0x90
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8150ce6c>] call_softirq+0x1c/0x30
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8100484d>] do_softirq+0x8d/0xc0
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8105ff35>] irq_exit+0xe5/0x100
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8150d65e>] smp_apic_timer_interrupt+0x6e/0x99
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff8150b6f0>] apic_timer_interrupt+0x70/0x80
    Oct 18 21:41:17 dhcp47-74 kernel: <EOI>  [<ffffffff81095d8d>] ? trace_hardirqs_off+0xd/0x10
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff812ddb76>] ? acpi_idle_enter_bm+0x227/0x25b
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff812ddb71>] ? acpi_idle_enter_bm+0x222/0x25b
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff813eda63>] cpuidle_idle_call+0x103/0x290
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81002155>] cpu_idle+0xe5/0x160
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff814e7f50>] rest_init+0xe0/0xf0
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff814e7e70>] ? csum_partial_copy_generic+0x170/0x170
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81df8e23>] start_kernel+0x3fc/0x407
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81df8321>] x86_64_start_reservations+0x131/0x135
    Oct 18 21:41:17 dhcp47-74 kernel: [<ffffffff81df8412>] x86_64_start_kernel+0xed/0xf4
    Oct 18 21:41:17 dhcp47-74 kernel: xhci_hcd 0000:00:14.0: xHCI host not responding to stop endpoint command.
    Oct 18 21:41:17 dhcp47-74 kernel: xhci_hcd 0000:00:14.0: Assuming host is dying, halting host.
    Oct 18 21:41:17 dhcp47-74 kernel: xhci_hcd 0000:00:14.0: HC died; cleaning up
    Oct 18 21:41:17 dhcp47-74 kernel: usb 3-4: device descriptor read/8, error -110
    Oct 18 21:41:17 dhcp47-74 kernel: usb 3-4: device descriptor read/8, error -22
    Oct 18 21:41:17 dhcp47-74 kernel: hub 3-0:1.0: cannot disable port 4 (err = -19)
    
    Basically what is happening is in xhci_stop_endpoint_command_watchdog()
    the xhci->lock is grabbed with just spin_lock.  What lockdep deduces is
    that if an interrupt occurred while in this function it would deadlock
    with xhci_irq because that function also grabs the xhci->lock.
    
    Fixing it is trivial by using spin_lock_irqsave instead.
    
    This should be queued to stable kernels as far back as 2.6.33.
    
    Signed-off-by: Don Zickus <dzickus@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 2e6f55fcd95ef6da9e095eb97cb70fe48be13882
Author: Don Zickus <dzickus@redhat.com>
Date:   Thu Nov 3 09:07:18 2011 -0400

    usb, xhci: Clear warm reset change event during init
    
    commit 79c3dd8150fd5236d95766a9e662e3e932b462c9 upstream.
    
    I noticed on my Panther Point system that I wasn't getting hotplug events
    for my usb3.0 disk on a usb3 port.  I tracked it down to the fact that the
    system had the warm reset change bit still set.  This seemed to block future
    events from being received, including a hotplug event.
    
    Clearing this bit during initialization allowed the hotplug event to be
    received and the disk to be recognized correctly.
    
    This patch should be backported to kernels as old as 2.6.39.
    
    Signed-off-by: Don Zickus <dzickus@redhat.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit bd8a076ec08b1dab5fe3d7bf5499990a552ff51f
Author: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Date:   Thu Nov 3 13:06:08 2011 -0700

    xhci: Set slot and ep0 flags for address command.
    
    commit d31c285b3a71cf9056e6a060de41f37780b0af86 upstream.
    
    Matt's AsMedia xHCI host controller was responding with a Context Error
    to an address device command after a configured device reset.  Some
    sequence of events leads both the slot and endpoint zero add flags
    cleared to zero, which the AsMedia host doesn't like:
    
    [  223.701839] xhci_hcd 0000:03:00.0: Slot ID 1 Input Context:
    [  223.701841] xhci_hcd 0000:03:00.0: @ffff880137b25000 (virt) @ffffc000 (dma) 0x000000 - drop flags
    [  223.701843] xhci_hcd 0000:03:00.0: @ffff880137b25004 (virt) @ffffc004 (dma) 0x000000 - add flags
    [  223.701846] xhci_hcd 0000:03:00.0: @ffff880137b25008 (virt) @ffffc008 (dma) 0x000000 - rsvd2[0]
    [  223.701848] xhci_hcd 0000:03:00.0: @ffff880137b2500c (virt) @ffffc00c (dma) 0x000000 - rsvd2[1]
    [  223.701850] xhci_hcd 0000:03:00.0: @ffff880137b25010 (virt) @ffffc010 (dma) 0x000000 - rsvd2[2]
    [  223.701852] xhci_hcd 0000:03:00.0: @ffff880137b25014 (virt) @ffffc014 (dma) 0x000000 - rsvd2[3]
    [  223.701854] xhci_hcd 0000:03:00.0: @ffff880137b25018 (virt) @ffffc018 (dma) 0x000000 - rsvd2[4]
    [  223.701857] xhci_hcd 0000:03:00.0: @ffff880137b2501c (virt) @ffffc01c (dma) 0x000000 - rsvd2[5]
    [  223.701858] xhci_hcd 0000:03:00.0: Slot Context:
    [  223.701860] xhci_hcd 0000:03:00.0: @ffff880137b25020 (virt) @ffffc020 (dma) 0x8400000 - dev_info
    [  223.701862] xhci_hcd 0000:03:00.0: @ffff880137b25024 (virt) @ffffc024 (dma) 0x010000 - dev_info2
    [  223.701864] xhci_hcd 0000:03:00.0: @ffff880137b25028 (virt) @ffffc028 (dma) 0x000000 - tt_info
    [  223.701866] xhci_hcd 0000:03:00.0: @ffff880137b2502c (virt) @ffffc02c (dma) 0x000000 - dev_state
    [  223.701869] xhci_hcd 0000:03:00.0: @ffff880137b25030 (virt) @ffffc030 (dma) 0x000000 - rsvd[0]
    [  223.701871] xhci_hcd 0000:03:00.0: @ffff880137b25034 (virt) @ffffc034 (dma) 0x000000 - rsvd[1]
    [  223.701873] xhci_hcd 0000:03:00.0: @ffff880137b25038 (virt) @ffffc038 (dma) 0x000000 - rsvd[2]
    [  223.701875] xhci_hcd 0000:03:00.0: @ffff880137b2503c (virt) @ffffc03c (dma) 0x000000 - rsvd[3]
    [  223.701877] xhci_hcd 0000:03:00.0: Endpoint 00 Context:
    [  223.701879] xhci_hcd 0000:03:00.0: @ffff880137b25040 (virt) @ffffc040 (dma) 0x000000 - ep_info
    [  223.701881] xhci_hcd 0000:03:00.0: @ffff880137b25044 (virt) @ffffc044 (dma) 0x2000026 - ep_info2
    [  223.701883] xhci_hcd 0000:03:00.0: @ffff880137b25048 (virt) @ffffc048 (dma) 0xffffe8e0 - deq
    [  223.701885] xhci_hcd 0000:03:00.0: @ffff880137b25050 (virt) @ffffc050 (dma) 0x000000 - tx_info
    [  223.701887] xhci_hcd 0000:03:00.0: @ffff880137b25054 (virt) @ffffc054 (dma) 0x000000 - rsvd[0]
    [  223.701889] xhci_hcd 0000:03:00.0: @ffff880137b25058 (virt) @ffffc058 (dma) 0x000000 - rsvd[1]
    [  223.701892] xhci_hcd 0000:03:00.0: @ffff880137b2505c (virt) @ffffc05c (dma) 0x000000 - rsvd[2]
    ...
    [  223.701927] xhci_hcd 0000:03:00.0: // Ding dong!
    [  223.701992] xhci_hcd 0000:03:00.0: Setup ERROR: address device command for slot 1.
    
    The xHCI spec says that both flags must be set to one for the Address
    Device command.  When the device is first enumerated,
    xhci_setup_addressable_virt_dev() does set those flags.  However, when
    the device is addressed after it has been reset in the configured state,
    xhci_setup_addressable_virt_dev() is not called, and
    xhci_copy_ep0_dequeue_into_input_ctx() is called instead.  That function
    relies on the flags being set up by previous commands, which apparently
    isn't a good assumption.
    
    Move the setting of the flags into the common parent function.
    
    This should be queued for stable kernels as old as 2.6.35, since that
    was the first introduction of xhci_copy_ep0_dequeue_into_input_ctx.
    
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Tested-by: Matt <mdm@iinet.net.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit f353fc7d4deafe84db514a3acb691fb84c7c69ec
Author: Claudio Scordino <claudio@evidence.eu.com>
Date:   Thu Nov 17 11:08:32 2011 +0100

    drivers/base/node.c: fix compilation error with older versions of gcc
    
    commit 91a13c281d7d4648c0b32dede11a0144c4e7984c upstream.
    
    Patch to fix the error message "directives may not be used inside a macro
    argument" which appears when the kernel is compiled for the cris architecture.
    
    Signed-off-by: Claudio Scordino <claudio@evidence.eu.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 0f48082f6606cedf53b8a3beb3ca9e73134b8005
Author: Axel Lin <axel.lin@gmail.com>
Date:   Mon Oct 31 10:20:28 2011 +0800

    pcie-gadget-spear: Add "platform:" prefix for platform modalias
    
    commit 161f14191dc166c4e3f37f68af1bc199c6868b7d upstream.
    
    Since 43cc71eed1250755986da4c0f9898f9a635cb3bf (platform: prefix MODALIAS
    with "platform:"), the platform modalias is prefixed with "platform:".
    
    Signed-off-by: Axel Lin <axel.lin@gmail.com>
    Acked-by: Pratyush Anand <pratyush.anand@st.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 124e35242a58c479cea2a3d6d2b2605737e27309
Author: Jeff Layton <jlayton@kernel.org>
Date:   Fri Nov 4 13:31:21 2011 -0400

    nfs: when attempting to open a directory, fall back on normal lookup (try #5)
    
    commit 1788ea6e3b2a58cf4fb00206e362d9caff8d86a7 upstream.
    
    commit d953126 changed how nfs_atomic_lookup handles an -EISDIR return
    from an OPEN call. Prior to that patch, that caused the client to fall
    back to doing a normal lookup. When that patch went in, the code began
    returning that error to userspace. The d_revalidate codepath however
    never had the corresponding change, so it was still possible to end up
    with a NULL ctx->state pointer after that.
    
    That patch caused a regression. When we attempt to open a directory that
    does not have a cached dentry, that open now errors out with EISDIR. If
    you attempt the same open with a cached dentry, it will succeed.
    
    Fix this by reverting the change in nfs_atomic_lookup and allowing
    attempts to open directories to fall back to a normal lookup
    
    Also, add a NFSv4-specific f_ops->open routine that just returns
    -ENOTDIR. This should never be called if things are working properly,
    but if it ever is, then the dprintk may help in debugging.
    
    To facilitate this, a new file_operations field is also added to the
    nfs_rpc_ops struct.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit ecaaa92488e2589cc6b0a409ce44e7e47a3bb846
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Nov 16 16:27:09 2011 +0100

    TTY: ldisc, wait for ldisc infinitely in hangup
    
    commit 0c73c08ec73dbe080b9ec56696ee21d32754d918 upstream.
    
    For /dev/console case, we do not kill all ldisc users. It's due to
    redirected_tty_write test in __tty_hangup. In that case there still
    might be a process waiting e.g. in n_tty_read for input.
    
    We wait for such processes to disappear. The problem is that we use a
    timeout. After this timeout, we continue closing the ldisc and start
    freeing tty resources. It obviously leads to crashes when the other
    process is woken.
    
    So to fix this, we wait infinitely before reiniting the ldisc. (The
    tiocsetd remains untouched -- times out after 5s.)
    
    This is nicely reproducible with this run from shell:
      exec 0<>/dev/console 1<>/dev/console 2<>/dev/console
    and stopping a getty like:
      systemctl stop serial-getty@ttyS0.service
    
    The crash proper may be produced only under load or with constified
    timing the same as for 92f6fa09b.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Dave Young <hidave.darkstar@gmail.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Dmitriy Matrosov <sgf.dma@gmail.com>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 57ee681901463f23076fa730c7aa1c4cee63952e
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Nov 16 16:27:08 2011 +0100

    TTY: ldisc, move wait idle to caller
    
    commit 300420722e0734a4254f3b634e0f82664495d210 upstream.
    
    It is the only place where reinit is called from. And we really need
    to wait for the old ldisc to go once. Actually this is the place where
    the waiting originally was (before removed and re-added later).
    
    This will make the fix in the following patch easier to implement.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Dave Young <hidave.darkstar@gmail.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Dmitriy Matrosov <sgf.dma@gmail.com>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit f8b8a240e2879d9680238e27953cdc0c7f88131f
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Nov 16 16:27:07 2011 +0100

    TTY: ldisc, allow waiting for ldisc arbitrarily long
    
    commit df92d0561de364de53c42abc5d43e04ab6f326a5 upstream.
    
    To fix a nasty bug in ldisc hup vs. reinit we need to wait infinitely
    long for ldisc to be gone. So here we add a parameter to
    tty_ldisc_wait_idle to allow that.
    
    This is only a preparation for the real fix which is done in the
    following patches.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Dave Young <hidave.darkstar@gmail.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Dmitriy Matrosov <sgf.dma@gmail.com>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 5e3092bd68b8ed5d17ece466ba98e02f4ad035ec
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Tue Oct 25 19:19:43 2011 -0700

    tty: hvc_dcc: Fix duplicate character inputs
    
    commit c2a3e84f950e7ddba1f3914b005861d46ae60359 upstream.
    
    Reading from the DCC grabs a character from the buffer and
    clears the status bit. Since this is a context-changing
    operation, instructions following the character read that rely on
    the status bit being accurate need to be synchronized with an
    ISB.
    
    In this case, the status bit check needs to execute after the
    character read otherwise we run the risk of reading the character
    and checking the status bit before the read can clear the status
    bit in the first place. When this happens, the user will see the
    same character they typed twice, instead of once.
    
    Add an ISB after the read and the write, so that the status check
    is synchronized with the read/write operations.
    
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 6e6d3ebc5179779d72837ff38749843506fd6f7f
Author: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com>
Date:   Fri Oct 28 09:38:49 2011 +0900

    pch_uart: Support new device LAPIS Semiconductor ML7831 IOH
    
    commit 8249f743f732ccbc3056428945ab1d9bd36d46bf upstream.
    
    ML7831 is companion chip for Intel Atom E6xx series.
    
    Signed-off-by: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com>
    Acked-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit b74d0a317e75a602085cf73428bfe7ad456aee85
Author: Tomoya MORINAGA <tomoya.rohm@gmail.com>
Date:   Fri Nov 11 10:55:27 2011 +0900

    pch_uart: Fix DMA resource leak issue
    
    commit 90f04c2926cfb5bf74533b0a7766bc896f6a0c0e upstream.
    
    Changing UART mode PIO->DMA->PIO->DMA like below, pch_uart driver can't get
    DMA channel resource.
    
    setserial /dev/ttyPCH0 ^low_latency
    setserial /dev/ttyPCH0 low_latency
    
    CAUSE:
    Changing mode using setserial command, ".startup" function which gets DMA
    channel is called before ".verify_port" function which sets
    dma-flag(use_dma/use_dma_flag) as 1.
    
    PIO->DMA
      .startup: Since dma-flag is 0, DMA channel is not requested.
      .verify_port: dma-flag is set as 1.
      .shutdown: N/A
    
    DMA->PIO
      .startup: Since dma-flag is 1, DMA channel is requested.
      .verify_port: dma-flag is set as 0.
      .shutdown: Since dma-flag is 0, DMA channel is not released.
    
    This means DMA channel resource leak occurs.
    Next time, this driver can't get DMA channel resource forever.
    
    MODIFICATION:
      Currently, when release DMA channel resource, this driver checks dma-flag.
      However, this specification occurs the above issue.
      This driver must check whether dma_request_channel is executed or not.
      The values are saved in private data variable "chan_tx/chan_tx".
      These variables mean if the value is NULL, DMA channel is not requested,
      if not NULL, DMA channel is requested.
    
    This patch fixes the issue.
    
    Signed-off-by: Tomoya MORINAGA <tomoya.rohm@gmail.com>
    Acked-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 3f04930ad551f504006e35ba5b6d6f717406638c
Author: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com>
Date:   Thu Oct 27 15:45:18 2011 +0900

    pch_uart: Fix hw-flow control issue
    
    commit a1d7cfe29f13cf45f8094929864b9c66bf0cd91b upstream.
    
    Using hardware flow control,
    currently, register of the control-bit(AFE) is not set.
    This patch fixes the issue.
    
    Signed-off-by: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com>
    Acked-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit dbe52bb9fc1e9bf2efd515cc9fab874e8da59de1
Author: Tomoya MORINAGA <tomoya.rohm@gmail.com>
Date:   Fri Nov 11 10:12:18 2011 +0900

    pch_phub: Fix MAC address writing issue for LAPIS ML7831
    
    commit 2a9887919457c6e1bd482e8448223be59d19010a upstream.
    
    ISSUE:
    Using ML7831, MAC address writing doesn't work well.
    
    CAUSE:
    ML7831 and EG20T have the same register map for MAC address access.
    However, this driver processes the writing the same as ML7223.
    This is not true.
    This driver must process the writing the same as EG20T.
    This patch fixes the issue.
    
    Signed-off-by: Tomoya MORINAGA <tomoya.rohm@gmail.com>
    Cc: Masayuki Ohtak <masa-korg@dsn.okisemi.com>
    Cc: Alexander Stein <alexander.stein@systec-electronic.com>
    Cc: Denis Turischev <denis@compulab.co.il>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 3be76a63e71aa11a614415426b30df3b171089e0
Author: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com>
Date:   Fri Oct 28 09:33:13 2011 +0900

    pch_phub: Support new device LAPIS Semiconductor ML7831 IOH
    
    commit 584ad00ce4bfe594e4c4a89944b3c635187a1ca1 upstream.
    
    ML7831 is companion chip for Intel Atom E6xx series.
    
    Signed-off-by: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 4fed2211f1f82bcf36f5b41942dfc453e85eac60
Author: Peter Chen <peter.chen@freescale.com>
Date:   Tue Nov 15 21:52:29 2011 +0100

    PM / driver core: disable device's runtime PM during shutdown
    
    commit af8db1508f2c9f3b6e633e2d2d906c6557c617f9 upstream.
    
    There may be an issue when the user issue "reboot/shutdown" command, then
    the device has shut down its hardware, after that, this runtime-pm featured
    device's driver will probably be scheduled to do its suspend routine,
    and at its suspend routine, it may access hardware, but the device has
    already shutdown physically, then the system hang may be occurred.
    
    I ran out this issue using an auto-suspend supported USB devices, like
    3G modem, keyboard. The usb runtime suspend routine may be scheduled
    after the usb controller has been shut down, and the usb runtime suspend
    routine will try to suspend its roothub(controller), it will access
    register, then the system hang occurs as the controller is shutdown.
    
    Signed-off-by: Peter Chen <peter.chen@freescale.com>
    Acked-by: Ming Lei <tom.leiming@gmail.com>
    Acked-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit d11d8cff78f91d5b956975b5c9e4c271e15f864e
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Thu Nov 10 15:10:23 2011 +0000

    ip6_tunnel: copy parms.name after register_netdevice
    
    commit 731abb9cb27aef6013ce60808a04e04a545f3f4e upstream.
    
    Commit 1c5cae815d removed an explicit call to dev_alloc_name in ip6_tnl_create
    because register_netdevice will now create a valid name.  This works for the
    net_device itself.
    
    However the tunnel keeps a copy of the name in the parms structure for the
    ip6_tnl associated with the tunnel.  parms.name is set by copying the net_device
    name in ip6_tnl_dev_init_gen.  That function is called from ip6_tnl_dev_init in
    ip6_tnl_create, but it is done before register_netdevice is called so the name
    is set to a bogus value in the parms.name structure.
    
    This shows up if you do a simple tunnel add, followed by a tunnel show:
    
    [root@localhost ~]# ip -6 tunnel add remote fec0::100 local fec0::200
    [root@localhost ~]# ip -6 tunnel show
    ip6tnl0: ipv6/ipv6 remote :: local :: encaplimit 0 hoplimit 0 tclass 0x00 flowlabel 0x00000 (flowinfo 0x00000000)
    ip6tnl%d: ipv6/ipv6 remote fec0::100 local fec0::200 encaplimit 4 hoplimit 64 tclass 0x00 flowlabel 0x00000 (flowinfo 0x00000000)
    [root@localhost ~]#
    
    Fix this by moving the strcpy out of ip6_tnl_dev_init_gen, and calling it after
    register_netdevice has successfully returned.
    
    Signed-off-by: Josh Boyer <jwboyer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 5c02e3ae0a16cfc2fb86549cca9898ead2b0d666
Author: Luis R. Rodriguez <mcgrof@qca.qualcomm.com>
Date:   Tue Nov 8 14:28:06 2011 -0800

    cfg80211: fix bug on regulatory core exit on access to last_request
    
    commit 58ebacc66bd11be2327edcefc79de94bd6f5bb4a upstream.
    
    Commit 4d9d88d1 by Scott James Remnant <keybuk@google.com> added
    the .uevent() callback for the regulatory device used during
    the platform device registration. The change was done to account
    for queuing up udev change requests through udevadm triggers.
    The change also meant that upon regulatory core exit we will now
    send a uevent() but the uevent() callback, reg_device_uevent(),
    also accessed last_request. Right before commiting device suicide
    we free'd last_request but never set it to NULL so
    platform_device_unregister() would lead to bogus kernel paging
    request. Fix this and also simply supress uevents right before
    we commit suicide as they are pointless.
    
    This fix is required for kernels >= v2.6.39
    
    $ git describe --contains 4d9d88d1
    v2.6.39-rc1~468^2~25^2^2~21
    
    The impact of not having this present is that a bogus paging
    access may occur (only read) upon cfg80211 unload time. You
    may also get this BUG complaint below. Although Johannes
    could not reproduce the issue this fix is theoretically correct.
    
    mac80211_hwsim: unregister radios
    mac80211_hwsim: closing netlink
    BUG: unable to handle kernel paging request at ffff88001a06b5ab
    IP: [<ffffffffa030df9a>] reg_device_uevent+0x1a/0x50 [cfg80211]
    PGD 1836063 PUD 183a063 PMD 1ffcb067 PTE 1a06b160
    Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC
    CPU 0
    Modules linked in: cfg80211(-) [last unloaded: mac80211]
    
    Pid: 2279, comm: rmmod Tainted: G        W   3.1.0-wl+ #663 Bochs Bochs
    RIP: 0010:[<ffffffffa030df9a>]  [<ffffffffa030df9a>] reg_device_uevent+0x1a/0x50 [cfg80211]
    RSP: 0000:ffff88001c5f9d58  EFLAGS: 00010286
    RAX: 0000000000000000 RBX: ffff88001d2eda88 RCX: ffff88001c7468fc
    RDX: ffff88001a06b5a0 RSI: ffff88001c7467b0 RDI: ffff88001c7467b0
    RBP: ffff88001c5f9d58 R08: 000000000000ffff R09: 000000000000ffff
    R10: 0000000000000000 R11: 0000000000000001 R12: ffff88001c7467b0
    R13: ffff88001d2eda78 R14: ffffffff8164a840 R15: 0000000000000001
    FS:  00007f8a91d8a6e0(0000) GS:ffff88001fc00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    CR2: ffff88001a06b5ab CR3: 000000001c62e000 CR4: 00000000000006f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Process rmmod (pid: 2279, threadinfo ffff88001c5f8000, task ffff88000023c780)
    Stack:
     ffff88001c5f9d98 ffffffff812ff7e5 ffffffff8176ab3d ffff88001c7468c2
     000000000000ffff ffff88001d2eda88 ffff88001c7467b0 ffff880000114820
     ffff88001c5f9e38 ffffffff81241dc7 ffff88001c5f9db8 ffffffff81040189
    Call Trace:
     [<ffffffff812ff7e5>] dev_uevent+0xc5/0x170
     [<ffffffff81241dc7>] kobject_uevent_env+0x1f7/0x490
     [<ffffffff81040189>] ? sub_preempt_count+0x29/0x60
     [<ffffffff814cab1a>] ? _raw_spin_unlock_irqrestore+0x4a/0x90
     [<ffffffff81305307>] ? devres_release_all+0x27/0x60
     [<ffffffff8124206b>] kobject_uevent+0xb/0x10
     [<ffffffff812fee27>] device_del+0x157/0x1b0
     [<ffffffff8130377d>] platform_device_del+0x1d/0x90
     [<ffffffff81303b76>] platform_device_unregister+0x16/0x30
     [<ffffffffa030fffd>] regulatory_exit+0x5d/0x180 [cfg80211]
     [<ffffffffa032bec3>] cfg80211_exit+0x2b/0x45 [cfg80211]
     [<ffffffff8109a84c>] sys_delete_module+0x16c/0x220
     [<ffffffff8108a23e>] ? trace_hardirqs_on_caller+0x7e/0x120
     [<ffffffff814cba02>] system_call_fastpath+0x16/0x1b
    Code: <all your base are belong to me>
    RIP  [<ffffffffa030df9a>] reg_device_uevent+0x1a/0x50 [cfg80211]
     RSP <ffff88001c5f9d58>
    CR2: ffff88001a06b5ab
    ---[ end trace 147c5099a411e8c0 ]---
    
    Reported-by: Johannes Berg <johannes@sipsolutions.net>
    Cc: Scott James Remnant <keybuk@google.com>
    Signed-off-by: Luis R. Rodriguez <mcgrof@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit c1ce1705eb0778927a0b81a6eb29e8ff193aa3de
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Nov 3 09:27:01 2011 +0100

    nl80211: fix HT capability attribute validation
    
    commit 6c7394197af90f6a332180e33f5d025d3037d883 upstream.
    
    Since the NL80211_ATTR_HT_CAPABILITY attribute is
    used as a struct, it needs a minimum, not maximum
    length. Enforce that properly. Not doing so could
    potentially lead to reading after the buffer.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit ae1e9df381d5197015356e22de9d7acaf646a9ab
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Nov 8 13:04:41 2011 +0100

    mac80211: fix bug in ieee80211_build_probe_req
    
    commit 5b2bbf75a24d6b06afff6de0eb4819413fd81971 upstream.
    
    ieee80211_probereq_get() can return NULL in
    which case we should clean up & return NULL
    in ieee80211_build_probe_req() as well.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 492d7eff2def54c6e5521ee82764ca22025e7030
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Nov 8 12:28:33 2011 +0100

    mac80211: fix NULL dereference in radiotap code
    
    commit f8d1ccf15568268c76f913b45ecdd33134387f1a upstream.
    
    When receiving failed PLCP frames is enabled, there
    won't be a rate pointer when we add the radiotap
    header and thus the kernel will crash. Fix this by
    not assuming the rate pointer is always valid. It's
    still always valid for frames that have good PLCP
    though, and that is checked & enforced.
    
    This was broken by my
    commit fc88518916793af8ad6a02e05ff254d95c36d875
    Author: Johannes Berg <johannes.berg@intel.com>
    Date:   Fri Jul 30 13:23:12 2010 +0200
    
        mac80211: don't check rates on PLCP error frames
    
    where I removed the check in this case but didn't
    take into account that the rate info would be used.
    
    Reported-by: Xiaokang Qin <xiaokang.qin@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 11885cd854b27c1dcf35ab44d4899e8d20e08290
Author: Gertjan van Wingerde <gwingerde@gmail.com>
Date:   Sat Nov 12 19:10:44 2011 +0100

    rt2x00: Fix sleep-while-atomic bug in powersaving code.
    
    commit ed66ba472a742cd8df37d7072804b2111cdb1014 upstream.
    
    The generic powersaving code that determines after reception of a frame
    whether the device should go back to sleep or whether is could stay
    awake was calling rt2x00lib_config directly from RX tasklet context.
    On a number of the devices this call can actually sleep, due to having
    to confirm that the sleeping commands have been executed successfully.
    
    Fix this by moving the call to rt2x00lib_config to a workqueue call.
    
    This fixes bug https://bugzilla.redhat.com/show_bug.cgi?id=731672
    
    Tested-by: Tomas Trnka <tomastrnka@gmx.com>
    Signed-off-by: Gertjan van Wingerde <gwingerde@gmail.com>
    Acked-by: Ivo van Doorn <IvDoorn@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 78724db116c88705db2d6acbe66c56bed90fc991
Author: Jesper Juhl <jj@chaosbits.net>
Date:   Sun Nov 13 22:14:32 2011 +0100

    Net, libertas: Resolve memory leak in if_spi_host_to_card()
    
    commit fe09b32a4361bea44169b2063e8c867cabb6a8ba upstream.
    
    If we hit the default case in the switch in if_spi_host_to_card() we'll leak
    the memory we allocated for 'packet'. This patch resolves the leak by freeing
    the allocated memory in that case.
    
    Signed-off-by: Jesper Juhl <jj@chaosbits.net>
    Acked-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit a633bc89bb5626c6d700c3fc5c3bee01da79ce47
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Mon Nov 7 18:05:53 2011 +0100

    ARM: 7150/1: Allow kernel unaligned accesses on ARMv6+ processors
    
    commit 8428e84d42179c2a00f5f6450866e70d802d1d05 upstream.
    
    Recent gcc versions generate unaligned accesses by default on ARMv6 and
    later processors. This patch ensures that the SCTLR.A bit is always
    cleared on such processors to avoid kernel traping before
    alignment_init() is called.
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: John Linn <John.Linn@xilinx.com>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 6e99164ee37d513fb99c7b941e3eecbcd8ae8573
Author: Adam Jackson <ajax@redhat.com>
Date:   Tue Jul 26 16:53:06 2011 -0400

    drm/i915/pch: Save/restore PCH_PORT_HOTPLUG across suspend
    
    commit cda2bb78c24de7674eafa3210314dc75bed344a6 upstream.
    
    At least on a Lenovo X220 the HPD bits of this are enabled at boot but
    cleared after resume, which means plug interrupts stop working.
    
    This also happens to fix DP displays re-lighting on resume.  I'm quite
    certain that's an accident: the first DP link train inevitably fails on
    that machine, and it's only serendipity that we're getting multiple plug
    interrupts and the second train works.  But I shall take my victories
    where I get them.
    
    Signed-off-by: Adam Jackson <ajax@redhat.com>
    Tested-by: Keith Packard <keithp@keithp.com>
    Reviewed-by: Keith Packard <keithp@keithp.com>
    Signed-off-by: Keith Packard <keithp@keithp.com>
    Cc: Jonathan Nieder <jrnieder@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit ef2b44d1861ec01b9058ab3bcf82ad4c138551fe
Author: Tony Jago <tony@hammertelecom.com.au>
Date:   Fri Aug 12 00:19:11 2011 -0300

    saa7164: Add support for another HVR2200 hardware revision
    
    commit 62dd28d0c659db29bdb89cfe9f0aefe42f0adfe9 upstream.
    
    Hauppauge have released a new model rev, sub id 8940, this adds
    support.
    
    [stoth@kernellabs.com: I modified Tony's patch slightly in relation to the
     card numbering in saa7164.h, appending rather than inserting the new card
     - normal practise]
    Signed-off-by: Tony Jago <tony@hammertelecom.com.au>
    Signed-off-by: Steven Toth <stoth@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 6e5dcf64dfc2415a59987a4096b4ebbf03469bf6
Author: Vasily Averin <vvs@parallels.com>
Date:   Fri Nov 11 13:42:16 2011 +0400

    aacraid: controller hangs if kernel uses non-default ASPM policy
    
    commit cf16123c9c8e346ed1dd171295a678d77648d7f8 upstream.
    
    Aacraid controller can hang on some nodes if kernel uses non-default
    (powersave) ASPM policy.  Controller hangs shortly after successful load and
    hardware detection. Scsi error handler detects this hang and tries to restart
    hardware but it does not help.
    
    Initially it was noticed on RHEL6-based openVZ kernel after backporting
    aacraid driver from mainline (RHEL6 kernel with original driver works well)
    http://bugzilla.openvz.org/show_bug.cgi?id=2043
    
    This issue happens because default ASPM policy was changed in Red Hat
    kernels. Therefore guys from Red Hat have noticed this problem long time ago:
    on Fedora 12
     https://bugzilla.redhat.com/show_bug.cgi?id=540478
    on Fedora 14
     https://bugzilla.redhat.com/show_bug.cgi?id=679385
    
    In RHEL6 kernel this issue was fixed, ASPM was disabled in aacraid driver. In
    kernel changelog I've found that seems it was done by Matthew Garrett: -
    [scsi] aacraid: Disable ASPM by default (Matthew Garrett) [599735]
    
    However seems this patch was not submitted to mainline. I've reproduced this
    issue on vanilla 3.1.0 kernel booted with "pcie_aspm.policy=powersave" option,
    So I believe it makes sense to do it now.
    
    Signed-off-by:  Vasily Averin <vvs@sw.ru>
    [mjg: Checking the Windows drivers indicates that they disable ASPM under all
    circumstances, so:]
    Acked-by: Matthew Garrett <mjg@redhat.com>
    Acked-by: Achim Leubner <Achim_Leubner@pmc-sierra.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 4987223080c8390203a0a588df04d58eafde4a07
Author: Matthew Garrett <mjg@redhat.com>
Date:   Fri Nov 11 11:14:23 2011 -0500

    hpsa: Disable ASPM
    
    commit e5a44df85e8d78e5c2d3d2e4f59b460905691e2f upstream.
    
    The Windows driver .inf disables ASPM on hpsa devices. Do the same because the
    selection of a non default ASPM policy can cause the device to hang.
    
    Signed-off-by: Matthew Garrett <mjg@redhat.com>
    Acked-by: Mike Miller <mike.miller@hp.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 9c6e9f7596fb2c2dbcbb32d45efdb0baf6ae2e52
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Mon Nov 7 08:51:24 2011 -0600

    fix WARNING: at drivers/scsi/scsi_lib.c:1704
    
    commit 4e6c82b3614a18740ef63109d58743a359266daf upstream.
    
    On Mon, 2011-11-07 at 17:24 +1100, Stephen Rothwell wrote:
    > Hi all,
    >
    > Starting some time last week I am getting the following during boot on
    > our PPC970 blade:
    >
    > calling  .ipr_init+0x0/0x68 @ 1
    > ipr: IBM Power RAID SCSI Device Driver version: 2.5.2 (April 27, 2011)
    > ipr 0000:01:01.0: Found IOA with IRQ: 26
    > ipr 0000:01:01.0: Starting IOA initialization sequence.
    > ipr 0000:01:01.0: Adapter firmware version: 06160039
    > ipr 0000:01:01.0: IOA initialized.
    > scsi0 : IBM 572E Storage Adapter
    > ------------[ cut here ]------------
    > WARNING: at drivers/scsi/scsi_lib.c:1704
    > Modules linked in:
    > NIP: c00000000053b3d4 LR: c00000000053e5b0 CTR: c000000000541d70
    > REGS: c0000000783c2f60 TRAP: 0700   Not tainted  (3.1.0-autokern1)
    > MSR: 8000000000029032 <EE,ME,CE,IR,DR>  CR: 24002024  XER: 20000002
    > TASK = c0000000783b8000[1] 'swapper' THREAD: c0000000783c0000 CPU: 0
    > GPR00: 0000000000000001 c0000000783c31e0 c000000000cf38b0 c00000000239a9d0
    > GPR04: c000000000cbe8f8 0000000000000000 c0000000783c3040 0000000000000000
    > GPR08: c000000075daf488 c000000078a3b7ff c000000000bcacc8 0000000000000000
    > GPR12: 0000000044002028 c000000007ffb000 0000000002e40000 000000000099b800
    > GPR16: 0000000000000000 c000000000bba5fc c000000000a61db8 0000000000000000
    > GPR20: 0000000001b77200 0000000000000000 c000000078990000 0000000000000001
    > GPR24: c000000002396828 0000000000000000 0000000000000000 c000000078a3b938
    > GPR28: fffffffffffffffa c0000000008ad2c0 c000000000c7faa8 c00000000239a9d0
    > NIP [c00000000053b3d4] .scsi_free_queue+0x24/0x90
    > LR [c00000000053e5b0] .scsi_alloc_sdev+0x280/0x2e0
    > Call Trace:
    > [c0000000783c31e0] [c000000000c7faa8] wireless_seq_fops+0x278d0/0x2eb88 (unreliable)
    > [c0000000783c3270] [c00000000053e5b0] .scsi_alloc_sdev+0x280/0x2e0
    > [c0000000783c3330] [c00000000053eba0] .scsi_probe_and_add_lun+0x390/0xb40
    > [c0000000783c34a0] [c00000000053f7ec] .__scsi_scan_target+0x16c/0x650
    > [c0000000783c35f0] [c00000000053fd90] .scsi_scan_channel+0xc0/0x100
    > [c0000000783c36a0] [c00000000053fefc] .scsi_scan_host_selected+0x12c/0x1c0
    > [c0000000783c3750] [c00000000083dcb4] .ipr_probe+0x2c0/0x390
    > [c0000000783c3830] [c0000000003f50b4] .local_pci_probe+0x34/0x50
    > [c0000000783c38a0] [c0000000003f5f78] .pci_device_probe+0x148/0x150
    > [c0000000783c3950] [c0000000004e1e8c] .driver_probe_device+0xdc/0x210
    > [c0000000783c39f0] [c0000000004e20cc] .__driver_attach+0x10c/0x110
    > [c0000000783c3a80] [c0000000004e1228] .bus_for_each_dev+0x98/0xf0
    > [c0000000783c3b30] [c0000000004e1bf8] .driver_attach+0x28/0x40
    > [c0000000783c3bb0] [c0000000004e07d8] .bus_add_driver+0x218/0x340
    > [c0000000783c3c60] [c0000000004e2a2c] .driver_register+0x9c/0x1b0
    > [c0000000783c3d00] [c0000000003f62d4] .__pci_register_driver+0x64/0x140
    > [c0000000783c3da0] [c000000000b99f88] .ipr_init+0x4c/0x68
    > [c0000000783c3e20] [c00000000000ad24] .do_one_initcall+0x1a4/0x1e0
    > [c0000000783c3ee0] [c000000000b512d0] .kernel_init+0x14c/0x1fc
    > [c0000000783c3f90] [c000000000022468] .kernel_thread+0x54/0x70
    > Instruction dump:
    > ebe1fff8 7c0803a6 4e800020 7c0802a6 fba1ffe8 fbe1fff8 7c7f1b78 f8010010
    > f821ff71 e8030398 3120ffff 7c090110 <0b000000> e86303b0 482de065 60000000
    > ---[ end trace 759bed76a85e8dec ]---
    > scsi 0:0:1:0: Direct-Access     IBM-ESXS MAY2036RC        T106 PQ: 0 ANSI: 5
    > ------------[ cut here ]------------
    >
    > I get lots more of these.  The obvious commit to point the finger at
    > is 3308511c93e6 ("[SCSI] Make scsi_free_queue() kill pending SCSI
    > commands") but the root cause may be something different.
    
    Caused by
    
    commit f7c9c6bb14f3104608a3a83cadea10a6943d2804
    Author: Anton Blanchard <anton@samba.org>
    Date:   Thu Nov 3 08:56:22 2011 +1100
    
        [SCSI] Fix block queue and elevator memory leak in scsi_alloc_sdev
    
    Doesn't completely do the teardown.  The true fix is to do a proper
    teardown instead of hand rolling it
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Tested-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 2cecc3d5df1bfb3356234b81cda993e187ac4f89
Author: Edward Donovan <edward.donovan@numble.net>
Date:   Tue Nov 1 15:29:44 2011 -0400

    genirq: Fix irqfixup, irqpoll regression
    
    commit c75d720fca8a91ce99196d33adea383621027bf2 upstream.
    
    commit d05c65fff0 ("genirq: spurious: Run only one poller at a time")
    introduced a regression, leaving the boot options 'irqfixup' and
    'irqpoll' non-functional. The patch placed tests in each function, to
    exit if the function is already running. The test in 'misrouted_irq'
    exited when it should have proceeded, effectively disabling
    'misrouted_irq' and 'poll_spurious_irqs'.
    
    The check for an already running poller needs to be "!= 1" not "== 1"
    as "1" is the value when the first poller starts running.
    
    Signed-off-by: Edward Donovan <edward.donovan@numble.net>
    Cc: maciej.rutecki@gmail.com
    Link: http://lkml.kernel.org/r/1320175784-6745-1-git-send-email-edward.donovan@numble.net
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
