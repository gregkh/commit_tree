commit ae6f8ce9b7496a4ffd3ba545f824b44cdb217149
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Nov 26 11:58:45 2021 +0100

    Linux 4.4.293
    
    Link: https://lore.kernel.org/r/20211124115658.328640564@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20211125131156.607226770@linuxfoundation.org
    Link: https://lore.kernel.org/r/20211125160503.347646915@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad4775bdacf90902b80ea56f2aa5117f9750db74
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Oct 18 22:40:28 2021 +0200

    usb: max-3421: Use driver data instead of maintaining a list of bound devices
    
    commit fc153aba3ef371d0d76eb88230ed4e0dee5b38f2 upstream.
    
    Instead of maintaining a single-linked list of devices that must be
    searched linearly in .remove() just use spi_set_drvdata() to remember the
    link between the spi device and the driver struct. Then the global list
    and the next member can be dropped.
    
    This simplifies the driver, reduces the memory footprint and the time to
    search the list. Also it makes obvious that there is always a corresponding
    driver struct for a given device in .remove(), so the error path for
    !max3421_hcd can be dropped, too.
    
    As a side effect this fixes a data inconsistency when .probe() races with
    itself for a second max3421 device in manipulating max3421_hcd_list. A
    similar race is fixed in .remove(), too.
    
    Fixes: 2d53139f3162 ("Add support for using a MAX3421E chip as a host driver.")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20211018204028.2914597-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3439d462e091bd86bff1aa06480702162030fa58
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 5 10:09:25 2021 +0100

    ASoC: DAPM: Cover regression by kctl change notification fix
    
    commit 827b0913a9d9d07a0c3e559dbb20ca4d6d285a54 upstream.
    
    The recent fix for DAPM to correct the kctl change notification by the
    commit 5af82c81b2c4 ("ASoC: DAPM: Fix missing kctl change
    notifications") caused other regressions since it changed the behavior
    of snd_soc_dapm_set_pin() that is called from several API functions.
    Formerly it returned always 0 for success, but now it returns 0 or 1.
    
    This patch addresses it, restoring the old behavior of
    snd_soc_dapm_set_pin() while keeping the fix in
    snd_soc_dapm_put_pin_switch().
    
    Fixes: 5af82c81b2c4 ("ASoC: DAPM: Fix missing kctl change notifications")
    Reported-by: Yu-Hsuan Hsu <yuhsuan@chromium.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20211105090925.20575-1-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45011f2973f6b52cf50db397bb27bf805f5f0e7f
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat Nov 20 13:39:39 2021 +0100

    batman-adv: Avoid WARN_ON timing related checks
    
    commit 9f460ae31c4435fd022c443a6029352217a16ac1 upstream.
    
    The soft/batadv interface for a queued OGM can be changed during the time
    the OGM was queued for transmission and when the OGM is actually
    transmitted by the worker.
    
    But WARN_ON must be used to denote kernel bugs and not to print simple
    warnings. A warning can simply be printed using pr_warn.
    
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Reported-by: syzbot+c0b807de416427ff3dd1@syzkaller.appspotmail.com
    Fixes: ef0a937f7a14 ("batman-adv: consider outgoing interface in OGM sending")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context. ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cf60ad2478b4b5090ff70f1b4d027d1103220c1
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat Nov 20 13:39:38 2021 +0100

    batman-adv: Don't always reallocate the fragmentation skb head
    
    commit 992b03b88e36254e26e9a4977ab948683e21bd9f upstream.
    
    When a packet is fragmented by batman-adv, the original batman-adv header
    is not modified. Only a new fragmentation is inserted between the original
    one and the ethernet header. The code must therefore make sure that it has
    a writable region of this size in the skbuff head.
    
    But it is not useful to always reallocate the skbuff by this size even when
    there would be more than enough headroom still in the skb. The reallocation
    is just to costly during in this codepath.
    
    Fixes: ee75ed88879a ("batman-adv: Fragment and send skbs larger than mtu")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context, switch back to old return type +
      labels ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94470d99e0733eb2983eba830d2f16831b944ee8
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat Nov 20 13:39:37 2021 +0100

    batman-adv: Reserve needed_*room for fragments
    
    commit c5cbfc87558168ef4c3c27ce36eba6b83391db19 upstream.
    
    The batadv net_device is trying to propagate the needed_headroom and
    needed_tailroom from the lower devices. This is needed to avoid cost
    intensive reallocations using pskb_expand_head during the transmission.
    
    But the fragmentation code split the skb's without adding extra room at the
    end/beginning of the various fragments. This reduced the performance of
    transmissions over complex scenarios (batadv on vxlan on wireguard) because
    the lower devices had to perform the reallocations at least once.
    
    Fixes: ee75ed88879a ("batman-adv: Fragment and send skbs larger than mtu")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context. ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 307f72a3522da82ffbc201ef684fcff3238505f1
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat Nov 20 13:39:36 2021 +0100

    batman-adv: Consider fragmentation for needed_headroom
    
    commit 4ca23e2c2074465bff55ea14221175fecdf63c5f upstream.
    
    If a batman-adv packets has to be fragmented, then the original batman-adv
    packet header is not stripped away. Instead, only a new header is added in
    front of the packet after it was split.
    
    This size must be considered to avoid cost intensive reallocations during
    the transmission through the various device layers.
    
    Fixes: 7bca68c7844b ("batman-adv: Add lower layer needed_(head|tail)room to own ones")
    Reported-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a372d88ab7f702d5da6fea90529089ea024dfbf
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Sat Nov 20 13:39:35 2021 +0100

    batman-adv: set .owner to THIS_MODULE
    
    commit 14a2e551faea53d45bc11629a9dac88f88950ca7 upstream.
    
    If THIS_MODULE is not set, the module would be removed while debugfs is
    being used.
    It eventually makes kernel panic.
    
    Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: switch to old filename. ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a49b02acd5e349f22ec3696bbad2d67a543bb75
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Sat Nov 20 13:39:34 2021 +0100

    batman-adv: mcast: fix duplicate mcast packets from BLA backbone to mesh
    
    commit 2369e827046920ef0599e6a36b975ac5c0a359c2 upstream.
    
    Scenario:
    * Multicast frame send from BLA backbone gateways (multiple nodes
      with their bat0 bridged together, with BLA enabled) sharing the same
      LAN to nodes in the mesh
    
    Issue:
    * Nodes receive the frame multiple times on bat0 from the mesh,
      once from each foreign BLA backbone gateway which shares the same LAN
      with another
    
    For multicast frames via batman-adv broadcast packets coming from the
    same BLA backbone but from different backbone gateways duplicates are
    currently detected via a CRC history of previously received packets.
    
    However this CRC so far was not performed for multicast frames received
    via batman-adv unicast packets. Fixing this by appyling the same check
    for such packets, too.
    
    Room for improvements in the future: Ideally we would introduce the
    possibility to not only claim a client, but a complete originator, too.
    This would allow us to only send a multicast-in-unicast packet from a BLA
    backbone gateway claiming the node and by that avoid potential redundant
    transmissions in the first place.
    
    Fixes: fe2da6ff27c7 ("batman-adv: add broadcast duplicate check")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context, correct fixes line, switch back to
      int return type ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a1c1e06558d7ce8b2271d854902ceb8d7bec005
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Sat Nov 20 13:39:33 2021 +0100

    batman-adv: mcast: fix duplicate mcast packets in BLA backbone from mesh
    
    commit 74c09b7275126da1b642b90c9cdc3ae8b729ad4b upstream
    
    Scenario:
    * Multicast frame send from mesh to a BLA backbone (multiple nodes
      with their bat0 bridged together, with BLA enabled)
    
    Issue:
    * BLA backbone nodes receive the frame multiple times on bat0,
      once from mesh->bat0 and once from each backbone_gw from LAN
    
    For unicast, a node will send only to the best backbone gateway
    according to the TQ. However for multicast we currently cannot determine
    if multiple destination nodes share the same backbone if they don't share
    the same backbone with us. So we need to keep sending the unicasts to
    all backbone gateways and let the backbone gateways decide which one
    will forward the frame. We can use the CLAIM mechanism to make this
    decision.
    
    One catch: The batman-adv gateway feature for DHCP packets potentially
    sends multicast packets in the same batman-adv unicast header as the
    multicast optimizations code. And we are not allowed to drop those even
    if we did not claim the source address of the sender, as for such
    packets there is only this one multicast-in-unicast packet.
    
    How can we distinguish the two cases?
    
    The gateway feature uses a batman-adv unicast 4 address header. While
    the multicast-to-unicasts feature uses a simple, 3 address batman-adv
    unicast header. So let's use this to distinguish.
    
    Fixes: 2d3f6ccc4ea5 ("batman-adv: check incoming packet type for bla")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Acked-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context, correct fixes line ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5f6a9d52373985c443f919e08e4681f3ec9326a
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Sat Nov 20 13:39:32 2021 +0100

    batman-adv: mcast: fix duplicate mcast packets in BLA backbone from LAN
    
    commit 3236d215ad38a3f5372e65cd1e0a52cf93d3c6a2 upstream.
    
    Scenario:
    * Multicast frame send from a BLA backbone (multiple nodes with
      their bat0 bridged together, with BLA enabled)
    
    Issue:
    * BLA backbone nodes receive the frame multiple times on bat0
    
    For multicast frames received via batman-adv broadcast packets the
    originator of the broadcast packet is checked before decapsulating and
    forwarding the frame to bat0 (batadv_bla_is_backbone_gw()->
    batadv_recv_bcast_packet()). If it came from a node which shares the
    same BLA backbone with us then it is not forwarded to bat0 to avoid a
    loop.
    
    When sending a multicast frame in a non-4-address batman-adv unicast
    packet we are currently missing this check - and cannot do so because
    the batman-adv unicast packet has no originator address field.
    
    However, we can simply fix this on the sender side by only sending the
    multicast frame via unicasts to interested nodes which do not share the
    same BLA backbone with us. This also nicely avoids some unnecessary
    transmissions on mesh side.
    
    Note that no infinite loop was observed, probably because of dropping
    via batadv_interface_tx()->batadv_bla_tx(). However the duplicates still
    utterly confuse switches/bridges, ICMPv6 duplicate address detection and
    neighbor discovery and therefore leads to long delays before being able
    to establish TCP connections, for instance. And it also leads to the Linux
    bridge printing messages like:
    "br-lan: received packet on eth1 with own address as source address ..."
    
    Fixes: 1d8ab8d3c176 ("batman-adv: Modified forwarding behaviour for multicast packets")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backport: drop usage in non-existing batadv_mcast_forw_*,
      correct fixes line ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13211be723559da8b0787772bae3c26c06418ffe
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat Nov 20 13:39:31 2021 +0100

    batman-adv: Prevent duplicated softif_vlan entry
    
    commit 94cb82f594ed86be303398d6dfc7640a6f1d45d4 upstream.
    
    The function batadv_softif_vlan_get is responsible for adding new
    softif_vlan to the softif_vlan_list. It first checks whether the entry
    already is in the list or not. If it is, then the creation of a new entry
    is aborted.
    
    But the lock for the list is only held when the list is really modified.
    This could lead to duplicated entries because another context could create
    an entry with the same key between the check and the list manipulation.
    
    The check and the manipulation of the list must therefore be in the same
    locked code section.
    
    Fixes: 5d2c05b21337 ("batman-adv: add per VLAN interface attribute framework")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backport: switch back to atomic_t based reference counting. ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a00ee3ecc07919f047bddaef1fa289057e91a5
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Sat Nov 20 13:39:30 2021 +0100

    batman-adv: Fix multicast TT issues with bogus ROAM flags
    
    commit a44ebeff6bbd6ef50db41b4195fca87b21aefd20 upstream.
    
    When a (broken) node wrongly sends multicast TT entries with a ROAM
    flag then this causes any receiving node to drop all entries for the
    same multicast MAC address announced by other nodes, leading to
    packet loss.
    
    Fix this DoS vector by only storing TT sync flags. For multicast TT
    non-sync'ing flag bits like ROAM are unused so far anyway.
    
    Fixes: 1d8ab8d3c176 ("batman-adv: Modified forwarding behaviour for multicast packets")
    Reported-by: Leonardo Mörlein <me@irrelefant.net>
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context, use old style to access flags ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2074610a0a9a68a3f81ebd82e863182656ffc043
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat Nov 20 13:39:29 2021 +0100

    batman-adv: Keep fragments equally sized
    
    commit 1c2bcc766be44467809f1798cd4ceacafe20a852 upstream.
    
    The batman-adv fragmentation packets have the design problem that they
    cannot be refragmented and cannot handle padding by the underlying link.
    The latter often leads to problems when networks are incorrectly configured
    and don't use a common MTU.
    
    The sender could for example fragment a 1271 byte frame (plus external
    ethernet header (14) and batadv unicast header (10)) to fit in a 1280 bytes
    large MTU of the underlying link (max. 1294 byte frames). This would create
    a 1294 bytes large frame (fragment 2) and a 55 bytes large frame
    (fragment 1). The extra 54 bytes are the fragment header (20) added to each
    fragment and the external ethernet header (14) for the second fragment.
    
    Let us assume that the next hop is then not able to transport 1294 bytes to
    its next hop. The 1294 byte large frame will be dropped but the 55 bytes
    large fragment will still be forwarded to its destination.
    
    Or let us assume that the underlying hardware requires that each frame has
    a minimum size (e.g. 60 bytes). Then it will pad the 55 bytes frame to 60
    bytes. The receiver of the 60 bytes frame will no longer be able to
    correctly assemble the two frames together because it is not aware that 5
    bytes of the 60 bytes frame are padding and don't belong to the reassembled
    frame.
    
    This can partly be avoided by splitting frames more equally. In this
    example, the 675 and 674 bytes large fragment frames could both potentially
    reach its destination without being too large or too small.
    
    Reported-by: Martin Weinelt <martin@darmstadt.freifunk.net>
    Fixes: ee75ed88879a ("batman-adv: Fragment and send skbs larger than mtu")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.4 backported: adjust context, switch back to old return type +
      labels ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 756dd6a155d8b42b3c71ef3cbebe59747e40a0f9
Author: hongao <hongao@uniontech.com>
Date:   Thu Nov 11 11:32:07 2021 +0800

    drm/amdgpu: fix set scaling mode Full/Full aspect/Center not works on vga and dvi connectors
    
    commit bf552083916a7f8800477b5986940d1c9a31b953 upstream.
    
    amdgpu_connector_vga_get_modes missed function amdgpu_get_native_mode
    which assign amdgpu_encoder->native_mode with *preferred_mode result in
    amdgpu_encoder->native_mode.clock always be 0. That will cause
    amdgpu_connector_set_property returned early on:
    if ((rmx_type != DRM_MODE_SCALE_NONE) &&
            (amdgpu_encoder->native_mode.clock == 0))
    when we try to set scaling mode Full/Full aspect/Center.
    Add the missing function to amdgpu_connector_vga_get_mode can fix this.
    It also works on dvi connectors because
    amdgpu_connector_dvi_helper_funcs.get_mode use the same method.
    
    Signed-off-by: hongao <hongao@uniontech.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17bda637550fa4a19f22a61e16bdfd995e7d400c
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:53:53 2021 +0200

    drm/udl: fix control-message timeout
    
    commit 5591c8f79db1729d9c5ac7f5b4d3a5c26e262d93 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 5320918b9a87 ("drm/udl: initial UDL driver (v4)")
    Cc: stable@vger.kernel.org      # 3.4
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211025115353.5089-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f06bb8c216bcd172394f61e557727e691b4cb24
Author: Nguyen Dinh Phi <phind.uet@gmail.com>
Date:   Thu Oct 28 01:37:22 2021 +0800

    cfg80211: call cfg80211_stop_ap when switch from P2P_GO type
    
    commit 563fbefed46ae4c1f70cffb8eb54c02df480b2c2 upstream.
    
    If the userspace tools switch from NL80211_IFTYPE_P2P_GO to
    NL80211_IFTYPE_ADHOC via send_msg(NL80211_CMD_SET_INTERFACE), it
    does not call the cleanup cfg80211_stop_ap(), this leads to the
    initialization of in-use data. For example, this path re-init the
    sdata->assigned_chanctx_list while it is still an element of
    assigned_vifs list, and makes that linked list corrupt.
    
    Signed-off-by: Nguyen Dinh Phi <phind.uet@gmail.com>
    Reported-by: syzbot+bbf402b783eeb6d908db@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20211027173722.777287-1-phind.uet@gmail.com
    Cc: stable@vger.kernel.org
    Fixes: ac800140c20e ("cfg80211: .stop_ap when interface is going down")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e8463c4acfbb03a44efb09b8b30ef45b138a4f9
Author: Sven Schnelle <svens@stackframe.org>
Date:   Sun Nov 14 17:08:17 2021 +0100

    parisc/sticon: fix reverse colors
    
    commit bec05f33ebc1006899c6d3e59a00c58881fe7626 upstream.
    
    sticon_build_attr() checked the reverse argument and flipped
    background and foreground color, but returned the non-reverse
    value afterwards. Fix this and also add two local variables
    for foreground and background color to make the code easier
    to read.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd660a20fea3ec60a49709ef5360f145ec0fe779
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Nov 2 14:49:16 2021 +0200

    btrfs: fix memory ordering between normal and ordered work functions
    
    commit 45da9c1767ac31857df572f0a909fbe88fd5a7e9 upstream.
    
    Ordered work functions aren't guaranteed to be handled by the same thread
    which executed the normal work functions. The only way execution between
    normal/ordered functions is synchronized is via the WORK_DONE_BIT,
    unfortunately the used bitops don't guarantee any ordering whatsoever.
    
    This manifested as seemingly inexplicable crashes on ARM64, where
    async_chunk::inode is seen as non-null in async_cow_submit which causes
    submit_compressed_extents to be called and crash occurs because
    async_chunk::inode suddenly became NULL. The call trace was similar to:
    
        pc : submit_compressed_extents+0x38/0x3d0
        lr : async_cow_submit+0x50/0xd0
        sp : ffff800015d4bc20
    
        <registers omitted for brevity>
    
        Call trace:
         submit_compressed_extents+0x38/0x3d0
         async_cow_submit+0x50/0xd0
         run_ordered_work+0xc8/0x280
         btrfs_work_helper+0x98/0x250
         process_one_work+0x1f0/0x4ac
         worker_thread+0x188/0x504
         kthread+0x110/0x114
         ret_from_fork+0x10/0x18
    
    Fix this by adding respective barrier calls which ensure that all
    accesses preceding setting of WORK_DONE_BIT are strictly ordered before
    setting the flag. At the same time add a read barrier after reading of
    WORK_DONE_BIT in run_ordered_work which ensures all subsequent loads
    would be strictly ordered after reading the bit. This in turn ensures
    are all accesses before WORK_DONE_BIT are going to be strictly ordered
    before any access that can occur in ordered_func.
    
    Reported-by: Chris Murphy <lists@colorremedies.com>
    Fixes: 08a9ff326418 ("btrfs: Added btrfs_workqueue_struct implemented ordered execution based on kernel workqueue")
    CC: stable@vger.kernel.org # 4.4+
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2011928
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Tested-by: Chris Murphy <chris@colorremedies.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d5d04784fd274a4560fba93fb5a1e16849c87f3
Author: Rustam Kovhaev <rkovhaev@gmail.com>
Date:   Fri Nov 19 16:43:37 2021 -0800

    mm: kmemleak: slob: respect SLAB_NOLEAKTRACE flag
    
    commit 34dbc3aaf5d9e89ba6cc5e24add9458c21ab1950 upstream.
    
    When kmemleak is enabled for SLOB, system does not boot and does not
    print anything to the console.  At the very early stage in the boot
    process we hit infinite recursion from kmemleak_init() and eventually
    kernel crashes.
    
    kmemleak_init() specifies SLAB_NOLEAKTRACE for KMEM_CACHE(), but
    kmem_cache_create_usercopy() removes it because CACHE_CREATE_MASK is not
    valid for SLOB.
    
    Let's fix CACHE_CREATE_MASK and make kmemleak work with SLOB
    
    Link: https://lkml.kernel.org/r/20211115020850.3154366-1-rkovhaev@gmail.com
    Fixes: d8843922fba4 ("slab: Ignore internal flags in cache creation")
    Signed-off-by: Rustam Kovhaev <rkovhaev@gmail.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Reviewed-by: Muchun Song <songmuchun@bytedance.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Glauber Costa <glommer@parallels.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dfe470fa521e98ae2fbcd339f90fbda1e1df4aa
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Fri Nov 19 16:43:28 2021 -0800

    hexagon: export raw I/O routines for modules
    
    commit ffb92ce826fd801acb0f4e15b75e4ddf0d189bde upstream.
    
    Patch series "Fixes for ARCH=hexagon allmodconfig", v2.
    
    This series fixes some issues noticed with ARCH=hexagon allmodconfig.
    
    This patch (of 3):
    
    When building ARCH=hexagon allmodconfig, the following errors occur:
    
      ERROR: modpost: "__raw_readsl" [drivers/i3c/master/svc-i3c-master.ko] undefined!
      ERROR: modpost: "__raw_writesl" [drivers/i3c/master/dw-i3c-master.ko] undefined!
      ERROR: modpost: "__raw_readsl" [drivers/i3c/master/dw-i3c-master.ko] undefined!
      ERROR: modpost: "__raw_writesl" [drivers/i3c/master/i3c-master-cdns.ko] undefined!
      ERROR: modpost: "__raw_readsl" [drivers/i3c/master/i3c-master-cdns.ko] undefined!
    
    Export these symbols so that modules can use them without any errors.
    
    Link: https://lkml.kernel.org/r/20211115174250.1994179-1-nathan@kernel.org
    Link: https://lkml.kernel.org/r/20211115174250.1994179-2-nathan@kernel.org
    Fixes: 013bf24c3829 ("Hexagon: Provide basic implementation and/or stubs for I/O routines.")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: Brian Cain <bcain@codeaurora.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b7ebba9320f7e595d85ae792c75b5370aa62bb2
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Fri Nov 12 08:56:03 2021 +0100

    tun: fix bonding active backup with arp monitoring
    
    commit a31d27fbed5d518734cb60956303eb15089a7634 upstream.
    
    As stated in the bonding doc, trans_start must be set manually for drivers
    using NETIF_F_LLTX:
     Drivers that use NETIF_F_LLTX flag must also update
     netdev_queue->trans_start. If they do not, then the ARP monitor will
     immediately fail any slaves using that driver, and those slaves will stay
     down.
    
    Link: https://www.kernel.org/doc/html/v5.15/networking/bonding.html#arp-monitor-operation
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ef16d2d172ee56714cff37cd005b98aba08ef5a
Author: Lin Ma <linma@zju.edu.cn>
Date:   Tue Nov 16 23:26:52 2021 +0800

    NFC: reorder the logic in nfc_{un,}register_device
    
    [ Upstream commit 3e3b5dfcd16a3e254aab61bd1e8c417dd4503102 ]
    
    There is a potential UAF between the unregistration routine and the NFC
    netlink operations.
    
    The race that cause that UAF can be shown as below:
    
     (FREE)                      |  (USE)
    nfcmrvl_nci_unregister_dev   |  nfc_genl_dev_up
      nci_close_device           |
      nci_unregister_device      |    nfc_get_device
        nfc_unregister_device    |    nfc_dev_up
          rfkill_destory         |
          device_del             |      rfkill_blocked
      ...                        |    ...
    
    The root cause for this race is concluded below:
    1. The rfkill_blocked (USE) in nfc_dev_up is supposed to be placed after
    the device_is_registered check.
    2. Since the netlink operations are possible just after the device_add
    in nfc_register_device, the nfc_dev_up() can happen anywhere during the
    rfkill creation process, which leads to data race.
    
    This patch reorder these actions to permit
    1. Once device_del is finished, the nfc_dev_up cannot dereference the
    rfkill object.
    2. The rfkill_register need to be placed after the device_add of nfc_dev
    because the parent device need to be created first. So this patch keeps
    the order but inject device_lock to prevent the data race.
    
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Fixes: be055b2f89b5 ("NFC: RFKILL support")
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20211116152652.19217-1-linma@zju.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6dc051117ba0e1dac9324593ff2c1c520f67ad21
Author: Lin Ma <linma@zju.edu.cn>
Date:   Mon Nov 15 22:56:00 2021 +0800

    NFC: reorganize the functions in nci_request
    
    [ Upstream commit 86cdf8e38792545161dbe3350a7eced558ba4d15 ]
    
    There is a possible data race as shown below:
    
    thread-A in nci_request()       | thread-B in nci_close_device()
                                    | mutex_lock(&ndev->req_lock);
    test_bit(NCI_UP, &ndev->flags); |
    ...                             | test_and_clear_bit(NCI_UP, &ndev->flags)
    mutex_lock(&ndev->req_lock);    |
                                    |
    
    This race will allow __nci_request() to be awaked while the device is
    getting removed.
    
    Similar to commit e2cb6b891ad2 ("bluetooth: eliminate the potential race
    condition when removing the HCI controller"). this patch alters the
    function sequence in nci_request() to prevent the data races between the
    nci_close_device().
    
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Fixes: 6a2968aaf50c ("NFC: basic NCI protocol implementation")
    Link: https://lore.kernel.org/r/20211115145600.8320-1-linma@zju.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56dab69202296d057b2432af9a7b5deb3be07859
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Nov 7 20:57:07 2021 +0100

    platform/x86: hp_accel: Fix an error handling path in 'lis3lv02d_probe()'
    
    [ Upstream commit c961a7d2aa23ae19e0099fbcdf1040fb760eea83 ]
    
    If 'led_classdev_register()' fails, some additional resources should be
    released.
    
    Add the missing 'i8042_remove_filter()' and 'lis3lv02d_remove_fs()' calls
    that are already in the remove function but are missing here.
    
    Fixes: a4c724d0723b ("platform: hp_accel: add a i8042 filter to remove HPQ6000 data from kb bus stream")
    Fixes: 9e0c79782143 ("lis3lv02d: merge with leds hp disk")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/5a4f218f8f16d2e3a7906b7ca3654ffa946895f8.1636314074.git.christophe.jaillet@wanadoo.fr
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 318e10417da8ded547f72c1477642fba6fd0c03d
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Nov 14 16:42:18 2021 -0800

    mips: bcm63xx: add support for clk_get_parent()
    
    [ Upstream commit e8f67482e5a4bc8d0b65d606d08cb60ee123b468 ]
    
    BCM63XX selects HAVE_LEGACY_CLK but does not provide/support
    clk_get_parent(), so add a simple implementation of that
    function so that callers of it will build without errors.
    
    Fixes these build errors:
    
    mips-linux-ld: drivers/iio/adc/ingenic-adc.o: in function `jz4770_adc_init_clk_div':
    ingenic-adc.c:(.text+0xe4): undefined reference to `clk_get_parent'
    mips-linux-ld: drivers/iio/adc/ingenic-adc.o: in function `jz4725b_adc_init_clk_div':
    ingenic-adc.c:(.text+0x1b8): undefined reference to `clk_get_parent'
    
    Fixes: e7300d04bd08 ("MIPS: BCM63xx: Add support for the Broadcom BCM63xx family of SOCs." )
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Cc: Artur Rojek <contact@artur-rojek.eu>
    Cc: Paul Cercueil <paul@crapouillou.net>
    Cc: linux-mips@vger.kernel.org
    Cc: Jonathan Cameron <jic23@kernel.org>
    Cc: Lars-Peter Clausen <lars@metafoo.de>
    Cc: linux-iio@vger.kernel.org
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: bcm-kernel-feedback-list@broadcom.com
    Cc: Jonas Gorski <jonas.gorski@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Acked-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76fa5601f04a1cf0f2ff20e6cca129cc55c1a587
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Nov 14 01:36:36 2021 +0300

    net: bnx2x: fix variable dereferenced before check
    
    [ Upstream commit f8885ac89ce310570e5391fe0bf0ec9c7c9b4fdc ]
    
    Smatch says:
            bnx2x_init_ops.h:640 bnx2x_ilt_client_mem_op()
            warn: variable dereferenced before check 'ilt' (see line 638)
    
    Move ilt_cli variable initialization _after_ ilt validation, because
    it's unsafe to deref the pointer before validation check.
    
    Fixes: 523224a3b3cd ("bnx2x, cnic, bnx2i: use new FW/HSI")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26efb10b1e2224af9b40f2a6917fbb53e4bd1387
Author: Vincent Donnefort <vincent.donnefort@arm.com>
Date:   Thu Nov 4 17:51:20 2021 +0000

    sched/core: Mitigate race cpus_share_cache()/update_top_cache_domain()
    
    [ Upstream commit 42dc938a590c96eeb429e1830123fef2366d9c80 ]
    
    Nothing protects the access to the per_cpu variable sd_llc_id. When testing
    the same CPU (i.e. this_cpu == that_cpu), a race condition exists with
    update_top_cache_domain(). One scenario being:
    
                  CPU1                            CPU2
      ==================================================================
    
      per_cpu(sd_llc_id, CPUX) => 0
                                        partition_sched_domains_locked()
                                          detach_destroy_domains()
      cpus_share_cache(CPUX, CPUX)          update_top_cache_domain(CPUX)
        per_cpu(sd_llc_id, CPUX) => 0
                                              per_cpu(sd_llc_id, CPUX) = CPUX
        per_cpu(sd_llc_id, CPUX) => CPUX
        return false
    
    ttwu_queue_cond() wouldn't catch smp_processor_id() == cpu and the result
    is a warning triggered from ttwu_queue_wakelist().
    
    Avoid a such race in cpus_share_cache() by always returning true when
    this_cpu == that_cpu.
    
    Fixes: 518cd6234178 ("sched: Only queue remote wakeups when crossing cache boundaries")
    Reported-by: Jing-Ting Wu <jing-ting.wu@mediatek.com>
    Signed-off-by: Vincent Donnefort <vincent.donnefort@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lore.kernel.org/r/20211104175120.857087-1-vincent.donnefort@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b4fb12db85c0031f858b5f57bacf8ad49470de6
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Nov 6 08:49:11 2021 -0700

    mips: BCM63XX: ensure that CPU_SUPPORTS_32BIT_KERNEL is set
    
    [ Upstream commit 5eeaafc8d69373c095e461bdb39e5c9b62228ac5 ]
    
    Several header files need info on CONFIG_32BIT or CONFIG_64BIT,
    but kconfig symbol BCM63XX does not provide that info. This leads
    to many build errors, e.g.:
    
       arch/mips/include/asm/page.h:196:13: error: use of undeclared identifier 'CAC_BASE'
               return x - PAGE_OFFSET + PHYS_OFFSET;
       arch/mips/include/asm/mach-generic/spaces.h:91:23: note: expanded from macro 'PAGE_OFFSET'
       #define PAGE_OFFSET             (CAC_BASE + PHYS_OFFSET)
       arch/mips/include/asm/io.h:134:28: error: use of undeclared identifier 'CAC_BASE'
               return (void *)(address + PAGE_OFFSET - PHYS_OFFSET);
       arch/mips/include/asm/mach-generic/spaces.h:91:23: note: expanded from macro 'PAGE_OFFSET'
       #define PAGE_OFFSET             (CAC_BASE + PHYS_OFFSET)
    
    arch/mips/include/asm/uaccess.h:82:10: error: use of undeclared identifier '__UA_LIMIT'
               return (__UA_LIMIT & (addr | (addr + size) | __ua_size(size))) == 0;
    
    Selecting the SYS_HAS_CPU_BMIPS* symbols causes SYS_HAS_CPU_BMIPS to be
    set, which then selects CPU_SUPPORT_32BIT_KERNEL, which causes
    CONFIG_32BIT to be set. (a bit more indirect than v1 [RFC].)
    
    Fixes: e7300d04bd08 ("MIPS: BCM63xx: Add support for the Broadcom BCM63xx family of SOCs.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: bcm-kernel-feedback-list@broadcom.com
    Cc: linux-mips@vger.kernel.org
    Cc: Paul Burton <paulburton@kernel.org>
    Cc: Maxime Bizon <mbizon@freebox.fr>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Suggested-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ad049fcaaeec1b16259dbf3ada5a0749ead79b2
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Oct 4 17:19:13 2021 -0700

    sh: define __BIG_ENDIAN for math-emu
    
    [ Upstream commit b929926f01f2d14635345d22eafcf60feed1085e ]
    
    Fix this by defining both ENDIAN macros in
    <asm/sfp-machine.h> so that they can be utilized in
    <math-emu/soft-fp.h> according to the latter's comment:
    /* Allow sfp-machine to have its own byte order definitions. */
    
    (This is what is done in arch/nds32/include/asm/sfp-machine.h.)
    
    This placates these build warnings:
    
    In file included from ../arch/sh/math-emu/math.c:23:
    .../include/math-emu/single.h:50:21: warning: "__BIG_ENDIAN" is not defined, evaluates to 0 [-Wundef]
       50 | #if __BYTE_ORDER == __BIG_ENDIAN
    In file included from ../arch/sh/math-emu/math.c:24:
    .../include/math-emu/double.h:59:21: warning: "__BIG_ENDIAN" is not defined, evaluates to 0 [-Wundef]
       59 | #if __BYTE_ORDER == __BIG_ENDIAN
    
    Fixes: 4b565680d163 ("sh: math-emu support")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Tested-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08420dec2fa831599793b104414ef88d75e14f80
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Oct 4 17:19:10 2021 -0700

    sh: fix kconfig unmet dependency warning for FRAME_POINTER
    
    [ Upstream commit fda1bc533094a7db68b11e7503d2c6c73993d12a ]
    
    FRAME_POINTER depends on DEBUG_KERNEL so DWARF_UNWINDER should
    depend on DEBUG_KERNEL before selecting FRAME_POINTER.
    
    WARNING: unmet direct dependencies detected for FRAME_POINTER
      Depends on [n]: DEBUG_KERNEL [=n] && (M68K || UML || SUPERH [=y]) || ARCH_WANT_FRAME_POINTERS [=n]
      Selected by [y]:
      - DWARF_UNWINDER [=y]
    
    Fixes: bd353861c735 ("sh: dwarf unwinder support.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Matt Fleming <matt@console-pimps.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Tested-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffd4333c4b845cfcce2afeeb0890ce9a12c62e8c
Author: Lu Wei <luwei32@huawei.com>
Date:   Thu Nov 26 10:43:11 2020 +0800

    maple: fix wrong return value of maple_bus_init().
    
    [ Upstream commit bde82ee391fa6d3ad054313c4aa7b726d32515ce ]
    
    If KMEM_CACHE or maple_alloc_dev failed, the maple_bus_init() will return 0
    rather than error, because the retval is not changed after KMEM_CACHE or
    maple_alloc_dev failed.
    
    Fixes: 17be2d2b1c33 ("sh: Add maple bus support for the SEGA Dreamcast.")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Lu Wei <luwei32@huawei.com>
    Acked-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88d87e048399f7a4b1937c4ee30a12510728ed8e
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Tue Dec 22 12:54:01 2020 -0800

    sh: check return code of request_irq
    
    [ Upstream commit 0e38225c92c7964482a8bb6b3e37fde4319e965c ]
    
    request_irq is marked __must_check, but the call in shx3_prepare_cpus
    has a void return type, so it can't propagate failure to the caller.
    Follow cues from hexagon and just print an error.
    
    Fixes: c7936b9abcf5 ("sh: smp: Hook in to the generic IPI handler for SH-X3 SMP.")
    Cc: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Reviewed-by: Miguel Ojeda <ojeda@kernel.org>
    Signed-off-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f82ad1110415feda05055bc9197ff1cce4f23347
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Oct 14 13:44:24 2021 +1100

    powerpc/dcr: Use cmplwi instead of 3-argument cmpli
    
    [ Upstream commit fef071be57dc43679a32d5b0e6ee176d6f12e9f2 ]
    
    In dcr-low.S we use cmpli with three arguments, instead of four
    arguments as defined in the ISA:
    
            cmpli   cr0,r3,1024
    
    This appears to be a PPC440-ism, looking at the "PPC440x5 CPU Core
    User’s Manual" it shows cmpli having no L field, but implied to be 0 due
    to the core being 32-bit. It mentions that the ISA defines four
    arguments and recommends using cmplwi.
    
    It also corresponds to the old POWER instruction set, which had no L
    field there, a reserved bit instead.
    
    dcr-low.S is only built 32-bit, because it is only built when
    DCR_NATIVE=y, which is only selected by 40x and 44x. Looking at the
    generated code (with gcc/gas) we see cmplwi as expected.
    
    Although gas is happy with the 3-argument version when building for
    32-bit, the LLVM assembler is not and errors out with:
    
      arch/powerpc/sysdev/dcr-low.S:27:10: error: invalid operand for instruction
       cmpli 0,%r3,1024; ...
               ^
    
    Switch to the cmplwi extended opcode, which avoids any confusion when
    reading the ISA, fixes the issue with the LLVM assembler, and also means
    the code could be built 64-bit in future (though that's very unlikely).
    
    Reported-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    BugLink: https://github.com/ClangBuiltLinux/linux/issues/1419
    Link: https://lore.kernel.org/r/20211014024424.528848-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e28e083dcdf03a18a083f8a47b6bb6b1604b5be
Author: Chengfeng Ye <cyeaa@connect.ust.hk>
Date:   Sun Oct 24 03:46:11 2021 -0700

    ALSA: gus: fix null pointer dereference on pointer block
    
    [ Upstream commit a0d21bb3279476c777434c40d969ea88ca64f9aa ]
    
    The pointer block return from snd_gf1_dma_next_block could be
    null, so there is a potential null pointer dereference issue.
    Fix this by adding a null check before dereference.
    
    Signed-off-by: Chengfeng Ye <cyeaa@connect.ust.hk>
    Link: https://lore.kernel.org/r/20211024104611.9919-1-cyeaa@connect.ust.hk
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc4c685394e64194315ead9c546f0c37f569f540
Author: Anatolij Gustschin <agust@denx.de>
Date:   Thu Oct 14 00:05:31 2021 +0200

    powerpc/5200: dts: fix memory node unit name
    
    [ Upstream commit aed2886a5e9ffc8269a4220bff1e9e030d3d2eb1 ]
    
    Fixes build warnings:
    Warning (unit_address_vs_reg): /memory: node has a reg or ranges property, but no unit name
    
    Signed-off-by: Anatolij Gustschin <agust@denx.de>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211013220532.24759-4-agust@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b1040005ee06b44e090e6d6892cc8ffa9ea432c
Author: Mike Christie <michael.christie@oracle.com>
Date:   Wed Sep 29 21:04:20 2021 -0500

    scsi: target: Fix alua_tg_pt_gps_count tracking
    
    [ Upstream commit 1283c0d1a32bb924324481586b5d6e8e76f676ba ]
    
    We can't free the tg_pt_gp in core_alua_set_tg_pt_gp_id() because it's
    still accessed via configfs. Its release must go through the normal
    configfs/refcount process.
    
    The max alua_tg_pt_gps_count check should probably have been done in
    core_alua_allocate_tg_pt_gp(), but with the current code userspace could
    have created 0x0000ffff + 1 groups, but only set the id for 0x0000ffff.
    Then it could have deleted a group with an ID set, and then set the ID for
    that extra group and it would work ok.
    
    It's unlikely, but just in case this patch continues to allow that type of
    behavior, and just fixes the kfree() while in use bug.
    
    Link: https://lore.kernel.org/r/20210930020422.92578-4-michael.christie@oracle.com
    Signed-off-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f50dd58e60f662bad59495c441ceed01c3c59a3
Author: Mike Christie <michael.christie@oracle.com>
Date:   Wed Sep 29 21:04:19 2021 -0500

    scsi: target: Fix ordered tag handling
    
    [ Upstream commit ed1227e080990ffec5bf39006ec8a57358e6689a ]
    
    This patch fixes the following bugs:
    
    1. If there are multiple ordered cmds queued and multiple simple cmds
       completing, target_restart_delayed_cmds() could be called on different
       CPUs and each instance could start a ordered cmd. They could then run in
       different orders than they were queued.
    
    2. target_restart_delayed_cmds() and target_handle_task_attr() can race
       where:
    
       1. target_handle_task_attr() has passed the simple_cmds == 0 check.
    
       2. transport_complete_task_attr() then decrements simple_cmds to 0.
    
       3. transport_complete_task_attr() runs target_restart_delayed_cmds() and
          it does not see any cmds on the delayed_cmd_list.
    
       4. target_handle_task_attr() adds the cmd to the delayed_cmd_list.
    
       The cmd will then end up timing out.
    
    3. If we are sent > 1 ordered cmds and simple_cmds == 0, we can execute
       them out of order, because target_handle_task_attr() will hit that
       simple_cmds check first and return false for all ordered cmds sent.
    
    4. We run target_restart_delayed_cmds() after every cmd completion, so if
       there is more than 1 simple cmd running, we start executing ordered cmds
       after that first cmd instead of waiting for all of them to complete.
    
    5. Ordered cmds are not supposed to start until HEAD OF QUEUE and all older
       cmds have completed, and not just simple.
    
    6. It's not a bug but it doesn't make sense to take the delayed_cmd_lock
       for every cmd completion when ordered cmds are almost never used. Just
       replacing that lock with an atomic increases IOPs by up to 10% when
       completions are spread over multiple CPUs and there are multiple
       sessions/ mqs/thread accessing the same device.
    
    This patch moves the queued delayed handling to a per device work to
    serialze the cmd executions for each device and adds a new counter to track
    HEAD_OF_QUEUE and SIMPLE cmds. We can then check the new counter to
    determine when to run the work on the completion path.
    
    Link: https://lore.kernel.org/r/20210930020422.92578-3-michael.christie@oracle.com
    Signed-off-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f00fe99f14a9cb257a63c7d1d5728de7d689bd73
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Oct 12 15:23:12 2021 -0700

    MIPS: sni: Fix the build
    
    [ Upstream commit c91cf42f61dc77b289784ea7b15a8531defa41c0 ]
    
    This patch fixes the following gcc 10 build error:
    
    arch/mips/sni/time.c: In function ‘a20r_set_periodic’:
    arch/mips/sni/time.c:15:26: error: unsigned conversion from ‘int’ to ‘u8’ {aka ‘volatile unsigned char’} changes value from ‘576’ to ‘64’ [-Werror=overflow]
       15 | #define SNI_COUNTER0_DIV ((SNI_CLOCK_TICK_RATE / SNI_COUNTER2_DIV) / HZ)
          |                          ^
    arch/mips/sni/time.c:21:45: note: in expansion of macro ‘SNI_COUNTER0_DIV’
       21 |  *(volatile u8 *)(A20R_PT_CLOCK_BASE + 0) = SNI_COUNTER0_DIV;
          |                                             ^~~~~~~~~~~~~~~~
    
    Cc: linux-mips@vger.kernel.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0380f643f3a7a61b0845cdc738959c2ad5735d61
Author: Guanghui Feng <guanghuifeng@linux.alibaba.com>
Date:   Mon Oct 11 22:08:24 2021 +0800

    tty: tty_buffer: Fix the softlockup issue in flush_to_ldisc
    
    [ Upstream commit 3968ddcf05fb4b9409cd1859feb06a5b0550a1c1 ]
    
    When running ltp testcase(ltp/testcases/kernel/pty/pty04.c) with arm64, there is a soft lockup,
    which look like this one:
    
      Workqueue: events_unbound flush_to_ldisc
      Call trace:
       dump_backtrace+0x0/0x1ec
       show_stack+0x24/0x30
       dump_stack+0xd0/0x128
       panic+0x15c/0x374
       watchdog_timer_fn+0x2b8/0x304
       __run_hrtimer+0x88/0x2c0
       __hrtimer_run_queues+0xa4/0x120
       hrtimer_interrupt+0xfc/0x270
       arch_timer_handler_phys+0x40/0x50
       handle_percpu_devid_irq+0x94/0x220
       __handle_domain_irq+0x88/0xf0
       gic_handle_irq+0x84/0xfc
       el1_irq+0xc8/0x180
       slip_unesc+0x80/0x214 [slip]
       tty_ldisc_receive_buf+0x64/0x80
       tty_port_default_receive_buf+0x50/0x90
       flush_to_ldisc+0xbc/0x110
       process_one_work+0x1d4/0x4b0
       worker_thread+0x180/0x430
       kthread+0x11c/0x120
    
    In the testcase pty04, The first process call the write syscall to send
    data to the pty master. At the same time, the workqueue will do the
    flush_to_ldisc to pop data in a loop until there is no more data left.
    When the sender and workqueue running in different core, the sender sends
    data fastly in full time which will result in workqueue doing work in loop
    for a long time and occuring softlockup in flush_to_ldisc with kernel
    configured without preempt. So I add need_resched check and cond_resched
    in the flush_to_ldisc loop to avoid it.
    
    Signed-off-by: Guanghui Feng <guanghuifeng@linux.alibaba.com>
    Link: https://lore.kernel.org/r/1633961304-24759-1-git-send-email-guanghuifeng@linux.alibaba.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28e016e02118917e50a667bc72fb80098cf2b460
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Oct 11 21:49:20 2021 +0800

    usb: host: ohci-tmio: check return value after calling platform_get_resource()
    
    [ Upstream commit 9eff2b2e59fda25051ab36cd1cb5014661df657b ]
    
    It will cause null-ptr-deref if platform_get_resource() returns NULL,
    we need check the return value.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211011134920.118477-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0189d3b49b7be287b1373073d4afde788b7d347b
Author: Roger Quadros <rogerq@kernel.org>
Date:   Thu Oct 7 15:08:30 2021 +0300

    ARM: dts: omap: fix gpmc,mux-add-data type
    
    [ Upstream commit 51b9e22ffd3c4c56cbb7caae9750f70e55ffa603 ]
    
    gpmc,mux-add-data is not boolean.
    
    Fixes the below errors flagged by dtbs_check.
    
    "ethernet@4,0:gpmc,mux-add-data: True is not of type 'array'"
    
    Signed-off-by: Roger Quadros <rogerq@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06d7d12efb5c62db9dea15141ae2b322c2719515
Author: Guo Zhi <qtxuning1999@sjtu.edu.cn>
Date:   Wed Sep 29 20:25:37 2021 +0800

    scsi: advansys: Fix kernel pointer leak
    
    [ Upstream commit d4996c6eac4c81b8872043e9391563f67f13e406 ]
    
    Pointers should be printed with %p or %px rather than cast to 'unsigned
    long' and printed with %lx.
    
    Change %lx to %p to print the hashed pointer.
    
    Link: https://lore.kernel.org/r/20210929122538.1158235-1-qtxuning1999@sjtu.edu.cn
    Signed-off-by: Guo Zhi <qtxuning1999@sjtu.edu.cn>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba7605856e05fa991d4654ac69e5ace66c767b9
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Sep 15 11:49:25 2021 +0800

    usb: musb: tusb6010: check return value after calling platform_get_resource()
    
    [ Upstream commit 14651496a3de6807a17c310f63c894ea0c5d858e ]
    
    It will cause null-ptr-deref if platform_get_resource() returns NULL,
    we need check the return value.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210915034925.2399823-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad4776b5eb2e58af1226847fcd3b4f6d051674dd
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Sep 10 16:31:46 2021 -0700

    scsi: lpfc: Fix list_add() corruption in lpfc_drain_txq()
    
    [ Upstream commit 99154581b05c8fb22607afb7c3d66c1bace6aa5d ]
    
    When parsing the txq list in lpfc_drain_txq(), the driver attempts to pass
    the requests to the adapter. If such an attempt fails, a local "fail_msg"
    string is set and a log message output.  The job is then added to a
    completions list for cancellation.
    
    Processing of any further jobs from the txq list continues, but since
    "fail_msg" remains set, jobs are added to the completions list regardless
    of whether a wqe was passed to the adapter.  If successfully added to
    txcmplq, jobs are added to both lists resulting in list corruption.
    
    Fix by clearing the fail_msg string after adding a job to the completions
    list. This stops the subsequent jobs from being added to the completions
    list unless they had an appropriate failure.
    
    Link: https://lore.kernel.org/r/20210910233159.115896-2-jsmart2021@gmail.com
    Co-developed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c6b199f09be489c48622537a550787fc80aea73
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Oct 24 16:13:56 2021 +0300

    net: batman-adv: fix error handling
    
    commit 6f68cd634856f8ca93bafd623ba5357e0f648c68 upstream.
    
    Syzbot reported ODEBUG warning in batadv_nc_mesh_free(). The problem was
    in wrong error handling in batadv_mesh_init().
    
    Before this patch batadv_mesh_init() was calling batadv_mesh_free() in case
    of any batadv_*_init() calls failure. This approach may work well, when
    there is some kind of indicator, which can tell which parts of batadv are
    initialized; but there isn't any.
    
    All written above lead to cleaning up uninitialized fields. Even if we hide
    ODEBUG warning by initializing bat_priv->nc.work, syzbot was able to hit
    GPF in batadv_nc_purge_paths(), because hash pointer in still NULL. [1]
    
    To fix these bugs we can unwind batadv_*_init() calls one by one.
    It is good approach for 2 reasons: 1) It fixes bugs on error handling
    path 2) It improves the performance, since we won't call unneeded
    batadv_*_free() functions.
    
    So, this patch makes all batadv_*_init() clean up all allocated memory
    before returning with an error to no call correspoing batadv_*_free()
    and open-codes batadv_mesh_free() with proper order to avoid touching
    uninitialized fields.
    
    Link: https://lore.kernel.org/netdev/000000000000c87fbd05cef6bcb0@google.com/ [1]
    Reported-and-tested-by: syzbot+28b0702ada0bf7381f58@syzkaller.appspotmail.com
    Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Acked-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7697a2920fb36f9f65d3614876a73bcf62f1e945
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Nov 9 14:53:57 2021 +0100

    PCI/MSI: Destroy sysfs before freeing entries
    
    commit 3735459037114d31e5acd9894fad9aed104231a0 upstream.
    
    free_msi_irqs() frees the MSI entries before destroying the sysfs entries
    which are exposing them. Nothing prevents a concurrent free while a sysfs
    file is read and accesses the possibly freed entry.
    
    Move the sysfs release ahead of freeing the entries.
    
    Fixes: 1c51b50c2995 ("PCI/MSI: Export MSI mode using attributes, not kobjects")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Bjorn Helgaas <helgaas@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/87sfw5305m.ffs@tglx
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9cf96b78da8d8ef667cd05649c5118646395874
Author: Sven Schnelle <svens@stackframe.org>
Date:   Sat Nov 13 20:41:17 2021 +0100

    parisc/entry: fix trace test in syscall exit path
    
    commit 3ec18fc7831e7d79e2d536dd1f3bc0d3ba425e8a upstream.
    
    commit 8779e05ba8aa ("parisc: Fix ptrace check on syscall return")
    fixed testing of TI_FLAGS. This uncovered a bug in the test mask.
    syscall_restore_rfi is only used when the kernel needs to exit to
    usespace with single or block stepping and the recovery counter
    enabled. The test however used _TIF_SYSCALL_TRACE_MASK, which
    includes a lot of bits that shouldn't be tested here.
    
    Fix this by using TIF_SINGLESTEP and TIF_BLOCKSTEP directly.
    
    I encountered this bug by enabling syscall tracepoints. Both in qemu and
    on real hardware. As soon as i enabled the tracepoint (sys_exit_read,
    but i guess it doesn't really matter which one), i got random page
    faults in userspace almost immediately.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cf6e31ce78d33b687e6959577b78ba9a0edf630
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:40 2021 +0200

    PCI: Add PCI_EXP_DEVCTL_PAYLOAD_* macros
    
    commit 460275f124fb072dca218a6b43b6370eebbab20d upstream.
    
    Define a macro PCI_EXP_DEVCTL_PAYLOAD_* for every possible Max Payload
    Size in linux/pci_regs.h, in the same style as PCI_EXP_DEVCTL_READRQ_*.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-2-kabel@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 913870e6a08b069c8ff8d1c4f9146bcdaa69b4ec
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Nov 5 13:38:02 2021 -0700

    mm, oom: pagefault_out_of_memory: don't force global OOM for dying tasks
    
    commit 0b28179a6138a5edd9d82ad2687c05b3773c387b upstream.
    
    Patch series "memcg: prohibit unconditional exceeding the limit of dying tasks", v3.
    
    Memory cgroup charging allows killed or exiting tasks to exceed the hard
    limit.  It can be misused and allowed to trigger global OOM from inside
    a memcg-limited container.  On the other hand if memcg fails allocation,
    called from inside #PF handler it triggers global OOM from inside
    pagefault_out_of_memory().
    
    To prevent these problems this patchset:
     (a) removes execution of out_of_memory() from
         pagefault_out_of_memory(), becasue nobody can explain why it is
         necessary.
     (b) allow memcg to fail allocation of dying/killed tasks.
    
    This patch (of 3):
    
    Any allocation failure during the #PF path will return with VM_FAULT_OOM
    which in turn results in pagefault_out_of_memory which in turn executes
    out_out_memory() and can kill a random task.
    
    An allocation might fail when the current task is the oom victim and
    there are no memory reserves left.  The OOM killer is already handled at
    the page allocator level for the global OOM and at the charging level
    for the memcg one.  Both have much more information about the scope of
    allocation/charge request.  This means that either the OOM killer has
    been invoked properly and didn't lead to the allocation success or it
    has been skipped because it couldn't have been invoked.  In both cases
    triggering it from here is pointless and even harmful.
    
    It makes much more sense to let the killed task die rather than to wake
    up an eternally hungry oom-killer and send him to choose a fatter victim
    for breakfast.
    
    Link: https://lkml.kernel.org/r/0828a149-786e-7c06-b70a-52d086818ea3@virtuozzo.com
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Suggested-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Uladzislau Rezki <urezki@gmail.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 341c33eeb1fc08594ab67a298fe7a90454f3ae6a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat Nov 6 19:42:29 2021 +0100

    ARM: 9156/1: drop cc-option fallbacks for architecture selection
    
    commit 418ace9992a7647c446ed3186df40cf165b67298 upstream.
    
    Naresh and Antonio ran into a build failure with latest Debian
    armhf compilers, with lots of output like
    
     tmp/ccY3nOAs.s:2215: Error: selected processor does not support `cpsid i' in ARM mode
    
    As it turns out, $(cc-option) fails early here when the FPU is not
    selected before CPU architecture is selected, as the compiler
    option check runs before enabling -msoft-float, which causes
    a problem when testing a target architecture level without an FPU:
    
    cc1: error: '-mfloat-abi=hard': selected architecture lacks an FPU
    
    Passing e.g. -march=armv6k+fp in place of -march=armv6k would avoid this
    issue, but the fallback logic is already broken because all supported
    compilers (gcc-5 and higher) are much more recent than these options,
    and building with -march=armv5t as a fallback no longer works.
    
    The best way forward that I see is to just remove all the checks, which
    also has the nice side-effect of slightly improving the startup time for
    'make'.
    
    The -mtune=marvell-f option was apparently never supported by any mainline
    compiler, and the custom Codesourcery gcc build that did support is
    now too old to build kernels, so just use -mtune=xscale unconditionally
    for those.
    
    This should be safe to apply on all stable kernels, and will be required
    in order to keep building them with gcc-11 and higher.
    
    Link: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=996419
    
    Reported-by: Antonio Terceiro <antonio.terceiro@linaro.org>
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Reported-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Tested-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Tested-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Cc: Matthias Klose <doko@debian.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f3c4d39e14802d6c17d79b929ecca5290fb45d8
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Oct 21 10:34:47 2021 +0200

    USB: chipidea: fix interrupt deadlock
    
    commit 9aaa81c3366e8393a62374e3a1c67c69edc07b8a upstream.
    
    Chipidea core was calling the interrupt handler from non-IRQ context
    with interrupts enabled, something which can lead to a deadlock if
    there's an actual interrupt trying to take a lock that's already held
    (e.g. the controller lock in udc_irq()).
    
    Add a wrapper that can be used to fake interrupts instead of calling the
    handler directly.
    
    Fixes: 3ecb3e09b042 ("usb: chipidea: Use extcon framework for VBUS and ID detect")
    Fixes: 876d4e1e8298 ("usb: chipidea: core: add wakeup support for extcon")
    Cc: Peter Chen <peter.chen@kernel.org>
    Cc: stable@vger.kernel.org      # 4.4
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211021083447.20078-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb31b27c9fd7ac2665247665fc26f700c417992c
Author: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
Date:   Tue Nov 9 00:15:02 2021 +0000

    vsock: prevent unnecessary refcnt inc for nonblocking connect
    
    [ Upstream commit c7cd82b90599fa10915f41e3dd9098a77d0aa7b6 ]
    
    Currently vosck_connect() increments sock refcount for nonblocking
    socket each time it's called, which can lead to memory leak if
    it's called multiple times because connect timeout function decrements
    sock refcount only once.
    
    Fixes it by making vsock_connect() return -EALREADY immediately when
    sock state is already SS_CONNECTING.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b0d45ee344f38f6c121645f03cf96af4f7a9fdf
Author: Chengfeng Ye <cyeaa@connect.ust.hk>
Date:   Fri Nov 5 06:36:36 2021 -0700

    nfc: pn533: Fix double free when pn533_fill_fragment_skbs() fails
    
    [ Upstream commit 9fec40f850658e00a14a7dd9e06f7fbc7e59cc4a ]
    
    skb is already freed by dev_kfree_skb in pn533_fill_fragment_skbs,
    but follow error handler branch when pn533_fill_fragment_skbs()
    fails, skb is freed again, results in double free issue. Fix this
    by not free skb in error path of pn533_fill_fragment_skbs.
    
    Fixes: 963a82e07d4e ("NFC: pn533: Split large Tx frames in chunks")
    Fixes: 93ad42020c2d ("NFC: pn533: Target mode Tx fragmentation support")
    Signed-off-by: Chengfeng Ye <cyeaa@connect.ust.hk>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7433708037137e5ba0375ccce0f01bcf6a57d3b4
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 5 14:42:14 2021 -0700

    llc: fix out-of-bound array index in llc_sk_dev_hash()
    
    [ Upstream commit 8ac9dfd58b138f7e82098a4e0a0d46858b12215b ]
    
    Both ifindex and LLC_SK_DEV_HASH_ENTRIES are signed.
    
    This means that (ifindex % LLC_SK_DEV_HASH_ENTRIES) is negative
    if @ifindex is negative.
    
    We could simply make LLC_SK_DEV_HASH_ENTRIES unsigned.
    
    In this patch I chose to use hash_32() to get more entropy
    from @ifindex, like llc_sk_laddr_hashfn().
    
    UBSAN: array-index-out-of-bounds in ./include/net/llc.h:75:26
    index -43 is out of range for type 'hlist_head [64]'
    CPU: 1 PID: 20999 Comm: syz-executor.3 Not tainted 5.15.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:151
     __ubsan_handle_out_of_bounds.cold+0x62/0x6c lib/ubsan.c:291
     llc_sk_dev_hash include/net/llc.h:75 [inline]
     llc_sap_add_socket+0x49c/0x520 net/llc/llc_conn.c:697
     llc_ui_bind+0x680/0xd70 net/llc/af_llc.c:404
     __sys_bind+0x1e9/0x250 net/socket.c:1693
     __do_sys_bind net/socket.c:1704 [inline]
     __se_sys_bind net/socket.c:1702 [inline]
     __x64_sys_bind+0x6f/0xb0 net/socket.c:1702
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7fa503407ae9
    
    Fixes: 6d2e3ea28446 ("llc: use a device based hash table to speed up multicast delivery")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6deb505aa2d65ba6f7fb1bc283a47d208ee9542f
Author: Huang Guobin <huangguobin4@huawei.com>
Date:   Tue Nov 2 17:37:33 2021 +0800

    bonding: Fix a use-after-free problem when bond_sysfs_slave_add() failed
    
    [ Upstream commit b93c6a911a3fe926b00add28f3b932007827c4ca ]
    
    When I do fuzz test for bonding device interface, I got the following
    use-after-free Calltrace:
    
    ==================================================================
    BUG: KASAN: use-after-free in bond_enslave+0x1521/0x24f0
    Read of size 8 at addr ffff88825bc11c00 by task ifenslave/7365
    
    CPU: 5 PID: 7365 Comm: ifenslave Tainted: G            E     5.15.0-rc1+ #13
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014
    Call Trace:
     dump_stack_lvl+0x6c/0x8b
     print_address_description.constprop.0+0x48/0x70
     kasan_report.cold+0x82/0xdb
     __asan_load8+0x69/0x90
     bond_enslave+0x1521/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f19159cf577
    Code: b3 66 90 48 8b 05 11 89 2c 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 78
    RSP: 002b:00007ffeb3083c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 00007ffeb3084bca RCX: 00007f19159cf577
    RDX: 00007ffeb3083ce0 RSI: 0000000000008990 RDI: 0000000000000003
    RBP: 00007ffeb3084bc4 R08: 0000000000000040 R09: 0000000000000000
    R10: 00007ffeb3084bc0 R11: 0000000000000246 R12: 00007ffeb3083ce0
    R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffeb3083cb0
    
    Allocated by task 7365:
     kasan_save_stack+0x23/0x50
     __kasan_kmalloc+0x83/0xa0
     kmem_cache_alloc_trace+0x22e/0x470
     bond_enslave+0x2e1/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Freed by task 7365:
     kasan_save_stack+0x23/0x50
     kasan_set_track+0x20/0x30
     kasan_set_free_info+0x24/0x40
     __kasan_slab_free+0xf2/0x130
     kfree+0xd1/0x5c0
     slave_kobj_release+0x61/0x90
     kobject_put+0x102/0x180
     bond_sysfs_slave_add+0x7a/0xa0
     bond_enslave+0x11b6/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Last potentially related work creation:
     kasan_save_stack+0x23/0x50
     kasan_record_aux_stack+0xb7/0xd0
     insert_work+0x43/0x190
     __queue_work+0x2e3/0x970
     delayed_work_timer_fn+0x3e/0x50
     call_timer_fn+0x148/0x470
     run_timer_softirq+0x8a8/0xc50
     __do_softirq+0x107/0x55f
    
    Second to last potentially related work creation:
     kasan_save_stack+0x23/0x50
     kasan_record_aux_stack+0xb7/0xd0
     insert_work+0x43/0x190
     __queue_work+0x2e3/0x970
     __queue_delayed_work+0x130/0x180
     queue_delayed_work_on+0xa7/0xb0
     bond_enslave+0xe25/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The buggy address belongs to the object at ffff88825bc11c00
     which belongs to the cache kmalloc-1k of size 1024
    The buggy address is located 0 bytes inside of
     1024-byte region [ffff88825bc11c00, ffff88825bc12000)
    The buggy address belongs to the page:
    page:ffffea00096f0400 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x25bc10
    head:ffffea00096f0400 order:3 compound_mapcount:0 compound_pincount:0
    flags: 0x57ff00000010200(slab|head|node=1|zone=2|lastcpupid=0x7ff)
    raw: 057ff00000010200 ffffea0009a71c08 ffff888240001968 ffff88810004dbc0
    raw: 0000000000000000 00000000000a000a 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88825bc11b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff88825bc11b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    >ffff88825bc11c00: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                       ^
     ffff88825bc11c80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88825bc11d00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Put new_slave in bond_sysfs_slave_add() will cause use-after-free problems
    when new_slave is accessed in the subsequent error handling process. Since
    new_slave will be put in the subsequent error handling process, remove the
    unnecessary put to fix it.
    In addition, when sysfs_create_file() fails, if some files have been crea-
    ted successfully, we need to call sysfs_remove_file() to remove them.
    Since there are sysfs_create_files() & sysfs_remove_files() can be used,
    use these two functions instead.
    
    Fixes: 7afcaec49696 (bonding: use kobject_put instead of _del after kobject_add)
    Signed-off-by: Huang Guobin <huangguobin4@huawei.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ababb7d9776146eb8c8a85b739abe839eb009623
Author: Maxim Kiselev <bigunclemax@gmail.com>
Date:   Mon Nov 1 18:23:41 2021 +0300

    net: davinci_emac: Fix interrupt pacing disable
    
    [ Upstream commit d52bcb47bdf971a59a2467975d2405fcfcb2fa19 ]
    
    This patch allows to use 0 for `coal->rx_coalesce_usecs` param to
    disable rx irq coalescing.
    
    Previously we could enable rx irq coalescing via ethtool
    (For ex: `ethtool -C eth0 rx-usecs 2000`) but we couldn't disable
    it because this part rejects 0 value:
    
           if (!coal->rx_coalesce_usecs)
                   return -EINVAL;
    
    Fixes: 84da2658a619 ("TI DaVinci EMAC : Implement interrupt pacing functionality.")
    Signed-off-by: Maxim Kiselev <bigunclemax@gmail.com>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Link: https://lore.kernel.org/r/20211101152343.4193233-1-bigunclemax@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b27356689344fa2706c71405be49dba0685bdffd
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Oct 8 15:44:17 2021 +0800

    xen-pciback: Fix return in pm_ctrl_init()
    
    [ Upstream commit 4745ea2628bb43a7ec34b71763b5a56407b33990 ]
    
    Return NULL instead of passing to ERR_PTR while err is zero,
    this fix smatch warnings:
    drivers/xen/xen-pciback/conf_space_capability.c:163
     pm_ctrl_init() warn: passing zero to 'ERR_PTR'
    
    Fixes: a92336a1176b ("xen/pciback: Drop two backends, squash and cleanup some code.")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20211008074417.8260-1-yuehaibing@huawei.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7584ea04909ec78d8c1bb65b2a59a7108d5dd4a6
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Oct 26 04:54:02 2021 -0700

    scsi: qla2xxx: Turn off target reset during issue_lip
    
    [ Upstream commit 0b7a9fd934a68ebfc1019811b7bdc1742072ad7b ]
    
    When user uses issue_lip to do link bounce, driver sends additional target
    reset to remote device before resetting the link. The target reset would
    affect other paths with active I/Os. This patch will remove the unnecessary
    target reset.
    
    Link: https://lore.kernel.org/r/20211026115412.27691-4-njavali@marvell.com
    Fixes: 5854771e314e ("[SCSI] qla2xxx: Add ISPFX00 specific bus reset routine")
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf756a7bfa3d3f0b3ac2b6238eb5dbc1bea99605
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Mon Aug 9 18:20:31 2021 +0200

    watchdog: f71808e_wdt: fix inaccurate report in WDIOC_GETTIMEOUT
    
    [ Upstream commit 164483c735190775f29d0dcbac0363adc51a068d ]
    
    The fintek watchdog timer can configure timeouts of second granularity
    only up to 255 seconds. Beyond that, the timeout needs to be configured
    with minute granularity. WDIOC_GETTIMEOUT should report the actual
    timeout configured, not just echo back the timeout configured by the
    user. Do so.
    
    Fixes: 96cb4eb019ce ("watchdog: f71808e_wdt: new watchdog driver for Fintek F71808E and F71882FG")
    Suggested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Link: https://lore.kernel.org/r/5e17960fe8cc0e3cb2ba53de4730b75d9a0f33d5.1628525954.git-series.a.fatoum@pengutronix.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f742386cb60fde620aabd39a7a4b9941aa4778e1
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Oct 2 17:02:23 2021 -0700

    m68k: set a default value for MEMORY_RESERVE
    
    [ Upstream commit 1aaa557b2db95c9506ed0981bc34505c32d6b62b ]
    
    'make randconfig' can produce a .config file with
    "CONFIG_MEMORY_RESERVE=" (no value) since it has no default.
    When a subsequent 'make all' is done, kconfig restarts the config
    and prompts for a value for MEMORY_RESERVE. This breaks
    scripting/automation where there is no interactive user input.
    
    Add a default value for MEMORY_RESERVE. (Any integer value will
    work here for kconfig.)
    
    Fixes a kconfig warning:
    
    .config:214:warning: symbol value '' invalid for MEMORY_RESERVE
    * Restart config...
    Memory reservation (MiB) (MEMORY_RESERVE) [] (NEW)
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") # from beginning of git history
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: linux-m68k@lists.linux-m68k.org
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e6e1818990e8186193852d14b954861195d51c2
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Oct 20 18:08:10 2021 +0200

    netfilter: nfnetlink_queue: fix OOB when mac header was cleared
    
    [ Upstream commit 5648b5e1169ff1d6d6a46c35c0b5fbebd2a5cbb2 ]
    
    On 64bit platforms the MAC header is set to 0xffff on allocation and
    also when a helper like skb_unset_mac_header() is called.
    
    dev_parse_header may call skb_mac_header() which assumes valid mac offset:
    
     BUG: KASAN: use-after-free in eth_header_parse+0x75/0x90
     Read of size 6 at addr ffff8881075a5c05 by task nf-queue/1364
     Call Trace:
      memcpy+0x20/0x60
      eth_header_parse+0x75/0x90
      __nfqnl_enqueue_packet+0x1a61/0x3380
      __nf_queue+0x597/0x1300
      nf_queue+0xf/0x40
      nf_hook_slow+0xed/0x190
      nf_hook+0x184/0x440
      ip_output+0x1c0/0x2a0
      nf_reinject+0x26f/0x700
      nfqnl_recv_verdict+0xa16/0x18b0
      nfnetlink_rcv_msg+0x506/0xe70
    
    The existing code only works if the skb has a mac header.
    
    Fixes: 2c38de4c1f8da7 ("netfilter: fix looped (broad|multi)cast's MAC handling")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d480bdf8cdebb5df02ed289d33f9f3d12a8d754
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Thu Oct 7 14:12:28 2021 +0300

    dmaengine: at_xdmac: fix AT_XDMAC_CC_PERID() macro
    
    [ Upstream commit 320c88a3104dc955f928a1eecebd551ff89530c0 ]
    
    AT_XDMAC_CC_PERID() should be used to setup bits 24..30 of XDMAC_CC
    register. Using it without parenthesis around 0x7f & (i) will lead to
    setting all the time zero for bits 24..30 of XDMAC_CC as the << operator
    has higher precedence over bitwise &. Thus, add paranthesis around
    0x7f & (i).
    
    Fixes: 15a03850ab8f ("dmaengine: at_xdmac: fix macro typo")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211007111230.2331837-3-claudiu.beznea@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9e35852fec5601d9795fe76a12f238ea914bc37
Author: Leon Romanovsky <leonro@nvidia.com>
Date:   Tue Oct 12 10:28:43 2021 +0300

    RDMA/mlx4: Return missed an error if device doesn't support steering
    
    [ Upstream commit f4e56ec4452f48b8292dcf0e1c4bdac83506fb8b ]
    
    The error flow fixed in this patch is not possible because all kernel
    users of create QP interface check that device supports steering before
    set IB_QP_CREATE_NETIF_QP flag.
    
    Fixes: c1c98501121e ("IB/mlx4: Add support for steerable IB UD QPs")
    Link: https://lore.kernel.org/r/91c61f6e60eb0240f8bbc321fda7a1d2986dd03c.1634023677.git.leonro@nvidia.com
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f41aa9486bf9ea8c62be75d14715049c3a84081
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:32:43 2021 +0300

    scsi: csiostor: Uninitialized data in csio_ln_vnp_read_cbfn()
    
    [ Upstream commit f4875d509a0a78ad294a1a538d534b5ba94e685a ]
    
    This variable is just a temporary variable, used to do an endian
    conversion.  The problem is that the last byte is not initialized.  After
    the conversion is completely done, the last byte is discarded so it doesn't
    cause a problem.  But static checkers and the KMSan runtime checker can
    detect the uninitialized read and will complain about it.
    
    Link: https://lore.kernel.org/r/20211006073242.GA8404@kili
    Fixes: 5036f0a0ecd3 ("[SCSI] csiostor: Fix sparse warnings.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b87983c10c28000e0238d44252588fd4d8ce41c
Author: Jakob Hauser <jahau@rocketmail.com>
Date:   Fri Oct 8 10:32:45 2021 +0200

    power: supply: rt5033_battery: Change voltage values to µV
    
    [ Upstream commit bf895295e9a73411889816f1a0c1f4f1a2d9c678 ]
    
    Currently the rt5033_battery driver provides voltage values in mV. It
    should be µV as stated in Documentation/power/power_supply_class.rst.
    
    Fixes: b847dd96e659 ("power: rt5033_battery: Add RT5033 Fuel gauge device driver")
    Cc: Beomho Seo <beomho.seo@samsung.com>
    Cc: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Jakob Hauser <jahau@rocketmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c89f8331be2d953c29c16219f8fe8e9a69b1ce6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Oct 11 15:37:39 2021 +0300

    usb: gadget: hid: fix error code in do_config()
    
    [ Upstream commit 68e7c510fdf4f6167404609da52e1979165649f6 ]
    
    Return an error code if usb_get_function() fails.  Don't return success.
    
    Fixes: 4bc8a33f2407 ("usb: gadget: hid: convert to new interface of f_hid")
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211011123739.GC15188@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afebbd7a7e895fa194a9ca764fdf8b2c555b47be
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Oct 5 16:45:16 2021 +0300

    serial: 8250_dw: Drop wrong use of ACPI_PTR()
    
    [ Upstream commit ebabb77a2a115b6c5e68f7364b598310b5f61fb2 ]
    
    ACPI_PTR() is more harmful than helpful. For example, in this case
    if CONFIG_ACPI=n, the ID table left unused which is not what we want.
    
    Instead of adding ifdeffery here and there, drop ACPI_PTR().
    
    Fixes: 6a7320c4669f ("serial: 8250_dw: Add ACPI 5.0 support")
    Reported-by: Daniel Palmer <daniel@0x0f.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20211005134516.23218-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92e38185c8083f2d269fc2136b94ada9432b7cf4
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Wed Sep 15 15:34:35 2021 +0200

    video: fbdev: chipsfb: use memset_io() instead of memset()
    
    [ Upstream commit f2719b26ae27282c145202ffd656d5ff1fe737cc ]
    
    While investigating a lockup at startup on Powerbook 3400C, it was
    identified that the fbdev driver generates alignment exception at
    startup:
    
      --- interrupt: 600 at memset+0x60/0xc0
      NIP:  c0021414 LR: c03fc49c CTR: 00007fff
      REGS: ca021c10 TRAP: 0600   Tainted: G        W          (5.14.2-pmac-00727-g12a41fa69492)
      MSR:  00009032 <EE,ME,IR,DR,RI>  CR: 44008442  XER: 20000100
      DAR: cab80020 DSISR: 00017c07
      GPR00: 00000007 ca021cd0 c14412e0 cab80000 00000000 00100000 cab8001c 00000004
      GPR08: 00100000 00007fff 00000000 00000000 84008442 00000000 c0006fb4 00000000
      GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100000
      GPR24: 00000000 81800000 00000320 c15fa400 c14d1878 00000000 c14d1800 c094e19c
      NIP [c0021414] memset+0x60/0xc0
      LR [c03fc49c] chipsfb_pci_init+0x160/0x580
      --- interrupt: 600
      [ca021cd0] [c03fc46c] chipsfb_pci_init+0x130/0x580 (unreliable)
      [ca021d20] [c03a3a70] pci_device_probe+0xf8/0x1b8
      [ca021d50] [c043d584] really_probe.part.0+0xac/0x388
      [ca021d70] [c043d914] __driver_probe_device+0xb4/0x170
      [ca021d90] [c043da18] driver_probe_device+0x48/0x144
      [ca021dc0] [c043e318] __driver_attach+0x11c/0x1c4
      [ca021de0] [c043ad30] bus_for_each_dev+0x88/0xf0
      [ca021e10] [c043c724] bus_add_driver+0x190/0x22c
      [ca021e40] [c043ee94] driver_register+0x9c/0x170
      [ca021e60] [c0006c28] do_one_initcall+0x54/0x1ec
      [ca021ed0] [c08246e4] kernel_init_freeable+0x1c0/0x270
      [ca021f10] [c0006fdc] kernel_init+0x28/0x11c
      [ca021f30] [c0017148] ret_from_kernel_thread+0x14/0x1c
      Instruction dump:
      7d4601a4 39490777 7d4701a4 39490888 7d4801a4 39490999 7d4901a4 39290aaa
      7d2a01a4 4c00012c 4bfffe88 0fe00000 <4bfffe80> 9421fff0 38210010 48001970
    
    This is due to 'dcbz' instruction being used on non-cached memory.
    'dcbz' instruction is used by memset() to zeroize a complete
    cacheline at once, and memset() is not expected to be used on non
    cached memory.
    
    When performing a 'sparse' check on fbdev driver, it also appears
    that the use of memset() is unexpected:
    
      drivers/video/fbdev/chipsfb.c:334:17: warning: incorrect type in argument 1 (different address spaces)
      drivers/video/fbdev/chipsfb.c:334:17:    expected void *
      drivers/video/fbdev/chipsfb.c:334:17:    got char [noderef] __iomem *screen_base
      drivers/video/fbdev/chipsfb.c:334:15: warning: memset with byte count of 1048576
    
    Use fb_memset() instead of memset(). fb_memset() is defined as
    memset_io() for powerpc.
    
    Fixes: 8c8709334cec ("[PATCH] ppc32: Remove CONFIG_PMAC_PBOOK")
    Reported-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/884a54f1e5cb774c1d9b4db780209bee5d4f6718.1631712563.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b7c3f14ed162b1344149bb627f226fb56fcb797
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sat Sep 25 23:14:32 2021 +0800

    memory: fsl_ifc: fix leak of irq and nand_irq in fsl_ifc_ctrl_probe
    
    [ Upstream commit 4ed2f3545c2e5acfbccd7f85fea5b1a82e9862d7 ]
    
    The error handling code of fsl_ifc_ctrl_probe is problematic. When
    fsl_ifc_ctrl_init fails or request_irq of fsl_ifc_ctrl_dev->irq fails,
    it forgets to free the irq and nand_irq. Meanwhile, if request_irq of
    fsl_ifc_ctrl_dev->nand_irq fails, it will still free nand_irq even if
    the request_irq is not successful.
    
    Fix this by refactoring the error handling code.
    
    Fixes: d2ae2e20fbdd ("driver/memory:Move Freescale IFC driver to a common driver")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Link: https://lore.kernel.org/r/20210925151434.8170-1-mudongliangabcd@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75f5bc0fac1a77bb760c93ece0ec83359b0bb3e0
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sat Sep 4 10:37:41 2021 +0800

    JFS: fix memleak in jfs_mount
    
    [ Upstream commit c48a14dca2cb57527dde6b960adbe69953935f10 ]
    
    In jfs_mount, when diMount(ipaimap2) fails, it goes to errout35. However,
    the following code does not free ipaimap2 allocated by diReadSpecial.
    
    Fix this by refactoring the error handling code of jfs_mount. To be
    specific, modify the lable name and free ipaimap2 when the above error
    ocurrs.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b1cf577d336f31e8c36fff6584bce724f06d300
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Sep 6 21:07:02 2021 -0700

    scsi: dc395: Fix error case unwinding
    
    [ Upstream commit cbd9a3347c757383f3d2b50cf7cfd03eb479c481 ]
    
    dc395x_init_one()->adapter_init() might fail. In this case, the acb is
    already cleaned up by adapter_init(), no need to do that in
    adapter_uninit(acb) again.
    
    [    1.252251] dc395x: adapter init failed
    [    1.254900] RIP: 0010:adapter_uninit+0x94/0x170 [dc395x]
    [    1.260307] Call Trace:
    [    1.260442]  dc395x_init_one.cold+0x72a/0x9bb [dc395x]
    
    Link: https://lore.kernel.org/r/20210907040702.1846409-1-ztong0001@gmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Finn Thain <fthain@linux-m68k.org>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c96cb6fbf2c7955b12c913592a2e4ced53d9dbc
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Wed Sep 1 20:35:57 2021 +0800

    ARM: s3c: irq-s3c24xx: Fix return value check for s3c24xx_init_intc()
    
    [ Upstream commit 2aa717473ce96c93ae43a5dc8c23cedc8ce7dd9f ]
    
    The s3c24xx_init_intc() returns an error pointer upon failure, not NULL.
    let's add an error pointer check in s3c24xx_handle_irq.
    
    s3c_intc[0] is not NULL or ERR, we can simplify the code.
    
    Fixes: 1f629b7a3ced ("ARM: S3C24XX: transform irq handling into a declarative form")
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Link: https://lore.kernel.org/r/20210901123557.1043953-1-liu.yun@linux.dev
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5401e8894f3f4806c700343e50ae305e413be495
Author: Daniel Jordan <daniel.m.jordan@oracle.com>
Date:   Thu Oct 21 14:30:28 2021 -0400

    crypto: pcrypt - Delay write to padata->info
    
    [ Upstream commit 68b6dea802cea0dbdd8bd7ccc60716b5a32a5d8a ]
    
    These three events can race when pcrypt is used multiple times in a
    template ("pcrypt(pcrypt(...))"):
    
      1.  [taskA] The caller makes the crypto request via crypto_aead_encrypt()
      2.  [kworkerB] padata serializes the inner pcrypt request
      3.  [kworkerC] padata serializes the outer pcrypt request
    
    3 might finish before the call to crypto_aead_encrypt() returns in 1,
    resulting in two possible issues.
    
    First, a use-after-free of the crypto request's memory when, for
    example, taskA writes to the outer pcrypt request's padata->info in
    pcrypt_aead_enc() after kworkerC completes the request.
    
    Second, the outer pcrypt request overwrites the inner pcrypt request's
    return code with -EINPROGRESS, making a successful request appear to
    fail.  For instance, kworkerB writes the outer pcrypt request's
    padata->info in pcrypt_aead_done() and then taskA overwrites it
    in pcrypt_aead_enc().
    
    Avoid both situations by delaying the write of padata->info until after
    the inner crypto request's return code is checked.  This prevents the
    use-after-free by not touching the crypto request's memory after the
    next-inner crypto request is made, and stops padata->info from being
    overwritten.
    
    Fixes: 5068c7a883d16 ("crypto: pcrypt - Add pcrypt crypto parallelization wrapper")
    Reported-by: syzbot+b187b77c8474f9648fae@syzkaller.appspotmail.com
    Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3afaed37974c96f8d0f4173c9ff4bdc64a5ef4f8
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Oct 20 20:03:45 2021 +0800

    libertas: Fix possible memory leak in probe and disconnect
    
    [ Upstream commit 9692151e2fe7a326bafe99836fd1f20a2cc3a049 ]
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff88812c7d7400 (size 512):
      comm "kworker/6:1", pid 176, jiffies 4295003332 (age 822.830s)
      hex dump (first 32 bytes):
        00 68 1e 04 81 88 ff ff 01 00 00 00 00 00 00 00  .h..............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8167939c>] slab_post_alloc_hook+0x9c/0x490
        [<ffffffff8167f627>] kmem_cache_alloc_trace+0x1f7/0x470
        [<ffffffffa02c9873>] if_usb_probe+0x63/0x446 [usb8xxx]
        [<ffffffffa022668a>] usb_probe_interface+0x1aa/0x3c0 [usbcore]
        [<ffffffff82b59630>] really_probe+0x190/0x480
        [<ffffffff82b59a19>] __driver_probe_device+0xf9/0x180
        [<ffffffff82b59af3>] driver_probe_device+0x53/0x130
        [<ffffffff82b5a075>] __device_attach_driver+0x105/0x130
        [<ffffffff82b55949>] bus_for_each_drv+0x129/0x190
        [<ffffffff82b593c9>] __device_attach+0x1c9/0x270
        [<ffffffff82b5a250>] device_initial_probe+0x20/0x30
        [<ffffffff82b579c2>] bus_probe_device+0x142/0x160
        [<ffffffff82b52e49>] device_add+0x829/0x1300
        [<ffffffffa02229b1>] usb_set_configuration+0xb01/0xcc0 [usbcore]
        [<ffffffffa0235c4e>] usb_generic_driver_probe+0x6e/0x90 [usbcore]
        [<ffffffffa022641f>] usb_probe_device+0x6f/0x130 [usbcore]
    
    cardp is missing being freed in the error handling path of the probe
    and the path of the disconnect, which will cause memory leak.
    
    This patch adds the missing kfree().
    
    Fixes: 876c9d3aeb98 ("[PATCH] Marvell Libertas 8388 802.11b/g USB driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211020120345.2016045-3-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e669b00fdf9535f76005cf62e4267bd5ece2e084
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Oct 20 20:03:44 2021 +0800

    libertas_tf: Fix possible memory leak in probe and disconnect
    
    [ Upstream commit d549107305b4634c81223a853701c06bcf657bc3 ]
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff88810a2ddc00 (size 512):
      comm "kworker/6:1", pid 176, jiffies 4295009893 (age 757.220s)
      hex dump (first 32 bytes):
        00 50 05 18 81 88 ff ff 00 00 00 00 00 00 00 00  .P..............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8167939c>] slab_post_alloc_hook+0x9c/0x490
        [<ffffffff8167f627>] kmem_cache_alloc_trace+0x1f7/0x470
        [<ffffffffa02a1530>] if_usb_probe+0x60/0x37c [libertas_tf_usb]
        [<ffffffffa022668a>] usb_probe_interface+0x1aa/0x3c0 [usbcore]
        [<ffffffff82b59630>] really_probe+0x190/0x480
        [<ffffffff82b59a19>] __driver_probe_device+0xf9/0x180
        [<ffffffff82b59af3>] driver_probe_device+0x53/0x130
        [<ffffffff82b5a075>] __device_attach_driver+0x105/0x130
        [<ffffffff82b55949>] bus_for_each_drv+0x129/0x190
        [<ffffffff82b593c9>] __device_attach+0x1c9/0x270
        [<ffffffff82b5a250>] device_initial_probe+0x20/0x30
        [<ffffffff82b579c2>] bus_probe_device+0x142/0x160
        [<ffffffff82b52e49>] device_add+0x829/0x1300
        [<ffffffffa02229b1>] usb_set_configuration+0xb01/0xcc0 [usbcore]
        [<ffffffffa0235c4e>] usb_generic_driver_probe+0x6e/0x90 [usbcore]
        [<ffffffffa022641f>] usb_probe_device+0x6f/0x130 [usbcore]
    
    cardp is missing being freed in the error handling path of the probe
    and the path of the disconnect, which will cause memory leak.
    
    This patch adds the missing kfree().
    
    Fixes: c305a19a0d0a ("libertas_tf: usb specific functions")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211020120345.2016045-2-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c99a611b4ee3c6cbd6aaf09b372e7d5cf3f4703
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Tue Oct 19 20:27:26 2021 +0900

    smackfs: use netlbl_cfg_cipsov4_del() for deleting cipso_v4_doi
    
    [ Upstream commit 0934ad42bb2c5df90a1b9de690f93de735b622fe ]
    
    syzbot is reporting UAF at cipso_v4_doi_search() [1], for smk_cipso_doi()
    is calling kfree() without removing from the cipso_v4_doi_list list after
    netlbl_cfg_cipsov4_map_add() returned an error. We need to use
    netlbl_cfg_cipsov4_del() in order to remove from the list and wait for
    RCU grace period before kfree().
    
    Link: https://syzkaller.appspot.com/bug?extid=93dba5b91f0fed312cbd [1]
    Reported-by: syzbot <syzbot+93dba5b91f0fed312cbd@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 6c2e8ac0953fccdd ("netlabel: Update kernel configuration API")
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d367b9f38aaf08f9dda7aa968c99d5019183bd0d
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Sat Oct 16 17:32:43 2021 +0200

    mwifiex: Send DELBA requests according to spec
    
    [ Upstream commit cc8a8bc37466f79b24d972555237f3d591150602 ]
    
    While looking at on-air packets using Wireshark, I noticed we're never
    setting the initiator bit when sending DELBA requests to the AP: While
    we set the bit on our del_ba_param_set bitmask, we forget to actually
    copy that bitmask over to the command struct, which means we never
    actually set the initiator bit.
    
    Fix that and copy the bitmask over to the host_cmd_ds_11n_delba command
    struct.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Acked-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211016153244.24353-5-verdre@v0yd.nl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ebe5a42173ca68ab06f7986b77d718f91088c77
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Mon Oct 18 11:25:37 2021 -0700

    platform/x86: thinkpad_acpi: Fix bitwise vs. logical warning
    
    [ Upstream commit fd96e35ea7b95f1e216277805be89d66e4ae962d ]
    
    A new warning in clang points out a use of bitwise OR with boolean
    expressions in this driver:
    
    drivers/platform/x86/thinkpad_acpi.c:9061:11: error: use of bitwise '|' with boolean operands [-Werror,-Wbitwise-instead-of-logical]
            else if ((strlencmp(cmd, "level disengaged") == 0) |
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                               ||
    drivers/platform/x86/thinkpad_acpi.c:9061:11: note: cast one or both operands to int to silence this warning
    1 error generated.
    
    This should clearly be a logical OR so change it to fix the warning.
    
    Fixes: fe98a52ce754 ("ACPI: thinkpad-acpi: add sysfs support to fan subdriver")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1476
    Reported-by: Tor Vic <torvic9@mailbox.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20211018182537.2316800-1-nathan@kernel.org
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ba975e14f5ebb87143d737c493adf4031409a68
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 15 06:37:39 2021 -0700

    net: stream: don't purge sk_error_queue in sk_stream_kill_queues()
    
    [ Upstream commit 24bcbe1cc69fa52dc4f7b5b2456678ed464724d8 ]
    
    sk_stream_kill_queues() can be called on close when there are
    still outstanding skbs to transmit. Those skbs may try to queue
    notifications to the error queue (e.g. timestamps).
    If sk_stream_kill_queues() purges the queue without taking
    its lock the queue may get corrupted, and skbs leaked.
    
    This shows up as a warning about an rmem leak:
    
    WARNING: CPU: 24 PID: 0 at net/ipv4/af_inet.c:154 inet_sock_destruct+0x...
    
    The leak is always a multiple of 0x300 bytes (the value is in
    %rax on my builds, so RAX: 0000000000000300). 0x300 is truesize of
    an empty sk_buff. Indeed if we dump the socket state at the time
    of the warning the sk_error_queue is often (but not always)
    corrupted. The ->next pointer points back at the list head,
    but not the ->prev pointer. Indeed we can find the leaked skb
    by scanning the kernel memory for something that looks like
    an skb with ->sk = socket in question, and ->truesize = 0x300.
    The contents of ->cb[] of the skb confirms the suspicion that
    it is indeed a timestamp notification (as generated in
    __skb_complete_tx_timestamp()).
    
    Removing purging of sk_error_queue should be okay, since
    inet_sock_destruct() does it again once all socket refs
    are gone. Eric suggests this may cause sockets that go
    thru disconnect() to maintain notifications from the
    previous incarnations of the socket, but that should be
    okay since the race was there anyway, and disconnect()
    is not exactly dependable.
    
    Thanks to Jonathan Lemon and Omar Sandoval for help at various
    stages of tracing the issue.
    
    Fixes: cb9eff097831 ("net: new user space API for time stamping of incoming and outgoing packets")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9a9485b0e958bc9008810dad8d51bc4253b081b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 13 11:13:15 2021 +0300

    drm/msm: uninitialized variable in msm_gem_import()
    
    [ Upstream commit 2203bd0e5c12ffc53ffdd4fbd7b12d6ba27e0424 ]
    
    The msm_gem_new_impl() function cleans up after itself so there is no
    need to call drm_gem_object_put().  Conceptually, it does not make sense
    to call a kref_put() function until after the reference counting has
    been initialized which happens immediately after this call in the
    drm_gem_(private_)object_init() functions.
    
    In the msm_gem_import() function the "obj" pointer is uninitialized, so
    it will lead to a crash.
    
    Fixes: 05b849111c07 ("drm/msm: prime support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211013081315.GG6010@kili
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e93d50dae71fddfb269fc5243d7dba7c916cb8b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Oct 11 15:39:12 2021 +0300

    memstick: jmb38x_ms: use appropriate free function in jmb38x_ms_alloc_host()
    
    [ Upstream commit beae4a6258e64af609ad5995cc6b6056eb0d898e ]
    
    The "msh" pointer is device managed, meaning that memstick_alloc_host()
    calls device_initialize() on it.  That means that it can't be free
    using kfree() but must instead be freed with memstick_free_host().
    Otherwise it leads to a tiny memory leak of device resources.
    
    Fixes: 60fdd931d577 ("memstick: add support for JMicron jmb38x MemoryStick host controller")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211011123912.GD15188@kili
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da5a9a04d116f7288a455a850c44e2a01425ffbf
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Sep 27 11:44:47 2021 +0200

    memstick: avoid out-of-range warning
    
    [ Upstream commit 4853396f03c3019eccf5cd113e464231e9ddf0b3 ]
    
    clang-14 complains about a sanity check that always passes when the
    page size is 64KB or larger:
    
    drivers/memstick/core/ms_block.c:1739:21: error: result of comparison of constant 65536 with expression of type 'unsigned short' is always false [-Werror,-Wtautological-constant-out-of-range-compare]
            if (msb->page_size > PAGE_SIZE) {
                ~~~~~~~~~~~~~~ ^ ~~~~~~~~~
    
    This is fine, it will still work on all architectures, so just shut
    up that warning with a cast.
    
    Fixes: 0ab30494bc4f ("memstick: add support for legacy memorysticks")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210927094520.696665-1-arnd@kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47feba8fd8dd31ab38e2dde63ce159f50e8be51d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:36:22 2021 +0300

    b43: fix a lower bounds test
    
    [ Upstream commit 9b793db5fca44d01f72d3564a168171acf7c4076 ]
    
    The problem is that "channel" is an unsigned int, when it's less 5 the
    value of "channel - 5" is not a negative number as one would expect but
    is very high positive value instead.
    
    This means that "start" becomes a very high positive value.  The result
    of that is that we never enter the "for (i = start; i <= end; i++) {"
    loop.  Instead of storing the result from b43legacy_radio_aci_detect()
    it just uses zero.
    
    Fixes: ef1a628d83fc ("b43: Implement dynamic PHY API")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Michael Büsch <m@bues.ch>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211006073621.GE8404@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7428a1525b443819e37a0f4859655c5cb130903b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:35:42 2021 +0300

    b43legacy: fix a lower bounds test
    
    [ Upstream commit c1c8380b0320ab757e60ed90efc8b1992a943256 ]
    
    The problem is that "channel" is an unsigned int, when it's less 5 the
    value of "channel - 5" is not a negative number as one would expect but
    is very high positive value instead.
    
    This means that "start" becomes a very high positive value.  The result
    of that is that we never enter the "for (i = start; i <= end; i++) {"
    loop.  Instead of storing the result from b43legacy_radio_aci_detect()
    it just uses zero.
    
    Fixes: 75388acd0cd8 ("[B43LEGACY]: add mac80211-based driver for legacy BCM43xx devices")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Michael Büsch <m@bues.ch>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211006073542.GD8404@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae4b39e0c68a397704f080dd9706774c34fe4200
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Tue Sep 28 12:44:29 2021 +0100

    crypto: qat - detect PFVF collision after ACK
    
    [ Upstream commit 9b768e8a3909ac1ab39ed44a3933716da7761a6f ]
    
    Detect a PFVF collision between the local and the remote function by
    checking if the message on the PFVF CSR has been overwritten.
    This is done after the remote function confirms that the message has
    been received, by clearing the interrupt bit, or the maximum number of
    attempts (ADF_IOV_MSG_ACK_MAX_RETRY) to check the CSR has been exceeded.
    
    Fixes: ed8ccaef52fa ("crypto: qat - Add support for SRIOV")
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Co-developed-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11867a7084fea350ba846a54297f82887166a04d
Author: Linus Lüssing <ll@simonwunderlich.de>
Date:   Tue Oct 5 16:55:53 2021 +0300

    ath9k: Fix potential interrupt storm on queue reset
    
    [ Upstream commit 4925642d541278575ad1948c5924d71ffd57ef14 ]
    
    In tests with two Lima boards from 8devices (QCA4531 based) on OpenWrt
    19.07 we could force a silent restart of a device with no serial
    output when we were sending a high amount of UDP traffic (iperf3 at 80
    MBit/s in both directions from external hosts, saturating the wifi and
    causing a load of about 4.5 to 6) and were then triggering an
    ath9k_queue_reset().
    
    Further debugging showed that the restart was caused by the ath79
    watchdog. With disabled watchdog we could observe that the device was
    constantly going into ath_isr() interrupt handler and was returning
    early after the ATH_OP_HW_RESET flag test, without clearing any
    interrupts. Even though ath9k_queue_reset() calls
    ath9k_hw_kill_interrupts().
    
    With JTAG we could observe the following race condition:
    
    1) ath9k_queue_reset()
       ...
       -> ath9k_hw_kill_interrupts()
       -> set_bit(ATH_OP_HW_RESET, &common->op_flags);
       ...
       <- returns
    
          2) ath9k_tasklet()
             ...
             -> ath9k_hw_resume_interrupts()
             ...
             <- returns
    
                     3) loops around:
                        ...
                        handle_int()
                        -> ath_isr()
                           ...
                           -> if (test_bit(ATH_OP_HW_RESET,
                                           &common->op_flags))
                                return IRQ_HANDLED;
    
                        x) ath_reset_internal():
                           => never reached <=
    
    And in ath_isr() we would typically see the following interrupts /
    interrupt causes:
    
    * status: 0x00111030 or 0x00110030
    * async_cause: 2 (AR_INTR_MAC_IPQ)
    * sync_cause: 0
    
    So the ath9k_tasklet() reenables the ath9k interrupts
    through ath9k_hw_resume_interrupts() which ath9k_queue_reset() had just
    disabled. And ath_isr() then keeps firing because it returns IRQ_HANDLED
    without actually clearing the interrupt.
    
    To fix this IRQ storm also clear/disable the interrupts again when we
    are in reset state.
    
    Cc: Sven Eckelmann <sven@narfation.org>
    Cc: Simon Wunderlich <sw@simonwunderlich.de>
    Cc: Linus Lüssing <linus.luessing@c0d3.blue>
    Fixes: 872b5d814f99 ("ath9k: do not access hardware on IRQs during reset")
    Signed-off-by: Linus Lüssing <ll@simonwunderlich.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210914192515.9273-3-linus.luessing@c0d3.blue
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8ee07384a44d5ff585d570bc14c014a412f4b3a
Author: Anel Orazgaliyeva <anelkz@amazon.de>
Date:   Mon Sep 6 18:34:40 2021 +0000

    cpuidle: Fix kobject memory leaks in error paths
    
    [ Upstream commit e5f5a66c9aa9c331da5527c2e3fd9394e7091e01 ]
    
    Commit c343bf1ba5ef ("cpuidle: Fix three reference count leaks")
    fixes the cleanup of kobjects; however, it removes kfree() calls
    altogether, leading to memory leaks.
    
    Fix those and also defer the initialization of dev->kobj_dev until
    after the error check, so that we do not end up with a dangling
    pointer.
    
    Fixes: c343bf1ba5ef ("cpuidle: Fix three reference count leaks")
    Signed-off-by: Anel Orazgaliyeva <anelkz@amazon.de>
    Suggested-by: Aman Priyadarshi <apeureka@amazon.de>
    [ rjw: Subject edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 324b9699dacd484cd0decc4f97a6476e675757ff
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Aug 3 21:46:09 2021 +0200

    media: si470x: Avoid card name truncation
    
    [ Upstream commit 2908249f3878a591f7918368fdf0b7b0a6c3158c ]
    
    The "card" string only holds 31 characters (and the terminating NUL).
    In order to avoid truncation, use a shorter card description instead of
    the current result, "Silicon Labs Si470x FM Radio Re".
    
    Suggested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 78656acdcf48 ("V4L/DVB (7038): USB radio driver for Silicon Labs Si470x FM Radio Receivers")
    Fixes: cc35bbddfe10 ("V4L/DVB (12416): radio-si470x: add i2c driver for si470x")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e0063d96ad97354f2b361a1df9b03aaa3091ed7
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Fri Aug 13 16:34:20 2021 +0200

    media: dvb-usb: fix ununit-value in az6027_rc_query
    
    [ Upstream commit afae4ef7d5ad913cab1316137854a36bea6268a5 ]
    
    Syzbot reported ununit-value bug in az6027_rc_query(). The problem was
    in missing state pointer initialization. Since this function does nothing
    we can simply initialize state to REMOTE_NO_KEY_PRESSED.
    
    Reported-and-tested-by: syzbot+2cd8c5db4a85f0a04142@syzkaller.appspotmail.com
    
    Fixes: 76f9a820c867 ("V4L/DVB: AZ6027: Initial import of the driver")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfe4a722a19d9b74af3b2c8ebb9a58f69c6d0b0e
Author: Sven Schnelle <svens@stackframe.org>
Date:   Fri Oct 15 21:49:23 2021 +0200

    parisc/kgdb: add kgdb_roundup() to make kgdb work with idle polling
    
    [ Upstream commit 66e29fcda1824f0427966fbee2bd2c85bf362c82 ]
    
    With idle polling, IPIs are not sent when a CPU idle, but queued
    and run later from do_idle(). The default kgdb_call_nmi_hook()
    implementation gets the pointer to struct pt_regs from get_irq_reqs(),
    which doesn't work in that case because it was not called from the
    IPI interrupt handler. Fix it by defining our own kgdb_roundup()
    function which sents an IPI_ENTER_KGDB. When that IPI is received
    on the target CPU kgdb_nmicallback() is called.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a4b6e778c74b200d461f45c4cbd370eebb6ff35
Author: Sven Schnelle <svens@stackframe.org>
Date:   Sat Oct 9 20:24:39 2021 +0200

    parisc: fix warning in flush_tlb_all
    
    [ Upstream commit 1030d681319b43869e0d5b568b9d0226652d1a6f ]
    
    I've got the following splat after enabling preemption:
    
    [    3.724721] BUG: using __this_cpu_add() in preemptible [00000000] code: swapper/0/1
    [    3.734630] caller is __this_cpu_preempt_check+0x38/0x50
    [    3.740635] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.15.0-rc4-64bit+ #324
    [    3.744605] Hardware name: 9000/785/C8000
    [    3.744605] Backtrace:
    [    3.744605]  [<00000000401d9d58>] show_stack+0x74/0xb0
    [    3.744605]  [<0000000040c27bd4>] dump_stack_lvl+0x10c/0x188
    [    3.744605]  [<0000000040c27c84>] dump_stack+0x34/0x48
    [    3.744605]  [<0000000040c33438>] check_preemption_disabled+0x178/0x1b0
    [    3.744605]  [<0000000040c334f8>] __this_cpu_preempt_check+0x38/0x50
    [    3.744605]  [<00000000401d632c>] flush_tlb_all+0x58/0x2e0
    [    3.744605]  [<00000000401075c0>] 0x401075c0
    [    3.744605]  [<000000004010b8fc>] 0x4010b8fc
    [    3.744605]  [<00000000401080fc>] 0x401080fc
    [    3.744605]  [<00000000401d5224>] do_one_initcall+0x128/0x378
    [    3.744605]  [<0000000040102de8>] 0x40102de8
    [    3.744605]  [<0000000040c33864>] kernel_init+0x60/0x3a8
    [    3.744605]  [<00000000401d1020>] ret_from_kernel_thread+0x20/0x28
    [    3.744605]
    
    Fix this by moving the __inc_irq_stat() into the locked section.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33bf25afdbbe29d11baede5e38d239757a8c6f03
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 18 15:30:06 2021 +0100

    ARM: 9136/1: ARMv7-M uses BE-8, not BE-32
    
    [ Upstream commit 345dac33f58894a56d17b92a41be10e16585ceff ]
    
    When configuring the kernel for big-endian, we set either BE-8 or BE-32
    based on the CPU architecture level. Until linux-4.4, we did not have
    any ARMv7-M platform allowing big-endian builds, but now i.MX/Vybrid
    is in that category, adn we get a build error because of this:
    
    arch/arm/kernel/module-plts.c: In function 'get_module_plt':
    arch/arm/kernel/module-plts.c:60:46: error: implicit declaration of function '__opcode_to_mem_thumb32' [-Werror=implicit-function-declaration]
    
    This comes down to picking the wrong default, ARMv7-M uses BE8
    like ARMv7-A does. Changing the default gets the kernel to compile
    and presumably works.
    
    https://lore.kernel.org/all/1455804123-2526139-2-git-send-email-arnd@arndb.de/
    
    Tested-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11593778ae42b36d5a8d4fadc456f613f3ae5b03
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 21 09:55:17 2021 +0900

    ARM: clang: Do not rely on lr register for stacktrace
    
    [ Upstream commit b3ea5d56f212ad81328c82454829a736197ebccc ]
    
    Currently the stacktrace on clang compiled arm kernel uses the 'lr'
    register to find the first frame address from pt_regs. However, that
    is wrong after calling another function, because the 'lr' register
    is used by 'bl' instruction and never be recovered.
    
    As same as gcc arm kernel, directly use the frame pointer (r11) of
    the pt_regs to find the first frame address.
    
    Note that this fixes kretprobe stacktrace issue only with
    CONFIG_UNWINDER_FRAME_POINTER=y. For the CONFIG_UNWINDER_ARM,
    we need another fix.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b646237528094b5b32e415b17897515bab7532a8
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Tue Oct 19 20:54:31 2021 +0900

    smackfs: use __GFP_NOFAIL for smk_cipso_doi()
    
    [ Upstream commit f91488ee15bd3cac467e2d6a361fc2d34d1052ae ]
    
    syzbot is reporting kernel panic at smk_cipso_doi() due to memory
    allocation fault injection [1]. The reason for need to use panic() was
    not explained. But since no fix was proposed for 18 months, for now
    let's use __GFP_NOFAIL for utilizing syzbot resource on other bugs.
    
    Link: https://syzkaller.appspot.com/bug?extid=89731ccb6fec15ce1c22 [1]
    Reported-by: syzbot <syzbot+89731ccb6fec15ce1c22@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c80c2a7af51c93d76ea5d8308c5be3ffd721f644
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Oct 17 11:43:40 2021 +0300

    iwlwifi: mvm: disable RX-diversity in powersave
    
    [ Upstream commit e5322b9ab5f63536c41301150b7ce64605ce52cc ]
    
    Just like we have default SMPS mode as dynamic in powersave,
    we should not enable RX-diversity in powersave, to reduce
    power consumption when connected to a non-MIMO AP.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211017113927.fc896bc5cdaa.I1d11da71b8a5cbe921a37058d5f578f1b14a2023@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e245b6ccaafb3c544b5b73133b254af44a53bc39
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Oct 13 20:19:14 2021 +0800

    PM: hibernate: Get block device exclusively in swsusp_check()
    
    [ Upstream commit 39fbef4b0f77f9c89c8f014749ca533643a37c9f ]
    
    The following kernel crash can be triggered:
    
    [   89.266592] ------------[ cut here ]------------
    [   89.267427] kernel BUG at fs/buffer.c:3020!
    [   89.268264] invalid opcode: 0000 [#1] SMP KASAN PTI
    [   89.269116] CPU: 7 PID: 1750 Comm: kmmpd-loop0 Not tainted 5.10.0-862.14.0.6.x86_64-08610-gc932cda3cef4-dirty #20
    [   89.273169] RIP: 0010:submit_bh_wbc.isra.0+0x538/0x6d0
    [   89.277157] RSP: 0018:ffff888105ddfd08 EFLAGS: 00010246
    [   89.278093] RAX: 0000000000000005 RBX: ffff888124231498 RCX: ffffffffb2772612
    [   89.279332] RDX: 1ffff11024846293 RSI: 0000000000000008 RDI: ffff888124231498
    [   89.280591] RBP: ffff8881248cc000 R08: 0000000000000001 R09: ffffed1024846294
    [   89.281851] R10: ffff88812423149f R11: ffffed1024846293 R12: 0000000000003800
    [   89.283095] R13: 0000000000000001 R14: 0000000000000000 R15: ffff8881161f7000
    [   89.284342] FS:  0000000000000000(0000) GS:ffff88839b5c0000(0000) knlGS:0000000000000000
    [   89.285711] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   89.286701] CR2: 00007f166ebc01a0 CR3: 0000000435c0e000 CR4: 00000000000006e0
    [   89.287919] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   89.289138] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   89.290368] Call Trace:
    [   89.290842]  write_mmp_block+0x2ca/0x510
    [   89.292218]  kmmpd+0x433/0x9a0
    [   89.294902]  kthread+0x2dd/0x3e0
    [   89.296268]  ret_from_fork+0x22/0x30
    [   89.296906] Modules linked in:
    
    by running the following commands:
    
     1. mkfs.ext4 -O mmp  /dev/sda -b 1024
     2. mount /dev/sda /home/test
     3. echo "/dev/sda" > /sys/power/resume
    
    That happens because swsusp_check() calls set_blocksize() on the
    target partition which confuses the file system:
    
           Thread1                       Thread2
    mount /dev/sda /home/test
    get s_mmp_bh  --> has mapped flag
    start kmmpd thread
                                    echo "/dev/sda" > /sys/power/resume
                                      resume_store
                                        software_resume
                                          swsusp_check
                                            set_blocksize
                                              truncate_inode_pages_range
                                                truncate_cleanup_page
                                                  block_invalidatepage
                                                    discard_buffer --> clean mapped flag
    write_mmp_block
      submit_bh
        submit_bh_wbc
          BUG_ON(!buffer_mapped(bh))
    
    To address this issue, modify swsusp_check() to open the target block
    device with exclusive access.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    [ rjw: Subject and changelog edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0b364c473f79f049e5d0109d76f98646609c2e0
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Oct 16 04:02:59 2021 +0000

    mwl8k: Fix use-after-free in mwl8k_fw_state_machine()
    
    [ Upstream commit 257051a235c17e33782b6e24a4b17f2d7915aaec ]
    
    When the driver fails to request the firmware, it calls its error
    handler. In the error handler, the driver detaches device from driver
    first before releasing the firmware, which can cause a use-after-free bug.
    
    Fix this by releasing firmware first.
    
    The following log reveals it:
    
    [    9.007301 ] BUG: KASAN: use-after-free in mwl8k_fw_state_machine+0x320/0xba0
    [    9.010143 ] Workqueue: events request_firmware_work_func
    [    9.010830 ] Call Trace:
    [    9.010830 ]  dump_stack_lvl+0xa8/0xd1
    [    9.010830 ]  print_address_description+0x87/0x3b0
    [    9.010830 ]  kasan_report+0x172/0x1c0
    [    9.010830 ]  ? mutex_unlock+0xd/0x10
    [    9.010830 ]  ? mwl8k_fw_state_machine+0x320/0xba0
    [    9.010830 ]  ? mwl8k_fw_state_machine+0x320/0xba0
    [    9.010830 ]  __asan_report_load8_noabort+0x14/0x20
    [    9.010830 ]  mwl8k_fw_state_machine+0x320/0xba0
    [    9.010830 ]  ? mwl8k_load_firmware+0x5f0/0x5f0
    [    9.010830 ]  request_firmware_work_func+0x172/0x250
    [    9.010830 ]  ? read_lock_is_recursive+0x20/0x20
    [    9.010830 ]  ? process_one_work+0x7a1/0x1100
    [    9.010830 ]  ? request_firmware_nowait+0x460/0x460
    [    9.010830 ]  ? __this_cpu_preempt_check+0x13/0x20
    [    9.010830 ]  process_one_work+0x9bb/0x1100
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634356979-6211-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3cf8daf8c0927e3daec7b125cb73a3dce3901b6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 11 05:31:40 2021 +0800

    lib/xz: Validate the value before assigning it to an enum variable
    
    [ Upstream commit 4f8d7abaa413c34da9d751289849dbfb7c977d05 ]
    
    This might matter, for example, if the underlying type of enum xz_check
    was a signed char. In such a case the validation wouldn't have caught an
    unsupported header. I don't know if this problem can occur in the kernel
    on any arch but it's still good to fix it because some people might copy
    the XZ code to their own projects from Linux instead of the upstream
    XZ Embedded repository.
    
    This change may increase the code size by a few bytes. An alternative
    would have been to use an unsigned int instead of enum xz_check but
    using an enumeration looks cleaner.
    
    Link: https://lore.kernel.org/r/20211010213145.17462-3-xiang@kernel.org
    Signed-off-by: Lasse Collin <lasse.collin@tukaani.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6269497f1e13bb4e5fafdd4cc378d0fb60805d8d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 11 05:31:39 2021 +0800

    lib/xz: Avoid overlapping memcpy() with invalid input with in-place decompression
    
    [ Upstream commit 83d3c4f22a36d005b55f44628f46cc0d319a75e8 ]
    
    With valid files, the safety margin described in lib/decompress_unxz.c
    ensures that these buffers cannot overlap. But if the uncompressed size
    of the input is larger than the caller thought, which is possible when
    the input file is invalid/corrupt, the buffers can overlap. Obviously
    the result will then be garbage (and usually the decoder will return
    an error too) but no other harm will happen when such an over-run occurs.
    
    This change only affects uncompressed LZMA2 chunks and so this
    should have no effect on performance.
    
    Link: https://lore.kernel.org/r/20211010213145.17462-2-xiang@kernel.org
    Signed-off-by: Lasse Collin <lasse.collin@tukaani.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2f69e27400e2e141453d12cd32536acdef5586a
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Oct 16 11:26:21 2021 +0000

    memstick: r592: Fix a UAF bug when removing the driver
    
    [ Upstream commit 738216c1953e802aa9f930c5d15b8f9092c847ff ]
    
    In r592_remove(), the driver will free dma after freeing the host, which
    may cause a UAF bug.
    
    The following log reveals it:
    
    [   45.361796 ] BUG: KASAN: use-after-free in r592_remove+0x269/0x350 [r592]
    [   45.364286 ] Call Trace:
    [   45.364472 ]  dump_stack_lvl+0xa8/0xd1
    [   45.364751 ]  print_address_description+0x87/0x3b0
    [   45.365137 ]  kasan_report+0x172/0x1c0
    [   45.365415 ]  ? r592_remove+0x269/0x350 [r592]
    [   45.365834 ]  ? r592_remove+0x269/0x350 [r592]
    [   45.366168 ]  __asan_report_load8_noabort+0x14/0x20
    [   45.366531 ]  r592_remove+0x269/0x350 [r592]
    [   45.378785 ]
    [   45.378903 ] Allocated by task 4674:
    [   45.379162 ]  ____kasan_kmalloc+0xb5/0xe0
    [   45.379455 ]  __kasan_kmalloc+0x9/0x10
    [   45.379730 ]  __kmalloc+0x150/0x280
    [   45.379984 ]  memstick_alloc_host+0x2a/0x190
    [   45.380664 ]
    [   45.380781 ] Freed by task 5509:
    [   45.381014 ]  kasan_set_track+0x3d/0x70
    [   45.381293 ]  kasan_set_free_info+0x23/0x40
    [   45.381635 ]  ____kasan_slab_free+0x10b/0x140
    [   45.381950 ]  __kasan_slab_free+0x11/0x20
    [   45.382241 ]  slab_free_freelist_hook+0x81/0x150
    [   45.382575 ]  kfree+0x13e/0x290
    [   45.382805 ]  memstick_free+0x1c/0x20
    [   45.383070 ]  device_release+0x9c/0x1d0
    [   45.383349 ]  kobject_put+0x2ef/0x4c0
    [   45.383616 ]  put_device+0x1f/0x30
    [   45.383865 ]  memstick_free_host+0x24/0x30
    [   45.384162 ]  r592_remove+0x242/0x350 [r592]
    [   45.384473 ]  pci_device_remove+0xa9/0x250
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Link: https://lore.kernel.org/r/1634383581-11055-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67774ff69546165169e390026f53c23ad8812faa
Author: André Almeida <andrealmeid@collabora.com>
Date:   Fri Oct 8 00:05:29 2021 -0300

    ACPI: battery: Accept charges over the design capacity as full
    
    [ Upstream commit 2835f327bd1240508db2c89fe94a056faa53c49a ]
    
    Some buggy firmware and/or brand new batteries can support a charge that's
    slightly over the reported design capacity. In such cases, the kernel will
    report to userspace that the charging state of the battery is "Unknown",
    when in reality the battery charge is "Full", at least from the design
    capacity point of view. Make the fallback condition accepts capacities
    over the designed capacity so userspace knows that is full.
    
    Signed-off-by: André Almeida <andrealmeid@collabora.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22524e78fd71b442296677dde7908f24d8e49789
Author: Tuo Li <islituo@gmail.com>
Date:   Thu Aug 5 08:38:53 2021 -0700

    ath: dfs_pattern_detector: Fix possible null-pointer dereference in channel_detector_create()
    
    [ Upstream commit 4b6012a7830b813799a7faf40daa02a837e0fd5b ]
    
    kzalloc() is used to allocate memory for cd->detectors, and if it fails,
    channel_detector_exit() behind the label fail will be called:
      channel_detector_exit(dpd, cd);
    
    In channel_detector_exit(), cd->detectors is dereferenced through:
      struct pri_detector *de = cd->detectors[i];
    
    To fix this possible null-pointer dereference, check cd->detectors before
    the for loop to dereference cd->detectors.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210805153854.154066-1-islituo@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acc0524b4adf6d123c7ddc8bf83cda35a759ffcf
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Aug 18 11:24:50 2021 -0400

    tracefs: Have tracefs directories not set OTH permission bits by default
    
    [ Upstream commit 49d67e445742bbcb03106b735b2ab39f6e5c56bc ]
    
    The tracefs file system is by default mounted such that only root user can
    access it. But there are legitimate reasons to create a group and allow
    those added to the group to have access to tracing. By changing the
    permissions of the tracefs mount point to allow access, it will allow
    group access to the tracefs directory.
    
    There should not be any real reason to allow all access to the tracefs
    directory as it contains sensitive information. Have the default
    permission of directories being created not have any OTH (other) bits set,
    such that an admin that wants to give permission to a group has to first
    disable all OTH bits in the file system.
    
    Link: https://lkml.kernel.org/r/20210818153038.664127804@goodmis.org
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bf3eed751ee06112aa0dfcc92603509e2bc6722
Author: Anant Thazhemadam <anant.thazhemadam@gmail.com>
Date:   Mon Dec 7 07:16:06 2020 +0100

    media: usb: dvd-usb: fix uninit-value bug in dibusb_read_eeprom_byte()
    
    [ Upstream commit 899a61a3305d49e8a712e9ab20d0db94bde5929f ]
    
    In dibusb_read_eeprom_byte(), if dibusb_i2c_msg() fails, val gets
    assigned an value that's not properly initialized.
    Using kzalloc() in place of kmalloc() for the buffer fixes this issue,
    as the val can now be set to 0 in the event dibusb_i2c_msg() fails.
    
    Reported-by: syzbot+e27b4fd589762b0b9329@syzkaller.appspotmail.com
    Tested-by: syzbot+e27b4fd589762b0b9329@syzkaller.appspotmail.com
    Signed-off-by: Anant Thazhemadam <anant.thazhemadam@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12cf2b9b86661691226a7c229aa1e96a31849f83
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Sep 29 18:31:25 2021 +0200

    ACPICA: Avoid evaluating methods too early during system resume
    
    [ Upstream commit d3c4b6f64ad356c0d9ddbcf73fa471e6a841cc5c ]
    
    ACPICA commit 0762982923f95eb652cf7ded27356b247c9774de
    
    During wakeup from system-wide sleep states, acpi_get_sleep_type_data()
    is called and it tries to get memory from the slab allocator in order
    to evaluate a control method, but if KFENCE is enabled in the kernel,
    the memory allocation attempt causes an IRQ work to be queued and a
    self-IPI to be sent to the CPU running the code which requires the
    memory controller to be ready, so if that happens too early in the
    wakeup path, it doesn't work.
    
    Prevent that from taking place by calling acpi_get_sleep_type_data()
    for S0 upfront, when preparing to enter a given sleep state, and
    saving the data obtained by it for later use during system wakeup.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=214271
    Reported-by: Reik Keutterling <spielkind@gmail.com>
    Tested-by: Reik Keutterling <spielkind@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d7ba37c2896092d27df23ef567acce88da39ad0
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Sep 26 10:12:24 2021 -0700

    ia64: don't do IA64_CMPXCHG_DEBUG without CONFIG_PRINTK
    
    [ Upstream commit c15b5fc054c3d6c97e953617605235c5cb8ce979 ]
    
    When CONFIG_PRINTK is not set, the CMPXCHG_BUGCHECK() macro calls
    _printk(), but _printk() is a static inline function, not available
    as an extern.
    Since the purpose of the macro is to print the BUGCHECK info,
    make this config option depend on PRINTK.
    
    Fixes multiple occurrences of this build error:
    
    ../include/linux/printk.h:208:5: error: static declaration of '_printk' follows non-static declaration
      208 | int _printk(const char *s, ...)
          |     ^~~~~~~
    In file included from ../arch/ia64/include/asm/cmpxchg.h:5,
    ../arch/ia64/include/uapi/asm/cmpxchg.h:146:28: note: previous declaration of '_printk' with type 'int(const char *, ...)'
      146 |                 extern int _printk(const char *fmt, ...);
    
    Cc: linux-ia64@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Chris Down <chris@chrisdown.name>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98c628eee2fac7fd34e54317c7089170f94f0cf8
Author: Rajat Asthana <rajatasthana4@gmail.com>
Date:   Wed Aug 18 22:31:10 2021 +0200

    media: mceusb: return without resubmitting URB in case of -EPROTO error.
    
    [ Upstream commit 476db72e521983ecb847e4013b263072bb1110fc ]
    
    Syzkaller reported a warning called "rcu detected stall in dummy_timer".
    
    The error seems to be an error in mceusb_dev_recv(). In the case of
    -EPROTO error, the routine immediately resubmits the URB. Instead it
    should return without resubmitting URB.
    
    Reported-by: syzbot+4d3749e9612c2cfab956@syzkaller.appspotmail.com
    Signed-off-by: Rajat Asthana <rajatasthana4@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f7cf9bc3f6bc1d23a7d0f37cc8e325e0baf0c83
Author: Tuo Li <islituo@gmail.com>
Date:   Thu Aug 5 09:55:35 2021 +0200

    media: s5p-mfc: fix possible null-pointer dereference in s5p_mfc_probe()
    
    [ Upstream commit 8515965e5e33f4feb56134348c95953f3eadfb26 ]
    
    The variable pdev is assigned to dev->plat_dev, and dev->plat_dev is
    checked in:
      if (!dev->plat_dev)
    
    This indicates both dev->plat_dev and pdev can be NULL. If so, the
    function dev_err() is called to print error information.
      dev_err(&pdev->dev, "No platform data specified\n");
    
    However, &pdev->dev is an illegal address, and it is dereferenced in
    dev_err().
    
    To fix this possible null-pointer dereference, replace dev_err() with
    mfc_err().
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5781b09247e4ed8ed3dcffb0fce750700fc5586c
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Jun 18 14:29:08 2021 +0200

    media: uvcvideo: Set capability in s_param
    
    [ Upstream commit 97a2777a96070afb7da5d587834086c0b586c8cc ]
    
    Fixes v4l2-compliance:
    
    Format ioctls (Input 0):
                    warn: v4l2-test-formats.cpp(1339): S_PARM is supported but doesn't report V4L2_CAP_TIMEPERFRAME
                    fail: v4l2-test-formats.cpp(1241): node->has_frmintervals && !cap->capability
    
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da67d98857b68f6e60a771d9c6476dda733821d1
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Jun 23 08:01:05 2021 +0200

    media: netup_unidvb: handle interrupt properly according to the firmware
    
    [ Upstream commit dbb4cfea6efe979ed153bd59a6a527a90d3d0ab3 ]
    
    The interrupt handling should be related to the firmware version. If
    the driver matches an old firmware, then the driver should not handle
    interrupt such as i2c or dma, otherwise it will cause some errors.
    
    This log reveals it:
    
    [   27.708641] INFO: trying to register non-static key.
    [   27.710851] The code is fine but needs lockdep annotation, or maybe
    [   27.712010] you didn't initialize this object before use?
    [   27.712396] turning off the locking correctness validator.
    [   27.712787] CPU: 2 PID: 0 Comm: swapper/2 Not tainted 5.12.4-g70e7f0549188-dirty #169
    [   27.713349] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    [   27.714149] Call Trace:
    [   27.714329]  <IRQ>
    [   27.714480]  dump_stack+0xba/0xf5
    [   27.714737]  register_lock_class+0x873/0x8f0
    [   27.715052]  ? __lock_acquire+0x323/0x1930
    [   27.715353]  __lock_acquire+0x75/0x1930
    [   27.715636]  lock_acquire+0x1dd/0x3e0
    [   27.715905]  ? netup_i2c_interrupt+0x19/0x310
    [   27.716226]  _raw_spin_lock_irqsave+0x4b/0x60
    [   27.716544]  ? netup_i2c_interrupt+0x19/0x310
    [   27.716863]  netup_i2c_interrupt+0x19/0x310
    [   27.717178]  netup_unidvb_isr+0xd3/0x160
    [   27.717467]  __handle_irq_event_percpu+0x53/0x3e0
    [   27.717808]  handle_irq_event_percpu+0x35/0x90
    [   27.718129]  handle_irq_event+0x39/0x60
    [   27.718409]  handle_fasteoi_irq+0xc2/0x1d0
    [   27.718707]  __common_interrupt+0x7f/0x150
    [   27.719008]  common_interrupt+0xb4/0xd0
    [   27.719289]  </IRQ>
    [   27.719446]  asm_common_interrupt+0x1e/0x40
    [   27.719747] RIP: 0010:native_safe_halt+0x17/0x20
    [   27.720084] Code: 07 0f 00 2d 8b ee 4c 00 f4 5d c3 0f 1f 84 00 00 00 00 00 8b 05 72 95 17 02 55 48 89 e5 85 c0 7e 07 0f 00 2d 6b ee 4c 00 fb f4 <5d> c3 cc cc cc cc cc cc cc 55 48 89 e5 e8 67 53 ff ff 8b 0d 29 f6
    [   27.721386] RSP: 0018:ffffc9000008fe90 EFLAGS: 00000246
    [   27.721758] RAX: 0000000000000000 RBX: 0000000000000002 RCX: 0000000000000000
    [   27.722262] RDX: 0000000000000000 RSI: ffffffff85f7c054 RDI: ffffffff85ded4e6
    [   27.722770] RBP: ffffc9000008fe90 R08: 0000000000000001 R09: 0000000000000001
    [   27.723277] R10: 0000000000000000 R11: 0000000000000001 R12: ffffffff86a75408
    [   27.723781] R13: 0000000000000000 R14: 0000000000000000 R15: ffff888100260000
    [   27.724289]  default_idle+0x9/0x10
    [   27.724537]  arch_cpu_idle+0xa/0x10
    [   27.724791]  default_idle_call+0x6e/0x250
    [   27.725082]  do_idle+0x1f0/0x2d0
    [   27.725326]  cpu_startup_entry+0x18/0x20
    [   27.725613]  start_secondary+0x11f/0x160
    [   27.725902]  secondary_startup_64_no_verify+0xb0/0xbb
    [   27.726272] BUG: kernel NULL pointer dereference, address: 0000000000000002
    [   27.726768] #PF: supervisor read access in kernel mode
    [   27.727138] #PF: error_code(0x0000) - not-present page
    [   27.727507] PGD 8000000118688067 P4D 8000000118688067 PUD 10feab067 PMD 0
    [   27.727999] Oops: 0000 [#1] PREEMPT SMP PTI
    [   27.728302] CPU: 2 PID: 0 Comm: swapper/2 Not tainted 5.12.4-g70e7f0549188-dirty #169
    [   27.728861] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    [   27.729660] RIP: 0010:netup_i2c_interrupt+0x23/0x310
    [   27.730019] Code: 0f 1f 80 00 00 00 00 55 48 89 e5 41 55 41 54 53 48 89 fb e8 af 6e 95 fd 48 89 df e8 e7 9f 1c 01 49 89 c5 48 8b 83 48 08 00 00 <66> 44 8b 60 02 44 89 e0 48 8b 93 48 08 00 00 83 e0 f8 66 89 42 02
    [   27.731339] RSP: 0018:ffffc90000118e90 EFLAGS: 00010046
    [   27.731716] RAX: 0000000000000000 RBX: ffff88810803c4d8 RCX: 0000000000000000
    [   27.732223] RDX: 0000000000000001 RSI: ffffffff85d37b94 RDI: ffff88810803c4d8
    [   27.732727] RBP: ffffc90000118ea8 R08: 0000000000000000 R09: 0000000000000001
    [   27.733239] R10: ffff88810803c4f0 R11: 61646e6f63657320 R12: 0000000000000000
    [   27.733745] R13: 0000000000000046 R14: ffff888101041000 R15: ffff8881081b2400
    [   27.734251] FS:  0000000000000000(0000) GS:ffff88817bc80000(0000) knlGS:0000000000000000
    [   27.734821] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   27.735228] CR2: 0000000000000002 CR3: 0000000108194000 CR4: 00000000000006e0
    [   27.735735] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   27.736241] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   27.736744] Call Trace:
    [   27.736924]  <IRQ>
    [   27.737074]  netup_unidvb_isr+0xd3/0x160
    [   27.737363]  __handle_irq_event_percpu+0x53/0x3e0
    [   27.737706]  handle_irq_event_percpu+0x35/0x90
    [   27.738028]  handle_irq_event+0x39/0x60
    [   27.738306]  handle_fasteoi_irq+0xc2/0x1d0
    [   27.738602]  __common_interrupt+0x7f/0x150
    [   27.738899]  common_interrupt+0xb4/0xd0
    [   27.739176]  </IRQ>
    [   27.739331]  asm_common_interrupt+0x1e/0x40
    [   27.739633] RIP: 0010:native_safe_halt+0x17/0x20
    [   27.739967] Code: 07 0f 00 2d 8b ee 4c 00 f4 5d c3 0f 1f 84 00 00 00 00 00 8b 05 72 95 17 02 55 48 89 e5 85 c0 7e 07 0f 00 2d 6b ee 4c 00 fb f4 <5d> c3 cc cc cc cc cc cc cc 55 48 89 e5 e8 67 53 ff ff 8b 0d 29 f6
    [   27.741275] RSP: 0018:ffffc9000008fe90 EFLAGS: 00000246
    [   27.741647] RAX: 0000000000000000 RBX: 0000000000000002 RCX: 0000000000000000
    [   27.742148] RDX: 0000000000000000 RSI: ffffffff85f7c054 RDI: ffffffff85ded4e6
    [   27.742652] RBP: ffffc9000008fe90 R08: 0000000000000001 R09: 0000000000000001
    [   27.743154] R10: 0000000000000000 R11: 0000000000000001 R12: ffffffff86a75408
    [   27.743652] R13: 0000000000000000 R14: 0000000000000000 R15: ffff888100260000
    [   27.744157]  default_idle+0x9/0x10
    [   27.744405]  arch_cpu_idle+0xa/0x10
    [   27.744658]  default_idle_call+0x6e/0x250
    [   27.744948]  do_idle+0x1f0/0x2d0
    [   27.745190]  cpu_startup_entry+0x18/0x20
    [   27.745475]  start_secondary+0x11f/0x160
    [   27.745761]  secondary_startup_64_no_verify+0xb0/0xbb
    [   27.746123] Modules linked in:
    [   27.746348] Dumping ftrace buffer:
    [   27.746596]    (ftrace buffer empty)
    [   27.746852] CR2: 0000000000000002
    [   27.747094] ---[ end trace ebafd46f83ab946d ]---
    [   27.747424] RIP: 0010:netup_i2c_interrupt+0x23/0x310
    [   27.747778] Code: 0f 1f 80 00 00 00 00 55 48 89 e5 41 55 41 54 53 48 89 fb e8 af 6e 95 fd 48 89 df e8 e7 9f 1c 01 49 89 c5 48 8b 83 48 08 00 00 <66> 44 8b 60 02 44 89 e0 48 8b 93 48 08 00 00 83 e0 f8 66 89 42 02
    [   27.749082] RSP: 0018:ffffc90000118e90 EFLAGS: 00010046
    [   27.749461] RAX: 0000000000000000 RBX: ffff88810803c4d8 RCX: 0000000000000000
    [   27.749966] RDX: 0000000000000001 RSI: ffffffff85d37b94 RDI: ffff88810803c4d8
    [   27.750471] RBP: ffffc90000118ea8 R08: 0000000000000000 R09: 0000000000000001
    [   27.750976] R10: ffff88810803c4f0 R11: 61646e6f63657320 R12: 0000000000000000
    [   27.751480] R13: 0000000000000046 R14: ffff888101041000 R15: ffff8881081b2400
    [   27.751986] FS:  0000000000000000(0000) GS:ffff88817bc80000(0000) knlGS:0000000000000000
    [   27.752560] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   27.752970] CR2: 0000000000000002 CR3: 0000000108194000 CR4: 00000000000006e0
    [   27.753481] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   27.753984] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   27.754487] Kernel panic - not syncing: Fatal exception in interrupt
    [   27.755033] Dumping ftrace buffer:
    [   27.755279]    (ftrace buffer empty)
    [   27.755534] Kernel Offset: disabled
    [   27.755785] Rebooting in 1 seconds..
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef54897599e82afcb57a900adfbf5a6e1995525a
Author: Dirk Bender <d.bender@phytec.de>
Date:   Mon Jul 26 09:35:15 2021 +0200

    media: mt9p031: Fix corrupted frame after restarting stream
    
    [ Upstream commit 0961ba6dd211a4a52d1dd4c2d59be60ac2dc08c7 ]
    
    To prevent corrupted frames after starting and stopping the sensor its
    datasheet specifies a specific pause sequence to follow:
    
    Stopping:
            Set Pause_Restart Bit -> Set Restart Bit -> Set Chip_Enable Off
    
    Restarting:
            Set Chip_Enable On -> Clear Pause_Restart Bit
    
    The Restart Bit is cleared automatically and must not be cleared
    manually as this would cause undefined behavior.
    
    Signed-off-by: Dirk Bender <d.bender@phytec.de>
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17514127ee9f13fcdfe5a680172e2536550f7333
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Sep 15 16:19:46 2021 +0200

    x86: Increase exception stack sizes
    
    [ Upstream commit 7fae4c24a2b84a66c7be399727aca11e7a888462 ]
    
    It turns out that a single page of stack is trivial to overflow with
    all the tracing gunk enabled. Raise the exception stacks to 2 pages,
    which is still half the interrupt stacks, which are at 4 pages.
    
    Reported-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/YUIO9Ye98S5Eb68w@hirez.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1a5224a1284678f4e8fe0465ec5718e8009c19e
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Sat Aug 28 23:41:40 2021 -0700

    smackfs: Fix use-after-free in netlbl_catmap_walk()
    
    [ Upstream commit 0817534ff9ea809fac1322c5c8c574be8483ea57 ]
    
    Syzkaller reported use-after-free bug as described in [1]. The bug is
    triggered when smk_set_cipso() tries to free stale category bitmaps
    while there are concurrent reader(s) using the same bitmaps.
    
    Wait for RCU grace period to finish before freeing the category bitmaps
    in smk_set_cipso(). This makes sure that there are no more readers using
    the stale bitmaps and freeing them should be safe.
    
    [1] https://lore.kernel.org/netdev/000000000000a814c505ca657a4e@google.com/
    
    Reported-by: syzbot+3f91de0b813cc3d19a80@syzkaller.appspotmail.com
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 697d99fb48ad5e750a6b56d0a3966788fd1a682e
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Tue Sep 14 23:20:59 2021 +0200

    MIPS: lantiq: dma: reset correct number of channel
    
    [ Upstream commit 5ca9ce2ba4d5884cd94d1a856c675ab1242cd242 ]
    
    Different SoCs have a different number of channels, e.g .:
    * amazon-se has 10 channels,
    * danube+ar9 have 20 channels,
    * vr9 has 28 channels,
    * ar10 has 24 channels.
    
    We can read the ID register and, depending on the reported
    number of channels, reset the appropriate number of channels.
    
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6086d6c30025eccf0c21a18145b6dfbce5cfdc1c
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Tue Sep 14 23:20:58 2021 +0200

    MIPS: lantiq: dma: add small delay after reset
    
    [ Upstream commit c12aa581f6d5e80c3c3675ab26a52c2b3b62f76e ]
    
    Reading the DMA registers immediately after the reset causes
    Data Bus Error. Adding a small delay fixes this issue.
    
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 655904524490d1ad1dabee5446ff4573aa909505
Author: Barnabás Pőcze <pobrn@protonmail.com>
Date:   Sat Sep 4 17:56:26 2021 +0000

    platform/x86: wmi: do not fail if disabling fails
    
    [ Upstream commit 1975718c488a39128f1f515b23ae61a5a214cc3d ]
    
    Previously, `__query_block()` would fail if the
    second WCxx method call failed. However, the
    WQxx method might have succeeded, and potentially
    allocated memory for the result. Instead of
    throwing away the result and potentially
    leaking memory, ignore the result of
    the second WCxx call.
    
    Signed-off-by: Barnabás Pőcze <pobrn@protonmail.com>
    Link: https://lore.kernel.org/r/20210904175450.156801-25-pobrn@protonmail.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88aed7d67197d155260f09078835290adfa1debd
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Tue Aug 31 17:35:37 2021 -0700

    Bluetooth: fix use-after-free error in lock_sock_nested()
    
    [ Upstream commit 1bff51ea59a9afb67d2dd78518ab0582a54a472c ]
    
    use-after-free error in lock_sock_nested is reported:
    
    [  179.140137][ T3731] =====================================================
    [  179.142675][ T3731] BUG: KMSAN: use-after-free in lock_sock_nested+0x280/0x2c0
    [  179.145494][ T3731] CPU: 4 PID: 3731 Comm: kworker/4:2 Not tainted 5.12.0-rc6+ #54
    [  179.148432][ T3731] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    [  179.151806][ T3731] Workqueue: events l2cap_chan_timeout
    [  179.152730][ T3731] Call Trace:
    [  179.153301][ T3731]  dump_stack+0x24c/0x2e0
    [  179.154063][ T3731]  kmsan_report+0xfb/0x1e0
    [  179.154855][ T3731]  __msan_warning+0x5c/0xa0
    [  179.155579][ T3731]  lock_sock_nested+0x280/0x2c0
    [  179.156436][ T3731]  ? kmsan_get_metadata+0x116/0x180
    [  179.157257][ T3731]  l2cap_sock_teardown_cb+0xb8/0x890
    [  179.158154][ T3731]  ? __msan_metadata_ptr_for_load_8+0x10/0x20
    [  179.159141][ T3731]  ? kmsan_get_metadata+0x116/0x180
    [  179.159994][ T3731]  ? kmsan_get_shadow_origin_ptr+0x84/0xb0
    [  179.160959][ T3731]  ? l2cap_sock_recv_cb+0x420/0x420
    [  179.161834][ T3731]  l2cap_chan_del+0x3e1/0x1d50
    [  179.162608][ T3731]  ? kmsan_get_metadata+0x116/0x180
    [  179.163435][ T3731]  ? kmsan_get_shadow_origin_ptr+0x84/0xb0
    [  179.164406][ T3731]  l2cap_chan_close+0xeea/0x1050
    [  179.165189][ T3731]  ? kmsan_internal_unpoison_shadow+0x42/0x70
    [  179.166180][ T3731]  l2cap_chan_timeout+0x1da/0x590
    [  179.167066][ T3731]  ? __msan_metadata_ptr_for_load_8+0x10/0x20
    [  179.168023][ T3731]  ? l2cap_chan_create+0x560/0x560
    [  179.168818][ T3731]  process_one_work+0x121d/0x1ff0
    [  179.169598][ T3731]  worker_thread+0x121b/0x2370
    [  179.170346][ T3731]  kthread+0x4ef/0x610
    [  179.171010][ T3731]  ? process_one_work+0x1ff0/0x1ff0
    [  179.171828][ T3731]  ? kthread_blkcg+0x110/0x110
    [  179.172587][ T3731]  ret_from_fork+0x1f/0x30
    [  179.173348][ T3731]
    [  179.173752][ T3731] Uninit was created at:
    [  179.174409][ T3731]  kmsan_internal_poison_shadow+0x5c/0xf0
    [  179.175373][ T3731]  kmsan_slab_free+0x76/0xc0
    [  179.176060][ T3731]  kfree+0x3a5/0x1180
    [  179.176664][ T3731]  __sk_destruct+0x8af/0xb80
    [  179.177375][ T3731]  __sk_free+0x812/0x8c0
    [  179.178032][ T3731]  sk_free+0x97/0x130
    [  179.178686][ T3731]  l2cap_sock_release+0x3d5/0x4d0
    [  179.179457][ T3731]  sock_close+0x150/0x450
    [  179.180117][ T3731]  __fput+0x6bd/0xf00
    [  179.180787][ T3731]  ____fput+0x37/0x40
    [  179.181481][ T3731]  task_work_run+0x140/0x280
    [  179.182219][ T3731]  do_exit+0xe51/0x3e60
    [  179.182930][ T3731]  do_group_exit+0x20e/0x450
    [  179.183656][ T3731]  get_signal+0x2dfb/0x38f0
    [  179.184344][ T3731]  arch_do_signal_or_restart+0xaa/0xe10
    [  179.185266][ T3731]  exit_to_user_mode_prepare+0x2d2/0x560
    [  179.186136][ T3731]  syscall_exit_to_user_mode+0x35/0x60
    [  179.186984][ T3731]  do_syscall_64+0xc5/0x140
    [  179.187681][ T3731]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  179.188604][ T3731] =====================================================
    
    In our case, there are two Thread A and B:
    
    Context: Thread A:              Context: Thread B:
    
    l2cap_chan_timeout()            __se_sys_shutdown()
      l2cap_chan_close()              l2cap_sock_shutdown()
        l2cap_chan_del()                l2cap_chan_close()
          l2cap_sock_teardown_cb()        l2cap_sock_teardown_cb()
    
    Once l2cap_sock_teardown_cb() excuted, this sock will be marked as SOCK_ZAPPED,
    and can be treated as killable in l2cap_sock_kill() if sock_orphan() has
    excuted, at this time we close sock through sock_close() which end to call
    l2cap_sock_kill() like Thread C:
    
    Context: Thread C:
    
    sock_close()
      l2cap_sock_release()
        sock_orphan()
        l2cap_sock_kill()  #free sock if refcnt is 1
    
    If C completed, Once A or B reaches l2cap_sock_teardown_cb() again,
    use-after-free happened.
    
    We should set chan->data to NULL if sock is destructed, for telling teardown
    operation is not allowed in l2cap_sock_teardown_cb(), and also we should
    avoid killing an already killed socket in l2cap_sock_close_cb().
    
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f632f88fe209240f5cad853e33f74fda4d341004
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Aug 28 18:18:18 2021 +0200

    Bluetooth: sco: Fix lock_sock() blockage by memcpy_from_msg()
    
    [ Upstream commit 99c23da0eed4fd20cae8243f2b51e10e66aa0951 ]
    
    The sco_send_frame() also takes lock_sock() during memcpy_from_msg()
    call that may be endlessly blocked by a task with userfaultd
    technique, and this will result in a hung task watchdog trigger.
    
    Just like the similar fix for hci_sock_sendmsg() in commit
    92c685dc5de0 ("Bluetooth: reorganize functions..."), this patch moves
    the  memcpy_from_msg() out of lock_sock() for addressing the hang.
    
    This should be the last piece for fixing CVE-2021-3640 after a few
    already queued fixes.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 315a8f60684aaf4cfb929968c328570a25691d86
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:51:59 2021 +0200

    USB: iowarrior: fix control-message timeouts
    
    commit 79a4479a17b83310deb0b1a2a274fe5be12d2318 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Use the common control-message timeout define for the five-second
    timeout and drop the driver-specific one.
    
    Fixes: 946b960d13c1 ("USB: add driver for iowarrior devices.")
    Cc: stable@vger.kernel.org      # 2.6.21
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025115159.4954-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f05fe15e905da5cfd0fa397f7b86b1d272600741
Author: Wang Hai <wanghai38@huawei.com>
Date:   Fri Oct 15 16:55:43 2021 +0800

    USB: serial: keyspan: fix memleak on probe errors
    
    commit 910c996335c37552ee30fcb837375b808bb4f33b upstream.
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff888258228440 (size 64):
      comm "kworker/7:2", pid 2005, jiffies 4294989509 (age 824.540s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8167939c>] slab_post_alloc_hook+0x9c/0x490
        [<ffffffff8167f627>] kmem_cache_alloc_trace+0x1f7/0x470
        [<ffffffffa02ac0e4>] keyspan_port_probe+0xa4/0x5d0 [keyspan]
        [<ffffffffa0294c07>] usb_serial_device_probe+0x97/0x1d0 [usbserial]
        [<ffffffff82b50ca7>] really_probe+0x167/0x460
        [<ffffffff82b51099>] __driver_probe_device+0xf9/0x180
        [<ffffffff82b51173>] driver_probe_device+0x53/0x130
        [<ffffffff82b516f5>] __device_attach_driver+0x105/0x130
        [<ffffffff82b4cfe9>] bus_for_each_drv+0x129/0x190
        [<ffffffff82b50a69>] __device_attach+0x1c9/0x270
        [<ffffffff82b518d0>] device_initial_probe+0x20/0x30
        [<ffffffff82b4f062>] bus_probe_device+0x142/0x160
        [<ffffffff82b4a4e9>] device_add+0x829/0x1300
        [<ffffffffa0295fda>] usb_serial_probe.cold+0xc9b/0x14ac [usbserial]
        [<ffffffffa02266aa>] usb_probe_interface+0x1aa/0x3c0 [usbcore]
        [<ffffffff82b50ca7>] really_probe+0x167/0x460
    
    If keyspan_port_probe() fails to allocate memory for an out_buffer[i] or
    in_buffer[i], the previously allocated memory for out_buffer or
    in_buffer needs to be freed on the error handling path, otherwise a
    memory leak will result.
    
    Fixes: bad41a5bf177 ("USB: keyspan: fix port DMA-buffer allocations")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Link: https://lore.kernel.org/r/20211015085543.1203011-1-wanghai38@huawei.com
    Cc: stable@vger.kernel.org      # 3.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c03773528e1dd6a81b3d34fecd95ead6e8f51701
Author: Pekka Korpinen <pekka.korpinen@iki.fi>
Date:   Wed Sep 29 21:57:55 2021 +0300

    iio: dac: ad5446: Fix ad5622_write() return value
    
    commit 558df982d4ead9cac628153d0d7b60feae05ddc8 upstream.
    
    On success i2c_master_send() returns the number of bytes written. The
    call from iio_write_channel_info(), however, expects the return value to
    be zero on success.
    
    This bug causes incorrect consumption of the sysfs buffer in
    iio_write_channel_info(). When writing more than two characters to
    out_voltage0_raw, the ad5446 write handler is called multiple times
    causing unexpected behavior.
    
    Fixes: 3ec36a2cf0d5 ("iio:ad5446: Add support for I2C based DACs")
    Signed-off-by: Pekka Korpinen <pekka.korpinen@iki.fi>
    Link: https://lore.kernel.org/r/20210929185755.2384-1-pekka.korpinen@iki.fi
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb7294153ad606c0c716f58999afcd2270a79f7e
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Oct 8 17:38:21 2021 +0800

    quota: correct error number in free_dqentry()
    
    commit d0e36a62bd4c60c09acc40e06ba4831a4d0bc75b upstream.
    
    Fix the error path in free_dqentry(), pass out the error number if the
    block to free is not correct.
    
    Fixes: 1ccd14b9c271 ("quota: Split off quota tree handling into a separate file")
    Link: https://lore.kernel.org/r/20211008093821.1001186-3-yi.zhang@huawei.com
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Cc: stable@kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a40f3e53f5de1d6876df8a9e8025b50616b8818
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Oct 8 17:38:20 2021 +0800

    quota: check block number when reading the block in quota file
    
    commit 9bf3d20331295b1ecb81f4ed9ef358c51699a050 upstream.
    
    The block number in the quota tree on disk should be smaller than the
    v2_disk_dqinfo.dqi_blocks. If the quota file was corrupted, we may be
    allocating an 'allocated' block and that would lead to a loop in a tree,
    which will probably trigger oops later. This patch adds a check for the
    block number in the quota tree to prevent such potential issue.
    
    Link: https://lore.kernel.org/r/20211008093821.1001186-2-yi.zhang@huawei.com
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Cc: stable@kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b81193ccb0d5c97f984817e0b690fbcaa7bc35
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Oct 24 17:03:15 2021 +0300

    ALSA: mixer: fix deadlock in snd_mixer_oss_set_volume
    
    commit 3ab7992018455ac63c33e9b3eaa7264e293e40f4 upstream.
    
    In commit 411cef6adfb3 ("ALSA: mixer: oss: Fix racy access to slots")
    added mutex protection in snd_mixer_oss_set_volume(). Second
    mutex_lock() in same function looks like typo, fix it.
    
    Reported-by: syzbot+ace149a75a9a0a399ac7@syzkaller.appspotmail.com
    Fixes: 411cef6adfb3 ("ALSA: mixer: oss: Fix racy access to slots")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: https://lore.kernel.org/r/20211024140315.16704-1-paskripkin@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3aa80f707eccfe35809d12403843488c9e006d2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 20 18:48:46 2021 +0200

    ALSA: mixer: oss: Fix racy access to slots
    
    commit 411cef6adfb38a5bb6bd9af3941b28198e7fb680 upstream.
    
    The OSS mixer can reassign the mapping slots dynamically via proc
    file.  Although the addition and deletion of those slots are protected
    by mixer->reg_mutex, the access to slots aren't, hence this may cause
    UAF when the slots in use are deleted concurrently.
    
    This patch applies the mixer->reg_mutex in all appropriate code paths
    (i.e. the ioctl functions) that may access slots.
    
    Reported-by: syzbot+9988f17cf72a1045a189@syzkaller.appspotmail.com
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/00000000000036adc005ceca9175@google.com
    Link: https://lore.kernel.org/r/20211020164846.922-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 124df74c31a705f258506e3dfa6366fb278a9f97
Author: Henrik Grimler <henrik@grimler.se>
Date:   Wed Sep 29 20:14:17 2021 +0200

    power: supply: max17042_battery: use VFSOC for capacity when no rsns
    
    commit 223a3b82834f036a62aa831f67cbf1f1d644c6e2 upstream.
    
    On Galaxy S3 (i9300/i9305), which has the max17047 fuel gauge and no
    current sense resistor (rsns), the RepSOC register does not provide an
    accurate state of charge value. The reported value is wrong, and does
    not change over time. VFSOC however, which uses the voltage fuel gauge
    to determine the state of charge, always shows an accurate value.
    
    For devices without current sense, VFSOC is already used for the
    soc-alert (0x0003 is written to MiscCFG register), so with this change
    the source of the alert and the PROP_CAPACITY value match.
    
    Fixes: 359ab9f5b154 ("power_supply: Add MAX17042 Fuel Gauge Driver")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Suggested-by: Wolfgang Wiedmeyer <wolfgit@wiedmeyer.de>
    Signed-off-by: Henrik Grimler <henrik@grimler.se>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed6dd7282ab658daae9064d24ad04b8756dfe120
Author: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date:   Tue Sep 14 14:18:06 2021 +0200

    power: supply: max17042_battery: Prevent int underflow in set_soc_threshold
    
    commit e660dbb68c6b3f7b9eb8b9775846a44f9798b719 upstream.
    
    max17042_set_soc_threshold gets called with offset set to 1, which means
    that minimum threshold value would underflow once SOC got down to 0,
    causing invalid alerts from the gauge.
    
    Fixes: e5f3872d2044 ("max17042: Add support for signalling change in SOC")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f8f7b4ef6d97ba0015e675fd46c329869712e7e
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Sep 1 13:21:34 2021 -0500

    signal: Remove the bogus sigkill_pending in ptrace_stop
    
    commit 7d613f9f72ec8f90ddefcae038fdae5adb8404b3 upstream.
    
    The existence of sigkill_pending is a little silly as it is
    functionally a duplicate of fatal_signal_pending that is used in
    exactly one place.
    
    Checking for pending fatal signals and returning early in ptrace_stop
    is actively harmful.  It casues the ptrace_stop called by
    ptrace_signal to return early before setting current->exit_code.
    Later when ptrace_signal reads the signal number from
    current->exit_code is undefined, making it unpredictable what will
    happen.
    
    Instead rely on the fact that schedule will not sleep if there is a
    pending signal that can awaken a task.
    
    Removing the explict sigkill_pending test fixes fixes ptrace_signal
    when ptrace_stop does not stop because current->exit_code is always
    set to to signr.
    
    Cc: stable@vger.kernel.org
    Fixes: 3d749b9e676b ("ptrace: simplify ptrace_stop()->sigkill_pending() path")
    Fixes: 1a669c2f16d4 ("Add arch_ptrace_stop")
    Link: https://lkml.kernel.org/r/87pmsyx29t.fsf@disp2133
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eec821d3c5894f16c7593fd189fde0009833007
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Mon Oct 11 15:32:23 2021 +0200

    mwifiex: Read a PCI register after writing the TX ring write pointer
    
    commit e5f4eb8223aa740237cd463246a7debcddf4eda1 upstream.
    
    On the 88W8897 PCIe+USB card the firmware randomly crashes after setting
    the TX ring write pointer. The issue is present in the latest firmware
    version 15.68.19.p21 of the PCIe+USB card.
    
    Those firmware crashes can be worked around by reading any PCI register
    of the card after setting that register, so read the PCI_VENDOR_ID
    register here. The reason this works is probably because we keep the bus
    from entering an ASPM state for a bit longer, because that's what causes
    the cards firmware to crash.
    
    This fixes a bug where during RX/TX traffic and with ASPM L1 substates
    enabled (the specific substates where the issue happens appear to be
    platform dependent), the firmware crashes and eventually a command
    timeout appears in the logs.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=109681
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211011133224.15561-2-verdre@v0yd.nl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8f91819e340fd42bee3019c2f3bc9a21f27194c
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Wed Oct 20 15:38:53 2021 +0200

    wcn36xx: Fix HT40 capability for 2Ghz band
    
    commit 960ae77f25631bbe4e3aafefe209b52e044baf31 upstream.
    
    All wcn36xx controllers are supposed to support HT40 (and SGI40),
    This doubles the maximum bitrate/throughput with compatible APs.
    
    Tested with wcn3620 & wcn3680B.
    
    Cc: stable@vger.kernel.org
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634737133-22336-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba5a1b9379db2728a40195140775d86b98511628
Author: Ingmar Klein <ingmar_klein@web.de>
Date:   Fri Apr 9 11:26:33 2021 +0200

    PCI: Mark Atheros QCA6174 to avoid bus reset
    
    commit e3f4bd3462f6f796594ecc0dda7144ed2d1e5a26 upstream.
    
    When passing the Atheros QCA6174 through to a virtual machine, the VM hangs
    at the point where the ath10k driver loads.
    
    Add a quirk to avoid bus resets on this device, which avoids the hang.
    
    [bhelgaas: commit log]
    Link: https://lore.kernel.org/r/08982e05-b6e8-5a8d-24ab-da1488ee50a8@web.de
    Signed-off-by: Ingmar Klein <ingmar_klein@web.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73ffea66603c926866adafda97a127ed31490f21
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:05:20 2021 +0200

    ath6kl: fix control-message timeout
    
    commit a066d28a7e729f808a3e6eff22e70c003091544e upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 241b128b6b69 ("ath6kl: add back beginnings of USB support")
    Cc: stable@vger.kernel.org      # 3.4
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211025120522.6045-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9550ad2be9740a4b3636bb764618b0bd3a79d583
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 27 10:08:18 2021 +0200

    ath6kl: fix division by zero in send path
    
    commit c1b9ca365deae667192be9fe24db244919971234 upstream.
    
    Add the missing endpoint max-packet sanity check to probe() to avoid
    division by zero in ath10k_usb_hif_tx_sg() in case a malicious device
    has broken descriptors (or when doing descriptor fuzz testing).
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 9cbee358687e ("ath6kl: add full USB support")
    Cc: stable@vger.kernel.org      # 3.5
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027080819.6675-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d30706555e200c9b2f17bf3be2f811e3a3e0918
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 27 10:08:19 2021 +0200

    mwifiex: fix division by zero in fw download path
    
    commit 89f8765a11d8df49296d92c404067f9b5c58ee26 upstream.
    
    Add the missing endpoint sanity checks to probe() to avoid division by
    zero in mwifiex_write_data_sync() in case a malicious device has broken
    descriptors (or when doing descriptor fuzz testing).
    
    Only add checks for the firmware-download boot stage, which require both
    command endpoints, for now. The driver looks like it will handle a
    missing endpoint during normal operation without oopsing, albeit not
    very gracefully as it will try to submit URBs to the default pipe and
    fail.
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 4daffe354366 ("mwifiex: add support for Marvell USB8797 chipset")
    Cc: stable@vger.kernel.org      # 3.5
    Cc: Amitkumar Karwar <akarwar@marvell.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027080819.6675-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dccb2fa6fe160da945fd76799a7355d1797dcd1
Author: Eric Badger <ebadger@purestorage.com>
Date:   Sun Oct 10 10:06:56 2021 -0700

    EDAC/sb_edac: Fix top-of-high-memory value for Broadwell/Haswell
    
    commit 537bddd069c743759addf422d0b8f028ff0f8dbc upstream.
    
    The computation of TOHM is off by one bit. This missed bit results in
    too low a value for TOHM, which can cause errors in regular memory to
    incorrectly report:
    
      EDAC MC0: 1 CE Error at MMIOH area, on addr 0x000000207fffa680 on any memory
    
    Fixes: 50d1bb93672f ("sb_edac: add support for Haswell based systems")
    Cc: stable@vger.kernel.org
    Reported-by: Meeta Saggi <msaggi@purestorage.com>
    Signed-off-by: Eric Badger <ebadger@purestorage.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Link: https://lore.kernel.org/r/20211010170127.848113-1-ebadger@purestorage.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4c33c21fa430f9238eff1203985275c00ed55ed
Author: Zev Weiss <zev@bewilderbeest.net>
Date:   Tue Sep 28 02:22:35 2021 -0700

    hwmon: (pmbus/lm25066) Add offset coefficients
    
    commit ae59dc455a78fb73034dd1fbb337d7e59c27cbd8 upstream.
    
    With the exception of the lm5066i, all the devices handled by this
    driver had been missing their offset ('b') coefficients for direct
    format readings.
    
    Cc: stable@vger.kernel.org
    Fixes: 58615a94f6a1 ("hwmon: (pmbus/lm25066) Add support for LM25056")
    Fixes: e53e6497fc9f ("hwmon: (pmbus/lm25066) Refactor device specific coefficients")
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Link: https://lore.kernel.org/r/20210928092242.30036-2-zev@bewilderbeest.net
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c83d572c10de6daa661594869bc5495b7a11c0fe
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Oct 14 17:26:04 2021 +0100

    btrfs: fix lost error handling when replaying directory deletes
    
    commit 10adb1152d957a4d570ad630f93a88bb961616c1 upstream.
    
    At replay_dir_deletes(), if find_dir_range() returns an error we break out
    of the main while loop and then assign a value of 0 (success) to the 'ret'
    variable, resulting in completely ignoring that an error happened. Fix
    that by jumping to the 'out' label when find_dir_range() returns an error
    (negative value).
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91840c8c58b1a5446db4b8e587cbba7aede67989
Author: Dongli Zhang <dongli.zhang@oracle.com>
Date:   Tue Oct 26 14:50:31 2021 -0700

    vmxnet3: do not stop tx queues after netif_device_detach()
    
    [ Upstream commit 9159f102402a64ac85e676b75cc1f9c62c5b4b73 ]
    
    The netif_device_detach() conditionally stops all tx queues if the queues
    are running. There is no need to call netif_tx_stop_all_queues() again.
    
    Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5058902c7121f531ea4e8a4c590846a2ce339ad9
Author: Thomas Perrot <thomas.perrot@bootlin.com>
Date:   Fri Oct 22 16:21:04 2021 +0200

    spi: spl022: fix Microwire full duplex mode
    
    [ Upstream commit d81d0e41ed5fe7229a2c9a29d13bad288c7cf2d2 ]
    
    There are missing braces in the function that verify controller parameters,
    then an error is always returned when the parameter to select Microwire
    frames operation is used on devices allowing it.
    
    Signed-off-by: Thomas Perrot <thomas.perrot@bootlin.com>
    Link: https://lore.kernel.org/r/20211022142104.1386379-1-thomas.perrot@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bad4d45b47886993ac382f25b750771ab2a766f4
Author: Dongli Zhang <dongli.zhang@oracle.com>
Date:   Fri Oct 22 16:31:39 2021 -0700

    xen/netfront: stop tx queues during live migration
    
    [ Upstream commit 042b2046d0f05cf8124c26ff65dbb6148a4404fb ]
    
    The tx queues are not stopped during the live migration. As a result, the
    ndo_start_xmit() may access netfront_info->queues which is freed by
    talk_to_netback()->xennet_destroy_queues().
    
    This patch is to netif_device_detach() at the beginning of xen-netfront
    resuming, and netif_device_attach() at the end of resuming.
    
         CPU A                                CPU B
    
     talk_to_netback()
     -> if (info->queues)
            xennet_destroy_queues(info);
        to free netfront_info->queues
    
                                            xennet_start_xmit()
                                            to access netfront_info->queues
    
      -> err = xennet_create_queues(info, &num_queues);
    
    The idea is borrowed from virtio-net.
    
    Cc: Joe Jin <joe.jin@oracle.com>
    Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87cd049467d3eacbf98998cbb24f0b1cebf3606a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Oct 17 10:59:49 2021 -0700

    mmc: winbond: don't build on M68K
    
    [ Upstream commit 162079f2dccd02cb4b6654defd32ca387dd6d4d4 ]
    
    The Winbond MMC driver fails to build on ARCH=m68k so prevent
    that build config. Silences these build errors:
    
    ../drivers/mmc/host/wbsd.c: In function 'wbsd_request_end':
    ../drivers/mmc/host/wbsd.c:212:28: error: implicit declaration of function 'claim_dma_lock' [-Werror=implicit-function-declaration]
      212 |                 dmaflags = claim_dma_lock();
    ../drivers/mmc/host/wbsd.c:215:17: error: implicit declaration of function 'release_dma_lock'; did you mean 'release_task'? [-Werror=implicit-function-declaration]
      215 |                 release_dma_lock(dmaflags);
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Pierre Ossman <pierre@ossman.eu>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211017175949.23838-1-rdunlap@infradead.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3cd84739baf795875d66995fa0b0651b23b2235
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 18 15:19:08 2021 +0200

    hyperv/vmbus: include linux/bitops.h
    
    [ Upstream commit 8017c99680fa65e1e8d999df1583de476a187830 ]
    
    On arm64 randconfig builds, hyperv sometimes fails with this
    error:
    
    In file included from drivers/hv/hv_trace.c:3:
    In file included from drivers/hv/hyperv_vmbus.h:16:
    In file included from arch/arm64/include/asm/sync_bitops.h:5:
    arch/arm64/include/asm/bitops.h:11:2: error: only <linux/bitops.h> can be included directly
    In file included from include/asm-generic/bitops/hweight.h:5:
    include/asm-generic/bitops/arch_hweight.h:9:9: error: implicit declaration of function '__sw_hweight32' [-Werror,-Wimplicit-function-declaration]
    include/asm-generic/bitops/atomic.h:17:7: error: implicit declaration of function 'BIT_WORD' [-Werror,-Wimplicit-function-declaration]
    
    Include the correct header first.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211018131929.2260087-1-arnd@kernel.org
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99a1f9341a43b1e25038dbb70d605107873b395c
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Oct 8 17:11:04 2021 -0700

    x86/irq: Ensure PI wakeup handler is unregistered before module unload
    
    commit 6ff53f6a438f72998f56e82e76694a1df9d1ea2c upstream.
    
    Add a synchronize_rcu() after clearing the posted interrupt wakeup handler
    to ensure all readers, i.e. in-flight IRQ handlers, see the new handler
    before returning to the caller.  If the caller is an exiting module and
    is unregistering its handler, failure to wait could result in the IRQ
    handler jumping into an unloaded module.
    
    The registration path doesn't require synchronization, as it's the
    caller's responsibility to not generate interrupts it cares about until
    after its handler is registered.
    
    Fixes: f6b3c72c2366 ("x86/irq: Define a global vector for VT-d Posted-Interrupts")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20211009001107.3936588-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9082aa14e202f452618f4513876f0bf086525d8e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 5 10:15:17 2021 +0100

    ALSA: timer: Unconditionally unlink slave instances, too
    
    commit ffdd98277f0a1d15a67a74ae09bee713df4c0dbc upstream.
    
    Like the previous fix (commit c0317c0e8709 "ALSA: timer: Fix
    use-after-free problem"), we have to unlink slave timer instances
    immediately at snd_timer_stop(), too.  Otherwise it may leave a stale
    entry in the list if the slave instance is freed before actually
    running.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211105091517.21733-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff7aa915782a4989a1c3aee5d879e78c2e99a624
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Wed Nov 3 03:35:17 2021 +0000

    ALSA: timer: Fix use-after-free problem
    
    commit c0317c0e87094f5b5782b6fdef5ae0a4b150496c upstream.
    
    When the timer instance was add into ack_list but was not currently in
    process, the user could stop it via snd_timer_stop1() without delete it
    from the ack_list. Then the user could free the timer instance and when
    it was actually processed UAF occurred.
    
    This issue could be reproduced via testcase snd_timer01 in ltp - running
    several instances of that testcase at the same time.
    
    What I actually met was that the ack_list of the timer broken and the
    kernel went into deadloop with irqoff. That could be detected by
    hardlockup detector on board or when we run it on qemu, we could use gdb
    to dump the ack_list when the console has no response.
    
    To fix this issue, we delete the timer instance from ack_list and
    active_list unconditionally in snd_timer_stop1().
    
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211103033517.80531-1-wangwensheng4@huawei.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6429e395ad01d2c15a7c56dd8a3a5986106022c
Author: Austin Kim <austin.kim@lge.com>
Date:   Tue Nov 9 00:37:42 2021 +0000

    ALSA: synth: missing check for possible NULL after the call to kstrdup
    
    commit d159037abbe3412285c271bdfb9cdf19e62678ff upstream.
    
    If kcalloc() return NULL due to memory starvation, it is possible for
    kstrdup() to return NULL in similar case. So add null check after the call
    to kstrdup() is made.
    
    [ minor coding-style fix by tiwai ]
    
    Signed-off-by: Austin Kim <austin.kim@lge.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211109003742.GA5423@raspberrypi
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c4de1ffd4d53f2bcfbb9f51e843e5388bab2e40
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:11:42 2021 +0200

    ALSA: line6: fix control and interrupt message timeouts
    
    commit f4000b58b64344871d7b27c05e73932f137cfef6 upstream.
    
    USB control and interrupt message timeouts are specified in milliseconds
    and should specifically not vary with CONFIG_HZ.
    
    Fixes: 705ececd1c60 ("Staging: add line6 usb driver")
    Cc: stable@vger.kernel.org      # 2.6.30
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025121142.6531-3-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3f037d774ffc1a48dc376f665a0a90c579c1580
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:11:41 2021 +0200

    ALSA: 6fire: fix control and bulk message timeouts
    
    commit 9b371c6cc37f954360989eec41c2ddc5a6b83917 upstream.
    
    USB control and bulk message timeouts are specified in milliseconds and
    should specifically not vary with CONFIG_HZ.
    
    Fixes: c6d43ba816d1 ("ALSA: usb/6fire - Driver for TerraTec DMX 6Fire USB")
    Cc: stable@vger.kernel.org      # 2.6.39
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025121142.6531-2-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5df61aaa530fa199eae00be697f01b0bcdcb9e11
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 26 11:54:01 2021 +0200

    ALSA: ua101: fix division by zero at probe
    
    commit 55f261b73a7e1cb254577c3536cef8f415de220a upstream.
    
    Add the missing endpoint max-packet sanity check to probe() to avoid
    division by zero in alloc_stream_buffers() in case a malicious device
    has broken descriptors (or when doing descriptor fuzz testing).
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 63978ab3e3e9 ("sound: add Edirol UA-101 support")
    Cc: stable@vger.kernel.org      # 2.6.34
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211026095401.26522-1-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f714e037be9acea06d0457aab14ebece8cf6b893
Author: Sean Young <sean@mess.org>
Date:   Sun Oct 17 13:01:15 2021 +0100

    media: ite-cir: IR receiver stop working after receive overflow
    
    commit fdc881783099c6343921ff017450831c8766d12a upstream.
    
    On an Intel NUC6iSYK, no IR is reported after a receive overflow.
    
    When a receiver overflow occurs, this condition is only cleared by
    reading the fifo. Make sure we read anything in the fifo.
    
    Fixes: 28c7afb07ccf ("media: ite-cir: check for receive overflow")
    Suggested-by: Bryan Pass <bryan.pass@gmail.com>
    Tested-by: Bryan Pass <bryan.pass@gmail.com>
    Cc: stable@vger.kernel.org>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7c9efc39d3c82a561d0a93b38fa013bbe89222b
Author: Helge Deller <deller@gmx.de>
Date:   Tue Oct 5 00:27:49 2021 +0200

    parisc: Fix ptrace check on syscall return
    
    commit 8779e05ba8aaffec1829872ef9774a71f44f6580 upstream.
    
    The TIF_XXX flags are stored in the flags field in the thread_info
    struct (TI_FLAGS), not in the flags field of the task_struct structure
    (TASK_FLAGS).
    
    It seems this bug didn't generate any important side-effects, otherwise it
    wouldn't have went unnoticed for 12 years (since v2.6.32).
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Fixes: ecd3d4bc06e48 ("parisc: stop using task->ptrace for {single,block}step flags")
    Cc: Kyle McMartin <kyle@mcmartin.ca>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7d2398b7c22927d975530dd538dead589adce90
Author: Christian Löhle <CLoehle@hyperstone.com>
Date:   Thu Sep 16 05:59:19 2021 +0000

    mmc: dw_mmc: Dont wait for DRTO on Write RSP error
    
    commit 43592c8736e84025d7a45e61a46c3fa40536a364 upstream.
    
    Only wait for DRTO on reads, otherwise the driver hangs.
    
    The driver prevents sending CMD12 on response errors like CRCs. According
    to the comment this is because some cards have problems with this during
    the UHS tuning sequence. Unfortunately this workaround currently also
    applies for any command with data. On reads this will set the drto timer,
    which then triggers after a while. On writes this will not set any timer
    and the tasklet will not be scheduled again.
    
    I cannot test for the UHS workarounds need, but even if so, it should at
    most apply to reads. I have observed many hangs when CMD25 response
    contained a CRC error. This patch fixes this without touching the actual
    UHS tuning workaround.
    
    Signed-off-by: Christian Loehle <cloehle@hyperstone.com>
    Reviewed-by: Jaehoon Chung <jh80.chung@samsung.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/af8f8b8674ba4fcc9a781019e4aeb72c@hyperstone.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a3e31720bdd7cbc2a050d1fe71add03cfe4f6bb
Author: Jan Kara <jack@suse.cz>
Date:   Fri Nov 5 13:34:55 2021 -0700

    ocfs2: fix data corruption on truncate
    
    commit 839b63860eb3835da165642923120d305925561d upstream.
    
    Patch series "ocfs2: Truncate data corruption fix".
    
    As further testing has shown, commit 5314454ea3f ("ocfs2: fix data
    corruption after conversion from inline format") didn't fix all the data
    corruption issues the customer started observing after 6dbf7bb55598
    ("fs: Don't invalidate page buffers in block_write_full_page()") This
    time I have tracked them down to two bugs in ocfs2 truncation code.
    
    One bug (truncating page cache before clearing tail cluster and setting
    i_size) could cause data corruption even before 6dbf7bb55598, but before
    that commit it needed a race with page fault, after 6dbf7bb55598 it
    started to be pretty deterministic.
    
    Another bug (zeroing pages beyond old i_size) used to be harmless
    inefficiency before commit 6dbf7bb55598.  But after commit 6dbf7bb55598
    in combination with the first bug it resulted in deterministic data
    corruption.
    
    Although fixing only the first problem is needed to stop data
    corruption, I've fixed both issues to make the code more robust.
    
    This patch (of 2):
    
    ocfs2_truncate_file() did unmap invalidate page cache pages before
    zeroing partial tail cluster and setting i_size.  Thus some pages could
    be left (and likely have left if the cluster zeroing happened) in the
    page cache beyond i_size after truncate finished letting user possibly
    see stale data once the file was extended again.  Also the tail cluster
    zeroing was not guaranteed to finish before truncate finished causing
    possible stale data exposure.  The problem started to be particularly
    easy to hit after commit 6dbf7bb55598 "fs: Don't invalidate page buffers
    in block_write_full_page()" stopped invalidation of pages beyond i_size
    from page writeback path.
    
    Fix these problems by unmapping and invalidating pages in the page cache
    after the i_size is reduced and tail cluster is zeroed out.
    
    Link: https://lkml.kernel.org/r/20211025150008.29002-1-jack@suse.cz
    Link: https://lkml.kernel.org/r/20211025151332.11301-1-jack@suse.cz
    Fixes: ccd979bdbce9 ("[PATCH] OCFS2: The Second Oracle Cluster Filesystem")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24619f477e6652316fbdec80679b357277fa9888
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Thu Nov 4 17:31:58 2021 +0900

    libata: fix read log timeout value
    
    commit 68dbbe7d5b4fde736d104cbbc9a2fce875562012 upstream.
    
    Some ATA drives are very slow to respond to READ_LOG_EXT and
    READ_LOG_DMA_EXT commands issued from ata_dev_configure() when the
    device is revalidated right after resuming a system or inserting the
    ATA adapter driver (e.g. ahci). The default 5s timeout
    (ATA_EH_CMD_DFL_TIMEOUT) used for these commands is too short, causing
    errors during the device configuration. Ex:
    
    ...
    ata9: SATA max UDMA/133 abar m524288@0x9d200000 port 0x9d200400 irq 209
    ata9: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
    ata9.00: ATA-9: XXX  XXXXXXXXXXXXXXX, XXXXXXXX, max UDMA/133
    ata9.00: qc timeout (cmd 0x2f)
    ata9.00: Read log page 0x00 failed, Emask 0x4
    ata9.00: Read log page 0x00 failed, Emask 0x40
    ata9.00: NCQ Send/Recv Log not supported
    ata9.00: Read log page 0x08 failed, Emask 0x40
    ata9.00: 27344764928 sectors, multi 16: LBA48 NCQ (depth 32), AA
    ata9.00: Read log page 0x00 failed, Emask 0x40
    ata9.00: ATA Identify Device Log not supported
    ata9.00: failed to set xfermode (err_mask=0x40)
    ata9: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
    ata9.00: configured for UDMA/133
    ...
    
    The timeout error causes a soft reset of the drive link, followed in
    most cases by a successful revalidation as that give enough time to the
    drive to become fully ready to quickly process the read log commands.
    However, in some cases, this also fails resulting in the device being
    dropped.
    
    Fix this by using adding the ata_eh_revalidate_timeouts entries for the
    READ_LOG_EXT and READ_LOG_DMA_EXT commands. This defines a timeout
    increased to 15s, retriable one time.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d123d120f77d941ff7052096045e0f9ba9cd838
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 3 08:00:19 2021 +0100

    Input: i8042 - Add quirk for Fujitsu Lifebook T725
    
    commit 16e28abb7290c4ca3b3a0f333ba067f34bb18c86 upstream.
    
    Fujitsu Lifebook T725 laptop requires, like a few other similar
    models, the nomux and notimeout options to probe the touchpad
    properly.  This patch adds the corresponding quirk entries.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1191980
    Tested-by: Neal Gompa <ngompa13@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20211103070019.13374-1-tiwai@suse.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0534204713bc6e0ed47f717d66ecd053cb9f2c0f
Author: Phoenix Huang <phoenix@emc.com.tw>
Date:   Sun Nov 7 22:00:03 2021 -0800

    Input: elantench - fix misreporting trackpoint coordinates
    
    commit be896bd3b72b44126c55768f14c22a8729b0992e upstream.
    
    Some firmwares occasionally report bogus data from trackpoint, with X or Y
    displacement being too large (outside of [-127, 127] range). Let's drop such
    packets so that we do not generate jumps.
    
    Signed-off-by: Phoenix Huang <phoenix@emc.com.tw>
    Tested-by: Yufei Du <yufeidu@cs.unc.edu>
    Link: https://lore.kernel.org/r/20210729010940.5752-1-phoenix@emc.com.tw
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29f4189ec8e8c9074d63779009d5e73919193c50
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Nov 5 18:00:36 2021 +0200

    xhci: Fix USB 3.1 enumeration issues by increasing roothub power-on-good delay
    
    commit e1959faf085b004e6c3afaaaa743381f00e7c015 upstream.
    
    Some USB 3.1 enumeration issues were reported after the hub driver removed
    the minimum 100ms limit for the power-on-good delay.
    
    Since commit 90d28fb53d4a ("usb: core: reduce power-on-good delay time of
    root hub") the hub driver sets the power-on-delay based on the
    bPwrOn2PwrGood value in the hub descriptor.
    
    xhci driver has a 20ms bPwrOn2PwrGood value for both roothubs based
    on xhci spec section 5.4.8, but it's clearly not enough for the
    USB 3.1 devices, causing enumeration issues.
    
    Tests indicate full 100ms delay is needed.
    
    Reported-by: Walt Jr. Brake <mr.yming81@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Fixes: 90d28fb53d4a ("usb: core: reduce power-on-good delay time of root hub")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211105160036.549516-1-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31cbf806d22e9751fd5a8135113fde2987f3bdf6
Author: Todd Kjos <tkjos@google.com>
Date:   Tue Oct 12 09:56:13 2021 -0700

    binder: use cred instead of task for selinux checks
    
    commit 52f88693378a58094c538662ba652aff0253c4fe upstream.
    
    Since binder was integrated with selinux, it has passed
    'struct task_struct' associated with the binder_proc
    to represent the source and target of transactions.
    The conversion of task to SID was then done in the hook
    implementations. It turns out that there are race conditions
    which can result in an incorrect security context being used.
    
    Fix by using the 'struct cred' saved during binder_open and pass
    it to the selinux subsystem.
    
    Cc: stable@vger.kernel.org # 5.14 (need backport for earlier stables)
    Fixes: 79af73079d75 ("Add security hooks to binder and implement the hooks for SELinux.")
    Suggested-by: Jann Horn <jannh@google.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 120ffcd83596fe94b6d6735d21349f118b60c936
Author: Todd Kjos <tkjos@google.com>
Date:   Tue Oct 12 09:56:12 2021 -0700

    binder: use euid from cred instead of using task
    
    commit 29bc22ac5e5bc63275e850f0c8fc549e3d0e306b upstream.
    
    Save the 'struct cred' associated with a binder process
    at initial open to avoid potential race conditions
    when converting to an euid.
    
    Set a transaction's sender_euid from the 'struct cred'
    saved at binder_open() instead of looking up the euid
    from the binder proc's 'struct task'. This ensures
    the euid is associated with the security context that
    of the task that opened binder.
    
    Cc: stable@vger.kernel.org # 4.4+
    Fixes: 457b9a6f09f0 ("Staging: android: add binder driver")
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Suggested-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Suggested-by: Jann Horn <jannh@google.com>
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
