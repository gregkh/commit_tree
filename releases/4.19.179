commit 2cae3e25b70668fd413311277d56b6fe41900789
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Mar 7 12:19:02 2021 +0100

    Linux 4.19.179
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Hulk Robot <hulkci@huawei.com>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210305120853.659441428@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ad0869ae41823003ef5efc0a206730bcc352c08
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 3 15:23:46 2021 +0100

    ALSA: hda/realtek: Apply dual codec quirks for MSI Godlike X570 board
    
    commit 26af17722a07597d3e556eda92c6fce8d528bc9f upstream.
    
    There is another MSI board (1462:cc34) that has dual Realtek codecs,
    and we need to apply the existing quirk for fixing the conflicts of
    Master control.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211743
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210303142346.28182-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abf92e97c2480ce38814318c97190acd06fb805b
Author: Eckhart Mohr <e.mohr@tuxedocomputers.com>
Date:   Tue Mar 2 17:25:22 2021 +0100

    ALSA: hda/realtek: Add quirk for Clevo NH55RZQ
    
    commit 48698c973e6b4dde94d87cd1ded56d9436e9c97d upstream.
    
    This applies a SND_PCI_QUIRK(...) to the Clevo NH55RZQ barebone. This
    fixes the issue of the device not recognizing a pluged in microphone.
    
    The device has both, a microphone only jack, and a speaker + microphone
    combo jack. The combo jack already works. The microphone-only jack does
    not recognize when a device is pluged in without this patch.
    
    Signed-off-by: Eckhart Mohr <e.mohr@tuxedocomputers.com>
    Co-developed-by: Werner Sembach <wse@tuxedocomputers.com>
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/0eee6545-5169-ef08-6cfa-5def8cd48c86@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff2111a6fab31923685b6ca8ea466ea0576b8a0e
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sat Dec 19 23:29:58 2020 +0100

    media: v4l: ioctl: Fix memory leak in video_usercopy
    
    commit fb18802a338b36f675a388fc03d2aa504a0d0899 upstream.
    
    When an IOCTL with argument size larger than 128 that also used array
    arguments were handled, two memory allocations were made but alas, only
    the latter one of them was released. This happened because there was only
    a single local variable to hold such a temporary allocation.
    
    Fix this by adding separate variables to hold the pointers to the
    temporary allocations.
    
    Reported-by: Arnd Bergmann <arnd@kernel.org>
    Reported-by: syzbot+1115e79c8df6472c612b@syzkaller.appspotmail.com
    Fixes: d14e6d76ebf7 ("[media] v4l: Add multi-planar ioctl handling code")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ceea9a764b422e32d9028e35d37ad68761ffd2c
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Mar 2 14:53:21 2021 -0700

    swap: fix swapfile read/write offset
    
    commit caf6912f3f4af7232340d500a4a2008f81b93f14 upstream.
    
    We're not factoring in the start of the file for where to write and
    read the swapfile, which leads to very unfortunate side effects of
    writing where we should not be...
    
    [This issue only affects swapfiles on filesystems on top of blockdevs
    that implement rw_page ops (brd, zram, btt, pmem), and not on top of any
    other block devices, in contrast to the upstream commit fix.]
    
    Fixes: dd6bd0d9c7db ("swap: use bdev_read_page() / bdev_write_page()")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Anthony Iliopoulos <ailiop@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 638c954653d4183549cd7b859976da6e5698184f
Author: Rokudo Yan <wu-yan@tcl.com>
Date:   Thu Feb 25 17:18:31 2021 -0800

    zsmalloc: account the number of compacted pages correctly
    
    commit 2395928158059b8f9858365fce7713ce7fef62e4 upstream.
    
    There exists multiple path may do zram compaction concurrently.
    1. auto-compaction triggered during memory reclaim
    2. userspace utils write zram<id>/compaction node
    
    So, multiple threads may call zs_shrinker_scan/zs_compact concurrently.
    But pages_compacted is a per zsmalloc pool variable and modification
    of the variable is not serialized(through under class->lock).
    There are two issues here:
    1. the pages_compacted may not equal to total number of pages
    freed(due to concurrently add).
    2. zs_shrinker_scan may not return the correct number of pages
    freed(issued by current shrinker).
    
    The fix is simple:
    1. account the number of pages freed in zs_compact locally.
    2. use actomic variable pages_compacted to accumulate total number.
    
    Link: https://lkml.kernel.org/r/20210202122235.26885-1-wu-yan@tcl.com
    Fixes: 860c707dca155a56 ("zsmalloc: account the number of compacted pages")
    Signed-off-by: Rokudo Yan <wu-yan@tcl.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b62d8b5c814be957ce164453ddf4852167908841
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Feb 25 16:35:15 2021 +0100

    xen-netback: respect gnttab_map_refs()'s return value
    
    commit 2991397d23ec597405b116d96de3813420bdcbc3 upstream.
    
    Commit 3194a1746e8a ("xen-netback: don't "handle" error by BUG()")
    dropped respective a BUG_ON() without noticing that with this the
    variable's value wouldn't be consumed anymore. With gnttab_set_map_op()
    setting all status fields to a non-zero value, in case of an error no
    slot should have a status of GNTST_okay (zero).
    
    This is part of XSA-367.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/d933f495-619a-0086-5fb4-1ec3cf81a8fc@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a999d25ef536a14f6a7c25778836857adfba3f8
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Feb 25 16:34:43 2021 +0100

    Xen/gnttab: handle p2m update errors on a per-slot basis
    
    commit 8310b77b48c5558c140e7a57a702e7819e62f04e upstream.
    
    Bailing immediately from set_foreign_p2m_mapping() upon a p2m updating
    error leaves the full batch in an ambiguous state as far as the caller
    is concerned. Instead flags respective slots as bad, unmapping what
    was mapped there right away.
    
    HYPERVISOR_grant_table_op()'s return value and the individual unmap
    slots' status fields get used only for a one-time - there's not much we
    can do in case of a failure.
    
    Note that there's no GNTST_enomem or alike, so GNTST_general_error gets
    used.
    
    The map ops' handle fields get overwritten just to be on the safe side.
    
    This is part of XSA-367.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/96cccf5d-e756-5f53-b91a-ea269bfb9be0@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23e2942885e8db57311cb4f9a719fd0306073c40
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 23 21:39:01 2021 -0800

    scsi: iscsi: Verify lengths on passthrough PDUs
    
    commit f9dbdf97a5bd92b1a49cee3d591b55b11fd7a6d5 upstream.
    
    Open-iSCSI sends passthrough PDUs over netlink, but the kernel should be
    verifying that the provided PDU header and data lengths fall within the
    netlink message to prevent accessing beyond that in memory.
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2957d7baff77b399c7408dc12bacc7f63765897
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 23 18:00:17 2021 -0800

    scsi: iscsi: Ensure sysfs attributes are limited to PAGE_SIZE
    
    commit ec98ea7070e94cc25a422ec97d1421e28d97b7ee upstream.
    
    As the iSCSI parameters are exported back through sysfs, it should be
    enforcing that they never are more than PAGE_SIZE (which should be more
    than enough) before accepting updates through netlink.
    
    Change all iSCSI sysfs attributes to use sysfs_emit().
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb1f69d53ac8a417fc42df013526b54735194c14
Author: Joe Perches <joe@perches.com>
Date:   Wed Sep 16 13:40:38 2020 -0700

    sysfs: Add sysfs_emit and sysfs_emit_at to format sysfs output
    
    commit 2efc459d06f1630001e3984854848a5647086232 upstream.
    
    Output defects can exist in sysfs content using sprintf and snprintf.
    
    sprintf does not know the PAGE_SIZE maximum of the temporary buffer
    used for outputting sysfs content and it's possible to overrun the
    PAGE_SIZE buffer length.
    
    Add a generic sysfs_emit function that knows that the size of the
    temporary buffer and ensures that no overrun is done.
    
    Add a generic sysfs_emit_at function that can be used in multiple
    call situations that also ensures that no overrun is done.
    
    Validate the output buffer argument to be page aligned.
    Validate the offset len argument to be within the PAGE_SIZE buf.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Link: https://lore.kernel.org/r/884235202216d464d61ee975f7465332c86f76b2.1600285923.git.joe@perches.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae84b246a76c4ace5997e5ca7e9fde3e1a526bc3
Author: Lee Duncan <lduncan@suse.com>
Date:   Tue Feb 23 13:06:24 2021 -0800

    scsi: iscsi: Restrict sessions and handles to admin capabilities
    
    commit 688e8128b7a92df982709a4137ea4588d16f24aa upstream.
    
    Protect the iSCSI transport handle, available in sysfs, by requiring
    CAP_SYS_ADMIN to read it. Also protect the netlink socket by restricting
    reception of messages to ones sent with CAP_SYS_ADMIN. This disables
    normal users from being able to end arbitrary iSCSI sessions.
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Chris Leech <cleech@redhat.com>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b2b65055c7617669943e40c7cdce9ead762b9fa
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:55 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Acer One S1002 tablet
    
    [ Upstream commit c58947af08aedbdee0fce5ea6e6bf3e488ae0e2c ]
    
    The Acer One S1002 tablet is using an analog mic on IN1 and has
    its jack-detect connected to JD2_IN4N, instead of using the default
    IN3 for its internal mic and JD1_IN4P for jack-detect.
    
    Note it is also using AIF2 instead of AIF1 which is somewhat unusual,
    this is correctly advertised in the ACPI CHAN package, so the speakers
    do work without the quirk.
    
    Add a quirk for the mic and jack-detect settings.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-5-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76716de514e5f7318893fbce5bc04bc3a5543a0a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:53 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Voyo Winpad A15 tablet
    
    [ Upstream commit e1317cc9ca4ac20262895fddb065ffda4fc29cfb ]
    
    The Voyo Winpad A15 tablet uses a Bay Trail (non CR) SoC, so it is using
    SSP2 (AIF1) and it mostly works with the defaults. But instead of using
    DMIC1 it is using an analog mic on IN1, add a quirk for this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-3-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f0b657d983e073bdbb867080bbd8ec44be95450
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:52 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Estar Beauty HD MID 7316R tablet
    
    [ Upstream commit bdea43fc0436c9e98fdfe151c2ed8a3fc7277404 ]
    
    The Estar Beauty HD MID 7316R tablet almost fully works with out default
    settings. The only problem is that it has only 1 speaker so any sounds
    only playing on the right channel get lost.
    
    Add a quirk for this model using the default settings + MONO_SPEAKER.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f14f8ef67e3e57f75b38275091c2abf3eca9a2ce
Author: John David Anglin <dave.anglin@bell.net>
Date:   Thu Jan 28 18:12:30 2021 -0500

    parisc: Bump 64-bit IRQ stack size to 64 KB
    
    [ Upstream commit 31680c1d1595a59e17c14ec036b192a95f8e5f4a ]
    
    Bump 64-bit IRQ stack size to 64 KB.
    
    I had a kernel IRQ stack overflow on the mx3210 debian buildd machine.  This patch increases the
    64-bit IRQ stack size to 64 KB.  The 64-bit stack size needs to be larger than the 32-bit stack
    size since registers are twice as big.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9ad913622cc0d9d5f3254a8ad7625707847f3b4
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Dec 1 09:53:23 2020 -0500

    btrfs: fix error handling in commit_fs_roots
    
    [ Upstream commit 4f4317c13a40194940acf4a71670179c4faca2b5 ]
    
    While doing error injection I would sometimes get a corrupt file system.
    This is because I was injecting errors at btrfs_search_slot, but would
    only do it one time per stack.  This uncovered a problem in
    commit_fs_roots, where if we get an error we would just break.  However
    we're in a nested loop, the first loop being a loop to find all the
    dirty fs roots, and then subsequent root updates would succeed clearing
    the error value.
    
    This isn't likely to happen in real scenarios, however we could
    potentially get a random ENOMEM once and then not again, and we'd end up
    with a corrupted file system.  Fix this by moving the error checking
    around a bit to the main loop, as this is the only place where something
    will fail, and return the error as soon as it occurs.
    
    With this patch my reproducer no longer corrupts the file system.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bfc5a344ad0afd4b0601a1ee0e7d037d6c92569
Author: Chao Yu <chao@kernel.org>
Date:   Tue Jan 12 09:55:09 2021 +0800

    f2fs: fix to set/clear I_LINKABLE under i_lock
    
    [ Upstream commit 46085f37fc9e12d5c3539fb768b5ad7951e72acf ]
    
    fsstress + fault injection test case reports a warning message as
    below:
    
    WARNING: CPU: 13 PID: 6226 at fs/inode.c:361 inc_nlink+0x32/0x40
    Call Trace:
     f2fs_init_inode_metadata+0x25c/0x4a0 [f2fs]
     f2fs_add_inline_entry+0x153/0x3b0 [f2fs]
     f2fs_add_dentry+0x75/0x80 [f2fs]
     f2fs_do_add_link+0x108/0x160 [f2fs]
     f2fs_rename2+0x6ab/0x14f0 [f2fs]
     vfs_rename+0x70c/0x940
     do_renameat2+0x4d8/0x4f0
     __x64_sys_renameat2+0x4b/0x60
     do_syscall_64+0x33/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Following race case can cause this:
    Thread A                                Kworker
    - f2fs_rename
     - f2fs_create_whiteout
      - __f2fs_tmpfile
       - f2fs_i_links_write
        - f2fs_mark_inode_dirty_sync
         - mark_inode_dirty_sync
                                            - writeback_single_inode
                                             - __writeback_single_inode
                                              - spin_lock(&inode->i_lock)
       - inode->i_state |= I_LINKABLE
                                              - inode->i_state &= ~dirty
                                              - spin_unlock(&inode->i_lock)
     - f2fs_add_link
      - f2fs_do_add_link
       - f2fs_add_dentry
        - f2fs_add_inline_entry
         - f2fs_init_inode_metadata
          - f2fs_i_links_write
           - inc_nlink
            - WARN_ON(!(inode->i_state & I_LINKABLE))
    
    Fix to add i_lock to avoid i_state update race condition.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7416ec5526b5af5e495f224299ba291ce09407f2
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Wed Dec 23 11:44:25 2020 -0800

    f2fs: handle unallocated section and zone on pinned/atgc
    
    [ Upstream commit 632faca72938f9f63049e48a8c438913828ac7a9 ]
    
    If we have large section/zone, unallocated segment makes them corrupted.
    
    E.g.,
    
      - Pinned file:       -1 119304647 119304647
      - ATGC   data:       -1 119304647 119304647
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4759a52b8940dbbfc565c918a3893ecaeb5b134
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Dec 23 14:35:19 2020 +0100

    media: uvcvideo: Allow entities with no pads
    
    [ Upstream commit 7532dad6634031d083df7af606fac655b8d08b5c ]
    
    Avoid an underflow while calculating the number of inputs for entities
    with zero pads.
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5886337edaa8d0a1459054452661d46f2ab0a2e2
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Fri Dec 18 12:14:00 2020 -0500

    drm/amd/display: Guard against NULL pointer deref when get_i2c_info fails
    
    [ Upstream commit 44a09e3d95bd2b7b0c224100f78f335859c4e193 ]
    
    [Why]
    If the BIOS table is invalid or corrupt then get_i2c_info can fail
    and we dereference a NULL pointer.
    
    [How]
    Check that ddc_pin is not NULL before using it and log an error if it
    is because this is unexpected.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Eric Yang <eric.yang2@amd.com>
    Acked-by: Anson Jacob <anson.jacob@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77e54793da0f17b6acad19471dc6f1f938a5e7f1
Author: Nirmoy Das <nirmoy.das@amd.com>
Date:   Thu Jan 7 12:26:55 2021 +0100

    PCI: Add a REBAR size quirk for Sapphire RX 5600 XT Pulse
    
    [ Upstream commit 907830b0fc9e374d00f3c83de5e426157b482c01 ]
    
    RX 5600 XT Pulse advertises support for BAR 0 being 256MB, 512MB,
    or 1GB, but it also supports 2GB, 4GB, and 8GB. Add a rebar
    size quirk so that the BAR 0 is big enough to cover complete VARM.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Link: https://patchwork.kernel.org/project/dri-devel/patch/20210107175017.15893-5-nirmoy.das@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fd58d8bb0853c3f424a089f71805e26b9b5e899
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Dec 8 15:34:41 2020 +0100

    crypto: tcrypt - avoid signed overflow in byte count
    
    [ Upstream commit 303fd3e1c771077e32e96e5788817f025f0067e2 ]
    
    The signed long type used for printing the number of bytes processed in
    tcrypt benchmarks limits the range to -/+ 2 GiB, which is not sufficient
    to cover the performance of common accelerated ciphers such as AES-NI
    when benchmarked with sec=1. So switch to u64 instead.
    
    While at it, fix up a missing printk->pr_cont conversion in the AEAD
    benchmark.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 946a7377b27dfc60a16ee358e0af842704fbe826
Author: Christian Gromm <christian.gromm@microchip.com>
Date:   Tue Feb 2 17:21:05 2021 +0100

    staging: most: sound: add sanity check for function argument
    
    [ Upstream commit 45b754ae5b82949dca2b6e74fa680313cefdc813 ]
    
    This patch checks the function parameter 'bytes' before doing the
    subtraction to prevent memory corruption.
    
    Signed-off-by: Christian Gromm <christian.gromm@microchip.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/1612282865-21846-1-git-send-email-christian.gromm@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99c2c8b009c42cbffd2bc5291ea8e1f27c3a9559
Author: Gopal Tiwari <gtiwari@redhat.com>
Date:   Tue Feb 2 15:12:30 2021 +0530

    Bluetooth: Fix null pointer dereference in amp_read_loc_assoc_final_data
    
    [ Upstream commit e8bd76ede155fd54d8c41d045dda43cd3174d506 ]
    
    kernel panic trace looks like:
    
     #5 [ffffb9e08698fc80] do_page_fault at ffffffffb666e0d7
     #6 [ffffb9e08698fcb0] page_fault at ffffffffb70010fe
        [exception RIP: amp_read_loc_assoc_final_data+63]
        RIP: ffffffffc06ab54f  RSP: ffffb9e08698fd68  RFLAGS: 00010246
        RAX: 0000000000000000  RBX: ffff8c8845a5a000  RCX: 0000000000000004
        RDX: 0000000000000000  RSI: ffff8c8b9153d000  RDI: ffff8c8845a5a000
        RBP: ffffb9e08698fe40   R8: 00000000000330e0   R9: ffffffffc0675c94
        R10: ffffb9e08698fe58  R11: 0000000000000001  R12: ffff8c8b9cbf6200
        R13: 0000000000000000  R14: 0000000000000000  R15: ffff8c8b2026da0b
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
     #7 [ffffb9e08698fda8] hci_event_packet at ffffffffc0676904 [bluetooth]
     #8 [ffffb9e08698fe50] hci_rx_work at ffffffffc06629ac [bluetooth]
     #9 [ffffb9e08698fe98] process_one_work at ffffffffb66f95e7
    
    hcon->amp_mgr seems NULL triggered kernel panic in following line inside
    function amp_read_loc_assoc_final_data
    
            set_bit(READ_LOC_AMP_ASSOC_FINAL, &mgr->state);
    
    Fixed by checking NULL for mgr.
    
    Signed-off-by: Gopal Tiwari <gtiwari@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4ebd7072e755003d0174ac550dac20bb8740308
Author: Fangrui Song <maskray@google.com>
Date:   Wed Jan 27 12:56:00 2021 -0800

    x86/build: Treat R_386_PLT32 relocation as R_386_PC32
    
    [ Upstream commit bb73d07148c405c293e576b40af37737faf23a6a ]
    
    This is similar to commit
    
      b21ebf2fb4cd ("x86: Treat R_X86_64_PLT32 as R_X86_64_PC32")
    
    but for i386. As far as the kernel is concerned, R_386_PLT32 can be
    treated the same as R_386_PC32.
    
    R_386_PLT32/R_X86_64_PLT32 are PC-relative relocation types which
    can only be used by branches. If the referenced symbol is defined
    externally, a PLT will be used.
    
    R_386_PC32/R_X86_64_PC32 are PC-relative relocation types which can be
    used by address taking operations and branches. If the referenced symbol
    is defined externally, a copy relocation/canonical PLT entry will be
    created in the executable.
    
    On x86-64, there is no PIC vs non-PIC PLT distinction and an
    R_X86_64_PLT32 relocation is produced for both `call/jmp foo` and
    `call/jmp foo@PLT` with newer (2018) GNU as/LLVM integrated assembler.
    This avoids canonical PLT entries (st_shndx=0, st_value!=0).
    
    On i386, there are 2 types of PLTs, PIC and non-PIC. Currently,
    the GCC/GNU as convention is to use R_386_PC32 for non-PIC PLT and
    R_386_PLT32 for PIC PLT. Copy relocations/canonical PLT entries
    are possible ABI issues but GCC/GNU as will likely keep the status
    quo because (1) the ABI is legacy (2) the change will drop a GNU
    ld diagnostic for non-default visibility ifunc in shared objects.
    
    clang-12 -fno-pic (since [1]) can emit R_386_PLT32 for compiler
    generated function declarations, because preventing canonical PLT
    entries is weighed over the rare ifunc diagnostic.
    
    Further info for the more interested:
    
      https://github.com/ClangBuiltLinux/linux/issues/1210
      https://sourceware.org/bugzilla/show_bug.cgi?id=27169
      https://github.com/llvm/llvm-project/commit/a084c0388e2a59b9556f2de0083333232da3f1d6 [1]
    
     [ bp: Massage commit message. ]
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Link: https://lkml.kernel.org/r/20210127205600.1227437-1-maskray@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0ea994b77a32763138b33ac784ab91cfb91eefd
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Tue Dec 22 14:34:47 2020 +0800

    ath10k: fix wmi mgmt tx queue full due to race condition
    
    [ Upstream commit b55379e343a3472c35f4a1245906db5158cab453 ]
    
    Failed to transmit wmi management frames:
    
    [84977.840894] ath10k_snoc a000000.wifi: wmi mgmt tx queue is full
    [84977.840913] ath10k_snoc a000000.wifi: failed to transmit packet, dropping: -28
    [84977.840924] ath10k_snoc a000000.wifi: failed to submit frame: -28
    [84977.840932] ath10k_snoc a000000.wifi: failed to transmit frame: -28
    
    This issue is caused by race condition between skb_dequeue and
    __skb_queue_tail. The queue of ‘wmi_mgmt_tx_queue’ is protected by a
    different lock: ar->data_lock vs list->lock, the result is no protection.
    So when ath10k_mgmt_over_wmi_tx_work() and ath10k_mac_tx_wmi_mgmt()
    running concurrently on different CPUs, there appear to be a rare corner
    cases when the queue length is 1,
    
      CPUx (skb_deuque)                     CPUy (__skb_queue_tail)
                                            next=list
                                            prev=list
      struct sk_buff *skb = skb_peek(list); WRITE_ONCE(newsk->next, next);
      WRITE_ONCE(list->qlen, list->qlen - 1);WRITE_ONCE(newsk->prev, prev);
      next       = skb->next;               WRITE_ONCE(next->prev, newsk);
      prev       = skb->prev;               WRITE_ONCE(prev->next, newsk);
      skb->next  = skb->prev = NULL;        list->qlen++;
      WRITE_ONCE(next->prev, prev);
      WRITE_ONCE(prev->next, next);
    
    If the instruction ‘next = skb->next’ is executed before
    ‘WRITE_ONCE(prev->next, newsk)’, newsk will be lost, as CPUx get the
    old ‘next’ pointer, but the length is still added by one. The final
    result is the length of the queue will reach the maximum value but
    the queue is empty.
    
    So remove ar->data_lock, and use 'skb_queue_tail' instead of
    '__skb_queue_tail' to prevent the potential race condition. Also switch
    to use skb_queue_len_lockless, in case we queue a few SKBs simultaneously.
    
    Tested-on: WCN3990 hw1.0 SNOC WLAN.HL.3.1.c2-00033-QCAHLSWMTPLZ-1
    
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1608618887-8857-1-git-send-email-miaoqing@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e009178a6387485e2db895b83873d91063d65866
Author: Di Zhu <zhudi21@huawei.com>
Date:   Mon Jan 25 20:42:29 2021 +0800

    pktgen: fix misuse of BUG_ON() in pktgen_thread_worker()
    
    [ Upstream commit 275b1e88cabb34dbcbe99756b67e9939d34a99b6 ]
    
    pktgen create threads for all online cpus and bond these threads to
    relevant cpu repecivtily. when this thread firstly be woken up, it
    will compare cpu currently running with the cpu specified at the time
    of creation and if the two cpus are not equal, BUG_ON() will take effect
    causing panic on the system.
    Notice that these threads could be migrated to other cpus before start
    running because of the cpu hotplug after these threads have created. so the
    BUG_ON() used here seems unreasonable and we can replace it with WARN_ON()
    to just printf a warning other than panic the system.
    
    Signed-off-by: Di Zhu <zhudi21@huawei.com>
    Link: https://lore.kernel.org/r/20210125124229.19334-1-zhudi21@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f699ec2513cbd37bbe890e3f88647d1e30f39d1f
Author: Claire Chang <tientzu@chromium.org>
Date:   Tue Jan 19 19:47:00 2021 +0800

    Bluetooth: hci_h5: Set HCI_QUIRK_SIMULTANEOUS_DISCOVERY for btrtl
    
    [ Upstream commit 7f9f2c3f7d99b8ae773459c74ac5e99a0dd46db9 ]
    
    Realtek Bluetooth controllers can do both LE scan and BR/EDR inquiry
    at once, need to set HCI_QUIRK_SIMULTANEOUS_DISCOVERY quirk.
    
    Signed-off-by: Claire Chang <tientzu@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 656499e69c1ced43724bb377f6ca7ffb9d913959
Author: Tony Lindgren <tony@atomide.com>
Date:   Fri Jan 15 08:56:13 2021 +0200

    wlcore: Fix command execute failure 19 for wl12xx
    
    [ Upstream commit cb88d01b67383a095e3f7caeb4cdade5a6cf0417 ]
    
    We can currently get a "command execute failure 19" error on beacon loss
    if the signal is weak:
    
    wlcore: Beacon loss detected. roles:0xff
    wlcore: Connection loss work (role_id: 0).
    ...
    wlcore: ERROR command execute failure 19
    ...
    WARNING: CPU: 0 PID: 1552 at drivers/net/wireless/ti/wlcore/main.c:803
    ...
    (wl12xx_queue_recovery_work.part.0 [wlcore])
    (wl12xx_cmd_role_start_sta [wlcore])
    (wl1271_op_bss_info_changed [wlcore])
    (ieee80211_prep_connection [mac80211])
    
    Error 19 is defined as CMD_STATUS_WRONG_NESTING from the wlcore firmware,
    and seems to mean that the firmware no longer wants to see the quirk
    handling for WLCORE_QUIRK_START_STA_FAILS done.
    
    This quirk got added with commit 18eab430700d ("wlcore: workaround
    start_sta problem in wl12xx fw"), and it seems that this already got fixed
    in the firmware long time ago back in 2012 as wl18xx never had this quirk
    in place to start with.
    
    As we no longer even support firmware that early, to me it seems that it's
    safe to just drop WLCORE_QUIRK_START_STA_FAILS to fix the error. Looks
    like earlier firmware got disabled back in 2013 with commit 0e284c074ef9
    ("wl12xx: increase minimum singlerole firmware version required").
    
    If it turns out we still need WLCORE_QUIRK_START_STA_FAILS with any
    firmware that the driver works with, we can simply revert this patch and
    add extra checks for firmware version used.
    
    With this fix wlcore reconnects properly after a beacon loss.
    
    Cc: Raz Bouganim <r-bouganim@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210115065613.7731-1-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bf5f2a8f7abbcffcccbaf35428566439cdeff22
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Jan 5 13:02:34 2021 +0100

    vt/consolemap: do font sum unsigned
    
    [ Upstream commit 9777f8e60e718f7b022a94f2524f967d8def1931 ]
    
    The constant 20 makes the font sum computation signed which can lead to
    sign extensions and signed wraps. It's not much of a problem as we build
    with -fno-strict-overflow. But if we ever decide not to, be ready, so
    switch the constant to unsigned.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210105120239.28031-7-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80cc643d09df1959ff911203347ed72ab6d79ed0
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Tue Dec 1 12:39:57 2020 +0100

    x86/reboot: Add Zotac ZBOX CI327 nano PCI reboot quirk
    
    [ Upstream commit 4b2d8ca9208be636b30e924b1cbcb267b0740c93 ]
    
    On this system the M.2 PCIe WiFi card isn't detected after reboot, only
    after cold boot. reboot=pci fixes this behavior. In [0] the same issue
    is described, although on another system and with another Intel WiFi
    card. In case it's relevant, both systems have Celeron CPUs.
    
    Add a PCI reboot quirk on affected systems until a more generic fix is
    available.
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=202399
    
     [ bp: Massage commit message. ]
    
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/1524eafd-f89c-cfa4-ed70-0bde9e45eec9@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db7ebfcaca2d32e9079ca2ab161b46904a24ac29
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Dec 21 20:24:35 2020 +0800

    staging: fwserial: Fix error handling in fwserial_create
    
    [ Upstream commit f31559af97a0eabd467e4719253675b7dccb8a46 ]
    
    When fw_core_add_address_handler() fails, we need to destroy
    the port by tty_port_destroy(). Also we need to unregister
    the address handler by fw_core_remove_address_handler() on
    failure.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Link: https://lore.kernel.org/r/20201221122437.10274-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5035e04ef8b34cae5642bd0fd08bb68bd359cef
Author: Marek Vasut <marex@denx.de>
Date:   Tue Nov 3 19:09:40 2020 +0100

    rsi: Move card interrupt handling to RX thread
    
    [ Upstream commit 287431463e786766e05e4dc26d0a11d5f8ac8815 ]
    
    The interrupt handling of the RS911x is particularly heavy. For each RX
    packet, the card does three SDIO transactions, one to read interrupt
    status register, one to RX buffer length, one to read the RX packet(s).
    This translates to ~330 uS per one cycle of interrupt handler. In case
    there is more incoming traffic, this will be more.
    
    The drivers/mmc/core/sdio_irq.c has the following comment, quote "Just
    like traditional hard IRQ handlers, we expect SDIO IRQ handlers to be
    quick and to the point, so that the holding of the host lock does not
    cover too much work that doesn't require that lock to be held."
    
    The RS911x interrupt handler does not fit that. This patch therefore
    changes it such that the entire IRQ handler is moved to the RX thread
    instead, and the interrupt handler only wakes the RX thread.
    
    This is OK, because the interrupt handler only does things which can
    also be done in the RX thread, that is, it checks for firmware loading
    error(s), it checks buffer status, it checks whether a packet arrived
    and if so, reads out the packet and passes it to network stack.
    
    Moreover, this change permits removal of a code which allocated an
    skbuff only to get 4-byte-aligned buffer, read up to 8kiB of data
    into the skbuff, queue this skbuff into local private queue, then in
    RX thread, this buffer is dequeued, the data in the skbuff as passed
    to the RSI driver core, and the skbuff is deallocated. All this is
    replaced by directly calling the RSI driver core with local buffer.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Angus Ainslie <angus@akkea.ca>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Martin Kepplinger <martink@posteo.de>
    Cc: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Cc: Siva Rebbagondla <siva8118@gmail.com>
    Cc: linux-wireless@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Tested-by: Martin Kepplinger <martin.kepplinger@puri.sm>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201103180941.443528-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 995d733edbefb8dba7dd85c649abaab171673c74
Author: Marek Vasut <marex@denx.de>
Date:   Thu Oct 15 13:16:16 2020 +0200

    rsi: Fix TX EAPOL packet handling against iwlwifi AP
    
    [ Upstream commit 65277100caa2f2c62b6f3c4648b90d6f0435f3bc ]
    
    In case RSI9116 SDIO WiFi operates in STA mode against Intel 9260 in AP mode,
    the association fails. The former is using wpa_supplicant during association,
    the later is set up using hostapd:
    
    iwl$ cat hostapd.conf
    interface=wlp1s0
    ssid=test
    country_code=DE
    hw_mode=g
    channel=1
    wpa=2
    wpa_passphrase=test
    wpa_key_mgmt=WPA-PSK
    iwl$ hostapd -d hostapd.conf
    
    rsi$ wpa_supplicant -i wlan0 -c <(wpa_passphrase test test)
    
    The problem is that the TX EAPOL data descriptor RSI_DESC_REQUIRE_CFM_TO_HOST
    flag and extended descriptor EAPOL4_CONFIRM frame type are not set in case the
    AP is iwlwifi, because in that case the TX EAPOL packet is 2 bytes shorter.
    
    The downstream vendor driver has this change in place already [1], however
    there is no explanation for it, neither is there any commit history from which
    such explanation could be obtained.
    
    [1] https://github.com/SiliconLabs/RS911X-nLink-OSD/blob/master/rsi/rsi_91x_hal.c#L238
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Angus Ainslie <angus@akkea.ca>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Martin Kepplinger <martink@posteo.de>
    Cc: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Cc: Siva Rebbagondla <siva8118@gmail.com>
    Cc: linux-wireless@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201015111616.429220-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddda4bf56efdc6df276a8d13e743a52849d00298
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 14 14:13:33 2021 +0100

    dt-bindings: net: btusb: DT fix s/interrupt-name/interrupt-names/
    
    commit f288988930e93857e0375bdf88bb670c312b82eb upstream.
    
    The standard DT property name is "interrupt-names".
    
    Fixes: fd913ef7ce619467 ("Bluetooth: btusb: Add out-of-band wakeup support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Acked-by: Rajat Jain <rajatja@google.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b878f6a73b046a73848e4ba0d00a7376f26a740
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Feb 7 21:47:33 2021 +0200

    net: bridge: use switchdev for port flags set through sysfs too
    
    commit 8043c845b63a2dd88daf2d2d268a33e1872800f0 upstream.
    
    Looking through patchwork I don't see that there was any consensus to
    use switchdev notifiers only in case of netlink provided port flags but
    not sysfs (as a sort of deprecation, punishment or anything like that),
    so we should probably keep the user interface consistent in terms of
    functionality.
    
    http://patchwork.ozlabs.org/project/netdev/patch/20170605092043.3523-3-jiri@resnulli.us/
    http://patchwork.ozlabs.org/project/netdev/patch/20170608064428.4785-3-jiri@resnulli.us/
    
    Fixes: 3922285d96e7 ("net: bridge: Add support for offloading port attributes")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66a013879cdb304c214e94a49d2129363f29e174
Author: Li Xinhai <lixinhai.lxh@gmail.com>
Date:   Wed Feb 24 12:06:54 2021 -0800

    mm/hugetlb.c: fix unnecessary address expansion of pmd sharing
    
    commit a1ba9da8f0f9a37d900ff7eff66482cf7de8015e upstream.
    
    The current code would unnecessarily expand the address range.  Consider
    one example, (start, end) = (1G-2M, 3G+2M), and (vm_start, vm_end) =
    (1G-4M, 3G+4M), the expected adjustment should be keep (1G-2M, 3G+2M)
    without expand.  But the current result will be (1G-4M, 3G+4M).  Actually,
    the range (1G-4M, 1G) and (3G, 3G+4M) would never been involved in pmd
    sharing.
    
    After this patch, we will check that the vma span at least one PUD aligned
    size and the start,end range overlap the aligned range of vma.
    
    With above example, the aligned vma range is (1G, 3G), so if (start, end)
    range is within (1G-4M, 1G), or within (3G, 3G+4M), then no adjustment to
    both start and end.  Otherwise, we will have chance to adjust start
    downwards or end upwards without exceeding (vm_start, vm_end).
    
    Mike:
    
    : The 'adjusted range' is used for calls to mmu notifiers and cache(tlb)
    : flushing.  Since the current code unnecessarily expands the range in some
    : cases, more entries than necessary would be flushed.  This would/could
    : result in performance degradation.  However, this is highly dependent on
    : the user runtime.  Is there a combination of vma layout and calls to
    : actually hit this issue?  If the issue is hit, will those entries
    : unnecessarily flushed be used again and need to be unnecessarily reloaded?
    
    Link: https://lkml.kernel.org/r/20210104081631.2921415-1-lixinhai.lxh@gmail.com
    Fixes: 75802ca66354 ("mm/hugetlb: fix calculation of adjust_range_if_pmd_sharing_possible")
    Signed-off-by: Li Xinhai <lixinhai.lxh@gmail.com>
    Suggested-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Peter Xu <peterx@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d55a6a46a7f70bc1d270c50200edd3096cb380c
Author: Marco Elver <elver@google.com>
Date:   Mon Feb 1 17:04:20 2021 +0100

    net: fix up truesize of cloned skb in skb_prepare_for_shift()
    
    commit 097b9146c0e26aabaa6ff3e5ea536a53f5254a79 upstream.
    
    Avoid the assumption that ksize(kmalloc(S)) == ksize(kmalloc(S)): when
    cloning an skb, save and restore truesize after pskb_expand_head(). This
    can occur if the allocator decides to service an allocation of the same
    size differently (e.g. use a different size class, or pass the
    allocation on to KFENCE).
    
    Because truesize is used for bookkeeping (such as sk_wmem_queued), a
    modified truesize of a cloned skb may result in corrupt bookkeeping and
    relevant warnings (such as in sk_stream_kill_queues()).
    
    Link: https://lkml.kernel.org/r/X9JR/J6dMMOy1obu@elver.google.com
    Reported-by: syzbot+7b99aafdcc2eedea6178@syzkaller.appspotmail.com
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Marco Elver <elver@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20210201160420.2826895-1-elver@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd0a40e1ea2c297a9a6ae598111e405b307a38c5
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Thu Jan 28 17:58:01 2021 +0600

    smackfs: restrict bytes count in smackfs write functions
    
    commit 7ef4c19d245f3dc233fd4be5acea436edd1d83d8 upstream.
    
    syzbot found WARNINGs in several smackfs write operations where
    bytes count is passed to memdup_user_nul which exceeds
    GFP MAX_ORDER. Check count size if bigger than PAGE_SIZE.
    
    Per smackfs doc, smk_write_net4addr accepts any label or -CIPSO,
    smk_write_net6addr accepts any label or -DELETE. I couldn't find
    any general rule for other label lengths except SMK_LABELLEN,
    SMK_LONGLABEL, SMK_CIPSOMAX which are documented.
    
    Let's constrain, in general, smackfs label lengths for PAGE_SIZE.
    Although fuzzer crashes write to smackfs/netlabel on 0x400000 length.
    
    Here is a quick way to reproduce the WARNING:
    python -c "print('A' * 0x400000)" > /sys/fs/smackfs/netlabel
    
    Reported-by: syzbot+a71a442385a0b2815497@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f62847c98f6d30a0ac751359dacd02cdb8e0df4a
Author: Yumei Huang <yuhuang@redhat.com>
Date:   Fri Jan 22 16:48:19 2021 -0800

    xfs: Fix assert failure in xfs_setattr_size()
    
    commit 88a9e03beef22cc5fabea344f54b9a0dfe63de08 upstream.
    
    An assert failure is triggered by syzkaller test due to
    ATTR_KILL_PRIV is not cleared before xfs_setattr_size.
    As ATTR_KILL_PRIV is not checked/used by xfs_setattr_size,
    just remove it from the assert.
    
    Signed-off-by: Yumei Huang <yuhuang@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ffdc29803ecf15eafd479011c38182e27d5280b
Author: Sean Young <sean@mess.org>
Date:   Tue Jan 19 14:53:50 2021 +0100

    media: mceusb: sanity check for prescaler value
    
    commit 9dec0f48a75e0dadca498002d25ef4e143e60194 upstream.
    
    prescaler larger than 8 would mean the carrier is at most 152Hz,
    which does not make sense for IR carriers.
    
    Reported-by: syzbot+6d31bf169a8265204b8d@syzkaller.appspotmail.com
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26c080b9bfdf81d68e8b513a2228b322c667e545
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Tue Dec 15 14:30:22 2020 +0800

    udlfb: Fix memory leak in dlfb_usb_probe
    
    commit 5c0e4110f751934e748a66887c61f8e73805f0f9 upstream.
    
    The dlfb_alloc_urb_list function is called in dlfb_usb_probe function,
    after that if an error occurs, the dlfb_free_urb_list function need to
    be called.
    
    BUG: memory leak
    unreferenced object 0xffff88810adde100 (size 32):
      comm "kworker/1:0", pid 17, jiffies 4294947788 (age 19.520s)
      hex dump (first 32 bytes):
        10 30 c3 0d 81 88 ff ff c0 fa 63 12 81 88 ff ff  .0........c.....
        00 30 c3 0d 81 88 ff ff 80 d1 3a 08 81 88 ff ff  .0........:.....
      backtrace:
        [<0000000019512953>] kmalloc include/linux/slab.h:552 [inline]
        [<0000000019512953>] kzalloc include/linux/slab.h:664 [inline]
        [<0000000019512953>] dlfb_alloc_urb_list drivers/video/fbdev/udlfb.c:1892 [inline]
        [<0000000019512953>] dlfb_usb_probe.cold+0x289/0x988 drivers/video/fbdev/udlfb.c:1704
        [<0000000072160152>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
        [<00000000a8d6726f>] really_probe+0x159/0x480 drivers/base/dd.c:554
        [<00000000c3ce4b0e>] driver_probe_device+0x84/0x100 drivers/base/dd.c:738
        [<00000000e942e01c>] __device_attach_driver+0xee/0x110 drivers/base/dd.c:844
        [<00000000de0a5a5c>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:431
        [<00000000463fbcb4>] __device_attach+0x122/0x250 drivers/base/dd.c:912
        [<00000000b881a711>] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:491
        [<00000000364bbda5>] device_add+0x5ac/0xc30 drivers/base/core.c:2936
        [<00000000eecca418>] usb_set_configuration+0x9de/0xb90 drivers/usb/core/message.c:2159
        [<00000000edfeca2d>] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238
        [<000000001830872b>] usb_probe_device+0x5c/0x140 drivers/usb/core/driver.c:293
        [<00000000a8d6726f>] really_probe+0x159/0x480 drivers/base/dd.c:554
        [<00000000c3ce4b0e>] driver_probe_device+0x84/0x100 drivers/base/dd.c:738
        [<00000000e942e01c>] __device_attach_driver+0xee/0x110 drivers/base/dd.c:844
        [<00000000de0a5a5c>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:431
    
    Reported-by: syzbot+c9e365d7f450e8aa615d@syzkaller.appspotmail.com
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201215063022.16746-1-qiang.zhang@windriver.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd27a0dc3bb5a3e0ef20a85546086f011293d4ca
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Dec 18 12:17:16 2020 -0800

    JFS: more checks for invalid superblock
    
    commit 3bef198f1b17d1bb89260bad947ef084c0a2d1a6 upstream.
    
    syzbot is feeding invalid superblock data to JFS for mount testing.
    JFS does not check several of the fields -- just assumes that they
    are good since the JFS_MAGIC and version fields are good.
    
    In this case (syzbot reproducer), we have s_l2bsize == 0xda0c,
    pad == 0xf045, and s_state == 0x50, all of which are invalid IMO.
    Having s_l2bsize == 0xda0c causes this UBSAN warning:
      UBSAN: shift-out-of-bounds in fs/jfs/jfs_mount.c:373:25
      shift exponent -9716 is negative
    
    s_l2bsize can be tested for correctness. pad can be tested for non-0
    and punted. s_state can be tested for its valid values and punted.
    
    Do those 3 tests and if any of them fails, report the superblock as
    invalid/corrupt and let fsck handle it.
    
    With this patch, chkSuper() says this when JFS_DEBUG is enabled:
      jfs_mount: Mount Failure: superblock is corrupt!
      Mount JFS Failure: -22
      jfs_mount failed w/return code = -22
    
    The obvious problem with this method is that next week there could
    be another syzbot test that uses different fields for invalid values,
    this making this like a game of whack-a-mole.
    
    syzkaller link: https://syzkaller.appspot.com/bug?extid=36315852ece4132ec193
    
    Reported-by: syzbot+36315852ece4132ec193@syzkaller.appspotmail.com
    Reported-by: kernel test robot <lkp@intel.com> # v2
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Cc: jfs-discussion@lists.sourceforge.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d363ecd136e172f8a31a5210033e539a2afabde
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Fri Jan 15 12:26:22 2021 -0700

    MIPS: VDSO: Use CLANG_FLAGS instead of filtering out '--target='
    
    commit 76d7fff22be3e4185ee5f9da2eecbd8188e76b2c upstream.
    
    Commit ee67855ecd9d ("MIPS: vdso: Allow clang's --target flag in VDSO
    cflags") allowed the '--target=' flag from the main Makefile to filter
    through to the vDSO. However, it did not bring any of the other clang
    specific flags for controlling the integrated assembler and the GNU
    tools locations (--prefix=, --gcc-toolchain=, and -no-integrated-as).
    Without these, we will get a warning (visible with tinyconfig):
    
    arch/mips/vdso/elf.S:14:1: warning: DWARF2 only supports one section per
    compilation unit
    .pushsection .note.Linux, "a",@note ; .balign 4 ; .long 2f - 1f ; .long
    4484f - 3f ; .long 0 ; 1:.asciz "Linux" ; 2:.balign 4 ; 3:
    ^
    arch/mips/vdso/elf.S:34:2: warning: DWARF2 only supports one section per
    compilation unit
     .section .mips_abiflags, "a"
     ^
    
    All of these flags are bundled up under CLANG_FLAGS in the main Makefile
    and exported so that they can be added to Makefiles that set their own
    CFLAGS. Use this value instead of filtering out '--target=' so there is
    no warning and all of the tools are properly used.
    
    Cc: stable@vger.kernel.org
    Fixes: ee67855ecd9d ("MIPS: vdso: Allow clang's --target flag in VDSO cflags")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1256
    Reported-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    [nc: Fix conflict due to lack of 99570c3da96a and 076f421da5d4 in 4.19]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ef8dff99f434480e02cbe383ce2bb47057fc71b
Author: Andrew Murray <amurray@thegoodpenguin.co.uk>
Date:   Wed Aug 28 18:50:06 2019 +0100

    arm64: Use correct ll/sc atomic constraints
    
    commit 580fa1b874711d633f9b145b7777b0e83ebf3787 upstream.
    
    The A64 ISA accepts distinct (but overlapping) ranges of immediates for:
    
     * add arithmetic instructions ('I' machine constraint)
     * sub arithmetic instructions ('J' machine constraint)
     * 32-bit logical instructions ('K' machine constraint)
     * 64-bit logical instructions ('L' machine constraint)
    
    ... but we currently use the 'I' constraint for many atomic operations
    using sub or logical instructions, which is not always valid.
    
    When CONFIG_ARM64_LSE_ATOMICS is not set, this allows invalid immediates
    to be passed to instructions, potentially resulting in a build failure.
    When CONFIG_ARM64_LSE_ATOMICS is selected the out-of-line ll/sc atomics
    always use a register as they have no visibility of the value passed by
    the caller.
    
    This patch adds a constraint parameter to the ATOMIC_xx and
    __CMPXCHG_CASE macros so that we can pass appropriate constraints for
    each case, with uses updated accordingly.
    
    Unfortunately prior to GCC 8.1.0 the 'K' constraint erroneously accepted
    '4294967295', so we must instead force the use of a register.
    
    Signed-off-by: Andrew Murray <andrew.murray@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    [bwh: Backported to 4.19: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5c832bcb1947ce6339b5e6b7be189fa3c824ee2
Author: Will Deacon <will@kernel.org>
Date:   Tue Sep 18 09:39:55 2018 +0100

    arm64: cmpxchg: Use "K" instead of "L" for ll/sc immediate constraint
    
    commit 4230509978f2921182da4e9197964dccdbe463c3 upstream.
    
    The "L" AArch64 machine constraint, which we use for the "old" value in
    an LL/SC cmpxchg(), generates an immediate that is suitable for a 64-bit
    logical instruction. However, for cmpxchg() operations on types smaller
    than 64 bits, this constraint can result in an invalid instruction which
    is correctly rejected by GAS, such as EOR W1, W1, #0xffffffff.
    
    Whilst we could special-case the constraint based on the cmpxchg size,
    it's far easier to change the constraint to "K" and put up with using
    a register for large 64-bit immediates. For out-of-line LL/SC atomics,
    this is all moot anyway.
    
    Reported-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73152d61e44ce6a12cc1b58c6be0eeb44dca5f4b
Author: Will Deacon <will@kernel.org>
Date:   Thu Sep 13 13:30:45 2018 +0100

    arm64: Avoid redundant type conversions in xchg() and cmpxchg()
    
    commit 5ef3fe4cecdf82fdd71ce78988403963d01444d4 upstream.
    
    Our atomic instructions (either LSE atomics of LDXR/STXR sequences)
    natively support byte, half-word, word and double-word memory accesses
    so there is no need to mask the data register prior to being stored.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [bwh: Backported to 4.19: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79e73552f4fea6feedd5d05e6d882095b4925ba3
Author: Shaoying Xu <shaoyi@amazon.com>
Date:   Tue Feb 16 18:32:34 2021 +0000

    arm64 module: set plt* section addresses to 0x0
    
    commit f5c6d0fcf90ce07ee0d686d465b19b247ebd5ed7 upstream.
    
    These plt* and .text.ftrace_trampoline sections specified for arm64 have
    non-zero addressses. Non-zero section addresses in a relocatable ELF would
    confuse GDB when it tries to compute the section offsets and it ends up
    printing wrong symbol addresses. Therefore, set them to zero, which mirrors
    the change in commit 5d8591bc0fba ("module: set ksymtab/kcrctab* section
    addresses to 0x0").
    
    Reported-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210216183234.GA23876@amazon.com
    Signed-off-by: Will Deacon <will@kernel.org>
    [shaoyi@amazon.com: made same changes in arch/arm64/kernel/module.lds for 5.4]
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b16b4cbfea598f7bd8c587b8f49d0d550eb02140
Author: Cornelia Huck <cohuck@redhat.com>
Date:   Tue Feb 16 12:06:45 2021 +0100

    virtio/s390: implement virtio-ccw revision 2 correctly
    
    commit 182f709c5cff683e6732d04c78e328de0532284f upstream.
    
    CCW_CMD_READ_STATUS was introduced with revision 2 of virtio-ccw,
    and drivers should only rely on it being implemented when they
    negotiated at least that revision with the device.
    
    However, virtio_ccw_get_status() issued READ_STATUS for any
    device operating at least at revision 1. If the device accepts
    READ_STATUS regardless of the negotiated revision (which some
    implementations like QEMU do, even though the spec currently does
    not allow it), everything works as intended. While a device
    rejecting the command should also be handled gracefully, we will
    not be able to see any changes the device makes to the status,
    such as setting NEEDS_RESET or setting the status to zero after
    a completed reset.
    
    We negotiated the revision to at most 1, as we never bumped the
    maximum revision; let's do that now and properly send READ_STATUS
    only if we are operating at least at revision 2.
    
    Cc: stable@vger.kernel.org
    Fixes: 7d3ce5ab9430 ("virtio/s390: support READ_STATUS command for virtio-ccw")
    Reviewed-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210216110645.1087321-1-cohuck@redhat.com
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cac50deb15b948c50bf3a9a88d0cb2359d76cd6e
Author: Sergey Senozhatsky <senozhatsky@chromium.org>
Date:   Thu Nov 5 10:47:44 2020 +0900

    drm/virtio: use kvmalloc for large allocations
    
    commit ea86f3defd55f141a44146e66cbf8ffb683d60da upstream.
    
    We observed that some of virtio_gpu_object_shmem_init() allocations
    can be rather costly - order 6 - which can be difficult to fulfill
    under memory pressure conditions. Switch to kvmalloc_array() in
    virtio_gpu_object_shmem_init() and let the kernel vmalloc the entries
    array.
    
    Signed-off-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20201105014744.1662226-1-senozhatsky@chromium.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Doug Horn <doughorn@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08831f662b88f7117be51c5e55bd1f120087f90c
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Wed Feb 24 12:07:50 2021 -0800

    hugetlb: fix update_and_free_page contig page struct assumption
    
    commit dbfee5aee7e54f83d96ceb8e3e80717fac62ad63 upstream.
    
    page structs are not guaranteed to be contiguous for gigantic pages.  The
    routine update_and_free_page can encounter a gigantic page, yet it assumes
    page structs are contiguous when setting page flags in subpages.
    
    If update_and_free_page encounters non-contiguous page structs, we can see
    “BUG: Bad page state in process …” errors.
    
    Non-contiguous page structs are generally not an issue.  However, they can
    exist with a specific kernel configuration and hotplug operations.  For
    example: Configure the kernel with CONFIG_SPARSEMEM and
    !CONFIG_SPARSEMEM_VMEMMAP.  Then, hotplug add memory for the area where
    the gigantic page will be allocated.  Zi Yan outlined steps to reproduce
    here [1].
    
    [1] https://lore.kernel.org/linux-mm/16F7C58B-4D79-41C5-9B64-A1A1628F4AF2@nvidia.com/
    
    Link: https://lkml.kernel.org/r/20210217184926.33567-1-mike.kravetz@oracle.com
    Fixes: 944d9fec8d7a ("hugetlb: add support for gigantic page allocation at runtime")
    Signed-off-by: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Cc: Davidlohr Bueso <dbueso@suse.de>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Joao Martins <joao.m.martins@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>

commit 8cd871a85c4cbd522aaf6728b9037a36aaf55f0d
Author: Lech Perczak <lech.perczak@gmail.com>
Date:   Tue Feb 23 19:34:56 2021 +0100

    net: usb: qmi_wwan: support ZTE P685M modem
    
    commit 88eee9b7b42e69fb622ddb3ff6f37e8e4347f5b2 upstream.
    
    Now that interface 3 in "option" driver is no longer mapped, add device
    ID matching it to qmi_wwan.
    
    The modem is used inside ZTE MF283+ router and carriers identify it as
    such.
    Interface mapping is:
    0: QCDM, 1: AT (PCUI), 2: AT (Modem), 3: QMI, 4: ADB
    
    T:  Bus=02 Lev=02 Prnt=02 Port=05 Cnt=01 Dev#=  3 Spd=480  MxCh= 0
    D:  Ver= 2.01 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=19d2 ProdID=1275 Rev=f0.00
    S:  Manufacturer=ZTE,Incorporated
    S:  Product=ZTE Technologies MSM
    S:  SerialNumber=P685M510ZTED0000CP&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&0
    C:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=87(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Lech Perczak <lech.perczak@gmail.com>
    Link: https://lore.kernel.org/r/20210223183456.6377-1-lech.perczak@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
