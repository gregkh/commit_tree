commit 5b7a2c7d46bf29fa59e746a520369c0fc30fc655
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Dec 21 10:42:35 2019 +0100

    Linux 4.9.207

commit 3345794656148175ac3d0cea3188495014290590
Author: Aaro Koskinen <aaro.koskinen@nokia.com>
Date:   Wed Mar 27 22:35:37 2019 +0200

    net: stmmac: don't stop NAPI processing when dropping a packet
    
    commit 07b3975352374c3f5ebb4a42ef0b253fe370542d upstream.
    
    Currently, if we drop a packet, we exit from NAPI loop before the budget
    is consumed. In some situations this will make the RX processing stall
    e.g. when flood pinging the system with oversized packets, as the
    errorneous packets are not dropped efficiently.
    
    If we drop a packet, we should just continue to the next one as long as
    the budget allows.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [acj: backport v4.9 -stable
    -adjust context]
    Signed-off-by: Aviraj CJ <acj@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e3efae8dfaaa2d3f430ec9aeee12568ac801d51
Author: Aaro Koskinen <aaro.koskinen@nokia.com>
Date:   Wed Mar 27 22:35:35 2019 +0200

    net: stmmac: use correct DMA buffer size in the RX descriptor
    
    commit 583e6361414903c5206258a30e5bd88cb03c0254 upstream.
    
    We always program the maximum DMA buffer size into the receive descriptor,
    although the allocated size may be less. E.g. with the default MTU size
    we allocate only 1536 bytes. If somebody sends us a bigger frame, then
    memory may get corrupted.
    
    Fix by using exact buffer sizes.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [acj: backport to v4.9 -stable :
    - adjust context
    - skipped the section modifying non-existent functions in dwxgmac2_descs.c and
    hwif.h ]
    Signed-off-by: Aviraj CJ <acj@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d93f4bce1ceaf1b07d378bbfa5406d1d69e3338a
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed Dec 11 16:20:03 2019 +0200

    xhci: fix USB3 device initiated resume race with roothub autosuspend
    
    commit 057d476fff778f1d3b9f861fdb5437ea1a3cfc99 upstream.
    
    A race in xhci USB3 remote wake handling may force device back to suspend
    after it initiated resume siganaling, causing a missed resume event or warm
    reset of device.
    
    When a USB3 link completes resume signaling and goes to enabled (UO)
    state a interrupt is issued and the interrupt handler will clear the
    bus_state->port_remote_wakeup resume flag, allowing bus suspend.
    
    If the USB3 roothub thread just finished reading port status before
    the interrupt, finding ports still in suspended (U3) state, but hasn't
    yet started suspending the hub, then the xhci interrupt handler will clear
    the flag that prevented roothub suspend and allow bus to suspend, forcing
    all port links back to suspended (U3) state.
    
    Example case:
    usb_runtime_suspend() # because all ports still show suspended U3
      usb_suspend_both()
        hub_suspend();   # successful as hub->wakeup_bits not set yet
    ==> INTERRUPT
    xhci_irq()
      handle_port_status()
        clear bus_state->port_remote_wakeup
        usb_wakeup_notification()
          sets hub->wakeup_bits;
            kick_hub_wq()
    <== END INTERRUPT
          hcd_bus_suspend()
            xhci_bus_suspend() # success as port_remote_wakeup bits cleared
    
    Fix this by increasing roothub usage count during port resume to prevent
    roothub autosuspend, and by making sure bus_state->port_remote_wakeup
    flag is only cleared after resume completion is visible, i.e.
    after xhci roothub returned U0 or other non-U3 link state link on a
    get port status request.
    
    Issue rootcaused by Chiasheng Lee
    
    Cc: <stable@vger.kernel.org>
    Cc: Lee, Hou-hsun <hou-hsun.lee@intel.com>
    Reported-by: Lee, Chiasheng <chiasheng.lee@intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20191211142007.8847-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 768290596c368b2e7c834853ff0bcfdd08b265ae
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Nov 26 09:41:46 2019 -0500

    drm/radeon: fix r1xx/r2xx register checker for POT textures
    
    commit 008037d4d972c9c47b273e40e52ae34f9d9e33e7 upstream.
    
    Shift and mask were reversed.  Noticed by chance.
    
    Tested-by: Meelis Roos <mroos@linux.ee>
    Reviewed-by: Michel DÃ¤nzer <mdaenzer@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebb8c24003577562a33cb0f4b8c4b55dba04071f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Dec 9 09:34:57 2019 -0800

    scsi: iscsi: Fix a potential deadlock in the timeout handler
    
    commit 5480e299b5ae57956af01d4839c9fc88a465eeab upstream.
    
    Some time ago the block layer was modified such that timeout handlers are
    called from thread context instead of interrupt context. Make it safe to
    run the iSCSI timeout handler in thread context. This patch fixes the
    following lockdep complaint:
    
    ================================
    WARNING: inconsistent lock state
    5.5.1-dbg+ #11 Not tainted
    --------------------------------
    inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage.
    kworker/7:1H/206 [HC0[0]:SC0[0]:HE1:SE1] takes:
    ffff88802d9827e8 (&(&session->frwd_lock)->rlock){+.?.}, at: iscsi_eh_cmd_timed_out+0xa6/0x6d0 [libiscsi]
    {IN-SOFTIRQ-W} state was registered at:
      lock_acquire+0x106/0x240
      _raw_spin_lock+0x38/0x50
      iscsi_check_transport_timeouts+0x3e/0x210 [libiscsi]
      call_timer_fn+0x132/0x470
      __run_timers.part.0+0x39f/0x5b0
      run_timer_softirq+0x63/0xc0
      __do_softirq+0x12d/0x5fd
      irq_exit+0xb3/0x110
      smp_apic_timer_interrupt+0x131/0x3d0
      apic_timer_interrupt+0xf/0x20
      default_idle+0x31/0x230
      arch_cpu_idle+0x13/0x20
      default_idle_call+0x53/0x60
      do_idle+0x38a/0x3f0
      cpu_startup_entry+0x24/0x30
      start_secondary+0x222/0x290
      secondary_startup_64+0xa4/0xb0
    irq event stamp: 1383705
    hardirqs last  enabled at (1383705): [<ffffffff81aace5c>] _raw_spin_unlock_irq+0x2c/0x50
    hardirqs last disabled at (1383704): [<ffffffff81aacb98>] _raw_spin_lock_irq+0x18/0x50
    softirqs last  enabled at (1383690): [<ffffffffa0e2efea>] iscsi_queuecommand+0x76a/0xa20 [libiscsi]
    softirqs last disabled at (1383682): [<ffffffffa0e2e998>] iscsi_queuecommand+0x118/0xa20 [libiscsi]
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(&(&session->frwd_lock)->rlock);
      <Interrupt>
        lock(&(&session->frwd_lock)->rlock);
    
     *** DEADLOCK ***
    
    2 locks held by kworker/7:1H/206:
     #0: ffff8880d57bf928 ((wq_completion)kblockd){+.+.}, at: process_one_work+0x472/0xab0
     #1: ffff88802b9c7de8 ((work_completion)(&q->timeout_work)){+.+.}, at: process_one_work+0x476/0xab0
    
    stack backtrace:
    CPU: 7 PID: 206 Comm: kworker/7:1H Not tainted 5.5.1-dbg+ #11
    Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
    Workqueue: kblockd blk_mq_timeout_work
    Call Trace:
     dump_stack+0xa5/0xe6
     print_usage_bug.cold+0x232/0x23b
     mark_lock+0x8dc/0xa70
     __lock_acquire+0xcea/0x2af0
     lock_acquire+0x106/0x240
     _raw_spin_lock+0x38/0x50
     iscsi_eh_cmd_timed_out+0xa6/0x6d0 [libiscsi]
     scsi_times_out+0xf4/0x440 [scsi_mod]
     scsi_timeout+0x1d/0x20 [scsi_mod]
     blk_mq_check_expired+0x365/0x3a0
     bt_iter+0xd6/0xf0
     blk_mq_queue_tag_busy_iter+0x3de/0x650
     blk_mq_timeout_work+0x1af/0x380
     process_one_work+0x56d/0xab0
     worker_thread+0x7a/0x5d0
     kthread+0x1bc/0x210
     ret_from_fork+0x24/0x30
    
    Fixes: 287922eb0b18 ("block: defer timeouts to a workqueue")
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Lee Duncan <lduncan@suse.com>
    Cc: Chris Leech <cleech@redhat.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191209173457.187370-1-bvanassche@acm.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e861c9bc0f0008fd8fb17aaf22d889d5ddd40c0b
Author: Hou Tao <houtao1@huawei.com>
Date:   Tue Dec 3 19:42:58 2019 +0800

    dm btree: increase rebalance threshold in __rebalance2()
    
    commit 474e559567fa631dea8fb8407ab1b6090c903755 upstream.
    
    We got the following warnings from thin_check during thin-pool setup:
    
      $ thin_check /dev/vdb
      examining superblock
      examining devices tree
        missing devices: [1, 84]
          too few entries in btree_node: 41, expected at least 42 (block 138, max_entries = 126)
      examining mapping tree
    
    The phenomenon is the number of entries in one node of details_info tree is
    less than (max_entries / 3). And it can be easily reproduced by the following
    procedures:
    
      $ new a thin pool
      $ presume the max entries of details_info tree is 126
      $ new 127 thin devices (e.g. 1~127) to make the root node being full
        and then split
      $ remove the first 43 (e.g. 1~43) thin devices to make the children
        reblance repeatedly
      $ stop the thin pool
      $ thin_check
    
    The root cause is that the B-tree removal procedure in __rebalance2()
    doesn't guarantee the invariance: the minimal number of entries in
    non-root node should be >= (max_entries / 3).
    
    Simply fix the problem by increasing the rebalance threshold to
    make sure the number of entries in each child will be greater
    than or equal to (max_entries / 3 + 1), so no matter which
    child is used for removal, the number will still be valid.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdca57502bdb369cb5177db3f871cfc458dd50a2
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Nov 22 16:09:55 2019 -0600

    dma-buf: Fix memory leak in sync_file_merge()
    
    commit 6645d42d79d33e8a9fe262660a75d5f4556bbea9 upstream.
    
    In the implementation of sync_file_merge() the allocated sync_file is
    leaked if number of fences overflows. Release sync_file by goto err.
    
    Fixes: a02b9dc90d84 ("dma-buf/sync_file: refactor fence storage in struct sync_file")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191122220957.30427-1-navid.emamdoost@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 017df5edfa2388a3f9eca11228d148e2939d04b3
Author: Jiang Yi <giangyi@amazon.com>
Date:   Wed Nov 27 17:49:10 2019 +0100

    vfio/pci: call irq_bypass_unregister_producer() before freeing irq
    
    commit d567fb8819162099035e546b11a736e29c2af0ea upstream.
    
    Since irq_bypass_register_producer() is called after request_irq(), we
    should do tear-down in reverse order: irq_bypass_unregister_producer()
    then free_irq().
    
    Specifically free_irq() may release resources required by the
    irqbypass del_producer() callback.  Notably an example provided by
    Marc Zyngier on arm64 with GICv4 that he indicates has the potential
    to wedge the hardware:
    
     free_irq(irq)
       __free_irq(irq)
         irq_domain_deactivate_irq(irq)
           its_irq_domain_deactivate()
             [unmap the VLPI from the ITS]
    
     kvm_arch_irq_bypass_del_producer(cons, prod)
       kvm_vgic_v4_unset_forwarding(kvm, irq, ...)
         its_unmap_vlpi(irq)
           [Unmap the VLPI from the ITS (again), remap the original LPI]
    
    Signed-off-by: Jiang Yi <giangyi@amazon.com>
    Cc: stable@vger.kernel.org # v4.4+
    Fixes: 6d7425f109d26 ("vfio: Register/unregister irq_bypass_producer")
    Link: https://lore.kernel.org/kvm/20191127164910.15888-1-giangyi@amazon.com
    Reviewed-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    [aw: commit log]
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52e81d8db0fbc179124567a1fdf9a1bad20f5401
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Tue Jul 30 20:23:39 2019 +0300

    ARM: tegra: Fix FLOW_CTLR_HALT register clobbering by tegra_resume()
    
    commit d70f7d31a9e2088e8a507194354d41ea10062994 upstream.
    
    There is an unfortunate typo in the code that results in writing to
    FLOW_CTLR_HALT instead of FLOW_CTLR_CSR.
    
    Cc: <stable@vger.kernel.org>
    Acked-by: Peter De Schrijver <pdeschrijver@nvidia.com>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5c5a5d61a3b9a409e96a33c141706334719388f
Author: Lihua Yao <ylhuajnu@outlook.com>
Date:   Tue Sep 10 13:22:28 2019 +0000

    ARM: dts: s3c64xx: Fix init order of clock providers
    
    commit d60d0cff4ab01255b25375425745c3cff69558ad upstream.
    
    fin_pll is the parent of clock-controller@7e00f000, specify
    the dependency to ensure proper initialization order of clock
    providers.
    
    without this patch:
    [    0.000000] S3C6410 clocks: apll = 0, mpll = 0
    [    0.000000]  epll = 0, arm_clk = 0
    
    with this patch:
    [    0.000000] S3C6410 clocks: apll = 532000000, mpll = 532000000
    [    0.000000]  epll = 24000000, arm_clk = 532000000
    
    Cc: <stable@vger.kernel.org>
    Fixes: 3f6d439f2022 ("clk: reverse default clk provider initialization order in of_clk_init()")
    Signed-off-by: Lihua Yao <ylhuajnu@outlook.com>
    Reviewed-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5234d7e1c739d5b2f7863994e451ef307fb3faa9
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Tue Nov 12 17:16:35 2019 -0800

    CIFS: Respect O_SYNC and O_DIRECT flags during reconnect
    
    commit 44805b0e62f15e90d233485420e1847133716bdc upstream.
    
    Currently the client translates O_SYNC and O_DIRECT flags
    into corresponding SMB create options when openning a file.
    The problem is that on reconnect when the file is being
    re-opened the client doesn't set those flags and it causes
    a server to reject re-open requests because create options
    don't match. The latter means that any subsequent system
    call against that open file fail until a share is re-mounted.
    
    Fix this by properly setting SMB create options when
    re-openning files after reconnects.
    
    Fixes: 1013e760d10e6: ("SMB3: Don't ignore O_SYNC/O_DSYNC and O_DIRECT flags")
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e4f2b3634ec2277f6550ff43f448fb8479f6e20
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Nov 13 13:18:31 2019 -0800

    xtensa: fix TLB sanity checker
    
    commit 36de10c4788efc6efe6ff9aa10d38cb7eea4c818 upstream.
    
    Virtual and translated addresses retrieved by the xtensa TLB sanity
    checker must be consistent, i.e. correspond to the same state of the
    checked TLB entry. KASAN shadow memory is mapped dynamically using
    auto-refill TLB entries and thus may change TLB state between the
    virtual and translated address retrieval, resulting in false TLB
    insanity report.
    Move read_xtlb_translation close to read_xtlb_virtual to make sure that
    read values are consistent.
    
    Cc: stable@vger.kernel.org
    Fixes: a99e07ee5e88 ("xtensa: check TLB sanity on return to userspace")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3745fabfe3e5a6f52f01496227295274f92ce75
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Tue Oct 8 11:42:39 2019 +0800

    PCI/MSI: Fix incorrect MSI-X masking on resume
    
    commit e045fa29e89383c717e308609edd19d2fd29e1be upstream.
    
    When a driver enables MSI-X, msix_program_entries() reads the MSI-X Vector
    Control register for each vector and saves it in desc->masked.  Each
    register is 32 bits and bit 0 is the actual Mask bit.
    
    When we restored these registers during resume, we previously set the Mask
    bit if *any* bit in desc->masked was set instead of when the Mask bit
    itself was set:
    
      pci_restore_state
        pci_restore_msi_state
          __pci_restore_msix_state
            for_each_pci_msi_entry
              msix_mask_irq(entry, entry->masked)   <-- entire u32 word
                __pci_msix_desc_mask_irq(desc, flag)
                  mask_bits = desc->masked & ~PCI_MSIX_ENTRY_CTRL_MASKBIT
                  if (flag)       <-- testing entire u32, not just bit 0
                    mask_bits |= PCI_MSIX_ENTRY_CTRL_MASKBIT
                  writel(mask_bits, desc_addr + PCI_MSIX_ENTRY_VECTOR_CTRL)
    
    This means that after resume, MSI-X vectors were masked when they shouldn't
    be, which leads to timeouts like this:
    
      nvme nvme0: I/O 978 QID 3 timeout, completion polled
    
    On resume, set the Mask bit only when the saved Mask bit from suspend was
    set.
    
    This should remove the need for 19ea025e1d28 ("nvme: Add quirk for Kingston
    NVME SSD running FW E8FK11.T").
    
    [bhelgaas: commit log, move fix to __pci_msix_desc_mask_irq()]
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=204887
    Link: https://lore.kernel.org/r/20191008034238.2503-1-jian-hong@endlessm.com
    Fixes: f2440d9acbe8 ("PCI MSI: Refactor interrupt masking code")
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d78b18ea43c20fede44113e2c9ce297ba319473
Author: Steffen Liebergeld <steffen.liebergeld@kernkonzept.com>
Date:   Wed Sep 18 15:16:52 2019 +0200

    PCI: Fix Intel ACS quirk UPDCR register address
    
    commit d8558ac8c93d429d65d7490b512a3a67e559d0d4 upstream.
    
    According to documentation [0] the correct offset for the Upstream Peer
    Decode Configuration Register (UPDCR) is 0x1014.  It was previously defined
    as 0x1114.
    
    d99321b63b1f ("PCI: Enable quirks for PCIe ACS on Intel PCH root ports")
    intended to enforce isolation between PCI devices allowing them to be put
    into separate IOMMU groups.  Due to the wrong register offset the intended
    isolation was not fully enforced.  This is fixed with this patch.
    
    Please note that I did not test this patch because I have no hardware that
    implements this register.
    
    [0] https://www.intel.com/content/dam/www/public/us/en/documents/datasheets/4th-gen-core-family-mobile-i-o-datasheet.pdf (page 325)
    Fixes: d99321b63b1f ("PCI: Enable quirks for PCIe ACS on Intel PCH root ports")
    Link: https://lore.kernel.org/r/7a3505df-79ba-8a28-464c-88b83eefffa6@kernkonzept.com
    Signed-off-by: Steffen Liebergeld <steffen.liebergeld@kernkonzept.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Andrew Murray <andrew.murray@arm.com>
    Acked-by: Ashok Raj <ashok.raj@intel.com>
    Cc: stable@vger.kernel.org      # v3.15+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a2ae3ab348cce44120667277c2198f10cc348b1
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 18 15:10:24 2019 +0100

    Revert "regulator: Defer init completion for a while after late_initcall"
    
    This reverts commit 8b8c8d69b1a31004517d4c71a490f47bdf3405a2 which is
    commit 55576cf1853798e86f620766e23b604c9224c19c upstream.
    
    It's causing "odd" interactions with older kernels, so it probably isn't
    a good idea to cause timing changes there.  This has been reported to
    cause oopses on Pixel devices.
    
    Reported-by: Siddharth Kapoor <ksiddharth@google.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7a3b025b8c387fa65dc28c50db88642b1add300
Author: Guillaume Nault <gnault@redhat.com>
Date:   Fri Dec 6 12:38:49 2019 +0100

    tcp: Protect accesses to .ts_recent_stamp with {READ,WRITE}_ONCE()
    
    [ Upstream commit 721c8dafad26ccfa90ff659ee19755e3377b829d ]
    
    Syncookies borrow the ->rx_opt.ts_recent_stamp field to store the
    timestamp of the last synflood. Protect them with READ_ONCE() and
    WRITE_ONCE() since reads and writes aren't serialised.
    
    Use of .rx_opt.ts_recent_stamp for storing the synflood timestamp was
    introduced by a0f82f64e269 ("syncookies: remove last_synq_overflow from
    struct tcp_sock"). But unprotected accesses were already there when
    timestamp was stored in .last_synq_overflow.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c8cd7f6bb8a53b244ecc498dc733204099b6cf3
Author: Guillaume Nault <gnault@redhat.com>
Date:   Fri Dec 6 12:38:43 2019 +0100

    tcp: tighten acceptance of ACKs not matching a child socket
    
    [ Upstream commit cb44a08f8647fd2e8db5cc9ac27cd8355fa392d8 ]
    
    When no synflood occurs, the synflood timestamp isn't updated.
    Therefore it can be so old that time_after32() can consider it to be
    in the future.
    
    That's a problem for tcp_synq_no_recent_overflow() as it may report
    that a recent overflow occurred while, in fact, it's just that jiffies
    has grown past 'last_overflow' + TCP_SYNCOOKIE_VALID + 2^31.
    
    Spurious detection of recent overflows lead to extra syncookie
    verification in cookie_v[46]_check(). At that point, the verification
    should fail and the packet dropped. But we should have dropped the
    packet earlier as we didn't even send a syncookie.
    
    Let's refine tcp_synq_no_recent_overflow() to report a recent overflow
    only if jiffies is within the
    [last_overflow, last_overflow + TCP_SYNCOOKIE_VALID] interval. This
    way, no spurious recent overflow is reported when jiffies wraps and
    'last_overflow' becomes in the future from the point of view of
    time_after32().
    
    However, if jiffies wraps and enters the
    [last_overflow, last_overflow + TCP_SYNCOOKIE_VALID] interval (with
    'last_overflow' being a stale synflood timestamp), then
    tcp_synq_no_recent_overflow() still erroneously reports an
    overflow. In such cases, we have to rely on syncookie verification
    to drop the packet. We unfortunately have no way to differentiate
    between a fresh and a stale syncookie timestamp.
    
    In practice, using last_overflow as lower bound is problematic.
    If the synflood timestamp is concurrently updated between the time
    we read jiffies and the moment we store the timestamp in
    'last_overflow', then 'now' becomes smaller than 'last_overflow' and
    tcp_synq_no_recent_overflow() returns true, potentially dropping a
    valid syncookie.
    
    Reading jiffies after loading the timestamp could fix the problem,
    but that'd require a memory barrier. Let's just accommodate for
    potential timestamp growth instead and extend the interval using
    'last_overflow - HZ' as lower bound.
    
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b4a534f2a58b7f191bf0189ee55e284f513b23e
Author: Guillaume Nault <gnault@redhat.com>
Date:   Fri Dec 6 12:38:36 2019 +0100

    tcp: fix rejected syncookies due to stale timestamps
    
    [ Upstream commit 04d26e7b159a396372646a480f4caa166d1b6720 ]
    
    If no synflood happens for a long enough period of time, then the
    synflood timestamp isn't refreshed and jiffies can advance so much
    that time_after32() can't accurately compare them any more.
    
    Therefore, we can end up in a situation where time_after32(now,
    last_overflow + HZ) returns false, just because these two values are
    too far apart. In that case, the synflood timestamp isn't updated as
    it should be, which can trick tcp_synq_no_recent_overflow() into
    rejecting valid syncookies.
    
    For example, let's consider the following scenario on a system
    with HZ=1000:
    
      * The synflood timestamp is 0, either because that's the timestamp
        of the last synflood or, more commonly, because we're working with
        a freshly created socket.
    
      * We receive a new SYN, which triggers synflood protection. Let's say
        that this happens when jiffies == 2147484649 (that is,
        'synflood timestamp' + HZ + 2^31 + 1).
    
      * Then tcp_synq_overflow() doesn't update the synflood timestamp,
        because time_after32(2147484649, 1000) returns false.
        With:
          - 2147484649: the value of jiffies, aka. 'now'.
          - 1000: the value of 'last_overflow' + HZ.
    
      * A bit later, we receive the ACK completing the 3WHS. But
        cookie_v[46]_check() rejects it because tcp_synq_no_recent_overflow()
        says that we're not under synflood. That's because
        time_after32(2147484649, 120000) returns false.
        With:
          - 2147484649: the value of jiffies, aka. 'now'.
          - 120000: the value of 'last_overflow' + TCP_SYNCOOKIE_VALID.
    
        Of course, in reality jiffies would have increased a bit, but this
        condition will last for the next 119 seconds, which is far enough
        to accommodate for jiffie's growth.
    
    Fix this by updating the overflow timestamp whenever jiffies isn't
    within the [last_overflow, last_overflow + HZ] range. That shouldn't
    have any performance impact since the update still happens at most once
    per second.
    
    Now we're guaranteed to have fresh timestamps while under synflood, so
    tcp_synq_no_recent_overflow() can safely use it with time_after32() in
    such situations.
    
    Stale timestamps can still make tcp_synq_no_recent_overflow() return
    the wrong verdict when not under synflood. This will be handled in the
    next patch.
    
    For 64 bits architectures, the problem was introduced with the
    conversion of ->tw_ts_recent_stamp to 32 bits integer by commit
    cca9bab1b72c ("tcp: use monotonic timestamps for PAWS").
    The problem has always been there on 32 bits architectures.
    
    Fixes: cca9bab1b72c ("tcp: use monotonic timestamps for PAWS")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67b02e37c1ba5b7aea48a750731a6731784e8c8c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Dec 5 20:43:46 2019 -0800

    inet: protect against too small mtu values.
    
    [ Upstream commit 501a90c945103e8627406763dac418f20f3837b2 ]
    
    syzbot was once again able to crash a host by setting a very small mtu
    on loopback device.
    
    Let's make inetdev_valid_mtu() available in include/net/ip.h,
    and use it in ip_setup_cork(), so that we protect both ip_append_page()
    and __ip_append_data()
    
    Also add a READ_ONCE() when the device mtu is read.
    
    Pairs this lockless read with one WRITE_ONCE() in __dev_set_mtu(),
    even if other code paths might write over this field.
    
    Add a big comment in include/linux/netdevice.h about dev->mtu
    needing READ_ONCE()/WRITE_ONCE() annotations.
    
    Hopefully we will add the missing ones in followup patches.
    
    [1]
    
    refcount_t: saturated; leaking memory.
    WARNING: CPU: 0 PID: 9464 at lib/refcount.c:22 refcount_warn_saturate+0x138/0x1f0 lib/refcount.c:22
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 0 PID: 9464 Comm: syz-executor850 Not tainted 5.4.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x197/0x210 lib/dump_stack.c:118
     panic+0x2e3/0x75c kernel/panic.c:221
     __warn.cold+0x2f/0x3e kernel/panic.c:582
     report_bug+0x289/0x300 lib/bug.c:195
     fixup_bug arch/x86/kernel/traps.c:174 [inline]
     fixup_bug arch/x86/kernel/traps.c:169 [inline]
     do_error_trap+0x11b/0x200 arch/x86/kernel/traps.c:267
     do_invalid_op+0x37/0x50 arch/x86/kernel/traps.c:286
     invalid_op+0x23/0x30 arch/x86/entry/entry_64.S:1027
    RIP: 0010:refcount_warn_saturate+0x138/0x1f0 lib/refcount.c:22
    Code: 06 31 ff 89 de e8 c8 f5 e6 fd 84 db 0f 85 6f ff ff ff e8 7b f4 e6 fd 48 c7 c7 e0 71 4f 88 c6 05 56 a6 a4 06 01 e8 c7 a8 b7 fd <0f> 0b e9 50 ff ff ff e8 5c f4 e6 fd 0f b6 1d 3d a6 a4 06 31 ff 89
    RSP: 0018:ffff88809689f550 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffffff815e4336 RDI: ffffed1012d13e9c
    RBP: ffff88809689f560 R08: ffff88809c50a3c0 R09: fffffbfff15d31b1
    R10: fffffbfff15d31b0 R11: ffffffff8ae98d87 R12: 0000000000000001
    R13: 0000000000040100 R14: ffff888099041104 R15: ffff888218d96e40
     refcount_add include/linux/refcount.h:193 [inline]
     skb_set_owner_w+0x2b6/0x410 net/core/sock.c:1999
     sock_wmalloc+0xf1/0x120 net/core/sock.c:2096
     ip_append_page+0x7ef/0x1190 net/ipv4/ip_output.c:1383
     udp_sendpage+0x1c7/0x480 net/ipv4/udp.c:1276
     inet_sendpage+0xdb/0x150 net/ipv4/af_inet.c:821
     kernel_sendpage+0x92/0xf0 net/socket.c:3794
     sock_sendpage+0x8b/0xc0 net/socket.c:936
     pipe_to_sendpage+0x2da/0x3c0 fs/splice.c:458
     splice_from_pipe_feed fs/splice.c:512 [inline]
     __splice_from_pipe+0x3ee/0x7c0 fs/splice.c:636
     splice_from_pipe+0x108/0x170 fs/splice.c:671
     generic_splice_sendpage+0x3c/0x50 fs/splice.c:842
     do_splice_from fs/splice.c:861 [inline]
     direct_splice_actor+0x123/0x190 fs/splice.c:1035
     splice_direct_to_actor+0x3b4/0xa30 fs/splice.c:990
     do_splice_direct+0x1da/0x2a0 fs/splice.c:1078
     do_sendfile+0x597/0xd00 fs/read_write.c:1464
     __do_sys_sendfile64 fs/read_write.c:1525 [inline]
     __se_sys_sendfile64 fs/read_write.c:1511 [inline]
     __x64_sys_sendfile64+0x1dd/0x220 fs/read_write.c:1511
     do_syscall_64+0xfa/0x790 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x441409
    Code: e8 ac e8 ff ff 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 eb 08 fc ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007fffb64c4f78 EFLAGS: 00000246 ORIG_RAX: 0000000000000028
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 0000000000441409
    RDX: 0000000000000000 RSI: 0000000000000006 RDI: 0000000000000005
    RBP: 0000000000073b8a R08: 0000000000000010 R09: 0000000000000010
    R10: 0000000000010001 R11: 0000000000000246 R12: 0000000000402180
    R13: 0000000000402210 R14: 0000000000000000 R15: 0000000000000000
    Kernel Offset: disabled
    Rebooting in 86400 seconds..
    
    Fixes: 1470ddf7f8ce ("inet: Remove explicit write references to sk/inet in ip_append_data")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dddfb252f6c0ba4c357f0f3ffb098ad255019e47
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Fri Dec 6 05:25:48 2019 +0000

    tipc: fix ordering of tipc module init and exit routine
    
    [ Upstream commit 9cf1cd8ee3ee09ef2859017df2058e2f53c5347f ]
    
    In order to set/get/dump, the tipc uses the generic netlink
    infrastructure. So, when tipc module is inserted, init function
    calls genl_register_family().
    After genl_register_family(), set/get/dump commands are immediately
    allowed and these callbacks internally use the net_generic.
    net_generic is allocated by register_pernet_device() but this
    is called after genl_register_family() in the __init function.
    So, these callbacks would use un-initialized net_generic.
    
    Test commands:
        #SHELL1
        while :
        do
            modprobe tipc
            modprobe -rv tipc
        done
    
        #SHELL2
        while :
        do
            tipc link list
        done
    
    Splat looks like:
    [   59.616322][ T2788] kasan: CONFIG_KASAN_INLINE enabled
    [   59.617234][ T2788] kasan: GPF could be caused by NULL-ptr deref or user memory access
    [   59.618398][ T2788] general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI
    [   59.619389][ T2788] CPU: 3 PID: 2788 Comm: tipc Not tainted 5.4.0+ #194
    [   59.620231][ T2788] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    [   59.621428][ T2788] RIP: 0010:tipc_bcast_get_broadcast_mode+0x131/0x310 [tipc]
    [   59.622379][ T2788] Code: c7 c6 ef 8b 38 c0 65 ff 0d 84 83 c9 3f e8 d7 a5 f2 e3 48 8d bb 38 11 00 00 48 b8 00 00 00 00
    [   59.622550][ T2780] NET: Registered protocol family 30
    [   59.624627][ T2788] RSP: 0018:ffff88804b09f578 EFLAGS: 00010202
    [   59.624630][ T2788] RAX: dffffc0000000000 RBX: 0000000000000011 RCX: 000000008bc66907
    [   59.624631][ T2788] RDX: 0000000000000229 RSI: 000000004b3cf4cc RDI: 0000000000001149
    [   59.624633][ T2788] RBP: ffff88804b09f588 R08: 0000000000000003 R09: fffffbfff4fb3df1
    [   59.624635][ T2788] R10: fffffbfff50318f8 R11: ffff888066cadc18 R12: ffffffffa6cc2f40
    [   59.624637][ T2788] R13: 1ffff11009613eba R14: ffff8880662e9328 R15: ffff8880662e9328
    [   59.624639][ T2788] FS:  00007f57d8f7b740(0000) GS:ffff88806cc00000(0000) knlGS:0000000000000000
    [   59.624645][ T2788] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   59.625875][ T2780] tipc: Started in single node mode
    [   59.626128][ T2788] CR2: 00007f57d887a8c0 CR3: 000000004b140002 CR4: 00000000000606e0
    [   59.633991][ T2788] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   59.635195][ T2788] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   59.636478][ T2788] Call Trace:
    [   59.637025][ T2788]  tipc_nl_add_bc_link+0x179/0x1470 [tipc]
    [   59.638219][ T2788]  ? lock_downgrade+0x6e0/0x6e0
    [   59.638923][ T2788]  ? __tipc_nl_add_link+0xf90/0xf90 [tipc]
    [   59.639533][ T2788]  ? tipc_nl_node_dump_link+0x318/0xa50 [tipc]
    [   59.640160][ T2788]  ? mutex_lock_io_nested+0x1380/0x1380
    [   59.640746][ T2788]  tipc_nl_node_dump_link+0x4fd/0xa50 [tipc]
    [   59.641356][ T2788]  ? tipc_nl_node_reset_link_stats+0x340/0x340 [tipc]
    [   59.642088][ T2788]  ? __skb_ext_del+0x270/0x270
    [   59.642594][ T2788]  genl_lock_dumpit+0x85/0xb0
    [   59.643050][ T2788]  netlink_dump+0x49c/0xed0
    [   59.643529][ T2788]  ? __netlink_sendskb+0xc0/0xc0
    [   59.644044][ T2788]  ? __netlink_dump_start+0x190/0x800
    [   59.644617][ T2788]  ? __mutex_unlock_slowpath+0xd0/0x670
    [   59.645177][ T2788]  __netlink_dump_start+0x5a0/0x800
    [   59.645692][ T2788]  genl_rcv_msg+0xa75/0xe90
    [   59.646144][ T2788]  ? __lock_acquire+0xdfe/0x3de0
    [   59.646692][ T2788]  ? genl_family_rcv_msg_attrs_parse+0x320/0x320
    [   59.647340][ T2788]  ? genl_lock_dumpit+0xb0/0xb0
    [   59.647821][ T2788]  ? genl_unlock+0x20/0x20
    [   59.648290][ T2788]  ? genl_parallel_done+0xe0/0xe0
    [   59.648787][ T2788]  ? find_held_lock+0x39/0x1d0
    [   59.649276][ T2788]  ? genl_rcv+0x15/0x40
    [   59.649722][ T2788]  ? lock_contended+0xcd0/0xcd0
    [   59.650296][ T2788]  netlink_rcv_skb+0x121/0x350
    [   59.650828][ T2788]  ? genl_family_rcv_msg_attrs_parse+0x320/0x320
    [   59.651491][ T2788]  ? netlink_ack+0x940/0x940
    [   59.651953][ T2788]  ? lock_acquire+0x164/0x3b0
    [   59.652449][ T2788]  genl_rcv+0x24/0x40
    [   59.652841][ T2788]  netlink_unicast+0x421/0x600
    [ ... ]
    
    Fixes: 7e4369057806 ("tipc: fix a slab object leak")
    Fixes: a62fbccecd62 ("tipc: make subscriber server support net namespace")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e12119e721ba820bb53085925d18f79f7a6189db
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Dec 5 10:10:15 2019 -0800

    tcp: md5: fix potential overestimation of TCP option space
    
    [ Upstream commit 9424e2e7ad93ffffa88f882c9bc5023570904b55 ]
    
    Back in 2008, Adam Langley fixed the corner case of packets for flows
    having all of the following options : MD5 TS SACK
    
    Since MD5 needs 20 bytes, and TS needs 12 bytes, no sack block
    can be cooked from the remaining 8 bytes.
    
    tcp_established_options() correctly sets opts->num_sack_blocks
    to zero, but returns 36 instead of 32.
    
    This means TCP cooks packets with 4 extra bytes at the end
    of options, containing unitialized bytes.
    
    Fixes: 33ad798c924b ("tcp: options clean up")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1c79f98f7e9fde91a1c317977e5e73dab7ed682
Author: Aaron Conole <aconole@redhat.com>
Date:   Tue Dec 3 16:34:13 2019 -0500

    openvswitch: support asymmetric conntrack
    
    [ Upstream commit 5d50aa83e2c8e91ced2cca77c198b468ca9210f4 ]
    
    The openvswitch module shares a common conntrack and NAT infrastructure
    exposed via netfilter.  It's possible that a packet needs both SNAT and
    DNAT manipulation, due to e.g. tuple collision.  Netfilter can support
    this because it runs through the NAT table twice - once on ingress and
    again after egress.  The openvswitch module doesn't have such capability.
    
    Like netfilter hook infrastructure, we should run through NAT twice to
    keep the symmetry.
    
    Fixes: 05752523e565 ("openvswitch: Interface with NAT.")
    Signed-off-by: Aaron Conole <aconole@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4939f3c32e0a44b8809a1d6974f84f25ca99e598
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Fri Dec 6 14:28:20 2019 +0200

    net: ethernet: ti: cpsw: fix extra rx interrupt
    
    [ Upstream commit 51302f77bedab8768b761ed1899c08f89af9e4e2 ]
    
    Now RX interrupt is triggered twice every time, because in
    cpsw_rx_interrupt() it is asked first and then disabled. So there will be
    pending interrupt always, when RX interrupt is enabled again in NAPI
    handler.
    
    Fix it by first disabling IRQ and then do ask.
    
    Fixes: 870915feabdc ("drivers: net: cpsw: remove disable_irq/enable_irq as irq can be masked from cpsw itself")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b979958ec304e331881882c5481c4066659343b0
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Tue Dec 3 16:48:06 2019 +0200

    net: bridge: deny dev_set_mac_address() when unregistering
    
    [ Upstream commit c4b4c421857dc7b1cf0dccbd738472360ff2cd70 ]
    
    We have an interesting memory leak in the bridge when it is being
    unregistered and is a slave to a master device which would change the
    mac of its slaves on unregister (e.g. bond, team). This is a very
    unusual setup but we do end up leaking 1 fdb entry because
    dev_set_mac_address() would cause the bridge to insert the new mac address
    into its table after all fdbs are flushed, i.e. after dellink() on the
    bridge has finished and we call NETDEV_UNREGISTER the bond/team would
    release it and will call dev_set_mac_address() to restore its original
    address and that in turn will add an fdb in the bridge.
    One fix is to check for the bridge dev's reg_state in its
    ndo_set_mac_address callback and return an error if the bridge is not in
    NETREG_REGISTERED.
    
    Easy steps to reproduce:
     1. add bond in mode != A/B
     2. add any slave to the bond
     3. add bridge dev as a slave to the bond
     4. destroy the bridge device
    
    Trace:
     unreferenced object 0xffff888035c4d080 (size 128):
       comm "ip", pid 4068, jiffies 4296209429 (age 1413.753s)
       hex dump (first 32 bytes):
         41 1d c9 36 80 88 ff ff 00 00 00 00 00 00 00 00  A..6............
         d2 19 c9 5e 3f d7 00 00 00 00 00 00 00 00 00 00  ...^?...........
       backtrace:
         [<00000000ddb525dc>] kmem_cache_alloc+0x155/0x26f
         [<00000000633ff1e0>] fdb_create+0x21/0x486 [bridge]
         [<0000000092b17e9c>] fdb_insert+0x91/0xdc [bridge]
         [<00000000f2a0f0ff>] br_fdb_change_mac_address+0xb3/0x175 [bridge]
         [<000000001de02dbd>] br_stp_change_bridge_id+0xf/0xff [bridge]
         [<00000000ac0e32b1>] br_set_mac_address+0x76/0x99 [bridge]
         [<000000006846a77f>] dev_set_mac_address+0x63/0x9b
         [<00000000d30738fc>] __bond_release_one+0x3f6/0x455 [bonding]
         [<00000000fc7ec01d>] bond_netdev_event+0x2f2/0x400 [bonding]
         [<00000000305d7795>] notifier_call_chain+0x38/0x56
         [<0000000028885d4a>] call_netdevice_notifiers+0x1e/0x23
         [<000000008279477b>] rollback_registered_many+0x353/0x6a4
         [<0000000018ef753a>] unregister_netdevice_many+0x17/0x6f
         [<00000000ba854b7a>] rtnl_delete_link+0x3c/0x43
         [<00000000adf8618d>] rtnl_dellink+0x1dc/0x20a
         [<000000009b6395fd>] rtnetlink_rcv_msg+0x23d/0x268
    
    Fixes: 43598813386f ("bridge: add local MAC address to forwarding table (v2)")
    Reported-by: syzbot+2add91c08eb181fea1bf@syzkaller.appspotmail.com
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c39c0be92c9d7c7aec963b99f95c1b72b9deafc6
Author: Ivan Bornyakov <brnkv.i1@gmail.com>
Date:   Wed May 23 17:56:11 2018 +0300

    nvme: host: core: fix precedence of ternary operator
    
    commit e9a9853c23c13a37546397b61b270999fd0fb759 upstream.
    
    Ternary operator have lower precedence then bitwise or, so 'cdw10' was
    calculated wrong.
    
    Signed-off-by: Ivan Bornyakov <brnkv.i1@gmail.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5defd32bc25f3b72265730e1b16aa49056564cde
Author: Konstantin Khorenko <khorenko@virtuozzo.com>
Date:   Wed Nov 13 12:29:50 2019 +0300

    kernel/module.c: wakeup processes in module_wq on module unload
    
    [ Upstream commit 5d603311615f612320bb77bd2a82553ef1ced5b7 ]
    
    Fix the race between load and unload a kernel module.
    
    sys_delete_module()
     try_stop_module()
      mod->state = _GOING
                                            add_unformed_module()
                                             old = find_module_all()
                                             (old->state == _GOING =>
                                              wait_event_interruptible())
    
                                             During pre-condition
                                             finished_loading() rets 0
                                             schedule()
                                             (never gets waken up later)
     free_module()
      mod->state = _UNFORMED
       list_del_rcu(&mod->list)
       (dels mod from "modules" list)
    
    return
    
    The race above leads to modprobe hanging forever on loading
    a module.
    
    Error paths on loading module call wake_up_all(&module_wq) after
    freeing module, so let's do the same on straight module unload.
    
    Fixes: 6e6de3dee51a ("kernel/module.c: Only return -EEXIST for modules that have finished loading")
    Reviewed-by: Prarit Bhargava <prarit@redhat.com>
    Signed-off-by: Konstantin Khorenko <khorenko@virtuozzo.com>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f265cbdab03d1c6c7617a2a23a4107cb10bf5f9f
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Thu Dec 5 10:30:22 2019 +0200

    net/mlx5e: Fix SFF 8472 eeprom length
    
    [ Upstream commit c431f8597863a91eea6024926e0c1b179cfa4852 ]
    
    SFF 8472 eeprom length is 512 bytes. Fix module info return value to
    support 512 bytes read.
    
    Fixes: ace329f4ab3b ("net/mlx5e: ethtool, Remove unsupported SFP EEPROM high pages query")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Reviewed-by: Aya Levin <ayal@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b67825b8dc60cb8436419d2e3700a21ba842f45
Author: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
Date:   Tue Oct 1 11:03:59 2019 +0300

    sunrpc: fix crash when cache_head become valid before update
    
    [ Upstream commit 5fcaf6982d1167f1cd9b264704f6d1ef4c505d54 ]
    
    I was investigating a crash in our Virtuozzo7 kernel which happened in
    in svcauth_unix_set_client. I found out that we access m_client field
    in ip_map structure, which was received from sunrpc_cache_lookup (we
    have a bit older kernel, now the code is in sunrpc_cache_add_entry), and
    these field looks uninitialized (m_client == 0x74 don't look like a
    pointer) but in the cache_head in flags we see 0x1 which is CACHE_VALID.
    
    It looks like the problem appeared from our previous fix to sunrpc (1):
    commit 4ecd55ea0742 ("sunrpc: fix cache_head leak due to queued
    request")
    
    And we've also found a patch already fixing our patch (2):
    commit d58431eacb22 ("sunrpc: don't mark uninitialised items as VALID.")
    
    Though the crash is eliminated, I think the core of the problem is not
    completely fixed:
    
    Neil in the patch (2) makes cache_head CACHE_NEGATIVE, before
    cache_fresh_locked which was added in (1) to fix crash. These way
    cache_is_valid won't say the cache is valid anymore and in
    svcauth_unix_set_client the function cache_check will return error
    instead of 0, and we don't count entry as initialized.
    
    But it looks like we need to remove cache_fresh_locked completely in
    sunrpc_cache_lookup:
    
    In (1) we've only wanted to make cache_fresh_unlocked->cache_dequeue so
    that cache_requests with no readers also release corresponding
    cache_head, to fix their leak.  We with Vasily were not sure if
    cache_fresh_locked and cache_fresh_unlocked should be used in pair or
    not, so we've guessed to use them in pair.
    
    Now we see that we don't want the CACHE_VALID bit set here by
    cache_fresh_locked, as "valid" means "initialized" and there is no
    initialization in sunrpc_cache_add_entry. Both expiry_time and
    last_refresh are not used in cache_fresh_unlocked code-path and also not
    required for the initial fix.
    
    So to conclude cache_fresh_locked was called by mistake, and we can just
    safely remove it instead of crutching it with CACHE_NEGATIVE. It looks
    ideologically better for me. Hope I don't miss something here.
    
    Here is our crash backtrace:
    [13108726.326291] BUG: unable to handle kernel NULL pointer dereference at 0000000000000074
    [13108726.326365] IP: [<ffffffffc01f79eb>] svcauth_unix_set_client+0x2ab/0x520 [sunrpc]
    [13108726.326448] PGD 0
    [13108726.326468] Oops: 0002 [#1] SMP
    [13108726.326497] Modules linked in: nbd isofs xfs loop kpatch_cumulative_81_0_r1(O) xt_physdev nfnetlink_queue bluetooth rfkill ip6table_nat nf_nat_ipv6 ip_vs_wrr ip_vs_wlc ip_vs_sh nf_conntrack_netlink ip_vs_sed ip_vs_pe_sip nf_conntrack_sip ip_vs_nq ip_vs_lc ip_vs_lblcr ip_vs_lblc ip_vs_ftp ip_vs_dh nf_nat_ftp nf_conntrack_ftp iptable_raw xt_recent nf_log_ipv6 xt_hl ip6t_rt nf_log_ipv4 nf_log_common xt_LOG xt_limit xt_TCPMSS xt_tcpmss vxlan ip6_udp_tunnel udp_tunnel xt_statistic xt_NFLOG nfnetlink_log dummy xt_mark xt_REDIRECT nf_nat_redirect raw_diag udp_diag tcp_diag inet_diag netlink_diag af_packet_diag unix_diag rpcsec_gss_krb5 xt_addrtype ip6t_rpfilter ipt_REJECT nf_reject_ipv4 ip6t_REJECT nf_reject_ipv6 ebtable_nat ebtable_broute nf_conntrack_ipv6 nf_defrag_ipv6 ip6table_mangle ip6table_raw nfsv4
    [13108726.327173]  dns_resolver cls_u32 binfmt_misc arptable_filter arp_tables ip6table_filter ip6_tables devlink fuse_kio_pcs ipt_MASQUERADE nf_nat_masquerade_ipv4 xt_nat iptable_nat nf_nat_ipv4 xt_comment nf_conntrack_ipv4 nf_defrag_ipv4 xt_wdog_tmo xt_multiport bonding xt_set xt_conntrack iptable_filter iptable_mangle kpatch(O) ebtable_filter ebt_among ebtables ip_set_hash_ip ip_set nfnetlink vfat fat skx_edac intel_powerclamp coretemp intel_rapl iosf_mbi kvm_intel kvm irqbypass fuse pcspkr ses enclosure joydev sg mei_me hpwdt hpilo lpc_ich mei ipmi_si shpchp ipmi_devintf ipmi_msghandler xt_ipvs acpi_power_meter ip_vs_rr nfsv3 nfsd auth_rpcgss nfs_acl nfs lockd grace fscache nf_nat cls_fw sch_htb sch_cbq sch_sfq ip_vs em_u32 nf_conntrack tun br_netfilter veth overlay ip6_vzprivnet ip6_vznetstat ip_vznetstat
    [13108726.327817]  ip_vzprivnet vziolimit vzevent vzlist vzstat vznetstat vznetdev vzmon vzdev bridge pio_kaio pio_nfs pio_direct pfmt_raw pfmt_ploop1 ploop ip_tables ext4 mbcache jbd2 sd_mod crc_t10dif crct10dif_generic mgag200 i2c_algo_bit drm_kms_helper scsi_transport_iscsi 8021q syscopyarea sysfillrect garp sysimgblt fb_sys_fops mrp stp ttm llc bnx2x crct10dif_pclmul crct10dif_common crc32_pclmul crc32c_intel drm dm_multipath ghash_clmulni_intel uas aesni_intel lrw gf128mul glue_helper ablk_helper cryptd tg3 smartpqi scsi_transport_sas mdio libcrc32c i2c_core usb_storage ptp pps_core wmi sunrpc dm_mirror dm_region_hash dm_log dm_mod [last unloaded: kpatch_cumulative_82_0_r1]
    [13108726.328403] CPU: 35 PID: 63742 Comm: nfsd ve: 51332 Kdump: loaded Tainted: G        W  O   ------------   3.10.0-862.20.2.vz7.73.29 #1 73.29
    [13108726.328491] Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 10/02/2018
    [13108726.328554] task: ffffa0a6a41b1160 ti: ffffa0c2a74bc000 task.ti: ffffa0c2a74bc000
    [13108726.328610] RIP: 0010:[<ffffffffc01f79eb>]  [<ffffffffc01f79eb>] svcauth_unix_set_client+0x2ab/0x520 [sunrpc]
    [13108726.328706] RSP: 0018:ffffa0c2a74bfd80  EFLAGS: 00010246
    [13108726.328750] RAX: 0000000000000001 RBX: ffffa0a6183ae000 RCX: 0000000000000000
    [13108726.328811] RDX: 0000000000000074 RSI: 0000000000000286 RDI: ffffa0c2a74bfcf0
    [13108726.328864] RBP: ffffa0c2a74bfe00 R08: ffffa0bab8c22960 R09: 0000000000000001
    [13108726.328916] R10: 0000000000000001 R11: 0000000000000001 R12: ffffa0a32aa7f000
    [13108726.328969] R13: ffffa0a6183afac0 R14: ffffa0c233d88d00 R15: ffffa0c2a74bfdb4
    [13108726.329022] FS:  0000000000000000(0000) GS:ffffa0e17f9c0000(0000) knlGS:0000000000000000
    [13108726.329081] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [13108726.332311] CR2: 0000000000000074 CR3: 00000026a1b28000 CR4: 00000000007607e0
    [13108726.334606] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [13108726.336754] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [13108726.338908] PKRU: 00000000
    [13108726.341047] Call Trace:
    [13108726.343074]  [<ffffffff8a2c78b4>] ? groups_alloc+0x34/0x110
    [13108726.344837]  [<ffffffffc01f5eb4>] svc_set_client+0x24/0x30 [sunrpc]
    [13108726.346631]  [<ffffffffc01f2ac1>] svc_process_common+0x241/0x710 [sunrpc]
    [13108726.348332]  [<ffffffffc01f3093>] svc_process+0x103/0x190 [sunrpc]
    [13108726.350016]  [<ffffffffc07d605f>] nfsd+0xdf/0x150 [nfsd]
    [13108726.351735]  [<ffffffffc07d5f80>] ? nfsd_destroy+0x80/0x80 [nfsd]
    [13108726.353459]  [<ffffffff8a2bf741>] kthread+0xd1/0xe0
    [13108726.355195]  [<ffffffff8a2bf670>] ? create_kthread+0x60/0x60
    [13108726.356896]  [<ffffffff8a9556dd>] ret_from_fork_nospec_begin+0x7/0x21
    [13108726.358577]  [<ffffffff8a2bf670>] ? create_kthread+0x60/0x60
    [13108726.360240] Code: 4c 8b 45 98 0f 8e 2e 01 00 00 83 f8 fe 0f 84 76 fe ff ff 85 c0 0f 85 2b 01 00 00 49 8b 50 40 b8 01 00 00 00 48 89 93 d0 1a 00 00 <f0> 0f c1 02 83 c0 01 83 f8 01 0f 8e 53 02 00 00 49 8b 44 24 38
    [13108726.363769] RIP  [<ffffffffc01f79eb>] svcauth_unix_set_client+0x2ab/0x520 [sunrpc]
    [13108726.365530]  RSP <ffffa0c2a74bfd80>
    [13108726.367179] CR2: 0000000000000074
    
    Fixes: d58431eacb22 ("sunrpc: don't mark uninitialised items as VALID.")
    Signed-off-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Acked-by: NeilBrown <neilb@suse.de>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a1e9ff59d32729a976133447d06dd21de4e5e9e
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Sep 20 13:39:57 2019 -0700

    workqueue: Fix missing kfree(rescuer) in destroy_workqueue()
    
    commit 8efe1223d73c218ce7e8b2e0e9aadb974b582d7f upstream.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Qian Cai <cai@lca.pw>
    Fixes: def98c84b6cd ("workqueue: Fix spurious sanity check failures in destroy_workqueue()")
    Cc: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 382a2f0030e62d3832f5d2be7cbe9c27e1bf47ec
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Nov 4 16:26:53 2019 +0800

    blk-mq: make sure that line break can be printed
    
    commit d2c9be89f8ebe7ebcc97676ac40f8dec1cf9b43a upstream.
    
    8962842ca5ab ("blk-mq: avoid sysfs buffer overflow with too many CPU cores")
    avoids sysfs buffer overflow, and reserves one character for line break.
    However, the last snprintf() doesn't get correct 'size' parameter passed
    in, so fixed it.
    
    Fixes: 8962842ca5ab ("blk-mq: avoid sysfs buffer overflow with too many CPU cores")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2022b5e614e63926461029cbe1fe74a1cac1abe6
Author: yangerkun <yangerkun@huawei.com>
Date:   Thu Sep 19 14:35:08 2019 +0800

    ext4: fix a bug in ext4_wait_for_tail_page_commit
    
    commit 565333a1554d704789e74205989305c811fd9c7a upstream.
    
    No need to wait for any commit once the page is fully truncated.
    Besides, it may confuse e.g. concurrent ext4_writepage() with the page
    still be dirty (will be cleared by truncate_pagecache() in
    ext4_setattr()) but buffers has been freed; and then trigger a bug
    show as below:
    
    [   26.057508] ------------[ cut here ]------------
    [   26.058531] kernel BUG at fs/ext4/inode.c:2134!
    ...
    [   26.088130] Call trace:
    [   26.088695]  ext4_writepage+0x914/0xb28
    [   26.089541]  writeout.isra.4+0x1b4/0x2b8
    [   26.090409]  move_to_new_page+0x3b0/0x568
    [   26.091338]  __unmap_and_move+0x648/0x988
    [   26.092241]  unmap_and_move+0x48c/0xbb8
    [   26.093096]  migrate_pages+0x220/0xb28
    [   26.093945]  kernel_mbind+0x828/0xa18
    [   26.094791]  __arm64_sys_mbind+0xc8/0x138
    [   26.095716]  el0_svc_common+0x190/0x490
    [   26.096571]  el0_svc_handler+0x60/0xd0
    [   26.097423]  el0_svc+0x8/0xc
    
    Run the procedure (generate by syzkaller) parallel with ext3.
    
    void main()
    {
            int fd, fd1, ret;
            void *addr;
            size_t length = 4096;
            int flags;
            off_t offset = 0;
            char *str = "12345";
    
            fd = open("a", O_RDWR | O_CREAT);
            assert(fd >= 0);
    
            /* Truncate to 4k */
            ret = ftruncate(fd, length);
            assert(ret == 0);
    
            /* Journal data mode */
            flags = 0xc00f;
            ret = ioctl(fd, _IOW('f', 2, long), &flags);
            assert(ret == 0);
    
            /* Truncate to 0 */
            fd1 = open("a", O_TRUNC | O_NOATIME);
            assert(fd1 >= 0);
    
            addr = mmap(NULL, length, PROT_WRITE | PROT_READ,
                                            MAP_SHARED, fd, offset);
            assert(addr != (void *)-1);
    
            memcpy(addr, str, 5);
            mbind(addr, length, 0, 0, 0, MPOL_MF_MOVE);
    }
    
    And the bug will be triggered once we seen the below order.
    
    reproduce1                         reproduce2
    
    ...                            |   ...
    truncate to 4k                 |
    change to journal data mode    |
                                   |   memcpy(set page dirty)
    truncate to 0:                 |
    ext4_setattr:                  |
    ...                            |
    ext4_wait_for_tail_page_commit |
                                   |   mbind(trigger bug)
    truncate_pagecache(clean dirty)|   ...
    ...                            |
    
    mbind will call ext4_writepage() since the page still be dirty, and then
    report the bug since the buffers has been free. Fix it by return
    directly once offset equals to 0 which means the page has been fully
    truncated.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Link: https://lore.kernel.org/r/20190919063508.1045-1-yangerkun@huawei.com
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9318669a525361b364ddc22ca340ccbcb0b4593
Author: Chen Jun <chenjun102@huawei.com>
Date:   Sat Nov 30 17:58:11 2019 -0800

    mm/shmem.c: cast the type of unmap_start to u64
    
    commit aa71ecd8d86500da6081a72da6b0b524007e0627 upstream.
    
    In 64bit system. sb->s_maxbytes of shmem filesystem is MAX_LFS_FILESIZE,
    which equal LLONG_MAX.
    
    If offset > LLONG_MAX - PAGE_SIZE, offset + len < LLONG_MAX in
    shmem_fallocate, which will pass the checking in vfs_fallocate.
    
            /* Check for wrap through zero too */
            if (((offset + len) > inode->i_sb->s_maxbytes) || ((offset + len) < 0))
                    return -EFBIG;
    
    loff_t unmap_start = round_up(offset, PAGE_SIZE) in shmem_fallocate
    causes a overflow.
    
    Syzkaller reports a overflow problem in mm/shmem:
    
      UBSAN: Undefined behaviour in mm/shmem.c:2014:10
      signed integer overflow: '9223372036854775807 + 1' cannot be represented in type 'long long int'
      CPU: 0 PID:17076 Comm: syz-executor0 Not tainted 4.1.46+ #1
      Hardware name: linux, dummy-virt (DT)
      Call trace:
         dump_backtrace+0x0/0x2c8 arch/arm64/kernel/traps.c:100
         show_stack+0x20/0x30 arch/arm64/kernel/traps.c:238
         __dump_stack lib/dump_stack.c:15 [inline]
         ubsan_epilogue+0x18/0x70 lib/ubsan.c:164
         handle_overflow+0x158/0x1b0 lib/ubsan.c:195
         shmem_fallocate+0x6d0/0x820 mm/shmem.c:2104
         vfs_fallocate+0x238/0x428 fs/open.c:312
         SYSC_fallocate fs/open.c:335 [inline]
         SyS_fallocate+0x54/0xc8 fs/open.c:239
    
    The highest bit of unmap_start will be appended with sign bit 1
    (overflow) when calculate shmem_falloc.start:
    
        shmem_falloc.start = unmap_start >> PAGE_SHIFT.
    
    Fix it by casting the type of unmap_start to u64, when right shifted.
    
    This bug is found in LTS Linux 4.1.  It also seems to exist in mainline.
    
    Link: http://lkml.kernel.org/r/1573867464-5107-1-git-send-email-chenjun102@huawei.com
    Signed-off-by: Chen Jun <chenjun102@huawei.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Qian Cai <cai@lca.pw>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 522b47901dda436019347a659d1a81e8bd2a38ad
Author: Will Deacon <will@kernel.org>
Date:   Mon Nov 4 15:58:15 2019 +0000

    firmware: qcom: scm: Ensure 'a0' status code is treated as signed
    
    commit ff34f3cce278a0982a7b66b1afaed6295141b1fc upstream.
    
    The 'a0' member of 'struct arm_smccc_res' is declared as 'unsigned long',
    however the Qualcomm SCM firmware interface driver expects to receive
    negative error codes via this field, so ensure that it's cast to 'long'
    before comparing to see if it is less than 0.
    
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0243d180952f3da4f8153098e233e9d6ee2968ec
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Oct 24 10:31:27 2019 -0400

    reiserfs: fix extended attributes on the root directory
    
    [ Upstream commit 60e4cf67a582d64f07713eda5fcc8ccdaf7833e6 ]
    
    Since commit d0a5b995a308 (vfs: Add IOP_XATTR inode operations flag)
    extended attributes haven't worked on the root directory in reiserfs.
    
    This is due to reiserfs conditionally setting the sb->s_xattrs handler
    array depending on whether it located or create the internal privroot
    directory.  It necessarily does this after the root inode is already
    read in.  The IOP_XATTR flag is set during inode initialization, so
    it never gets set on the root directory.
    
    This commit unconditionally assigns sb->s_xattrs and clears IOP_XATTR on
    internal inodes.  The old return values due to the conditional assignment
    are handled via open_xa_root, which now returns EOPNOTSUPP as the VFS
    would have done.
    
    Link: https://lore.kernel.org/r/20191024143127.17509-1-jeffm@suse.com
    CC: stable@vger.kernel.org
    Fixes: d0a5b995a308 ("vfs: Add IOP_XATTR inode operations flag")
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 444bdefc6424671f66ffdcf52f159a0431a23b27
Author: Vincenzo Frascino <vincenzo.frascino@arm.com>
Date:   Mon Dec 2 07:57:29 2019 +0000

    powerpc: Fix vDSO clock_getres()
    
    [ Upstream commit 552263456215ada7ee8700ce022d12b0cffe4802 ]
    
    clock_getres in the vDSO library has to preserve the same behaviour
    of posix_get_hrtimer_res().
    
    In particular, posix_get_hrtimer_res() does:
        sec = 0;
        ns = hrtimer_resolution;
    and hrtimer_resolution depends on the enablement of the high
    resolution timers that can happen either at compile or at run time.
    
    Fix the powerpc vdso implementation of clock_getres keeping a copy of
    hrtimer_resolution in vdso data and using that directly.
    
    Fixes: a7f290dad32e ("[PATCH] powerpc: Merge vdso's and add vdso support to 32 bits kernel")
    Cc: stable@vger.kernel.org
    Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    [chleroy: changed CLOCK_REALTIME_RES to CLOCK_HRTIMER_RES]
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/a55eca3a5e85233838c2349783bcb5164dae1d09.1575273217.git.christophe.leroy@c-s.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819f623f17d786ed33c8a264e27c5e8e4f8354ed
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Aug 8 20:01:52 2019 -0700

    scsi: qla2xxx: Always check the qla2x00_wait_for_hba_online() return value
    
    [ Upstream commit e6803efae5acd109fad9f2f07dab674563441a53 ]
    
    This patch fixes several Coverity complaints about not always checking
    the qla2x00_wait_for_hba_online() return value.
    
    Cc: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Tested-by: Himanshu Madhani <hmadhani@marvell.com>
    Reviewed-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c11c7a5b616d4ddac3cde52ce762c373c378a5f7
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Aug 8 20:01:48 2019 -0700

    scsi: qla2xxx: Fix qla24xx_process_bidir_cmd()
    
    [ Upstream commit c29282c65d1cf54daeea63be46243d7f69d72f4d ]
    
    Set the r??_data_len variables before using these instead of after.
    
    This patch fixes the following Coverity complaint:
    
    const: At condition req_data_len != rsp_data_len, the value of req_data_len
    must be equal to 0.
    const: At condition req_data_len != rsp_data_len, the value of rsp_data_len
    must be equal to 0.
    dead_error_condition: The condition req_data_len != rsp_data_len cannot be
    true.
    
    Cc: Himanshu Madhani <hmadhani@marvell.com>
    Fixes: a9b6f722f62d ("[SCSI] qla2xxx: Implementation of bidirectional.") # v3.7.
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Tested-by: Himanshu Madhani <hmadhani@marvell.com>
    Reviewed-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e5fdbeaa7d12f9e3b4b9ffaf65f9868fe5858ba
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Aug 8 20:01:40 2019 -0700

    scsi: qla2xxx: Fix session lookup in qlt_abort_work()
    
    [ Upstream commit ac452b8e79320c9e90c78edf32ba2d42431e4daf ]
    
    Pass the correct session ID to find_sess_by_s_id() instead of passing an
    uninitialized variable.
    
    Cc: Himanshu Madhani <hmadhani@marvell.com>
    Fixes: 2d70c103fd2a ("[SCSI] qla2xxx: Add LLD target-mode infrastructure for >= 24xx series") # v3.5.
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Tested-by: Himanshu Madhani <hmadhani@marvell.com>
    Reviewed-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f37bd0900e5a52fc34473d0723045f3ade496d8
Author: Himanshu Madhani <hmadhani@marvell.com>
Date:   Fri Jul 26 09:07:26 2019 -0700

    scsi: qla2xxx: Fix DMA unmap leak
    
    [ Upstream commit 5d328de64d89400dcf9911125844d8adc0db697f ]
    
    With debug kernel we see following wanings indicating memory leak.
    
    [28809.523959] WARNING: CPU: 3 PID: 6790 at lib/dma-debug.c:978
    dma_debug_device_change+0x166/0x1d0
    [28809.523964] pci 0000:0c:00.6: DMA-API: device driver has pending DMA
    allocations while released from device [count=5]
    [28809.523964] One of leaked entries details: [device
    address=0x00000002aefe4000] [size=8208 bytes] [mapped with DMA_BIDIRECTIONAL]
    [mapped as coherent]
    
    Fix this by unmapping DMA memory.
    
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af9b59cb7013b888d005714a7ea4d21b7485939e
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Aug 5 18:27:09 2019 +0200

    pinctrl: samsung: Fix device node refcount leaks in S3C64xx wakeup controller init
    
    [ Upstream commit 7f028caadf6c37580d0f59c6c094ed09afc04062 ]
    
    In s3c64xx_eint_eint0_init() the for_each_child_of_node() loop is used
    with a break to find a matching child node.  Although each iteration of
    for_each_child_of_node puts the previous node, but early exit from loop
    misses it.  This leads to leak of device node.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 61dd72613177 ("pinctrl: Add pinctrl-s3c64xx driver")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7fbce5a2410c053d526c0696f1645142ee34d32
Author: Jarkko Nikula <jarkko.nikula@bitmer.com>
Date:   Sat Nov 16 17:16:51 2019 +0200

    ARM: dts: omap3-tao3530: Fix incorrect MMC card detection GPIO polarity
    
    [ Upstream commit 287897f9aaa2ad1c923d9875914f57c4dc9159c8 ]
    
    The MMC card detection GPIO polarity is active low on TAO3530, like in many
    other similar boards. Now the card is not detected and it is unable to
    mount rootfs from an SD card.
    
    Fix this by using the correct polarity.
    
    This incorrect polarity was defined already in the commit 30d95c6d7092
    ("ARM: dts: omap3: Add Technexion TAO3530 SOM omap3-tao3530.dtsi") in v3.18
    kernel and later changed to use defined GPIO constants in v4.4 kernel by
    the commit 3a637e008e54 ("ARM: dts: Use defined GPIO constants in flags
    cell for OMAP2+ boards").
    
    While the latter commit did not introduce the issue I'm marking it with
    Fixes tag due the v4.4 kernels still being maintained.
    
    Fixes: 3a637e008e54 ("ARM: dts: Use defined GPIO constants in flags cell for OMAP2+ boards")
    Cc: linux-stable <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Jarkko Nikula <jarkko.nikula@bitmer.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5b7c36a4f7d8b658d96dde70efb1d5e2f23cb5f
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Fri May 24 11:16:22 2019 +0800

    ath10k: fix fw crash by moving chip reset after napi disabled
    
    [ Upstream commit 08d80e4cd27ba19f9bee9e5f788f9a9fc440a22f ]
    
    On SMP platform, when continuously running wifi up/down, the napi
    poll can be scheduled during chip reset, which will call
    ath10k_pci_has_fw_crashed() to check the fw status. But in the reset
    period, the value from FW_INDICATOR_ADDRESS register will return
    0xdeadbeef, which also be treated as fw crash. Fix the issue by
    moving chip reset after napi disabled.
    
    ath10k_pci 0000:01:00.0: firmware crashed! (guid 73b30611-5b1e-4bdd-90b4-64c81eb947b6)
    ath10k_pci 0000:01:00.0: qca9984/qca9994 hw1.0 target 0x01000000 chip_id 0x00000000 sub 168c:cafe
    ath10k_pci 0000:01:00.0: htt-ver 2.2 wmi-op 6 htt-op 4 cal otp max-sta 512 raw 0 hwcrypto 1
    ath10k_pci 0000:01:00.0: failed to get memcpy hi address for firmware address 4: -16
    ath10k_pci 0000:01:00.0: failed to read firmware dump area: -16
    ath10k_pci 0000:01:00.0: Copy Engine register dump:
    ath10k_pci 0000:01:00.0: [00]: 0x0004a000   0   0   0   0
    ath10k_pci 0000:01:00.0: [01]: 0x0004a400   0   0   0   0
    ath10k_pci 0000:01:00.0: [02]: 0x0004a800   0   0   0   0
    ath10k_pci 0000:01:00.0: [03]: 0x0004ac00   0   0   0   0
    ath10k_pci 0000:01:00.0: [04]: 0x0004b000   0   0   0   0
    ath10k_pci 0000:01:00.0: [05]: 0x0004b400   0   0   0   0
    ath10k_pci 0000:01:00.0: [06]: 0x0004b800   0   0   0   0
    ath10k_pci 0000:01:00.0: [07]: 0x0004bc00   1   0   1   0
    ath10k_pci 0000:01:00.0: [08]: 0x0004c000   0   0   0   0
    ath10k_pci 0000:01:00.0: [09]: 0x0004c400   0   0   0   0
    ath10k_pci 0000:01:00.0: [10]: 0x0004c800   0   0   0   0
    ath10k_pci 0000:01:00.0: [11]: 0x0004cc00   0   0   0   0
    
    Tested HW: QCA9984,QCA9887,WCN3990
    
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5786186b0b2c29dd9e933e0e1884adf9d8815882
Author: Shirish S <Shirish.S@amd.com>
Date:   Wed Jan 16 15:10:40 2019 +0000

    x86/MCE/AMD: Carve out the MC4_MISC thresholding quirk
    
    [ Upstream commit 30aa3d26edb0f3d7992757287eec0ca588a5c259 ]
    
    The MC4_MISC thresholding quirk needs to be applied during S5 -> S0 and
    S3 -> S0 state transitions, which follow different code paths. Carve it
    out into a separate function and call it mce_amd_feature_init() where
    the two code paths of the state transitions converge.
    
     [ bp: massage commit message and the carved out function. ]
    
    Signed-off-by: Shirish S <shirish.s@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Cc: Yazen Ghannam <yazen.ghannam@amd.com>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/1547651417-23583-3-git-send-email-shirish.s@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 955038be8f0d3b1783c92819f4a232ce07855183
Author: Shirish S <Shirish.S@amd.com>
Date:   Thu Jan 10 07:54:40 2019 +0000

    x86/MCE/AMD: Turn off MC4_MISC thresholding on all family 0x15 models
    
    [ Upstream commit c95b323dcd3598dd7ef5005d6723c1ba3b801093 ]
    
    MC4_MISC thresholding is not supported on all family 0x15 processors,
    hence skip the x86_model check when applying the quirk.
    
     [ bp: massage commit message. ]
    
    Signed-off-by: Shirish S <shirish.s@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/1547106849-3476-2-git-send-email-shirish.s@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4b2f5b6690ff4be83dfdf88c07508c014851287
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Nov 19 20:48:19 2018 +0800

    e100: Fix passing zero to 'PTR_ERR' warning in e100_load_ucode_wait
    
    [ Upstream commit cd0d465bb697a9c7bf66a9fe940f7981232f1676 ]
    
    Fix a static code checker warning:
    drivers/net/ethernet/intel/e100.c:1349
     e100_load_ucode_wait() warn: passing zero to 'PTR_ERR'
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afb5d83f04870f28f1b7f7100303a4c9d0fa51b7
Author: James Smart <jsmart2021@gmail.com>
Date:   Thu Nov 29 16:09:33 2018 -0800

    scsi: lpfc: Cap NPIV vports to 256
    
    [ Upstream commit 8b47ae69e049ae0b3373859d901f0334322f9fe9 ]
    
    Depending on the chipset, the number of NPIV vports may vary and be in
    excess of what most switches support (256). To avoid confusion with the
    users, limit the reported NPIV vports to 256.
    
    Additionally correct the 16G adapter which is reporting a bogus NPIV vport
    number if the link is down.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26a999b2ade84583d194c0f9360558b1774581f5
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:39 2019 +0100

    omap: pdata-quirks: remove openpandora quirks for mmc3 and wl1251
    
    [ Upstream commit 2398c41d64321e62af54424fd399964f3d48cdc2 ]
    
    With a wl1251 child node of mmc3 in the device tree decoded
    in omap_hsmmc.c to handle special wl1251 initialization, we do
    no longer need to instantiate the mmc3 through pdata quirks.
    
    We also can remove the wlan regulator and reset/interrupt definitions
    and do them through device tree.
    
    Fixes: 81eef6ca9201 ("mmc: omap_hsmmc: Use dma_request_chan() for requesting DMA channel")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.7+
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 663be68b5489d9fc7ec128c021c9926ce08caa32
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 11 16:41:20 2019 +0100

    Btrfs: fix negative subv_writers counter and data space leak after buffered write
    
    [ Upstream commit a0e248bb502d5165b3314ac3819e888fdcdf7d9f ]
    
    When doing a buffered write it's possible to leave the subv_writers
    counter of the root, used for synchronization between buffered nocow
    writers and snapshotting. This happens in an exceptional case like the
    following:
    
    1) We fail to allocate data space for the write, since there's not
       enough available data space nor enough unallocated space for allocating
       a new data block group;
    
    2) Because of that failure, we try to go to NOCOW mode, which succeeds
       and therefore we set the local variable 'only_release_metadata' to true
       and set the root's sub_writers counter to 1 through the call to
       btrfs_start_write_no_snapshotting() made by check_can_nocow();
    
    3) The call to btrfs_copy_from_user() returns zero, which is very unlikely
       to happen but not impossible;
    
    4) No pages are copied because btrfs_copy_from_user() returned zero;
    
    5) We call btrfs_end_write_no_snapshotting() which decrements the root's
       subv_writers counter to 0;
    
    6) We don't set 'only_release_metadata' back to 'false' because we do
       it only if 'copied', the value returned by btrfs_copy_from_user(), is
       greater than zero;
    
    7) On the next iteration of the while loop, which processes the same
       page range, we are now able to allocate data space for the write (we
       got enough data space released in the meanwhile);
    
    8) After this if we fail at btrfs_delalloc_reserve_metadata(), because
       now there isn't enough free metadata space, or in some other place
       further below (prepare_pages(), lock_and_cleanup_extent_if_need(),
       btrfs_dirty_pages()), we break out of the while loop with
       'only_release_metadata' having a value of 'true';
    
    9) Because 'only_release_metadata' is 'true' we end up decrementing the
       root's subv_writers counter to -1 (through a call to
       btrfs_end_write_no_snapshotting()), and we also end up not releasing the
       data space previously reserved through btrfs_check_data_free_space().
       As a consequence the mechanism for synchronizing NOCOW buffered writes
       with snapshotting gets broken.
    
    Fix this by always setting 'only_release_metadata' to false at the start
    of each iteration.
    
    Fixes: 8257b2dc3c1a ("Btrfs: introduce btrfs_{start, end}_nocow_write() for each subvolume")
    Fixes: 7ee9e4405f26 ("Btrfs: check if we can nocow if we don't have data space")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aea2bf997803122b1ecc67bbe77ef83d29ecb46c
Author: Nuno SÃ¡ <nuno.sa@analog.com>
Date:   Mon Oct 28 17:33:49 2019 +0100

    iio: adis16480: Add debugfs_reg_access entry
    
    [ Upstream commit 4c35b7a51e2f291471f7221d112c6a45c63e83bc ]
    
    The driver is defining debugfs entries by calling
    `adis16480_debugfs_init()`. However, those entries are attached to the
    iio_dev debugfs entry which won't exist if no debugfs_reg_access
    callback is provided.
    
    Fixes: 2f3abe6cbb6c ("iio:imu: Add support for the ADIS16480 and similar IMUs")
    Signed-off-by: Nuno SÃ¡ <nuno.sa@analog.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bedf0c0e5515d82f723304db7601f816b1268f81
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed Dec 11 16:20:07 2019 +0200

    xhci: make sure interrupts are restored to correct state
    
    [ Upstream commit bd82873f23c9a6ad834348f8b83f3b6a5bca2c65 ]
    
    spin_unlock_irqrestore() might be called with stale flags after
    reading port status, possibly restoring interrupts to a incorrect
    state.
    
    If a usb2 port just finished resuming while the port status is read
    the spin lock will be temporary released and re-acquired in a separate
    function. The flags parameter is passed as value instead of a pointer,
    not updating flags properly before the final spin_unlock_irqrestore()
    is called.
    
    Cc: <stable@vger.kernel.org> # v3.12+
    Fixes: 8b3d45705e54 ("usb: Fix xHCI host issues on remote wakeup.")
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20191211142007.8847-7-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc9fd1f5bf09ff9ad9a9b706ce2357aec328bbc7
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Dec 11 16:20:02 2019 +0200

    xhci: Fix memory leak in xhci_add_in_port()
    
    [ Upstream commit ce91f1a43b37463f517155bdfbd525eb43adbd1a ]
    
    When xHCI is part of Alpine or Titan Ridge Thunderbolt controller and
    the xHCI device is hot-removed as a result of unplugging a dock for
    example, the driver leaks memory it allocates for xhci->usb3_rhub.psi
    and xhci->usb2_rhub.psi in xhci_add_in_port() as reported by kmemleak:
    
    unreferenced object 0xffff922c24ef42f0 (size 16):
      comm "kworker/u16:2", pid 178, jiffies 4294711640 (age 956.620s)
      hex dump (first 16 bytes):
        21 00 0c 00 12 00 dc 05 23 00 e0 01 00 00 00 00  !.......#.......
      backtrace:
        [<000000007ac80914>] xhci_mem_init+0xcf8/0xeb7
        [<0000000001b6d775>] xhci_init+0x7c/0x160
        [<00000000db443fe3>] xhci_gen_setup+0x214/0x340
        [<00000000fdffd320>] xhci_pci_setup+0x48/0x110
        [<00000000541e1e03>] usb_add_hcd.cold+0x265/0x747
        [<00000000ca47a56b>] usb_hcd_pci_probe+0x219/0x3b4
        [<0000000021043861>] xhci_pci_probe+0x24/0x1c0
        [<00000000b9231f25>] local_pci_probe+0x3d/0x70
        [<000000006385c9d7>] pci_device_probe+0xd0/0x150
        [<0000000070241068>] really_probe+0xf5/0x3c0
        [<0000000061f35c0a>] driver_probe_device+0x58/0x100
        [<000000009da11198>] bus_for_each_drv+0x79/0xc0
        [<000000009ce45f69>] __device_attach+0xda/0x160
        [<00000000df201aaf>] pci_bus_add_device+0x46/0x70
        [<0000000088a1bc48>] pci_bus_add_devices+0x27/0x60
        [<00000000ad9ee708>] pci_bus_add_devices+0x52/0x60
    unreferenced object 0xffff922c24ef3318 (size 8):
      comm "kworker/u16:2", pid 178, jiffies 4294711640 (age 956.620s)
      hex dump (first 8 bytes):
        34 01 05 00 35 41 0a 00                          4...5A..
      backtrace:
        [<000000007ac80914>] xhci_mem_init+0xcf8/0xeb7
        [<0000000001b6d775>] xhci_init+0x7c/0x160
        [<00000000db443fe3>] xhci_gen_setup+0x214/0x340
        [<00000000fdffd320>] xhci_pci_setup+0x48/0x110
        [<00000000541e1e03>] usb_add_hcd.cold+0x265/0x747
        [<00000000ca47a56b>] usb_hcd_pci_probe+0x219/0x3b4
        [<0000000021043861>] xhci_pci_probe+0x24/0x1c0
        [<00000000b9231f25>] local_pci_probe+0x3d/0x70
        [<000000006385c9d7>] pci_device_probe+0xd0/0x150
        [<0000000070241068>] really_probe+0xf5/0x3c0
        [<0000000061f35c0a>] driver_probe_device+0x58/0x100
        [<000000009da11198>] bus_for_each_drv+0x79/0xc0
        [<000000009ce45f69>] __device_attach+0xda/0x160
        [<00000000df201aaf>] pci_bus_add_device+0x46/0x70
        [<0000000088a1bc48>] pci_bus_add_devices+0x27/0x60
        [<00000000ad9ee708>] pci_bus_add_devices+0x52/0x60
    
    Fix this by calling kfree() for the both psi objects in
    xhci_mem_cleanup().
    
    Cc: <stable@vger.kernel.org> # 4.4+
    Fixes: 47189098f8be ("xhci: parse xhci protocol speed ID list for usb 3.1 usage")
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20191211142007.8847-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b7da9abeb399ac805ee96080d052b68cde35293
Author: Henry Lin <henryl@nvidia.com>
Date:   Wed Dec 11 16:20:04 2019 +0200

    usb: xhci: only set D3hot for pci device
    
    [ Upstream commit f2c710f7dca8457e88b4ac9de2060f011254f9dd ]
    
    Xhci driver cannot call pci_set_power_state() on non-pci xhci host
    controllers. For example, NVIDIA Tegra XHCI host controller which acts
    as platform device with XHCI_SPURIOUS_WAKEUP quirk set in some platform
    hits this issue during shutdown.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 638298dc66ea ("xhci: Fix spurious wakeups after S5 on Haswell")
    Signed-off-by: Henry Lin <henryl@nvidia.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20191211142007.8847-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ededd0420cadf149b493571640fec77b3b684060
Author: Steffen Maier <maier@linux.ibm.com>
Date:   Fri Oct 25 18:12:53 2019 +0200

    scsi: zfcp: trace channel log even for FCP command responses
    
    [ Upstream commit 100843f176109af94600e500da0428e21030ca7f ]
    
    While v2.6.26 commit b75db73159cc ("[SCSI] zfcp: Add qtcb dump to hba debug
    trace") is right that we don't want to flood the (payload) trace ring
    buffer, we don't trace successful FCP command responses by default.  So we
    can include the channel log for problem determination with failed responses
    of any FSF request type.
    
    Fixes: b75db73159cc ("[SCSI] zfcp: Add qtcb dump to hba debug trace")
    Fixes: a54ca0f62f95 ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    Cc: <stable@vger.kernel.org> #2.6.38+
    Link: https://lore.kernel.org/r/e37597b5c4ae123aaa85fd86c23a9f71e994e4a9.1572018132.git.bblock@linux.ibm.com
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bae46100ca5444b4e508025282b4a7bd52e6faea
Author: Dmitry Monakhov <dmtrmonakhov@yandex-team.ru>
Date:   Thu Oct 31 10:39:19 2019 +0000

    quota: fix livelock in dquot_writeback_dquots
    
    commit 6ff33d99fc5c96797103b48b7b0902c296f09c05 upstream.
    
    Write only quotas which are dirty at entry.
    
    XFSTEST: https://github.com/dmonakhov/xfstests/commit/b10ad23566a5bf75832a6f500e1236084083cddc
    
    Link: https://lore.kernel.org/r/20191031103920.3919-1-dmonakhov@openvz.org
    CC: stable@vger.kernel.org
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Dmitry Monakhov <dmtrmonakhov@yandex-team.ru>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b52729015c205a101d38b75206c6f7010fb3c33e
Author: Chengguang Xu <cgxu519@mykernel.net>
Date:   Tue Nov 5 12:51:00 2019 +0800

    ext2: check err when partial != NULL
    
    commit e705f4b8aa27a59f8933e8f384e9752f052c469c upstream.
    
    Check err when partial == NULL is meaningless because
    partial == NULL means getting branch successfully without
    error.
    
    CC: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20191105045100.7104-1-cgxu519@mykernel.net
    Signed-off-by: Chengguang Xu <cgxu519@mykernel.net>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 072d24ef6cb1f309f6c45c71e5b0f04a2e9d48a6
Author: Dmitry Monakhov <dmtrmonakhov@yandex-team.ru>
Date:   Thu Oct 31 10:39:20 2019 +0000

    quota: Check that quota is not dirty before release
    
    commit df4bb5d128e2c44848aeb36b7ceceba3ac85080d upstream.
    
    There is a race window where quota was redirted once we drop dq_list_lock inside dqput(),
    but before we grab dquot->dq_lock inside dquot_release()
    
    TASK1                                                       TASK2 (chowner)
    ->dqput()
      we_slept:
        spin_lock(&dq_list_lock)
        if (dquot_dirty(dquot)) {
              spin_unlock(&dq_list_lock);
              dquot->dq_sb->dq_op->write_dquot(dquot);
              goto we_slept
        if (test_bit(DQ_ACTIVE_B, &dquot->dq_flags)) {
              spin_unlock(&dq_list_lock);
              dquot->dq_sb->dq_op->release_dquot(dquot);
                                                                dqget()
                                                                mark_dquot_dirty()
                                                                dqput()
              goto we_slept;
            }
    So dquot dirty quota will be released by TASK1, but on next we_sleept loop
    we detect this and call ->write_dquot() for it.
    XFSTEST: https://github.com/dmonakhov/xfstests/commit/440a80d4cbb39e9234df4d7240aee1d551c36107
    
    Link: https://lore.kernel.org/r/20191031103920.3919-2-dmonakhov@openvz.org
    CC: stable@vger.kernel.org
    Signed-off-by: Dmitry Monakhov <dmtrmonakhov@yandex-team.ru>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f236edde22838acbb78783f7f2d97de8889b67b6
Author: Ville SyrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>
Date:   Thu Sep 19 16:28:53 2019 +0300

    video/hdmi: Fix AVI bar unpack
    
    commit 6039f37dd6b76641198e290f26b31c475248f567 upstream.
    
    The bar values are little endian, not big endian. The pack
    function did it right but the unpack got it wrong. Fix it.
    
    Cc: stable@vger.kernel.org
    Cc: linux-media@vger.kernel.org
    Cc: Martin Bugge <marbugge@cisco.com>
    Cc: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Fixes: 2c676f378edb ("[media] hdmi: added unpack and logging functions for InfoFrames")
    Signed-off-by: Ville SyrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190919132853.30954-1-ville.syrjala@linux.intel.com
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5d4b4b8ac0e734a464e925d3f7c697c5731d4c8
Author: Alastair D'Silva <alastair@d-silva.org>
Date:   Mon Nov 4 13:32:54 2019 +1100

    powerpc: Allow 64bit VDSO __kernel_sync_dicache to work across ranges >4GB
    
    commit f9ec11165301982585e5e5f606739b5bae5331f3 upstream.
    
    When calling __kernel_sync_dicache with a size >4GB, we were masking
    off the upper 32 bits, so we would incorrectly flush a range smaller
    than intended.
    
    This patch replaces the 32 bit shifts with 64 bit ones, so that
    the full size is accounted for.
    
    Signed-off-by: Alastair D'Silva <alastair@d-silva.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191104023305.9581-3-alastair@au1.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 639d248bd90a712822f6f068e7b54128d197d8ea
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Nov 8 21:34:30 2019 +0100

    ppdev: fix PPGETTIME/PPSETTIME ioctls
    
    commit 998174042da229e2cf5841f574aba4a743e69650 upstream.
    
    Going through the uses of timeval in the user space API,
    I noticed two bugs in ppdev that were introduced in the y2038
    conversion:
    
    * The range check was accidentally moved from ppsettime to
      ppgettime
    
    * On sparc64, the microseconds are in the other half of the
      64-bit word.
    
    Fix both, and mark the fix for stable backports.
    
    Cc: stable@vger.kernel.org
    Fixes: 3b9ab374a1e6 ("ppdev: convert to y2038 safe")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20191108203435.112759-8-arnd@arndb.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67c05e8e02938552a85fb46b4200fa694801fcff
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:37 2019 +0100

    mmc: host: omap_hsmmc: add code for special init of wl1251 to get rid of pandora_wl1251_init_card
    
    commit f6498b922e57aecbe3b7fa30a308d9d586c0c369 upstream.
    
    Pandora_wl1251_init_card was used to do special pdata based
    setup of the sdio mmc interface. This does no longer work with
    v4.7 and later. A fix requires a device tree based mmc3 setup.
    
    Therefore we move the special setup to omap_hsmmc.c instead
    of calling some pdata supplied init_card function.
    
    The new code checks for a DT child node compatible to wl1251
    so it will not affect other MMC3 use cases.
    
    Generally, this code was and still is a hack and should be
    moved to mmc core to e.g. read such properties from optional
    DT child nodes.
    
    Fixes: 81eef6ca9201 ("mmc: omap_hsmmc: Use dma_request_chan() for requesting DMA channel")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.7+
    [Ulf: Fixed up some checkpatch complaints]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be2dcc73cbaa05ed5aa883705f07528d29945b1c
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Aug 5 18:27:10 2019 +0200

    pinctrl: samsung: Fix device node refcount leaks in init code
    
    commit a322b3377f4bac32aa25fb1acb9e7afbbbbd0137 upstream.
    
    Several functions use for_each_child_of_node() loop with a break to find
    a matching child node.  Although each iteration of
    for_each_child_of_node puts the previous node, but early exit from loop
    misses it.  This leads to leak of device node.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 9a2c1c3b91aa ("pinctrl: samsung: Allow grouping multiple pinmux/pinconf nodes")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f728c19edd9164e726b9f2bc4fb1347d2f5eee45
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Aug 5 18:27:08 2019 +0200

    pinctrl: samsung: Fix device node refcount leaks in S3C24xx wakeup controller init
    
    commit 6fbbcb050802d6ea109f387e961b1dbcc3a80c96 upstream.
    
    In s3c24xx_eint_init() the for_each_child_of_node() loop is used with a
    break to find a matching child node.  Although each iteration of
    for_each_child_of_node puts the previous node, but early exit from loop
    misses it.  This leads to leak of device node.
    
    Cc: <stable@vger.kernel.org>
    Fixes: af99a7507469 ("pinctrl: Add pinctrl-s3c24xx driver")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07546835cf40b1caf8b50e67aa8cf8a73ee72347
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Dec 4 02:54:27 2019 +0100

    ACPI: PM: Avoid attaching ACPI PM domain to certain devices
    
    commit b9ea0bae260f6aae546db224daa6ac1bd9d94b91 upstream.
    
    Certain ACPI-enumerated devices represented as platform devices in
    Linux, like fans, require special low-level power management handling
    implemented by their drivers that is not in agreement with the ACPI
    PM domain behavior.  That leads to problems with managing ACPI fans
    during system-wide suspend and resume.
    
    For this reason, make acpi_dev_pm_attach() skip the affected devices
    by adding a list of device IDs to avoid to it and putting the IDs of
    the affected devices into that list.
    
    Fixes: e5cc8ef31267 (ACPI / PM: Provide ACPI PM callback routines for subsystems)
    Reported-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Todd Brandt <todd.e.brandt@linux.intel.com>
    Cc: 3.10+ <stable@vger.kernel.org> # 3.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f7e4f1639057840f41df5f2721b6670a9c440ce
Author: Vamshi K Sthambamkadi <vamshi.k.sthambamkadi@gmail.com>
Date:   Thu Nov 28 15:58:29 2019 +0530

    ACPI: bus: Fix NULL pointer check in acpi_bus_get_private_data()
    
    commit 627ead724eff33673597216f5020b72118827de4 upstream.
    
    kmemleak reported backtrace:
        [<bbee0454>] kmem_cache_alloc_trace+0x128/0x260
        [<6677f215>] i2c_acpi_install_space_handler+0x4b/0xe0
        [<1180f4fc>] i2c_register_adapter+0x186/0x400
        [<6083baf7>] i2c_add_adapter+0x4e/0x70
        [<a3ddf966>] intel_gmbus_setup+0x1a2/0x2c0 [i915]
        [<84cb69ae>] i915_driver_probe+0x8d8/0x13a0 [i915]
        [<81911d4b>] i915_pci_probe+0x48/0x160 [i915]
        [<4b159af1>] pci_device_probe+0xdc/0x160
        [<b3c64704>] really_probe+0x1ee/0x450
        [<bc029f5a>] driver_probe_device+0x142/0x1b0
        [<d8829d20>] device_driver_attach+0x49/0x50
        [<de71f045>] __driver_attach+0xc9/0x150
        [<df33ac83>] bus_for_each_dev+0x56/0xa0
        [<80089bba>] driver_attach+0x19/0x20
        [<cc73f583>] bus_add_driver+0x177/0x220
        [<7b29d8c7>] driver_register+0x56/0xf0
    
    In i2c_acpi_remove_space_handler(), a leak occurs whenever the
    "data" parameter is initialized to 0 before being passed to
    acpi_bus_get_private_data().
    
    This is because the NULL pointer check in acpi_bus_get_private_data()
    (condition->if(!*data)) returns EINVAL and, in consequence, memory is
    never freed in i2c_acpi_remove_space_handler().
    
    Fix the NULL pointer check in acpi_bus_get_private_data() to follow
    the analogous check in acpi_get_data_full().
    
    Signed-off-by: Vamshi K Sthambamkadi <vamshi.k.sthambamkadi@gmail.com>
    [ rjw: Subject & changelog ]
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f24ec5f5b32ee9f197e0b5897b1d6246adb74aa
Author: Francesco Ruggeri <fruggeri@arista.com>
Date:   Tue Nov 19 21:47:27 2019 -0800

    ACPI: OSL: only free map once in osl.c
    
    commit 833a426cc471b6088011b3d67f1dc4e147614647 upstream.
    
    acpi_os_map_cleanup checks map->refcount outside of acpi_ioremap_lock
    before freeing the map. This creates a race condition the can result
    in the map being freed more than once.
    A panic can be caused by running
    
    for ((i=0; i<10; i++))
    do
            for ((j=0; j<100000; j++))
            do
                    cat /sys/firmware/acpi/tables/data/BERT >/dev/null
            done &
    done
    
    This patch makes sure that only the process that drops the reference
    to 0 does the freeing.
    
    Fixes: b7c1fadd6c2e ("ACPI: Do not use krefs under a mutex in osl.c")
    Signed-off-by: Francesco Ruggeri <fruggeri@arista.com>
    Reviewed-by: Dmitry Safonov <0x7f454c46@gmail.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b99f20c45949968c1f40b05712d515421e18b426
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Tue Sep 24 10:52:23 2019 +0300

    PM / devfreq: Lock devfreq in trans_stat_show
    
    commit 2abb0d5268ae7b5ddf82099b1f8d5aa8414637d4 upstream.
    
    There is no locking in this sysfs show function so stats printing can
    race with a devfreq_update_status called as part of freq switching or
    with initialization.
    
    Also add an assert in devfreq_update_status to make it clear that lock
    must be held by caller.
    
    Fixes: 39688ce6facd ("PM / devfreq: account suspend/resume for stats")
    Cc: stable@vger.kernel.org
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Reviewed-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5751ba7db7d354dfdb491b9a83b24ea3d176d816
Author: Zhenzhong Duan <zhenzhong.duan@oracle.com>
Date:   Wed Oct 23 09:57:14 2019 +0800

    cpuidle: Do not unset the driver if it is there already
    
    commit 918c1fe9fbbe46fcf56837ff21f0ef96424e8b29 upstream.
    
    Fix __cpuidle_set_driver() to check if any of the CPUs in the mask has
    a driver different from drv already and, if so, return -EBUSY before
    updating any cpuidle_drivers per-CPU pointers.
    
    Fixes: 82467a5a885d ("cpuidle: simplify multiple driver support")
    Cc: 3.11+ <stable@vger.kernel.org> # 3.11+
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    [ rjw: Subject & changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d95d0812b1decaf5846792ce4eb750c274cc38a
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Oct 10 10:13:32 2019 -0300

    media: radio: wl1273: fix interrupt masking on release
    
    commit 1091eb830627625dcf79958d99353c2391f41708 upstream.
    
    If a process is interrupted while accessing the radio device and the
    core lock is contended, release() could return early and fail to update
    the interrupt mask.
    
    Note that the return value of the v4l2 release file operation is
    ignored.
    
    Fixes: 87d1a50ce451 ("[media] V4L2: WL1273 FM Radio: TI WL1273 FM radio driver")
    Cc: stable <stable@vger.kernel.org>     # 2.6.38
    Cc: Matti Aaltonen <matti.j.aaltonen@nokia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9685a82a81a1f77911e0518e118a52bac5d2090e
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Oct 10 10:13:31 2019 -0300

    media: bdisp: fix memleak on release
    
    commit 11609a7e21f8cea42630350aa57662928fa4dc63 upstream.
    
    If a process is interrupted while accessing the video device and the
    device lock is contended, release() could return early and fail to free
    related resources.
    
    Note that the return value of the v4l2 release file operation is
    ignored.
    
    Fixes: 28ffeebbb7bd ("[media] bdisp: 2D blitter driver using v4l2 mem2mem framework")
    Cc: stable <stable@vger.kernel.org>     # 4.2
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Fabien Dessenne <fabien.dessenne@st.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5e7acb11772315b28b2c20afa97e37941330eaa
Author: Denis Efremov <efremov@linux.com>
Date:   Mon Sep 30 23:31:47 2019 +0300

    ar5523: check NULL before memcpy() in ar5523_cmd()
    
    commit 315cee426f87658a6799815845788fde965ddaad upstream.
    
    memcpy() call with "idata == NULL && ilen == 0" results in undefined
    behavior in ar5523_cmd(). For example, NULL is passed in callchain
    "ar5523_stat_work() -> ar5523_cmd_write() -> ar5523_cmd()". This patch
    adds ilen check before memcpy() call in ar5523_cmd() to prevent an
    undefined behavior.
    
    Cc: Pontus Fuchs <pontus.fuchs@gmail.com>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: stable@vger.kernel.org
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93b2cdd2a315fad6aac9c7c9ea557c669b06d412
Author: Aleksa Sarai <cyphar@cyphar.com>
Date:   Thu Oct 17 02:50:01 2019 +1100

    cgroup: pids: use atomic64_t for pids->limit
    
    commit a713af394cf382a30dd28a1015cbe572f1b9ca75 upstream.
    
    Because pids->limit can be changed concurrently (but we don't want to
    take a lock because it would be needlessly expensive), use atomic64_ts
    instead.
    
    Fixes: commit 49b786ea146f ("cgroup: implement the PIDs subsystem")
    Cc: stable@vger.kernel.org # v4.3+
    Signed-off-by: Aleksa Sarai <cyphar@cyphar.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 433e1ee850f86618d16a622c9dc6aeaf224bfcfe
Author: Ming Lei <ming.lei@redhat.com>
Date:   Sat Nov 2 16:02:15 2019 +0800

    blk-mq: avoid sysfs buffer overflow with too many CPU cores
    
    commit 8962842ca5abdcf98e22ab3b2b45a103f0408b95 upstream.
    
    It is reported that sysfs buffer overflow can be triggered if the system
    has too many CPU cores(>841 on 4K PAGE_SIZE) when showing CPUs of
    hctx via /sys/block/$DEV/mq/$N/cpu_list.
    
    Use snprintf to avoid the potential buffer overflow.
    
    This version doesn't change the attribute format, and simply stops
    showing CPU numbers if the buffer is going to overflow.
    
    Cc: stable@vger.kernel.org
    Fixes: 676141e48af7("blk-mq: don't dump CPU -> hw queue map on driver load")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c4cab81a1ad3bc542b56e31f3aef94dc1b8b26a
Author: Pawel Harlozinski <pawel.harlozinski@linux.intel.com>
Date:   Tue Nov 12 14:02:36 2019 +0100

    ASoC: Jack: Fix NULL pointer dereference in snd_soc_jack_report
    
    commit 8f157d4ff039e03e2ed4cb602eeed2fd4687a58f upstream.
    
    Check for existance of jack before tracing.
    NULL pointer dereference has been reported by KASAN while unloading
    machine driver (snd_soc_cnl_rt274).
    
    Signed-off-by: Pawel Harlozinski <pawel.harlozinski@linux.intel.com>
    Link: https://lore.kernel.org/r/20191112130237.10141-1-pawel.harlozinski@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f5b0c735993482bfcc711fefc623a5e7babd011
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Sep 25 06:59:15 2019 -0700

    workqueue: Fix pwq ref leak in rescuer_thread()
    
    commit e66b39af00f426b3356b96433d620cb3367ba1ff upstream.
    
    008847f66c3 ("workqueue: allow rescuer thread to do more work.") made
    the rescuer worker requeue the pwq immediately if there may be more
    work items which need rescuing instead of waiting for the next mayday
    timer expiration.  Unfortunately, it doesn't check whether the pwq is
    already on the mayday list and unconditionally gets the ref and moves
    it onto the list.  This doesn't corrupt the list but creates an
    additional reference to the pwq.  It got queued twice but will only be
    removed once.
    
    This leak later can trigger pwq refcnt warning on workqueue
    destruction and prevent freeing of the workqueue.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: "Williams, Gerald S" <gerald.s.williams@intel.com>
    Cc: NeilBrown <neilb@suse.de>
    Cc: stable@vger.kernel.org # v3.19+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54f859a30adaed2a15a4d5a0e454507c706c175d
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Sep 18 18:43:40 2019 -0700

    workqueue: Fix spurious sanity check failures in destroy_workqueue()
    
    commit def98c84b6cdf2eeea19ec5736e90e316df5206b upstream.
    
    Before actually destrying a workqueue, destroy_workqueue() checks
    whether it's actually idle.  If it isn't, it prints out a bunch of
    warning messages and leaves the workqueue dangling.  It unfortunately
    has a couple issues.
    
    * Mayday list queueing increments pwq's refcnts which gets detected as
      busy and fails the sanity checks.  However, because mayday list
      queueing is asynchronous, this condition can happen without any
      actual work items left in the workqueue.
    
    * Sanity check failure leaves the sysfs interface behind too which can
      lead to init failure of newer instances of the workqueue.
    
    This patch fixes the above two by
    
    * If a workqueue has a rescuer, disable and kill the rescuer before
      sanity checks.  Disabling and killing is guaranteed to flush the
      existing mayday list.
    
    * Remove sysfs interface before sanity checks.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Marcin Pawlowski <mpawlowski@fb.com>
    Reported-by: "Williams, Gerald S" <gerald.s.williams@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6693e85bafc888da90b52f282fda376b00bf99c7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 28 11:58:03 2019 +0100

    ALSA: hda - Fix pending unsol events at shutdown
    
    [ Upstream commit ca58f55108fee41d87c9123f85ad4863e5de7f45 ]
    
    This is an alternative fix attemp for the issue reported in the commit
    caa8422d01e9 ("ALSA: hda: Flush interrupts on disabling") that was
    reverted later due to regressions.  Instead of tweaking the hardware
    disablement order and the enforced irq flushing, do calling
    cancel_work_sync() of the unsol work early enough, and explicitly
    ignore the unsol events during the shutdown by checking the
    bus->shutdown flag.
    
    Fixes: caa8422d01e9 ("ALSA: hda: Flush interrupts on disabling")
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://lore.kernel.org/r/s5h1ruxt9cz.wl-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d1f99ad23b677c15237578f2017a27a8e185064
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 6 16:26:00 2019 +0100

    lib: raid6: fix awk build warnings
    
    commit 702600eef73033ddd4eafcefcbb6560f3e3a90f7 upstream.
    
    Newer versions of awk spit out these fun warnings:
            awk: ../lib/raid6/unroll.awk:16: warning: regexp escape sequence `\#' is not a known regexp operator
    
    As commit 700c1018b86d ("x86/insn: Fix awk regexp warnings") showed, it
    turns out that there are a number of awk strings that do not need to be
    escaped and newer versions of awk now warn about this.
    
    Fix the string up so that no warning is produced.  The exact same kernel
    module gets created before and after this patch, showing that it wasn't
    needed.
    
    Link: https://lore.kernel.org/r/20191206152600.GA75093@kroah.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec3b069bd4869a84eae9a4698d7dcf64ded45918
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Nov 11 13:40:46 2019 -0600

    rtlwifi: rtl8192de: Fix missing enable interrupt flag
    
    commit 330bb7117101099c687e9c7f13d48068670b9c62 upstream.
    
    In commit 38506ecefab9 ("rtlwifi: rtl_pci: Start modification for
    new drivers"), the flag that indicates that interrupts are enabled was
    never set.
    
    In addition, there are several places when enable/disable interrupts
    were commented out are restored. A sychronize_interrupts() call is
    removed.
    
    Fixes: 38506ecefab9 ("rtlwifi: rtl_pci: Start modification for new drivers")
    Cc: Stable <stable@vger.kernel.org>     # v3.18+
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f35cbf6716933a8d9975a5fc47fe995bbf6246d6
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Nov 11 13:40:45 2019 -0600

    rtlwifi: rtl8192de: Fix missing callback that tests for hw release of buffer
    
    commit 3155db7613edea8fb943624062baf1e4f9cfbfd6 upstream.
    
    In commit 38506ecefab9 ("rtlwifi: rtl_pci: Start modification for
    new drivers"), a callback needed to check if the hardware has released
    a buffer indicating that a DMA operation is completed was not added.
    
    Fixes: 38506ecefab9 ("rtlwifi: rtl_pci: Start modification for new drivers")
    Cc: Stable <stable@vger.kernel.org>     # v3.18+
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48179bd04ba09936493e6b8ee4cf6c70c95ac700
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Nov 11 13:40:44 2019 -0600

    rtlwifi: rtl8192de: Fix missing code to retrieve RX buffer address
    
    commit 0e531cc575c4e9e3dd52ad287b49d3c2dc74c810 upstream.
    
    In commit 38506ecefab9 ("rtlwifi: rtl_pci: Start modification for
    new drivers"), a callback to get the RX buffer address was added to
    the PCI driver. Unfortunately, driver rtl8192de was not modified
    appropriately and the code runs into a WARN_ONCE() call. The use
    of an incorrect array is also fixed.
    
    Fixes: 38506ecefab9 ("rtlwifi: rtl_pci: Start modification for new drivers")
    Cc: Stable <stable@vger.kernel.org> # 3.18+
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2d653568fa8ae1799b27d24a5136cb55ed180a1
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Nov 15 15:43:06 2019 -0500

    btrfs: record all roots for rename exchange on a subvol
    
    commit 3e1740993e43116b3bc71b0aad1e6872f6ccf341 upstream.
    
    Testing with the new fsstress support for subvolumes uncovered a pretty
    bad problem with rename exchange on subvolumes.  We're modifying two
    different subvolumes, but we only start the transaction on one of them,
    so the other one is not added to the dirty root list.  This is caught by
    btrfs_cow_block() with a warning because the root has not been updated,
    however if we do not modify this root again we'll end up pointing at an
    invalid root because the root item is never updated.
    
    Fix this by making sure we add the destination root to the trans list,
    the same as we do with normal renames.  This fixes the corruption.
    
    Fixes: cdd1fedf8261 ("btrfs: add support for RENAME_EXCHANGE and RENAME_WHITEOUT")
    CC: stable@vger.kernel.org # 4.9+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6af12ab442a4d2031f74992dc68b4aca7bae502
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Oct 30 12:23:01 2019 +0000

    Btrfs: send, skip backreference walking for extents with many references
    
    commit fd0ddbe2509568b00df364156f47561e9f469f15 upstream.
    
    Backreference walking, which is used by send to figure if it can issue
    clone operations instead of write operations, can be very slow and use
    too much memory when extents have many references. This change simply
    skips backreference walking when an extent has more than 64 references,
    in which case we fallback to a write operation instead of a clone
    operation. This limit is conservative and in practice I observed no
    signicant slowdown with up to 100 references and still low memory usage
    up to that limit.
    
    This is a temporary workaround until there are speedups in the backref
    walking code, and as such it does not attempt to add extra interfaces or
    knobs to tweak the threshold.
    
    Reported-by: Atemu <atemu.main@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CAE4GHgkvqVADtS4AzcQJxo0Q1jKQgKaW3JGp3SGdoinVo=C9eQ@mail.gmail.com/T/#me55dc0987f9cc2acaa54372ce0492c65782be3fa
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77774ead86dc769b9c8a82552b0a799e80a7f7d9
Author: Qu Wenruo <wqu@suse.com>
Date:   Thu Oct 24 09:38:29 2019 +0800

    btrfs: Remove btrfs_bio::flags member
    
    commit 34b127aecd4fe8e6a3903e10f204a7b7ffddca22 upstream.
    
    The last user of btrfs_bio::flags was removed in commit 326e1dbb5736
    ("block: remove management of bi_remaining when restoring original
    bi_end_io"), remove it.
    
    (Tagged for stable as the structure is heavily used and space savings
    are desirable.)
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e7647fcd9695116ac78daec3fdda1ad6198b1fa
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Sep 24 16:50:43 2019 -0400

    btrfs: check page->mapping when loading free space cache
    
    commit 3797136b626ad4b6582223660c041efdea8f26b2 upstream.
    
    While testing 5.2 we ran into the following panic
    
    [52238.017028] BUG: kernel NULL pointer dereference, address: 0000000000000001
    [52238.105608] RIP: 0010:drop_buffers+0x3d/0x150
    [52238.304051] Call Trace:
    [52238.308958]  try_to_free_buffers+0x15b/0x1b0
    [52238.317503]  shrink_page_list+0x1164/0x1780
    [52238.325877]  shrink_inactive_list+0x18f/0x3b0
    [52238.334596]  shrink_node_memcg+0x23e/0x7d0
    [52238.342790]  ? do_shrink_slab+0x4f/0x290
    [52238.350648]  shrink_node+0xce/0x4a0
    [52238.357628]  balance_pgdat+0x2c7/0x510
    [52238.365135]  kswapd+0x216/0x3e0
    [52238.371425]  ? wait_woken+0x80/0x80
    [52238.378412]  ? balance_pgdat+0x510/0x510
    [52238.386265]  kthread+0x111/0x130
    [52238.392727]  ? kthread_create_on_node+0x60/0x60
    [52238.401782]  ret_from_fork+0x1f/0x30
    
    The page we were trying to drop had a page->private, but had no
    page->mapping and so called drop_buffers, assuming that we had a
    buffer_head on the page, and then panic'ed trying to deref 1, which is
    our page->private for data pages.
    
    This is happening because we're truncating the free space cache while
    we're trying to load the free space cache.  This isn't supposed to
    happen, and I'll fix that in a followup patch.  However we still
    shouldn't allow those sort of mistakes to result in messing with pages
    that do not belong to us.  So add the page->mapping check to verify that
    we still own this page after dropping and re-acquiring the page lock.
    
    This page being unlocked as:
    btrfs_readpage
      extent_read_full_page
        __extent_read_full_page
          __do_readpage
            if (!nr)
               unlock_page  <-- nr can be 0 only if submit_extent_page
                                returns an error
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    [ add callchain ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 834b9aa41eded7bbc51127bc922cd8e19bdf7e98
Author: David Hildenbrand <david@redhat.com>
Date:   Wed Dec 11 12:11:52 2019 +0100

    virtio-balloon: fix managed page counts when migrating pages between zones
    
    commit 63341ab03706e11a31e3dd8ccc0fbc9beaf723f0 upstream.
    
    In case we have to migrate a ballon page to a newpage of another zone, the
    managed page count of both zones is wrong. Paired with memory offlining
    (which will adjust the managed page count), we can trigger kernel crashes
    and all kinds of different symptoms.
    
    One way to reproduce:
    1. Start a QEMU guest with 4GB, no NUMA
    2. Hotplug a 1GB DIMM and online the memory to ZONE_NORMAL
    3. Inflate the balloon to 1GB
    4. Unplug the DIMM (be quick, otherwise unmovable data ends up on it)
    5. Observe /proc/zoneinfo
      Node 0, zone   Normal
        pages free     16810
              min      24848885473806
              low      18471592959183339
              high     36918337032892872
              spanned  262144
              present  262144
              managed  18446744073709533486
    6. Do anything that requires some memory (e.g., inflate the balloon some
    more). The OOM goes crazy and the system crashes
      [  238.324946] Out of memory: Killed process 537 (login) total-vm:27584kB, anon-rss:860kB, file-rss:0kB, shmem-rss:00
      [  238.338585] systemd invoked oom-killer: gfp_mask=0x100cca(GFP_HIGHUSER_MOVABLE), order=0, oom_score_adj=0
      [  238.339420] CPU: 0 PID: 1 Comm: systemd Tainted: G      D W         5.4.0-next-20191204+ #75
      [  238.340139] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu4
      [  238.341121] Call Trace:
      [  238.341337]  dump_stack+0x8f/0xd0
      [  238.341630]  dump_header+0x61/0x5ea
      [  238.341942]  oom_kill_process.cold+0xb/0x10
      [  238.342299]  out_of_memory+0x24d/0x5a0
      [  238.342625]  __alloc_pages_slowpath+0xd12/0x1020
      [  238.343024]  __alloc_pages_nodemask+0x391/0x410
      [  238.343407]  pagecache_get_page+0xc3/0x3a0
      [  238.343757]  filemap_fault+0x804/0xc30
      [  238.344083]  ? ext4_filemap_fault+0x28/0x42
      [  238.344444]  ext4_filemap_fault+0x30/0x42
      [  238.344789]  __do_fault+0x37/0x1a0
      [  238.345087]  __handle_mm_fault+0x104d/0x1ab0
      [  238.345450]  handle_mm_fault+0x169/0x360
      [  238.345790]  do_user_addr_fault+0x20d/0x490
      [  238.346154]  do_page_fault+0x31/0x210
      [  238.346468]  async_page_fault+0x43/0x50
      [  238.346797] RIP: 0033:0x7f47eba4197e
      [  238.347110] Code: Bad RIP value.
      [  238.347387] RSP: 002b:00007ffd7c0c1890 EFLAGS: 00010293
      [  238.347834] RAX: 0000000000000002 RBX: 000055d196a20a20 RCX: 00007f47eba4197e
      [  238.348437] RDX: 0000000000000033 RSI: 00007ffd7c0c18c0 RDI: 0000000000000004
      [  238.349047] RBP: 00007ffd7c0c1c20 R08: 0000000000000000 R09: 0000000000000033
      [  238.349660] R10: 00000000ffffffff R11: 0000000000000293 R12: 0000000000000001
      [  238.350261] R13: ffffffffffffffff R14: 0000000000000000 R15: 00007ffd7c0c18c0
      [  238.350878] Mem-Info:
      [  238.351085] active_anon:3121 inactive_anon:51 isolated_anon:0
      [  238.351085]  active_file:12 inactive_file:7 isolated_file:0
      [  238.351085]  unevictable:0 dirty:0 writeback:0 unstable:0
      [  238.351085]  slab_reclaimable:5565 slab_unreclaimable:10170
      [  238.351085]  mapped:3 shmem:111 pagetables:155 bounce:0
      [  238.351085]  free:720717 free_pcp:2 free_cma:0
      [  238.353757] Node 0 active_anon:12484kB inactive_anon:204kB active_file:48kB inactive_file:28kB unevictable:0kB iss
      [  238.355979] Node 0 DMA free:11556kB min:36kB low:48kB high:60kB reserved_highatomic:0KB active_anon:152kB inactivB
      [  238.358345] lowmem_reserve[]: 0 2955 2884 2884 2884
      [  238.358761] Node 0 DMA32 free:2677864kB min:7004kB low:10028kB high:13052kB reserved_highatomic:0KB active_anon:0B
      [  238.361202] lowmem_reserve[]: 0 0 72057594037927865 72057594037927865 72057594037927865
      [  238.361888] Node 0 Normal free:193448kB min:99395541895224kB low:73886371836733356kB high:147673348131571488kB reB
      [  238.364765] lowmem_reserve[]: 0 0 0 0 0
      [  238.365101] Node 0 DMA: 7*4kB (U) 5*8kB (UE) 6*16kB (UME) 2*32kB (UM) 1*64kB (U) 2*128kB (UE) 3*256kB (UME) 2*512B
      [  238.366379] Node 0 DMA32: 0*4kB 1*8kB (U) 2*16kB (UM) 2*32kB (UM) 2*64kB (UM) 1*128kB (U) 1*256kB (U) 1*512kB (U)B
      [  238.367654] Node 0 Normal: 1985*4kB (UME) 1321*8kB (UME) 844*16kB (UME) 524*32kB (UME) 300*64kB (UME) 138*128kB (B
      [  238.369184] Node 0 hugepages_total=0 hugepages_free=0 hugepages_surp=0 hugepages_size=2048kB
      [  238.369915] 130 total pagecache pages
      [  238.370241] 0 pages in swap cache
      [  238.370533] Swap cache stats: add 0, delete 0, find 0/0
      [  238.370981] Free swap  = 0kB
      [  238.371239] Total swap = 0kB
      [  238.371488] 1048445 pages RAM
      [  238.371756] 0 pages HighMem/MovableOnly
      [  238.372090] 306992 pages reserved
      [  238.372376] 0 pages cma reserved
      [  238.372661] 0 pages hwpoisoned
    
    In another instance (older kernel), I was able to observe this
    (negative page count :/):
      [  180.896971] Offlined Pages 32768
      [  182.667462] Offlined Pages 32768
      [  184.408117] Offlined Pages 32768
      [  186.026321] Offlined Pages 32768
      [  187.684861] Offlined Pages 32768
      [  189.227013] Offlined Pages 32768
      [  190.830303] Offlined Pages 32768
      [  190.833071] Built 1 zonelists, mobility grouping on.  Total pages: -36920272750453009
    
    In another instance (older kernel), I was no longer able to start any
    process:
      [root@vm ~]# [  214.348068] Offlined Pages 32768
      [  215.973009] Offlined Pages 32768
      cat /proc/meminfo
      -bash: fork: Cannot allocate memory
      [root@vm ~]# cat /proc/meminfo
      -bash: fork: Cannot allocate memory
    
    Fix it by properly adjusting the managed page count when migrating if
    the zone changed. The managed page count of the zones now looks after
    unplug of the DIMM (and after deflating the balloon) just like before
    inflating the balloon (and plugging+onlining the DIMM).
    
    We'll temporarily modify the totalram page count. If this ever becomes a
    problem, we can fine tune by providing helpers that don't touch
    the totalram pages (e.g., adjust_zone_managed_page_count()).
    
    Please note that fixing up the managed page count is only necessary when
    we adjusted the managed page count when inflating - only if we
    don't have VIRTIO_BALLOON_F_DEFLATE_ON_OOM. With that feature, the
    managed page count is not touched when inflating/deflating.
    
    Reported-by: Yumei Huang <yuhuang@redhat.com>
    Fixes: 3dcc0571cd64 ("mm: correctly update zone->managed_pages")
    Cc: <stable@vger.kernel.org> # v3.11+
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Cc: Jiang Liu <liuj97@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Igor Mammedov <imammedo@redhat.com>
    Cc: virtualization@lists.linux-foundation.org
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3776fc6732f9ead4d9110e41bc94fe1af1c69f48
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Oct 22 16:58:59 2019 +0200

    mtd: spear_smi: Fix Write Burst mode
    
    commit 69c7f4618c16b4678f8a4949b6bb5ace259c0033 upstream.
    
    Any write with either dd or flashcp to a device driven by the
    spear_smi.c driver will pass through the spear_smi_cpy_toio()
    function. This function will get called for chunks of up to 256 bytes.
    If the amount of data is smaller, we may have a problem if the data
    length is not 4-byte aligned. In this situation, the kernel panics
    during the memcpy:
    
        # dd if=/dev/urandom bs=1001 count=1 of=/dev/mtd6
        spear_smi_cpy_toio [620] dest c9070000, src c7be8800, len 256
        spear_smi_cpy_toio [620] dest c9070100, src c7be8900, len 256
        spear_smi_cpy_toio [620] dest c9070200, src c7be8a00, len 256
        spear_smi_cpy_toio [620] dest c9070300, src c7be8b00, len 233
        Unhandled fault: external abort on non-linefetch (0x808) at 0xc90703e8
        [...]
        PC is at memcpy+0xcc/0x330
    
    The above error occurs because the implementation of memcpy_toio()
    tries to optimize the number of I/O by writing 4 bytes at a time as
    much as possible, until there are less than 4 bytes left and then
    switches to word or byte writes.
    
    Unfortunately, the specification states about the Write Burst mode:
    
            "the next AHB Write request should point to the next
            incremented address and should have the same size (byte,
            half-word or word)"
    
    This means ARM architecture implementation of memcpy_toio() cannot
    reliably be used blindly here. Workaround this situation by update the
    write path to stick to byte access when the burst length is not
    multiple of 4.
    
    Fixes: f18dbbb1bfe0 ("mtd: ST SPEAr: Add SMI driver for serial NOR flash")
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Boris Brezillon <boris.brezillon@collabora.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b109580a63b83799417c85cc1e92198bd1564a0
Author: Pete Zaitcev <zaitcev@redhat.com>
Date:   Wed Dec 4 20:39:41 2019 -0600

    usb: mon: Fix a deadlock in usbmon between mmap and read
    
    commit 19e6317d24c25ee737c65d1ffb7483bdda4bb54a upstream.
    
    The problem arises because our read() function grabs a lock of the
    circular buffer, finds something of interest, then invokes copy_to_user()
    straight from the buffer, which in turn takes mm->mmap_sem. In the same
    time, the callback mon_bin_vma_fault() is invoked under mm->mmap_sem.
    It attempts to take the fetch lock and deadlocks.
    
    This patch does away with protecting of our page list with any
    semaphores, and instead relies on the kernel not close the device
    while mmap is active in a process.
    
    In addition, we prohibit re-sizing of a buffer while mmap is active.
    This way, when (now unlocked) fault is processed, it works with the
    page that is intended to be mapped-in, and not some other random page.
    Note that this may have an ABI impact, but hopefully no legitimate
    program is this wrong.
    
    Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
    Reported-by: syzbot+56f9673bb4cdcbeb0e92@syzkaller.appspotmail.com
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Fixes: 46eb14a6e158 ("USB: fix usbmon BUG trigger")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191204203941.3503452b@suzdal.zaitcev.lan
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d262c1a4494341832dceedb15260e78802be8e17
Author: Emiliano Ingrassia <ingrassia@epigenesys.com>
Date:   Wed Nov 27 17:03:55 2019 +0100

    usb: core: urb: fix URB structure initialization function
    
    commit 1cd17f7f0def31e3695501c4f86cd3faf8489840 upstream.
    
    Explicitly initialize URB structure urb_list field in usb_init_urb().
    This field can be potentially accessed uninitialized and its
    initialization is coherent with the usage of list_del_init() in
    usb_hcd_unlink_urb_from_ep() and usb_giveback_urb_bh() and its
    explicit initialization in usb_hcd_submit_urb() error path.
    
    Signed-off-by: Emiliano Ingrassia <ingrassia@epigenesys.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191127160355.GA27196@ingrassia.epigenesys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72e96b95beb5c435f09502a1871448aef5d151d9
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Dec 10 12:25:59 2019 +0100

    USB: adutux: fix interface sanity check
    
    commit 3c11c4bed02b202e278c0f5c319ae435d7fb9815 upstream.
    
    Make sure to use the current alternate setting when verifying the
    interface descriptors to avoid binding to an invalid interface.
    
    Failing to do so could cause the driver to misbehave or trigger a WARN()
    in usb_submit_urb() that kernels with panic_on_warn set would choke on.
    
    Fixes: 03270634e242 ("USB: Add ADU support for Ontrak ADU devices")
    Cc: stable <stable@vger.kernel.org>     # 2.6.19
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191210112601.3561-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e63d9a7936328d62ff7a4b34853098501ec0532
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Dec 10 12:26:01 2019 +0100

    USB: serial: io_edgeport: fix epic endpoint lookup
    
    commit 7c5a2df3367a2c4984f1300261345817d95b71f8 upstream.
    
    Make sure to use the current alternate setting when looking up the
    endpoints on epic devices to avoid binding to an invalid interface.
    
    Failing to do so could cause the driver to misbehave or trigger a WARN()
    in usb_submit_urb() that kernels with panic_on_warn set would choke on.
    
    Fixes: 6e8cf7751f9f ("USB: add EPIC support to the io_edgeport driver")
    Cc: stable <stable@vger.kernel.org>     # 2.6.21
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191210112601.3561-5-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ca5c81b0a5f5635d41aa204544a63641e82c7be
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Dec 10 12:26:00 2019 +0100

    USB: idmouse: fix interface sanity checks
    
    commit 59920635b89d74b9207ea803d5e91498d39e8b69 upstream.
    
    Make sure to use the current alternate setting when verifying the
    interface descriptors to avoid binding to an invalid interface.
    
    Failing to do so could cause the driver to misbehave or trigger a WARN()
    in usb_submit_urb() that kernels with panic_on_warn set would choke on.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191210112601.3561-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0847df7923abd74f73d2d75af7dd5fdb1e6635bd
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Dec 10 12:25:58 2019 +0100

    USB: atm: ueagle-atm: add missing endpoint check
    
    commit 09068c1ad53fb077bdac288869dec2435420bdc4 upstream.
    
    Make sure that the interrupt interface has an endpoint before trying to
    access its endpoint descriptors to avoid dereferencing a NULL pointer.
    
    The driver binds to the interrupt interface with interface number 0, but
    must not assume that this interface or its current alternate setting are
    the first entries in the corresponding configuration arrays.
    
    Fixes: b72458a80c75 ("[PATCH] USB: Eagle and ADI 930 usb adsl modem driver")
    Cc: stable <stable@vger.kernel.org>     # 2.6.16
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191210112601.3561-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a0fb9478fdef50a5638bba4a6611222bd51fb6d
Author: Chris Lesiak <chris.lesiak@licor.com>
Date:   Thu Nov 21 20:39:42 2019 +0000

    iio: humidity: hdc100x: fix IIO_HUMIDITYRELATIVE channel reporting
    
    commit 342a6928bd5017edbdae376042d8ad6af3d3b943 upstream.
    
    The IIO_HUMIDITYRELATIVE channel was being incorrectly reported back
    as percent when it should have been milli percent. This is via an
    incorrect scale value being returned to userspace.
    
    Signed-off-by: Chris Lesiak <chris.lesiak@licor.com>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 140cbcf8839fb3a52005f085a8d6af535066e22e
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:36 2019 +0100

    ARM: dts: pandora-common: define wl1251 as child node of mmc3
    
    commit 4f9007d692017cef38baf2a9b82b7879d5b2407b upstream.
    
    Since v4.7 the dma initialization requires that there is a
    device tree property for "rx" and "tx" channels which is
    not provided by the pdata-quirks initialization.
    
    By conversion of the mmc3 setup to device tree this will
    finally allows to remove the OpenPandora wlan specific omap3
    data-quirks.
    
    Fixes: 81eef6ca9201 ("mmc: omap_hsmmc: Use dma_request_chan() for requesting DMA channel")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.7+
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3b11282495b9530f87a28f5e982d9aaae29c4c9
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Dec 11 16:20:05 2019 +0200

    xhci: Increase STS_HALT timeout in xhci_suspend()
    
    commit 7c67cf6658cec70d8a43229f2ce74ca1443dc95e upstream.
    
    I've recently observed failed xHCI suspend attempt on AMD Raven Ridge
    system:
    kernel: xhci_hcd 0000:04:00.4: WARN: xHC CMD_RUN timeout
    kernel: PM: suspend_common(): xhci_pci_suspend+0x0/0xd0 returns -110
    kernel: PM: pci_pm_suspend(): hcd_pci_suspend+0x0/0x30 returns -110
    kernel: PM: dpm_run_callback(): pci_pm_suspend+0x0/0x150 returns -110
    kernel: PM: Device 0000:04:00.4 failed to suspend async: error -110
    
    Similar to commit ac343366846a ("xhci: Increase STS_SAVE timeout in
    xhci_suspend()") we also need to increase the HALT timeout to make it be
    able to suspend again.
    
    Cc: <stable@vger.kernel.org> # 5.2+
    Fixes: f7fac17ca925 ("xhci: Convert xhci_handshake() to use readl_poll_timeout_atomic()")
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20191211142007.8847-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70a7762bb7dc31007288b1f5ded3fa4266356fe1
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Dec 2 09:56:10 2019 +0100

    staging: gigaset: add endpoint-type sanity check
    
    commit ed9ed5a89acba51b82bdff61144d4e4a4245ec8a upstream.
    
    Add missing endpoint-type sanity checks to probe.
    
    This specifically prevents a warning in USB core on URB submission when
    fuzzing USB descriptors.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191202085610.12719-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ac38d527c072469057559ed153c58d8686418c5
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Dec 2 09:56:09 2019 +0100

    staging: gigaset: fix illegal free on probe errors
    
    commit 84f60ca7b326ed8c08582417493982fe2573a9ad upstream.
    
    The driver failed to initialise its receive-buffer pointer, something
    which could lead to an illegal free on late probe errors.
    
    Fix this by making sure to clear all driver data at allocation.
    
    Fixes: 2032e2c2309d ("usb_gigaset: code cleanup")
    Cc: stable <stable@vger.kernel.org>     # 2.6.33
    Cc: Tilman Schmidt <tilman@imap.cc>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191202085610.12719-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82acad8e13e8a66005651f610510e5701437f40b
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Dec 2 09:56:08 2019 +0100

    staging: gigaset: fix general protection fault on probe
    
    commit 53f35a39c3860baac1e5ca80bf052751cfb24a99 upstream.
    
    Fix a general protection fault when accessing the endpoint descriptors
    which could be triggered by a malicious device due to missing sanity
    checks on the number of endpoints.
    
    Reported-by: syzbot+35b1c403a14f5c89eba7@syzkaller.appspotmail.com
    Fixes: 07dc1f9f2f80 ("[PATCH] isdn4linux: Siemens Gigaset drivers - M105 USB DECT adapter")
    Cc: stable <stable@vger.kernel.org>     # 2.6.17
    Cc: Hansjoerg Lipp <hjlipp@web.de>
    Cc: Tilman Schmidt <tilman@imap.cc>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191202085610.12719-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7fbb19856f4444558c400a646d19ca088cd1c31
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Dec 10 12:47:51 2019 +0100

    staging: rtl8712: fix interface sanity check
    
    commit c724f776f048538ecfdf53a52b7a522309f5c504 upstream.
    
    Make sure to use the current alternate setting when verifying the
    interface descriptors to avoid binding to an invalid interface.
    
    Failing to do so could cause the driver to misbehave or trigger a WARN()
    in usb_submit_urb() that kernels with panic_on_warn set would choke on.
    
    Fixes: 2865d42c78a9 ("staging: r8712u: Add the new driver to the mainline kernel")
    Cc: stable <stable@vger.kernel.org>     # 2.6.37
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191210114751.5119-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc2f97548de78c3f04232fa06859a90450471a11
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Dec 10 12:47:50 2019 +0100

    staging: rtl8188eu: fix interface sanity check
    
    commit 74ca34118a0e05793935d804ccffcedd6eb56596 upstream.
    
    Make sure to use the current alternate setting when verifying the
    interface descriptors to avoid binding to an invalid interface.
    
    Failing to do so could cause the driver to misbehave or trigger a WARN()
    in usb_submit_urb() that kernels with panic_on_warn set would choke on.
    
    Fixes: c2478d39076b ("staging: r8188eu: Add files for new driver - part 20")
    Cc: stable <stable@vger.kernel.org>     # 3.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191210114751.5119-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a80ee6afcb856762101db1681f41951d6bfc299
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Nov 6 14:27:10 2019 +0800

    usb: Allow USB device to be warm reset in suspended state
    
    commit e76b3bf7654c3c94554c24ba15a3d105f4006c80 upstream.
    
    On Dell WD15 dock, sometimes USB ethernet cannot be detected after plugging
    cable to the ethernet port, the hub and roothub get runtime resumed and
    runtime suspended immediately:
    ...
    [  433.315169] xhci_hcd 0000:3a:00.0: hcd_pci_runtime_resume: 0
    [  433.315204] usb usb4: usb auto-resume
    [  433.315226] hub 4-0:1.0: hub_resume
    [  433.315239] xhci_hcd 0000:3a:00.0: Get port status 4-1 read: 0x10202e2, return 0x10343
    [  433.315264] usb usb4-port1: status 0343 change 0001
    [  433.315279] xhci_hcd 0000:3a:00.0: clear port1 connect change, portsc: 0x10002e2
    [  433.315293] xhci_hcd 0000:3a:00.0: Get port status 4-2 read: 0x2a0, return 0x2a0
    [  433.317012] xhci_hcd 0000:3a:00.0: xhci_hub_status_data: stopping port polling.
    [  433.422282] xhci_hcd 0000:3a:00.0: Get port status 4-1 read: 0x10002e2, return 0x343
    [  433.422307] usb usb4-port1: do warm reset
    [  433.422311] usb 4-1: device reset not allowed in state 8
    [  433.422339] hub 4-0:1.0: state 7 ports 2 chg 0002 evt 0000
    [  433.422346] xhci_hcd 0000:3a:00.0: Get port status 4-1 read: 0x10002e2, return 0x343
    [  433.422356] usb usb4-port1: do warm reset
    [  433.422358] usb 4-1: device reset not allowed in state 8
    [  433.422428] xhci_hcd 0000:3a:00.0: set port remote wake mask, actual port 0 status  = 0xf0002e2
    [  433.422455] xhci_hcd 0000:3a:00.0: set port remote wake mask, actual port 1 status  = 0xe0002a0
    [  433.422465] hub 4-0:1.0: hub_suspend
    [  433.422475] usb usb4: bus auto-suspend, wakeup 1
    [  433.426161] xhci_hcd 0000:3a:00.0: xhci_hub_status_data: stopping port polling.
    [  433.466209] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.510204] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.554051] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.598235] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.642154] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.686204] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.730205] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.774203] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.818207] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.862040] xhci_hcd 0000:3a:00.0: port 0 polling in bus suspend, waiting
    [  433.862053] xhci_hcd 0000:3a:00.0: xhci_hub_status_data: stopping port polling.
    [  433.862077] xhci_hcd 0000:3a:00.0: xhci_suspend: stopping port polling.
    [  433.862096] xhci_hcd 0000:3a:00.0: // Setting command ring address to 0x8578fc001
    [  433.862312] xhci_hcd 0000:3a:00.0: hcd_pci_runtime_suspend: 0
    [  433.862445] xhci_hcd 0000:3a:00.0: PME# enabled
    [  433.902376] xhci_hcd 0000:3a:00.0: restoring config space at offset 0xc (was 0x0, writing 0x20)
    [  433.902395] xhci_hcd 0000:3a:00.0: restoring config space at offset 0x4 (was 0x100000, writing 0x100403)
    [  433.902490] xhci_hcd 0000:3a:00.0: PME# disabled
    [  433.902504] xhci_hcd 0000:3a:00.0: enabling bus mastering
    [  433.902547] xhci_hcd 0000:3a:00.0: // Setting command ring address to 0x8578fc001
    [  433.902649] pcieport 0000:00:1b.0: PME: Spurious native interrupt!
    [  433.902839] xhci_hcd 0000:3a:00.0: Port change event, 4-1, id 3, portsc: 0xb0202e2
    [  433.902842] xhci_hcd 0000:3a:00.0: resume root hub
    [  433.902845] xhci_hcd 0000:3a:00.0: handle_port_status: starting port polling.
    [  433.902877] xhci_hcd 0000:3a:00.0: xhci_resume: starting port polling.
    [  433.902889] xhci_hcd 0000:3a:00.0: xhci_hub_status_data: stopping port polling.
    [  433.902891] xhci_hcd 0000:3a:00.0: hcd_pci_runtime_resume: 0
    [  433.902919] usb usb4: usb wakeup-resume
    [  433.902942] usb usb4: usb auto-resume
    [  433.902966] hub 4-0:1.0: hub_resume
    ...
    
    As Mathias pointed out, the hub enters Cold Attach Status state and
    requires a warm reset. However usb_reset_device() bails out early when
    the device is in suspended state, as its callers port_event() and
    hub_event() don't always resume the device.
    
    Since there's nothing wrong to reset a suspended device, allow
    usb_reset_device() to do so to solve the issue.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191106062710.29880-1-kai.heng.feng@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e2ae6295cdefe1ca68e5ffe1eac4ca112bda79b
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 14 12:27:57 2019 +0100

    USB: uas: heed CAPACITY_HEURISTICS
    
    commit 335cbbd5762d5e5c67a8ddd6e6362c2aa42a328f upstream.
    
    There is no need to ignore this flag. We should be as close
    to storage in that regard as makes sense, so honor flags whose
    cost is tiny.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191114112758.32747-3-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b88131bd3eb5f841763899085b952d05d82ee24
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 14 12:27:56 2019 +0100

    USB: uas: honor flag to avoid CAPACITY16
    
    commit bff000cae1eec750d62e265c4ba2db9af57b17e1 upstream.
    
    Copy the support over from usb-storage to get feature parity
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191114112758.32747-2-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be17a7388138cf9103e3e33e0bfbc5db1577b3f3
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Oct 30 03:40:46 2019 +0000

    usb: gadget: configfs: Fix missing spin_lock_init()
    
    commit 093edc2baad2c258b1f55d1ab9c63c2b5ae67e42 upstream.
    
    The driver allocates the spinlock but not initialize it.
    Use spin_lock_init() on it to initialize it correctly.
    
    This is detected by Coccinelle semantic patch.
    
    Fixes: 1a1c851bbd70 ("usb: gadget: configfs: fix concurrent issue between composite APIs")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20191030034046.188808-1-weiyongjun1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2f50a543f3e26b28c31b597e1acb4cc9a613e9f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Apr 30 19:34:08 2019 +0800

    appletalk: Set error code if register_snap_client failed
    
    commit c93ad1337ad06a718890a89cdd85188ff9a5a5cc upstream.
    
    If register_snap_client fails in atalk_init,
    error code should be set, otherwise it will
    triggers NULL pointer dereference while unloading
    module.
    
    Fixes: 9804501fa122 ("appletalk: Fix potential NULL pointer dereference in unregister_snap_client")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 540b341012ba9b8e2963be3241cea229d4e4804d
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Mar 14 13:47:59 2019 +0800

    appletalk: Fix potential NULL pointer dereference in unregister_snap_client
    
    commit 9804501fa1228048857910a6bf23e085aade37cc upstream.
    
    register_snap_client may return NULL, all the callers
    check it, but only print a warning. This will result in
    NULL pointer dereference in unregister_snap_client and other
    places.
    
    It has always been used like this since v2.6
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to <4.15: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b587e3f1424fae01f9c7e78d8d294bcb71f6f41
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Dec 4 10:28:54 2019 +0100

    KVM: x86: fix out-of-bounds write in KVM_GET_EMULATED_CPUID (CVE-2019-19332)
    
    commit 433f4ba1904100da65a311033f17a9bf586b287e upstream.
    
    The bounds check was present in KVM_GET_SUPPORTED_CPUID but not
    KVM_GET_EMULATED_CPUID.
    
    Reported-by: syzbot+e3f4897236c4eeb8af4f@syzkaller.appspotmail.com
    Fixes: 84cffe499b94 ("kvm: Emulate MOVBE", 2013-10-29)
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7577abb959e71c0978a366ef4239a9ddb235556
Author: Wei Wang <wvw@google.com>
Date:   Tue Nov 12 12:42:23 2019 -0800

    thermal: Fix deadlock in thermal thermal_zone_device_check
    
    commit 163b00cde7cf2206e248789d2780121ad5e6a70b upstream.
    
    1851799e1d29 ("thermal: Fix use-after-free when unregistering thermal zone
    device") changed cancel_delayed_work to cancel_delayed_work_sync to avoid
    a use-after-free issue. However, cancel_delayed_work_sync could be called
    insides the WQ causing deadlock.
    
    [54109.642398] c0   1162 kworker/u17:1   D    0 11030      2 0x00000000
    [54109.642437] c0   1162 Workqueue: thermal_passive_wq thermal_zone_device_check
    [54109.642447] c0   1162 Call trace:
    [54109.642456] c0   1162  __switch_to+0x138/0x158
    [54109.642467] c0   1162  __schedule+0xba4/0x1434
    [54109.642480] c0   1162  schedule_timeout+0xa0/0xb28
    [54109.642492] c0   1162  wait_for_common+0x138/0x2e8
    [54109.642511] c0   1162  flush_work+0x348/0x40c
    [54109.642522] c0   1162  __cancel_work_timer+0x180/0x218
    [54109.642544] c0   1162  handle_thermal_trip+0x2c4/0x5a4
    [54109.642553] c0   1162  thermal_zone_device_update+0x1b4/0x25c
    [54109.642563] c0   1162  thermal_zone_device_check+0x18/0x24
    [54109.642574] c0   1162  process_one_work+0x3cc/0x69c
    [54109.642583] c0   1162  worker_thread+0x49c/0x7c0
    [54109.642593] c0   1162  kthread+0x17c/0x1b0
    [54109.642602] c0   1162  ret_from_fork+0x10/0x18
    [54109.643051] c0   1162 kworker/u17:2   D    0 16245      2 0x00000000
    [54109.643067] c0   1162 Workqueue: thermal_passive_wq thermal_zone_device_check
    [54109.643077] c0   1162 Call trace:
    [54109.643085] c0   1162  __switch_to+0x138/0x158
    [54109.643095] c0   1162  __schedule+0xba4/0x1434
    [54109.643104] c0   1162  schedule_timeout+0xa0/0xb28
    [54109.643114] c0   1162  wait_for_common+0x138/0x2e8
    [54109.643122] c0   1162  flush_work+0x348/0x40c
    [54109.643131] c0   1162  __cancel_work_timer+0x180/0x218
    [54109.643141] c0   1162  handle_thermal_trip+0x2c4/0x5a4
    [54109.643150] c0   1162  thermal_zone_device_update+0x1b4/0x25c
    [54109.643159] c0   1162  thermal_zone_device_check+0x18/0x24
    [54109.643167] c0   1162  process_one_work+0x3cc/0x69c
    [54109.643177] c0   1162  worker_thread+0x49c/0x7c0
    [54109.643186] c0   1162  kthread+0x17c/0x1b0
    [54109.643195] c0   1162  ret_from_fork+0x10/0x18
    [54109.644500] c0   1162 cat             D    0  7766      1 0x00000001
    [54109.644515] c0   1162 Call trace:
    [54109.644524] c0   1162  __switch_to+0x138/0x158
    [54109.644536] c0   1162  __schedule+0xba4/0x1434
    [54109.644546] c0   1162  schedule_preempt_disabled+0x80/0xb0
    [54109.644555] c0   1162  __mutex_lock+0x3a8/0x7f0
    [54109.644563] c0   1162  __mutex_lock_slowpath+0x14/0x20
    [54109.644575] c0   1162  thermal_zone_get_temp+0x84/0x360
    [54109.644586] c0   1162  temp_show+0x30/0x78
    [54109.644609] c0   1162  dev_attr_show+0x5c/0xf0
    [54109.644628] c0   1162  sysfs_kf_seq_show+0xcc/0x1a4
    [54109.644636] c0   1162  kernfs_seq_show+0x48/0x88
    [54109.644656] c0   1162  seq_read+0x1f4/0x73c
    [54109.644664] c0   1162  kernfs_fop_read+0x84/0x318
    [54109.644683] c0   1162  __vfs_read+0x50/0x1bc
    [54109.644692] c0   1162  vfs_read+0xa4/0x140
    [54109.644701] c0   1162  SyS_read+0xbc/0x144
    [54109.644708] c0   1162  el0_svc_naked+0x34/0x38
    [54109.845800] c0   1162 D 720.000s 1->7766->7766 cat [panic]
    
    Fixes: 1851799e1d29 ("thermal: Fix use-after-free when unregistering thermal zone device")
    Cc: stable@vger.kernel.org
    Signed-off-by: Wei Wang <wvw@google.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d471e34dcb7b06368f3feb320295ac43bdbe2a76
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Nov 7 08:50:25 2019 +0530

    RDMA/qib: Validate ->show()/store() callbacks before calling them
    
    commit 7ee23491b39259ae83899dd93b2a29ef0f22f0a7 upstream.
    
    The permissions of the read-only or write-only sysfs files can be
    changed (as root) and the user can then try to read a write-only file or
    write to a read-only file which will lead to kernel crash here.
    
    Protect against that by always validating the show/store callbacks.
    
    Link: https://lore.kernel.org/r/d45cc26361a174ae12dbb86c994ef334d257924b.1573096807.git.viresh.kumar@linaro.org
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e4c21a3d04daff2b127ef881fa94eb3a7658a12
Author: Gregory CLEMENT <gregory.clement@bootlin.com>
Date:   Thu Oct 17 16:18:41 2019 +0200

    spi: atmel: Fix CS high support
    
    commit 7cbb16b2122c09f2ae393a1542fed628505b9da6 upstream.
    
    Until a few years ago, this driver was only used with CS GPIO. The
    only exception is CS0 on AT91RM9200 which has to use internal CS. A
    limitation of the internal CS is that they don't support CS High.
    
    So by using the CS GPIO the CS high configuration was available except
    for the particular case CS0 on RM9200.
    
    When the support for the internal chip-select was added, the check of
    the CS high support was not updated. Due to this the driver accepts
    this configuration for all the SPI controller v2 (used by all SoCs
    excepting the AT91RM9200) whereas the hardware doesn't support it for
    infernal CS.
    
    This patch fixes the test to match the hardware capabilities.
    
    Fixes: 4820303480a1 ("spi: atmel: add support for the internal chip-select of the spi controller")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Link: https://lore.kernel.org/r/20191017141846.7523-3-gregory.clement@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f427e1fcf77416ed14a716416c0faf2f02a1e68b
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Oct 4 14:29:16 2019 -0500

    crypto: user - fix memory leak in crypto_report
    
    commit ffdde5932042600c6807d46c1550b28b0db6a3bc upstream.
    
    In crypto_report, a new skb is created via nlmsg_new(). This skb should
    be released if crypto_report_alg() fails.
    
    Fixes: a38f7907b926 ("crypto: Add userspace configuration API")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4895f5eac2622c46c73cc244b9991a768506c54
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Oct 23 11:50:44 2019 +0200

    crypto: ecdh - fix big endian bug in ECC library
    
    commit f398243e9fd6a3a059c1ea7b380c40628dbf0c61 upstream.
    
    The elliptic curve arithmetic library used by the EC-DH KPP implementation
    assumes big endian byte order, and unconditionally reverses the byte
    and word order of multi-limb quantities. On big endian systems, the byte
    reordering is not necessary, while the word ordering needs to be retained.
    
    So replace the __swab64() invocation with a call to be64_to_cpu() which
    should do the right thing for both little and big endian builds.
    
    Fixes: 3c4b23901a0c ("crypto: ecdh - Add ECDH software support")
    Cc: <stable@vger.kernel.org> # v4.9+
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d63fe94b0c7223a4f0405431ee2ced62be441bee
Author: Mark Salter <msalter@redhat.com>
Date:   Mon Oct 21 11:29:49 2019 -0400

    crypto: ccp - fix uninitialized list head
    
    commit 691505a803a7f223b2af621848d581259c61f77d upstream.
    
    A NULL-pointer dereference was reported in fedora bz#1762199 while
    reshaping a raid6 array after adding a fifth drive to an existing
    array.
    
    [   47.343549] md/raid:md0: raid level 6 active with 3 out of 5 devices, algorithm 2
    [   47.804017] md0: detected capacity change from 0 to 7885289422848
    [   47.822083] Unable to handle kernel read from unreadable memory at virtual address 0000000000000000
    ...
    [   47.940477] CPU: 1 PID: 14210 Comm: md0_raid6 Tainted: G        W         5.2.18-200.fc30.aarch64 #1
    [   47.949594] Hardware name: AMD Overdrive/Supercharger/To be filled by O.E.M., BIOS ROD1002C 04/08/2016
    [   47.958886] pstate: 00400085 (nzcv daIf +PAN -UAO)
    [   47.963668] pc : __list_del_entry_valid+0x2c/0xa8
    [   47.968366] lr : ccp_tx_submit+0x84/0x168 [ccp]
    [   47.972882] sp : ffff00001369b970
    [   47.976184] x29: ffff00001369b970 x28: ffff00001369bdb8
    [   47.981483] x27: 00000000ffffffff x26: ffff8003b758af70
    [   47.986782] x25: ffff8003b758b2d8 x24: ffff8003e6245818
    [   47.992080] x23: 0000000000000000 x22: ffff8003e62450c0
    [   47.997379] x21: ffff8003dfd6add8 x20: 0000000000000003
    [   48.002678] x19: ffff8003e6245100 x18: 0000000000000000
    [   48.007976] x17: 0000000000000000 x16: 0000000000000000
    [   48.013274] x15: 0000000000000000 x14: 0000000000000000
    [   48.018572] x13: ffff7e000ef83a00 x12: 0000000000000001
    [   48.023870] x11: ffff000010eff998 x10: 00000000000019a0
    [   48.029169] x9 : 0000000000000000 x8 : ffff8003e6245180
    [   48.034467] x7 : 0000000000000000 x6 : 000000000000003f
    [   48.039766] x5 : 0000000000000040 x4 : ffff8003e0145080
    [   48.045064] x3 : dead000000000200 x2 : 0000000000000000
    [   48.050362] x1 : 0000000000000000 x0 : ffff8003e62450c0
    [   48.055660] Call trace:
    [   48.058095]  __list_del_entry_valid+0x2c/0xa8
    [   48.062442]  ccp_tx_submit+0x84/0x168 [ccp]
    [   48.066615]  async_tx_submit+0x224/0x368 [async_tx]
    [   48.071480]  async_trigger_callback+0x68/0xfc [async_tx]
    [   48.076784]  ops_run_biofill+0x178/0x1e8 [raid456]
    [   48.081566]  raid_run_ops+0x248/0x818 [raid456]
    [   48.086086]  handle_stripe+0x864/0x1208 [raid456]
    [   48.090781]  handle_active_stripes.isra.0+0xb0/0x278 [raid456]
    [   48.096604]  raid5d+0x378/0x618 [raid456]
    [   48.100602]  md_thread+0xa0/0x150
    [   48.103905]  kthread+0x104/0x130
    [   48.107122]  ret_from_fork+0x10/0x18
    [   48.110686] Code: d2804003 f2fbd5a3 eb03003f 54000320 (f9400021)
    [   48.116766] ---[ end trace 23f390a527f7ad77 ]---
    
    ccp_tx_submit is passed a dma_async_tx_descriptor which is contained in
    a ccp_dma_desc and adds it to a ccp channel's pending list:
    
            list_del(&desc->entry);
            list_add_tail(&desc->entry, &chan->pending);
    
    The problem is that desc->entry may be uninitialized in the
    async_trigger_callback path where the descriptor was gotten
    from ccp_prep_dma_interrupt which got it from ccp_alloc_dma_desc
    which doesn't initialize the desc->entry list head. So, just
    initialize the list head to avoid the problem.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Sahaj Sarup <sahajsarup@gmail.com>
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Acked-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a39054efa77844e53d8077ccdac0b9beb9c3c16
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Thu Oct 31 17:14:38 2019 +0100

    crypto: crypto4xx - fix double-free in crypto4xx_destroy_sdr
    
    commit 746c908c4d72e49068ab216c3926d2720d71a90d upstream.
    
    This patch fixes a crash that can happen during probe
    when the available dma memory is not enough (this can
    happen if the crypto4xx is built as a module).
    
    The descriptor window mapping would end up being free'd
    twice, once in crypto4xx_build_pdr() and the second time
    in crypto4xx_destroy_sdr().
    
    Fixes: 5d59ad6eea82 ("crypto: crypto4xx - fix crypto4xx_build_pdr, crypto4xx_build_sdr leak")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bc72dbb9dbc2dfa0f975f4b519ae91fa338aec8
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Nov 18 18:58:26 2019 +0100

    KVM: x86: fix presentation of TSX feature in ARCH_CAPABILITIES
    
    commit cbbaa2727aa3ae9e0a844803da7cef7fd3b94f2b upstream.
    
    KVM does not implement MSR_IA32_TSX_CTRL, so it must not be presented
    to the guests.  It is also confusing to have !ARCH_CAP_TSX_CTRL_MSR &&
    !RTM && ARCH_CAP_TAA_NO: lack of MSR_IA32_TSX_CTRL suggests TSX was not
    hidden (it actually was), yet the value says that TSX is not vulnerable
    to microarchitectural data sampling.  Fix both.
    
    Cc: stable@vger.kernel.org
    Tested-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d079704b654ba728322d7e915bfa68a4b42201f
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Nov 18 12:23:00 2019 -0500

    KVM: x86: do not modify masked bits of shared MSRs
    
    commit de1fca5d6e0105c9d33924e1247e2f386efc3ece upstream.
    
    "Shared MSRs" are guest MSRs that are written to the host MSRs but
    keep their value until the next return to userspace.  They support
    a mask, so that some bits keep the host value, but this mask is
    only used to skip an unnecessary MSR write and the value written
    to the MSR is always the guest MSR.
    
    Fix this and, while at it, do not update smsr->values[slot].curr if
    for whatever reason the wrmsr fails.  This should only happen due to
    reserved bits, so the value written to smsr->values[slot].curr
    will not match when the user-return notifier and the host value will
    always be restored.  However, it is untidy and in rare cases this
    can actually avoid spurious WRMSRs on return to userspace.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Tested-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f7582ab7856e863300c8ad6c4e73f0884480918
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 4 13:22:51 2019 +0300

    drm/i810: Prevent underflow in ioctl
    
    commit 4f69851fbaa26b155330be35ce8ac393e93e7442 upstream.
    
    The "used" variables here come from the user in the ioctl and it can be
    negative.  It could result in an out of bounds write.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191004102251.GC823@mwanda
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbf58157fb5a319f28d859cc072d3091d593e507
Author: Jan Kara <jack@suse.cz>
Date:   Tue Nov 5 17:44:07 2019 +0100

    jbd2: Fix possible overflow in jbd2_log_space_left()
    
    commit add3efdd78b8a0478ce423bb9d4df6bd95e8b335 upstream.
    
    When number of free space in the journal is very low, the arithmetic in
    jbd2_log_space_left() could underflow resulting in very high number of
    free blocks and thus triggering assertion failure in transaction commit
    code complaining there's not enough space in the journal:
    
    J_ASSERT(journal->j_free > 1);
    
    Properly check for the low number of free blocks.
    
    CC: stable@vger.kernel.org
    Reviewed-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20191105164437.32602-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56635a1e6ffbc59b1a79f2f2d329dfd46a345f86
Author: Jouni Hogander <jouni.hogander@unikie.com>
Date:   Wed Nov 27 08:40:26 2019 +0200

    can: slcan: Fix use-after-free Read in slcan_open
    
    commit 9ebd796e24008f33f06ebea5a5e6aceb68b51794 upstream.
    
    Slcan_open doesn't clean-up device which registration failed from the
    slcan_devs device list. On next open this list is iterated and freed
    device is accessed. Fix this by calling slc_free_netdev in error path.
    
    Driver/net/can/slcan.c is derived from slip.c. Use-after-free error was
    identified in slip_open by syzboz. Same bug is in slcan.c. Here is the
    trace from the Syzbot slip report:
    
    __dump_stack lib/dump_stack.c:77 [inline]
    dump_stack+0x197/0x210 lib/dump_stack.c:118
    print_address_description.constprop.0.cold+0xd4/0x30b mm/kasan/report.c:374
    __kasan_report.cold+0x1b/0x41 mm/kasan/report.c:506
    kasan_report+0x12/0x20 mm/kasan/common.c:634
    __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:132
    sl_sync drivers/net/slip/slip.c:725 [inline]
    slip_open+0xecd/0x11b7 drivers/net/slip/slip.c:801
    tty_ldisc_open.isra.0+0xa3/0x110 drivers/tty/tty_ldisc.c:469
    tty_set_ldisc+0x30e/0x6b0 drivers/tty/tty_ldisc.c:596
    tiocsetd drivers/tty/tty_io.c:2334 [inline]
    tty_ioctl+0xe8d/0x14f0 drivers/tty/tty_io.c:2594
    vfs_ioctl fs/ioctl.c:46 [inline]
    file_ioctl fs/ioctl.c:509 [inline]
    do_vfs_ioctl+0xdb6/0x13e0 fs/ioctl.c:696
    ksys_ioctl+0xab/0xd0 fs/ioctl.c:713
    __do_sys_ioctl fs/ioctl.c:720 [inline]
    __se_sys_ioctl fs/ioctl.c:718 [inline]
    __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:718
    do_syscall_64+0xfa/0x760 arch/x86/entry/common.c:290
    entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: ed50e1600b44 ("slcan: Fix memory leak in error path")
    Cc: Wolfgang Grandegger <wg@grandegger.com>
    Cc: Marc Kleine-Budde <mkl@pengutronix.de>
    Cc: David Miller <davem@davemloft.net>
    Cc: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Jouni Hogander <jouni.hogander@unikie.com>
    Cc: linux-stable <stable@vger.kernel.org> # >= v5.4
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f111d79ceef191296f46630da186dfaf99734f4d
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Nov 22 12:42:20 2019 -0800

    tty: vt: keyboard: reject invalid keycodes
    
    commit b2b2dd71e0859436d4e05b2f61f86140250ed3f8 upstream.
    
    Do not try to handle keycodes that are too big, otherwise we risk doing
    out-of-bounds writes:
    
    BUG: KASAN: global-out-of-bounds in clear_bit include/asm-generic/bitops-instrumented.h:56 [inline]
    BUG: KASAN: global-out-of-bounds in kbd_keycode drivers/tty/vt/keyboard.c:1411 [inline]
    BUG: KASAN: global-out-of-bounds in kbd_event+0xe6b/0x3790 drivers/tty/vt/keyboard.c:1495
    Write of size 8 at addr ffffffff89a1b2d8 by task syz-executor108/1722
    ...
     kbd_keycode drivers/tty/vt/keyboard.c:1411 [inline]
     kbd_event+0xe6b/0x3790 drivers/tty/vt/keyboard.c:1495
     input_to_handler+0x3b6/0x4c0 drivers/input/input.c:118
     input_pass_values.part.0+0x2e3/0x720 drivers/input/input.c:145
     input_pass_values drivers/input/input.c:949 [inline]
     input_set_keycode+0x290/0x320 drivers/input/input.c:954
     evdev_handle_set_keycode_v2+0xc4/0x120 drivers/input/evdev.c:882
     evdev_do_ioctl drivers/input/evdev.c:1150 [inline]
    
    In this case we were dealing with a fuzzed HID device that declared over
    12K buttons, and while HID layer should not be reporting to us such big
    keycodes, we should also be defensive and reject invalid data ourselves as
    well.
    
    Reported-by: syzbot+19340dff067c2d3835c0@syzkaller.appspotmail.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191122204220.GA129459@dtor-ws
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f9eda5908a8f893dc0ccd1d56001cccf4562325
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Thu Oct 31 14:18:57 2019 -0700

    CIFS: Fix SMB2 oplock break processing
    
    commit fa9c2362497fbd64788063288dc4e74daf977ebb upstream.
    
    Even when mounting modern protocol version the server may be
    configured without supporting SMB2.1 leases and the client
    uses SMB2 oplock to optimize IO performance through local caching.
    
    However there is a problem in oplock break handling that leads
    to missing a break notification on the client who has a file
    opened. It latter causes big latencies to other clients that
    are trying to open the same file.
    
    The problem reproduces when there are multiple shares from the
    same server mounted on the client. The processing code tries to
    match persistent and volatile file ids from the break notification
    with an open file but it skips all share besides the first one.
    Fix this by looking up in all shares belonging to the server that
    issued the oplock break.
    
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c47433c9018ba5148d72fa5bc4095fb08fe1f96
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Wed Nov 27 16:18:39 2019 -0800

    CIFS: Fix NULL-pointer dereference in smb2_push_mandatory_locks
    
    commit 6f582b273ec23332074d970a7fb25bef835df71f upstream.
    
    Currently when the client creates a cifsFileInfo structure for
    a newly opened file, it allocates a list of byte-range locks
    with a pointer to the new cfile and attaches this list to the
    inode's lock list. The latter happens before initializing all
    other fields, e.g. cfile->tlink. Thus a partially initialized
    cifsFileInfo structure becomes available to other threads that
    walk through the inode's lock list. One example of such a thread
    may be an oplock break worker thread that tries to push all
    cached byte-range locks. This causes NULL-pointer dereference
    in smb2_push_mandatory_locks() when accessing cfile->tlink:
    
    [598428.945633] BUG: kernel NULL pointer dereference, address: 0000000000000038
    ...
    [598428.945749] Workqueue: cifsoplockd cifs_oplock_break [cifs]
    [598428.945793] RIP: 0010:smb2_push_mandatory_locks+0xd6/0x5a0 [cifs]
    ...
    [598428.945834] Call Trace:
    [598428.945870]  ? cifs_revalidate_mapping+0x45/0x90 [cifs]
    [598428.945901]  cifs_oplock_break+0x13d/0x450 [cifs]
    [598428.945909]  process_one_work+0x1db/0x380
    [598428.945914]  worker_thread+0x4d/0x400
    [598428.945921]  kthread+0x104/0x140
    [598428.945925]  ? process_one_work+0x380/0x380
    [598428.945931]  ? kthread_park+0x80/0x80
    [598428.945937]  ret_from_fork+0x35/0x40
    
    Fix this by reordering initialization steps of the cifsFileInfo
    structure: initialize all the fields first and then add the new
    byte-range lock list to the inode's lock list.
    
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf0a557fdfbbf4bf747d06fde1473c91f1ae23d5
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Mon Sep 2 22:52:52 2019 +0800

    x86/PCI: Avoid AMD FCH XHCI USB PME# from D0 defect
    
    commit 7e8ce0e2b036dbc6617184317983aea4f2c52099 upstream.
    
    The AMD FCH USB XHCI Controller advertises support for generating PME#
    while in D0.  When in D0, it does signal PME# for USB 3.0 connect events,
    but not for USB 2.0 or USB 1.1 connect events, which means the controller
    doesn't wake correctly for those events.
    
      00:10.0 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] FCH USB XHCI Controller [1022:7914] (rev 20) (prog-if 30 [XHCI])
            Subsystem: Dell FCH USB XHCI Controller [1028:087e]
            Capabilities: [50] Power Management version 3
                    Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0+,D1-,D2-,D3hot+,D3cold+)
    
    Clear PCI_PM_CAP_PME_D0 in dev->pme_support to indicate the device will not
    assert PME# from D0 so we don't rely on it.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203673
    Link: https://lore.kernel.org/r/20190902145252.32111-1-kai.heng.feng@canonical.com
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 435e754072a7890809d285f5ae063f3513199b32
Author: Mike Leach <mike.leach@linaro.org>
Date:   Mon Nov 4 11:12:42 2019 -0700

    coresight: etm4x: Fix input validation for sysfs.
    
    commit 2fe6899e36aa174abefd017887f9cfe0cb60c43a upstream.
    
    A number of issues are fixed relating to sysfs input validation:-
    
    1) bb_ctrl_store() - incorrect compare of bit select field to absolute
    value. Reworked per ETMv4 specification.
    2) seq_event_store() - incorrect mask value - register has two
    event values.
    3) cyc_threshold_store() - must mask with max before checking min
    otherwise wrapped values can set illegal value below min.
    4) res_ctrl_store() - update to mask off all res0 bits.
    
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Mike Leach <mike.leach@linaro.org>
    Fixes: a77de2637c9eb ("coresight: etm4x: moving sysFS entries to a dedicated file")
    Cc: stable <stable@vger.kernel.org> # 4.9+
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20191104181251.26732-6-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10ebbb17891fe53478e26f9ba16048aab3139de0
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Dec 2 09:36:15 2019 -0800

    Input: goodix - add upside-down quirk for Teclast X89 tablet
    
    commit df5b5e555b356662a5e4a23c6774fdfce8547d54 upstream.
    
    The touchscreen on the Teclast X89 is mounted upside down in relation to
    the display orientation (the touchscreen itself is mounted upright, but the
    display is mounted upside-down). Add a quirk for this so that we send
    coordinates which match the display orientation.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Bastien Nocera <hadess@hadess.net>
    Link: https://lore.kernel.org/r/20191202085636.6650-1-hdegoede@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 014af8ee5083c41dc9918590aa44c76ed5014069
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 4 15:48:24 2019 +0100

    ALSA: pcm: oss: Avoid potential buffer overflows
    
    commit 4cc8d6505ab82db3357613d36e6c58a297f57f7c upstream.
    
    syzkaller reported an invalid access in PCM OSS read, and this seems
    to be an overflow of the internal buffer allocated for a plugin.
    Since the rate plugin adjusts its transfer size dynamically, the
    calculation for the chained plugin might be bigger than the given
    buffer size in some extreme cases, which lead to such an buffer
    overflow as caught by KASAN.
    
    Fix it by limiting the max transfer size properly by checking against
    the destination size in each plugin transfer callback.
    
    Reported-by: syzbot+f153bde47a62e0b05f83@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191204144824.17801-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c392b3a69ceddde55dea62a4bb83d542e60dfdbc
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Tue Nov 12 11:49:04 2019 +0100

    fuse: verify attributes
    
    commit eb59bd17d2fa6e5e84fba61a5ebdea984222e6d5 upstream.
    
    If a filesystem returns negative inode sizes, future reads on the file were
    causing the cpu to spin on truncate_pagecache.
    
    Create a helper to validate the attributes.  This now does two things:
    
     - check the file mode
     - check if the file size fits in i_size without overflowing
    
    Reported-by: Arijit Banerjee <arijit@rubrik.com>
    Fixes: d8a5ba45457e ("[PATCH] FUSE - core")
    Cc: <stable@vger.kernel.org> # v2.6.14
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38969fe9b9137ec0141b9a1d66edf42d1c4da1c5
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Tue Nov 12 11:49:04 2019 +0100

    fuse: verify nlink
    
    commit c634da718db9b2fac201df2ae1b1b095344ce5eb upstream.
    
    When adding a new hard link, make sure that i_nlink doesn't overflow.
    
    Fixes: ac45d61357e8 ("fuse: fix nlink after unlink")
    Cc: <stable@vger.kernel.org> # v3.4
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdb6fa8234e59dfb1e0136352adf7684ac9c11af
Author: Xuewei Zhang <xueweiz@google.com>
Date:   Thu Oct 3 17:12:43 2019 -0700

    sched/fair: Scale bandwidth quota and period without losing quota/period ratio precision
    
    commit 4929a4e6faa0f13289a67cae98139e727f0d4a97 upstream.
    
    The quota/period ratio is used to ensure a child task group won't get
    more bandwidth than the parent task group, and is calculated as:
    
      normalized_cfs_quota() = [(quota_us << 20) / period_us]
    
    If the quota/period ratio was changed during this scaling due to
    precision loss, it will cause inconsistency between parent and child
    task groups.
    
    See below example:
    
    A userspace container manager (kubelet) does three operations:
    
     1) Create a parent cgroup, set quota to 1,000us and period to 10,000us.
     2) Create a few children cgroups.
     3) Set quota to 1,000us and period to 10,000us on a child cgroup.
    
    These operations are expected to succeed. However, if the scaling of
    147/128 happens before step 3, quota and period of the parent cgroup
    will be changed:
    
      new_quota: 1148437ns,   1148us
     new_period: 11484375ns, 11484us
    
    And when step 3 comes in, the ratio of the child cgroup will be
    104857, which will be larger than the parent cgroup ratio (104821),
    and will fail.
    
    Scaling them by a factor of 2 will fix the problem.
    
    Tested-by: Phil Auld <pauld@redhat.com>
    Signed-off-by: Xuewei Zhang <xueweiz@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Phil Auld <pauld@redhat.com>
    Cc: Anton Blanchard <anton@ozlabs.org>
    Cc: Ben Segall <bsegall@google.com>
    Cc: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Cc: Juri Lelli <juri.lelli@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vincent Guittot <vincent.guittot@linaro.org>
    Fixes: 2e8e19226398 ("sched/fair: Limit sched_cfs_period_timer() loop to avoid hard lockup")
    Link: https://lkml.kernel.org/r/20191004001243.140897-1-xueweiz@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1e40de916c758ff6ccca5479b2647431e38a18
Author: Rob Herring <robh@kernel.org>
Date:   Thu Dec 6 13:11:42 2018 -0600

    ARM: dts: sunxi: Fix PMU compatible strings
    
    [ Upstream commit 5719ac19fc32d892434939c1756c2f9a8322e6ef ]
    
    "arm,cortex-a15-pmu" is not a valid fallback compatible string for an
    Cortex-A7 PMU, so drop it.
    
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Cc: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 672c7bd255c602e963bf630cb7bde4501fd3dbb0
Author: Qian Cai <cai@gmx.us>
Date:   Thu Nov 29 21:18:07 2018 -0500

    mlx4: Use snprintf instead of complicated strcpy
    
    [ Upstream commit 0fbc9b8b4ea3f688a5da141a64f97aa33ad02ae9 ]
    
    This fixes a compilation warning in sysfs.c
    
    drivers/infiniband/hw/mlx4/sysfs.c:360:2: warning: 'strncpy' output may be
    truncated copying 8 bytes from a string of length 31
    [-Wstringop-truncation]
    
    By eliminating the temporary stack buffer.
    
    Signed-off-by: Qian Cai <cai@gmx.us>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47ebdd7ee39c11d4ab832e569389adc4b5c49439
Author: Andreas Pape <ap@ca-pape.de>
Date:   Fri Nov 23 11:14:54 2018 -0500

    media: stkwebcam: Bugfix for wrong return values
    
    [ Upstream commit 3c28b91380dd1183347d32d87d820818031ebecf ]
    
    usb_control_msg returns in case of a successfully sent message the number
    of sent bytes as a positive number. Don't use this value as a return value
    for stk_camera_read_reg, as a non-zero return value is used as an error
    condition in some cases when stk_camera_read_reg is called.
    
    Signed-off-by: Andreas Pape <ap@ca-pape.de>
    Reviewed-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95595c8f60ca995e6ab7e10130265762d504f553
Author: Dmitry Safonov <0x7f454c46@gmail.com>
Date:   Thu Nov 1 00:24:48 2018 +0000

    tty: Don't block on IO when ldisc change is pending
    
    [ Upstream commit c96cf923a98d1b094df9f0cf97a83e118817e31b ]
    
    There might be situations where tty_ldisc_lock() has blocked, but there
    is already IO on tty and it prevents line discipline changes.
    It might theoretically turn into dead-lock.
    
    Basically, provide more priority to pending tty_ldisc_lock() than to
    servicing reads/writes over tty.
    
    User-visible issue was reported by Mikulas where on pa-risc with
    Debian 5 reboot took either 80 seconds, 3 minutes or 3:25 after proper
    locking in tty_reopen().
    
    Cc: Jiri Slaby <jslaby@suse.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Dmitry Safonov <dima@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25a479768ace4161388e5d94e49c45db017fda3c
Author: zhengbin <zhengbin13@huawei.com>
Date:   Fri Nov 30 16:04:25 2018 +0800

    nfsd: Return EPERM, not EACCES, in some SETATTR cases
    
    [ Upstream commit 255fbca65137e25b12bced18ec9a014dc77ecda0 ]
    
    As the man(2) page for utime/utimes states, EPERM is returned when the
    second parameter of utime or utimes is not NULL, the caller's effective UID
    does not match the owner of the file, and the caller is not privileged.
    
    However, in a NFS directory mounted from knfsd, it will return EACCES
    (from nfsd_setattr-> fh_verify->nfsd_permission).  This patch fixes
    that.
    
    Signed-off-by: zhengbin <zhengbin13@huawei.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64954c8d093e8f29364e6c5b585bd23bdf86dfc1
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Tue Dec 4 22:12:17 2018 +0200

    MIPS: OCTEON: cvmx_pko_mem_debug8: use oldest forward compatible definition
    
    [ Upstream commit 1c6121c39677175bd372076020948e184bad4b6b ]
    
    cn58xx is compatible with cn50xx, so use the latter.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    [paul.burton@mips.com: s/cn52xx/cn50xx/ in commit message.]
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b775d033b7d9891ca4de127593d9d3ef3b5c1d7
Author: Joel Stanley <joel@jms.id.au>
Date:   Tue Dec 4 09:37:46 2018 +1030

    powerpc/math-emu: Update macros from GCC
    
    [ Upstream commit b682c8692442711684befe413cf93cf01c5324ea ]
    
    The add_ssaaaa, sub_ddmmss, umul_ppmm and udiv_qrnnd macros originate
    from GCC's longlong.h which in turn was copied from GMP's longlong.h a
    few decades ago.
    
    This was found when compiling with clang:
    
       arch/powerpc/math-emu/fnmsub.c:46:2: error: invalid use of a cast in a
       inline asm context requiring an l-value: remove the cast or build with
       -fheinous-gnu-extensions
               FP_ADD_D(R, T, B);
               ^~~~~~~~~~~~~~~~~
       ...
    
       ./arch/powerpc/include/asm/sfp-machine.h:283:27: note: expanded from
       macro 'sub_ddmmss'
                      : "=r" ((USItype)(sh)),                                  \
                              ~~~~~~~~~~^~~
    
    Segher points out: this was fixed in GCC over 16 years ago
    ( https://gcc.gnu.org/r56600 ), and in GMP (where it comes from)
    presumably before that.
    
    Update the add_ssaaaa, sub_ddmmss, umul_ppmm and udiv_qrnnd macros to
    the latest GCC version in order to git rid of the invalid casts. These
    were taken as-is from GCC's longlong in order to make future syncs
    obvious. Other parts of sfp-machine.h were left as-is as the file
    contains more features than present in longlong.h.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/260
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f219d291e16706e51ba72aadc95c0c1be0915081
Author: Erez Alfasi <ereza@mellanox.com>
Date:   Sun Dec 2 17:40:25 2018 +0200

    net/mlx4_core: Fix return codes of unsupported operations
    
    [ Upstream commit 95aac2cdafd8c8298c9b2589c52f44db0d824e0e ]
    
    Functions __set_port_type and mlx4_check_port_params returned
    -EINVAL while the proper return code is -EOPNOTSUPP as a
    result of an unsupported operation. All drivers should generate
    this and all users should check for it when detecting an
    unsupported functionality.
    
    Signed-off-by: Erez Alfasi <ereza@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d9f5505a47a6f9d8ff54fab53363acc456fe414
Author: David Teigland <teigland@redhat.com>
Date:   Mon Dec 3 15:27:37 2018 -0600

    dlm: fix invalid cluster name warning
    
    [ Upstream commit 3595c559326d0b660bb088a88e22e0ca630a0e35 ]
    
    The warning added in commit 3b0e761ba83
      "dlm: print log message when cluster name is not set"
    
    did not account for the fact that lockspaces created
    from userland do not supply a cluster name, so bogus
    warnings are printed every time a userland lockspace
    is created.
    
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4912c2cdd16431c1407a731c5086f54783aa78f0
Author: Rob Herring <robh@kernel.org>
Date:   Mon Dec 3 13:12:48 2018 -0600

    ARM: dts: realview: Fix some more duplicate regulator nodes
    
    [ Upstream commit f3b2f758ec1e6cdb13c925647cbd8ad4938b78fb ]
    
    There's a bug in dtc in checking for duplicate node names when there's
    another section (e.g. "/ { };"). In this case, skeleton.dtsi provides
    another section. Upon removal of skeleton.dtsi, the dtb fails to build
    due to a duplicate node 'fixedregulator@0'. As both nodes were pretty
    much the same 3.3V fixed regulator, it hasn't really mattered. Fix this
    by renaming the nodes to something unique. In the process, drop the
    unit-address which shouldn't be present wtihout reg property.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb57e6880b338f8871702add20b98fb967888c63
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Nov 30 13:33:28 2018 +0800

    clk: sunxi-ng: h3/h5: Fix CSI_MCLK parent
    
    [ Upstream commit 7bb7d29cffdd24bf419516d14b6768591e74069e ]
    
    The third parent of CSI_MCLK is PLL_PERIPH1, not PLL_PERIPH0.
    Fix it.
    
    Fixes: 0577e4853bfb ("clk: sunxi-ng: Add H3 clocks")
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40806e7ef8d1eaceafde720f5a178bd02c2fd6c3
Author: Daniel Mack <daniel@zonque.org>
Date:   Sat Dec 1 14:54:51 2018 +0100

    ARM: dts: pxa: clean up USB controller nodes
    
    [ Upstream commit c40ad24254f1dbd54f2df5f5f524130dc1862122 ]
    
    PXA25xx SoCs don't have a USB controller, so drop the node from the
    common pxa2xx.dtsi base file. Both pxa27x and pxa3xx have a dedicated
    node already anyway.
    
    While at it, unify the names for the nodes across all pxa platforms.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Reported-by: Sergey Yanovich <ynvich@gmail.com>
    Link: https://patchwork.kernel.org/patch/8375421/
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bd5701bbe69f2cf3a7f297d9db61d88a3400d4d
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Sun Nov 18 21:18:30 2018 +0100

    mtd: fix mtd_oobavail() incoherent returned value
    
    [ Upstream commit 4348433d8c0234f44adb6e12112e69343f50f0c5 ]
    
    mtd_oobavail() returns either mtd->oovabail or mtd->oobsize. Both
    values are unsigned 32-bit entities, so there is no reason to pretend
    returning a signed one.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1335cdef44252f5fd20837defaae09762181c58
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Nov 22 08:11:54 2018 +0900

    kbuild: fix single target build for external module
    
    [ Upstream commit e07db28eea38ed4e332b3a89f3995c86b713cb5b ]
    
    Building a single target in an external module fails due to missing
    .tmp_versions directory.
    
    For example,
    
      $ make -C /lib/modules/$(uname -r)/build M=$PWD foo.o
    
    will fail in the following way:
    
      CC [M]  /home/masahiro/foo/foo.o
    /bin/sh: 1: cannot create /home/masahiro/foo/.tmp_versions/foo.mod: Directory nonexistent
    
    This is because $(cmd_crmodverdir) is executed only before building
    /, %/, %.ko single targets of external modules. Create .tmp_versions
    in the 'prepare' target.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53a7d908b4730f599b4b0f9476e900b88d2a871f
Author: Paul Walmsley <paul.walmsley@sifive.com>
Date:   Wed Nov 21 13:14:13 2018 -0800

    modpost: skip ELF local symbols during section mismatch check
    
    [ Upstream commit a4d26f1a0958bb1c2b60c6f1e67c6f5d43e2647b ]
    
    During development of a serial console driver with a gcc 8.2.0
    toolchain for RISC-V, the following modpost warning appeared:
    
    ----
    WARNING: vmlinux.o(.data+0x19b10): Section mismatch in reference from the variable .LANCHOR1 to the function .init.text:sifive_serial_console_setup()
    The variable .LANCHOR1 references
    the function __init sifive_serial_console_setup()
    If the reference is valid then annotate the
    variable with __init* or __refdata (see linux/init.h) or name the variable:
    *_template, *_timer, *_sht, *_ops, *_probe, *_probe_one, *_console
    ----
    
    ".LANCHOR1" is an ELF local symbol, automatically created by gcc's section
    anchor generation code:
    
    https://gcc.gnu.org/onlinedocs/gccint/Anchored-Addresses.html
    
    https://gcc.gnu.org/git/?p=gcc.git;a=blob;f=gcc/varasm.c;h=cd9591a45617464946dcf9a126dde277d9de9804;hb=9fb89fa845c1b2e0a18d85ada0b077c84508ab78#l7473
    
    This was verified by compiling the kernel with -fno-section-anchors
    and observing that the ".LANCHOR1" ELF local symbol disappeared, and
    modpost no longer warned about the section mismatch.  The serial
    driver code idiom triggering the warning is standard Linux serial
    driver practice that has a specific whitelist inclusion in modpost.c.
    
    I'm neither a modpost nor an ELF expert, but naively, it doesn't seem
    useful for modpost to report section mismatch warnings caused by ELF
    local symbols by default.  Local symbols have compiler-generated
    names, and thus bypass modpost's whitelisting algorithm, which relies
    on the presence of a non-autogenerated symbol name.  This increases
    the likelihood that false positive warnings will be generated (as in
    the above case).
    
    Thus, disable section mismatch reporting on ELF local symbols.  The
    rationale here is similar to that of commit 2e3a10a1551d ("ARM: avoid
    ARM binutils leaking ELF local symbols") and of similar code already
    present in modpost.c:
    
    https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/scripts/mod/modpost.c?h=v4.19-rc4&id=7876320f88802b22d4e2daf7eb027dd14175a0f8#n1256
    
    This third version of the patch implements a suggestion from Masahiro
    Yamada <yamada.masahiro@socionext.com> to restructure the code as an
    additional pattern matching step inside secref_whitelist(), and
    further improves the patch description.
    
    Signed-off-by: Paul Walmsley <paul.walmsley@sifive.com>
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5471717b1134300e4c567edbadf403f81b2a8072
Author: Yuchung Cheng <ycheng@google.com>
Date:   Wed Nov 28 16:06:45 2018 -0800

    tcp: fix SNMP TCP timeout under-estimation
    
    [ Upstream commit e1561fe2dd69dc5dddd69bd73aa65355bdfb048b ]
    
    Previously the SNMP TCPTIMEOUTS counter has inconsistent accounting:
    1. It counts all SYN and SYN-ACK timeouts
    2. It counts timeouts in other states except recurring timeouts and
       timeouts after fast recovery or disorder state.
    
    Such selective accounting makes analysis difficult and complicated. For
    example the monitoring system needs to collect many other SNMP counters
    to infer the total amount of timeout events. This patch makes TCPTIMEOUTS
    counter simply counts all the retransmit timeout (SYN or data or FIN).
    
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ae7b6e070902ff3caf262bfc6d9ef52d2704ed0
Author: Yuchung Cheng <ycheng@google.com>
Date:   Wed Nov 28 16:06:43 2018 -0800

    tcp: fix off-by-one bug on aborting window-probing socket
    
    [ Upstream commit 3976535af0cb9fe34a55f2ffb8d7e6b39a2f8188 ]
    
    Previously there is an off-by-one bug on determining when to abort
    a stalled window-probing socket. This patch fixes that so it is
    consistent with tcp_write_timeout().
    
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e086e8843f7bc3de5dcd30137cfa54155cd3958
Author: Rob Herring <robh@kernel.org>
Date:   Thu Nov 29 19:05:47 2018 -0600

    ARM: dts: realview-pbx: Fix duplicate regulator nodes
    
    [ Upstream commit 7f4b001b7f6e0480b5bdab9cd8ce1711e43e5cb5 ]
    
    There's a bug in dtc in checking for duplicate node names when there's
    another section (e.g. "/ { };"). In this case, skeleton.dtsi provides
    another section. Upon removal of skeleton.dtsi, the dtb fails to build
    due to a duplicate node 'fixedregulator@0'. As both nodes were pretty
    much the same 3.3V fixed regulator, it hasn't really mattered. Fix this
    by renaming the nodes to something unique. In the process, drop the
    unit-address which shouldn't be present wtihout reg property.
    
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6690db2ac70ece57cceab1c67c4bc839c102456
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Wed Nov 28 18:53:06 2018 +0100

    ARM: dts: mmp2: fix the gpio interrupt cell number
    
    [ Upstream commit 400583983f8a8e95ec02c9c9e2b50188753a87fb ]
    
    gpio-pxa uses two cell to encode the interrupt source: the pin number
    and the trigger type. Adjust the device node accordingly.
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f55d0ea96414e5a86ccec8aa4f9628c9e9ee6e7
Author: Martin Schiller <ms@dev.tdt.de>
Date:   Tue Nov 27 09:50:28 2018 +0100

    net/x25: fix null_x25_address handling
    
    [ Upstream commit 06137619f061f498c2924f6543fa45b7d39f0501 ]
    
    o x25_find_listener(): the compare for the null_x25_address was wrong.
       We have to check the x25_addr of the listener socket instead of the
       x25_addr of the incomming call.
    
     o x25_bind(): it was not possible to bind a socket to null_x25_address
    
    Signed-off-by: Martin Schiller <ms@dev.tdt.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad4c756c9d999ac63567cec9f6bd7283d2dca159
Author: Martin Schiller <ms@dev.tdt.de>
Date:   Tue Nov 27 09:50:27 2018 +0100

    net/x25: fix called/calling length calculation in x25_parse_address_block
    
    [ Upstream commit d449ba3d581ed29f751a59792fdc775572c66904 ]
    
    The length of the called and calling address was not calculated
    correctly (BCD encoding).
    
    Signed-off-by: Martin Schiller <ms@dev.tdt.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c7ce3cc420ac34781ecd2f1e3346400128d9912
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Mon Nov 19 21:46:41 2018 +0200

    ARM: OMAP1/2: fix SoC name printing
    
    [ Upstream commit 04a92358b3964988c78dfe370a559ae550383886 ]
    
    Currently we get extra newlines on OMAP1/2 when the SoC name is printed:
    
    [    0.000000] OMAP1510
    [    0.000000]  revision 2 handled as 15xx id: bc058c9b93111a16
    
    [    0.000000] OMAP2420
    [    0.000000]
    
    Fix by using pr_cont.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8643e7f6febbdbaddb198324e95a44143c7209f7
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Tue Nov 6 13:35:08 2018 -0500

    nfsd: fix a warning in __cld_pipe_upcall()
    
    [ Upstream commit b493fd31c0b89d9453917e977002de58bebc3802 ]
    
    __cld_pipe_upcall() emits a "do not call blocking ops when
    !TASK_RUNNING" warning due to the dput() call in rpc_queue_upcall().
    Fix it by using a completion instead of hand coding the wait.
    
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96120db99f56528a4a7ab32ba13c77d1e4d86aef
Author: ClÃ©ment PÃ©ron <peron.clem@gmail.com>
Date:   Tue Oct 9 13:28:37 2018 +0200

    ARM: debug: enable UART1 for socfpga Cyclone5
    
    [ Upstream commit f6628486c8489e91c513b62608f89ccdb745600d ]
    
    Cyclone5 and Arria10 doesn't have the same memory map for UART1.
    
    Split the SOCFPGA_UART1 into 2 options to allow debugging on UART1 for Cyclone5.
    
    Signed-off-by: ClÃ©ment PÃ©ron <peron.clem@gmail.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4aec7a73e2d2c376e53c9314598243b5c49300a7
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Wed Nov 28 15:25:00 2018 +0800

    dlm: NULL check before kmem_cache_destroy is not needed
    
    [ Upstream commit f31a89692830061bceba8469607e4e4b0f900159 ]
    
    kmem_cache_destroy(NULL) is safe, so removes NULL check before
    freeing the mem. This patch also fix ifnullfree.cocci warnings.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a50d2d416e0f02eb9d53e59701be58618c347bde
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed Nov 14 18:29:13 2018 +0100

    i2c: imx: don't print error message on probe defer
    
    [ Upstream commit fece4978510e43f09c8cd386fee15210e8c68493 ]
    
    Probe deferral is a normal operating condition in the probe function,
    so don't spam the log with an error in this case.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Acked-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 317bddbcf375f2a567b0fd4faa693241fc3e2169
Author: Stefan Agner <stefan@agner.ch>
Date:   Wed Nov 14 18:49:38 2018 +0100

    serial: imx: fix error handling in console_setup
    
    [ Upstream commit 63fd4b94b948c14eeb27a3bbf50ea0f7f0593bad ]
    
    The ipg clock only needs to be unprepared in case preparing
    per clock fails. The ipg clock has already disabled at the point.
    
    Fixes: 1cf93e0d5488 ("serial: imx: remove the uart_console() check")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Reviewed-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e490a04c4a91da62ae67235f4e7a586534562ee8
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Nov 24 12:34:10 2018 +0000

    altera-stapl: check for a null key before strcasecmp'ing it
    
    [ Upstream commit 9ccb645683ef46e3c52c12c088a368baa58447d4 ]
    
    Currently the null check on key is occurring after the strcasecmp on
    the key, hence there is a potential null pointer dereference on key.
    Fix this by checking if key is null first. Also replace the == 0
    check on strcasecmp with just the ! operator.
    
    Detected by CoverityScan, CID#1248787 ("Dereference before null check")
    
    Fixes: fa766c9be58b ("[media] Altera FPGA firmware download module")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dafd9e94580c6fdcc27b5750b6d2c1987ca46f5a
Author: Niklas SÃ¶derlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Wed Aug 29 23:29:21 2018 +0200

    dma-mapping: fix return type of dma_set_max_seg_size()
    
    [ Upstream commit c9d76d0655c06b8c1f944e46c4fd9e9cf4b331c0 ]
    
    The function dma_set_max_seg_size() can return either 0 on success or
    -EIO on error. Change its return type from unsigned int to int to
    capture this.
    
    Signed-off-by: Niklas SÃ¶derlund <niklas.soderlund+renesas@ragnatech.se>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b67aadca61dad09dfff3291914e4233e0b186602
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Fri Nov 23 23:07:14 2018 +0300

    ACPI: fix acpi_find_child_device() invocation in acpi_preset_companion()
    
    [ Upstream commit f8c6d1402b89f22a3647705d63cbd171aa19a77e ]
    
    acpi_find_child_device() accepts boolean not pointer as last argument.
    
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    [ rjw: Subject ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f64e303c34ab3f98491512248dcf188bb0d9342e
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Nov 7 12:40:29 2018 -0800

    usb: dwc3: don't log probe deferrals; but do log other error codes
    
    [ Upstream commit 408d3ba006af57380fa48858b39f72fde6405031 ]
    
    It's not very useful to repeat a bunch of probe deferral errors. And
    it's also not very useful to log "failed" without telling the error
    code.
    
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff8b047d82f405044c0b60ca2e44d3a6c8319156
Author: Vinod Koul <vkoul@kernel.org>
Date:   Mon Nov 26 13:34:15 2018 +0530

    dmaengine: coh901318: Remove unused variable
    
    commit 35faaf0df42d285b40f8a6310afbe096720f7758 upstream.
    
    Commit 627469e4445b ("dmaengine: coh901318: Fix a double-lock bug") left
    flags variable unused, so remove it to fix the warning.
    
    drivers/dma/coh901318.c: In function 'coh901318_config':
    drivers/dma/coh901318.c:1805:16: warning: unused variable 'flags' [-Wunused-variable]
      unsigned long flags;
                    ^~~~~
    
    Fixes: 627469e4445b ("dmaengine: coh901318: Fix a double-lock bug")
    Reported-By: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3f7d1ceb13318f56d830f67b26908caac243f4d
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Tue Nov 6 11:33:48 2018 +0800

    dmaengine: coh901318: Fix a double-lock bug
    
    [ Upstream commit 627469e4445b9b12e0229b3bdf8564d5ce384dd7 ]
    
    The function coh901318_alloc_chan_resources() calls spin_lock_irqsave()
    before calling coh901318_config().
    But coh901318_config() calls spin_lock_irqsave() again in its
    definition, which may cause a double-lock bug.
    
    Because coh901318_config() is only called by
    coh901318_alloc_chan_resources(), the bug fix is to remove the
    calls to spin-lock and -unlock functions in coh901318_config().
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe60584b245ce4e2594deb348848a84d2630e5e
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Wed Nov 14 08:25:53 2018 -0500

    media: pulse8-cec: return 0 when invalidating the logical address
    
    [ Upstream commit 2e84eb9affac43eeaf834992888b72426a8cd442 ]
    
    Return 0 when invalidating the logical address. The cec core produces
    a warning for drivers that do this.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Reported-by: Torbjorn Jansson <torbjorn.jansson@mbox200.swipnet.se>
    Signed-off-by: Hans Verkuil <hansverk@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f730db608b65a131ecc2a2e57a743f904f77f765
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Nov 20 16:54:28 2018 +0100

    ARM: dts: exynos: Use Samsung SoC specific compatible for DWC2 module
    
    [ Upstream commit 6035cbcceb069f87296b3cd0bc4736ad5618bf47 ]
    
    DWC2 hardware module integrated in Samsung SoCs requires some quirks to
    operate properly, so use Samsung SoC specific compatible to notify driver
    to apply respective fixes.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13f9097001de23b301d77bca7d3d343c63628a44
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Mon Nov 19 14:34:02 2018 +0200

    rtc: dt-binding: abx80x: fix resistance scale
    
    [ Upstream commit 73852e56827f5cb5db9d6e8dd8191fc2f2e8f424 ]
    
    The abracon,tc-resistor property value is in kOhm.
    
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ce7ec809496c458221d6ca4bbdb207f6ca06cf8
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Nov 14 18:19:51 2018 +0100

    rtc: max8997: Fix the returned value in case of error in 'max8997_rtc_read_alarm()'
    
    [ Upstream commit 41ef3878203cd9218d92eaa07df4b85a2cb128fb ]
    
    In case of error, we return 0.
    This is spurious and not consistent with the other functions of the driver.
    Propagate the error code instead.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d518e7b3f0ba3bc919daded8452be088be4e6961
Author: Vincent Chen <vincentc@andestech.com>
Date:   Thu Nov 22 11:14:38 2018 +0800

    math-emu/soft-fp.h: (_FP_ROUND_ZERO) cast 0 to void to fix warning
    
    [ Upstream commit 83312f1b7ae205dca647bf52bbe2d51303cdedfb ]
    
    _FP_ROUND_ZERO is defined as 0 and used as a statemente in macro
    _FP_ROUND. This generates "error: statement with no effect
    [-Werror=unused-value]" from gcc. Defining _FP_ROUND_ZERO as (void)0 to
    fix it.
    
    This modification is quoted from glibc 'commit <In libc/:>
    (8ed1e7d5894000c155acbd06f)'
    
    Signed-off-by: Vincent Chen <vincentc@andestech.com>
    Acked-by: Greentime Hu <greentime@andestech.com>
    Signed-off-by: Greentime Hu <greentime@andestech.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bd3bfa0ee7d4e5f0016c9b0557b3a6f423126ca
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Thu Nov 22 00:37:29 2018 +0200

    MIPS: OCTEON: octeon-platform: fix typing
    
    [ Upstream commit 2cf1c8933dd93088cfb5f8f58b3bb9bbdf1781b9 ]
    
    Use correct type for fdt_property nameoff field.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/21204/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2b503b16518d9c65786f53e0cb259edda1a0f80
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Nov 16 19:19:30 2018 -0800

    regulator: Fix return value of _set_load() stub
    
    [ Upstream commit f1abf67217de91f5cd3c757ae857632ca565099a ]
    
    The stub implementation of _set_load() returns a mode value which is
    within the bounds of valid return codes for success (the documentation
    just says that failures are negative error codes) but not sensible or
    what the actual implementation does.  Fix it to just return 0.
    
    Reported-by: Cheng-Yi Chiang <cychiang@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4046ec3e3a3b543de724a96ff7fb3a028bd9001
Author: Shreeya Patel <shreeya.patel23498@gmail.com>
Date:   Sat Nov 17 04:19:07 2018 +0530

    Staging: iio: adt7316: Fix i2c data reading, set the data field
    
    [ Upstream commit 688cd642ba0c393344c802647848da5f0d925d0e ]
    
    adt7316_i2c_read function nowhere sets the data field.
    It is necessary to have an appropriate value for it.
    Hence, assign the value stored in 'ret' variable to data field.
    
    This is an ancient bug, and as no one seems to have noticed,
    probably no sense in applying it to stable.
    
    Signed-off-by: Shreeya Patel <shreeya.patel23498@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9944fcf8ca1a1b808efd6e0c0c3aff92c29004e0
Author: Brian Masney <masneyb@onstation.org>
Date:   Sat Nov 10 20:34:11 2018 -0500

    pinctrl: qcom: ssbi-gpio: fix gpio-hog related boot issues
    
    [ Upstream commit 7ed07855773814337b9814f1c3e866df52ebce68 ]
    
    When attempting to setup up a gpio hog, device probing will repeatedly
    fail with -EPROBE_DEFERED errors. It is caused by a circular dependency
    between the gpio and pinctrl frameworks. If the gpio-ranges property is
    present in device tree, then the gpio framework will handle the gpio pin
    registration and eliminate the circular dependency.
    
    See Christian Lamparter's commit a86caa9ba5d7 ("pinctrl: msm: fix
    gpio-hog related boot issues") for a detailed commit message that
    explains the issue in much more detail. The code comment in this commit
    came from Christian's commit.
    
    I did not test this change against any hardware supported by this
    particular driver, however I was able to validate this same fix works
    for pinctrl-spmi-gpio.c using a LG Nexus 5 (hammerhead) phone.
    
    Signed-off-by: Brian Masney <masneyb@onstation.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2020c19478885a4ddae1e896ec90c2354673a4b
Author: Steffen Maier <maier@linux.ibm.com>
Date:   Thu Nov 8 15:44:57 2018 +0100

    scsi: zfcp: drop default switch case which might paper over missing case
    
    [ Upstream commit 0c902936e55cff9335b27ed632fc45e7115ced75 ]
    
    This was introduced with v4.18 commit 8c3d20aada70 ("scsi: zfcp: fix
    missing REC trigger trace for all objects in ERP_FAILED") but would now
    suppress helpful -Wswitch compiler warnings when building with W=1 such as
    the following forced example:
    
    drivers/s390/scsi/zfcp_erp.c: In function 'zfcp_erp_handle_failed':
    drivers/s390/scsi/zfcp_erp.c:126:2: warning: enumeration value 'ZFCP_ERP_ACTION_REOPEN_PORT_FORCED' not handled in switch [-Wswitch]
      switch (want) {
      ^~~~~~
    
    But then again, only with W=1 we would notice unhandled enum cases.
    Without the default cases and a missed unhandled enum case, the code might
    perform unforeseen things we might not want...
    
    As of today, we never run through the removed default case, so removing it
    is no functional change.  In the future, we never should run through a
    default case but introduce the necessary specific case(s) to handle new
    functionality.
    
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f2766855545ee3c9b268db442ca3afdfb8b53be
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Tue Nov 13 22:42:37 2018 +0000

    MIPS: SiByte: Enable ZONE_DMA32 for LittleSur
    
    [ Upstream commit 756d6d836dbfb04a5a486bc2ec89397aa4533737 ]
    
    The LittleSur board is marked for high memory support and therefore
    clearly must provide a way to have enough memory installed for some to
    be present outside the low 4GiB physical address range.  With the memory
    map of the BCM1250 SOC it has been built around it means over 1GiB of
    actual DRAM, as only the first 1GiB is mapped in the low 4GiB physical
    address range[1].
    
    Complement commit cce335ae47e2 ("[MIPS] 64-bit Sibyte kernels need
    DMA32.") then and also enable ZONE_DMA32 for LittleSur.
    
    References:
    
    [1] "BCM1250/BCM1125/BCM1125H User Manual", Revision 1250_1125-UM100-R,
        Broadcom Corporation, 21 Oct 2002, Section 3: "System Overview",
        "Memory Map", pp. 34-38
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Patchwork: https://patchwork.linux-mips.org/patch/21107/
    Fixes: cce335ae47e2 ("[MIPS] 64-bit Sibyte kernels need DMA32.")
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72c9c04b2bcbb09e478af0b617dd223b682560a1
Author: David Teigland <teigland@redhat.com>
Date:   Thu Nov 15 11:17:40 2018 -0600

    dlm: fix missing idr_destroy for recover_idr
    
    [ Upstream commit 8fc6ed9a3508a0435b9270c313600799d210d319 ]
    
    Which would leak memory for the idr internals.
    
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d9ca529a9bb8dcf49a5b531e3ddc52baf358c37
Author: John Keeping <john@metanate.com>
Date:   Tue Nov 13 15:24:13 2018 +0000

    ARM: dts: rockchip: Fix rk3288-rock2 vcc_flash name
    
    [ Upstream commit 03d9f8fa2bfdc791865624d3adc29070cf67814e ]
    
    There is no functional change from this, but it is confusing to find two
    copies of vcc_sys and no vcc_flash when looking in
    /sys/class/regulator/*/name.
    
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d9fa4885516755164db86d334d118bfd5f0fc7d
Author: Heiko Stuebner <heiko@sntech.de>
Date:   Thu Nov 15 12:17:30 2018 +0100

    clk: rockchip: fix rk3188 sclk_mac_lbtest parameter ordering
    
    [ Upstream commit ac8cb53829a6ba119082e067f5bc8fab3611ce6a ]
    
    Similar to commit a9f0c0e56371 ("clk: rockchip: fix rk3188 sclk_smc
    gate data") there is one other gate clock in the rk3188 clock driver
    with a similar wrong ordering, the sclk_mac_lbtest. So fix it as well.
    
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbfe4a8e386deca92cb18f6094c6aaaa8c3af67b
Author: Finley Xiao <finley.xiao@rock-chips.com>
Date:   Wed Nov 14 15:45:49 2018 +0000

    clk: rockchip: fix rk3188 sclk_smc gate data
    
    [ Upstream commit a9f0c0e563717b9f63b3bb1c4a7c2df436a206d9 ]
    
    Fix sclk_smc gate data.
    Change variable order, flags come before the register address.
    
    Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
    Signed-off-by: Johan Jonker <jbx9999@hotmail.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef750045eb39578e5243072d7406be9282a0fbae
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Nov 13 16:38:47 2018 +0100

    extcon: max8997: Fix lack of path setting in USB device mode
    
    [ Upstream commit a2dc50914744eea9f83a70a5db0486be625e5dc0 ]
    
    MAX8997 driver disables automatic path selection from MicroUSB connector
    and manually sets path to either UART or USB lines. However the code for
    setting USB path worked only for USB host mode (when ID pin is set
    to ground). When standard USB cable (USB device mode) is connected, path
    registers are not touched. This means that once the non-USB accessory is
    connected to MAX8997-operated micro USB port, the path is no longer set
    to USB and USB device mode doesn't work. This patch fixes it by setting
    USB path both for USB and USB host modes.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfdcc8d6d0ab9aa41e9327c29ef0db16b1c99e24
Author: Moni Shoua <monis@mellanox.com>
Date:   Thu Nov 8 21:10:08 2018 +0200

    net/mlx5: Release resource on error flow
    
    [ Upstream commit 698114968a22f6c0c9f42e983ba033cc36bb7217 ]
    
    Fix reference counting leakage when the event handler aborts due to an
    unsupported event for the resource type.
    
    Fixes: a14c2d4beee5 ("net/mlx5_core: Warn on unsupported events of QP/RQ/SQ")
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd9beff0ccd0ef44078be23d6ce5ba431e23f292
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Fri Nov 9 10:12:30 2018 +0100

    ARM: 8813/1: Make aligned 2-byte getuser()/putuser() atomic on ARMv6+
    
    [ Upstream commit 344eb5539abf3e0b6ce22568c03e86450073e097 ]
    
    getuser() and putuser() (and there underscored variants) use two
    strb[t]/ldrb[t] instructions when they are asked to get/put 16-bits.
    This means that the read/write is not atomic even when performed to a
    16-bit-aligned address.
    
    This leads to problems with vhost: vhost uses __getuser() to read the
    vring's 16-bit avail.index field, and if it happens to observe a partial
    update of the index, wrong descriptors will be used which will lead to a
    breakdown of the virtio communication.  A similar problem exists for
    __putuser() which is used to write to the vring's used.index field.
    
    The reason these functions use strb[t]/ldrb[t] is because strht/ldrht
    instructions did not exist until ARMv6T2/ARMv7.  So we should be easily
    able to fix this on ARMv7.  Also, since all ARMv6 processors also don't
    actually use the unprivileged instructions anymore for uaccess (since
    CONFIG_CPU_USE_DOMAINS is not used) we can easily fix them too.
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f443ac6116d640e4f9f39692e667c64bad3ee549
Author: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
Date:   Tue Jul 24 21:57:50 2018 +0300

    iwlwifi: mvm: Send non offchannel traffic via AP sta
    
    [ Upstream commit dc1aca22f8f38b7e2ad7b118db87404d11e68771 ]
    
    TDLS discovery response frame is a unicast direct frame to the peer.
    Since we don't have a STA for this peer, this frame goes through
    iwl_tx_skb_non_sta(). As the result aux_sta and some completely
    arbitrary queue would be selected for this frame, resulting in a queue
    hang.  Fix that by sending such frames through AP sta instead.
    
    Signed-off-by: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 473d22b0741d6ad8680bcaefe563a20ab02ceee4
Author: Arjun Vynipadath <arjun@chelsio.com>
Date:   Fri Nov 9 14:52:01 2018 +0530

    cxgb4vf: fix memleak in mac_hlist initialization
    
    [ Upstream commit 24357e06ba511ad874d664d39475dbb01c1ca450 ]
    
    mac_hlist was initialized during adapter_up, which will be called
    every time a vf device is first brought up, or every time when device
    is brought up again after bringing all devices down. This means our
    state of previous list is lost, causing a memleak if entries are
    present in the list. To fix that, move list init to the condition
    that performs initial one time adapter setup.
    
    Signed-off-by: Arjun Vynipadath <arjun@chelsio.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bddce881ac1ab6dd3da2e1504601eeb2e84b170
Author: Douglas Anderson <dianders@chromium.org>
Date:   Tue Oct 30 15:11:04 2018 -0700

    serial: core: Allow processing sysrq at port unlock time
    
    [ Upstream commit d6e1935819db0c91ce4a5af82466f3ab50d17346 ]
    
    Right now serial drivers process sysrq keys deep in their character
    receiving code.  This means that they've already grabbed their
    port->lock spinlock.  This can end up getting in the way if we've go
    to do serial stuff (especially kgdb) in response to the sysrq.
    
    Serial drivers have various hacks in them to handle this.  Looking at
    '8250_port.c' you can see that the console_write() skips locking if
    we're in the sysrq handler.  Looking at 'msm_serial.c' you can see
    that the port lock is dropped around uart_handle_sysrq_char().
    
    It turns out that these hacks aren't exactly perfect.  If you have
    lockdep turned on and use something like the 8250_port hack you'll get
    a splat that looks like:
    
      WARNING: possible circular locking dependency detected
      [...] is trying to acquire lock:
      ... (console_owner){-.-.}, at: console_unlock+0x2e0/0x5e4
    
      but task is already holding lock:
      ... (&port_lock_key){-.-.}, at: serial8250_handle_irq+0x30/0xe4
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #1 (&port_lock_key){-.-.}:
             _raw_spin_lock_irqsave+0x58/0x70
             serial8250_console_write+0xa8/0x250
             univ8250_console_write+0x40/0x4c
             console_unlock+0x528/0x5e4
             register_console+0x2c4/0x3b0
             uart_add_one_port+0x350/0x478
             serial8250_register_8250_port+0x350/0x3a8
             dw8250_probe+0x67c/0x754
             platform_drv_probe+0x58/0xa4
             really_probe+0x150/0x294
             driver_probe_device+0xac/0xe8
             __driver_attach+0x98/0xd0
             bus_for_each_dev+0x84/0xc8
             driver_attach+0x2c/0x34
             bus_add_driver+0xf0/0x1ec
             driver_register+0xb4/0x100
             __platform_driver_register+0x60/0x6c
             dw8250_platform_driver_init+0x20/0x28
             ...
    
      -> #0 (console_owner){-.-.}:
             lock_acquire+0x1e8/0x214
             console_unlock+0x35c/0x5e4
             vprintk_emit+0x230/0x274
             vprintk_default+0x7c/0x84
             vprintk_func+0x190/0x1bc
             printk+0x80/0xa0
             __handle_sysrq+0x104/0x21c
             handle_sysrq+0x30/0x3c
             serial8250_read_char+0x15c/0x18c
             serial8250_rx_chars+0x34/0x74
             serial8250_handle_irq+0x9c/0xe4
             dw8250_handle_irq+0x98/0xcc
             serial8250_interrupt+0x50/0xe8
             ...
    
      other info that might help us debug this:
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(&port_lock_key);
                                     lock(console_owner);
                                     lock(&port_lock_key);
        lock(console_owner);
    
       *** DEADLOCK ***
    
    The hack used in 'msm_serial.c' doesn't cause the above splats but it
    seems a bit ugly to unlock / lock our spinlock deep in our irq
    handler.
    
    It seems like we could defer processing the sysrq until the end of the
    interrupt handler right after we've unlocked the port.  With this
    scheme if a whole batch of sysrq characters comes in one irq then we
    won't handle them all, but that seems like it should be a fine
    compromise.
    
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 697ac1bae0f68de26fd756e3ab1ff29559555eb8
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu Nov 14 23:43:24 2019 +0800

    net: ep93xx_eth: fix mismatch of request_mem_region in remove
    
    [ Upstream commit 3df70afe8d33f4977d0e0891bdcfb639320b5257 ]
    
    The driver calls release_resource in remove to match request_mem_region
    in probe, which is incorrect.
    Fix it by using the right one, release_mem_region.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da0b802943377662b72a9d85d22fe50619b29f27
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Nov 13 14:38:47 2019 +0800

    rsxx: add missed destroy_workqueue calls in remove
    
    [ Upstream commit dcb77e4b274b8f13ac6482dfb09160cd2fae9a40 ]
    
    The driver misses calling destroy_workqueue in remove like what is done
    when probe fails.
    Add the missed calls to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bec1e750fc20611d7ffc7e4b110c0057465ceb4
Author: paulhsia <paulhsia@chromium.org>
Date:   Wed Nov 13 01:17:14 2019 +0800

    ALSA: pcm: Fix stream lock usage in snd_pcm_period_elapsed()
    
    [ Upstream commit f5cdc9d4003a2f66ea57b3edd3e04acc2b1a4439 ]
    
    If the nullity check for `substream->runtime` is outside of the lock
    region, it is possible to have a null runtime in the critical section
    if snd_pcm_detach_substream is called right before the lock.
    
    Signed-off-by: paulhsia <paulhsia@chromium.org>
    Link: https://lore.kernel.org/r/20191112171715.128727-2-paulhsia@chromium.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad4784e67c8969d214da6ae2d2e6a3790178d50e
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Nov 12 17:04:54 2019 -0800

    Input: cyttsp4_core - fix use after free bug
    
    [ Upstream commit 79aae6acbef16f720a7949f8fc6ac69816c79d62 ]
    
    The device md->input is used after it is released. Setting the device
    data to NULL is unnecessary as the device is never used again. Instead,
    md->input should be assigned NULL to avoid accessing the freed memory
    accidently. Besides, checking md->si against NULL is superfluous as it
    points to a variable address, which cannot be NULL.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Link: https://lore.kernel.org/r/1572936379-6423-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b597aa928209e4c183e671a5cd078ec3ea262be3
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sun Nov 10 17:19:15 2019 +0100

    NFC: nxp-nci: Fix NULL pointer dereference after I2C communication error
    
    [ Upstream commit a71a29f50de1ef97ab55c151a1598eb12dde379d ]
    
    I2C communication errors (-EREMOTEIO) during the IRQ handler of nxp-nci
    result in a NULL pointer dereference at the moment:
    
        BUG: kernel NULL pointer dereference, address: 0000000000000000
        Oops: 0002 [#1] PREEMPT SMP NOPTI
        CPU: 1 PID: 355 Comm: irq/137-nxp-nci Not tainted 5.4.0-rc6 #1
        RIP: 0010:skb_queue_tail+0x25/0x50
        Call Trace:
         nci_recv_frame+0x36/0x90 [nci]
         nxp_nci_i2c_irq_thread_fn+0xd1/0x285 [nxp_nci_i2c]
         ? preempt_count_add+0x68/0xa0
         ? irq_forced_thread_fn+0x80/0x80
         irq_thread_fn+0x20/0x60
         irq_thread+0xee/0x180
         ? wake_threads_waitq+0x30/0x30
         kthread+0xfb/0x130
         ? irq_thread_check_affinity+0xd0/0xd0
         ? kthread_park+0x90/0x90
         ret_from_fork+0x1f/0x40
    
    Afterward the kernel must be rebooted to work properly again.
    
    This happens because it attempts to call nci_recv_frame() with skb == NULL.
    However, unlike nxp_nci_fw_recv_frame(), nci_recv_frame() does not have any
    NULL checks for skb, causing the NULL pointer dereference.
    
    Change the code to call only nxp_nci_fw_recv_frame() in case of an error.
    Make sure to log it so it is obvious that a communication error occurred.
    The error above then becomes:
    
        nxp-nci_i2c i2c-NXP1001:00: NFC: Read failed with error -121
        nci: __nci_request: wait_for_completion_interruptible_timeout failed 0
        nxp-nci_i2c i2c-NXP1001:00: NFC: Read failed with error -121
    
    Fixes: 6be88670fc59 ("NFC: nxp-nci_i2c: Add I2C support to NXP NCI driver")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b30b8233c33769ab346b43773ba0d6bf3f12aa7
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Nov 2 13:11:41 2019 -0400

    audit_get_nd(): don't unlock parent too early
    
    [ Upstream commit 69924b89687a2923e88cc42144aea27868913d0e ]
    
    if the child has been negative and just went positive
    under us, we want coherent d_is_positive() and ->d_inode.
    Don't unlock the parent until we'd done that work...
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7436698bf7406b2943e8d7ac95b9f0f38c141b1
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Nov 8 22:08:29 2019 -0500

    exportfs_decode_fh(): negative pinned may become positive without the parent locked
    
    [ Upstream commit a2ece088882666e1dc7113744ac912eb161e3f87 ]
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4623faa5e79b6f0df92fdbdb67c30bdaec3d516
Author: Sirong Wang <wangsirong@huawei.com>
Date:   Fri Nov 1 10:33:29 2019 +0800

    RDMA/hns: Correct the value of HNS_ROCE_HEM_CHUNK_LEN
    
    [ Upstream commit 531eb45b3da4267fc2a64233ba256c8ffb02edd2 ]
    
    Size of pointer to buf field of struct hns_roce_hem_chunk should be
    considered when calculating HNS_ROCE_HEM_CHUNK_LEN, or sg table size will
    be larger than expected when allocating hem.
    
    Fixes: 9a4435375cd1 ("IB/hns: Add driver files for hns RoCE driver")
    Link: https://lore.kernel.org/r/1572575610-52530-2-git-send-email-liweihang@hisilicon.com
    Signed-off-by: Sirong Wang <wangsirong@huawei.com>
    Signed-off-by: Weihang Li <liweihang@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d29e4ee55357d925b756ee9c72cf8a0c38c38984
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Oct 25 00:03:11 2019 -0400

    autofs: fix a leak in autofs_expire_indirect()
    
    [ Upstream commit 03ad0d703df75c43f78bd72e16124b5b94a95188 ]
    
    if the second call of should_expire() in there ends up
    grabbing and returning a new reference to dentry, we need
    to drop it before continuing.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a45d1053e838ff33a955578350c8db1d5aea9a9b
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Mon Nov 18 10:48:33 2019 +0800

    serial: ifx6x60: add missed pm_runtime_disable
    
    commit 50b2b571c5f3df721fc81bf9a12c521dfbe019ba upstream.
    
    The driver forgets to call pm_runtime_disable in remove.
    Add the missed calls to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191118024833.21587-1-hslester96@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b054e0bbfd8d0f0f9e9a632c3fdcb99c9b983de
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Wed Nov 20 23:18:53 2019 +0800

    serial: serial_core: Perform NULL checks for break_ctl ops
    
    commit 7d73170e1c282576419f8b50a771f1fcd2b81a94 upstream.
    
    Doing fuzz test on sbsa uart device, causes a kernel crash
    due to NULL pointer dereference:
    
    ------------[ cut here ]------------
    Unable to handle kernel paging request at virtual address fffffffffffffffc
    pgd = ffffffe331723000
    [fffffffffffffffc] *pgd=0000002333595003, *pud=0000002333595003, *pmd=00000
    Internal error: Oops: 96000005 [#1] PREEMPT SMP
    Modules linked in: ping(O) jffs2 rtos_snapshot(O) pramdisk(O) hisi_sfc(O)
    Drv_Nandc_K(O) Drv_SysCtl_K(O) Drv_SysClk_K(O) bsp_reg(O) hns3(O)
    hns3_uio_enet(O) hclgevf(O) hclge(O) hnae3(O) mdio_factory(O)
    mdio_registry(O) mdio_dev(O) mdio(O) hns3_info(O) rtos_kbox_panic(O)
    uart_suspend(O) rsm(O) stp llc tunnel4 xt_tcpudp ipt_REJECT nf_reject_ipv4
    iptable_filter ip_tables x_tables sd_mod xhci_plat_hcd xhci_pci xhci_hcd
    usbmon usbhid usb_storage ohci_platform ohci_pci ohci_hcd hid_generic hid
    ehci_platform ehci_pci ehci_hcd vfat fat usbcore usb_common scsi_mod
    yaffs2multi(O) ext4 jbd2 ext2 mbcache ofpart i2c_dev i2c_core uio ubi nand
    nand_ecc nand_ids cfi_cmdset_0002 cfi_cmdset_0001 cfi_probe gen_probe
    cmdlinepart chipreg mtdblock mtd_blkdevs mtd nfsd auth_rpcgss oid_registry
    nfsv3 nfs nfs_acl lockd sunrpc grace autofs4
    CPU: 2 PID: 2385 Comm: tty_fuzz_test Tainted: G           O    4.4.193 #1
    task: ffffffe32b23f110 task.stack: ffffffe32bda4000
    PC is at uart_break_ctl+0x44/0x84
    LR is at uart_break_ctl+0x34/0x84
    pc : [<ffffff8393196098>] lr : [<ffffff8393196088>] pstate: 80000005
    sp : ffffffe32bda7cc0
    x29: ffffffe32bda7cc0 x28: ffffffe32b23f110
    x27: ffffff8393402000 x26: 0000000000000000
    x25: ffffffe32b233f40 x24: ffffffc07a8ec680
    x23: 0000000000005425 x22: 00000000ffffffff
    x21: ffffffe33ed73c98 x20: 0000000000000000
    x19: ffffffe33ed94168 x18: 0000000000000004
    x17: 0000007f92ae9d30 x16: ffffff8392fa6064
    x15: 0000000000000010 x14: 0000000000000000
    x13: 0000000000000000 x12: 0000000000000000
    x11: 0000000000000020 x10: 0000007ffdac1708
    x9 : 0000000000000078 x8 : 000000000000001d
    x7 : 0000000052a64887 x6 : ffffffe32bda7e08
    x5 : ffffffe32b23c000 x4 : 0000005fbc5b0000
    x3 : ffffff83938d5018 x2 : 0000000000000080
    x1 : ffffffe32b23c040 x0 : ffffff83934428f8
    virtual start addr offset is 38ac00000
    module base offset is 2cd4cf1000
    linear region base offset is : 0
    Process tty_fuzz_test (pid: 2385, stack limit = 0xffffffe32bda4000)
    Stack: (0xffffffe32bda7cc0 to 0xffffffe32bda8000)
    7cc0: ffffffe32bda7cf0 ffffff8393177718 ffffffc07a8ec680 ffffff8393196054
    7ce0: 000000001739f2e0 0000007ffdac1978 ffffffe32bda7d20 ffffff8393179a1c
    7d00: 0000000000000000 ffffff8393c0a000 ffffffc07a8ec680 cb88537fdc8ba600
    7d20: ffffffe32bda7df0 ffffff8392fa5a40 ffffff8393c0a000 0000000000005425
    7d40: 0000007ffdac1978 ffffffe32b233f40 ffffff8393178dcc 0000000000000003
    7d60: 000000000000011d 000000000000001d ffffffe32b23f110 000000000000029e
    7d80: ffffffe34fe8d5d0 0000000000000000 ffffffe32bda7e14 cb88537fdc8ba600
    7da0: ffffffe32bda7e30 ffffff8393042cfc ffffff8393c41720 ffffff8393c46410
    7dc0: ffffff839304fa68 ffffffe32b233f40 0000000000005425 0000007ffdac1978
    7de0: 000000000000011d cb88537fdc8ba600 ffffffe32bda7e70 ffffff8392fa60cc
    7e00: 0000000000000000 ffffffe32b233f40 ffffffe32b233f40 0000000000000003
    7e20: 0000000000005425 0000007ffdac1978 ffffffe32bda7e70 ffffff8392fa60b0
    7e40: 0000000000000280 ffffffe32b233f40 ffffffe32b233f40 0000000000000003
    7e60: 0000000000005425 cb88537fdc8ba600 0000000000000000 ffffff8392e02e78
    7e80: 0000000000000280 0000005fbc5b0000 ffffffffffffffff 0000007f92ae9d3c
    7ea0: 0000000060000000 0000000000000015 0000000000000003 0000000000005425
    7ec0: 0000007ffdac1978 0000000000000000 00000000a54c910e 0000007f92b95014
    7ee0: 0000007f92b95090 0000000052a64887 000000000000001d 0000000000000078
    7f00: 0000007ffdac1708 0000000000000020 0000000000000000 0000000000000000
    7f20: 0000000000000000 0000000000000010 000000556acf0090 0000007f92ae9d30
    7f40: 0000000000000004 000000556acdef10 0000000000000000 000000556acdebd0
    7f60: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    7f80: 0000000000000000 0000000000000000 0000000000000000 0000007ffdac1840
    7fa0: 000000556acdedcc 0000007ffdac1840 0000007f92ae9d3c 0000000060000000
    7fc0: 0000000000000000 0000000000000000 0000000000000003 000000000000001d
    7fe0: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    Call trace:
    Exception stack(0xffffffe32bda7ab0 to 0xffffffe32bda7bf0)
    7aa0:                                   0000000000001000 0000007fffffffff
    7ac0: ffffffe32bda7cc0 ffffff8393196098 0000000080000005 0000000000000025
    7ae0: ffffffe32b233f40 ffffff83930d777c ffffffe32bda7b30 ffffff83930d777c
    7b00: ffffffe32bda7be0 ffffff83938d5000 ffffffe32bda7be0 ffffffe32bda7c20
    7b20: ffffffe32bda7b60 ffffff83930d777c ffffffe32bda7c10 ffffff83938d5000
    7b40: ffffffe32bda7c10 ffffffe32bda7c50 ffffff8393c0a000 ffffffe32b23f110
    7b60: ffffffe32bda7b70 ffffff8392e09df4 ffffffe32bda7bb0 cb88537fdc8ba600
    7b80: ffffff83934428f8 ffffffe32b23c040 0000000000000080 ffffff83938d5018
    7ba0: 0000005fbc5b0000 ffffffe32b23c000 ffffffe32bda7e08 0000000052a64887
    7bc0: 000000000000001d 0000000000000078 0000007ffdac1708 0000000000000020
    7be0: 0000000000000000 0000000000000000
    [<ffffff8393196098>] uart_break_ctl+0x44/0x84
    [<ffffff8393177718>] send_break+0xa0/0x114
    [<ffffff8393179a1c>] tty_ioctl+0xc50/0xe84
    [<ffffff8392fa5a40>] do_vfs_ioctl+0xc4/0x6e8
    [<ffffff8392fa60cc>] SyS_ioctl+0x68/0x9c
    [<ffffff8392e02e78>] __sys_trace_return+0x0/0x4
    Code: b9410ea0 34000160 f9408aa0 f9402814 (b85fc280)
    ---[ end trace 8606094f1960c5e0 ]---
    Kernel panic - not syncing: Fatal exception
    
    Fix this problem by adding NULL checks prior to calling break_ctl ops.
    
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1574263133-28259-1-git-send-email-xiaojiangfeng@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36f8b7a0861199b221daf41b577fa4a999a91ff1
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Mon Nov 18 10:25:47 2019 +0100

    serial: pl011: Fix DMA ->flush_buffer()
    
    commit f6a196477184b99a31d16366a8e826558aa11f6d upstream.
    
    PL011's ->flush_buffer() implementation releases and reacquires the port
    lock.  Due to a race condition here, data can end up being added to the
    circular buffer but neither being discarded nor being sent out.  This
    leads to, for example, tcdrain(2) waiting indefinitely.
    
    Process A                       Process B
    
    uart_flush_buffer()
     - acquire lock
     - circ_clear
     - pl011_flush_buffer()
     -- release lock
     -- dmaengine_terminate_all()
    
                                    uart_write()
                                    - acquire lock
                                    - add chars to circ buffer
                                    - start_tx()
                                    -- start DMA
                                    - release lock
    
     -- acquire lock
     -- turn off DMA
     -- release lock
    
                                    // Data in circ buffer but DMA is off
    
    According to the comment in the code, the releasing of the lock around
    dmaengine_terminate_all() is to avoid a deadlock with the DMA engine
    callback.  However, since the time this code was written, the DMA engine
    API documentation seems to have been clarified to say that
    dmaengine_terminate_all() (in the identically implemented but
    differently named dmaengine_terminate_async() variant) does not wait for
    any running complete callback to be completed and can even be called
    from a complete callback.  So there is no possibility of deadlock if the
    DMA engine driver implements this API correctly.
    
    So we should be able to just remove this release and reacquire of the
    lock to prevent the aforementioned race condition.
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191118092547.32135-1-vincent.whitchurch@axis.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47c07f650a85f81003451fb21c667ff13893f7d0
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Mon Oct 21 08:46:16 2019 -0700

    tty: serial: msm_serial: Fix flow control
    
    commit b027ce258369cbfa88401a691c23dad01deb9f9b upstream.
    
    hci_qca interfaces to the wcn3990 via a uart_dm on the msm8998 mtp and
    Lenovo Miix 630 laptop.  As part of initializing the wcn3990, hci_qca
    disables flow, configures the uart baudrate, and then reenables flow - at
    which point an event is expected to be received over the uart from the
    wcn3990.  It is observed that this event comes after the baudrate change
    but before hci_qca re-enables flow. This is unexpected, and is a result of
    msm_reset() being broken.
    
    According to the uart_dm hardware documentation, it is recommended that
    automatic hardware flow control be enabled by setting RX_RDY_CTL.  Auto
    hw flow control will manage RFR based on the configured watermark.  When
    there is space to receive data, the hw will assert RFR.  When the watermark
    is hit, the hw will de-assert RFR.
    
    The hardware documentation indicates that RFR can me manually managed via
    CR when RX_RDY_CTL is not set.  SET_RFR asserts RFR, and RESET_RFR
    de-asserts RFR.
    
    msm_reset() is broken because after resetting the hardware, it
    unconditionally asserts RFR via SET_RFR.  This enables flow regardless of
    the current configuration, and would undo a previous flow disable
    operation.  It should instead de-assert RFR via RESET_RFR to block flow
    until the hardware is reconfigured.  msm_serial should rely on the client
    to specify that flow should be enabled, either via mctrl() or the termios
    structure, and only assert RFR in response to those triggers.
    
    Fixes: 04896a77a97b ("msm_serial: serial driver for MSM7K onboard serial peripheral.")
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Andy Gross <agross@kernel.org>
    Link: https://lore.kernel.org/r/20191021154616.25457-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22cf3b33e643d47ffb2f9503944760972fc96b54
Author: Peng Fan <peng.fan@nxp.com>
Date:   Tue Nov 5 05:51:10 2019 +0000

    tty: serial: fsl_lpuart: use the sg count from dma_map_sg
    
    commit 487ee861de176090b055eba5b252b56a3b9973d6 upstream.
    
    The dmaengine_prep_slave_sg needs to use sg count returned
    by dma_map_sg, not use sport->dma_tx_nents, because the return
    value of dma_map_sg is not always same with "nents".
    
    When enabling iommu for lpuart + edma, iommu framework may concatenate
    two sgs into one.
    
    Fixes: 6250cc30c4c4e ("tty: serial: fsl_lpuart: Use scatter/gather DMA for Tx")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Link: https://lore.kernel.org/r/1572932977-17866-1-git-send-email-peng.fan@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72f996aa90cc3f76f64bf51d3668adb663f23dfe
Author: MichaÅ MirosÅaw <mirq-linux@rere.qmqm.pl>
Date:   Sat Aug 10 10:42:48 2019 +0200

    usb: gadget: u_serial: add missing port entry locking
    
    commit daf82bd24e308c5a83758047aff1bd81edda4f11 upstream.
    
    gserial_alloc_line() misses locking (for a release barrier) while
    resetting port entry on TTY allocation failure. Fix this.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: MichaÅ MirosÅaw <mirq-linux@rere.qmqm.pl>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Ladislav Michl <ladis@linux-mips.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d41a0a7ae12d3e0ec7778f74d32b968861a2abe
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Wed Sep 25 15:12:29 2019 +0100

    arm64: tegra: Fix 'active-low' warning for Jetson TX1 regulator
    
    commit 1e5e929c009559bd7e898ac8e17a5d01037cb057 upstream.
    
    Commit 34993594181d ("arm64: tegra: Enable HDMI on Jetson TX1")
    added a regulator for HDMI on the Jetson TX1 platform. This regulator
    has an active high enable, but the GPIO specifier for enabling the
    regulator incorrectly defines it as active-low. This causes the
    following warning to occur on boot ...
    
     WARNING KERN regulator@10 GPIO handle specifies active low - ignored
    
    The fixed-regulator binding does not use the active-low flag from the
    gpio specifier and purely relies of the presence of the
    'enable-active-high' property to determine if it is active high or low
    (if this property is omitted). Fix this warning by setting the GPIO
    to active-high in the GPIO specifier which aligns with the presense of
    the 'enable-active-high' property.
    
    Fixes: 34993594181d ("arm64: tegra: Enable HDMI on Jetson TX1")
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
