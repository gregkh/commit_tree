commit 46e076f0dad02f5c445a5c27adbd3f06147e33ed
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Mar 18 11:18:56 2018 +0100

    Linux 4.9.88

commit 0e2bc507f242e10c544243b53d8613133cd741d9
Author: Koen Vandeputte <koen.vandeputte@ncentric.com>
Date:   Wed Mar 7 10:46:39 2018 -0600

    PCI: dwc: Fix enumeration end when reaching root subordinate
    
    commit fc110ebdd014dd1368c98e7685b47789c31fab42 upstream.
    
    The subordinate value indicates the highest bus number which can be
    reached downstream though a certain device.
    
    Commit a20c7f36bd3d ("PCI: Do not allocate more buses than available in
    parent") ensures that downstream devices cannot assign busnumbers higher
    than the upstream device subordinate number, which was indeed illogical.
    
    By default, dw_pcie_setup_rc() inits the Root Complex subordinate to a
    value of 0x01.
    
    Due to this combined with above commit, enumeration stops digging deeper
    downstream as soon as bus num 0x01 has been assigned, which is always the
    case for a bridge device.
    
    This results in all devices behind a bridge bus remaining undetected, as
    these would be connected to bus 0x02 or higher.
    
    Fix this by initializing the RC to a subordinate value of 0xff, which is
    not altering hardware behaviour in any way, but informs probing function
    pci_scan_bridge() later on which reads this value back from register.
    
    The following nasty errors during boot are also fixed by this:
    
      pci_bus 0000:02: busn_res: can not insert [bus 02-ff] under [bus 01] (conflicts with (null) [bus 01])
      ...
      pci_bus 0000:03: [bus 03] partially hidden behind bridge 0000:01 [bus 01]
      ...
      pci_bus 0000:04: [bus 04] partially hidden behind bridge 0000:01 [bus 01]
      ...
      pci_bus 0000:05: [bus 05] partially hidden behind bridge 0000:01 [bus 01]
      pci_bus 0000:02: busn_res: [bus 02-ff] end is updated to 05
      pci_bus 0000:02: busn_res: can not insert [bus 02-05] under [bus 01] (conflicts with (null) [bus 01])
      pci_bus 0000:02: [bus 02-05] partially hidden behind bridge 0000:01 [bus 01]
    
    Fixes: a20c7f36bd3d ("PCI: Do not allocate more buses than available in
    parent")
    Tested-by: Niklas Cassel <niklas.cassel@axis.com>
    Tested-by: Fabio Estevam <fabio.estevam@nxp.com>
    Tested-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Koen Vandeputte <koen.vandeputte@ncentric.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Lucas Stach <l.stach@pengutronix.de>
    Cc: stable@vger.kernel.org      # v4.15+
    Cc: Binghui Wang <wangbinghui@hisilicon.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Jianguo Sun <sunjianguo1@huawei.com>
    Cc: Jingoo Han <jingoohan1@gmail.com>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Minghuan Lian <minghuan.Lian@freescale.com>
    Cc: Mingkai Hu <mingkai.hu@freescale.com>
    Cc: Murali Karicheri <m-karicheri2@ti.com>
    Cc: Pratyush Anand <pratyush.anand@gmail.com>
    Cc: Richard Zhu <hongxing.zhu@nxp.com>
    Cc: Roy Zang <tie-fei.zang@freescale.com>
    Cc: Shawn Guo <shawn.guo@linaro.org>
    Cc: Stanimir Varbanov <svarbanov@mm-sol.com>
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Xiaowei Song <songxiaowei@hisilicon.com>
    Cc: Zhou Wang <wangzhou1@hisilicon.com>
    [fabio: adapted to the file location of 4.9 kernel]
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd0d673023edfeaedf57b68e39e7795cdcee4e45
Author: Greentime Hu <green.hu@gmail.com>
Date:   Tue Feb 13 17:09:08 2018 +0800

    earlycon: add reg-offset to physical address before mapping
    
    commit 1f66dd36bb18437397ea0d7882c52f7e3c476e15 upstream.
    
    It will get the wrong virtual address because port->mapbase is not added
    the correct reg-offset yet. We have to update it before earlycon_map()
    is called
    
    Signed-off-by: Greentime Hu <greentime@andestech.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Peter Hurley <peter@hurleysoftware.com>
    Cc: stable@vger.kernel.org
    Fixes: 088da2a17619 ("of: earlycon: Initialize port fields from DT properties")
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbe1ad9742d3e20e403fa09083d815e20fbf0e9b
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Sat Feb 3 12:27:23 2018 +0100

    serial: core: mark port as initialized in autoconfig
    
    commit 714569064adee3c114a2a6490735b94abe269068 upstream.
    
    This is a followup on 44117a1d1732 ("serial: core: mark port as
    initialized after successful IRQ change").
    Nikola has been using autoconfig via setserial and reported a crash
    similar to what I fixed in the earlier mentioned commit. Here I do the
    same fixup for the autoconfig. I wasn't sure that this is the right
    approach. Nikola confirmed that it fixes his crash.
    
    Fixes: b3b576461864 ("tty: serial_core: convert uart_open to use tty_port_open")
    Link: http://lkml.kernel.org/r/20180131072000.GD1853@localhost.localdomain
    Reported-by: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
    Tested-by: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Tested-by: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46d16d6e758b3ff34ad8641e1b4e736ffd9a44ac
Author: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
Date:   Tue Feb 13 15:04:46 2018 +0100

    serial: 8250_pci: Add Brainboxes UC-260 4 port serial device
    
    commit 9f2068f35729948bde84d87a40d135015911345d upstream.
    
    Add PCI ids for two variants of Brainboxes UC-260 quad port
    PCI serial cards.
    
    Suggested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Nikola Ciprich <nikola.ciprich@linuxbox.cz>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dddf4650cf649d741a83d6cac148718171ab60d6
Author: Xinyong <xinyong.fang@linux.alibaba.com>
Date:   Fri Mar 2 19:20:07 2018 +0800

    usb: gadget: f_fs: Fix use-after-free in ffs_fs_kill_sb()
    
    commit 1a087f032111a88e826877449dfb93ceb22b78b9 upstream.
    
    When I debug a kernel crash issue in funcitonfs, found ffs_data.ref
    overflowed, While functionfs is unmounting, ffs_data is put twice.
    
    Commit 43938613c6fd ("drivers, usb: convert ffs_data.ref from atomic_t to
    refcount_t") can avoid refcount overflow, but that is risk some situations.
    So no need put ffs data in ffs_fs_kill_sb, already put in ffs_data_closed.
    
    The issue can be reproduced in Mediatek mt6763 SoC, ffs for ADB device.
    KASAN enabled configuration reports use-after-free errro.
    
    BUG: KASAN: use-after-free in refcount_dec_and_test+0x14/0xe0 at addr ffffffc0579386a0
    Read of size 4 by task umount/4650
    ====================================================
    BUG kmalloc-512 (Tainted: P        W  O   ): kasan: bad access detected
    -----------------------------------------------------------------------------
    
    INFO: Allocated in ffs_fs_mount+0x194/0x844 age=22856 cpu=2 pid=566
        alloc_debug_processing+0x1ac/0x1e8
        ___slab_alloc.constprop.63+0x640/0x648
        __slab_alloc.isra.57.constprop.62+0x24/0x34
        kmem_cache_alloc_trace+0x1a8/0x2bc
        ffs_fs_mount+0x194/0x844
        mount_fs+0x6c/0x1d0
        vfs_kern_mount+0x50/0x1b4
        do_mount+0x258/0x1034
    INFO: Freed in ffs_data_put+0x25c/0x320 age=0 cpu=3 pid=4650
        free_debug_processing+0x22c/0x434
        __slab_free+0x2d8/0x3a0
        kfree+0x254/0x264
        ffs_data_put+0x25c/0x320
        ffs_data_closed+0x124/0x15c
        ffs_fs_kill_sb+0xb8/0x110
        deactivate_locked_super+0x6c/0x98
        deactivate_super+0xb0/0xbc
    INFO: Object 0xffffffc057938600 @offset=1536 fp=0x          (null)
    ......
    Call trace:
    [<ffffff900808cf5c>] dump_backtrace+0x0/0x250
    [<ffffff900808d3a0>] show_stack+0x14/0x1c
    [<ffffff90084a8c04>] dump_stack+0xa0/0xc8
    [<ffffff900826c2b4>] print_trailer+0x158/0x260
    [<ffffff900826d9d8>] object_err+0x3c/0x40
    [<ffffff90082745f0>] kasan_report_error+0x2a8/0x754
    [<ffffff9008274f84>] kasan_report+0x5c/0x60
    [<ffffff9008273208>] __asan_load4+0x70/0x88
    [<ffffff90084cd81c>] refcount_dec_and_test+0x14/0xe0
    [<ffffff9008d98f9c>] ffs_data_put+0x80/0x320
    [<ffffff9008d9d904>] ffs_fs_kill_sb+0xc8/0x110
    [<ffffff90082852a0>] deactivate_locked_super+0x6c/0x98
    [<ffffff900828537c>] deactivate_super+0xb0/0xbc
    [<ffffff90082af0c0>] cleanup_mnt+0x64/0xec
    [<ffffff90082af1b0>] __cleanup_mnt+0x10/0x18
    [<ffffff90080d9e68>] task_work_run+0xcc/0x124
    [<ffffff900808c8c0>] do_notify_resume+0x60/0x70
    [<ffffff90080866e4>] work_pending+0x10/0x14
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Xinyong <xinyong.fang@linux.alibaba.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63f3bac3bedcf415d789ff3ae8fb1361e4ab104e
Author: Pete Zaitcev <zaitcev@kotori.zaitcev.us>
Date:   Fri Mar 9 00:21:14 2018 -0600

    usb: usbmon: Read text within supplied buffer size
    
    commit a5f596830e27e15f7a0ecd6be55e433d776986d8 upstream.
    
    This change fixes buffer overflows and silent data corruption with the
    usbmon device driver text file read operations.
    
    Signed-off-by: Fredrik Noring <noring@nocrew.org>
    Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2708e1e30e02ef4170266d20d90774cce4419e8
Author: Danilo Krummrich <danilokrummrich@dk-develop.de>
Date:   Tue Mar 6 09:38:49 2018 +0100

    usb: quirks: add control message delay for 1b1c:1b20
    
    commit cb88a0588717ba6c756cb5972d75766b273a6817 upstream.
    
    Corsair Strafe RGB keyboard does not respond to usb control messages
    sometimes and hence generates timeouts.
    
    Commit de3af5bf259d ("usb: quirks: add delay init quirk for Corsair
    Strafe RGB keyboard") tried to fix those timeouts by adding
    USB_QUIRK_DELAY_INIT.
    
    Unfortunately, even with this quirk timeouts of usb_control_msg()
    can still be seen, but with a lower frequency (approx. 1 out of 15):
    
    [   29.103520] usb 1-8: string descriptor 0 read error: -110
    [   34.363097] usb 1-8: can't set config #1, error -110
    
    Adding further delays to different locations where usb control
    messages are issued just moves the timeouts to other locations,
    e.g.:
    
    [   35.400533] usbhid 1-8:1.0: can't add hid device: -110
    [   35.401014] usbhid: probe of 1-8:1.0 failed with error -110
    
    The only way to reliably avoid those issues is having a pause after
    each usb control message. In approx. 200 boot cycles no more timeouts
    were seen.
    
    Addionaly, keep USB_QUIRK_DELAY_INIT as it turned out to be necessary
    to have the delay in hub_port_connect() after hub_port_init().
    
    The overall boot time seems not to be influenced by these additional
    delays, even on fast machines and lightweight distributions.
    
    Fixes: de3af5bf259d ("usb: quirks: add delay init quirk for Corsair Strafe RGB keyboard")
    Cc: stable@vger.kernel.org
    Signed-off-by: Danilo Krummrich <danilokrummrich@dk-develop.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7661e9af851da7f5cba97749591080f78dacbca
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 22 17:39:17 2018 +0000

    usbip: vudc: fix null pointer dereference on udc->lock
    
    commit df3334c223a033f562645712e832ca4cbb326bbf upstream.
    
    Currently the driver attempts to spin lock on udc->lock before a NULL
    pointer check is performed on udc, hence there is a potential null
    pointer dereference on udc->lock.  Fix this by moving the null check
    on udc before the lock occurs.
    
    Fixes: ea6873a45a22 ("usbip: vudc: Add SysFS infrastructure for VUDC")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Reviewed-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fad4ea9283da98cd02d7b30e7a5e96e0a414ae1
Author: Teijo Kinnunen <teijo.kinnunen@code-q.fi>
Date:   Thu Mar 1 19:34:29 2018 +0200

    USB: storage: Add JMicron bridge 152d:2567 to unusual_devs.h
    
    commit 5126a504b63d82785eaece3a9c30c660b313785a upstream.
    
    This USB-SATA controller seems to be similar with JMicron bridge
    152d:2566 already on the list. Adding it here fixes "Invalid
    field in cdb" errors.
    
    Signed-off-by: Teijo Kinnunen <teijo.kinnunen@code-q.fi>
    Cc: stable@vger.kernel.org
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d47c874cd72dec1fabff5ecdb766d364467ff56
Author: Joel Fernandes <joelaf@google.com>
Date:   Fri Feb 16 11:02:01 2018 -0800

    staging: android: ashmem: Fix lockdep issue during llseek
    
    commit cb57469c9573f6018cd1302953dd45d6e05aba7b upstream.
    
    ashmem_mutex create a chain of dependencies like so:
    
    (1)
    mmap syscall ->
      mmap_sem ->  (acquired)
      ashmem_mmap
      ashmem_mutex (try to acquire)
      (block)
    
    (2)
    llseek syscall ->
      ashmem_llseek ->
      ashmem_mutex ->  (acquired)
      inode_lock ->
      inode->i_rwsem (try to acquire)
      (block)
    
    (3)
    getdents ->
      iterate_dir ->
      inode_lock ->
      inode->i_rwsem   (acquired)
      copy_to_user ->
      mmap_sem         (try to acquire)
    
    There is a lock ordering created between mmap_sem and inode->i_rwsem
    causing a lockdep splat [2] during a syzcaller test, this patch fixes
    the issue by unlocking the mutex earlier. Functionally that's Ok since
    we don't need to protect vfs_llseek.
    
    [1] https://patchwork.kernel.org/patch/10185031/
    [2] https://lkml.org/lkml/2018/1/10/48
    
    Acked-by: Todd Kjos <tkjos@google.com>
    Cc: Arve Hjonnevag <arve@android.com>
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+8ec30bb7bf1a981a2012@syzkaller.appspotmail.com
    Signed-off-by: Joel Fernandes <joelaf@google.com>
    Acked-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 137cb4fd3f57dc39666c68f0e0b948ac83480201
Author: Frank Mori Hess <fmh6jj@gmail.com>
Date:   Thu Feb 15 15:13:42 2018 -0500

    staging: comedi: fix comedi_nsamples_left.
    
    commit a42ae5905140c324362fe5036ae1dbb16e4d359c upstream.
    
    A rounding error was causing comedi_nsamples_left to
    return the wrong value when nsamples was not a multiple
    of the scan length.
    
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Frank Mori Hess <fmh6jj@gmail.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 438fd54e0527633facedaf195db2755cca28bffd
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Mar 6 15:04:24 2018 +0100

    uas: fix comparison for error code
    
    commit 9a513c905bb95bef79d96feb08621c1ec8d8c4bb upstream.
    
    A typo broke the comparison.
    
    Fixes: cbeef22fd611 ("usb: uas: unconditionally bring back host after reset")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    CC: stable@kernel.org
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85afaf5e2e7c354a60d06ad6ffbd10f5d28bf0e9
Author: Jonas Danielsson <jonas@orbital-systems.com>
Date:   Mon Jan 29 12:39:15 2018 +0100

    tty/serial: atmel: add new version check for usart
    
    commit fd63a8903a2c40425a9811c3371dd4d0f42c0ad3 upstream.
    
    On our at91sam9260 based board the usart0 and usart1 ports report
    their versions (ATMEL_US_VERSION) as 0x10302. This version is not
    included in the current checks in the driver.
    
    Signed-off-by: Jonas Danielsson <jonas@orbital-systems.com>
    Acked-by: Richard Genoud <richard.genoud@gmail.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4afade73b70a47b17718133d0421c03b6ec8d10b
Author: Ulrich Hecht <ulrich.hecht+renesas@gmail.com>
Date:   Thu Feb 15 13:02:27 2018 +0100

    serial: sh-sci: prevent lockup on full TTY buffers
    
    commit 7842055bfce4bf0170d0f61df8b2add8399697be upstream.
    
    When the TTY buffers fill up to the configured maximum, a system lockup
    occurs:
    
    [  598.820128] INFO: rcu_preempt detected stalls on CPUs/tasks:
    [  598.825796]  0-...!: (1 GPs behind) idle=5a6/2/0 softirq=1974/1974 fqs=1
    [  598.832577]  (detected by 3, t=62517 jiffies, g=296, c=295, q=126)
    [  598.838755] Task dump for CPU 0:
    [  598.841977] swapper/0       R  running task        0     0      0 0x00000022
    [  598.849023] Call trace:
    [  598.851476]  __switch_to+0x98/0xb0
    [  598.854870]            (null)
    
    This can be prevented by doing a dummy read of the RX data register.
    
    This issue affects both HSCIF and SCIF ports. Reported for R-Car H3 ES2.0;
    reproduced and fixed on H3 ES1.1. Probably affects other R-Car platforms
    as well.
    
    Reported-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Ulrich Hecht <ulrich.hecht+renesas@gmail.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: stable <stable@vger.kernel.org>
    Tested-by: Nguyen Viet Dung <dung.nguyen.aj@renesas.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24a401dd0fb61b2edc8209ed9577c35f4f25f7fc
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Feb 18 23:01:44 2018 +0100

    ASoC: rt5651: Fix regcache sync errors on resume
    
    commit 2d30e9494f1ea320aaaad0cff9ddd92c87eac355 upstream.
    
    The ALC5651 does not like multi-write accesses, avoid them. This fixes:
    
    rt5651 i2c-10EC5651:00: Unable to sync registers 0x27-0x28. -121
    
    Errors on resume (and all registers after the registers in the error not
    being synced).
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d156461370d52eacca83404d6ed40ce4288af088
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Fri Feb 16 11:58:54 2018 -0200

    ASoC: sgtl5000: Fix suspend/resume
    
    commit a8992973edbb2555e956b90f6fe97c4bc14d761d upstream.
    
    Commit 8419caa72702 ("ASoC: sgtl5000: Do not disable regulators in
    SND_SOC_BIAS_OFF") causes the sgtl5000 to fail after a suspend/resume
    sequence:
    
    Playing WAVE '/media/a2002011001-e02.wav' : Signed 16 bit Little
    Endian, Rate 44100 Hz, Stereo
    aplay: pcm_write:2051: write error: Input/output error
    
    The problem is caused by the fact that the aforementioned commit
    dropped the cache handling, so re-introduce the register map
    resync to fix the problem.
    
    Suggested-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 941bfd125c78713649eefb338e52300585fd6ec7
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Wed Feb 7 14:20:09 2018 -0800

    x86: Treat R_X86_64_PLT32 as R_X86_64_PC32
    
    commit b21ebf2fb4cde1618915a97cc773e287ff49173e upstream.
    
    On i386, there are 2 types of PLTs, PIC and non-PIC.  PIE and shared
    objects must use PIC PLT.  To use PIC PLT, you need to load
    _GLOBAL_OFFSET_TABLE_ into EBX first.  There is no need for that on
    x86-64 since x86-64 uses PC-relative PLT.
    
    On x86-64, for 32-bit PC-relative branches, we can generate PLT32
    relocation, instead of PC32 relocation, which can also be used as
    a marker for 32-bit PC-relative branches.  Linker can always reduce
    PLT32 relocation to PC32 if function is defined locally.   Local
    functions should use PC32 relocation.  As far as Linux kernel is
    concerned, R_X86_64_PLT32 can be treated the same as R_X86_64_PC32
    since Linux kernel doesn't use PLT.
    
    R_X86_64_PLT32 for 32-bit PC-relative branches has been enabled in
    binutils master branch which will become binutils 2.31.
    
    [ hjl is working on having better documentation on this all, but a few
      more notes from him:
    
       "PLT32 relocation is used as marker for PC-relative branches. Because
        of EBX, it looks odd to generate PLT32 relocation on i386 when EBX
        doesn't have GOT.
    
        As for symbol resolution, PLT32 and PC32 relocations are almost
        interchangeable. But when linker sees PLT32 relocation against a
        protected symbol, it can resolved locally at link-time since it is
        used on a branch instruction. Linker can't do that for PC32
        relocation"
    
      but for the kernel use, the two are basically the same, and this
      commit gets things building and working with the current binutils
      master   - Linus ]
    
    Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd696744d6d71fbb8b5f2728b25afb51cc3811d7
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Fri Nov 3 07:58:54 2017 -0500

    x86/module: Detect and skip invalid relocations
    
    commit eda9cec4c9a12208a6f69fbe68f72a6311d50032 upstream.
    
    There have been some cases where external tooling (e.g., kpatch-build)
    creates a corrupt relocation which targets the wrong address.  This is a
    silent failure which can corrupt memory in unexpected places.
    
    On x86, the bytes of data being overwritten by relocations are always
    initialized to zero beforehand.  Use that knowledge to add sanity checks
    to detect such cases before they corrupt memory.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: jeyu@kernel.org
    Cc: live-patching@vger.kernel.org
    Link: http://lkml.kernel.org/r/37450d6c6225e54db107fba447ce9e56e5f758e9.1509713553.git.jpoimboe@redhat.com
    [ Restructured the messages, as it's unclear whether the relocation or the target is corrupted. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a28923bb5b8a0a485c7a3a424e6a2c9f01038a3
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Mar 7 15:22:31 2018 -0500

    NFS: Fix unstable write completion
    
    commit c4f24df942a181699c5bab01b8e5e82b925f77f3 upstream.
    
    We do want to respect the FLUSH_SYNC argument to nfs_commit_inode() to
    ensure that all outstanding COMMIT requests to the inode in question are
    complete. Currently we may exit early from both nfs_commit_inode() and
    nfs_write_inode() even if there are COMMIT requests in flight, or unstable
    writes on the commit list.
    
    In order to get the right semantics w.r.t. sync_inode(), we don't need
    to have nfs_commit_inode() reset the inode dirty flags when called from
    nfs_wb_page() and/or nfs_wb_all(). We just need to ensure that
    nfs_write_inode() leaves them in the right state if there are outstanding
    commits, or stable pages.
    
    Reported-by: Scott Mayhew <smayhew@redhat.com>
    Fixes: dc4fd9ab01ab ("nfs: don't wait on commit in nfs_commit_inode()...")
    Cc: stable@vger.kernel.org # v4.14+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb1f410daf56ecab5c33c9685c868b43023ea833
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Tue Mar 6 12:47:08 2018 -0500

    NFS: Fix an incorrect type in struct nfs_direct_req
    
    commit d9ee65539d3eabd9ade46cca1780e3309ad0f907 upstream.
    
    The start offset needs to be of type loff_t.
    
    Fixed: 5fadeb47dcc5c ("nfs: count DIO good bytes correctly with mirroring")
    Cc: stable@vger.kernel.org # v4.0+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05d42c517250653f53e296e3d59d0b0db1a87296
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:10 2017 -0800

    scsi: qla2xxx: Replace fcport alloc with qla2x00_alloc_fcport
    
    commit 063b36d6b0ad74c748d536f5cb47bac2f850a0fa upstream.
    
    Current code manually allocate an fcport structure that is not properly
    initialize. Replace kzalloc with qla2x00_alloc_fcport, so that all
    fields are initialized.  Also set set scan flag to port found
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cde0b3af90c7edc198956a45a66e5fc92bd04b6c
Author: Clay McClure <clay@daemons.net>
Date:   Thu Sep 21 19:01:34 2017 -0700

    ubi: Fix race condition between ubi volume creation and udev
    
    commit a51a0c8d213594bc094cb8e54aad0cb6d7f7b9a6 upstream.
    
    Similar to commit 714fb87e8bc0 ("ubi: Fix race condition between ubi
    device creation and udev"), we should make the volume active before
    registering it.
    
    Signed-off-by: Clay McClure <clay@daemons.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b496b24aa586e4b528b4ac4f39362bc94f502b6d
Author: Tahsin Erdogan <tahsin@google.com>
Date:   Sat Aug 5 22:41:42 2017 -0400

    ext4: inplace xattr block update fails to deduplicate blocks
    
    commit ec00022030da5761518476096626338bd67df57a upstream.
    
    When an xattr block has a single reference, block is updated inplace
    and it is reinserted to the cache. Later, a cache lookup is performed
    to see whether an existing block has the same contents. This cache
    lookup will most of the time return the just inserted entry so
    deduplication is not achieved.
    
    Running the following test script will produce two xattr blocks which
    can be observed in "File ACL: " line of debugfs output:
    
      mke2fs -b 1024 -I 128 -F -O extent /dev/sdb 1G
      mount /dev/sdb /mnt/sdb
    
      touch /mnt/sdb/{x,y}
    
      setfattr -n user.1 -v aaa /mnt/sdb/x
      setfattr -n user.2 -v bbb /mnt/sdb/x
    
      setfattr -n user.1 -v aaa /mnt/sdb/y
      setfattr -n user.2 -v bbb /mnt/sdb/y
    
      debugfs -R 'stat x' /dev/sdb | cat
      debugfs -R 'stat y' /dev/sdb | cat
    
    This patch defers the reinsertion to the cache so that we can locate
    other blocks with the same contents.
    
    Signed-off-by: Tahsin Erdogan <tahsin@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db6a0cbeb940898dd56167241f68972b50890566
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Nov 22 14:44:19 2016 +0100

    netfilter: x_tables: pack percpu counter allocations
    
    commit ae0ac0ed6fcf5af3be0f63eb935f483f44a402d2 upstream.
    
    instead of allocating each xt_counter individually, allocate 4k chunks
    and then use these for counter allocation requests.
    
    This should speed up rule evaluation by increasing data locality,
    also speeds up ruleset loading because we reduce calls to the percpu
    allocator.
    
    As Eric points out we can't use PAGE_SIZE, page_allocator would fail on
    arches with 64k page size.
    
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dac4448faf499b2597536aecfdb46eeace17a243
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Nov 22 14:44:18 2016 +0100

    netfilter: x_tables: pass xt_counters struct to counter allocator
    
    commit f28e15bacedd444608e25421c72eb2cf4527c9ca upstream.
    
    Keeps some noise away from a followup patch.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61346e20c0017abf77bd133f80c35ca9224fbd96
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Nov 22 14:44:17 2016 +0100

    netfilter: x_tables: pass xt_counters struct instead of packet counter
    
    commit 4d31eef5176df06f218201bc9c0ce40babb41660 upstream.
    
    On SMP we overload the packet counter (unsigned long) to contain
    percpu offset.  Hide this from callers and pass xt_counters address
    instead.
    
    Preparation patch to allocate the percpu counters in page-sized batch
    chunks.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60962e98c38a563b22df67b3e55fd88837d53b83
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 08:10:17 2018 +0100

    netfilter: ipv6: fix use-after-free Write in nf_nat_ipv6_manip_pkt
    
    commit b078556aecd791b0e5cb3a59f4c3a14273b52121 upstream.
    
    l4proto->manip_pkt() can cause reallocation of skb head so pointer
    to the ipv6 header must be reloaded.
    
    Reported-and-tested-by: <syzbot+10005f4292fc9cc89de7@syzkaller.appspotmail.com>
    Fixes: 58a317f1061c89 ("netfilter: ipv6: add IPv6 NAT support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 280ef7b83b3220e12ee72857b35465f79670b33b
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 03:01:45 2018 +0100

    netfilter: bridge: ebt_among: add missing match size checks
    
    commit c4585a2823edf4d1326da44d1524ecbfda26bb37 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    Therefore it must check that the size of the match structure
    provided from userspace is sane by making sure em->match_size
    is at least the minimum size of the expected structure.
    
    The module has such a check, but its only done after accessing
    a structure that might be out of bounds.
    
    tested with: ebtables -A INPUT ... \
    --among-dst fe:fe:fe:fe:fe:fe
    --among-dst fe:fe:fe:fe:fe:fe --among-src fe:fe:fe:fe:ff:f,fe:fe:fe:fe:fe:fb,fe:fe:fe:fe:fc:fd,fe:fe:fe:fe:fe:fd,fe:fe:fe:fe:fe:fe
    --among-src fe:fe:fe:fe:ff:f,fe:fe:fe:fe:fe:fa,fe:fe:fe:fe:fe:fd,fe:fe:fe:fe:fe:fe,fe:fe:fe:fe:fe:fe
    
    Reported-by: <syzbot+fe0b19af568972814355@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21ff147189ff0692d203282c1dced02f83dcf785
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 01:24:15 2018 +0100

    netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets
    
    commit b71812168571fa55e44cdd0254471331b9c4c4c6 upstream.
    
    We need to make sure the offsets are not out of range of the
    total size.
    Also check that they are in ascending order.
    
    The WARN_ON triggered by syzkaller (it sets panic_on_warn) is
    changed to also bail out, no point in continuing parsing.
    
    Briefly tested with simple ruleset of
    -A INPUT --limit 1/s' --log
    plus jump to custom chains using 32bit ebtables binary.
    
    Reported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 034ad9d2eadf3d6696674b46d1e497adc14f92c3
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 16 19:36:28 2018 -0800

    netfilter: IDLETIMER: be syzkaller friendly
    
    commit cfc2c740533368b96e2be5e0a4e8c3cace7d9814 upstream.
    
    We had one report from syzkaller [1]
    
    First issue is that INIT_WORK() should be done before mod_timer()
    or we risk timer being fired too soon, even with a 1 second timer.
    
    Second issue is that we need to reject too big info->timeout
    to avoid overflows in msecs_to_jiffies(info->timeout * 1000), or
    risk looping, if result after overflow is 0.
    
    [1]
    WARNING: CPU: 1 PID: 5129 at kernel/workqueue.c:1444 __queue_work+0xdf4/0x1230 kernel/workqueue.c:1444
    Kernel panic - not syncing: panic_on_warn set ...
    
    CPU: 1 PID: 5129 Comm: syzkaller159866 Not tainted 4.16.0-rc1+ #230
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     panic+0x1e4/0x41c kernel/panic.c:183
     __warn+0x1dc/0x200 kernel/panic.c:547
     report_bug+0x211/0x2d0 lib/bug.c:184
     fixup_bug.part.11+0x37/0x80 arch/x86/kernel/traps.c:178
     fixup_bug arch/x86/kernel/traps.c:247 [inline]
     do_error_trap+0x2d7/0x3e0 arch/x86/kernel/traps.c:296
     do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:315
     invalid_op+0x22/0x40 arch/x86/entry/entry_64.S:988
    RIP: 0010:__queue_work+0xdf4/0x1230 kernel/workqueue.c:1444
    RSP: 0018:ffff8801db507538 EFLAGS: 00010006
    RAX: ffff8801aeb46080 RBX: ffff8801db530200 RCX: ffffffff81481404
    RDX: 0000000000000100 RSI: ffffffff86b42640 RDI: 0000000000000082
    RBP: ffff8801db507758 R08: 1ffff1003b6a0de5 R09: 000000000000000c
    R10: ffff8801db5073f0 R11: 0000000000000020 R12: 1ffff1003b6a0eb6
    R13: ffff8801b1067ae0 R14: 00000000000001f8 R15: dffffc0000000000
     queue_work_on+0x16a/0x1c0 kernel/workqueue.c:1488
     queue_work include/linux/workqueue.h:488 [inline]
     schedule_work include/linux/workqueue.h:546 [inline]
     idletimer_tg_expired+0x44/0x60 net/netfilter/xt_IDLETIMER.c:116
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:829
     </IRQ>
    RIP: 0010:arch_local_irq_restore arch/x86/include/asm/paravirt.h:777 [inline]
    RIP: 0010:__raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
    RIP: 0010:_raw_spin_unlock_irqrestore+0x5e/0xba kernel/locking/spinlock.c:184
    RSP: 0018:ffff8801c20173c8 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff12
    RAX: dffffc0000000000 RBX: 0000000000000282 RCX: 0000000000000006
    RDX: 1ffffffff0d592cd RSI: 1ffff10035d68d23 RDI: 0000000000000282
    RBP: ffff8801c20173d8 R08: 1ffff10038402e47 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff8820e5c8
    R13: ffff8801b1067ad8 R14: ffff8801aea7c268 R15: ffff8801aea7c278
     __debug_object_init+0x235/0x1040 lib/debugobjects.c:378
     debug_object_init+0x17/0x20 lib/debugobjects.c:391
     __init_work+0x2b/0x60 kernel/workqueue.c:506
     idletimer_tg_create net/netfilter/xt_IDLETIMER.c:152 [inline]
     idletimer_tg_checkentry+0x691/0xb00 net/netfilter/xt_IDLETIMER.c:213
     xt_check_target+0x22c/0x7d0 net/netfilter/x_tables.c:850
     check_target net/ipv6/netfilter/ip6_tables.c:533 [inline]
     find_check_entry.isra.7+0x935/0xcf0 net/ipv6/netfilter/ip6_tables.c:575
     translate_table+0xf52/0x1690 net/ipv6/netfilter/ip6_tables.c:744
     do_replace net/ipv6/netfilter/ip6_tables.c:1160 [inline]
     do_ip6t_set_ctl+0x370/0x5f0 net/ipv6/netfilter/ip6_tables.c:1686
     nf_sockopt net/netfilter/nf_sockopt.c:106 [inline]
     nf_setsockopt+0x67/0xc0 net/netfilter/nf_sockopt.c:115
     ipv6_setsockopt+0x10b/0x130 net/ipv6/ipv6_sockglue.c:927
     udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
     sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2976
     SYSC_setsockopt net/socket.c:1850 [inline]
     SyS_setsockopt+0x189/0x360 net/socket.c:1829
     do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
    
    Fixes: 0902b469bd25 ("netfilter: xtables: idletimer target implementation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d105756b4eecf95905eff37001d61ac70049d72
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed Feb 14 17:21:19 2018 +0100

    netfilter: nat: cope with negative port range
    
    commit db57ccf0f2f4624b4c4758379f8165277504fbd7 upstream.
    
    syzbot reported a division by 0 bug in the netfilter nat code:
    
    divide error: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 4168 Comm: syzkaller034710 Not tainted 4.16.0-rc1+ #309
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:nf_nat_l4proto_unique_tuple+0x291/0x530
    net/netfilter/nf_nat_proto_common.c:88
    RSP: 0018:ffff8801b2466778 EFLAGS: 00010246
    RAX: 000000000000f153 RBX: ffff8801b2466dd8 RCX: ffff8801b2466c7c
    RDX: 0000000000000000 RSI: ffff8801b2466c58 RDI: ffff8801db5293ac
    RBP: ffff8801b24667d8 R08: ffff8801b8ba6dc0 R09: ffffffff88af5900
    R10: ffff8801b24666f0 R11: 0000000000000000 R12: 000000002990f153
    R13: 0000000000000001 R14: 0000000000000000 R15: ffff8801b2466c7c
    FS:  00000000017e3880(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000208fdfe4 CR3: 00000001b5340002 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      dccp_unique_tuple+0x40/0x50 net/netfilter/nf_nat_proto_dccp.c:30
      get_unique_tuple+0xc28/0x1c10 net/netfilter/nf_nat_core.c:362
      nf_nat_setup_info+0x1c2/0xe00 net/netfilter/nf_nat_core.c:406
      nf_nat_redirect_ipv6+0x306/0x730 net/netfilter/nf_nat_redirect.c:124
      redirect_tg6+0x7f/0xb0 net/netfilter/xt_REDIRECT.c:34
      ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365
      ip6table_nat_do_chain+0x65/0x80 net/ipv6/netfilter/ip6table_nat.c:41
      nf_nat_ipv6_fn+0x594/0xa80 net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:302
      nf_nat_ipv6_local_fn+0x33/0x5d0
    net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:407
      ip6table_nat_local_fn+0x2c/0x40 net/ipv6/netfilter/ip6table_nat.c:69
      nf_hook_entry_hookfn include/linux/netfilter.h:120 [inline]
      nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483
      nf_hook include/linux/netfilter.h:243 [inline]
      NF_HOOK include/linux/netfilter.h:286 [inline]
      ip6_xmit+0x10ec/0x2260 net/ipv6/ip6_output.c:277
      inet6_csk_xmit+0x2fc/0x580 net/ipv6/inet6_connection_sock.c:139
      dccp_transmit_skb+0x9ac/0x10f0 net/dccp/output.c:142
      dccp_connect+0x369/0x670 net/dccp/output.c:564
      dccp_v6_connect+0xe17/0x1bf0 net/dccp/ipv6.c:946
      __inet_stream_connect+0x2d4/0xf00 net/ipv4/af_inet.c:620
      inet_stream_connect+0x58/0xa0 net/ipv4/af_inet.c:684
      SYSC_connect+0x213/0x4a0 net/socket.c:1639
      SyS_connect+0x24/0x30 net/socket.c:1620
      do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x26/0x9b
    RIP: 0033:0x441c69
    RSP: 002b:00007ffe50cc0be8 EFLAGS: 00000217 ORIG_RAX: 000000000000002a
    RAX: ffffffffffffffda RBX: ffffffffffffffff RCX: 0000000000441c69
    RDX: 000000000000001c RSI: 00000000208fdfe4 RDI: 0000000000000003
    RBP: 00000000006cc018 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000538 R11: 0000000000000217 R12: 0000000000403590
    R13: 0000000000403620 R14: 0000000000000000 R15: 0000000000000000
    Code: 48 89 f0 83 e0 07 83 c0 01 38 d0 7c 08 84 d2 0f 85 46 02 00 00 48 8b
    45 c8 44 0f b7 20 e8 88 97 04 fd 31 d2 41 0f b7 c4 4c 89 f9 <41> f7 f6 48
    c1 e9 03 48 b8 00 00 00 00 00 fc ff df 0f b6 0c 01
    RIP: nf_nat_l4proto_unique_tuple+0x291/0x530
    net/netfilter/nf_nat_proto_common.c:88 RSP: ffff8801b2466778
    
    The problem is that currently we don't have any check on the
    configured port range. A port range == -1 triggers the bug, while
    other negative values may require a very long time to complete the
    following loop.
    
    This commit addresses the issue swapping the two ends on negative
    ranges. The check is performed in nf_nat_l4proto_unique_tuple() since
    the nft nat loads the port values from nft registers at runtime.
    
    v1 -> v2: use the correct 'Fixes' tag
    v2 -> v3: update commit message, drop unneeded READ_ONCE()
    
    Fixes: 5b1158e909ec ("[NETFILTER]: Add NAT support for nf_conntrack")
    Reported-by: syzbot+8012e198bd037f4871e5@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af4b424a412b7f7a8ba2e9f1af9b6920a60130b4
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Mon Feb 12 18:49:39 2018 +0100

    netfilter: x_tables: fix missing timer initialization in xt_LED
    
    commit 10414014bc085aac9f787a5890b33b5605fbcfc4 upstream.
    
    syzbot reported that xt_LED may try to use the ledinternal->timer
    without previously initializing it:
    
    ------------[ cut here ]------------
    kernel BUG at kernel/time/timer.c:958!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 1826 Comm: kworker/1:2 Not tainted 4.15.0+ #306
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Workqueue: ipv6_addrconf addrconf_dad_work
    RIP: 0010:__mod_timer kernel/time/timer.c:958 [inline]
    RIP: 0010:mod_timer+0x7d6/0x13c0 kernel/time/timer.c:1102
    RSP: 0018:ffff8801d24fe9f8 EFLAGS: 00010293
    RAX: ffff8801d25246c0 RBX: ffff8801aec6cb50 RCX: ffffffff816052c6
    RDX: 0000000000000000 RSI: 00000000fffbd14b RDI: ffff8801aec6cb68
    RBP: ffff8801d24fec98 R08: 0000000000000000 R09: 1ffff1003a49fd6c
    R10: ffff8801d24feb28 R11: 0000000000000005 R12: dffffc0000000000
    R13: ffff8801d24fec70 R14: 00000000fffbd14b R15: ffff8801af608f90
    FS:  0000000000000000(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000206d6fd0 CR3: 0000000006a22001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      led_tg+0x1db/0x2e0 net/netfilter/xt_LED.c:75
      ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365
      ip6table_raw_hook+0x65/0x80 net/ipv6/netfilter/ip6table_raw.c:42
      nf_hook_entry_hookfn include/linux/netfilter.h:120 [inline]
      nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483
      nf_hook.constprop.27+0x3f6/0x830 include/linux/netfilter.h:243
      NF_HOOK include/linux/netfilter.h:286 [inline]
      ndisc_send_skb+0xa51/0x1370 net/ipv6/ndisc.c:491
      ndisc_send_ns+0x38a/0x870 net/ipv6/ndisc.c:633
      addrconf_dad_work+0xb9e/0x1320 net/ipv6/addrconf.c:4008
      process_one_work+0xbbf/0x1af0 kernel/workqueue.c:2113
      worker_thread+0x223/0x1990 kernel/workqueue.c:2247
      kthread+0x33c/0x400 kernel/kthread.c:238
      ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:429
    Code: 85 2a 0b 00 00 4d 8b 3c 24 4d 85 ff 75 9f 4c 8b bd 60 fd ff ff e8 bb
    57 10 00 65 ff 0d 94 9a a1 7e e9 d9 fc ff ff e8 aa 57 10 00 <0f> 0b e8 a3
    57 10 00 e9 14 fb ff ff e8 99 57 10 00 4c 89 bd 70
    RIP: __mod_timer kernel/time/timer.c:958 [inline] RSP: ffff8801d24fe9f8
    RIP: mod_timer+0x7d6/0x13c0 kernel/time/timer.c:1102 RSP: ffff8801d24fe9f8
    ---[ end trace f661ab06f5dd8b3d ]---
    
    The ledinternal struct can be shared between several different
    xt_LED targets, but the related timer is currently initialized only
    if the first target requires it. Fix it by unconditionally
    initializing the timer struct.
    
    v1 -> v2: call del_timer_sync() unconditionally, too.
    
    Fixes: 268cb38e1802 ("netfilter: x_tables: add LED trigger target")
    Reported-by: syzbot+10c98dc5725c6c8fc7fb@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f506da51bdf6602ec942f25d682a4de9b59760da
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Feb 7 13:46:25 2018 +0100

    netfilter: add back stackpointer size checks
    
    commit 57ebd808a97d7c5b1e1afb937c2db22beba3c1f8 upstream.
    
    The rationale for removing the check is only correct for rulesets
    generated by ip(6)tables.
    
    In iptables, a jump can only occur to a user-defined chain, i.e.
    because we size the stack based on number of user-defined chains we
    cannot exceed stack size.
    
    However, the underlying binary format has no such restriction,
    and the validation step only ensures that the jump target is a
    valid rule start point.
    
    IOW, its possible to build a rule blob that has no user-defined
    chains but does contain a jump.
    
    If this happens, no jump stack gets allocated and crash occurs
    because no jumpstack was allocated.
    
    Fixes: 7814b6ec6d0d6 ("netfilter: xtables: don't save/restore jumpstack offset")
    Reported-by: syzbot+e783f671527912cd9403@syzkaller.appspotmail.com
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b323768e610b3108bd8ad48329f420d91e7b336b
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Thu May 4 12:20:17 2017 -0300

    tc358743: fix register i2c_rd/wr function fix
    
    commit f2c61f98e0b5f8b53b8fb860e5dcdd661bde7d0b upstream.
    
    The below mentioned fix contains a small but severe bug,
    fix it to make the driver work again.
    
    Fixes: 3538aa6ecfb2 ("[media] tc358743: fix register i2c_rd/wr functions")
    
    Cc: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Hans Verkuil <hansverk@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9763bfc7d27dca13d4b6ac93207b98cbd46dda8
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Feb 13 15:45:59 2017 -0800

    Input: tca8418_keypad - remove double read of key event register
    
    commit 9dd46c02532a6bed6240101ecf4bbc407f8c6adf upstream.
    
    There is no need to tread the same register twice in a row.
    
    Fixes: ea4348c8462a ("Input: tca8418_keypad - hide gcc-4.9 -Wmaybe-un ...")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c20eb490e7381c83f99922831cb74a6730d40ce0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 14:17:17 2017 +0100

    ARM: omap2: hide omap3_save_secure_ram on non-OMAP3 builds
    
    commit 863204cfdae98626a92535ac928ad79f4d6b74ff upstream.
    
    In configurations without CONFIG_OMAP3 but with secure RAM support,
    we now run into a link failure:
    
    arch/arm/mach-omap2/omap-secure.o: In function `omap3_save_secure_ram':
    omap-secure.c:(.text+0x130): undefined reference to `save_secure_ram_context'
    
    The omap3_save_secure_ram() function is only called from the OMAP34xx
    power management code, so we can simply hide that function in the
    appropriate #ifdef.
    
    Fixes: d09220a887f7 ("ARM: OMAP2+: Fix SRAM virt to phys translation for save_secure_ram_context")
    Acked-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25d576732bc52416497734610b9324b3ceaf17ce
Author: Jerry Hoemann <jerry.hoemann@hpe.com>
Date:   Sun Feb 25 20:22:20 2018 -0700

    watchdog: hpwdt: Remove legacy NMI sourcing.
    
    commit 2b3d89b402b085b08498e896c65267a145bed486 upstream.
    
    Gen8 and prior Proliant systems supported the "CRU" interface
    to firmware.  This interfaces allows linux to "call back" into firmware
    to source the cause of an NMI.  This feature isn't fully utilized
    as the actual source of the NMI isn't printed, the driver only
    indicates that the source couldn't be determined when the call
    fails.
    
    With the advent of Gen9, iCRU replaces the CRU. The call back
    feature is no longer available in firmware.  To be compatible and
    not attempt to call back into firmware on system not supporting CRU,
    the SMBIOS table is consulted to determine if it is safe to
    make the call back or not.
    
    This results in about half of the driver code being devoted
    to either making CRU calls or determing if it is safe to make
    CRU calls.  As noted, the driver isn't really using the results of
    the CRU calls.
    
    Furthermore, as a consequence of the Spectre security issue, the
    BIOS/EFI calls are being wrapped into Spectre-disabling section.
    Removing the call back in hpwdt_pretimeout assists in this effort.
    
    As the CRU sourcing of the NMI isn't required for handling the
    NMI and there are security concerns with making the call back, remove
    the legacy (pre Gen9) NMI sourcing and the DMI code to determine if
    the system had the CRU interface.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cda76dc3f86d5dc6839cd894a9465a13eb91501
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 22:02:37 2017 +0100

    watchdog: hpwdt: fix unused variable warning
    
    commit aeebc6ba88ba3758ad95467ff6191fabf2074c13 upstream.
    
    The new hpwdt_my_nmi() function is used conditionally, which produces
    a harmless warning in some configurations:
    
    drivers/watchdog/hpwdt.c:478:12: error: 'hpwdt_my_nmi' defined but not used [-Werror=unused-function]
    
    This moves it inside of the #ifdef that protects its caller, to silence
    the warning.
    
    Fixes: 621174a92851 ("watchdog: hpwdt: Check source of NMI")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c387231337fbc4633bd7f42fca8d05e9ee5c18a8
Author: Jerry Hoemann <jerry.hoemann@hpe.com>
Date:   Mon Oct 23 16:46:17 2017 -0600

    watchdog: hpwdt: Check source of NMI
    
    commit 838534e50e2e5c1e644e30ab6cb28da88eb31368 upstream.
    
    Do not claim the NMI (i.e. return NMI_DONE) if the source of
    the NMI isn't the iLO watchdog or debug.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f55635c749e6fce40e1d7f547398c1269edb68f
Author: Jerry Hoemann <jerry.hoemann@hpe.com>
Date:   Mon Oct 23 16:46:16 2017 -0600

    watchdog: hpwdt: SMBIOS check
    
    commit c42cbe41727a138905a28f8e0b00c147be77ee93 upstream.
    
    This corrects:
    commit cce78da76601 ("watchdog: hpwdt: Add check for UEFI bits")
    
    The test on HPE SMBIOS extension type 219 record "Misc Features"
    bits for UEFI support is incorrect.  The definition of the Misc Features
    bits in the HPE SMBIOS OEM Extensions specification (and related
    firmware) was changed to use a different pair of bits to
    represent UEFI supported.  Howerver, a corresponding change
    to Linux was missed.
    
    Current code/platform work because the iCRU test is working.
    But purpose of cce78da766 is to ensure correct functionality
    on future systems where iCRU isn't supported.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb6155123c9caae207b45fa979554736ba5528ed
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 17 16:58:11 2018 +0100

    x86/paravirt, objtool: Annotate indirect calls
    
    commit 3010a0663fd949d122eca0561b06b0a9453f7866 upstream.
    
    Paravirt emits indirect calls which get flagged by objtool retpoline
    checks, annotate it away because all these indirect calls will be
    patched out before we start userspace.
    
    This patching happens through alternative_instructions() ->
    apply_paravirt() -> pv_init_ops.patch() which will eventually end up
    in paravirt_patch_default(). This function _will_ write direct
    alternatives.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e21257ad836df1ae91c37a7c6f99eddf7d97148e
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 21 09:20:37 2018 +0100

    x86/speculation: Move firmware_restrict_branch_speculation_*() from C to CPP
    
    commit d72f4e29e6d84b7ec02ae93088aa459ac70e733b upstream.
    
    firmware_restrict_branch_speculation_*() recently started using
    preempt_enable()/disable(), but those are relatively high level
    primitives and cause build failures on some 32-bit builds.
    
    Since we want to keep <asm/nospec-branch.h> low level, convert
    them to macros to avoid header hell...
    
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7d3a80ffe97fb089368c64a39a472e67ba790c1
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jan 16 10:38:09 2018 +0100

    x86/boot, objtool: Annotate indirect jump in secondary_startup_64()
    
    commit bd89004f6305cbf7352238f61da093207ee518d6 upstream.
    
    The objtool retpoline validation found this indirect jump. Seeing how
    it's on CPU bringup before we run userspace it should be safe, annotate
    it.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a65655d40c823528a4f9a86e137a4909f1dfa649
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 17 22:34:34 2018 +0100

    x86/speculation, objtool: Annotate indirect calls/jumps for objtool
    
    commit 9e0e3c5130e949c389caabc8033e9799b129e429 upstream.
    
    Annotate the indirect calls/jumps in the CALL_NOSPEC/JUMP_NOSPEC
    alternatives.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6123a6becd80a9bb146ff9562095a9e54429fe01
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:57 2018 +0000

    x86/retpoline: Support retpoline builds with Clang
    
    commit 87358710c1fb4f1bf96bbe2349975ff9953fc9b2 upstream.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a27ede1bedcb21b8514f9bd9fcfc37773b816701
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:54 2018 +0000

    x86/speculation: Use IBRS if available before calling into firmware
    
    commit dd84441a797150dcc49298ec95c459a8891d8bb1 upstream.
    
    Retpoline means the kernel is safe because it has no indirect branches.
    But firmware isn't, so use IBRS for firmware calls if it's available.
    
    Block preemption while IBRS is set, although in practice the call sites
    already had to be doing that.
    
    Ignore hpwdt.c for now. It's taking spinlocks and calling into firmware
    code, from an NMI handler. I don't want to touch that with a bargepole.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afb9851d3d1b10e8445196a8be449193568d27ae
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:56 2018 +0000

    Revert "x86/retpoline: Simplify vmexit_fill_RSB()"
    
    commit d1c99108af3c5992640aa2afa7d2e88c3775c06e upstream.
    
    This reverts commit 1dde7415e99933bb7293d6b2843752cbdb43ec11. By putting
    the RSB filling out of line and calling it, we waste one RSB slot for
    returning from the function itself, which means one fewer actual function
    call we can make if we're doing the Skylake abomination of call-depth
    counting.
    
    It also changed the number of RSB stuffings we do on vmexit from 32,
    which was correct, to 16. Let's just stop with the bikeshedding; it
    didn't actually *fix* anything anyway.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6310a11fce7b9c5c0ac7654f40d6fcc9f48a1240
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Feb 16 13:20:54 2018 -0800

    nospec: Include <asm/barrier.h> dependency
    
    commit eb6174f6d1be16b19cfa43dac296bfed003ce1a6 upstream.
    
    The nospec.h header expects the per-architecture header file
    <asm/barrier.h> to optionally define array_index_mask_nospec(). Include
    that dependency to prevent inadvertent fallback to the default
    array_index_mask_nospec() implementation.
    
    The default implementation may not provide a full mitigation
    on architectures that perform data value speculation.
    
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arch@vger.kernel.org
    Link: http://lkml.kernel.org/r/151881605404.17395.1341935530792574707.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 244a6d39d68b3729cf63a2d7b137c7e975e83300
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Feb 16 13:20:42 2018 -0800

    nospec: Kill array_index_nospec_mask_check()
    
    commit 1d91c1d2c80cb70e2e553845e278b87a960c04da upstream.
    
    There are multiple problems with the dynamic sanity checking in
    array_index_nospec_mask_check():
    
    * It causes unnecessary overhead in the 32-bit case since integer sized
      @index values will no longer cause the check to be compiled away like
      in the 64-bit case.
    
    * In the 32-bit case it may trigger with user controllable input when
      the expectation is that should only trigger during development of new
      kernel enabling.
    
    * The macro reuses the input parameter in multiple locations which is
      broken if someone passes an expression like 'index++' to
      array_index_nospec().
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arch@vger.kernel.org
    Link: http://lkml.kernel.org/r/151881604278.17395.6605847763178076520.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b8dce7403a4b13d5ef1a4d87a6591bba44f4165
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 15:49:24 2018 +0100

    ALSA: hda: add dock and led support for HP ProBook 640 G2
    
    commit 099fd6ca0ad25bc19c5ade2ea4b25b8fadaa11b3 upstream.
    
    This patch adds missing initialisation for HP 2013 UltraSlim Dock
    Line-In/Out PINs and activates keyboard mute/micmute leds
    for HP ProBook 640 G2
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5614f3a69d8b43776960595a7bc8e9d4802c0fdc
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 15:49:03 2018 +0100

    ALSA: hda: add dock and led support for HP EliteBook 820 G3
    
    commit aea808172018ca01abf53db808323aed23281835 upstream.
    
    This patch adds missing initialisation for HP 2013 UltraSlim Dock
    Line-In/Out PINs and activates keyboard mute/micmute leds
    for HP EliteBook 820 G3
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec0011620b81d701151b10e108e6cd9e374f8759
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:06:09 2018 +0100

    ALSA: seq: More protection for concurrent write and ioctl races
    
    commit 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9 upstream.
    
    This patch is an attempt for further hardening against races between
    the concurrent write and ioctls.  The previous fix d15d662e89fc
    ("ALSA: seq: Fix racy pool initializations") covered the race of the
    pool initialization at writer and the pool resize ioctl by the
    client->ioctl_mutex (CVE-2018-1000004).  However, basically this mutex
    should be applied more widely to the whole write operation for
    avoiding the unexpected pool operations by another thread.
    
    The only change outside snd_seq_write() is the additional mutex
    argument to helper functions, so that we can unlock / relock the given
    mutex temporarily during schedule() call for blocking write.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Reviewed-and-tested-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d7252d33dcb8e79d3d46da96e43ce3d56f29c2e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:00:55 2018 +0100

    ALSA: seq: Don't allow resizing pool in use
    
    commit d85739367c6d56e475c281945c68fdb05ca74b4c upstream.
    
    This is a fix for a (sort of) fallout in the recent commit
    d15d662e89fc ("ALSA: seq: Fix racy pool initializations") for
    CVE-2018-1000004.
    As the pool resize deletes the existing cells, it may lead to a race
    when another thread is writing concurrently, eventually resulting a
    UAF.
    
    A simple workaround is not to allow the pool resizing when the pool is
    in use.  It's an invalid behavior in anyway.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5191f41745f84eee6f95dd834635dcb83a36926e
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 13:17:54 2018 +0100

    ALSA: hda/realtek - Make dock sound work on ThinkPad L570
    
    commit e4c07b3b66b7d6a24c2fe3b1ddeff5cd9b378b3a upstream.
    
    One version of Lenovo Thinkpad T570 did not use ALC298
    (like other Kaby Lake devices). Instead it uses ALC292.
    In order to make the Lenovo dock working with that codec
    the dock quirk for ALC292 will be used.
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b992e8f506f808a8df7f4fd1745e0c9461dadb6c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 6 12:14:17 2018 +0100

    ALSA: hda/realtek - Fix dock line-out volume on Dell Precision 7520
    
    commit e312a869cd726c698a75caca0d9e5c22fd3f1534 upstream.
    
    The dock line-out pin (NID 0x17 of ALC3254 codec) on Dell Precision
    7520 may route to three different DACs, 0x02, 0x03 and 0x06.  The
    first two DACS have the volume amp controls while the last one
    doesn't.  And unfortunately, the auto-parser assigns this pin to DAC3,
    resulting in the non-working volume control for the line out.
    
    Fix it by disabling the routing to DAC3 on the corresponding pin.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=199029
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8521dba646dfa3401521967cbfd7f54a1c4c76f
Author: Benjamin Berg <bberg@redhat.com>
Date:   Wed Feb 14 13:29:39 2018 +0100

    ALSA: hda/realtek: Limit mic boost on T480
    
    commit 85981dfd6b0a0fd9ed87ca4a525981b67c21f098 upstream.
    
    The internal mic boost on the T480 is too high. Fix this by applying the
    ALC269_FIXUP_LIMIT_INT_MIC_BOOST fixup to the machine to limit the gain.
    
    Signed-off-by: Benjamin Berg <bberg@redhat.com>
    Tested-by: Benjamin Berg <bberg@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 502a2780ac1113064e550c17d6852b4fb921ee9b
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 26 09:35:01 2018 -0500

    x86/spectre_v2: Don't check microcode versions when running under hypervisors
    
    commit 36268223c1e9981d6cfc33aff8520b3bde4b8114 upstream.
    
    As:
    
     1) It's known that hypervisors lie about the environment anyhow (host
        mismatch)
    
     2) Even if the hypervisor (Xen, KVM, VMWare, etc) provided a valid
        "correct" value, it all gets to be very murky when migration happens
        (do you provide the "new" microcode of the machine?).
    
    And in reality the cloud vendors are the ones that should make sure that
    the microcode that is running is correct and we should just sing lalalala
    and trust them.
    
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Wanpeng Li <kernellwp@gmail.com>
    Cc: kvm <kvm@vger.kernel.org>
    Cc: Krčmář <rkrcmar@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180226213019.GE9497@char.us.oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ed6e56e4fef2896b601c5f06b70e64f15ff9499
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Feb 28 10:39:04 2018 +0200

    perf tools: Fix trigger class trigger_on()
    
    commit de19e5c3c51fdb1ff20d0f61d099db902ff7494b upstream.
    
    trigger_on() means that the trigger is available but not ready, however
    trigger_on() was making it ready. That can segfault if the signal comes
    before trigger_ready(). e.g. (USR2 signal delivery not shown)
    
      $ perf record -e intel_pt//u -S sleep 1
      perf: Segmentation fault
      Obtained 16 stack frames.
      /home/ahunter/bin/perf(sighandler_dump_stack+0x40) [0x4ec550]
      /lib/x86_64-linux-gnu/libc.so.6(+0x36caf) [0x7fa76411acaf]
      /home/ahunter/bin/perf(perf_evsel__disable+0x26) [0x4b9dd6]
      /home/ahunter/bin/perf() [0x43a45b]
      /lib/x86_64-linux-gnu/libc.so.6(+0x36caf) [0x7fa76411acaf]
      /lib/x86_64-linux-gnu/libc.so.6(__xstat64+0x15) [0x7fa7641d2cc5]
      /home/ahunter/bin/perf() [0x4ec6c9]
      /home/ahunter/bin/perf() [0x4ec73b]
      /home/ahunter/bin/perf() [0x4ec73b]
      /home/ahunter/bin/perf() [0x4ec73b]
      /home/ahunter/bin/perf() [0x4eca15]
      /home/ahunter/bin/perf(machine__create_kernel_maps+0x257) [0x4f0b77]
      /home/ahunter/bin/perf(perf_session__new+0xc0) [0x4f86f0]
      /home/ahunter/bin/perf(cmd_record+0x722) [0x43c132]
      /home/ahunter/bin/perf() [0x4a11ae]
      /home/ahunter/bin/perf(main+0x5d4) [0x427fb4]
    
    Note, for testing purposes, this is hard to hit unless you add some sleep()
    in builtin-record.c before record__open().
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: stable@vger.kernel.org
    Fixes: 3dcc4436fa6f ("perf tools: Introduce trigger class")
    Link: http://lkml.kernel.org/r/1519807144-30694-1-git-send-email-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cc98fddf0f4a746071e098075a832fbec4bbfff
Author: Seunghun Han <kkamagui@gmail.com>
Date:   Tue Mar 6 15:21:43 2018 +0100

    x86/MCE: Serialize sysfs changes
    
    commit b3b7c4795ccab5be71f080774c45bbbcc75c2aaf upstream.
    
    The check_interval file in
    
      /sys/devices/system/machinecheck/machinecheck<cpu number>
    
    directory is a global timer value for MCE polling. If it is changed by one
    CPU, mce_restart() broadcasts the event to other CPUs to delete and restart
    the MCE polling timer and __mcheck_cpu_init_timer() reinitializes the
    mce_timer variable.
    
    If more than one CPU writes a specific value to the check_interval file
    concurrently, mce_timer is not protected from such concurrent accesses and
    all kinds of explosions happen. Since only root can write to those sysfs
    variables, the issue is not a big deal security-wise.
    
    However, concurrent writes to these configuration variables is void of
    reason so the proper thing to do is to serialize the access with a mutex.
    
    Boris:
    
     - Make store_int_with_restart() use device_store_ulong() to filter out
       negative intervals
     - Limit min interval to 1 second
     - Correct locking
     - Massage commit message
    
    Signed-off-by: Seunghun Han <kkamagui@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180302202706.9434-1-kkamagui@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4f80945828c025e43273cc094f09fb6fe353dbf
Author: Michael Lyle <mlyle@lyle.org>
Date:   Mon Mar 5 13:41:55 2018 -0800

    bcache: don't attach backing with duplicate UUID
    
    commit 86755b7a96faed57f910f9e6b8061e019ac1ec08 upstream.
    
    This can happen e.g. during disk cloning.
    
    This is an incomplete fix: it does not catch duplicate UUIDs earlier
    when things are still unattached.  It does not unregister the device.
    Further changes to cope better with this are planned but conflict with
    Coly's ongoing improvements to handling device errors.  In the meantime,
    one can manually stop the device after this has happened.
    
    Attempts to attach a duplicate device result in:
    
    [  136.372404] loop: module loaded
    [  136.424461] bcache: register_bdev() registered backing device loop0
    [  136.424464] bcache: bch_cached_dev_attach() Tried to attach loop0 but duplicate UUID already attached
    
    My test procedure is:
    
      dd if=/dev/sdb1 of=imgfile bs=1024 count=262144
      losetup -f imgfile
    
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Tang Junhui <tang.junhui@zte.com.cn>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35d9c9eac24fefeb01a8d74959785bd249f3aeb7
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Mar 5 13:41:54 2018 -0800

    bcache: fix crashes in duplicate cache device register
    
    commit cc40daf91bdddbba72a4a8cd0860640e06668309 upstream.
    
    Kernel crashed when register a duplicate cache device, the call trace is
    bellow:
    [  417.643790] CPU: 1 PID: 16886 Comm: bcache-register Tainted: G
       W  OE    4.15.5-amd64-preempt-sysrq-20171018 #2
    [  417.643861] Hardware name: LENOVO 20ERCTO1WW/20ERCTO1WW, BIOS
    N1DET41W (1.15 ) 12/31/2015
    [  417.643870] RIP: 0010:bdevname+0x13/0x1e
    [  417.643876] RSP: 0018:ffffa3aa9138fd38 EFLAGS: 00010282
    [  417.643884] RAX: 0000000000000000 RBX: ffff8c8f2f2f8000 RCX: ffffd6701f8
    c7edf
    [  417.643890] RDX: ffffa3aa9138fd88 RSI: ffffa3aa9138fd88 RDI: 00000000000
    00000
    [  417.643895] RBP: ffffa3aa9138fde0 R08: ffffa3aa9138fae8 R09: 00000000000
    1850e
    [  417.643901] R10: ffff8c8eed34b271 R11: ffff8c8eed34b250 R12: 00000000000
    00000
    [  417.643906] R13: ffffd6701f78f940 R14: ffff8c8f38f80000 R15: ffff8c8ea7d
    90000
    [  417.643913] FS:  00007fde7e66f500(0000) GS:ffff8c8f61440000(0000) knlGS:
    0000000000000000
    [  417.643919] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  417.643925] CR2: 0000000000000314 CR3: 00000007e6fa0001 CR4: 00000000003
    606e0
    [  417.643931] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 00000000000
    00000
    [  417.643938] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 00000000000
    00400
    [  417.643946] Call Trace:
    [  417.643978]  register_bcache+0x1117/0x1270 [bcache]
    [  417.643994]  ? slab_pre_alloc_hook+0x15/0x3c
    [  417.644001]  ? slab_post_alloc_hook.isra.44+0xa/0x1a
    [  417.644013]  ? kernfs_fop_write+0xf6/0x138
    [  417.644020]  kernfs_fop_write+0xf6/0x138
    [  417.644031]  __vfs_write+0x31/0xcc
    [  417.644043]  ? current_kernel_time64+0x10/0x36
    [  417.644115]  ? __audit_syscall_entry+0xbf/0xe3
    [  417.644124]  vfs_write+0xa5/0xe2
    [  417.644133]  SyS_write+0x5c/0x9f
    [  417.644144]  do_syscall_64+0x72/0x81
    [  417.644161]  entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    [  417.644169] RIP: 0033:0x7fde7e1c1974
    [  417.644175] RSP: 002b:00007fff13009a38 EFLAGS: 00000246 ORIG_RAX: 0000000
    000000001
    [  417.644183] RAX: ffffffffffffffda RBX: 0000000001658280 RCX: 00007fde7e1c
    1974
    [  417.644188] RDX: 000000000000000a RSI: 0000000001658280 RDI: 000000000000
    0001
    [  417.644193] RBP: 000000000000000a R08: 0000000000000003 R09: 000000000000
    0077
    [  417.644198] R10: 000000000000089e R11: 0000000000000246 R12: 000000000000
    0001
    [  417.644203] R13: 000000000000000a R14: 7fffffffffffffff R15: 000000000000
    0000
    [  417.644213] Code: c7 c2 83 6f ee 98 be 20 00 00 00 48 89 df e8 6c 27 3b 0
    0 48 89 d8 5b c3 0f 1f 44 00 00 48 8b 47 70 48 89 f2 48 8b bf 80 00 00 00 <8
    b> b0 14 03 00 00 e9 73 ff ff ff 0f 1f 44 00 00 48 8b 47 40 39
    [  417.644302] RIP: bdevname+0x13/0x1e RSP: ffffa3aa9138fd38
    [  417.644306] CR2: 0000000000000314
    
    When registering duplicate cache device in register_cache(), after failure
    on calling register_cache_set(), bch_cache_release() will be called, then
    bdev will be freed, so bdevname(bdev, name) caused kernel crash.
    
    Since bch_cache_release() will free bdev, so in this patch we make sure
    bdev being freed if register_cache() fail, and do not free bdev again in
    register_bcache() when register_cache() fail.
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reported-by: Marc MERLIN <marc@merlins.org>
    Tested-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e749262f1dcdf70687a432df29a6d70b6b0246a7
Author: Sergey Gorenko <sergeygo@mellanox.com>
Date:   Sun Feb 25 13:39:48 2018 +0200

    IB/mlx5: Fix incorrect size of klms in the memory region
    
    commit da343b6d90e11132f1e917d865d88ee35d6e6d00 upstream.
    
    The value of mr->ndescs greater than mr->max_descs is set in the
    function mlx5_ib_sg_to_klms() if sg_nents is greater than
    mr->max_descs. This is an invalid value and it causes the
    following error when registering mr:
    
    mlx5_0:dump_cqe:276:(pid 193): dump error cqe
    00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00000030: 00 00 00 00 0f 00 78 06 25 00 00 8b 08 1e 8f d3
    
    Cc: <stable@vger.kernel.org> # 4.5
    Fixes: b005d3164713 ("mlx5: Add arbitrary sg list support")
    Signed-off-by: Sergey Gorenko <sergeygo@mellanox.com>
    Tested-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 333cdd174ca62f1640cc04eebb96adc2d76be599
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Mar 8 11:02:46 2018 +0000

    kbuild: Handle builtin dtb file names containing hyphens
    
    commit 55fe6da9efba102866e2fb5b40b04b6a4b26c19e upstream.
    
    cmd_dt_S_dtb constructs the assembly source to incorporate a devicetree
    FDT (that is, the .dtb file) as binary data in the kernel image. This
    assembly source contains labels before and after the binary data. The
    label names incorporate the file name of the corresponding .dtb file.
    Hyphens are not legal characters in labels, so .dtb files built into the
    kernel with hyphens in the file name result in errors like the
    following:
    
    bcm3368-netgear-cvg834g.dtb.S: Assembler messages:
    bcm3368-netgear-cvg834g.dtb.S:5: Error: : no such section
    bcm3368-netgear-cvg834g.dtb.S:5: Error: junk at end of line, first unrecognized character is `-'
    bcm3368-netgear-cvg834g.dtb.S:6: Error: unrecognized opcode `__dtb_bcm3368-netgear-cvg834g_begin:'
    bcm3368-netgear-cvg834g.dtb.S:8: Error: unrecognized opcode `__dtb_bcm3368-netgear-cvg834g_end:'
    bcm3368-netgear-cvg834g.dtb.S:9: Error: : no such section
    bcm3368-netgear-cvg834g.dtb.S:9: Error: junk at end of line, first unrecognized character is `-'
    
    Fix this by updating cmd_dt_S_dtb to transform all hyphens from the file
    name to underscores when constructing the labels.
    
    As of v4.16-rc2, 1139 .dts files across ARM64, ARM, MIPS and PowerPC
    contain hyphens in their names, but the issue only currently manifests
    on Broadcom MIPS platforms, as that is the only place where such files
    are built into the kernel. For example when CONFIG_DT_NETGEAR_CVG834G=y,
    or on BMIPS kernels when the dtbs target is used (in the latter case it
    admittedly shouldn't really build all the dtb.o files, but thats a
    separate issue).
    
    Fixes: 695835511f96 ("MIPS: BMIPS: rename bcm96358nb4ser to bcm6358-neufbox4-sercom")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Reviewed-by: Frank Rowand <frowand.list@gmail.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Michal Marek <michal.lkml@markovi.net>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Kevin Cernekee <cernekee@gmail.com>
    Cc: <stable@vger.kernel.org> # 4.9+
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6687863c4e45b4f6bf2a65d9eece23f494c1b06f
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Mar 6 14:27:58 2018 +0100

    KVM: s390: fix memory overwrites when not using SCA entries
    
    commit f07afa0462b76a5b9c4f3a43d5ac24fdb86a90c2 upstream.
    
    Even if we don't have extended SCA support, we can have more than 64 CPUs
    if we don't enable any HW features that might use the SCA entries.
    
    Now, this works just fine, but we missed a return, which is why we
    would actually store the SCA entries. If we have more than 64 CPUs, this
    means writing outside of the basic SCA - bad.
    
    Let's fix this. This allows > 64 CPUs when running nested (under vSIE)
    without random crashes.
    
    Fixes: a6940674c384 ("KVM: s390: allow 255 VCPUs when sca entries aren't used")
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Message-Id: <20180306132758.21034-1-david@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c5579483bd56aab3e009c8dac047b2051947299
Author: Tiwei Bie <tiwei.bie@intel.com>
Date:   Fri Feb 23 19:41:30 2018 +0800

    virtio_ring: fix num_free handling in error case
    
    commit e82df670235138575b37ff0ec24412a471efd97f upstream.
    
    The vq->vq.num_free hasn't been changed when error happens,
    so it shouldn't be changed when handling the error.
    
    Fixes: 780bc7903a32 ("virtio_ring: Support DMA APIs")
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Tiwei Bie <tiwei.bie@intel.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0fac97933c1da286e770e1cf5d4419191401fdc
Author: Ross Zwisler <zwisler@kernel.org>
Date:   Fri Mar 9 08:36:36 2018 -0700

    loop: Fix lost writes caused by missing flag
    
    commit 1d037577c323e5090ce281e96bc313ab2eee5be2 upstream.
    
    The following commit:
    
    commit aa4d86163e4e ("block: loop: switch to VFS ITER_BVEC")
    
    replaced __do_lo_send_write(), which used ITER_KVEC iterators, with
    lo_write_bvec() which uses ITER_BVEC iterators.  In this change, though,
    the WRITE flag was lost:
    
    -       iov_iter_kvec(&from, ITER_KVEC | WRITE, &kvec, 1, len);
    +       iov_iter_bvec(&i, ITER_BVEC, bvec, 1, bvec->bv_len);
    
    This flag is necessary for the DAX case because we make decisions based on
    whether or not the iterator is a READ or a WRITE in dax_iomap_actor() and
    in dax_iomap_rw().
    
    We end up going through this path in configurations where we combine a PMEM
    device with 4k sectors, a loopback device and DAX.  The consequence of this
    missed flag is that what we intend as a write actually turns into a read in
    the DAX code, so no data is ever written.
    
    The very simplest test case is to create a loopback device and try and
    write a small string to it, then hexdump a few bytes of the device to see
    if the write took.  Without this patch you read back all zeros, with this
    you read back the string you wrote.
    
    For XFS this causes us to fail or panic during the following xfstests:
    
            xfs/074 xfs/078 xfs/216 xfs/217 xfs/250
    
    For ext4 we have a similar issue where writes never happen, but we don't
    currently have any xfstests that use loopback and show this issue.
    
    Fix this by restoring the WRITE flag argument to iov_iter_bvec().  This
    causes the xfstests to all pass.
    
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: stable@vger.kernel.org
    Fixes: commit aa4d86163e4e ("block: loop: switch to VFS ITER_BVEC")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 236ff4dd7cf973076ab46ff62bb6d0087d0f7ed1
Author: Zhang Bo <zbsdta@126.com>
Date:   Mon Feb 5 14:56:21 2018 -0800

    Input: matrix_keypad - fix race when disabling interrupts
    
    commit ea4f7bd2aca9f68470e9aac0fc9432fd180b1fe7 upstream.
    
    If matrix_keypad_stop() is executing and the keypad interrupt is triggered,
    disable_row_irqs() may be called by both matrix_keypad_interrupt() and
    matrix_keypad_stop() at the same time, causing interrupts to be disabled
    twice and the keypad being "stuck" after resuming.
    
    Take lock when setting keypad->stopped to ensure that ISR will not race
    with matrix_keypad_stop() disabling interrupts.
    
    Signed-off-by: Zhang Bo <zbsdta@126.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9fbf7a26088fb2765b1d41cb44da8e39128959c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 22 18:08:53 2018 +0000

    MIPS: OCTEON: irq: Check for null return on kzalloc allocation
    
    commit 902f4d067a50ccf645a58dd5fb1d113b6e0f9b5b upstream.
    
    The allocation of host_data is not null checked, leading to a null
    pointer dereference if the allocation fails. Fix this by adding a null
    check and return with -ENOMEM.
    
    Fixes: 64b139f97c01 ("MIPS: OCTEON: irq: add CIB and other fixes")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: David Daney <david.daney@cavium.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: "Steven J. Hill" <Steven.Hill@cavium.com>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 4.0+
    Patchwork: https://patchwork.linux-mips.org/patch/18658/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 407795ea0ead051a6d3263054a5eb28b97840394
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 22 17:50:12 2018 +0000

    MIPS: ath25: Check for kzalloc allocation failure
    
    commit 1b22b4b28fd5fbc51855219e3238b3ab81da8466 upstream.
    
    Currently there is no null check on a failed allocation of board_data,
    and hence a null pointer dereference will occurr. Fix this by checking
    for the out of memory null pointer.
    
    Fixes: a7473717483e ("MIPS: ath25: add board configuration detection")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 3.19+
    Patchwork: https://patchwork.linux-mips.org/patch/18657/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd523ffe14578c9d840ec59e640cc4757ff37d2
Author: Justin Chen <justinpopo6@gmail.com>
Date:   Wed Sep 27 17:15:15 2017 -0700

    MIPS: BMIPS: Do not mask IPIs during suspend
    
    commit 06a3f0c9f2725f5d7c63c4203839373c9bd00c28 upstream.
    
    Commit a3e6c1eff548 ("MIPS: IRQ: Fix disable_irq on CPU IRQs") fixes an
    issue where disable_irq did not actually disable the irq. The bug caused
    our IPIs to not be disabled, which actually is the correct behavior.
    
    With the addition of commit a3e6c1eff548 ("MIPS: IRQ: Fix disable_irq on
    CPU IRQs"), the IPIs were getting disabled going into suspend, thus
    schedule_ipi() was not being called. This caused deadlocks where
    schedulable task were not being scheduled and other cpus were waiting
    for them to do something.
    
    Add the IRQF_NO_SUSPEND flag so an irq_disable will not be called on the
    IPIs during suspend.
    
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Fixes: a3e6c1eff548 ("MIPS: IRQ: Fix disabled_irq on CPU IRQs")
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17385/
    [jhogan@kernel.org: checkpatch: wrap long lines and fix commit refs]
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eea86015a5400f94ab8858e1cc7d90ea3639c447
Author: James Zhu <James.Zhu@amd.com>
Date:   Tue Mar 6 14:52:35 2018 -0500

    drm/amdgpu:Always save uvd vcpu_bo in VM Mode
    
    commit f8bee6135e167f5b35b7789c74c2956dad14d0d5 upstream.
    
    When UVD is in VM mode, there is not uvd handle exchanged,
    uvd.handles are always 0. So vcpu_bo always need save,
    Otherwise amdgpu driver will fail during suspend/resume.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=105021
    Signed-off-by: James Zhu <James.Zhu@amd.com>
    Reviewed-by: Leo Liu <leo.liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 957cfa6f9bdec9fde07d034f94a44b708e3bf09b
Author: James Zhu <James.Zhu@amd.com>
Date:   Tue Mar 6 14:43:50 2018 -0500

    drm/amdgpu:Correct max uvd handles
    
    commit 0e5ee33d2a54e4c55fe92857f23e1cbb0440d6de upstream.
    
    Max uvd handles should use adev->uvd.max_handles instead of
    AMDGPU_MAX_UVD_HANDLES here.
    
    Signed-off-by: James Zhu <James.Zhu@amd.com>
    Reviewed-by: Leo Liu <leo.liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74d5d735a75b5d018c8275d899b023f1fab26598
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Mar 1 11:05:31 2018 -0500

    drm/amdgpu: fix KV harvesting
    
    commit 545b0bcde7fbd3ee408fa842ea0731451dc4bd0a upstream.
    
    Always set the graphics values to the max for the
    asic type.  E.g., some 1 RB chips are actually 1 RB chips,
    others are actually harvested 2 RB chips.
    
    Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=99353
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a32168f9ba6e5e1f02548696528530808c7cb78b
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Mar 1 11:03:27 2018 -0500

    drm/radeon: fix KV harvesting
    
    commit 0b58d90f89545e021d188c289fa142e5ff9e708b upstream.
    
    Always set the graphics values to the max for the
    asic type.  E.g., some 1 RB chips are actually 1 RB chips,
    others are actually harvested 2 RB chips.
    
    Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=99353
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bf82a32ac88ce9dcf118159fb3743dff29f096f
Author: Rex Zhu <Rex.Zhu@amd.com>
Date:   Tue Feb 27 18:20:53 2018 +0800

    drm/amdgpu: Notify sbios device ready before send request
    
    commit 1bced75f4ab04bec55aecb57d99435dc6d0ae5a0 upstream.
    
    it is required if a platform supports PCIe root complex
    core voltage reduction. After receiving this notification,
    SBIOS can apply default PCIe root complex power policy.
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a7c3cab42a05d8a1428eb0186a8757b50e85202
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/amdgpu: Fix deadlock on runtime suspend
    
    commit aa0aad57909eb321746325951d66af88a83bc956 upstream.
    
    amdgpu's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    amdgpu's ->detect hooks, which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if the ->detect hooks are called
    in the output poll worker's context.  This is safe because the poll
    worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Fixes: d38ceaf99ed0 ("drm/amdgpu: add core driver (v4)")
    Cc: stable@vger.kernel.org # v4.2+: 27d4ee03078a: workqueue: Allow retrieval of current task's work struct
    Cc: stable@vger.kernel.org # v4.2+: 25c058ccaf2e: drm: Allow determining if current task is output poll worker
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Tested-by: Mike Lothian <mike@fireburn.co.uk>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/4c9bf72aacae1eef062bd134cd112e0770a7f121.1518338789.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bacc51c36ebdc39013c12d02cc9090e387c768ac
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/radeon: Fix deadlock on runtime suspend
    
    commit 15734feff2bdac24aa3266c437cffa42851990e3 upstream.
    
    radeon's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    radeon's ->detect hooks, which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if the ->detect hooks are called
    in the output poll worker's context.  This is safe because the poll
    worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Stack trace for posterity:
    
      INFO: task kworker/0:3:31847 blocked for more than 120 seconds
      Workqueue: events output_poll_execute [drm_kms_helper]
      Call Trace:
       schedule+0x3c/0x90
       rpm_resume+0x1e2/0x690
       __pm_runtime_resume+0x3f/0x60
       radeon_lvds_detect+0x39/0xf0 [radeon]
       output_poll_execute+0xda/0x1e0 [drm_kms_helper]
       process_one_work+0x14b/0x440
       worker_thread+0x48/0x4a0
    
      INFO: task kworker/2:0:10493 blocked for more than 120 seconds.
      Workqueue: pm pm_runtime_work
      Call Trace:
       schedule+0x3c/0x90
       schedule_timeout+0x1b3/0x240
       wait_for_common+0xc2/0x180
       wait_for_completion+0x1d/0x20
       flush_work+0xfc/0x1a0
       __cancel_work_timer+0xa5/0x1d0
       cancel_delayed_work_sync+0x13/0x20
       drm_kms_helper_poll_disable+0x1f/0x30 [drm_kms_helper]
       radeon_pmops_runtime_suspend+0x3d/0xa0 [radeon]
       pci_pm_runtime_suspend+0x61/0x1a0
       vga_switcheroo_runtime_suspend+0x21/0x70
       __rpm_callback+0x32/0x70
       rpm_callback+0x24/0x80
       rpm_suspend+0x12b/0x640
       pm_runtime_work+0x6f/0xb0
       process_one_work+0x14b/0x440
       worker_thread+0x48/0x4a0
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=94147
    Fixes: 10ebc0bc0934 ("drm/radeon: add runtime PM support (v2)")
    Cc: stable@vger.kernel.org # v3.13+: 27d4ee03078a: workqueue: Allow retrieval of current task's work struct
    Cc: stable@vger.kernel.org # v3.13+: 25c058ccaf2e: drm: Allow determining if current task is output poll worker
    Cc: Ismo Toijala <ismo.toijala@gmail.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/64ea02c44f91dda19bc563902b97bbc699040392.1518338789.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24f82eef049e4caba0fbf6831dbc1dd255d97967
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/nouveau: Fix deadlock on runtime suspend
    
    commit d61a5c1063515e855bedb1b81e20e50b0ac3541e upstream.
    
    nouveau's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    nouveau_connector_detect() which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if nouveau_connector_detect() is
    called in the output poll worker's context.  This is safe because
    the poll worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Other contexts calling nouveau_connector_detect() do require a runtime
    PM ref, these comprise:
    
      status_store() drm sysfs interface
      ->fill_modes drm callback
      drm_fb_helper_probe_connector_modes()
      drm_mode_getconnector()
      nouveau_connector_hotplug()
      nouveau_display_hpd_work()
      nv17_tv_set_property()
    
    Stack trace for posterity:
    
      INFO: task kworker/0:1:58 blocked for more than 120 seconds.
      Workqueue: events output_poll_execute [drm_kms_helper]
      Call Trace:
       schedule+0x28/0x80
       rpm_resume+0x107/0x6e0
       __pm_runtime_resume+0x47/0x70
       nouveau_connector_detect+0x7e/0x4a0 [nouveau]
       nouveau_connector_detect_lvds+0x132/0x180 [nouveau]
       drm_helper_probe_detect_ctx+0x85/0xd0 [drm_kms_helper]
       output_poll_execute+0x11e/0x1c0 [drm_kms_helper]
       process_one_work+0x184/0x380
       worker_thread+0x2e/0x390
    
      INFO: task kworker/0:2:252 blocked for more than 120 seconds.
      Workqueue: pm pm_runtime_work
      Call Trace:
       schedule+0x28/0x80
       schedule_timeout+0x1e3/0x370
       wait_for_completion+0x123/0x190
       flush_work+0x142/0x1c0
       nouveau_pmops_runtime_suspend+0x7e/0xd0 [nouveau]
       pci_pm_runtime_suspend+0x5c/0x180
       vga_switcheroo_runtime_suspend+0x1e/0xa0
       __rpm_callback+0xc1/0x200
       rpm_callback+0x1f/0x70
       rpm_suspend+0x13c/0x640
       pm_runtime_work+0x6e/0x90
       process_one_work+0x184/0x380
       worker_thread+0x2e/0x390
    
    Bugzilla: https://bugs.archlinux.org/task/53497
    Bugzilla: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870523
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=70388#c33
    Fixes: 5addcf0a5f0f ("nouveau: add runtime PM support (v0.9)")
    Cc: stable@vger.kernel.org # v3.12+: 27d4ee03078a: workqueue: Allow retrieval of current task's work struct
    Cc: stable@vger.kernel.org # v3.12+: 25c058ccaf2e: drm: Allow determining if current task is output poll worker
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/b7d2cbb609a80f59ccabfdf479b9d5907c603ea1.1518338789.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d006d9047c483f1cb0963cd4794d46eb2ff3fd07
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Feb 14 06:41:25 2018 +0100

    drm: Allow determining if current task is output poll worker
    
    commit 25c058ccaf2ebbc3e250ec1e199e161f91fe27d4 upstream.
    
    Introduce a helper to determine if the current task is an output poll
    worker.
    
    This allows us to fix a long-standing deadlock in several DRM drivers
    wherein the ->runtime_suspend callback waits for the output poll worker
    to finish and the worker in turn calls a ->detect callback which waits
    for runtime suspend to finish.  The ->detect callback is invoked from
    multiple call sites and waiting for runtime suspend to finish is the
    correct thing to do except if it's executing in the context of the
    worker.
    
    v2: Expand kerneldoc to specifically mention deadlock between
        output poll worker and autosuspend worker as use case. (Lyude)
    
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/3549ce32e7f1467102e70d3e9cbf70c46bfe108e.1518593424.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 225ce6d7f2133071973c3fd5a006d58dd750a5a5
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    workqueue: Allow retrieval of current task's work struct
    
    commit 27d4ee03078aba88c5e07dcc4917e8d01d046f38 upstream.
    
    Introduce a helper to retrieve the current task's work struct if it is
    a workqueue worker.
    
    This allows us to fix a long-standing deadlock in several DRM drivers
    wherein the ->runtime_suspend callback waits for a specific worker to
    finish and that worker in turn calls a function which waits for runtime
    suspend to finish.  That function is invoked from multiple call sites
    and waiting for runtime suspend to finish is the correct thing to do
    except if it's executing in the context of the worker.
    
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/2d8f603074131eb87e588d2b803a71765bd3a2fd.1518338788.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9ca26c52280da324f5b4511ace7eb074f616920
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Tue Jan 16 16:53:24 2018 +0100

    drm/i915: Always call to intel_display_set_init_power() in resume_early.
    
    commit d13a8479f3584613b6aacbb793eae64578b8f69a upstream.
    
    intel_power_domains_init_hw() calls set_init_power, but when using
    runtime power management this call is skipped. This prevents hw readout
    from taking place.
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=104172
    Link: https://patchwork.freedesktop.org/patch/msgid/20180116155324.75120-1-maarten.lankhorst@linux.intel.com
    Fixes: bc87229f323e ("drm/i915/skl: enable PC9/10 power states during suspend-to-idle")
    Cc: Nivedita Swaminathan <nivedita.swaminathan@intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Patrik Jakobsson <patrik.jakobsson@linux.intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: <stable@vger.kernel.org> # v4.5+
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    (cherry picked from commit ac25dfed15d470d7f23dd817e965b54aa3f94a1e)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f16e7d01b5f4f149d3cd7d5bf38a3e53792acf6
Author: himanshu.madhani@cavium.com <himanshu.madhani@cavium.com>
Date:   Mon Feb 12 10:28:14 2018 -0800

    scsi: qla2xxx: Fix NULL pointer crash due to active timer for ABTS
    
    commit 1514839b366417934e2f1328edb50ed1e8a719f5 upstream.
    
    This patch fixes NULL pointer crash due to active timer running for abort
    IOCB.
    
    From crash dump analysis it was discoverd that get_next_timer_interrupt()
    encountered a corrupted entry on the timer list.
    
     #9 [ffff95e1f6f0fd40] page_fault at ffffffff914fe8f8
        [exception RIP: get_next_timer_interrupt+440]
        RIP: ffffffff90ea3088  RSP: ffff95e1f6f0fdf0  RFLAGS: 00010013
        RAX: ffff95e1f6451028  RBX: 000218e2389e5f40  RCX: 00000001232ad600
        RDX: 0000000000000001  RSI: ffff95e1f6f0fdf0  RDI: 0000000001232ad6
        RBP: ffff95e1f6f0fe40   R8: ffff95e1f6451188   R9: 0000000000000001
        R10: 0000000000000016  R11: 0000000000000016  R12: 00000001232ad5f6
        R13: ffff95e1f6450000  R14: ffff95e1f6f0fdf8  R15: ffff95e1f6f0fe10
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
    
    Looking at the assembly of get_next_timer_interrupt(), address came
    from %r8 (ffff95e1f6451188) which is pointing to list_head with single
    entry at ffff95e5ff621178.
    
     0xffffffff90ea307a <get_next_timer_interrupt+426>:      mov    (%r8),%rdx
     0xffffffff90ea307d <get_next_timer_interrupt+429>:      cmp    %r8,%rdx
     0xffffffff90ea3080 <get_next_timer_interrupt+432>:      je     0xffffffff90ea30a7 <get_next_timer_interrupt+471>
     0xffffffff90ea3082 <get_next_timer_interrupt+434>:      nopw   0x0(%rax,%rax,1)
     0xffffffff90ea3088 <get_next_timer_interrupt+440>:      testb  $0x1,0x18(%rdx)
    
     crash> rd ffff95e1f6451188 10
     ffff95e1f6451188:  ffff95e5ff621178 ffff95e5ff621178   x.b.....x.b.....
     ffff95e1f6451198:  ffff95e1f6451198 ffff95e1f6451198   ..E.......E.....
     ffff95e1f64511a8:  ffff95e1f64511a8 ffff95e1f64511a8   ..E.......E.....
     ffff95e1f64511b8:  ffff95e77cf509a0 ffff95e77cf509a0   ...|.......|....
     ffff95e1f64511c8:  ffff95e1f64511c8 ffff95e1f64511c8   ..E.......E.....
    
     crash> rd ffff95e5ff621178 10
     ffff95e5ff621178:  0000000000000001 ffff95e15936aa00   ..........6Y....
     ffff95e5ff621188:  0000000000000000 00000000ffffffff   ................
     ffff95e5ff621198:  00000000000000a0 0000000000000010   ................
     ffff95e5ff6211a8:  ffff95e5ff621198 000000000000000c   ..b.............
     ffff95e5ff6211b8:  00000f5800000000 ffff95e751f8d720   ....X... ..Q....
    
     ffff95e5ff621178 belongs to freed mempool object at ffff95e5ff621080.
    
     CACHE            NAME                 OBJSIZE  ALLOCATED     TOTAL  SLABS  SSIZE
     ffff95dc7fd74d00 mnt_cache                384      19785     24948    594    16k
       SLAB              MEMORY            NODE  TOTAL  ALLOCATED  FREE
       ffffdc5dabfd8800  ffff95e5ff620000     1     42         29    13
       FREE / [ALLOCATED]
        ffff95e5ff621080  (cpu 6 cache)
    
    Examining the contents of that memory reveals a pointer to a constant string
    in the driver, "abort\0", which is set by qla24xx_async_abort_cmd().
    
     crash> rd ffffffffc059277c 20
     ffffffffc059277c:  6e490074726f6261 0074707572726574   abort.Interrupt.
     ffffffffc059278c:  00676e696c6c6f50 6920726576697244   Polling.Driver i
     ffffffffc059279c:  646f6d207325206e 6974736554000a65   n %s mode..Testi
     ffffffffc05927ac:  636976656420676e 786c252074612065   ng device at %lx
     ffffffffc05927bc:  6b63656843000a2e 646f727020676e69   ...Checking prod
     ffffffffc05927cc:  6f20444920746375 0a2e706968632066   uct ID of chip..
     ffffffffc05927dc:  5120646e756f4600 204130303232414c   .Found QLA2200A
     ffffffffc05927ec:  43000a2e70696843 20676e696b636568   Chip...Checking
     ffffffffc05927fc:  65786f626c69616d 6c636e69000a2e73   mailboxes...incl
     ffffffffc059280c:  756e696c2f656475 616d2d616d642f78   ude/linux/dma-ma
    
     crash> struct -ox srb_iocb
     struct srb_iocb {
               union {
                   struct {...} logio;
                   struct {...} els_logo;
                   struct {...} tmf;
                   struct {...} fxiocb;
                   struct {...} abt;
                   struct ct_arg ctarg;
                   struct {...} mbx;
                   struct {...} nack;
        [0x0 ] } u;
        [0xb8] struct timer_list timer;
        [0x108] void (*timeout)(void *);
     }
     SIZE: 0x110
    
     crash> ! bc
     ibase=16
     obase=10
     B8+40
     F8
    
    The object is a srb_t, and at offset 0xf8 within that structure
    (i.e. ffff95e5ff621080 + f8 -> ffff95e5ff621178) is a struct timer_list.
    
    Cc: <stable@vger.kernel.org> #4.4+
    Fixes: 4440e46d5db7 ("[SCSI] qla2xxx: Add IOCB Abort command asynchronous handling.")
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84e1a8afc7dba0bca8986faba01032e46eae82f9
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Sun Dec 31 23:34:54 2017 +0100

    drm/i915: Try EDID bitbanging on HDMI after failed read
    
    commit 90024a5951029685acc5396258f1b0de9b23cf4a upstream.
    
    The ACK/NACK implementation as found in e.g. the G965 has the falling
    clock edge and the release of the data line after the ACK for the received
    byte happen at the same time.
    
    This is conformant with the I2C specification, which allows a zero hold
    time, see footnote [3]: "A device must internally provide a hold time of
    at least 300 ns for the SDA signal (with respect to the V IH(min) of the
    SCL signal) to bridge the undefined region of the falling edge of SCL."
    
    Some HDMI-to-VGA converters apparently fail to adhere to this requirement
    and latch SDA at the falling clock edge, so instead of an ACK
    sometimes a NACK is read and the slave (i.e. the EDID ROM) ends the
    transfer.
    
    The bitbanging releases the data line for the ACK only 1/4 bit time after
    the falling clock edge, so a slave will see the correct value no matter
    if it samples at the rising or the falling clock edge or in the center.
    
    Fallback to bitbanging is already done for the CRT connector.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=92685
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/a39f080b-81a5-4c93-b3f7-7cb0a58daca3@rwthex-w2-a.rwth-ad.de
    (cherry picked from commit cfb926e148e99acc02351d72e8b85e32b5f786ef)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bb454527e18b04437c41b2b4dfe31678fb4146d
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 15:29:09 2018 +0200

    RDMA/mlx5: Fix integer overflow while resizing CQ
    
    commit 28e9091e3119933c38933cb8fc48d5618eb784c8 upstream.
    
    The user can provide very large cqe_size which will cause to integer
    overflow as it can be seen in the following UBSAN warning:
    
    =======================================================================
    UBSAN: Undefined behaviour in drivers/infiniband/hw/mlx5/cq.c:1192:53
    signed integer overflow:
    64870 * 65536 cannot be represented in type 'int'
    CPU: 0 PID: 267 Comm: syzkaller605279 Not tainted 4.15.0+ #90 Hardware
    name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xde/0x164
     ? dma_virt_map_sg+0x22c/0x22c
     ubsan_epilogue+0xe/0x81
     handle_overflow+0x1f3/0x251
     ? __ubsan_handle_negate_overflow+0x19b/0x19b
     ? lock_acquire+0x440/0x440
     mlx5_ib_resize_cq+0x17e7/0x1e40
     ? cyc2ns_read_end+0x10/0x10
     ? native_read_msr_safe+0x6c/0x9b
     ? cyc2ns_read_end+0x10/0x10
     ? mlx5_ib_modify_cq+0x220/0x220
     ? sched_clock_cpu+0x18/0x200
     ? lookup_get_idr_uobject+0x200/0x200
     ? rdma_lookup_get_uobject+0x145/0x2f0
     ib_uverbs_resize_cq+0x207/0x3e0
     ? ib_uverbs_ex_create_cq+0x250/0x250
     ib_uverbs_write+0x7f9/0xef0
     ? cyc2ns_read_end+0x10/0x10
     ? print_irqtrace_events+0x280/0x280
     ? ib_uverbs_ex_create_cq+0x250/0x250
     ? uverbs_devnode+0x110/0x110
     ? sched_clock_cpu+0x18/0x200
     ? do_raw_spin_trylock+0x100/0x100
     ? __lru_cache_add+0x16e/0x290
     __vfs_write+0x10d/0x700
     ? uverbs_devnode+0x110/0x110
     ? kernel_read+0x170/0x170
     ? sched_clock_cpu+0x18/0x200
     ? security_file_permission+0x93/0x260
     vfs_write+0x1b0/0x550
     SyS_write+0xc7/0x1a0
     ? SyS_read+0x1a0/0x1a0
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    RIP: 0033:0x433549
    RSP: 002b:00007ffe63bd1ea8 EFLAGS: 00000217
    =======================================================================
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 3.13
    Fixes: bde51583f49b ("IB/mlx5: Add support for resize CQ")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b063d53d7a1d209da183d72ac0fda85a449d5810
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 18:49:16 2018 +0200

    RDMA/ucma: Check that user doesn't overflow QP state
    
    commit a5880b84430316e3e1c1f5d23aa32ec6000cc717 upstream.
    
    The QP state is limited and declared in enum ib_qp_state,
    but ucma user was able to supply any possible (u32) value.
    
    Reported-by: syzbot+0df1ab766f8924b1edba@syzkaller.appspotmail.com
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e126e3eaa219534530bedadb21d16482d538e344
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 14:49:09 2018 +0200

    RDMA/ucma: Limit possible option size
    
    commit 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c upstream.
    
    Users of ucma are supposed to provide size of option level,
    in most paths it is supposed to be equal to u8 or u16, but
    it is not the case for the IB path record, where it can be
    multiple of struct ib_path_rec_data.
    
    This patch takes simplest possible approach and prevents providing
    values more than possible to allocate.
    
    Reported-by: syzbot+a38b0e9f694c379ca7ce@syzkaller.appspotmail.com
    Fixes: 7ce86409adcd ("RDMA/ucma: Allow user space to set service type")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
