commit 12cd844a39ed16aa183a820a54fe6f9a0bb4cd14
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 11 18:03:09 2020 +0100

    Linux 4.14.173

commit 30238068123e304f02f594726451e3e93a06ce42
Author: Dragos Tarcatu <dragos_tarcatu@mentor.com>
Date:   Fri Feb 7 20:53:25 2020 +0200

    ASoC: topology: Fix memleak in soc_tplg_manifest_load()
    
    commit 242c46c023610dbc0213fc8fb6b71eb836bc5d95 upstream.
    
    In case of ABI version mismatch, _manifest needs to be freed as
    it is just a copy of the original topology manifest. However, if
    a driver manifest handler is defined, that would get executed and
    the cleanup is never reached. Fix that by getting the return status
    of manifest() instead of returning directly.
    
    Fixes: 583958fa2e52 ("ASoC: topology: Make manifest backward compatible from ABI v4")
    Signed-off-by: Dragos Tarcatu <dragos_tarcatu@mentor.com>
    Link: https://lore.kernel.org/r/20200207185325.22320-3-dragos_tarcatu@mentor.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df4bf4dceb3a9fd91dc85b3d7f6ca1a0afdf8a75
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Nov 9 17:21:18 2018 +0200

    xhci: handle port status events for removed USB3 hcd
    
    commit 1245374e9b8340fc255fd51b2015173a83050d03 upstream.
    
    At xhci removal the USB3 hcd (shared_hcd) is removed before the primary
    USB2 hcd. Interrupts for port status changes may still occur for USB3
    ports after the shared_hcd is freed, causing  NULL pointer dereference.
    
    Check if xhci->shared_hcd is still valid before handing USB3 port events
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Peter Chen <peter.chen@nxp.com>
    Tested-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: Macpaul Lin <macpaul.lin@mediatek.com>
    [redone for 4.14.y based on Mathias's comments]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec6ddb1aa82fb7fae89ce485ee874eae26de56a8
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Feb 17 07:43:03 2020 -0500

    dm integrity: fix a deadlock due to offloading to an incorrect workqueue
    
    commit 53770f0ec5fd417429775ba006bc4abe14002335 upstream.
    
    If we need to perform synchronous I/O in dm_integrity_map_continue(),
    we must make sure that we are not in the map function - in order to
    avoid the deadlock due to bio queuing in generic_make_request. To
    avoid the deadlock, we offload the request to metadata_wq.
    
    However, metadata_wq also processes metadata updates for write requests.
    If there are too many requests that get offloaded to metadata_wq at the
    beginning of dm_integrity_map_continue, the workqueue metadata_wq
    becomes clogged and the system is incapable of processing any metadata
    updates.
    
    This causes a deadlock because all the requests that need to do metadata
    updates wait for metadata_wq to proceed and metadata_wq waits inside
    wait_and_add_new_range until some existing request releases its range
    lock (which doesn't happen because the range lock is released after
    metadata update).
    
    In order to fix the deadlock, we create a new workqueue offload_wq and
    offload requests to it - so that processing of offload_wq is independent
    from processing of metadata_wq.
    
    Fixes: 7eada909bfd7 ("dm: add integrity target")
    Cc: stable@vger.kernel.org # v4.12+
    Reported-by: Heinz Mauelshagen <heinzm@redhat.com>
    Tested-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d78934442b62f345338ab4370d3d875ad1891686
Author: Desnes A. Nunes do Rosario <desnesn@linux.ibm.com>
Date:   Thu Feb 27 10:47:15 2020 -0300

    powerpc: fix hardware PMU exception bug on PowerVM compatibility mode systems
    
    commit fc37a1632d40c80c067eb1bc235139f5867a2667 upstream.
    
    PowerVM systems running compatibility mode on a few Power8 revisions are
    still vulnerable to the hardware defect that loses PMU exceptions arriving
    prior to a context switch.
    
    The software fix for this issue is enabled through the CPU_FTR_PMAO_BUG
    cpu_feature bit, nevertheless this bit also needs to be set for PowerVM
    compatibility mode systems.
    
    Fixes: 68f2f0d431d9ea4 ("powerpc: Add a cpu feature CPU_FTR_PMAO_BUG")
    Signed-off-by: Desnes A. Nunes do Rosario <desnesn@linux.ibm.com>
    Reviewed-by: Leonardo Bras <leonardo@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200227134715.9715-1-desnesn@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 956b5b1c038557d2d2168865846462b03087593e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 17 17:40:50 2020 +0300

    dmaengine: coh901318: Fix a double lock bug in dma_tc_handle()
    
    commit 36d5d22090d13fd3a7a8c9663a711cbe6970aac8 upstream.
    
    The caller is already holding the lock so this will deadlock.
    
    Fixes: 0b58828c923e ("DMAENGINE: COH 901 318 remove irq counting")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20200217144050.3i4ymbytogod4ijn@kili.mountain
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c5cdae8fb84b06e6145cd4f649385db074b56d3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 3 13:16:08 2020 +0300

    hwmon: (adt7462) Fix an error return in ADT7462_REG_VOLT()
    
    commit 44f2f882909fedfc3a56e4b90026910456019743 upstream.
    
    This is only called from adt7462_update_device().  The caller expects it
    to return zero on error.  I fixed a similar issue earlier in commit
    a4bf06d58f21 ("hwmon: (adt7462) ADT7462_REG_VOLT_MAX() should return 0")
    but I missed this one.
    
    Fixes: c0b4e3ab0c76 ("adt7462: new hwmon driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Link: https://lore.kernel.org/r/20200303101608.kqjwfcazu2ylhi2a@kili.mountain
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09192ee93dc01a38f479bfa5a0d9a5ddbc8730c7
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Thu Jan 16 15:18:49 2020 +0100

    ARM: imx: build v7_cpu_resume() unconditionally
    
    commit 512a928affd51c2dc631401e56ad5ee5d5dd68b6 upstream.
    
    This function is not only needed by the platform suspend code, but is also
    reused as the CPU resume function when the ARM cores can be powered down
    completely in deep idle, which is the case on i.MX6SX and i.MX6UL(L).
    
    Providing the static inline stub whenever CONFIG_SUSPEND is disabled means
    that those platforms will hang on resume from cpuidle if suspend is disabled.
    
    So there are two problems:
    
      - The static inline stub masks the linker error
      - The function is not available where needed
    
    Fix both by just building the function unconditionally, when
    CONFIG_SOC_IMX6 is enabled. The actual code is three instructions long,
    so it's arguably ok to just leave it in for all i.MX6 kernel configurations.
    
    Fixes: 05136f0897b5 ("ARM: imx: support arm power off in cpuidle for i.mx6sx")
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Signed-off-by: Rouven Czerwinski <r.czerwinski@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de374e15e8d82104765cbebfe88bf2bd8b3b8698
Author: Dennis Dalessandro <dennis.dalessandro@intel.com>
Date:   Tue Feb 25 14:54:45 2020 -0500

    IB/hfi1, qib: Ensure RCU is locked when accessing list
    
    commit 817a68a6584aa08e323c64283fec5ded7be84759 upstream.
    
    The packet handling function, specifically the iteration of the qp list
    for mad packet processing misses locking RCU before running through the
    list. Not only is this incorrect, but the list_for_each_entry_rcu() call
    can not be called with a conditional check for lock dependency. Remedy
    this by invoking the rcu lock and unlock around the critical section.
    
    This brings MAD packet processing in line with what is done for non-MAD
    packets.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Link: https://lore.kernel.org/r/20200225195445.140896.41873.stgit@awfm-01.aw.intel.com
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c1099c80cd1cefd205c604e22b0e69c6728a7ad
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Fri Feb 21 15:20:26 2020 +0000

    RMDA/cm: Fix missing ib_cm_destroy_id() in ib_cm_insert_listen()
    
    commit c14dfddbd869bf0c2bafb7ef260c41d9cebbcfec upstream.
    
    The algorithm pre-allocates a cm_id since allocation cannot be done while
    holding the cm.lock spinlock, however it doesn't free it on one error
    path, leading to a memory leak.
    
    Fixes: 067b171b8679 ("IB/cm: Share listening CM IDs")
    Link: https://lore.kernel.org/r/20200221152023.GA8680@ziepe.ca
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8457a77611f784abb4b02d01e0e97a1ad3139c8c
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Mon Mar 2 19:16:14 2020 +0100

    RDMA/iwcm: Fix iwcm work deallocation
    
    commit 810dbc69087b08fd53e1cdd6c709f385bc2921ad upstream.
    
    The dealloc_work_entries() function must update the work_free_list pointer
    while freeing its entries, since potentially called again on same list. A
    second iteration of the work list caused system crash. This happens, if
    work allocation fails during cma_iw_listen() and free_cm_id() tries to
    free the list again during cleanup.
    
    Fixes: 922a8e9fb2e0 ("RDMA: iWARP Connection Manager.")
    Link: https://lore.kernel.org/r/20200302181614.17042-1-bmt@zurich.ibm.com
    Reported-by: syzbot+cb0c054eabfba4342146@syzkaller.appspotmail.com
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b2c4c1b2c114c3bbe69351a91213f2aa204a6fc
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Fri Feb 28 15:31:45 2020 +0000

    ASoC: dapm: Correct DAPM handling of active widgets during shutdown
    
    commit 9b3193089e77d3b59b045146ff1c770dd899acb1 upstream.
    
    commit c2caa4da46a4 ("ASoC: Fix widget powerdown on shutdown") added a
    set of the power state during snd_soc_dapm_shutdown to ensure the
    widgets powered off. However, when commit 39eb5fd13dff
    ("ASoC: dapm: Delay w->power update until the changes are written")
    added the new_power member of the widget structure, to differentiate
    between the current power state and the target power state, it did not
    update the shutdown to use the new_power member.
    
    As new_power has not updated it will be left in the state set by the
    last DAPM sequence, ie. 1 for active widgets. So as the DAPM sequence
    for the shutdown proceeds it will turn the widgets on (despite them
    already being on) rather than turning them off.
    
    Fixes: 39eb5fd13dff ("ASoC: dapm: Delay w->power update until the changes are written")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200228153145.21013-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c17ed40a9a0fb37b07b461eeb11b4d48ab4206b
Author: Matthias Reichl <hias@horus.com>
Date:   Thu Feb 20 21:29:56 2020 +0100

    ASoC: pcm512x: Fix unbalanced regulator enable call in probe error path
    
    commit ac0a68997935c4acb92eaae5ad8982e0bb432d56 upstream.
    
    When we get a clock error during probe we have to call
    regulator_bulk_disable before bailing out, otherwise we trigger
    a warning in regulator_put.
    
    Fix this by using "goto err" like in the error cases above.
    
    Fixes: 5a3af1293194d ("ASoC: pcm512x: Add PCM512x driver")
    Signed-off-by: Matthias Reichl <hias@horus.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20200220202956.29233-1-hias@horus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dfcfe0c07fa24f6d601feb3499746c8a4f6102b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 12:17:37 2020 +0100

    ASoC: pcm: Fix possible buffer overflow in dpcm state sysfs output
    
    commit 6c89ffea60aa3b2a33ae7987de1e84bfb89e4c9e upstream.
    
    dpcm_show_state() invokes multiple snprintf() calls to concatenate
    formatted strings on the fixed size buffer.  The usage of snprintf()
    is supposed for avoiding the buffer overflow, but it doesn't work as
    expected because snprintf() doesn't return the actual output size but
    the size to be written.
    
    Fix this bug by replacing all snprintf() calls with scnprintf()
    calls.
    
    Fixes: f86dcef87b77 ("ASoC: dpcm: Add debugFS support for DPCM")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20200218111737.14193-4-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c4e080113704692c075a1cd98fe98d9dcf51e9c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 12:17:36 2020 +0100

    ASoC: intel: skl: Fix possible buffer overflow in debug outputs
    
    commit 549cd0ba04dcfe340c349cd983bd440480fae8ee upstream.
    
    The debugfs output of intel skl driver writes strings with multiple
    snprintf() calls with the fixed size.  This was supposed to avoid the
    buffer overflow but actually it still would, because snprintf()
    returns the expected size to be output, not the actual output size.
    
    Fix it by replacing snprintf() calls with scnprintf().
    
    Fixes: d14700a01f91 ("ASoC: Intel: Skylake: Debugfs facility to dump module config")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20200218111737.14193-3-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 543eafede7b67fec47286f61f7fb370691d415f2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 12:17:35 2020 +0100

    ASoC: intel: skl: Fix pin debug prints
    
    commit 64bbacc5f08c01954890981c63de744df1f29a30 upstream.
    
    skl_print_pins() loops over all given pins but it overwrites the text
    at the very same position while increasing the returned length.
    Fix this to show the all pin contents properly.
    
    Fixes: d14700a01f91 ("ASoC: Intel: Skylake: Debugfs facility to dump module config")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20200218111737.14193-2-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c40c33a8936174dcd78268e619960c2ed421d43b
Author: Dragos Tarcatu <dragos_tarcatu@mentor.com>
Date:   Fri Feb 7 20:53:24 2020 +0200

    ASoC: topology: Fix memleak in soc_tplg_link_elems_load()
    
    commit 2b2d5c4db732c027a14987cfccf767dac1b45170 upstream.
    
    If soc_tplg_link_config() fails, _link needs to be freed in case of
    topology ABI version mismatch. However the current code is returning
    directly and ends up leaking memory in this case.
    This patch fixes that.
    
    Fixes: 593d9e52f9bb ("ASoC: topology: Add support to configure existing physical DAI links")
    Signed-off-by: Dragos Tarcatu <dragos_tarcatu@mentor.com>
    Link: https://lore.kernel.org/r/20200207185325.22320-2-dragos_tarcatu@mentor.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77ed33b91c868973b08c0b3c8b206a88416327b3
Author: Vladimir Oltean <olteanv@gmail.com>
Date:   Sun Jan 26 21:49:50 2020 +0200

    ARM: dts: ls1021a: Restore MDIO compatible to gianfar
    
    commit 7155c44624d061692b4c13aa8343f119c67d4fc0 upstream.
    
    The difference between "fsl,etsec2-mdio" and "gianfar" has to do with
    the .get_tbipa function, which calculates the address of the TBIPA
    register automatically, if not explicitly specified. [ see
    drivers/net/ethernet/freescale/fsl_pq_mdio.c ]. On LS1021A, the TBIPA
    register is at offset 0x30 within the port register block, which is what
    the "gianfar" method of calculating addresses actually does.
    
    Luckily, the bad "compatible" is inconsequential for ls1021a.dtsi,
    because the TBIPA register is explicitly specified via the second "reg"
    (<0x0 0x2d10030 0x0 0x4>), so the "get_tbipa" function is dead code.
    Nonetheless it's good to restore it to its correct value.
    
    Background discussion:
    https://www.spinics.net/lists/stable/msg361156.html
    
    Fixes: c7861adbe37f ("ARM: dts: ls1021: Fix SGMII PCS link remaining down after PHY disconnect")
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 165dc070ce2f57e01541409741c721db65eecd39
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Feb 19 10:25:45 2020 -0500

    dm cache: fix a crash due to incorrect work item cancelling
    
    commit 7cdf6a0aae1cccf5167f3f04ecddcf648b78e289 upstream.
    
    The crash can be reproduced by running the lvm2 testsuite test
    lvconvert-thin-external-cache.sh for several minutes, e.g.:
      while :; do make check T=shell/lvconvert-thin-external-cache.sh; done
    
    The crash happens in this call chain:
    do_waker -> policy_tick -> smq_tick -> end_hotspot_period -> clear_bitset
    -> memset -> __memset -- which accesses an invalid pointer in the vmalloc
    area.
    
    The work entry on the workqueue is executed even after the bitmap was
    freed. The problem is that cancel_delayed_work doesn't wait for the
    running work item to finish, so the work item can continue running and
    re-submitting itself even after cache_postsuspend. In order to make sure
    that the work item won't be running, we must use cancel_delayed_work_sync.
    
    Also, change flush_workqueue to drain_workqueue, so that if some work item
    submits itself or another work item, we are properly waiting for both of
    them.
    
    Fixes: c6b4fcbad044 ("dm: add cache target")
    Cc: stable@vger.kernel.org # v3.9
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e4c735e6ba9a5add132c8bcad8700029fbdb609
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Feb 9 19:33:39 2020 +0300

    dmaengine: tegra-apb: Prevent race conditions of tasklet vs free list
    
    commit c33ee1301c393a241d6424e36eff1071811b1064 upstream.
    
    The interrupt handler puts a half-completed DMA descriptor on a free list
    and then schedules tasklet to process bottom half of the descriptor that
    executes client's callback, this creates possibility to pick up the busy
    descriptor from the free list. Thus, let's disallow descriptor's re-use
    until it is fully processed.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200209163356.6439-3-digetx@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04b31630d500a14e64090470b7d5adf58b2be4fd
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Feb 9 19:33:38 2020 +0300

    dmaengine: tegra-apb: Fix use-after-free
    
    commit 94788af4ed039476ff3527b0e6a12c1dc42cb022 upstream.
    
    I was doing some experiments with I2C and noticed that Tegra APB DMA
    driver crashes sometime after I2C DMA transfer termination. The crash
    happens because tegra_dma_terminate_all() bails out immediately if pending
    list is empty, and thus, it doesn't release the half-completed descriptors
    which are getting re-used before ISR tasklet kicks-in.
    
     tegra-i2c 7000c400.i2c: DMA transfer timeout
     elants_i2c 0-0010: elants_i2c_irq: failed to read data: -110
     ------------[ cut here ]------------
     WARNING: CPU: 0 PID: 142 at lib/list_debug.c:45 __list_del_entry_valid+0x45/0xac
     list_del corruption, ddbaac44->next is LIST_POISON1 (00000100)
     Modules linked in:
     CPU: 0 PID: 142 Comm: kworker/0:2 Not tainted 5.5.0-rc2-next-20191220-00175-gc3605715758d-dirty #538
     Hardware name: NVIDIA Tegra SoC (Flattened Device Tree)
     Workqueue: events_freezable_power_ thermal_zone_device_check
     [<c010e5c5>] (unwind_backtrace) from [<c010a1c5>] (show_stack+0x11/0x14)
     [<c010a1c5>] (show_stack) from [<c0973925>] (dump_stack+0x85/0x94)
     [<c0973925>] (dump_stack) from [<c011f529>] (__warn+0xc1/0xc4)
     [<c011f529>] (__warn) from [<c011f7e9>] (warn_slowpath_fmt+0x61/0x78)
     [<c011f7e9>] (warn_slowpath_fmt) from [<c042497d>] (__list_del_entry_valid+0x45/0xac)
     [<c042497d>] (__list_del_entry_valid) from [<c047a87f>] (tegra_dma_tasklet+0x5b/0x154)
     [<c047a87f>] (tegra_dma_tasklet) from [<c0124799>] (tasklet_action_common.constprop.0+0x41/0x7c)
     [<c0124799>] (tasklet_action_common.constprop.0) from [<c01022ab>] (__do_softirq+0xd3/0x2a8)
     [<c01022ab>] (__do_softirq) from [<c0124683>] (irq_exit+0x7b/0x98)
     [<c0124683>] (irq_exit) from [<c0168c19>] (__handle_domain_irq+0x45/0x80)
     [<c0168c19>] (__handle_domain_irq) from [<c043e429>] (gic_handle_irq+0x45/0x7c)
     [<c043e429>] (gic_handle_irq) from [<c0101aa5>] (__irq_svc+0x65/0x94)
     Exception stack(0xde2ebb90 to 0xde2ebbd8)
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200209163356.6439-2-digetx@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a350eee14eca753114567d66ee1895187f9f40e6
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Feb 26 15:16:15 2020 -0800

    x86/pkeys: Manually set X86_FEATURE_OSPKE to preserve existing changes
    
    commit 735a6dd02222d8d070c7bb748f25895239ca8c92 upstream.
    
    Explicitly set X86_FEATURE_OSPKE via set_cpu_cap() instead of calling
    get_cpu_cap() to pull the feature bit from CPUID after enabling CR4.PKE.
    Invoking get_cpu_cap() effectively wipes out any {set,clear}_cpu_cap()
    changes that were made between this_cpu->c_init() and setup_pku(), as
    all non-synthetic feature words are reinitialized from the CPU's CPUID
    values.
    
    Blasting away capability updates manifests most visibility when running
    on a VMX capable CPU, but with VMX disabled by BIOS.  To indicate that
    VMX is disabled, init_ia32_feat_ctl() clears X86_FEATURE_VMX, using
    clear_cpu_cap() instead of setup_clear_cpu_cap() so that KVM can report
    which CPU is misconfigured (KVM needs to probe every CPU anyways).
    Restoring X86_FEATURE_VMX from CPUID causes KVM to think VMX is enabled,
    ultimately leading to an unexpected #GP when KVM attempts to do VMXON.
    
    Arguably, init_ia32_feat_ctl() should use setup_clear_cpu_cap() and let
    KVM figure out a different way to report the misconfigured CPU, but VMX
    is not the only feature bit that is affected, i.e. there is precedent
    that tweaking feature bits via {set,clear}_cpu_cap() after ->c_init()
    is expected to work.  Most notably, x86_init_rdrand()'s clearing of
    X86_FEATURE_RDRAND when RDRAND malfunctions is also overwritten.
    
    Fixes: 0697694564c8 ("x86/mm/pkeys: Actually enable Memory Protection Keys in the CPU")
    Reported-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Tested-by: Jacob Keller <jacob.e.keller@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20200226231615.13664-1-sean.j.christopherson@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4719f6d07b2c63223f7452c435c5f578f105cfe
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Feb 28 12:54:06 2020 +0100

    vt: selection, push sel_lock up
    
    commit e8c75a30a23c6ba63f4ef6895cbf41fd42f21aa2 upstream.
    
    sel_lock cannot nest in the console lock. Thanks to syzkaller, the
    kernel states firmly:
    
    > WARNING: possible circular locking dependency detected
    > 5.6.0-rc3-syzkaller #0 Not tainted
    > ------------------------------------------------------
    > syz-executor.4/20336 is trying to acquire lock:
    > ffff8880a2e952a0 (&tty->termios_rwsem){++++}, at: tty_unthrottle+0x22/0x100 drivers/tty/tty_ioctl.c:136
    >
    > but task is already holding lock:
    > ffffffff89462e70 (sel_lock){+.+.}, at: paste_selection+0x118/0x470 drivers/tty/vt/selection.c:374
    >
    > which lock already depends on the new lock.
    >
    > the existing dependency chain (in reverse order) is:
    >
    > -> #2 (sel_lock){+.+.}:
    >        mutex_lock_nested+0x1b/0x30 kernel/locking/mutex.c:1118
    >        set_selection_kernel+0x3b8/0x18a0 drivers/tty/vt/selection.c:217
    >        set_selection_user+0x63/0x80 drivers/tty/vt/selection.c:181
    >        tioclinux+0x103/0x530 drivers/tty/vt/vt.c:3050
    >        vt_ioctl+0x3f1/0x3a30 drivers/tty/vt/vt_ioctl.c:364
    
    This is ioctl(TIOCL_SETSEL).
    Locks held on the path: console_lock -> sel_lock
    
    > -> #1 (console_lock){+.+.}:
    >        console_lock+0x46/0x70 kernel/printk/printk.c:2289
    >        con_flush_chars+0x50/0x650 drivers/tty/vt/vt.c:3223
    >        n_tty_write+0xeae/0x1200 drivers/tty/n_tty.c:2350
    >        do_tty_write drivers/tty/tty_io.c:962 [inline]
    >        tty_write+0x5a1/0x950 drivers/tty/tty_io.c:1046
    
    This is write().
    Locks held on the path: termios_rwsem -> console_lock
    
    > -> #0 (&tty->termios_rwsem){++++}:
    >        down_write+0x57/0x140 kernel/locking/rwsem.c:1534
    >        tty_unthrottle+0x22/0x100 drivers/tty/tty_ioctl.c:136
    >        mkiss_receive_buf+0x12aa/0x1340 drivers/net/hamradio/mkiss.c:902
    >        tty_ldisc_receive_buf+0x12f/0x170 drivers/tty/tty_buffer.c:465
    >        paste_selection+0x346/0x470 drivers/tty/vt/selection.c:389
    >        tioclinux+0x121/0x530 drivers/tty/vt/vt.c:3055
    >        vt_ioctl+0x3f1/0x3a30 drivers/tty/vt/vt_ioctl.c:364
    
    This is ioctl(TIOCL_PASTESEL).
    Locks held on the path: sel_lock -> termios_rwsem
    
    > other info that might help us debug this:
    >
    > Chain exists of:
    >   &tty->termios_rwsem --> console_lock --> sel_lock
    
    Clearly. From the above, we have:
     console_lock -> sel_lock
     sel_lock -> termios_rwsem
     termios_rwsem -> console_lock
    
    Fix this by reversing the console_lock -> sel_lock dependency in
    ioctl(TIOCL_SETSEL). First, lock sel_lock, then console_lock.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Reported-by: syzbot+26183d9746e62da329b8@syzkaller.appspotmail.com
    Fixes: 07e6124a1a46 ("vt: selection, close sel_buffer race")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200228115406.5735-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64489a229bbf902244d8407b02015f30e2cd4651
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Feb 28 12:54:05 2020 +0100

    vt: selection, push console lock down
    
    commit 4b70dd57a15d2f4685ac6e38056bad93e81e982f upstream.
    
    We need to nest the console lock in sel_lock, so we have to push it down
    a bit. Fortunately, the callers of set_selection_* just lock the console
    lock around the function call. So moving it down is easy.
    
    In the next patch, we switch the order.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: 07e6124a1a46 ("vt: selection, close sel_buffer race")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200228115406.5735-1-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 432ef54c0444e7cab85a291347bfc1f69ee6257a
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Mon Feb 10 09:11:31 2020 +0100

    vt: selection, close sel_buffer race
    
    commit 07e6124a1a46b4b5a9b3cacc0c306b50da87abf5 upstream.
    
    syzkaller reported this UAF:
    BUG: KASAN: use-after-free in n_tty_receive_buf_common+0x2481/0x2940 drivers/tty/n_tty.c:1741
    Read of size 1 at addr ffff8880089e40e9 by task syz-executor.1/13184
    
    CPU: 0 PID: 13184 Comm: syz-executor.1 Not tainted 5.4.7 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
    Call Trace:
    ...
     kasan_report+0xe/0x20 mm/kasan/common.c:634
     n_tty_receive_buf_common+0x2481/0x2940 drivers/tty/n_tty.c:1741
     tty_ldisc_receive_buf+0xac/0x190 drivers/tty/tty_buffer.c:461
     paste_selection+0x297/0x400 drivers/tty/vt/selection.c:372
     tioclinux+0x20d/0x4e0 drivers/tty/vt/vt.c:3044
     vt_ioctl+0x1bcf/0x28d0 drivers/tty/vt/vt_ioctl.c:364
     tty_ioctl+0x525/0x15a0 drivers/tty/tty_io.c:2657
     vfs_ioctl fs/ioctl.c:47 [inline]
    
    It is due to a race between parallel paste_selection (TIOCL_PASTESEL)
    and set_selection_user (TIOCL_SETSEL) invocations. One uses sel_buffer,
    while the other frees it and reallocates a new one for another
    selection. Add a mutex to close this race.
    
    The mutex takes care properly of sel_buffer and sel_buffer_lth only. The
    other selection global variables (like sel_start, sel_end, and sel_cons)
    are protected only in set_selection_user. The other functions need quite
    some more work to close the races of the variables there. This is going
    to happen later.
    
    This likely fixes (I am unsure as there is no reproducer provided) bug
    206361 too. It was marked as CVE-2020-8648.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Reported-by: syzbot+59997e8d5cbdc486e6f6@syzkaller.appspotmail.com
    References: https://bugzilla.kernel.org/show_bug.cgi?id=206361
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200210081131.23572-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7336a80aebc633d75c09d8dad09cd467807c787a
Author: Jay Dolan <jay.dolan@accesio.com>
Date:   Thu Mar 5 06:05:04 2020 -0800

    serial: 8250_exar: add support for ACCES cards
    
    commit 10c5ccc3c6d32f3d7d6c07de1d3f0f4b52f3e3ab upstream.
    
    Add ACCES VIDs and PIDs that use the Exar chips
    
    Signed-off-by: Jay Dolan <jay.dolan@accesio.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200305140504.22237-1-jay.dolan@accesio.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0960a0ea4b941adb70c443be59e276897553f56
Author: tangbin <tangbin@cmss.chinamobile.com>
Date:   Thu Mar 5 09:38:23 2020 +0800

    tty:serial:mvebu-uart:fix a wrong return
    
    commit 4a3e208474204e879d22a310b244cb2f39e5b1f8 upstream.
    
    in this place, the function should return a
    negative value and the PTR_ERR already returns
    a negative,so return -PTR_ERR() is wrong.
    
    Signed-off-by: tangbin <tangbin@cmss.chinamobile.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20200305013823.20976-1-tangbin@cmss.chinamobile.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 414de95cde5efed15bbe1690ed934dbf44d6f70f
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Tue Jan 28 19:17:59 2020 +0530

    arm: dts: dra76x: Fix mmc3 max-frequency
    
    commit fa63c0039787b8fbacf4d6a51e3ff44288f5b90b upstream.
    
    dra76x is not affected by i887 which requires mmc3 node to be limited to
    a max frequency of 64 MHz. Fix this by overwriting the correct value in
    the the dra76 specific dtsi.
    
    Fixes: 895bd4b3e5ec ("ARM: dts: Add support for dra76-evm")
    Cc: stable@vger.kernel.org
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 265b81a52542e1a76c53f5aa0f3fd3c576b67be7
Author: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Date:   Thu Mar 5 22:28:36 2020 -0800

    fat: fix uninit-memory access for partial initialized inode
    
    commit bc87302a093f0eab45cd4e250c2021299f712ec6 upstream.
    
    When get an error in the middle of reading an inode, some fields in the
    inode might be still not initialized.  And then the evict_inode path may
    access those fields via iput().
    
    To fix, this makes sure that inode fields are initialized.
    
    Reported-by: syzbot+9d82b8de2992579da5d0@syzkaller.appspotmail.com
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/871rqnreqx.fsf@mail.parknet.co.jp
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebf46a94280d3b30dc20a743b4cc0eb328d61723
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Thu Mar 5 22:28:26 2020 -0800

    mm, numa: fix bad pmd by atomically check for pmd_trans_huge when marking page tables prot_numa
    
    commit 8b272b3cbbb50a6a8e62d8a15affd473a788e184 upstream.
    
    : A user reported a bug against a distribution kernel while running a
    : proprietary workload described as "memory intensive that is not swapping"
    : that is expected to apply to mainline kernels.  The workload is
    : read/write/modifying ranges of memory and checking the contents.  They
    : reported that within a few hours that a bad PMD would be reported followed
    : by a memory corruption where expected data was all zeros.  A partial
    : report of the bad PMD looked like
    :
    :   [ 5195.338482] ../mm/pgtable-generic.c:33: bad pmd ffff8888157ba008(000002e0396009e2)
    :   [ 5195.341184] ------------[ cut here ]------------
    :   [ 5195.356880] kernel BUG at ../mm/pgtable-generic.c:35!
    :   ....
    :   [ 5195.410033] Call Trace:
    :   [ 5195.410471]  [<ffffffff811bc75d>] change_protection_range+0x7dd/0x930
    :   [ 5195.410716]  [<ffffffff811d4be8>] change_prot_numa+0x18/0x30
    :   [ 5195.410918]  [<ffffffff810adefe>] task_numa_work+0x1fe/0x310
    :   [ 5195.411200]  [<ffffffff81098322>] task_work_run+0x72/0x90
    :   [ 5195.411246]  [<ffffffff81077139>] exit_to_usermode_loop+0x91/0xc2
    :   [ 5195.411494]  [<ffffffff81003a51>] prepare_exit_to_usermode+0x31/0x40
    :   [ 5195.411739]  [<ffffffff815e56af>] retint_user+0x8/0x10
    :
    : Decoding revealed that the PMD was a valid prot_numa PMD and the bad PMD
    : was a false detection.  The bug does not trigger if automatic NUMA
    : balancing or transparent huge pages is disabled.
    :
    : The bug is due a race in change_pmd_range between a pmd_trans_huge and
    : pmd_nond_or_clear_bad check without any locks held.  During the
    : pmd_trans_huge check, a parallel protection update under lock can have
    : cleared the PMD and filled it with a prot_numa entry between the transhuge
    : check and the pmd_none_or_clear_bad check.
    :
    : While this could be fixed with heavy locking, it's only necessary to make
    : a copy of the PMD on the stack during change_pmd_range and avoid races.  A
    : new helper is created for this as the check if quite subtle and the
    : existing similar helpful is not suitable.  This passed 154 hours of
    : testing (usually triggers between 20 minutes and 24 hours) without
    : detecting bad PMDs or corruption.  A basic test of an autonuma-intensive
    : workload showed no significant change in behaviour.
    
    Although Mel withdrew the patch on the face of LKML comment
    https://lkml.org/lkml/2017/4/10/922 the race window aforementioned is
    still open, and we have reports of Linpack test reporting bad residuals
    after the bad PMD warning is observed.  In addition to that, bad
    rss-counter and non-zero pgtables assertions are triggered on mm teardown
    for the task hitting the bad PMD.
    
     host kernel: mm/pgtable-generic.c:40: bad pmd 00000000b3152f68(8000000d2d2008e7)
     ....
     host kernel: BUG: Bad rss-counter state mm:00000000b583043d idx:1 val:512
     host kernel: BUG: non-zero pgtables_bytes on freeing mm: 4096
    
    The issue is observed on a v4.18-based distribution kernel, but the race
    window is expected to be applicable to mainline kernels, as well.
    
    [akpm@linux-foundation.org: fix comment typo, per Rafael]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Rafael Aquini <aquini@redhat.com>
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: <stable@vger.kernel.org>
    Cc: Zi Yan <zi.yan@cs.rutgers.edu>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Michal Hocko <mhocko@suse.com>
    Link: http://lkml.kernel.org/r/20200216191800.22423-1-aquini@redhat.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1855aaccd74cb9528c24ceb6bc15358a411f65ff
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Wed Mar 4 10:24:29 2020 +0800

    vgacon: Fix a UAF in vgacon_invert_region
    
    commit 513dc792d6060d5ef572e43852683097a8420f56 upstream.
    
    When syzkaller tests, there is a UAF:
      BUG: KASan: use after free in vgacon_invert_region+0x9d/0x110 at addr
        ffff880000100000
      Read of size 2 by task syz-executor.1/16489
      page:ffffea0000004000 count:0 mapcount:-127 mapping:          (null)
      index:0x0
      page flags: 0xfffff00000000()
      page dumped because: kasan: bad access detected
      CPU: 1 PID: 16489 Comm: syz-executor.1 Not tainted
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
      rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
      Call Trace:
        [<ffffffffb119f309>] dump_stack+0x1e/0x20
        [<ffffffffb04af957>] kasan_report+0x577/0x950
        [<ffffffffb04ae652>] __asan_load2+0x62/0x80
        [<ffffffffb090f26d>] vgacon_invert_region+0x9d/0x110
        [<ffffffffb0a39d95>] invert_screen+0xe5/0x470
        [<ffffffffb0a21dcb>] set_selection+0x44b/0x12f0
        [<ffffffffb0a3bfae>] tioclinux+0xee/0x490
        [<ffffffffb0a1d114>] vt_ioctl+0xff4/0x2670
        [<ffffffffb0a0089a>] tty_ioctl+0x46a/0x1a10
        [<ffffffffb052db3d>] do_vfs_ioctl+0x5bd/0xc40
        [<ffffffffb052e2f2>] SyS_ioctl+0x132/0x170
        [<ffffffffb11c9b1b>] system_call_fastpath+0x22/0x27
        Memory state around the buggy address:
         ffff8800000fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00
         00 00
         ffff8800000fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00
         00 00 00
        >ffff880000100000: ff ff ff ff ff ff ff ff ff ff ff ff ff
         ff ff ff
    
    It can be reproduce in the linux mainline by the program:
      #include <stdio.h>
      #include <stdlib.h>
      #include <unistd.h>
      #include <fcntl.h>
      #include <sys/types.h>
      #include <sys/stat.h>
      #include <sys/ioctl.h>
      #include <linux/vt.h>
    
      struct tiocl_selection {
        unsigned short xs;      /* X start */
        unsigned short ys;      /* Y start */
        unsigned short xe;      /* X end */
        unsigned short ye;      /* Y end */
        unsigned short sel_mode; /* selection mode */
      };
    
      #define TIOCL_SETSEL    2
      struct tiocl {
        unsigned char type;
        unsigned char pad;
        struct tiocl_selection sel;
      };
    
      int main()
      {
        int fd = 0;
        const char *dev = "/dev/char/4:1";
    
        struct vt_consize v = {0};
        struct tiocl tioc = {0};
    
        fd = open(dev, O_RDWR, 0);
    
        v.v_rows = 3346;
        ioctl(fd, VT_RESIZEX, &v);
    
        tioc.type = TIOCL_SETSEL;
        ioctl(fd, TIOCLINUX, &tioc);
    
        return 0;
      }
    
    When resize the screen, update the 'vc->vc_size_row' to the new_row_size,
    but when 'set_origin' in 'vgacon_set_origin', vgacon use 'vga_vram_base'
    for 'vc_origin' and 'vc_visible_origin', not 'vc_screenbuf'. It maybe
    smaller than 'vc_screenbuf'. When TIOCLINUX, use the new_row_size to calc
    the offset, it maybe larger than the vga_vram_size in vgacon driver, then
    bad access.
    Also, if set an larger screenbuf firstly, then set an more larger
    screenbuf, when copy old_origin to new_origin, a bad access may happen.
    
    So, If the screen size larger than vga_vram, resize screen should be
    failed. This alse fix CVE-2020-8649 and CVE-2020-8647.
    
    Linus pointed out that overflow checking seems absent. We're saved by
    the existing bounds checks in vc_do_resize() with rather strict
    limits:
    
            if (cols > VC_RESIZE_MAXCOL || lines > VC_RESIZE_MAXROW)
                    return -EINVAL;
    
    Fixes: 0aec4867dca14 ("[PATCH] SVGATextMode fix")
    Reference: CVE-2020-8647 and CVE-2020-8649
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    [danvet: augment commit message to point out overflow safety]
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200304022429.37738-1-zhangxiaoxu5@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8389c9d75e0867064eb5699251da3836191d0420
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Wed Feb 26 18:50:36 2020 +0100

    usb: core: port: do error out if usb_autopm_get_interface() fails
    
    commit 1f8b39bc99a31759e97a0428a5c3f64802c1e61d upstream.
    
    Reviewing a fresh portion of coverity defects in USB core
    (specifically CID 1458999), Alan Stern noted below in [1]:
    
    On Tue, Feb 25, 2020 at 02:39:23PM -0500, Alan Stern wrote:
     > A revised search finds line 997 in drivers/usb/core/hub.c and lines
     > 216, 269 in drivers/usb/core/port.c.  (I didn't try looking in any
     > other directories.)  AFAICT all three of these should check the
     > return value, although a error message in the kernel log probably
     > isn't needed.
    
    Factor out the usb_port_runtime_{resume,suspend}() changes into a
    standalone patch to allow conflict-free porting on top of stable v3.9+.
    
    [1] https://lore.kernel.org/lkml/Pine.LNX.4.44L0.2002251419120.1485-100000@iolanthe.rowland.org
    
    Fixes: 971fcd492cebf5 ("usb: add runtime pm support for usb port device")
    Cc: stable@vger.kernel.org # v3.9+
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200226175036.14946-3-erosca@de.adit-jv.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af20d8c06ec400a3ad8384efea369821ce3db1bd
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Wed Feb 26 18:50:35 2020 +0100

    usb: core: hub: do error out if usb_autopm_get_interface() fails
    
    commit 60e3f6e4ac5b0fda43dad01c32e09409ec710045 upstream.
    
    Reviewing a fresh portion of coverity defects in USB core
    (specifically CID 1458999), Alan Stern noted below in [1]:
    
    On Tue, Feb 25, 2020 at 02:39:23PM -0500, Alan Stern wrote:
     > A revised search finds line 997 in drivers/usb/core/hub.c and lines
     > 216, 269 in drivers/usb/core/port.c.  (I didn't try looking in any
     > other directories.)  AFAICT all three of these should check the
     > return value, although a error message in the kernel log probably
     > isn't needed.
    
    Factor out the usb_remove_device() change into a standalone patch to
    allow conflict-free integration on top of the earliest stable branches.
    
    [1] https://lore.kernel.org/lkml/Pine.LNX.4.44L0.2002251419120.1485-100000@iolanthe.rowland.org
    
    Fixes: 253e05724f9230 ("USB: add a "remove hardware" sysfs attribute")
    Cc: stable@vger.kernel.org # v2.6.33+
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200226175036.14946-2-erosca@de.adit-jv.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc6da5b19a0f892655783d932f45bc3fd73fd76f
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Wed Feb 26 18:50:34 2020 +0100

    usb: core: hub: fix unhandled return by employing a void function
    
    commit 63d6d7ed475c53dc1cabdfedf63de1fd8dcd72ee upstream.
    
    Address below Coverity complaint (Feb 25, 2020, 8:06 AM CET):

commit 504a02d494b7cda36bb8175704e908c72d247c9e
Author: Dan Lazewatsky <dlaz@chromium.org>
Date:   Wed Feb 26 14:34:38 2020 +0000

    usb: quirks: add NO_LPM quirk for Logitech Screen Share
    
    commit b96ed52d781a2026d0c0daa5787c6f3d45415862 upstream.
    
    LPM on the device appears to cause xHCI host controllers to claim
    that there isn't enough bandwidth to support additional devices.
    
    Signed-off-by: Dan Lazewatsky <dlaz@chromium.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: https://lore.kernel.org/r/20200226143438.1445-1-gustavo.padovan@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c4d9b1e0c68fc969929b6a21b370d4c11542508
Author: Jim Lin <jilin@nvidia.com>
Date:   Mon Mar 2 22:21:35 2020 +0800

    usb: storage: Add quirk for Samsung Fit flash
    
    commit 86d92f5465958752481269348d474414dccb1552 upstream.
    
    Current driver has 240 (USB2.0) and 2048 (USB3.0) as max_sectors,
    e.g., /sys/bus/scsi/devices/0:0:0:0/max_sectors
    
    If data access times out, driver error handling will issue a port
    reset.
    Sometimes Samsung Fit (090C:1000) flash disk will not respond to
    later Set Address or Get Descriptor command.
    
    Adding this quirk to limit max_sectors to 64 sectors to avoid issue
    occurring.
    
    Signed-off-by: Jim Lin <jilin@nvidia.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1583158895-31342-1-git-send-email-jilin@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18a7af5cb6de5c44c3d0f6880b9d6a1d79783ad4
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Wed Feb 19 06:01:03 2020 +1000

    cifs: don't leak -EAGAIN for stat() during reconnect
    
    commit fc513fac56e1b626ae48a74d7551d9c35c50129e upstream.
    
    If from cifs_revalidate_dentry_attr() the SMB2/QUERY_INFO call fails with an
    error, such as STATUS_SESSION_EXPIRED, causing the session to be reconnected
    it is possible we will leak -EAGAIN back to the application even for
    system calls such as stat() where this is not a valid error.
    
    Fix this by re-trying the operation from within cifs_revalidate_dentry_attr()
    if cifs_get_inode_info*() returns -EAGAIN.
    
    This fixes stat() and possibly also other system calls that uses
    cifs_revalidate_dentry*().
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34bf8ca7879b3c47c74f6f39662812ad9e0a7555
Author: Tim Harvey <tharvey@gateworks.com>
Date:   Wed Feb 19 15:19:36 2020 -0800

    net: thunderx: workaround BGX TX Underflow issue
    
    [ Upstream commit 971617c3b761c876d686a2188220a33898c90e99 ]
    
    While it is not yet understood why a TX underflow can easily occur
    for SGMII interfaces resulting in a TX wedge. It has been found that
    disabling/re-enabling the LMAC resolves the issue.
    
    Signed-off-by: Tim Harvey <tharvey@gateworks.com>
    Reviewed-by: Robert Jones <rjones@gateworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2de3b93e89ffe5ac4efce187790fa9535143e90
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Feb 19 22:23:18 2020 -0800

    x86/xen: Distribute switch variables for initialization
    
    [ Upstream commit 9038ec99ceb94fb8d93ade5e236b2928f0792c7c ]
    
    Variables declared in a switch statement before any case statements
    cannot be automatically initialized with compiler instrumentation (as
    they are not part of any execution flow). With GCC's proposed automatic
    stack variable initialization feature, this triggers a warning (and they
    don't get initialized). Clang's automatic stack variable initialization
    (via CONFIG_INIT_STACK_ALL=y) doesn't throw a warning, but it also
    doesn't initialize such variables[1]. Note that these warnings (or silent
    skipping) happen before the dead-store elimination optimization phase,
    so even when the automatic initializations are later elided in favor of
    direct initializations, the warnings remain.
    
    To avoid these problems, move such variables into the "case" where
    they're used or lift them up into the main function body.
    
    arch/x86/xen/enlighten_pv.c: In function ‘xen_write_msr_safe’:
    arch/x86/xen/enlighten_pv.c:904:12: warning: statement will never be executed [-Wswitch-unreachable]
      904 |   unsigned which;
          |            ^~~~~
    
    [1] https://bugs.llvm.org/show_bug.cgi?id=44916
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200220062318.69299-1-keescook@chromium.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    [boris: made @which an 'unsigned int']
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdb5136a32ee4156ed215fb4dc1ab2b41510aa71
Author: Keith Busch <kbusch@kernel.org>
Date:   Thu Feb 20 00:59:36 2020 +0900

    nvme: Fix uninitialized-variable warning
    
    [ Upstream commit 15755854d53b4bbb0bb37a0fce66f0156cfc8a17 ]
    
    gcc may detect a false positive on nvme using an unintialized variable
    if setting features fails. Since this is not a fast path, explicitly
    initialize this variable to suppress the warning.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8dc79753d727b4dbb11bb1190f90f4863046f32
Author: H.J. Lu <hjl.tools@gmail.com>
Date:   Thu Jan 16 12:46:51 2020 -0800

    x86/boot/compressed: Don't declare __force_order in kaslr_64.c
    
    [ Upstream commit df6d4f9db79c1a5d6f48b59db35ccd1e9ff9adfc ]
    
    GCC 10 changed the default to -fno-common, which leads to
    
        LD      arch/x86/boot/compressed/vmlinux
      ld: arch/x86/boot/compressed/pgtable_64.o:(.bss+0x0): multiple definition of `__force_order'; \
        arch/x86/boot/compressed/kaslr_64.o:(.bss+0x0): first defined here
      make[2]: *** [arch/x86/boot/compressed/Makefile:119: arch/x86/boot/compressed/vmlinux] Error 1
    
    Since __force_order is already provided in pgtable_64.c, there is no
    need to declare __force_order in kaslr_64.c.
    
    Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200124181811.4780-1-hjl.tools@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ea1411740a0b71b06a6eb8cf4aeeadbf540346b
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Jan 24 08:48:55 2020 +0300

    s390/cio: cio_ignore_proc_seq_next should increase position index
    
    [ Upstream commit 8b101a5e14f2161869636ff9cb4907b7749dc0c2 ]
    
    if seq_file .next fuction does not change position index,
    read after some lseek can generate unexpected output.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206283
    Link: https://lore.kernel.org/r/d44c53a7-9bc1-15c7-6d4a-0c10cb9dffce@virtuozzo.com
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f07ae5c8a2506af5ee979d588faa34514e314a7
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Mon Jan 20 10:17:29 2020 +0100

    watchdog: da9062: do not ping the hw during stop()
    
    [ Upstream commit e9a0e65eda3f78d0b04ec6136c591c000cbc3b76 ]
    
    The da9062 hw has a minimum ping cool down phase of at least 200ms. The
    driver takes that into account by setting the min_hw_heartbeat_ms to
    300ms and the core guarantees that the hw limit is observed for the
    ping() calls. But the core can't guarantee the required minimum ping
    cool down phase if a stop() command is send immediately after the ping()
    command. So it is not allowed to ping the watchdog within the stop()
    command as the driver does. Remove the ping can be done without doubts
    because the watchdog gets disabled anyway and a (re)start resets the
    watchdog counter too.
    
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20200120091729.16256-1-m.felsch@pengutronix.de
    [groeck: Updated description]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29c27650511ab1da770a3f35556c6f7d4d2dfc03
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 15 17:54:19 2020 +0100

    net: ks8851-ml: Fix 16-bit IO operation
    
    [ Upstream commit 58292104832fef6cb4a89f736012c0e0724c3442 ]
    
    The Micrel KSZ8851-16MLLI datasheet DS00002357B page 12 states that
    BE[3:0] signals are active high. This contradicts the measurements
    of the behavior of the actual chip, where these signals behave as
    active low. For example, to read the CIDER register, the bus must
    expose 0xc0c0 during the address phase, which means BE[3:0]=4'b1100.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Petr Stetiar <ynezz@true.cz>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af490013154af4ebe2c02d9d85be6ed84e480f84
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 15 17:54:18 2020 +0100

    net: ks8851-ml: Fix 16-bit data access
    
    [ Upstream commit edacb098ea9c31589276152f09b4439052c0f2b1 ]
    
    The packet data written to and read from Micrel KSZ8851-16MLLI must be
    byte-swapped in 16-bit mode, add this byte-swapping.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Petr Stetiar <ynezz@true.cz>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea29d94b09cb7629a7ddd5e1484c00a56ed20a86
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 15 17:54:17 2020 +0100

    net: ks8851-ml: Remove 8-bit bus accessors
    
    [ Upstream commit 69233bba6543a37755158ca3382765387b8078df ]
    
    This driver is mixing 8-bit and 16-bit bus accessors for reasons unknown,
    however the speculation is that this was some sort of attempt to support
    the 8-bit bus mode.
    
    As per the KS8851-16MLL documentation, all two registers accessed via the
    8-bit accessors are internally 16-bit registers, so reading them using
    16-bit accessors is fine. The KS_CCR read can be converted to 16-bit read
    outright, as it is already a concatenation of two 8-bit reads of that
    register. The KS_RXQCR accesses are 8-bit only, however writing the top
    8 bits of the register is OK as well, since the driver caches the entire
    16-bit register value anyway.
    
    Finally, the driver is not used by any hardware in the kernel right now.
    The only hardware available to me is one with 16-bit bus, so I have no
    way to test the 8-bit bus mode, however it is unlikely this ever really
    worked anyway. If the 8-bit bus mode is ever required, it can be easily
    added by adjusting the 16-bit accessors to do 2 consecutive accesses,
    which is how this should have been done from the beginning.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Petr Stetiar <ynezz@true.cz>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89e30bb46074c1a11b0b6e6797b0bcbcd6d83d54
Author: Harigovindan P <harigovi@codeaurora.org>
Date:   Thu Feb 6 14:26:15 2020 +0530

    drm/msm/dsi: save pll state before dsi host is powered off
    
    [ Upstream commit a1028dcfd0dd97884072288d0c8ed7f30399b528 ]
    
    Save pll state before dsi host is powered off. Without this change
    some register values gets resetted.
    
    Signed-off-by: Harigovindan P <harigovi@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 892afde0f4a1950a3f561253c2a3caf5a5fd8959
Author: John Stultz <john.stultz@linaro.org>
Date:   Wed Jan 29 20:12:44 2020 +0000

    drm: msm: Fix return type of dsi_mgr_connector_mode_valid for kCFI
    
    [ Upstream commit 7fd2dfc3694922eb7ace4801b7208cf9f62ebc7d ]
    
    I was hitting kCFI crashes when building with clang, and after
    some digging finally narrowed it down to the
    dsi_mgr_connector_mode_valid() function being implemented as
    returning an int, instead of an enum drm_mode_status.
    
    This patch fixes it, and appeases the opaque word of the kCFI
    gods (seriously, clang inlining everything makes the kCFI
    backtraces only really rough estimates of where things went
    wrong).
    
    Thanks as always to Sami for his help narrowing this down.
    
    Cc: Rob Clark <robdclark@gmail.com>
    Cc: Sean Paul <sean@poorly.run>
    Cc: Sami Tolvanen <samitolvanen@google.com>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Alistair Delva <adelva@google.com>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: freedreno@lists.freedesktop.org
    Cc: clang-built-linux@googlegroups.com
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3824b96e06cc2b28d708e0b0d51051ee112dd5dc
Author: Brian Masney <masneyb@onstation.org>
Date:   Sat Jan 18 15:41:20 2020 -0500

    drm/msm/mdp5: rate limit pp done timeout warnings
    
    [ Upstream commit ef8c9809acb0805c991bba8bdd4749fc46d44a98 ]
    
    Add rate limiting of the 'pp done time out' warnings since these
    warnings can quickly fill the dmesg buffer.
    
    Signed-off-by: Brian Masney <masneyb@onstation.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60fe004c8cb3b48b575c807988aacef81aef8867
Author: Sergey Organov <sorganov@gmail.com>
Date:   Wed Jan 29 14:21:46 2020 +0300

    usb: gadget: serial: fix Tx stall after buffer overflow
    
    [ Upstream commit e4bfded56cf39b8d02733c1e6ef546b97961e18a ]
    
    Symptom: application opens /dev/ttyGS0 and starts sending (writing) to
    it while either USB cable is not connected, or nobody listens on the
    other side of the cable. If driver circular buffer overflows before
    connection is established, no data will be written to the USB layer
    until/unless /dev/ttyGS0 is closed and re-opened again by the
    application (the latter besides having no means of being notified about
    the event of establishing of the connection.)
    
    Fix: on open and/or connect, kick Tx to flush circular buffer data to
    USB layer.
    
    Signed-off-by: Sergey Organov <sorganov@gmail.com>
    Reviewed-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e476b55da6d22cb29ac50f5b585a16d37854c312
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Jan 16 15:29:01 2020 +0200

    usb: gadget: ffs: ffs_aio_cancel(): Save/restore IRQ flags
    
    [ Upstream commit 43d565727a3a6fd24e37c7c2116475106af71806 ]
    
    ffs_aio_cancel() can be called from both interrupt and thread context. Make
    sure that the current IRQ state is saved and restored by using
    spin_{un,}lock_irq{save,restore}().
    
    Otherwise undefined behavior might occur.
    
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2dc64fa1df7aa5912e07157ad6f15734d25666d
Author: Jack Pham <jackp@codeaurora.org>
Date:   Thu Jan 30 19:10:36 2020 -0800

    usb: gadget: composite: Support more than 500mA MaxPower
    
    [ Upstream commit a2035411fa1d1206cea7d5dfe833e78481844a76 ]
    
    USB 3.x SuperSpeed peripherals can draw up to 900mA of VBUS power
    when in configured state. However, if a configuration wanting to
    take advantage of this is added with MaxPower greater than 500
    (currently possible if using a ConfigFS gadget) the composite
    driver fails to accommodate this for a couple reasons:
    
     - usb_gadget_vbus_draw() when called from set_config() and
       composite_resume() will be passed the MaxPower value without
       regard for the current connection speed, resulting in a
       violation for USB 2.0 since the max is 500mA.
    
     - the bMaxPower of the configuration descriptor would be
       incorrectly encoded, again if the connection speed is only
       at USB 2.0 or below, likely wrapping around U8_MAX since
       the 2mA multiplier corresponds to a maximum of 510mA.
    
    Fix these by adding checks against the current gadget->speed
    when the c->MaxPower value is used (set_config() and
    composite_resume()) and appropriately limit based on whether
    it is currently at a low-/full-/high- or super-speed connection.
    
    Because 900 is not divisible by 8, with the round-up division
    currently used in encode_bMaxPower() a MaxPower of 900mA will
    result in an encoded value of 0x71. When a host stack (including
    Linux and Windows) enumerates this on a single port root hub, it
    reads this value back and decodes (multiplies by 8) to get 904mA
    which is strictly greater than 900mA that is typically budgeted
    for that port, causing it to reject the configuration. Instead,
    we should be using the round-down behavior of normal integral
    division so that 900 / 8 -> 0x70 or 896mA to stay within range.
    And we might as well change it for the high/full/low case as well
    for consistency.
    
    N.B. USB 3.2 Gen N x 2 allows for up to 1500mA but there doesn't
    seem to be any any peripheral controller supported by Linux that
    does two lane operation, so for now keeping the clamp at 900
    should be fine.
    
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd3a97bd15ea278c8347a9a68c5bb6b3355b1240
Author: Jiri Benc <jbenc@redhat.com>
Date:   Thu Feb 6 09:40:52 2020 +0100

    selftests: fix too long argument
    
    [ Upstream commit c363eb48ada5cf732b3f489fab799fc881097842 ]
    
    With some shells, the command construed for install of bpf selftests becomes
    too large due to long list of files:
    
    make[1]: execvp: /bin/sh: Argument list too long
    make[1]: *** [../lib.mk:73: install] Error 127
    
    Currently, each of the file lists is replicated three times in the command:
    in the shell 'if' condition, in the 'echo' and in the 'rsync'. Reduce that
    by one instance by using make conditionals and separate the echo and rsync
    into two shell commands. (One would be inclined to just remove the '@' at
    the beginning of the rsync command and let 'make' echo it by itself;
    unfortunately, it appears that the '@' in the front of mkdir silences output
    also for the following commands.)
    
    Also, separate handling of each of the lists to its own shell command.
    
    The semantics of the makefile is unchanged before and after the patch. The
    ability of individual test directories to override INSTALL_RULE is retained.
    
    Reported-by: Yauheni Kaliuta <yauheni.kaliuta@redhat.com>
    Tested-by: Yauheni Kaliuta <yauheni.kaliuta@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d53f29dd99bde2cf093f4246a6f602f4507f552
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Fri Feb 7 11:53:35 2020 +0200

    serial: ar933x_uart: set UART_CS_{RX,TX}_READY_ORIDE
    
    [ Upstream commit 87c5cbf71ecbb9e289d60a2df22eb686c70bf196 ]
    
    On AR934x this UART is usually not initialized by the bootloader
    as it is only used as a secondary serial port while the primary
    UART is a newly introduced NS16550-compatible.
    In order to make use of the ar933x-uart on AR934x without RTS/CTS
    hardware flow control, one needs to set the
    UART_CS_{RX,TX}_READY_ORIDE bits as other than on AR933x where this
    UART is used as primary/console, the bootloader on AR934x typically
    doesn't set those bits.
    Setting them explicitely on AR933x should not do any harm, so just
    set them unconditionally.
    
    Tested-by: Chuanhong Guo <gch981213@gmail.com>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Link: https://lore.kernel.org/r/20200207095335.GA179836@makrotopia.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53647b8201accbde651a54e65a2c8c66892a35da
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Jan 7 23:42:24 2020 +0900

    kprobes: Fix optimize_kprobe()/unoptimize_kprobe() cancellation logic
    
    [ Upstream commit e4add247789e4ba5e08ad8256183ce2e211877d4 ]
    
    optimize_kprobe() and unoptimize_kprobe() cancels if a given kprobe
    is on the optimizing_list or unoptimizing_list already. However, since
    the following commit:
    
      f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    
    modified the update timing of the KPROBE_FLAG_OPTIMIZED, it doesn't
    work as expected anymore.
    
    The optimized_kprobe could be in the following states:
    
    - [optimizing]: Before inserting jump instruction
      op.kp->flags has KPROBE_FLAG_OPTIMIZED and
      op->list is not empty.
    
    - [optimized]: jump inserted
      op.kp->flags has KPROBE_FLAG_OPTIMIZED and
      op->list is empty.
    
    - [unoptimizing]: Before removing jump instruction (including unused
      optprobe)
      op.kp->flags has KPROBE_FLAG_OPTIMIZED and
      op->list is not empty.
    
    - [unoptimized]: jump removed
      op.kp->flags doesn't have KPROBE_FLAG_OPTIMIZED and
      op->list is empty.
    
    Current code mis-expects [unoptimizing] state doesn't have
    KPROBE_FLAG_OPTIMIZED, and that can cause incorrect results.
    
    To fix this, introduce optprobe_queued_unopt() to distinguish [optimizing]
    and [unoptimizing] states and fixes the logic in optimize_kprobe() and
    unoptimize_kprobe().
    
    [ mingo: Cleaned up the changelog and the code a bit. ]
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bristot@redhat.com
    Fixes: f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    Link: https://lkml.kernel.org/r/157840814418.7181.13478003006386303481.stgit@devnote2
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2c775307de06372dd2f6d3b66386e434a66f8d2
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Feb 17 13:43:18 2020 -0700

    RDMA/core: Fix use of logical OR in get_new_pps
    
    [ Upstream commit 4ca501d6aaf21de31541deac35128bbea8427aa6 ]
    
    Clang warns:
    
    ../drivers/infiniband/core/security.c:351:41: warning: converting the
    enum constant to a boolean [-Wint-in-bool-context]
            if (!(qp_attr_mask & (IB_QP_PKEY_INDEX || IB_QP_PORT)) && qp_pps) {
                                                   ^
    1 warning generated.
    
    A bitwise OR should have been used instead.
    
    Fixes: 1dd017882e01 ("RDMA/core: Fix protection fault in get_pkey_idx_qp_list")
    Link: https://lore.kernel.org/r/20200217204318.13609-1-natechancellor@gmail.com
    Link: https://github.com/ClangBuiltLinux/linux/issues/889
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c18a10efb04a7166831383b168c64d158425c54d
Author: Maor Gottlieb <maorg@mellanox.com>
Date:   Thu Feb 27 14:57:28 2020 +0200

    RDMA/core: Fix pkey and port assignment in get_new_pps
    
    [ Upstream commit 801b67f3eaafd3f2ec8b65d93142d4ffedba85df ]
    
    When port is part of the modify mask, then we should take it from the
    qp_attr and not from the old pps. Same for PKEY. Otherwise there are
    panics in some configurations:
    
      RIP: 0010:get_pkey_idx_qp_list+0x50/0x80 [ib_core]
      Code: c7 18 e8 13 04 30 ef 0f b6 43 06 48 69 c0 b8 00 00 00 48 03 85 a0 04 00 00 48 8b 50 20 48 8d 48 20 48 39 ca 74 1a 0f b7 73 04 <66> 39 72 10 75 08 eb 10 66 39 72 10 74 0a 48 8b 12 48 39 ca 75 f2
      RSP: 0018:ffffafb3480932f0 EFLAGS: 00010203
      RAX: ffff98059ababa10 RBX: ffff980d926e8cc0 RCX: ffff98059ababa30
      RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff98059ababa28
      RBP: ffff98059b940000 R08: 00000000000310c0 R09: ffff97fe47c07480
      R10: 0000000000000036 R11: 0000000000000200 R12: 0000000000000071
      R13: ffff98059b940000 R14: ffff980d87f948a0 R15: 0000000000000000
      FS:  00007f88deb31740(0000) GS:ffff98059f600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000010 CR3: 0000000853e26001 CR4: 00000000001606e0
      Call Trace:
       port_pkey_list_insert+0x3d/0x1b0 [ib_core]
       ? kmem_cache_alloc_trace+0x215/0x220
       ib_security_modify_qp+0x226/0x3a0 [ib_core]
       _ib_modify_qp+0xcf/0x390 [ib_core]
       ipoib_init_qp+0x7f/0x200 [ib_ipoib]
       ? rvt_modify_port+0xd0/0xd0 [rdmavt]
       ? ib_find_pkey+0x99/0xf0 [ib_core]
       ipoib_ib_dev_open_default+0x1a/0x200 [ib_ipoib]
       ipoib_ib_dev_open+0x96/0x130 [ib_ipoib]
       ipoib_open+0x44/0x130 [ib_ipoib]
       __dev_open+0xd1/0x160
       __dev_change_flags+0x1ab/0x1f0
       dev_change_flags+0x23/0x60
       do_setlink+0x328/0xe30
       ? __nla_validate_parse+0x54/0x900
       __rtnl_newlink+0x54e/0x810
       ? __alloc_pages_nodemask+0x17d/0x320
       ? page_fault+0x30/0x50
       ? _cond_resched+0x15/0x30
       ? kmem_cache_alloc_trace+0x1c8/0x220
       rtnl_newlink+0x43/0x60
       rtnetlink_rcv_msg+0x28f/0x350
       ? kmem_cache_alloc+0x1fb/0x200
       ? _cond_resched+0x15/0x30
       ? __kmalloc_node_track_caller+0x24d/0x2d0
       ? rtnl_calcit.isra.31+0x120/0x120
       netlink_rcv_skb+0xcb/0x100
       netlink_unicast+0x1e0/0x340
       netlink_sendmsg+0x317/0x480
       ? __check_object_size+0x48/0x1d0
       sock_sendmsg+0x65/0x80
       ____sys_sendmsg+0x223/0x260
       ? copy_msghdr_from_user+0xdc/0x140
       ___sys_sendmsg+0x7c/0xc0
       ? skb_dequeue+0x57/0x70
       ? __inode_wait_for_writeback+0x75/0xe0
       ? fsnotify_grab_connector+0x45/0x80
       ? __dentry_kill+0x12c/0x180
       __sys_sendmsg+0x58/0xa0
       do_syscall_64+0x5b/0x200
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f88de467f10
    
    Link: https://lore.kernel.org/r/20200227125728.100551-1-leon@kernel.org
    Cc: <stable@vger.kernel.org>
    Fixes: 1dd017882e01 ("RDMA/core: Fix protection fault in get_pkey_idx_qp_list")
    Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Tested-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1e85c041e00897bfa2e68d46971177f4c0df4f2
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Feb 24 15:56:32 2020 -0800

    net: dsa: bcm_sf2: Forcibly configure IMP port for 1Gb/sec
    
    [ Upstream commit 98c5f7d44fef309e692c24c6d71131ee0f0871fb ]
    
    We are still experiencing some packet loss with the existing advanced
    congestion buffering (ACB) settings with the IMP port configured for
    2Gb/sec, so revert to conservative link speeds that do not produce
    packet loss until this is resolved.
    
    Fixes: 8f1880cbe8d0 ("net: dsa: bcm_sf2: Configure IMP port for 2Gb/sec")
    Fixes: de34d7084edd ("net: dsa: bcm_sf2: Only 7278 supports 2Gb/sec IMP port")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b5295b5c60d6048db2112f4bb691c9cf97631f0
Author: Yazen Ghannam <yazen.ghannam@amd.com>
Date:   Thu Mar 5 17:30:07 2020 +0100

    EDAC/amd64: Set grain per DIMM
    
    [ Upstream commit 466503d6b1b33be46ab87c6090f0ade6c6011cbc ]
    
    The following commit introduced a warning on error reports without a
    non-zero grain value.
    
      3724ace582d9 ("EDAC/mc: Fix grain_bits calculation")
    
    The amd64_edac_mod module does not provide a value, so the warning will
    be given on the first reported memory error.
    
    Set the grain per DIMM to cacheline size (64 bytes). This is the current
    recommendation.
    
    Fixes: 3724ace582d9 ("EDAC/mc: Fix grain_bits calculation")
    Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "linux-edac@vger.kernel.org" <linux-edac@vger.kernel.org>
    Cc: James Morse <james.morse@arm.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Robert Richter <rrichter@marvell.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/20191022203448.13962-7-Yazen.Ghannam@amd.com
    [jwang: backport to 4.14 for fix warning during memory error. ]
    Signed-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a4139ccd2ffe87c5125eb476b57c3db1b7b70d1
Author: Yazen Ghannam <yazen.ghannam@amd.com>
Date:   Thu Mar 5 17:30:06 2020 +0100

    x86/mce: Handle varying MCA bank counts
    
    [ Upstream commit 006c077041dc73b9490fffc4c6af5befe0687110 ]
    
    Linux reads MCG_CAP[Count] to find the number of MCA banks visible to a
    CPU. Currently, this number is the same for all CPUs and a warning is
    shown if there is a difference. The number of banks is overwritten with
    the MCG_CAP[Count] value of each following CPU that boots.
    
    According to the Intel SDM and AMD APM, the MCG_CAP[Count] value gives
    the number of banks that are available to a "processor implementation".
    The AMD BKDGs/PPRs further clarify that this value is per core. This
    value has historically been the same for every core in the system, but
    that is not an architectural requirement.
    
    Future AMD systems may have different MCG_CAP[Count] values per core,
    so the assumption that all CPUs will have the same MCG_CAP[Count] value
    will no longer be valid.
    
    Also, the first CPU to boot will allocate the struct mce_banks[] array
    using the number of banks based on its MCG_CAP[Count] value. The machine
    check handler and other functions use the global number of banks to
    iterate and index into the mce_banks[] array. So it's possible to use an
    out-of-bounds index on an asymmetric system where a following CPU sees a
    MCG_CAP[Count] value greater than its predecessors.
    
    Thus, allocate the mce_banks[] array to the maximum number of banks.
    This will avoid the potential out-of-bounds index since the value of
    mca_cfg.banks is capped to MAX_NR_BANKS.
    
    Set the value of mca_cfg.banks equal to the max of the previous value
    and the value for the current CPU. This way mca_cfg.banks will always
    represent the max number of banks detected on any CPU in the system.
    
    This will ensure that all CPUs will access all the banks that are
    visible to them. A CPU that can access fewer than the max number of
    banks will find the registers of the extra banks to be read-as-zero.
    
    Furthermore, print the resulting number of MCA banks in use. Do this in
    mcheck_late_init() so that the final value is printed after all CPUs
    have been initialized.
    
    Finally, get bank count from target CPU when doing injection with mce-inject
    module.
    
     [ bp: Remove out-of-bounds example, passify and cleanup commit message. ]
    
    Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: Pu Wen <puwen@hygon.cn>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20180727214009.78289-1-Yazen.Ghannam@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    [jwang: cherry-pick to fix boot warning in
    arch/x86/kernel/cpu/mcheck/mce.c:1549 in epyc rome server]
    Signed-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff8e12b0cfe277a54edbab525f068b39c7ed0de3
Author: Eugenio Pérez <eperezma@redhat.com>
Date:   Thu Mar 5 17:30:05 2020 +0100

    vhost: Check docket sk_family instead of call getname
    
    commit 42d84c8490f9f0931786f1623191fcab397c3d64 upstream.
    
    Doing so, we save one call to get data we already have in the struct.
    
    Also, since there is no guarantee that getname use sockaddr_ll
    parameter beyond its size, we add a little bit of security here.
    It should do not do beyond MAX_ADDR_LEN, but syzbot found that
    ax25_getname writes more (72 bytes, the size of full_sockaddr_ax25,
    versus 20 + 32 bytes of sockaddr_ll + MAX_ADDR_LEN in syzbot repro).
    
    Fixes: 3a4d5c94e9593 ("vhost_net: a kernel-level virtio server")
    Reported-by: syzbot+f2a62d07a5198c819c7b@syzkaller.appspotmail.com
    Signed-off-by: Eugenio Pérez <eperezma@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [jwang: backport to 4.14]
    Signed-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7cba03b2bdced33715a7167cb9c5c8733cd31c3
Author: Paul Moore <paul@paul-moore.com>
Date:   Mon Feb 24 16:38:57 2020 -0500

    audit: always check the netlink payload length in audit_receive_msg()
    
    [ Upstream commit 756125289285f6e55a03861bf4b6257aa3d19a93 ]
    
    This patch ensures that we always check the netlink payload length
    in audit_receive_msg() before we take any action on the payload
    itself.
    
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+399c44bf1f43b8747403@syzkaller.appspotmail.com
    Reported-by: syzbot+e4b12d8d202701f08b6d@syzkaller.appspotmail.com
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0abb54ae42e7b3b11ff044c7c59e4d7ca1eef7e4
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 5 15:48:03 2020 +0100

    Revert "char/random: silence a lockdep splat with printk()"
    
    This reverts commit 28820c5802f9f83c655ab09ccae8289103ce1490 which is
    commit 1b710b1b10eff9d46666064ea25f079f70bc67a8 upstream.
    
    It causes problems here just like it did in 4.19.y and odds are it will
    be reverted upstream as well.
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: Qian Cai <cai@lca.pw>
    Cc: Theodore Ts'o <tytso@mit.edu>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2630ea39bca2aa6c05f795035cf17e338178bbaf
Author: David Rientjes <rientjes@google.com>
Date:   Thu Jan 30 22:14:48 2020 -0800

    mm, thp: fix defrag setting if newline is not used
    
    commit f42f25526502d851d0e3ca1e46297da8aafce8a7 upstream.
    
    If thp defrag setting "defer" is used and a newline is *not* used when
    writing to the sysfs file, this is interpreted as the "defer+madvise"
    option.
    
    This is because we do prefix matching and if five characters are written
    without a newline, the current code ends up comparing to the first five
    bytes of the "defer+madvise" option and using that instead.
    
    Use the more appropriate sysfs_streq() that handles the trailing newline
    for us.  Since this doubles as a nice cleanup, do it in enabled_store()
    as well.
    
    The current implementation relies on prefix matching: the number of
    bytes compared is either the number of bytes written or the length of
    the option being compared.  With a newline, "defer\n" does not match
    "defer+"madvise"; without a newline, however, "defer" is considered to
    match "defer+madvise" (prefix matching is only comparing the first five
    bytes).  End result is that writing "defer" is broken unless it has an
    additional trailing character.
    
    This means that writing "madv" in the past would match and set
    "madvise".  With strict checking, that no longer is the case but it is
    unlikely anybody is currently doing this.
    
    Link: http://lkml.kernel.org/r/alpine.DEB.2.21.2001171411020.56385@chino.kir.corp.google.com
    Fixes: 21440d7eb904 ("mm, thp: add new defer+madvise defrag option")
    Signed-off-by: David Rientjes <rientjes@google.com>
    Suggested-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b200a5dded6fc266cbcf79ade856ea69e3633817
Author: Wei Yang <richardw.yang@linux.intel.com>
Date:   Thu Jan 30 22:14:29 2020 -0800

    mm/huge_memory.c: use head to check huge zero page
    
    commit cb829624867b5ab10bc6a7036d183b1b82bfe9f8 upstream.
    
    The page could be a tail page, if this is the case, this BUG_ON will
    never be triggered.
    
    Link: http://lkml.kernel.org/r/20200110032610.26499-1-richardw.yang@linux.intel.com
    Fixes: e9b61f19858a ("thp: reintroduce split_huge_page()")
    
    Signed-off-by: Wei Yang <richardw.yang@linux.intel.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28a5ca261d1140b4a22da701e9ab59c8aa81adbf
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Dec 16 13:22:33 2019 -0300

    perf hists browser: Restore ESC as "Zoom out" of DSO/thread/etc
    
    commit 3f7774033e6820d25beee5cf7aefa11d4968b951 upstream.
    
    We need to set actions->ms.map since 599a2f38a989 ("perf hists browser:
    Check sort keys before hot key actions"), as in that patch we bail out
    if map is NULL.
    
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: 599a2f38a989 ("perf hists browser: Check sort keys before hot key actions")
    Link: https://lkml.kernel.org/n/tip-wp1ssoewy6zihwwexqpohv0j@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b996b668dafbff61a630be55479a2f9d5c5a5b19
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Nov 27 14:57:04 2019 +0900

    kprobes: Set unoptimized flag after unoptimizing code
    
    commit f66c0447cca1281116224d474cdb37d6a18e4b5b upstream.
    
    Set the unoptimized flag after confirming the code is completely
    unoptimized. Without this fix, when a kprobe hits the intermediate
    modified instruction (the first byte is replaced by an INT3, but
    later bytes can still be a jump address operand) while unoptimizing,
    it can return to the middle byte of the modified code, which causes
    an invalid instruction exception in the kernel.
    
    Usually, this is a rare case, but if we put a probe on the function
    call while text patching, it always causes a kernel panic as below:
    
     # echo p text_poke+5 > kprobe_events
     # echo 1 > events/kprobes/enable
     # echo 0 > events/kprobes/enable
    
    invalid opcode: 0000 [#1] PREEMPT SMP PTI
     RIP: 0010:text_poke+0x9/0x50
     Call Trace:
      arch_unoptimize_kprobe+0x22/0x28
      arch_unoptimize_kprobes+0x39/0x87
      kprobe_optimizer+0x6e/0x290
      process_one_work+0x2a0/0x610
      worker_thread+0x28/0x3d0
      ? process_one_work+0x610/0x610
      kthread+0x10d/0x130
      ? kthread_park+0x80/0x80
      ret_from_fork+0x3a/0x50
    
    text_poke() is used for patching the code in optprobes.
    
    This can happen even if we blacklist text_poke() and other functions,
    because there is a small time window during which we show the intermediate
    code to other CPUs.
    
     [ mingo: Edited the changelog. ]
    
    Tested-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bristot@redhat.com
    Fixes: 6274de4984a6 ("kprobes: Support delayed unoptimizing")
    Link: https://lkml.kernel.org/r/157483422375.25881.13508326028469515760.stgit@devnote2
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf66af9d9305c3caead5446ced6ad7af762e3e86
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 26 11:44:29 2020 +0100

    drivers: net: xgene: Fix the order of the arguments of 'alloc_etherdev_mqs()'
    
    commit 5a44c71ccda60a50073c5d7fe3f694cdfa3ab0c2 upstream.
    
    'alloc_etherdev_mqs()' expects first 'tx', then 'rx'. The semantic here
    looks reversed.
    
    Reorder the arguments passed to 'alloc_etherdev_mqs()' in order to keep
    the correct semantic.
    
    In fact, this is a no-op because both XGENE_NUM_[RT]X_RING are 8.
    
    Fixes: 107dec2749fe ("drivers: net: xgene: Add support for multiple queues")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 380a732d1792ab887669f6b5ab438ccad6cc1adb
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue May 22 14:21:04 2018 +0800

    tuntap: correctly set SOCKWQ_ASYNC_NOSPACE
    
    commit 2f3ab6221e4c87960347d65c7cab9bd917d1f637 upstream.
    
    When link is down, writes to the device might fail with
    -EIO. Userspace needs an indication when the status is resolved.  As a
    fix, tun_net_open() attempts to wake up writers - but that is only
    effective if SOCKWQ_ASYNC_NOSPACE has been set in the past. This is
    not the case of vhost_net which only poll for EPOLLOUT after it meets
    errors during sendmsg().
    
    This patch fixes this by making sure SOCKWQ_ASYNC_NOSPACE is set when
    socket is not writable or device is down to guarantee EPOLLOUT will be
    raised in either tun_chr_poll() or tun_sock_write_space() after device
    is up.
    
    Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Cc: Eric Dumazet <edumazet@google.com>
    Fixes: 1bd4978a88ac2 ("tun: honor IFF_UP in tun_get_user()")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>

commit 0bdc63911545438223d5e44f869e3b1d9981a08b
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jan 9 15:56:18 2020 -0800

    KVM: Check for a bad hva before dropping into the ghc slow path
    
    commit fcfbc617547fc6d9552cb6c1c563b6a90ee98085 upstream.
    
    When reading/writing using the guest/host cache, check for a bad hva
    before checking for a NULL memslot, which triggers the slow path for
    handing cross-page accesses.  Because the memslot is nullified on error
    by __kvm_gfn_to_hva_cache_init(), if the bad hva is encountered after
    crossing into a new page, then the kvm_{read,write}_guest() slow path
    could potentially write/access the first chunk prior to detecting the
    bad hva.
    
    Arguably, performing a partial access is semantically correct from an
    architectural perspective, but that behavior is certainly not intended.
    In the original implementation, memslot was not explicitly nullified
    and therefore the partial access behavior varied based on whether the
    memslot itself was null, or if the hva was simply bad.  The current
    behavior was introduced as a seemingly unintentional side effect in
    commit f1b9dd5eb86c ("kvm: Disallow wraparound in
    kvm_gfn_to_hva_cache_init"), which justified the change with "since some
    callers don't check the return code from this function, it sit seems
    prudent to clear ghc->memslot in the event of an error".
    
    Regardless of intent, the partial access is dependent on _not_ checking
    the result of the cache initialization, which is arguably a bug in its
    own right, at best simply weird.
    
    Fixes: 8f964525a121 ("KVM: Allow cross page reads and writes from cached translations.")
    Cc: Jim Mattson <jmattson@google.com>
    Cc: Andrew Honig <ahonig@google.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e12afc7d76d63eabadc444f620bcf6be4306f0d6
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Jan 9 17:42:16 2020 -0600

    KVM: SVM: Override default MMIO mask if memory encryption is enabled
    
    commit 52918ed5fcf05d97d257f4131e19479da18f5d16 upstream.
    
    The KVM MMIO support uses bit 51 as the reserved bit to cause nested page
    faults when a guest performs MMIO. The AMD memory encryption support uses
    a CPUID function to define the encryption bit position. Given this, it is
    possible that these bits can conflict.
    
    Use svm_hardware_setup() to override the MMIO mask if memory encryption
    support is enabled. Various checks are performed to ensure that the mask
    is properly defined and rsvd_bits() is used to generate the new mask (as
    was done prior to the change that necessitated this patch).
    
    Fixes: 28a1f3ac1d0c ("kvm: x86: Set highest physical address bits in non-present/reserved SPTEs")
    Suggested-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b30e1920821ac5cd12cd7b993bec601278d9b75
Author: Brian Norris <briannorris@chromium.org>
Date:   Fri Dec 6 11:45:35 2019 -0800

    mwifiex: drop most magic numbers from mwifiex_process_tdls_action_frame()
    
    commit 70e5b8f445fd27fde0c5583460e82539a7242424 upstream.
    
    Before commit 1e58252e334d ("mwifiex: Fix heap overflow in
    mmwifiex_process_tdls_action_frame()"),
    mwifiex_process_tdls_action_frame() already had too many magic numbers.
    But this commit just added a ton more, in the name of checking for
    buffer overflows. That seems like a really bad idea.
    
    Let's make these magic numbers a little less magic, by
    (a) factoring out 'pos[1]' as 'ie_len'
    (b) using 'sizeof' on the appropriate source or destination fields where
        possible, instead of bare numbers
    (c) dropping redundant checks, per below.
    
    Regarding redundant checks: the beginning of the loop has this:
    
                    if (pos + 2 + pos[1] > end)
                            break;
    
    but then individual 'case's include stuff like this:
    
                            if (pos > end - 3)
                                    return;
                            if (pos[1] != 1)
                                    return;
    
    Note that the second 'return' (validating the length, pos[1]) combined
    with the above condition (ensuring 'pos + 2 + length' doesn't exceed
    'end'), makes the first 'return' (whose 'if' can be reworded as 'pos >
    end - pos[1] - 2') redundant. Rather than unwind the magic numbers
    there, just drop those conditions.
    
    Fixes: 1e58252e334d ("mwifiex: Fix heap overflow in mmwifiex_process_tdls_action_frame()")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7345a19c1ac2baac28c765eddd83a71dc296cf30
Author: Aleksa Sarai <cyphar@cyphar.com>
Date:   Sat Dec 7 01:13:26 2019 +1100

    namei: only return -ECHILD from follow_dotdot_rcu()
    
    commit 2b98149c2377bff12be5dd3ce02ae0506e2dd613 upstream.
    
    It's over-zealous to return hard errors under RCU-walk here, given that
    a REF-walk will be triggered for all other cases handling ".." under
    RCU.
    
    The original purpose of this check was to ensure that if a rename occurs
    such that a directory is moved outside of the bind-mount which the
    resolution started in, it would be detected and blocked to avoid being
    able to mess with paths outside of the bind-mount. However, triggering a
    new REF-walk is just as effective a solution.
    
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Fixes: 397d425dc26d ("vfs: Test for and handle paths that are unreachable from their mnt_root")
    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Aleksa Sarai <cyphar@cyphar.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 713f6323190ca78f656eb8abf87c9d36988995c3
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:49 2020 +0000

    net: ena: make ena rxfh support ETH_RSS_HASH_NO_CHANGE
    
    commit 470793a78ce344bd53d31e0c2d537f71ba957547 upstream.
    
    As the name suggests ETH_RSS_HASH_NO_CHANGE is received upon changing
    the key or indirection table using ethtool while keeping the same hash
    function.
    
    Also add a function for retrieving the current hash function from
    the ena-com layer.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Saeed Bshara <saeedb@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31909a6e9d6866dbe6590c4492b99d8875bba2dc
Author: Pavel Belous <pbelous@marvell.com>
Date:   Fri Feb 14 18:44:56 2020 +0300

    net: atlantic: fix potential error handling
    
    commit 380ec5b9af7f0d57dbf6ac067fd9f33cff2fef71 upstream.
    
    Code inspection found that in case of mapping error we do return current
    'ret' value. But beside error, it is used to count number of descriptors
    allocated for the packet. In that case map_skb function could return '1'.
    
    Changing it to return zero (number of mapped descriptors for skb)
    
    Fixes: 018423e90bee ("net: ethernet: aquantia: Add ring support code")
    Signed-off-by: Pavel Belous <pbelous@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c05073e1c0f85e7f8de51789b1f61f0373973c40
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Thu Feb 20 16:42:13 2020 +0200

    net: netlink: cap max groups which will be considered in netlink_bind()
    
    commit 3a20773beeeeadec41477a5ba872175b778ff752 upstream.
    
    Since nl_groups is a u32 we can't bind more groups via ->bind
    (netlink_bind) call, but netlink has supported more groups via
    setsockopt() for a long time and thus nlk->ngroups could be over 32.
    Recently I added support for per-vlan notifications and increased the
    groups to 33 for NETLINK_ROUTE which exposed an old bug in the
    netlink_bind() code causing out-of-bounds access on archs where unsigned
    long is 32 bits via test_bit() on a local variable. Fix this by capping the
    maximum groups in netlink_bind() to BITS_PER_TYPE(u32), effectively
    capping them at 32 which is the minimum of allocated groups and the
    maximum groups which can be bound via netlink_bind().
    
    CC: Christophe Leroy <christophe.leroy@c-s.fr>
    CC: Richard Guy Briggs <rgb@redhat.com>
    Fixes: 4f520900522f ("netlink: have netlink per-protocol bind function return an error code.")
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04fb39b7539f2df050efd4972e9f7fe675489f48
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Aug 21 21:57:03 2018 -0700

    include/linux/bitops.h: introduce BITS_PER_TYPE
    
    commit 9144d75e22cad3c89e6b2ccab551db9ee28d250a upstream.
    
    net_dim.h has a rather useful extension to BITS_PER_BYTE to compute the
    number of bits in a type (BITS_PER_BYTE * sizeof(T)), so promote the macro
    to bitops.h, alongside BITS_PER_BYTE, for wider usage.
    
    Link: http://lkml.kernel.org/r/20180706094458.14116-1-chris@chris-wilson.co.uk
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Andy Gospodarek <gospo@broadcom.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [only take the bitops.h portion for stable kernels - gregkh]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35dc93efe51eae9abc7a031d33f139768d685e02
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Mar 2 13:39:13 2020 -0700

    ecryptfs: Fix up bad backport of fe2e082f5da5b4a0a92ae32978f81507ef37ec66
    
    When doing the 4.9 merge into certain Android trees, I noticed a warning
    from Android's deprecated GCC 4.9.4, which causes a build failure in
    those trees due to basically -Werror:
    
    fs/ecryptfs/keystore.c: In function 'ecryptfs_parse_packet_set':
    fs/ecryptfs/keystore.c:1357:2: warning: 'auth_tok_list_item' may be used
    uninitialized in this function [-Wmaybe-uninitialized]
      memset(auth_tok_list_item, 0,
      ^
    fs/ecryptfs/keystore.c:1260:38: note: 'auth_tok_list_item' was declared
    here
      struct ecryptfs_auth_tok_list_item *auth_tok_list_item;
                                          ^
    
    GCC 9.2.0 was not able to pick up this warning when I tested it.
    
    Turns out that Clang warns as well when -Wuninitialized is used, which
    is not the case in older stable trees at the moment (but shows value in
    potentially backporting the various warning fixes currently in upstream
    to get more coverage).
    
    fs/ecryptfs/keystore.c:1284:6: warning: variable 'auth_tok_list_item' is
    used uninitialized whenever 'if' condition is true
    [-Wsometimes-uninitialized]
            if (data[(*packet_size)++] != ECRYPTFS_TAG_1_PACKET_TYPE) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    fs/ecryptfs/keystore.c:1360:4: note: uninitialized use occurs here
                            auth_tok_list_item);
                            ^~~~~~~~~~~~~~~~~~
    fs/ecryptfs/keystore.c:1284:2: note: remove the 'if' if its condition is
    always false
            if (data[(*packet_size)++] != ECRYPTFS_TAG_1_PACKET_TYPE) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    fs/ecryptfs/keystore.c:1260:56: note: initialize the variable
    'auth_tok_list_item' to silence this warning
            struct ecryptfs_auth_tok_list_item *auth_tok_list_item;
                                                                  ^
                                                                   = NULL
    1 warning generated.
    
    Somehow, commit fe2e082f5da5 ("ecryptfs: fix a memory leak bug in
    parse_tag_1_packet()") upstream was not applied in the correct if block
    in 4.4.215, 4.9.215, and 4.14.172, which will indeed lead to use of
    uninitialized memory. Fix it up by undoing the bad backport in those
    trees then reapplying the patch in the proper location.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebc406a766d51552ab4a5486d46c5780f0a60a09
Author: Peter Chen <peter.chen@nxp.com>
Date:   Sat Feb 1 14:13:44 2020 +0800

    usb: charger: assign specific number for enum value
    
    commit ca4b43c14cd88d28cfc6467d2fa075aad6818f1d upstream.
    
    To work properly on every architectures and compilers, the enum value
    needs to be specific numbers.
    
    Suggested-by: Greg KH <gregkh@linuxfoundation.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/1580537624-10179-1-git-send-email-peter.chen@nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b67d1c342e1329d7a44d3306242e4dfe3a601552
Author: Tina Zhang <tina.zhang@intel.com>
Date:   Fri Feb 21 10:32:34 2020 +0800

    drm/i915/gvt: Separate display reset from ALL_ENGINES reset
    
    commit 3eb55e6f753a379e293395de8d5f3be28351a7f8 upstream.
    
    ALL_ENGINES reset doesn't clobber display with the current gvt-g
    supported platforms. Thus ALL_ENGINES reset shouldn't reset the
    display engine registers emulated by gvt-g.
    
    This fixes guest warning like
    
    [ 14.622026] [drm] Initialized i915 1.6.0 20200114 for 0000:00:03.0 on minor 0
    [ 14.967917] fbcon: i915drmfb (fb0) is primary device
    [ 25.100188] [drm:drm_atomic_helper_wait_for_dependencies [drm_kms_helper]] E RROR [CRTC:51:pipe A] flip_done timed out
    [ 25.100860] -----------[ cut here ]-----------
    [ 25.100861] pll on state mismatch (expected 0, found 1)
    [ 25.101024] WARNING: CPU: 1 PID: 30 at drivers/gpu/drm/i915/display/intel_dis play.c:14382 verify_single_dpll_state.isra.115+0x28f/0x320 [i915]
    [ 25.101025] Modules linked in: intel_rapl_msr intel_rapl_common kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel i915 aesni_intel cr ypto_simd cryptd glue_helper cec rc_core video drm_kms_helper joydev drm input_l eds i2c_algo_bit serio_raw fb_sys_fops syscopyarea sysfillrect sysimgblt mac_hid qemu_fw_cfg sch_fq_codel parport_pc ppdev lp parport ip_tables x_tables autofs4 e1000 psmouse i2c_piix4 pata_acpi floppy
    [ 25.101052] CPU: 1 PID: 30 Comm: kworker/u4:1 Not tainted 5.5.0+ #1
    [ 25.101053] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1 .12.1-0-ga5cab58 04/01/2014
    [ 25.101055] Workqueue: events_unbound async_run_entry_fn
    [ 25.101092] RIP: 0010:verify_single_dpll_state.isra.115+0x28f/0x320 [i915]
    [ 25.101093] Code: e0 d9 ff e9 a3 fe ff ff 80 3d e9 c2 11 00 00 44 89 f6 48 c7 c7 c0 9d 88 c0 75 3b e8 eb df d9 ff e9 c7 fe ff ff e8 d1 e0 ae c4 <0f> 0b e9 7a fe ff ff 80 3d c0 c2 11 00 00 8d 71 41 89 c2 48 c7 c7
    [ 25.101093] RSP: 0018:ffffb1de80107878 EFLAGS: 00010286
    [ 25.101094] RAX: 0000000000000000 RBX: ffffb1de80107884 RCX: 0000000000000007
    [ 25.101095] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff94fdfdd19740
    [ 25.101095] RBP: ffffb1de80107938 R08: 0000000d6bfdc7b4 R09: 000000000000002b
    [ 25.101096] R10: ffff94fdf82dc000 R11: 0000000000000225 R12: 00000000000001f8
    [ 25.101096] R13: ffff94fdb3ca6a90 R14: ffff94fdb3ca0000 R15: 0000000000000000
    [ 25.101097] FS: 0000000000000000(0000) GS:ffff94fdfdd00000(0000) knlGS:00000 00000000000
    [ 25.101098] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 25.101098] CR2: 00007fbc3e2be9c8 CR3: 000000003339a003 CR4: 0000000000360ee0
    [ 25.101101] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 25.101101] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 25.101102] Call Trace:
    [ 25.101139] intel_atomic_commit_tail+0xde4/0x1520 [i915]
    [ 25.101141] ? flush_workqueue_prep_pwqs+0xfa/0x130
    [ 25.101142] ? flush_workqueue+0x198/0x3c0
    [ 25.101174] intel_atomic_commit+0x2ad/0x320 [i915]
    [ 25.101209] drm_atomic_commit+0x4a/0x50 [drm]
    [ 25.101220] drm_client_modeset_commit_atomic+0x1c4/0x200 [drm]
    [ 25.101231] drm_client_modeset_commit_force+0x47/0x170 [drm]
    [ 25.101250] drm_fb_helper_restore_fbdev_mode_unlocked+0x4e/0xa0 [drm_kms_hel per]
    [ 25.101255] drm_fb_helper_set_par+0x2d/0x60 [drm_kms_helper]
    [ 25.101287] intel_fbdev_set_par+0x1a/0x40 [i915]
    [ 25.101289] ? con_is_visible+0x2e/0x60
    [ 25.101290] fbcon_init+0x378/0x600
    [ 25.101292] visual_init+0xd5/0x130
    [ 25.101296] do_bind_con_driver+0x217/0x430
    [ 25.101297] do_take_over_console+0x7d/0x1b0
    [ 25.101298] do_fbcon_takeover+0x5c/0xb0
    [ 25.101299] fbcon_fb_registered+0x199/0x1a0
    [ 25.101301] register_framebuffer+0x22c/0x330
    [ 25.101306] __drm_fb_helper_initial_config_and_unlock+0x31a/0x520 [drm_kms_h elper]
    [ 25.101311] drm_fb_helper_initial_config+0x35/0x40 [drm_kms_helper]
    [ 25.101341] intel_fbdev_initial_config+0x18/0x30 [i915]
    [ 25.101342] async_run_entry_fn+0x3c/0x150
    [ 25.101343] process_one_work+0x1fd/0x3f0
    [ 25.101344] worker_thread+0x34/0x410
    [ 25.101346] kthread+0x121/0x140
    [ 25.101346] ? process_one_work+0x3f0/0x3f0
    [ 25.101347] ? kthread_park+0x90/0x90
    [ 25.101350] ret_from_fork+0x35/0x40
    [ 25.101351] --[ end trace b5b47d44cd998ba1 ]--
    
    Fixes: 6294b61ba769 ("drm/i915/gvt: add missing display part reset for vGPU reset")
    Signed-off-by: Tina Zhang <tina.zhang@intel.com>
    Reviewed-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20200221023234.28635-1-tina.zhang@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60493d08647814112f2941c37643109b8aa8f6c3
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Wed Feb 12 10:35:30 2020 +0100

    i2c: jz4780: silence log flood on txabrt
    
    commit 9e661cedcc0a072d91a32cb88e0515ea26e35711 upstream.
    
    The printout for txabrt is way too talkative and is highly annoying with
    scanning programs like 'i2cdetect'. Reduce it to the minimum, the rest
    can be gained by I2C core debugging and datasheet information. Also,
    make it a debug printout, it won't help the regular user.
    
    Fixes: ba92222ed63a ("i2c: jz4780: Add i2c bus controller driver for Ingenic JZ4780")
    Reported-by: H. Nikolaus Schaller <hns@goldelico.com>
    Tested-by: H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee850f01b3a36d172624f178a20ca434d33240d8
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Feb 11 08:47:04 2020 -0600

    i2c: altera: Fix potential integer overflow
    
    commit 54498e8070e19e74498a72c7331348143e7e1f8c upstream.
    
    Factor out 100 from the equation and do 32-bit arithmetic (3 * clk_mhz / 10)
    instead of 64-bit.
    
    Notice that clk_mhz is MHz, so the multiplication will never wrap 32 bits
    and there is no need for div_u64().
    
    Addresses-Coverity: 1458369 ("Unintentional integer overflow")
    Fixes: 0560ad576268 ("i2c: altera: Add Altera I2C Controller driver")
    Suggested-by: David Laight <David.Laight@ACULAB.COM>
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dea270c28f815590cf4376da29e4e8341dd5b98d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Feb 2 21:19:22 2020 +0100

    MIPS: VPE: Fix a double free and a memory leak in 'release_vpe()'
    
    commit bef8e2dfceed6daeb6ca3e8d33f9c9d43b926580 upstream.
    
    Pointer on the memory allocated by 'alloc_progmem()' is stored in
    'v->load_addr'. So this is this memory that should be freed by
    'release_progmem()'.
    
    'release_progmem()' is only a call to 'kfree()'.
    
    With the current code, there is both a double free and a memory leak.
    Fix it by passing the correct pointer to 'release_progmem()'.
    
    Fixes: e01402b115ccc ("More AP / SP bits for the 34K, the Malta bits and things. Still wants")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Paul Burton <paulburton@kernel.org>
    Cc: ralf@linux-mips.org
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: kernel-janitors@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9539c5cd71b0a506d556f056284403cff5bf8e72
Author: dan.carpenter@oracle.com <dan.carpenter@oracle.com>
Date:   Wed Jan 15 20:46:28 2020 +0300

    HID: hiddev: Fix race in in hiddev_disconnect()
    
    commit 5c02c447eaeda29d3da121a2e17b97ccaf579b51 upstream.
    
    Syzbot reports that "hiddev" is used after it's free in hiddev_disconnect().
    The hiddev_disconnect() function sets "hiddev->exist = 0;" so
    hiddev_release() can free it as soon as we drop the "existancelock"
    lock.  This patch moves the mutex_unlock(&hiddev->existancelock) until
    after we have finished using it.
    
    Reported-by: syzbot+784ccb935f9900cc7c9e@syzkaller.appspotmail.com
    Fixes: 7f77897ef2b6 ("HID: hiddev: fix potential use-after-free")
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 596e029dfcc6bfa8236f4e6e64b00dab8e19051a
Author: Orson Zhai <orson.unisoc@gmail.com>
Date:   Fri Feb 21 01:37:04 2020 +0800

    Revert "PM / devfreq: Modify the device name as devfreq(X) for sysfs"
    
    commit 66d0e797bf095d407479c89952d42b1d96ef0a7f upstream.
    
    This reverts commit 4585fbcb5331fc910b7e553ad3efd0dd7b320d14.
    
    The name changing as devfreq(X) breaks some user space applications,
    such as Android HAL from Unisoc and Hikey [1].
    The device name will be changed unexpectly after every boot depending
    on module init sequence. It will make trouble to setup some system
    configuration like selinux for Android.
    
    So we'd like to revert it back to old naming rule before any better
    way being found.
    
    [1] https://lkml.org/lkml/2018/5/8/1042
    
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Orson Zhai <orson.unisoc@gmail.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 581695e615571f68d9c63d82d88a8172ef160d62
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Feb 20 15:38:01 2020 -0500

    tracing: Disable trace_printk() on post poned tests
    
    commit 78041c0c9e935d9ce4086feeff6c569ed88ddfd4 upstream.
    
    The tracing seftests checks various aspects of the tracing infrastructure,
    and one is filtering. If trace_printk() is active during a self test, it can
    cause the filtering to fail, which will disable that part of the trace.
    
    To keep the selftests from failing because of trace_printk() calls,
    trace_printk() checks the variable tracing_selftest_running, and if set, it
    does not write to the tracing buffer.
    
    As some tracers were registered earlier in boot, the selftest they triggered
    would fail because not all the infrastructure was set up for the full
    selftest. Thus, some of the tests were post poned to when their
    infrastructure was ready (namely file system code). The postpone code did
    not set the tracing_seftest_running variable, and could fail if a
    trace_printk() was added and executed during their run.
    
    Cc: stable@vger.kernel.org
    Fixes: 9afecfbb95198 ("tracing: Postpone tracer start-up tests till the system is more robust")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33533185aa222d30946017f8f689fa7abc9384ff
Author: Johan Korsnes <jkorsnes@cisco.com>
Date:   Fri Jan 17 13:08:36 2020 +0100

    HID: core: increase HID report buffer size to 8KiB
    
    commit 84a4062632462c4320704fcdf8e99e89e94c0aba upstream.
    
    We have a HID touch device that reports its opens and shorts test
    results in HID buffers of size 8184 bytes. The maximum size of the HID
    buffer is currently set to 4096 bytes, causing probe of this device to
    fail. With this patch we increase the maximum size of the HID buffer to
    8192 bytes, making device probe and acquisition of said buffers succeed.
    
    Signed-off-by: Johan Korsnes <jkorsnes@cisco.com>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Cc: Armando Visconti <armando.visconti@st.com>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67e43711b143dd933c98934747d4167657966af9
Author: Johan Korsnes <jkorsnes@cisco.com>
Date:   Fri Jan 17 13:08:35 2020 +0100

    HID: core: fix off-by-one memset in hid_report_raw_event()
    
    commit 5ebdffd25098898aff1249ae2f7dbfddd76d8f8f upstream.
    
    In case a report is greater than HID_MAX_BUFFER_SIZE, it is truncated,
    but the report-number byte is not correctly handled. This results in a
    off-by-one in the following memset, causing a kernel Oops and ensuing
    system crash.
    
    Note: With commit 8ec321e96e05 ("HID: Fix slab-out-of-bounds read in
    hid_field_extract") I no longer hit the kernel Oops as we instead fail
    "controlled" at probe if there is a report too long in the HID
    report-descriptor. hid_report_raw_event() is an exported symbol, so
    presumabely we cannot always rely on this being the case.
    
    Fixes: 966922f26c7f ("HID: fix a crash in hid_report_raw_event()
                         function.")
    Signed-off-by: Johan Korsnes <jkorsnes@cisco.com>
    Cc: Armando Visconti <armando.visconti@st.com>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b011c72eda318297e84af2eec1dd32c1d06bd1b8
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Feb 1 12:56:48 2020 +0100

    HID: ite: Only bind to keyboard USB interface on Acer SW5-012 keyboard dock
    
    commit beae56192a2570578ae45050e73c5ff9254f63e6 upstream.
    
    Commit 8f18eca9ebc5 ("HID: ite: Add USB id match for Acer SW5-012 keyboard
    dock") added the USB id for the Acer SW5-012's keyboard dock to the
    hid-ite driver to fix the rfkill driver not working.
    
    Most keyboard docks with an ITE 8595 keyboard/touchpad controller have the
    "Wireless Radio Control" bits which need the special hid-ite driver on the
    second USB interface (the mouse interface) and their touchpad only supports
    mouse emulation, so using generic hid-input handling for anything but
    the "Wireless Radio Control" bits is fine. On these devices we simply bind
    to all USB interfaces.
    
    But unlike other ITE8595 using keyboard docks, the Acer Aspire Switch 10
    (SW5-012)'s touchpad not only does mouse emulation it also supports
    HID-multitouch and all the keys including the "Wireless Radio Control"
    bits have been moved to the first USB interface (the keyboard intf).
    
    So we need hid-ite to handle the first (keyboard) USB interface and have
    it NOT bind to the second (mouse) USB interface so that that can be
    handled by hid-multitouch.c and we get proper multi-touch support.
    
    This commit changes the hid_device_id for the SW5-012 keyboard dock to
    only match on hid devices from the HID_GROUP_GENERIC group, this way
    hid-ite will not bind the the mouse/multi-touch interface which has
    HID_GROUP_MULTITOUCH_WIN_8 as group.
    This fixes the regression to mouse-emulation mode introduced by adding
    the keyboard dock USB id.
    
    Cc: stable@vger.kernel.org
    Fixes: 8f18eca9ebc5 ("HID: ite: Add USB id match for Acer SW5-012 keyboard dock")
    Reported-by: Zdeněk Rampas <zdenda.rampas@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 634572f8c0aa43f63bb203fd4627e9b487393562
Author: Oliver Upton <oupton@google.com>
Date:   Sat Feb 29 11:30:14 2020 -0800

    KVM: VMX: check descriptor table exits on instruction emulation
    
    commit 86f7e90ce840aa1db407d3ea6e9b3a52b2ce923c upstream.
    
    KVM emulates UMIP on hardware that doesn't support it by setting the
    'descriptor table exiting' VM-execution control and performing
    instruction emulation. When running nested, this emulation is broken as
    KVM refuses to emulate L2 instructions by default.
    
    Correct this regression by allowing the emulation of descriptor table
    instructions if L1 hasn't requested 'descriptor table exiting'.
    
    Fixes: 07721feee46b ("KVM: nVMX: Don't emulate instructions in guest mode")
    Reported-by: Jan Kiszka <jan.kiszka@web.de>
    Cc: stable@vger.kernel.org
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Oliver Upton <oupton@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbaf976ebef18921b88e2f360f91c5fd3ef89f8f
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Feb 12 17:59:40 2020 +0300

    ACPI: watchdog: Fix gas->access_width usage
    
    commit 2ba33a4e9e22ac4dda928d3e9b5978a3a2ded4e0 upstream.
    
    ACPI Generic Address Structure (GAS) access_width field is not in bytes
    as the driver seems to expect in few places so fix this by using the
    newly introduced macro ACPI_ACCESS_BYTE_WIDTH().
    
    Fixes: b1abf6fc4982 ("ACPI / watchdog: Fix off-by-one error at resource assignment")
    Fixes: 058dfc767008 ("ACPI / watchdog: Add support for WDAT hardware watchdog")
    Reported-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a94e100b4fe9bd250e2c1f7624a70de2cdf4bc8
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Feb 12 17:59:39 2020 +0300

    ACPICA: Introduce ACPI_ACCESS_BYTE_WIDTH() macro
    
    commit 1dade3a7048ccfc675650cd2cf13d578b095e5fb upstream.
    
    Sometimes it is useful to find the access_width field value in bytes and
    not in bits so add a helper that can be used for this purpose.
    
    Suggested-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edde9fcd5f41b2e22e455250214de0c4b126b255
Author: Paul Moore <paul@paul-moore.com>
Date:   Sat Feb 22 20:36:47 2020 -0500

    audit: fix error handling in audit_data_to_entry()
    
    commit 2ad3e17ebf94b7b7f3f64c050ff168f9915345eb upstream.
    
    Commit 219ca39427bf ("audit: use union for audit_field values since
    they are mutually exclusive") combined a number of separate fields in
    the audit_field struct into a single union.  Generally this worked
    just fine because they are generally mutually exclusive.
    Unfortunately in audit_data_to_entry() the overlap can be a problem
    when a specific error case is triggered that causes the error path
    code to attempt to cleanup an audit_field struct and the cleanup
    involves attempting to free a stored LSM string (the lsm_str field).
    Currently the code always has a non-NULL value in the
    audit_field.lsm_str field as the top of the for-loop transfers a
    value into audit_field.val (both .lsm_str and .val are part of the
    same union); if audit_data_to_entry() fails and the audit_field
    struct is specified to contain a LSM string, but the
    audit_field.lsm_str has not yet been properly set, the error handling
    code will attempt to free the bogus audit_field.lsm_str value that
    was set with audit_field.val at the top of the for-loop.
    
    This patch corrects this by ensuring that the audit_field.val is only
    set when needed (it is cleared when the audit_field struct is
    allocated with kcalloc()).  It also corrects a few other issues to
    ensure that in case of error the proper error code is returned.
    
    Cc: stable@vger.kernel.org
    Fixes: 219ca39427bf ("audit: use union for audit_field values since they are mutually exclusive")
    Reported-by: syzbot+1f4d90ead370d72e450b@syzkaller.appspotmail.com
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 267e0a91b898619f9e747f944bb80e198910f7b4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Feb 28 12:22:56 2020 +0300

    ext4: potential crash on allocation error in ext4_alloc_flex_bg_array()
    
    commit 37b0b6b8b99c0e1c1f11abbe7cf49b6d03795b3f upstream.
    
    If sbi->s_flex_groups_allocated is zero and the first allocation fails
    then this code will crash.  The problem is that "i--" will set "i" to
    -1 but when we compare "i >= sbi->s_flex_groups_allocated" then the -1
    is type promoted to unsigned and becomes UINT_MAX.  Since UINT_MAX
    is more than zero, the condition is true so we call kvfree(new_groups[-1]).
    The loop will carry on freeing invalid memory until it crashes.
    
    Fixes: 7c990728b99e ("ext4: fix potential race between s_flex_groups online resizing and access")
    Reviewed-by: Suraj Jitindar Singh <surajjs@amazon.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20200228092142.7irbc44yaz3by7nb@kili.mountain
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c9fbd9447bcfc59d58ebcd9de92567569b78190
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Feb 17 15:38:09 2020 -0500

    net: sched: correct flower port blocking
    
    [ Upstream commit 8a9093c79863b58cc2f9874d7ae788f0d622a596 ]
    
    tc flower rules that are based on src or dst port blocking are sometimes
    ineffective due to uninitialized stack data. __skb_flow_dissect() extracts
    ports from the skb for tc flower to match against. However, the port
    dissection is not done when when the FLOW_DIS_IS_FRAGMENT bit is set in
    key_control->flags. All callers of __skb_flow_dissect(), zero-out the
    key_control field except for fl_classify() as used by the flower
    classifier. Thus, the FLOW_DIS_IS_FRAGMENT may be set on entry to
    __skb_flow_dissect(), since key_control is allocated on the stack
    and may not be initialized.
    
    Since key_basic and key_control are present for all flow keys, let's
    make sure they are initialized.
    
    Fixes: 62230715fd24 ("flow_dissector: do not dissect l4 ports for fragments")
    Co-developed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eca56a6d55e82256426df9328215d4c67fe4d271
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Mon Feb 17 13:37:18 2020 +0200

    qede: Fix race between rdma destroy workqueue and link change event
    
    [ Upstream commit af6565adb02d3129d3fae4d9d5da945abaf4417a ]
    
    If an event is added while the rdma workqueue is being destroyed
    it could lead to several races, list corruption, null pointer
    dereference during queue_work or init_queue.
    This fixes the race between the two flows which can occur during
    shutdown.
    
    A kref object and a completion object are added to the rdma_dev
    structure, these are initialized before the workqueue is created.
    The refcnt is used to indicate work is being added to the
    workqueue and ensures the cleanup flow won't start while we're in
    the middle of adding the event.
    Once the work is added, the refcnt is decreased and the cleanup flow
    is safe to run.
    
    Fixes: cee9fbd8e2e ("qede: Add qedr framework")
    Signed-off-by: Ariel Elior <ariel.elior@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84c4d6642d7bb79e19458bb337c982209c3a46ac
Author: Benjamin Poirier <bpoirier@cumulusnetworks.com>
Date:   Wed Feb 12 10:41:06 2020 +0900

    ipv6: Fix route replacement with dev-only route
    
    [ Upstream commit e404b8c7cfb31654c9024d497cec58a501501692 ]
    
    After commit 27596472473a ("ipv6: fix ECMP route replacement") it is no
    longer possible to replace an ECMP-able route by a non ECMP-able route.
    For example,
            ip route add 2001:db8::1/128 via fe80::1 dev dummy0
            ip route replace 2001:db8::1/128 dev dummy0
    does not work as expected.
    
    Tweak the replacement logic so that point 3 in the log of the above commit
    becomes:
    3. If the new route is not ECMP-able, and no matching non-ECMP-able route
    exists, replace matching ECMP-able route (if any) or add the new route.
    
    We can now summarize the entire replace semantics to:
    When doing a replace, prefer replacing a matching route of the same
    "ECMP-able-ness" as the replace argument. If there is no such candidate,
    fallback to the first route found.
    
    Fixes: 27596472473a ("ipv6: fix ECMP route replacement")
    Signed-off-by: Benjamin Poirier <bpoirier@cumulusnetworks.com>
    Reviewed-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14d5cc5ca2cef873b7caa991c3d7d38799a38ffa
Author: Benjamin Poirier <bpoirier@cumulusnetworks.com>
Date:   Wed Feb 12 10:41:07 2020 +0900

    ipv6: Fix nlmsg_flags when splitting a multipath route
    
    [ Upstream commit afecdb376bd81d7e16578f0cfe82a1aec7ae18f3 ]
    
    When splitting an RTA_MULTIPATH request into multiple routes and adding the
    second and later components, we must not simply remove NLM_F_REPLACE but
    instead replace it by NLM_F_CREATE. Otherwise, it may look like the netlink
    message was malformed.
    
    For example,
            ip route add 2001:db8::1/128 dev dummy0
            ip route change 2001:db8::1/128 nexthop via fe80::30:1 dev dummy0 \
                    nexthop via fe80::30:2 dev dummy0
    results in the following warnings:
    [ 1035.057019] IPv6: RTM_NEWROUTE with no NLM_F_CREATE or NLM_F_REPLACE
    [ 1035.057517] IPv6: NLM_F_CREATE should be set when creating new route
    
    This patch makes the nlmsg sequence look equivalent for __ip6_ins_rt() to
    what it would get if the multipath route had been added in multiple netlink
    operations:
            ip route add 2001:db8::1/128 dev dummy0
            ip route change 2001:db8::1/128 nexthop via fe80::30:1 dev dummy0
            ip route append 2001:db8::1/128 nexthop via fe80::30:2 dev dummy0
    
    Fixes: 27596472473a ("ipv6: fix ECMP route replacement")
    Signed-off-by: Benjamin Poirier <bpoirier@cumulusnetworks.com>
    Reviewed-by: Michal Kubecek <mkubecek@suse.cz>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dfb4833a549dfdf3b6771d722c08140fbe9c137
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Feb 18 12:07:53 2020 +0800

    sctp: move the format error check out of __sctp_sf_do_9_1_abort
    
    [ Upstream commit 245709ec8be89af46ea7ef0444c9c80913999d99 ]
    
    When T2 timer is to be stopped, the asoc should also be deleted,
    otherwise, there will be no chance to call sctp_association_free
    and the asoc could last in memory forever.
    
    However, in sctp_sf_shutdown_sent_abort(), after adding the cmd
    SCTP_CMD_TIMER_STOP for T2 timer, it may return error due to the
    format error from __sctp_sf_do_9_1_abort() and miss adding
    SCTP_CMD_ASSOC_FAILED where the asoc will be deleted.
    
    This patch is to fix it by moving the format error check out of
    __sctp_sf_do_9_1_abort(), and do it before adding the cmd
    SCTP_CMD_TIMER_STOP for T2 timer.
    
    Thanks Hangbin for reporting this issue by the fuzz testing.
    
    v1->v2:
      - improve the comment in the code as Marcelo's suggestion.
    
    Fixes: 96ca468b86b0 ("sctp: check invalid value of length parameter in error cause")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1229fc80189667f6f5e6bf4a8c271ed3b973958
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Wed Feb 19 18:01:22 2020 +0300

    nfc: pn544: Fix occasional HW initialization failure
    
    [ Upstream commit c3331d2fe3fd4d5e321f2467d01f72de7edfb5d0 ]
    
    The PN544 driver checks the "enable" polarity during of driver's probe and
    it's doing that by turning ON and OFF NFC with different polarities until
    enabling succeeds. It takes some time for the hardware to power-down, and
    thus, to deassert the IRQ that is raised by turning ON the hardware.
    Since the delay after last power-down of the polarity-checking process is
    missed in the code, the interrupt may trigger immediately after installing
    the IRQ handler (right after the checking is done), which results in IRQ
    handler trying to touch the disabled HW and ends with marking NFC as
    'DEAD' during of the driver's probe:
    
      pn544_hci_i2c 1-002a: NFC: nfc_en polarity : active high
      pn544_hci_i2c 1-002a: NFC: invalid len byte
      shdlc: llc_shdlc_recv_frame: NULL Frame -> link is dead
    
    This patch fixes the occasional NFC initialization failure on Nexus 7
    device.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 385b8a8b0618d94a6d968f616bff93f6a2419fa1
Author: Arun Parameswaran <arun.parameswaran@broadcom.com>
Date:   Fri Feb 14 13:47:46 2020 -0800

    net: phy: restore mdio regs in the iproc mdio driver
    
    commit 6f08e98d62799e53c89dbf2c9a49d77e20ca648c upstream.
    
    The mii management register in iproc mdio block
    does not have a retention register so it is lost on suspend.
    Save and restore value of register while resuming from suspend.
    
    Fixes: bb1a619735b4 ("net: phy: Initialize mdio clock at probe function")
    Signed-off-by: Arun Parameswaran <arun.parameswaran@broadcom.com>
    Signed-off-by: Scott Branden <scott.branden@broadcom.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c5b7276d7d1b13f04915900ca02ac7e1b670f67
Author: Jethro Beekman <jethro@fortanix.com>
Date:   Wed Feb 12 16:43:41 2020 +0100

    net: fib_rules: Correctly set table field when table number exceeds 8 bits
    
    [ Upstream commit 540e585a79e9d643ede077b73bcc7aa2d7b4d919 ]
    
    In 709772e6e06564ed94ba740de70185ac3d792773, RT_TABLE_COMPAT was added to
    allow legacy software to deal with routing table numbers >= 256, but the
    same change to FIB rule queries was overlooked.
    
    Signed-off-by: Jethro Beekman <jethro@fortanix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac5ea065eefd755173d5d51ca45f8bf837d0485b
Author: Petr Mladek <pmladek@suse.com>
Date:   Fri Jan 11 17:20:37 2019 +0100

    sysrq: Remove duplicated sysrq message
    
    commit c3fee60908db4a8594f2e4a2131998384b8fa006 upstream.
    
    The commit 97f5f0cd8cd0a0544 ("Input: implement SysRq as a separate input
    handler") added pr_fmt() definition. It caused a duplicated message
    prefix in the sysrq header messages, for example:
    
    [  177.053931] sysrq: SysRq : Show backtrace of all active CPUs
    [  742.864776] sysrq: SysRq : HELP : loglevel(0-9) reboot(b) crash(c)
    
    Fixes: 97f5f0cd8cd0a05 ("Input: implement SysRq as a separate input handler")
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Tommi Rantala  <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28178a88942819c19d9bc15e3a0703f60de1f2bb
Author: Petr Mladek <pmladek@suse.com>
Date:   Fri Jan 11 13:45:15 2019 +0100

    sysrq: Restore original console_loglevel when sysrq disabled
    
    commit 075e1a0c50f59ea210561d0d0fedbd945615df78 upstream.
    
    The sysrq header line is printed with an increased loglevel
    to provide users some positive feedback.
    
    The original loglevel is not restored when the sysrq operation
    is disabled. This bug was introduced in 2.6.12 (pre-git-history)
    by the commit ("Allow admin to enable only some of the Magic-Sysrq
    functions").
    
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe09a48bd96094786c303f1cf29b32a29aa6dc8
Author: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
Date:   Thu Feb 13 13:16:16 2020 +0000

    cfg80211: add missing policy for NL80211_ATTR_STATUS_CODE
    
    [ Upstream commit ea75080110a4c1fa011b0a73cb8f42227143ee3e ]
    
    The nl80211_policy is missing for NL80211_ATTR_STATUS_CODE attribute.
    As a result, for strictly validated commands, it's assumed to not be
    supported.
    
    Signed-off-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Link: https://lore.kernel.org/r/20200213131608.10541-2-sergey.matyukevich.os@quantenna.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 125ccba46eca5150045418cd7ee88a9aa4daa8e4
Author: Frank Sorenson <sorenson@redhat.com>
Date:   Wed Feb 12 15:31:48 2020 -0600

    cifs: Fix mode output in debugging statements
    
    [ Upstream commit f52aa79df43c4509146140de0241bc21a4a3b4c7 ]
    
    A number of the debug statements output file or directory mode
    in hex.  Change these to print using octal.
    
    Signed-off-by: Frank Sorenson <sorenson@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f4d2bba01b6ac0fd36e61be06a7b844f18bd89c
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:51 2020 +0000

    net: ena: ena-com.c: prevent NULL pointer dereference
    
    [ Upstream commit c207979f5ae10ed70aff1bb13f39f0736973de99 ]
    
    comp_ctx can be NULL in a very rare case when an admin command is executed
    during the execution of ena_remove().
    
    The bug scenario is as follows:
    
    * ena_destroy_device() sets the comp_ctx to be NULL
    * An admin command is executed before executing unregister_netdev(),
      this can still happen because our device can still receive callbacks
      from the netdev infrastructure such as ethtool commands.
    * When attempting to access the comp_ctx, the bug occurs since it's set
      to NULL
    
    Fix:
    Added a check that comp_ctx is not NULL
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce54eb55ee12733fa2cd63c5479d548b69e45ed8
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Tue Feb 11 15:17:50 2020 +0000

    net: ena: ethtool: use correct value for crc32 hash
    
    [ Upstream commit 886d2089276e40d460731765083a741c5c762461 ]
    
    Up till kernel 4.11 there was no enum defined for crc32 hash in ethtool,
    thus the xor enum was used for supporting crc32.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 135c5af29b5a4a7da0949251afb722079afb5a77
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:47 2020 +0000

    net: ena: fix incorrectly saving queue numbers when setting RSS indirection table
    
    [ Upstream commit 92569fd27f5cb0ccbdf7c7d70044b690e89a0277 ]
    
    The indirection table has the indices of the Rx queues. When we store it
    during set indirection operation, we convert the indices to our internal
    representation of the indices.
    
    Our internal representation of the indices is: even indices for Tx and
    uneven indices for Rx, where every Tx/Rx pair are in a consecutive order
    starting from 0. For example if the driver has 3 queues (3 for Tx and 3
    for Rx) then the indices are as follows:
    0  1  2  3  4  5
    Tx Rx Tx Rx Tx Rx
    
    The BUG:
    The issue is that when we satisfy a get request for the indirection
    table, we don't convert the indices back to the original representation.
    
    The FIX:
    Simply apply the inverse function for the indices of the indirection
    table after we set it.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef28d60a09846f564f2bae01fa8820c028016c26
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:46 2020 +0000

    net: ena: rss: store hash function as values and not bits
    
    [ Upstream commit 4844470d472d660c26149ad764da2406adb13423 ]
    
    The device receives, stores and retrieves the hash function value as bits
    and not as their enum value.
    
    The bug:
    * In ena_com_set_hash_function() we set
      cmd.u.flow_hash_func.selected_func to the bit value of rss->hash_func.
     (1 << rss->hash_func)
    * In ena_com_get_hash_function() we retrieve the hash function and store
      it's bit value in rss->hash_func. (Now the bit value of rss->hash_func
      is stored in rss->hash_func instead of it's enum value)
    
    The fix:
    This commit fixes the issue by converting the retrieved hash function
    values from the device to the matching enum value of the set bit using
    ffs(). ffs() finds the first set bit's index in a word. Since the function
    returns 1 for the LSB's index, we need to subtract 1 from the returned
    value (note that BIT(0) is 1).
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 092a63301b92e0452433df1f6d6e314d6944cf1f
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Tue Feb 11 15:17:45 2020 +0000

    net: ena: rss: fix failure to get indirection table
    
    [ Upstream commit 0c8923c0a64fb5d14bebb9a9065d2dc25ac5e600 ]
    
    On old hardware, getting / setting the hash function is not supported while
    gettting / setting the indirection table is.
    
    This commit enables us to still show the indirection table on older
    hardwares by setting the hash function and key to NULL.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 304b62b5f4c816b67080c1e21ce3a2f56952a3cb
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:43 2020 +0000

    net: ena: fix incorrect default RSS key
    
    [ Upstream commit 0d1c3de7b8c78a5e44b74b62ede4a63629f5d811 ]
    
    Bug description:
    When running "ethtool -x <if_name>" the key shows up as all zeros.
    
    When we use "ethtool -X <if_name> hfunc toeplitz hkey <some:random:key>" to
    set the key and then try to retrieve it using "ethtool -x <if_name>" then
    we return the correct key because we return the one we saved.
    
    Bug cause:
    We don't fetch the key from the device but instead return the key
    that we have saved internally which is by default set to zero upon
    allocation.
    
    Fix:
    This commit fixes the issue by initializing the key to a random value
    using netdev_rss_key_fill().
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d13a5be10364c7985ea4a987a64b5f00768f1ec8
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:42 2020 +0000

    net: ena: add missing ethtool TX timestamping indication
    
    [ Upstream commit cf6d17fde93bdda23c9b02dd5906a12bf8c55209 ]
    
    Current implementation of the driver calls skb_tx_timestamp()to add a
    software tx timestamp to the skb, however the software-transmit capability
    is not reported in ethtool -T.
    
    This commit updates the ethtool structure to report the software-transmit
    capability in ethtool -T using the standard ethtool_op_get_ts_info().
    This function reports all software timestamping capabilities (tx and rx),
    as well as setting phc_index = -1. phc_index is the index of the PTP
    hardware clock device that will be used for hardware timestamps. Since we
    don't have such a device in ENA, using the default -1 value is the correct
    setting.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Ezequiel Lara Gomez <ezegomez@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 482c613e4fb841a149e117555d59255dd1de03d1
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:41 2020 +0000

    net: ena: fix uses of round_jiffies()
    
    [ Upstream commit 2a6e5fa2f4c25b66c763428a3e65363214946931 ]
    
    >From the documentation of round_jiffies():
    "Rounds a time delta  in the future (in jiffies) up or down to
    (approximately) full seconds. This is useful for timers for which
    the exact time they fire does not matter too much, as long as
    they fire approximately every X seconds.
    By rounding these timers to whole seconds, all such timers will fire
    at the same time, rather than at various times spread out. The goal
    of this is to have the CPU wake up less, which saves power."
    
    There are 2 parts to this patch:
    ================================
    Part 1:
    -------
    In our case we need timer_service to be called approximately every
    X=1 seconds, and the exact time does not matter, so using round_jiffies()
    is the right way to go.
    
    Therefore we add round_jiffies() to the mod_timer() in ena_timer_service().
    
    Part 2:
    -------
    round_jiffies() is used in check_for_missing_keep_alive() when
    getting the jiffies of the expiration of the keep_alive timeout. Here it
    is actually a mistake to use round_jiffies() because we want the exact
    time when keep_alive should expire and not an approximate rounded time,
    which can cause early, false positive, timeouts.
    
    Therefore we remove round_jiffies() in the calculation of
    keep_alive_expired() in check_for_missing_keep_alive().
    
    Fixes: 82ef30f13be0 ("net: ena: add hardware hints capability to the driver")
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 670f5c64a37751cd54fa298d38f8adc9d00a7d9d
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:40 2020 +0000

    net: ena: fix potential crash when rxfh key is NULL
    
    [ Upstream commit 91a65b7d3ed8450f31ab717a65dcb5f9ceb5ab02 ]
    
    When ethtool -X is called without an hkey, ena_com_fill_hash_function()
    is called with key=NULL, which is passed to memcpy causing a crash.
    
    This commit fixes this issue by checking key is not NULL.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4806d0e9b56b3836478f60a2acca971028c4684
Author: Bjørn Mork <bjorn@mork.no>
Date:   Sat Feb 8 16:55:04 2020 +0100

    qmi_wwan: unconditionally reject 2 ep interfaces
    
    [ Upstream commit 00516d13d4cfa56ce39da144db2dbf08b09b9357 ]
    
    We have been using the fact that the QMI and DIAG functions
    usually are the only ones with class/subclass/protocol being
    ff/ff/ff on Quectel modems. This has allowed us to match the
    QMI function without knowing the exact interface number,
    which can vary depending on firmware configuration.
    
    The ability to silently reject the DIAG function, which is
    usually handled by the option driver, is important for this
    method to work.  This is done based on the knowledge that it
    has exactly 2 bulk endpoints.  QMI function control interfaces
    will have either 3 or 1 endpoint. This rule is universal so
    the quirk condition can be removed.
    
    The fixed layouts known from the Gobi1k and Gobi2k modems
    have been gradually replaced by more dynamic layouts, and
    many vendors now use configurable layouts without changing
    device IDs.  Renaming the class/subclass/protocol matching
    macro makes it more obvious that this is now not Quectel
    specific anymore.
    
    Cc: Kristian Evensen <kristian.evensen@gmail.com>
    Cc: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83b3ac0eebb521124a097a613df7fe50efcb8f8b
Author: Bjørn Mork <bjorn@mork.no>
Date:   Sat Feb 8 15:50:36 2020 +0100

    qmi_wwan: re-add DW5821e pre-production variant
    
    [ Upstream commit 88bf54603f6f2c137dfee1abf6436ceac3528d2d ]
    
    Commit f25e1392fdb5 removed the support for the pre-production variant
    of the Dell DW5821e to avoid probing another USB interface unnecessarily.
    However, the pre-production samples are found in the wild, and this lack
    of support is causing problems for users of such samples.  It is therefore
    necessary to support both variants.
    
    Matching on both interfaces 0 and 1 is not expected to cause any problem
    with either variant, as only the QMI function will be probed successfully
    on either.  Interface 1 will be rejected based on the HID class for the
    production variant:
    
    T:  Bus=01 Lev=03 Prnt=04 Port=00 Cnt=01 Dev#= 16 Spd=480 MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  2
    P:  Vendor=413c ProdID=81d7 Rev=03.18
    S:  Manufacturer=DELL
    S:  Product=DW5821e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    And interface 0 will be rejected based on too few endpoints for the
    pre-production variant:
    
    T: Bus=01 Lev=02 Prnt=02 Port=03 Cnt=03 Dev#= 7 Spd=480 MxCh= 0
    D: Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs= 2
    P: Vendor=413c ProdID=81d7 Rev= 3.18
    S: Manufacturer=DELL
    S: Product=DW5821e Snapdragon X20 LTE
    S: SerialNumber=0123456789ABCDEF
    C: #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I: If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=
    I: If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I: If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I: If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I: If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    
    Fixes: f25e1392fdb5 ("qmi_wwan: fix interface number for DW5821e production firmware")
    Link: https://whrl.pl/Rf0vNk
    Reported-by: Lars Melin <larsm17@gmail.com>
    Cc: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6306a605b36139c883900548f189fc04a4a1615c
Author: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
Date:   Mon Feb 3 10:56:50 2020 +0000

    cfg80211: check wiphy driver existence for drvinfo report
    
    [ Upstream commit bfb7bac3a8f47100ebe7961bd14e924c96e21ca7 ]
    
    When preparing ethtool drvinfo, check if wiphy driver is defined
    before dereferencing it. Driver may not exist, e.g. if wiphy is
    attached to a virtual platform device.
    
    Signed-off-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Link: https://lore.kernel.org/r/20200203105644.28875-1-sergey.matyukevich.os@quantenna.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 518b947b807c6a1c34c07a90840ae91915628992
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jan 31 13:12:58 2020 +0200

    mac80211: consider more elements in parsing CRC
    
    [ Upstream commit a04564c99bb4a92f805a58e56b2d22cc4978f152 ]
    
    We only use the parsing CRC for checking if a beacon changed,
    and elements with an ID > 63 cannot be represented in the
    filter. Thus, like we did before with WMM and Cisco vendor
    elements, just statically add these forgotten items to the
    CRC:
     - WLAN_EID_VHT_OPERATION
     - WLAN_EID_OPMODE_NOTIF
    
    I guess that in most cases when VHT/HE operation change, the HT
    operation also changed, and so the change was picked up, but we
    did notice that pure operating mode notification changes were
    ignored.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20200131111300.891737-22-luca@coelho.fi
    [restrict to VHT for the mac80211 branch]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de020833f8f4bd95a4e73ef59a7b01ce3c78447b
Author: Jeff Moyer <jmoyer@redhat.com>
Date:   Wed Feb 5 14:15:58 2020 -0500

    dax: pass NOWAIT flag to iomap_apply
    
    [ Upstream commit 96222d53842dfe54869ec4e1b9d4856daf9105a2 ]
    
    fstests generic/471 reports a failure when run with MOUNT_OPTIONS="-o
    dax".  The reason is that the initial pwrite to an empty file with the
    RWF_NOWAIT flag set does not return -EAGAIN.  It turns out that
    dax_iomap_rw doesn't pass that flag through to iomap_apply.
    
    With this patch applied, generic/471 passes for me.
    
    Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/x49r1z86e1d.fsf@segfault.boston.devel.redhat.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 313810964cacf555c88c77b47f837d5cf232992b
Author: Sean Paul <seanpaul@chromium.org>
Date:   Tue Jan 21 11:18:48 2020 -0800

    drm/msm: Set dma maximum segment size for mdss
    
    [ Upstream commit db735fc4036bbe1fbe606819b5f0ff26cc76cdff ]
    
    Turning on CONFIG_DMA_API_DEBUG_SG results in the following error:
    
    [   12.078665] msm ae00000.mdss: DMA-API: mapping sg segment longer than device claims to support [len=3526656] [max=65536]
    [   12.089870] WARNING: CPU: 6 PID: 334 at /mnt/host/source/src/third_party/kernel/v4.19/kernel/dma/debug.c:1301 debug_dma_map_sg+0x1dc/0x318
    [   12.102655] Modules linked in: joydev
    [   12.106442] CPU: 6 PID: 334 Comm: frecon Not tainted 4.19.0 #2
    [   12.112450] Hardware name: Google Cheza (rev3+) (DT)
    [   12.117566] pstate: 60400009 (nZCv daif +PAN -UAO)
    [   12.122506] pc : debug_dma_map_sg+0x1dc/0x318
    [   12.126995] lr : debug_dma_map_sg+0x1dc/0x318
    [   12.131487] sp : ffffff800cc3ba80
    [   12.134913] x29: ffffff800cc3ba80 x28: 0000000000000000
    [   12.140395] x27: 0000000000000004 x26: 0000000000000004
    [   12.145868] x25: ffffff8008e55b18 x24: 0000000000000000
    [   12.151337] x23: 00000000ffffffff x22: ffffff800921c000
    [   12.156809] x21: ffffffc0fa75b080 x20: ffffffc0f7195090
    [   12.162280] x19: ffffffc0f1c53280 x18: 0000000000000000
    [   12.167749] x17: 0000000000000000 x16: 0000000000000000
    [   12.173218] x15: 0000000000000000 x14: 0720072007200720
    [   12.178689] x13: 0720072007200720 x12: 0720072007200720
    [   12.184161] x11: 0720072007200720 x10: 0720072007200720
    [   12.189641] x9 : ffffffc0f1fc6b60 x8 : 0000000000000000
    [   12.195110] x7 : ffffff8008132ce0 x6 : 0000000000000000
    [   12.200585] x5 : 0000000000000000 x4 : ffffff8008134734
    [   12.206058] x3 : ffffff800cc3b830 x2 : ffffffc0f1fc6240
    [   12.211532] x1 : 25045a74f48a7400 x0 : 25045a74f48a7400
    [   12.217006] Call trace:
    [   12.219535]  debug_dma_map_sg+0x1dc/0x318
    [   12.223671]  get_pages+0x19c/0x20c
    [   12.227177]  msm_gem_fault+0x64/0xfc
    [   12.230874]  __do_fault+0x3c/0x140
    [   12.234383]  __handle_mm_fault+0x70c/0xdb8
    [   12.238603]  handle_mm_fault+0xac/0xc4
    [   12.242473]  do_page_fault+0x1bc/0x3d4
    [   12.246342]  do_translation_fault+0x54/0x88
    [   12.250652]  do_mem_abort+0x60/0xf0
    [   12.254250]  el0_da+0x20/0x24
    [   12.257317] irq event stamp: 67260
    [   12.260828] hardirqs last  enabled at (67259): [<ffffff8008132d0c>] console_unlock+0x214/0x608
    [   12.269693] hardirqs last disabled at (67260): [<ffffff8008080e0c>] do_debug_exception+0x5c/0x178
    [   12.278820] softirqs last  enabled at (67256): [<ffffff8008081664>] __do_softirq+0x4d4/0x520
    [   12.287510] softirqs last disabled at (67249): [<ffffff80080be574>] irq_exit+0xa8/0x100
    [   12.295742] ---[ end trace e63cfc40c313ffab ]---
    
    The root of the problem is that the default segment size for sgt is
    (UINT_MAX & PAGE_MASK), and the default segment size for device dma is
    64K. As such, if you compare the 2, you would deduce that the sg segment
    will overflow the device's capacity. In reality, the hardware can
    accommodate the larger sg segments, it's just not initializing its max
    segment properly. This patch initializes the max segment size for the
    mdss device, which gets rid of that pesky warning.
    
    Reported-by: Stephen Boyd <swboyd@chromium.org>
    Tested-by: Stephen Boyd <swboyd@chromium.org>
    Tested-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200121111813.REPOST.1.I92c66a35fb13f368095b05287bdabdbe88ca6922@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45004f2ef0837d7bc1098ee12cc88f4e94c598e6
Author: Corey Minyard <cminyard@mvista.com>
Date:   Mon Dec 23 10:42:19 2019 -0600

    ipmi:ssif: Handle a possible NULL pointer reference
    
    [ Upstream commit 6b8526d3abc02c08a2f888e8c20b7ac9e5776dfe ]
    
    In error cases a NULL can be passed to memcpy.  The length will always
    be zero, so it doesn't really matter, but go ahead and check for NULL,
    anyway, to be more precise and avoid static analysis errors.
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 453cc452833f4225443689e89e0500c419697b9c
Author: Suraj Jitindar Singh <surajjs@amazon.com>
Date:   Tue Feb 18 19:08:50 2020 -0800

    ext4: fix potential race between s_group_info online resizing and access
    
    [ Upstream commit df3da4ea5a0fc5d115c90d5aa6caa4dd433750a7 ]
    
    During an online resize an array of pointers to s_group_info gets replaced
    so it can get enlarged. If there is a concurrent access to the array in
    ext4_get_group_info() and this memory has been reused then this can lead to
    an invalid memory access.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206443
    Link: https://lore.kernel.org/r/20200221053458.730016-3-tytso@mit.edu
    Signed-off-by: Suraj Jitindar Singh <surajjs@amazon.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Balbir Singh <sblbir@amazon.com>
    Cc: stable@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d830e847378b37294652da7dd4746019991f37a
Author: Suraj Jitindar Singh <surajjs@amazon.com>
Date:   Fri Feb 28 16:48:17 2020 -0800

    ext4: fix potential race between s_flex_groups online resizing and access
    
    commit 7c990728b99ed6fbe9c75fc202fce1172d9916da upstream.
    
    During an online resize an array of s_flex_groups structures gets replaced
    so it can get enlarged. If there is a concurrent access to the array and
    this memory has been reused then this can lead to an invalid memory access.
    
    The s_flex_group array has been converted into an array of pointers rather
    than an array of structures. This is to ensure that the information
    contained in the structures cannot get out of sync during a resize due to
    an accessor updating the value in the old structure after it has been
    copied but before the array pointer is updated. Since the structures them-
    selves are no longer copied but only the pointers to them this case is
    mitigated.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206443
    Link: https://lore.kernel.org/r/20200221053458.730016-4-tytso@mit.edu
    Signed-off-by: Suraj Jitindar Singh <surajjs@amazon.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org # 4.14.x
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2afeb56881da66c09e8d2b5f6965eabeb75ce834
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Feb 28 16:48:15 2020 -0800

    ext4: fix potential race between online resizing and write operations
    
    commit 1d0c3924a92e69bfa91163bda83c12a994b4d106 upstream.
    
    During an online resize an array of pointers to buffer heads gets
    replaced so it can get enlarged.  If there is a racing block
    allocation or deallocation which uses the old array, and the old array
    has gotten reused this can lead to a GPF or some other random kernel
    memory getting modified.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206443
    Link: https://lore.kernel.org/r/20200221053458.730016-2-tytso@mit.edu
    Reported-by: Suraj Jitindar Singh <surajjs@amazon.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org # 4.14.x
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da79135a05ca0b601cf4ce485cf7c2b37636955a
Author: Martynas Pumputis <martynas@weave.works>
Date:   Fri Feb 28 00:57:38 2020 +0000

    netfilter: nf_conntrack: resolve clash for matching conntracks
    
    [ Upstream commit ed07d9a021df6da53456663a76999189badc432a ]
    
    This patch enables the clash resolution for NAT (disabled in
    "590b52e10d41") if clashing conntracks match (i.e. both tuples are equal)
    and a protocol allows it.
    
    The clash might happen for a connections-less protocol (e.g. UDP) when
    two threads in parallel writes to the same socket and consequent calls
    to "get_unique_tuple" return the same tuples (incl. reply tuples).
    
    In this case it is safe to perform the resolution, as the losing CT
    describes the same mangling as the winning CT, so no modifications to
    the packet are needed, and the result of rules traversal for the loser's
    packet stays valid.
    
    Signed-off-by: Martynas Pumputis <martynas@weave.works>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Andy Strohman <astroh@amazon.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 864ef06aaef5b164669a5292eb822c454c46dd69
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sat Feb 29 04:54:53 2020 +0530

    iwlwifi: pcie: fix rb_allocator workqueue allocation
    
    commit 8188a18ee2e48c9a7461139838048363bfce3fef upstream
    
    We don't handle failures in the rb_allocator workqueue allocation
    correctly. To fix that, move the code earlier so the cleanup is
    easier and we don't have to undo all the interrupt allocations in
    this case.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    [Ajay: Modified to apply on v4.19.y and v4.14.y]
    Signed-off-by: Ajay Kaher <akaher@vmware.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
