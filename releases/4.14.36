commit d6949f48093c2d862d9bc39a7a89f2825c55edc4
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Apr 24 09:36:40 2018 +0200

    Linux 4.14.36

commit 7c9b87a78a17017abe5def1ab53e3b261be6853f
Author: Greg Thelen <gthelen@google.com>
Date:   Fri Apr 20 14:55:42 2018 -0700

    writeback: safer lock nesting
    
    commit 2e898e4c0a3897ccd434adac5abb8330194f527b upstream.
    
    lock_page_memcg()/unlock_page_memcg() use spin_lock_irqsave/restore() if
    the page's memcg is undergoing move accounting, which occurs when a
    process leaves its memcg for a new one that has
    memory.move_charge_at_immigrate set.
    
    unlocked_inode_to_wb_begin,end() use spin_lock_irq/spin_unlock_irq() if
    the given inode is switching writeback domains.  Switches occur when
    enough writes are issued from a new domain.
    
    This existing pattern is thus suspicious:
        lock_page_memcg(page);
        unlocked_inode_to_wb_begin(inode, &locked);
        ...
        unlocked_inode_to_wb_end(inode, locked);
        unlock_page_memcg(page);
    
    If both inode switch and process memcg migration are both in-flight then
    unlocked_inode_to_wb_end() will unconditionally enable interrupts while
    still holding the lock_page_memcg() irq spinlock.  This suggests the
    possibility of deadlock if an interrupt occurs before unlock_page_memcg().
    
        truncate
        __cancel_dirty_page
        lock_page_memcg
        unlocked_inode_to_wb_begin
        unlocked_inode_to_wb_end
        <interrupts mistakenly enabled>
                                        <interrupt>
                                        end_page_writeback
                                        test_clear_page_writeback
                                        lock_page_memcg
                                        <deadlock>
        unlock_page_memcg
    
    Due to configuration limitations this deadlock is not currently possible
    because we don't mix cgroup writeback (a cgroupv2 feature) and
    memory.move_charge_at_immigrate (a cgroupv1 feature).
    
    If the kernel is hacked to always claim inode switching and memcg
    moving_account, then this script triggers lockup in less than a minute:
    
      cd /mnt/cgroup/memory
      mkdir a b
      echo 1 > a/memory.move_charge_at_immigrate
      echo 1 > b/memory.move_charge_at_immigrate
      (
        echo $BASHPID > a/cgroup.procs
        while true; do
          dd if=/dev/zero of=/mnt/big bs=1M count=256
        done
      ) &
      while true; do
        sync
      done &
      sleep 1h &
      SLEEP=$!
      while true; do
        echo $SLEEP > a/cgroup.procs
        echo $SLEEP > b/cgroup.procs
      done
    
    The deadlock does not seem possible, so it's debatable if there's any
    reason to modify the kernel.  I suggest we should to prevent future
    surprises.  And Wang Long said "this deadlock occurs three times in our
    environment", so there's more reason to apply this, even to stable.
    Stable 4.4 has minor conflicts applying this patch.  For a clean 4.4 patch
    see "[PATCH for-4.4] writeback: safer lock nesting"
    https://lkml.org/lkml/2018/4/11/146
    
    Wang Long said "this deadlock occurs three times in our environment"
    
    [gthelen@google.com: v4]
      Link: http://lkml.kernel.org/r/20180411084653.254724-1-gthelen@google.com
    [akpm@linux-foundation.org: comment tweaks, struct initialization simplification]
    Change-Id: Ibb773e8045852978f6207074491d262f1b3fb613
    Link: http://lkml.kernel.org/r/20180410005908.167976-1-gthelen@google.com
    Fixes: 682aa8e1a6a1 ("writeback: implement unlocked_inode_to_wb transaction and use it for stat updates")
    Signed-off-by: Greg Thelen <gthelen@google.com>
    Reported-by: Wang Long <wanglong19@meituan.com>
    Acked-by: Wang Long <wanglong19@meituan.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: <stable@vger.kernel.org>    [v4.2+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [natechancellor: Adjust context due to lack of b93b016313b3b]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 071ff203d962478368bbc84c3c8f9ba40e9fe2b6
Author: Sean Young <sean@mess.org>
Date:   Sun Apr 15 10:51:51 2018 +0100

    media: staging: lirc_zilog: incorrect reference counting
    
    [not upstream as the driver is deleted in 4.16 - gregkh]
    
    Whenever poll is called, the reference count is increased but never
    decreased. This means that on rmmod, the lirc_thread is not stopped,
    and will trample over freed memory.
    
    Zilog/Hauppauge IR driver unloaded
    BUG: unable to handle kernel paging request at ffffffffc17ba640
    Oops: 0010 [#1] SMP
    CPU: 1 PID: 667 Comm: zilog-rx-i2c-1 Tainted: P         C OE   4.13.16-302.fc27.x86_64 #1
    Hardware name: Gigabyte Technology Co., Ltd. GA-MA790FXT-UD5P/GA-MA790FXT-UD5P, BIOS F6 08/06/2009
    task: ffff964eb452ca00 task.stack: ffffb254414dc000
    RIP: 0010:0xffffffffc17ba640
    RSP: 0018:ffffb254414dfe78 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: ffff964ec1b35890 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246
    RBP: ffffb254414dff00 R08: 000000000000036e R09: ffff964ecfc8dfd0
    R10: ffffb254414dfe78 R11: 00000000000f4240 R12: ffff964ec2bf28a0
    R13: ffff964ec1b358a8 R14: ffff964ec1b358d0 R15: ffff964ec1b35800
    FS:  0000000000000000(0000) GS:ffff964ecfc80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffffffffc17ba640 CR3: 000000023058c000 CR4: 00000000000006e0
    Call Trace:
     kthread+0x125/0x140
     ? kthread_park+0x60/0x60
     ? do_syscall_64+0x67/0x140
     ret_from_fork+0x25/0x30
    Code:  Bad RIP value.
    RIP: 0xffffffffc17ba640 RSP: ffffb254414dfe78
    CR2: ffffffffc17ba640
    
    Note that zilog-rx-i2c-1 should have exited by now, but hasn't due to
    the missing put in poll().
    
    This code has been replaced completely in kernel v4.16 by a new driver,
    see commit acaa34bf06e9 ("media: rc: implement zilog transmitter"), and
    commit f95367a7b758 ("media: staging: remove lirc_zilog driver").
    
    Cc: stable@vger.kernel.org # v4.15- (all up to and including v4.15)
    Reported-by: Warren Sturm <warren.sturm@gmail.com>
    Tested-by: Warren Sturm <warren.sturm@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7a08ffb2d897f4cfbd7b2931339c4643ad04f64
Author: Sean Young <sean@mess.org>
Date:   Sun Apr 15 10:51:50 2018 +0100

    Revert "media: lirc_zilog: driver only sends LIRCCODE"
    
    [not upstream as the driver is deleted in 4.16 - gregkh]
    
    The lirc config documented here
    https://www.blushingpenguin.com/mark/blog/?p=24 uses raw_codes for sending
    IR. Each key only has one pulse, which in fact is an index into the
    haup-ir-blaster.bin file. Changing the driver to LIRCCODE (although more
    accurate) breaks this configuration.
    
    This code has been replaced completely in kernel v4.16 by a new driver,
    see commit acaa34bf06e9 ("media: rc: implement zilog transmitter"), and
    commit f95367a7b758 ("media: staging: remove lirc_zilog driver").
    
    This reverts commit 89d8a2cc51d1f29ea24a0b44dde13253141190a0.
    
    Fixes: 615cd3fe6ccc ("[media] media: lirc_dev: make better use of file->private_data")
    
    Cc: stable@vger.kernel.org # v4.14-v4.15
    Reported-by: Warren Sturm <warren.sturm@gmail.com>
    Tested-by: Warren Sturm <warren.sturm@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8caa4c5fde76315b964b77c4a7dade6833be4cb1
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Mar 28 11:15:09 2018 +0300

    iwlwifi: add a bunch of new 9000 PCI IDs
    
    commit 9e5053ad9d590e095829a8bb07adbbdbd893f0f9 upstream.
    
    A lot of new PCI IDs were added for the 9000 series.  Add them to the
    list of supported PCI IDs.
    
    Cc: stable@vger.kernel.org # 4.13+
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c61952c3d199c8179cb8d2d400ef33c5511c3a3
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Feb 21 22:18:59 2018 +0200

    iwlwifi: add shared clock PHY config flag for some devices
    
    commit 86a2b2043af79deff5cf000c5a08847faa4f2ee0 upstream.
    
    Some devices use a shared clock which is very sensitive to variations
    and cause trouble in some situations.  We need to set a bit in the phy
    configuration to indicate that to the FW.  To make this generic, add a
    extra_phy_config_flags element to the device configuration and OR it
    into the phy_cfg before sending it to the firmware.  And also create a
    set of configurations for devices that use shared clocks and need this
    extra bit to be set.
    
    Fixes: c62446d2b028 ("iwlwifi: add new 9460 series PCI IDs")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30593709f80ddf23a3e8b41f3a7edfc68c4786be
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Sat Apr 7 20:37:40 2018 +0200

    net: dsa: Discard frames from unused ports
    
    commit fc5f33768cca7144f8d793205b229d46740d183b upstream.
    
    The Marvell switches under some conditions will pass a frame to the
    host with the port being the CPU port. Such frames are invalid, and
    should be dropped. Not dropping them can result in a crash when
    incrementing the receive statistics for an invalid port.
    
    This has been reworked for 4.14, which does not have the central
    dsa_master_find_slave() function, so each tag driver needs to check.
    
    Reported-by: Chris Healy <cphealy@gmail.com>
    Fixes: 91da11f870f0 ("net: Distributed Switch Architecture protocol support")
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90a32d1f0ec9844b7984f52f07fe7bcb0abfb6a7
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Apr 20 14:56:20 2018 -0700

    mm/filemap.c: fix NULL pointer in page_cache_tree_insert()
    
    commit abc1be13fd113ddef5e2d807a466286b864caed3 upstream.
    
    f2fs specifies the __GFP_ZERO flag for allocating some of its pages.
    Unfortunately, the page cache also uses the mapping's GFP flags for
    allocating radix tree nodes.  It always masked off the __GFP_HIGHMEM
    flag, and masks off __GFP_ZERO in some paths, but not all.  That causes
    radix tree nodes to be allocated with a NULL list_head, which causes
    backtraces like:
    
      __list_del_entry+0x30/0xd0
      list_lru_del+0xac/0x1ac
      page_cache_tree_insert+0xd8/0x110
    
    The __GFP_DMA and __GFP_DMA32 flags would also be able to sneak through
    if they are ever used.  Fix them all by using GFP_RECLAIM_MASK at the
    innermost location, and remove it from earlier in the callchain.
    
    Link: http://lkml.kernel.org/r/20180411060320.14458-2-willy@infradead.org
    Fixes: 449dd6984d0e ("mm: keep page cache radix tree nodes in check")
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Reported-by: Chris Fries <cfries@google.com>
    Debugged-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e7575c6690a2871a1db5d5fe86c8fe8aef00cd8
Author: Ian Kent <raven@themaw.net>
Date:   Fri Apr 20 14:55:59 2018 -0700

    autofs: mount point create should honour passed in mode
    
    commit 1e6306652ba18723015d1b4967fe9de55f042499 upstream.
    
    The autofs file system mkdir inode operation blindly sets the created
    directory mode to S_IFDIR | 0555, ingoring the passed in mode, which can
    cause selinux dac_override denials.
    
    But the function also checks if the caller is the daemon (as no-one else
    should be able to do anything here) so there's no point in not honouring
    the passed in mode, allowing the daemon to set appropriate mode when
    required.
    
    Link: http://lkml.kernel.org/r/152361593601.8051.14014139124905996173.stgit@pluto.themaw.net
    Signed-off-by: Ian Kent <raven@themaw.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4d49cb1c20a13f03cf1740f5ae690cb1dd1f43d
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Apr 19 22:03:08 2018 -0400

    Don't leak MNT_INTERNAL away from internal mounts
    
    commit 16a34adb9392b2fe4195267475ab5b472e55292c upstream.
    
    We want it only for the stuff created by SB_KERNMOUNT mounts, *not* for
    their copies.  As it is, creating a deep stack of bindings of /proc/*/ns/*
    somewhere in a new namespace and exiting yields a stack overflow.
    
    Cc: stable@kernel.org
    Reported-by: Alexander Aring <aring@mojatatu.com>
    Bisected-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Tested-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Tested-by: Alexander Aring <aring@mojatatu.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 085125572a453938bf4b0f483ccb0d76c40f1d1c
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Apr 3 01:15:46 2018 -0400

    rpc_pipefs: fix double-dput()
    
    commit 4a3877c4cedd95543f8726b0a98743ed8db0c0fb upstream.
    
    if we ever hit rpc_gssd_dummy_depopulate() dentry passed to
    it has refcount equal to 1.  __rpc_rmpipe() drops it and
    dput() done after that hits an already freed dentry.
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bb4a6f2ff1a9081a35b07760fa40f9880d16bc6
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Apr 3 00:13:17 2018 -0400

    orangefs_kill_sb(): deal with allocation failures
    
    commit 659038428cb43a66e3eff71e2c845c9de3611a98 upstream.
    
    orangefs_fill_sb() might've failed to allocate ORANGEFS_SB(s); don't
    oops in that case.
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb5def77d0a1e41b53f7049fdb0f640408194068
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Apr 2 23:50:31 2018 -0400

    hypfs_kill_super(): deal with failed allocations
    
    commit a24cd490739586a7d2da3549a1844e1d7c4f4fc4 upstream.
    
    hypfs_fill_super() might fail to allocate sbi; hypfs_kill_super()
    should not oops on that.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c780ac96e120081a1d2e892f47ce34245ef1cfb2
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Apr 2 23:56:44 2018 -0400

    jffs2_kill_sb(): deal with failed allocations
    
    commit c66b23c2840446a82c389e4cb1a12eb2a71fa2e4 upstream.
    
    jffs2_fill_super() might fail to allocate jffs2_sb_info;
    jffs2_kill_sb() must survive that.
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22ec5ee71086284911b21339eaf4d2c2ec1df351
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Feb 14 21:23:23 2018 +0200

    drm/i915: Correctly handle limited range YCbCr data on VLV/CHV
    
    commit 5deae9191130db6b617c94fb261804597cf9b508 upstream.
    
    Turns out the VLV/CHV fixed function sprite CSC expects full range
    data as input. We've been feeding it limited range data to it all
    along. To expand the data out to full range we'll use the color
    correction registers (brightness, contrast, and saturation).
    
    On CHV pipe B we were actually doing the right thing already because we
    progammed the custom CSC matrix to do expect limited range input. Now
    that well pre-expand the data out with the color correction unit, we
    need to change the CSC matrix to operate with full range input instead.
    
    This should make the sprite output of the other pipes match the sprite
    output of pipe B reasonably well. Looking at the resulting pipe CRCs,
    there can be a slight difference in the output, but as I don't know
    the formula used by the fixed function CSC of the other pipes, I don't
    think it's worth the effort to try to match the output exactly. It
    might not even be possible due to difference in internal precision etc.
    
    One slight caveat here is that the color correction registers are single
    bufferred, so we should really be updating them during vblank, but we
    still don't have a mechanism for that, so just toss in another FIXME.
    
    v2: Rebase
    v3: s/bri/brightness/ s/con/contrast/ (Shashank)
    v4: Clarify the constants and math (Shashank)
    
    Cc: Harry Wentland <harry.wentland@amd.com>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Daniel Stone <daniel@fooishbar.org>
    Cc: Russell King - ARM Linux <linux@armlinux.org.uk>
    Cc: Ilia Mirkin <imirkin@alum.mit.edu>
    Cc: Hans Verkuil <hverkuil@xs4all.nl>
    Cc: Shashank Sharma <shashank.sharma@intel.com>
    Cc: Uma Shankar <uma.shankar@intel.com>
    Cc: Jyri Sarha <jsarha@ti.com>
    Cc: "Tang, Jun" <jun.tang@intel.com>
    Reported-by: "Tang, Jun" <jun.tang@intel.com>
    Cc: stable@vger.kernel.org
    Fixes: 7f1f3851feb0 ("drm/i915: sprite support for ValleyView v4")
    Reviewed-by: Shashank Sharma <shashank.sharma@intel.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180214192327.3250-5-ville.syrjala@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bddb1209a6df483487b241b586f9ef12c88ab8c
Author: Daniel Kurtz <djkurtz@chromium.org>
Date:   Fri Apr 6 16:07:59 2018 -0600

    mmc: sdhci-pci: Only do AMD tuning for HS200
    
    commit 300ad8992913025b4294d4fc37b6bfff4a8b7ad1 upstream.
    
    Commit c31165d7400b ("mmc: sdhci-pci: Add support for HS200 tuning mode
    on AMD, eMMC-4.5.1") added a HS200 tuning method for use with AMD SDHCI
    controllers.  As described in the commit subject, this tuning is specific
    for HS200.  However, as implemented, this method is used for all host
    timings, because platform_execute_tuning, if it exists, is called
    unconditionally by sdhci_execute_tuning().  This breaks tuning when using
    the AMD controller with, for example, a DDR50 SD card.
    
    Instead, we can implement an amd execute_tuning wrapper callback, and
    then conditionally do the HS200 specific tuning for HS200, and otherwise
    call back to the standard sdhci_execute_tuning().
    
    Signed-off-by: Daniel Kurtz <djkurtz@chromium.org>
    Acked-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: c31165d7400b ("mmc: sdhci-pci: Add support for HS200 tuning mode on AMD, eMMC-4.5.1")
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28f46dee49d3eac6dbeac3e4c9ecf1b861d2594b
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Wed Apr 4 23:42:18 2018 +0300

    fanotify: fix logic of events on child
    
    commit 54a307ba8d3cd00a3902337ffaae28f436eeb1a4 upstream.
    
    When event on child inodes are sent to the parent inode mark and
    parent inode mark was not marked with FAN_EVENT_ON_CHILD, the event
    will not be delivered to the listener process. However, if the same
    process also has a mount mark, the event to the parent inode will be
    delivered regadless of the mount mark mask.
    
    This behavior is incorrect in the case where the mount mark mask does
    not contain the specific event type. For example, the process adds
    a mark on a directory with mask FAN_MODIFY (without FAN_EVENT_ON_CHILD)
    and a mount mark with mask FAN_CLOSE_NOWRITE (without FAN_ONDIR).
    
    A modify event on a file inside that directory (and inside that mount)
    should not create a FAN_MODIFY event, because neither of the marks
    requested to get that event on the file.
    
    Fixes: 1968f5eed54c ("fanotify: use both marks when possible")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2a9d0190f9964dd734348085c22582e519c145a
Author: Jan Kara <jack@suse.cz>
Date:   Thu Apr 12 17:22:23 2018 +0200

    udf: Fix leak of UTF-16 surrogates into encoded strings
    
    commit 44f06ba8297c7e9dfd0e49b40cbe119113cca094 upstream.
    
    OSTA UDF specification does not mention whether the CS0 charset in case
    of two bytes per character encoding should be treated in UTF-16 or
    UCS-2. The sample code in the standard does not treat UTF-16 surrogates
    in any special way but on systems such as Windows which work in UTF-16
    internally, filenames would be treated as being in UTF-16 effectively.
    In Linux it is more difficult to handle characters outside of Base
    Multilingual plane (beyond 0xffff) as NLS framework works with 2-byte
    characters only. Just make sure we don't leak UTF-16 surrogates into the
    resulting string when loading names from the filesystem for now.
    
    CC: stable@vger.kernel.org # >= v4.6
    Reported-by: Mingye Wang <arthur200126@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f86815184c471dae61f3c764b7589872a91e930a
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Apr 16 23:25:19 2018 +1000

    powerpc/lib: Fix off-by-one in alternate feature patching
    
    commit b8858581febb050688e276b956796bc4a78299ed upstream.
    
    When we patch an alternate feature section, we have to adjust any
    relative branches that branch out of the alternate section.
    
    But currently we have a bug if we have a branch that points to past
    the last instruction of the alternate section, eg:
    
      FTR_SECTION_ELSE
      1:     b       2f
             or      6,6,6
      2:
      ALT_FTR_SECTION_END(...)
             nop
    
    This will result in a relative branch at 1 with a target that equals
    the end of the alternate section.
    
    That branch does not need adjusting when it's moved to the non-else
    location. Currently we do adjust it, resulting in a branch that goes
    off into the link-time location of the else section, which is junk.
    
    The fix is to not patch branches that have a target == end of the
    alternate section.
    
    Fixes: d20fe50a7b3c ("KVM: PPC: Book3S HV: Branch inside feature section")
    Fixes: 9b1a735de64c ("powerpc: Add logic to patch alternative feature sections")
    Cc: stable@vger.kernel.org # v2.6.27+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce3b0b0589a8b7e0241c0d1b1049a715108b78fb
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Wed Apr 11 15:17:59 2018 +1000

    powerpc/xive: Fix trying to "push" an already active pool VP
    
    commit b32e56e5a87a1f9243db92bc7a5df0ffb4627cfb upstream.
    
    When setting up a CPU, we "push" (activate) a pool VP for it.
    
    However it's an error to do so if it already has an active
    pool VP.
    
    This happens when doing soft CPU hotplug on powernv since we
    don't tear down the CPU on unplug. The HW flags the error which
    gets captured by the diagnostics.
    
    Fix this by making sure to "pull" out any already active pool
    first.
    
    Fixes: 243e25112d06 ("powerpc/xive: Native exploitation of the XIVE interrupt controller")
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49a52f7d9274da3f32d7c3b51843fa44fffd2e55
Author: Michael Neuling <mikey@neuling.org>
Date:   Wed Apr 11 13:37:58 2018 +1000

    powerpc/eeh: Fix enabling bridge MMIO windows
    
    commit 13a83eac373c49c0a081cbcd137e79210fe78acd upstream.
    
    On boot we save the configuration space of PCIe bridges. We do this so
    when we get an EEH event and everything gets reset that we can restore
    them.
    
    Unfortunately we save this state before we've enabled the MMIO space
    on the bridges. Hence if we have to reset the bridge when we come back
    MMIO is not enabled and we end up taking an PE freeze when the driver
    starts accessing again.
    
    This patch forces the memory/MMIO and bus mastering on when restoring
    bridges on EEH. Ideally we'd do this correctly by saving the
    configuration space writes later, but that will have to come later in
    a larger EEH rewrite. For now we have this simple fix.
    
    The original bug can be triggered on a boston machine by doing:
      echo 0x8000000000000000 > /sys/kernel/debug/powerpc/PCI0001/err_injct_outbound
    On boston, this PHB has a PCIe switch on it.  Without this patch,
    you'll see two EEH events, 1 expected and 1 the failure we are fixing
    here. The second EEH event causes the anything under the PHB to
    disappear (i.e. the i40e eth).
    
    With this patch, only 1 EEH event occurs and devices properly recover.
    
    Fixes: 652defed4875 ("powerpc/eeh: Check PCIe link after reset")
    Cc: stable@vger.kernel.org # v3.11+
    Reported-by: Pridhiviraj Paidipeddi <ppaidipe@linux.vnet.ibm.com>
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Acked-by: Russell Currey <ruscur@russell.cc>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5f6e787b9b061624f525eff944fc73e08974567
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Apr 17 16:40:00 2018 +0100

    MIPS: memset.S: Fix clobber of v1 in last_fixup
    
    commit c96eebf07692e53bf4dd5987510d8b550e793598 upstream.
    
    The label .Llast_fixup\@ is jumped to on page fault within the final
    byte set loop of memset (on < MIPSR6 architectures). For some reason, in
    this fault handler, the v1 register is randomly set to a2 & STORMASK.
    This clobbers v1 for the calling function. This can be observed with the
    following test code:
    
    static int __init __attribute__((optimize("O0"))) test_clear_user(void)
    {
      register int t asm("v1");
      char *test;
      int j, k;
    
      pr_info("\n\n\nTesting clear_user\n");
      test = vmalloc(PAGE_SIZE);
    
      for (j = 256; j < 512; j++) {
        t = 0xa5a5a5a5;
        if ((k = clear_user(test + PAGE_SIZE - 256, j)) != j - 256) {
            pr_err("clear_user (%px %d) returned %d\n", test + PAGE_SIZE - 256, j, k);
        }
        if (t != 0xa5a5a5a5) {
           pr_err("v1 was clobbered to 0x%x!\n", t);
        }
      }
    
      return 0;
    }
    late_initcall(test_clear_user);
    
    Which demonstrates that v1 is indeed clobbered (MIPS64):
    
    Testing clear_user
    v1 was clobbered to 0x1!
    v1 was clobbered to 0x2!
    v1 was clobbered to 0x3!
    v1 was clobbered to 0x4!
    v1 was clobbered to 0x5!
    v1 was clobbered to 0x6!
    v1 was clobbered to 0x7!
    
    Since the number of bytes that could not be set is already contained in
    a2, the andi placing a value in v1 is not necessary and actively
    harmful in clobbering v1.
    
    Reported-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/19109/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6da34ca1ca3e7a42b46e1265d04e827d3a6970d3
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Apr 17 15:52:21 2018 +0100

    MIPS: memset.S: Fix return of __clear_user from Lpartial_fixup
    
    commit daf70d89f80c6e1772233da9e020114b1254e7e0 upstream.
    
    The __clear_user function is defined to return the number of bytes that
    could not be cleared. From the underlying memset / bzero implementation
    this means setting register a2 to that number on return. Currently if a
    page fault is triggered within the memset_partial block, the value
    loaded into a2 on return is meaningless.
    
    The label .Lpartial_fixup\@ is jumped to on page fault. In order to work
    out how many bytes failed to copy, the exception handler should find how
    many bytes left in the partial block (andi a2, STORMASK), add that to
    the partial block end address (a2), and subtract the faulting address to
    get the remainder. Currently it incorrectly subtracts the partial block
    start address (t1), which has additionally been clobbered to generate a
    jump target in memset_partial. Fix this by adding the block end address
    instead.
    
    This issue was found with the following test code:
          int j, k;
          for (j = 0; j < 512; j++) {
            if ((k = clear_user(NULL, j)) != j) {
               pr_err("clear_user (NULL %d) returned %d\n", j, k);
            }
          }
    Which now passes on Creator Ci40 (MIPS32) and Cavium Octeon II (MIPS64).
    
    Suggested-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/19108/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b34760dc682d58f77dfab1810d4af2841828f6b
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Thu Mar 29 10:28:23 2018 +0100

    MIPS: memset.S: EVA & fault support for small_memset
    
    commit 8a8158c85e1e774a44fbe81106fa41138580dfd1 upstream.
    
    The MIPS kernel memset / bzero implementation includes a small_memset
    branch which is used when the region to be set is smaller than a long (4
    bytes on 32bit, 8 bytes on 64bit). The current small_memset
    implementation uses a simple store byte loop to write the destination.
    There are 2 issues with this implementation:
    
    1. When EVA mode is active, user and kernel address spaces may overlap.
    Currently the use of the sb instruction means kernel mode addressing is
    always used and an intended write to userspace may actually overwrite
    some critical kernel data.
    
    2. If the write triggers a page fault, for example by calling
    __clear_user(NULL, 2), instead of gracefully handling the fault, an OOPS
    is triggered.
    
    Fix these issues by replacing the sb instruction with the EX() macro,
    which will emit EVA compatible instuctions as required. Additionally
    implement a fault fixup for small_memset which sets a2 to the number of
    bytes that could not be cleared (as defined by __clear_user).
    
    Reported-by: Chuanhua Lei <chuanhua.lei@intel.com>
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/18975/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23f5562852b9f999d6c36606e40bcd81c64f4765
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Apr 17 16:40:01 2018 +0100

    MIPS: uaccess: Add micromips clobbers to bzero invocation
    
    commit b3d7e55c3f886493235bfee08e1e5a4a27cbcce8 upstream.
    
    The micromips implementation of bzero additionally clobbers registers t7
    & t8. Specify this in the clobbers list when invoking bzero.
    
    Fixes: 26c5e07d1478 ("MIPS: microMIPS: Optimise 'memset' core library function.")
    Reported-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 3.10+
    Patchwork: https://patchwork.linux-mips.org/patch/19110/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1da964d421dae559422561ef407c2557d8d0348a
Author: Aaron Armstrong Skomra <skomra@gmail.com>
Date:   Wed Apr 4 14:24:11 2018 -0700

    HID: wacom: bluetooth: send exit report for recent Bluetooth devices
    
    commit 619d3a2922ce623ca2eca443cc936810d328317c upstream.
    
    The code path for recent Bluetooth devices omits an exit report which
    resets all the values of the device.
    
    Fixes: 4922cd26f0 ("HID: wacom: Support 2nd-gen Intuos Pro's Bluetooth classic interface")
    Cc: <stable@vger.kernel.org> # 4.11
    Signed-off-by: Aaron Armstrong Skomra <aaron.skomra@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e159a9e1823469c46bf3355d87a79a2cc7f8890
Author: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
Date:   Fri Apr 6 01:09:36 2018 +0200

    HID: hidraw: Fix crash on HIDIOCGFEATURE with a destroyed device
    
    commit a955358d54695e4ad9f7d6489a7ac4d69a8fc711 upstream.
    
    Doing `ioctl(HIDIOCGFEATURE)` in a tight loop on a hidraw device
    and then disconnecting the device, or unloading the driver, can
    cause a NULL pointer dereference.
    
    When a hidraw device is destroyed it sets 0 to `dev->exist`.
    Most functions check 'dev->exist' before doing its work, but
    `hidraw_get_report()` was missing that check.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27840bc4ebb2b4bf106c3cf7cb931c277f997a24
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Apr 3 10:52:20 2018 -0700

    HID: input: fix battery level reporting on BT mice
    
    commit 2e210bbb7429cdcf1a1a3ad00c1bf98bd9bf2452 upstream.
    
    The commit 581c4484769e ("HID: input: map digitizer battery usage")
    assumed that devices having input (qas opposed to feature) report for
    battery strength would report the data on their own, without the need to
    be polled by the kernel; unfortunately it is not so. Many wireless mice
    do not send unsolicited reports with battery strength data and have to
    be polled explicitly. As a complication, stylus devices on digitizers
    are not normally connected to the base and thus can not be polled - the
    base can only determine battery strength in the stylus when it is in
    proximity.
    
    To solve this issue, we add a special flag that tells the kernel
    to avoid polling the device (and expect unsolicited reports) and set it
    when report field with physical usage of digitizer stylus (HID_DG_STYLUS).
    Unless this flag is set, and we have not seen the unsolicited reports,
    the kernel will attempt to poll the device when userspace attempts to
    read "capacity" and "state" attributes of power_supply object
    corresponding to the devices battery.
    
    Fixes: 581c4484769e ("HID: input: map digitizer battery usage")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198095
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: Martin van Es <martin@mrvanes.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90936d903c2f34663cffe68d9845debdeb85174c
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Apr 11 16:32:17 2018 -0400

    random: add new ioctl RNDRESEEDCRNG
    
    commit d848e5f8e1ebdb227d045db55fe4f825e82965fa upstream.
    
    Add a new ioctl which forces the the crng to be reseeded.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d152fcc173149a99d6f707a5b8a80d83d906755b
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Apr 12 00:50:45 2018 -0400

    random: crng_reseed() should lock the crng instance that it is modifying
    
    commit 0bb29a849a6433b72e249eea7695477b02056e94 upstream.
    
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: 1e7f583af67b ("random: make /dev/urandom scalable for silly...")
    Cc: stable@kernel.org # 4.8+
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jann Horn <jannh@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b6b1f3a192372937164d1293b432c640ffc7c8f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Apr 11 14:58:27 2018 -0400

    random: use a different mixing algorithm for add_device_randomness()
    
    commit dc12baacb95f205948f64dc936a47d89ee110117 upstream.
    
    add_device_randomness() use of crng_fast_load() was highly
    problematic.  Some callers of add_device_randomness() can pass in a
    large amount of static information.  This would immediately promote
    the crng_init state from 0 to 1, without really doing much to
    initialize the primary_crng's internal state with something even
    vaguely unpredictable.
    
    Since we don't have the speed constraints of add_interrupt_randomness(),
    we can do a better job mixing in the what unpredictability a device
    driver or architecture maintainer might see fit to give us, and do it
    in a way which does not bump the crng_init_cnt variable.
    
    Also, since add_device_randomness() doesn't bump any entropy
    accounting in crng_init state 0, mix the device randomness into the
    input_pool entropy pool as well.  This is related to CVE-2018-1108.
    
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: ee7998c50c26 ("random: do not ignore early device randomness")
    Cc: stable@kernel.org # 4.13+
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e513bc20ca63f594632eca4e1968791240b8f18
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Apr 11 13:27:52 2018 -0400

    random: fix crng_ready() test
    
    commit 43838a23a05fbd13e47d750d3dfd77001536dd33 upstream.
    
    The crng_init variable has three states:
    
    0: The CRNG is not initialized at all
    1: The CRNG has a small amount of entropy, hopefully good enough for
       early-boot, non-cryptographical use cases
    2: The CRNG is fully initialized and we are sure it is safe for
       cryptographic use cases.
    
    The crng_ready() function should only return true once we are in the
    last state.  This addresses CVE-2018-1108.
    
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: e192be9d9a30 ("random: replace non-blocking pool...")
    Cc: stable@kernel.org # 4.8+
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jann Horn <jannh@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8036cdaa1b13144428bbf95bc9679ea7a592d7dd
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Apr 19 13:29:05 2018 +0800

    ALSA: hda/realtek - adjust the location of one mic
    
    commit a3dafb2200bf3c13905a088e82ae11f1eb275a83 upstream.
    
    There are two front mics on this machine, if we don't adjust the
    location for one of them, they will have the same mixer name,
    pulseaudio can't handle this situation.
    
    After applying this FIXUP, they will have different mixer name,
    then pulseaudio can handle them correctly.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adc02ac60919116f61ebcfbb4e5cfd0b6c3cb2f3
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Apr 19 13:29:04 2018 +0800

    ALSA: hda/realtek - set PINCFG_HEADSET_MIC to parse_flags
    
    commit 3ce0d5aa265bcc0a4b281cb0cabf92491276101b upstream.
    
    Otherwise, the pin will be regarded as microphone, and the jack name
    is "Mic Phantom", it is always on in the pulseaudio even nothing is
    plugged into the jack. So the UI is confusing to users since the
    microphone always shows up in the UI even there is no microphone
    plugged.
    
    After adding this flag, the jack name is "Headset Mic Phantom", then
    the pulseaudio can handle its detection correctly.
    
    Fixes: f0ba9d699e5c ("ALSA: hda/realtek - Fix Dell headset Mic can't record")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11e9bed2b97199ee940226be54aed5d19c50d0e4
Author: David Wang <davidwang@zhaoxin.com>
Date:   Mon Apr 16 17:48:09 2018 +0800

    ALSA: hda - New VIA controller suppor no-snoop path
    
    commit af52f9982e410edac21ca4b49563053ffc9da1eb upstream.
    
    This patch is used to tell kernel that new VIA HDAC controller also
    support no-snoop path.
    
    [ minor coding style fix by tiwai ]
    
    Signed-off-by: David Wang <davidwang@zhaoxin.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcf38cf55e286f7da4a1210d8496696b855934be
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Apr 19 18:16:15 2018 +0200

    ALSA: rawmidi: Fix missing input substream checks in compat ioctls
    
    commit 8a56ef4f3ffba9ebf4967b61ef600b0a7ba10f11 upstream.
    
    Some rawmidi compat ioctls lack of the input substream checks
    (although they do check only for rfile->output).  This many eventually
    lead to an Oops as NULL substream is passed to the rawmidi core
    functions.
    
    Fix it by adding the proper checks before each function call.
    
    The bug was spotted by syzkaller.
    
    Reported-by: syzbot+f7a0348affc3b67bc617@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b3e7915edd6c20be27444bd70d967fcb07394d
Author: Fabián Inostroza <soulsonceonfire@gmail.com>
Date:   Thu Apr 12 00:37:35 2018 -0300

    ALSA: line6: Use correct endpoint type for midi output
    
    commit 7ecb46e9ee9af18e304eb9e7d6804c59a408e846 upstream.
    
    Sending MIDI messages to a PODxt through the USB connection shows
    "usb_submit_urb failed" in dmesg and the message is not received by
    the POD.
    
    The error is caused because in the funcion send_midi_async() in midi.c
    there is a call to usb_sndbulkpipe() for endpoint 3 OUT, but the PODxt
    USB descriptor shows that this endpoint it's an interrupt endpoint.
    
    Patch tested with PODxt only.
    
    [ The bug has been present from the very beginning in the staging
      driver time, but Fixes below points to the commit moving to sound/
      directory so that the fix can be cleanly applied -- tiwai ]
    
    Fixes: 61864d844c29 ("ALSA: move line6 usb driver into sound/usb")
    Signed-off-by: Fabián Inostroza <fabianinostroza@udec.cl>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdc6f4c3db08c7b947b5c4200e600136993fe01b
Author: Paul Parsons <lost.distance@yahoo.com>
Date:   Sat Apr 2 12:32:30 2016 +0100

    drm/radeon: Fix PCIe lane width calculation
    
    commit 85e290d92b4b794d0c758c53007eb4248d385386 upstream.
    
    Two years ago I tried an AMD Radeon E8860 embedded GPU with the drm driver.
    The dmesg output included driver warnings about an invalid PCIe lane width.
    Tracking the problem back led to si_set_pcie_lane_width_in_smc().
    The calculation of the lane widths via ATOM_PPLIB_PCIE_LINK_WIDTH_MASK and
    ATOM_PPLIB_PCIE_LINK_WIDTH_SHIFT macros did not increment the resulting
    value, per the comment in pptable.h ("lanes - 1"), and per usage elsewhere.
    Applying the increment silenced the warnings.
    The code has not changed since, so either my analysis was incorrect or the
    bug has gone unnoticed. Hence submitting this as an RFC.
    
    Acked-by: Christian König <christian.koenig@amd.com>
    Acked-by: Chunming Zhou <david1.zhou@amd.com>
    Signed-off-by: Paul Parsons <lost.distance@yahoo.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 110b72d9351ff9662fd27d1225301d10293cf5a8
Author: Nico Sneck <nicosneck@hotmail.com>
Date:   Sat Apr 7 15:13:04 2018 +0000

    drm/radeon: add PX quirk for Asus K73TK
    
    commit b1550359d1eb392ee54f7cf47cffcfe0a602f6a7 upstream.
    
    With this the dGPU turns on correctly.
    
    Signed-off-by: Nico Sneck <nicosneck@hotmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 791469d6b882c7366a7710539dc7267c5b57fed6
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Feb 20 13:01:18 2018 +0000

    drm/rockchip: Clear all interrupts before requesting the IRQ
    
    commit 5f9e93fed4d45e9a8f84728aff1a8f2ab8922902 upstream.
    
    Calling request_irq() followed by disable_irq() is usually a bad idea,
    specially if the interrupt can be pending, and you're not yet in a
    position to handle it.
    
    This is exactly what happens on my kevin system when rebooting in a
    second kernel using kexec: Some interrupt is left pending from
    the previous kernel, and we take it too early, before disable_irq()
    could do anything.
    
    Let's clear the pending interrupts as we initialize the HW, and move
    the interrupt request after that point. This ensures that we're in
    a sane state when the interrupt is requested.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    [adapted to recent rockchip-drm changes]
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180220130120.5254-2-marc.zyngier@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f188464e3d54c2d651fa710f74c8aed68aa87813
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Apr 3 12:54:33 2018 -0500

    drm/amdgpu/si: implement get/set pcie_lanes asic callback
    
    commit 20ca25e86c56f5490bdc80318f4fc06466e4c21b upstream.
    
    Required for dpm setup on some asics. Fixes a NULL dereference
    on asics that require it.
    
    Acked-by: Christian König <christian.koenig@amd.com>
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=102553
    Tested-by: Abel Garcia Dorta <mercuriete@yahoo.es>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f056e3339741cf34908d93d428c2fbe5fd6a3a3e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Apr 2 12:29:26 2018 -0500

    drm/amdgpu: Fix PCIe lane width calculation
    
    commit 41212e2fe72b26ded7ed78224d9eab720c2891e2 upstream.
    
    The calculation of the lane widths via ATOM_PPLIB_PCIE_LINK_WIDTH_MASK and
    ATOM_PPLIB_PCIE_LINK_WIDTH_SHIFT macros did not increment the resulting
    value, per the comment in pptable.h ("lanes - 1"), and per usage elsewhere.
    Port of the radeon fix to amdgpu.
    
    Acked-by: Christian König <christian.koenig@amd.com>
    Acked-by: Chunming Zhou <david1.zhou@amd.com>
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=102553
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57e56826611a158234ce75a1684d0de92af73c8e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Mar 27 15:53:52 2018 -0500

    drm/amdgpu/sdma: fix mask in emit_pipeline_sync
    
    commit 4a8e06f7aad797e92413a3042d09d3b385fa1fda upstream.
    
    Needs to be a 32 bit mask.
    
    Acked-by: Huang Rui <ray.huang@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c73d9e350085a479d787d6d6dff3599fa6952491
Author: Bas Nieuwenhuizen <basni@chromium.org>
Date:   Wed Jan 31 13:58:55 2018 +0100

    drm/amdgpu: Fix always_valid bos multiple LRU insertions.
    
    commit a20ee0b1f8b42e2568f3a4408003d22b2dfcc706 upstream.
    
    If these bos are evicted and are in the validated list
    things blow up, so do not put them in there. Notably,
    that tries to add the bo to the LRU twice, which results
    in a BUG_ON in ttm_bo.c.
    
    While for the bo_list an alternative would be to not allow
    always valid bos in there, that does not work for the user
    fence.
    
    v2: Fixed whitespace issue pointed out by checkpatch.pl
    
    Signed-off-by: Bas Nieuwenhuizen <basni@chromium.org>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 674b6963cec22d45d0ff9565554bf5ee2628630e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Mar 21 21:05:46 2018 -0500

    drm/amdgpu: Add an ATPX quirk for hybrid laptop
    
    commit 13b40935cf64f59b93cf1c716a2033488e5a228c upstream.
    
    _PR3 doesn't seem to work properly, use ATPX instead.
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=104064
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 312d02879f9f0ae9c6b011d0ead6a143115e9f93
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Apr 7 11:48:58 2018 +0200

    ALSA: pcm: Fix endless loop for XRUN recovery in OSS emulation
    
    commit e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86 upstream.
    
    The commit 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS
    ioctls and read/write") split the PCM preparation code to a locked
    version, and it added a sanity check of runtime->oss.prepare flag
    along with the change.  This leaded to an endless loop when the stream
    gets XRUN: namely, snd_pcm_oss_write3() and co call
    snd_pcm_oss_prepare() without setting runtime->oss.prepare flag and
    the loop continues until the PCM state reaches to another one.
    
    As the function is supposed to execute the preparation
    unconditionally, drop the invalid state check there.
    
    The bug was triggered by syzkaller.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Reported-by: syzbot+150189c103427d31a053@syzkaller.appspotmail.com
    Reported-by: syzbot+7e3f31a52646f939c052@syzkaller.appspotmail.com
    Reported-by: syzbot+4f2016cf5185da7759dc@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 157113cb7c89829b1cd2e2792a1f38932f31c965
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 27 14:32:23 2018 +0200

    ALSA: pcm: Fix mutex unbalance in OSS emulation ioctls
    
    commit f6d297df4dd47ef949540e4a201230d0c5308325 upstream.
    
    The previous fix 40cab6e88cb0 ("ALSA: pcm: Return -EBUSY for OSS
    ioctls changing busy streams") introduced some mutex unbalance; the
    check of runtime->oss.rw_ref was inserted in a wrong place after the
    mutex lock.
    
    This patch fixes the inconsistency by rewriting with the helper
    functions to lock/unlock parameters with the stream check.
    
    Fixes: 40cab6e88cb0 ("ALSA: pcm: Return -EBUSY for OSS ioctls changing busy streams")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 048747b04842cbe81386386ecd15b74db93029cf
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 23 08:03:26 2018 +0100

    ALSA: pcm: Return -EBUSY for OSS ioctls changing busy streams
    
    commit 40cab6e88cb0b6c56d3f30b7491a20e803f948f6 upstream.
    
    OSS PCM stream management isn't modal but it allows ioctls issued at
    any time for changing the parameters.  In the previous hardening
    patch ("ALSA: pcm: Avoid potential races between OSS ioctls and
    read/write"), we covered these races and prevent the corruption by
    protecting the concurrent accesses via params_lock mutex.  However,
    this means that some ioctls that try to change the stream parameter
    (e.g. channels or format) would be blocked until the read/write
    finishes, and it may take really long.
    
    Basically changing the parameter while reading/writing is an invalid
    operation, hence it's even more user-friendly from the API POV if it
    returns -EBUSY in such a situation.
    
    This patch adds such checks in the relevant ioctls with the addition
    of read/write access refcount.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd889a82fb01365ca0c364166d4defad3253248c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 22 18:10:14 2018 +0100

    ALSA: pcm: Avoid potential races between OSS ioctls and read/write
    
    commit 02a5d6925cd34c3b774bdb8eefb057c40a30e870 upstream.
    
    Although we apply the params_lock mutex to the whole read and write
    operations as well as snd_pcm_oss_change_params(), we may still face
    some races.
    
    First off, the params_lock is taken inside the read and write loop.
    This is intentional for avoiding the too long locking, but it allows
    the in-between parameter change, which might lead to invalid
    pointers.  We check the readiness of the stream and set up via
    snd_pcm_oss_make_ready() at the beginning of read and write, but it's
    called only once, by assuming that it remains ready in the rest.
    
    Second, many ioctls that may change the actual parameters
    (i.e. setting runtime->oss.params=1) aren't protected, hence they can
    be processed in a half-baked state.
    
    This patch is an attempt to plug these holes.  The stream readiness
    check is moved inside the read/write inner loop, so that the stream is
    always set up in a proper state before further processing.  Also, each
    ioctl that may change the parameter is wrapped with the params_lock
    for avoiding the races.
    
    The issues were triggered by syzkaller in a few different scenarios,
    particularly the one below appearing as GPF in loopback_pos_update.
    
    Reported-by: syzbot+c4227aec125487ec3efa@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d2ea307ffa16644127ba09de30cfb31f3f40c4a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jan 9 08:51:02 2018 +0100

    ALSA: pcm: Use ERESTARTSYS instead of EINTR in OSS emulation
    
    commit c64ed5dd9feba193c76eb460b451225ac2a0d87b upstream.
    
    Fix the last standing EINTR in the whole subsystem.  Use more correct
    ERESTARTSYS for pending signals.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ccdea040e81553aaaa9f380f0ff745f71d27eff
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Mon Oct 2 12:39:10 2017 -0600

    vfio/pci: Virtualize Maximum Read Request Size
    
    commit cf0d53ba4947aad6e471491d5b20a567cbe92e56 upstream.
    
    MRRS defines the maximum read request size a device is allowed to
    make.  Drivers will often increase this to allow more data transfer
    with a single request.  Completions to this request are bound by the
    MPS setting for the bus.  Aside from device quirks (none known), it
    doesn't seem to make sense to set an MRRS value less than MPS, yet
    this is a likely scenario given that user drivers do not have a
    system-wide view of the PCI topology.  Virtualize MRRS such that the
    user can set MRRS >= MPS, but use MPS as the floor value that we'll
    write to hardware.
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23a63d96e015d56fc69f527a012625c5b8f346e5
Author: Igor Pylypiv <igor.pylypiv@gmail.com>
Date:   Tue Mar 6 23:47:25 2018 -0800

    watchdog: f71808e_wdt: Fix WD_EN register read
    
    commit 977f6f68331f94bb72ad84ee96b7b87ce737d89d upstream.
    
    F71808FG_FLAG_WD_EN defines bit position, not a bitmask
    
    Signed-off-by: Igor Pylypiv <igor.pylypiv@gmail.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28fe0fba29f20d1301ae2183d424bcf6a46c0ca8
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Mar 1 11:27:50 2018 +0800

    dt-bindings: clock: mediatek: add binding for fixed-factor clock axisel_d4
    
    commit 55a5fcafe3a94e8a0777bb993d09107d362258d2 upstream.
    
    Just add binding for a fixed-factor clock axisel_d4, which would be
    referenced by PWM devices on MT7623 or MT2701 SoC.
    
    Cc: stable@vger.kernel.org
    Fixes: 1de9b21633d6 ("clk: mediatek: Add dt-bindings for MT2701 clocks")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: devicetree@vger.kernel.org
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecb67e92d42e1fbbb710c9c86259ba4ef0839304
Author: Mikhail Lappo <mikhail.lappo@esrlabs.com>
Date:   Fri Feb 2 16:17:46 2018 -0200

    thermal: imx: Fix race condition in imx_thermal_probe()
    
    commit cf1ba1d73a33944d8c1a75370a35434bf146b8a7 upstream.
    
    When device boots with T > T_trip_1 and requests interrupt,
    the race condition takes place. The interrupt comes before
    THERMAL_DEVICE_ENABLED is set. This leads to an attempt to
    reading sensor value from irq and disabling the sensor, based on
    the data->mode field, which expected to be THERMAL_DEVICE_ENABLED,
    but still stays as THERMAL_DEVICE_DISABLED. Afher this issue
    sensor is never re-enabled, as the driver state is wrong.
    
    Fix this problem by setting the 'data' members prior to
    requesting the interrupts.
    
    Fixes: 37713a1e8e4c ("thermal: imx: implement thermal alarm interrupt handling")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mikhail Lappo <mikhail.lappo@esrlabs.com>
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Dong Aisheng <aisheng.dong@nxp.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9b200ce2be5da7613e73daf356bd0ae63c0a48d
Author: Ryo Kodama <ryo.kodama.vz@renesas.com>
Date:   Fri Mar 9 20:24:21 2018 +0900

    pwm: rcar: Fix a condition to prevent mismatch value setting to duty
    
    commit 6225f9c64b40bc8a22503e9cda70f55d7a9dd3c6 upstream.
    
    This patch fixes an issue that is possible to set mismatch value to duty
    for R-Car PWM if we input the following commands:
    
     # cd /sys/class/pwm/<pwmchip>/
     # echo 0 > export
     # cd pwm0
     # echo 30 > period
     # echo 30 > duty_cycle
     # echo 0 > duty_cycle
     # cat duty_cycle
     0
     # echo 1 > enable
     --> Then, the actual duty_cycle is 30, not 0.
    
    So, this patch adds a condition into rcar_pwm_config() to fix this
    issue.
    
    Signed-off-by: Ryo Kodama <ryo.kodama.vz@renesas.com>
    [shimoda: revise the commit log and add Fixes and Cc tags]
    Fixes: ed6c1476bf7f ("pwm: Add support for R-Car PWM Timer")
    Cc: Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff18ffb1f81db091e916bb3afc4a264219f840ea
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Thu Mar 22 10:11:30 2018 +0100

    clk: bcm2835: De-assert/assert PLL reset signal when appropriate
    
    commit 753872373b599384ac7df809aa61ea12d1c4d5d1 upstream.
    
    In order to enable a PLL, not only the PLL has to be powered up and
    locked, but you also have to de-assert the reset signal. The last part
    was missing. Add it so PLLs that were not enabled by the FW/bootloader
    can be enabled from Linux.
    
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the audio domain clocks")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc7a428ae26f7711be24c484b9b793853734b44a
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Mar 1 11:27:51 2018 +0800

    clk: mediatek: fix PWM clock source by adding a fixed-factor clock
    
    commit 89cd7aec21af26fd0c117bfc4bfc781724f201de upstream.
    
    The clock for which all PWM devices on MT7623 or MT2701 actually depending
    on has to be divided by four from its parent clock axi_sel in the clock
    path prior to PWM devices.
    
    Consequently, adding a fixed-factor clock axisel_d4 as one-fourth of
    clock axi_sel allows that PWM devices can have the correct resolution
    calculation.
    
    Cc: stable@vger.kernel.org
    Fixes: e9862118272a ("clk: mediatek: Add MT2701 clock support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8b6fdbe513d2f68d93dd07af4df1b65254408e1
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 16:27:47 2018 +0100

    clk: fix false-positive Wmaybe-uninitialized warning
    
    commit ce33f284935e08229046b30635e6aadcbab02b53 upstream.
    
    When we build this driver with on x86-32, gcc produces a false-positive warning:
    
    drivers/clk/renesas/clk-sh73a0.c: In function 'sh73a0_cpg_clocks_init':
    drivers/clk/renesas/clk-sh73a0.c:155:10: error: 'parent_name' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       return clk_register_fixed_factor(NULL, name, parent_name, 0,
    
    We can work around that warning by adding a fake initialization, I tried
    and failed to come up with any better workaround. This is currently one
    of few remaining warnings for a 4.14.y randconfig build, so it would be
    good to also have it backported at least to that version. Older versions
    have more randconfig warnings, so we might not care.
    
    I had not noticed this earlier, because one patch in my randconfig test
    tree removes the '-ffreestanding' option on x86-32, and that avoids
    the warning. The -ffreestanding flag was originally global but moved
    into arch/i386 by Andi Kleen in commit 6edfba1b33c7 ("[PATCH] x86_64:
    Don't define string functions to builtin") as a 'temporary workaround'.
    
    Like many temporary hacks, this turned out to be rather long-lived, from
    all I can tell we still need a simple fix to asm/string_32.h before it
    can be removed, but I'm not sure about how to best do that.
    
    Cc: stable@vger.kernel.org
    Cc: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37d8947c0b073a27198ae477d8a8a8b6cda61abf
Author: Richard Genoud <richard.genoud@gmail.com>
Date:   Tue Mar 13 16:27:02 2018 +0100

    clk: mvebu: armada-38x: add support for missing clocks
    
    commit 6a4a4595804548e173f0763a0e7274a3521c59a9 upstream.
    
    Clearfog boards can come with a CPU clocked at 1600MHz (commercial)
    or 1333MHz (industrial).
    
    They have also some dip-switches to select a different clock (666, 800,
    1066, 1200).
    
    The funny thing is that the recovery button is on the MPP34 fq selector.
    So, when booting an industrial board with this button down, the frequency
    666MHz is selected (and the kernel didn't boot).
    
    This patch add all the missing clocks.
    
    The only mode I didn't test is 2GHz (uboot found 4294MHz instead :/ ).
    
    Fixes: 0e85aeced4d6 ("clk: mvebu: add clock support for Armada 380/385")
    Cc: <stable@vger.kernel.org> # 3.16.x: 9593f4f56cf5: clk: mvebu: armada-38x: add support for 1866MHz variants
    Cc: <stable@vger.kernel.org> # 3.16.x
    
    Signed-off-by: Richard Genoud <richard.genoud@gmail.com>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f13b4a61989fb29e16adba2ed2e073ffed301f40
Author: Sinan Kaya <okaya@codeaurora.org>
Date:   Tue Apr 10 14:44:21 2018 -0500

    PCI: Mark Broadcom HT1100 and HT2000 Root Port Extended Tags as broken
    
    commit 1b30dfd376e28e7f37eda5e2033f6823cdda222b upstream.
    
    Per PCIe r3.1, sec 2.2.6.2 and 7.8.4, a Requester may not use 8-bit Tags
    unless its Extended Tag Field Enable is set, but all Receivers/Completers
    must handle 8-bit Tags correctly regardless of their Extended Tag Field
    Enable.
    
    Some devices do not handle 8-bit Tags as Completers, so add a quirk for
    them.  If we find such a device, we disable Extended Tags for the entire
    hierarchy to make peer-to-peer DMA possible.
    
    The Broadcom HT1100/HT2000/HT2100 seems to have issues with handling 8-bit
    tags.  Mark it as broken.
    
    This fixes Xorg hangs and unresponsive keyboards with errors like this:
    
      radeon 0000:06:00.0: GPU lockup (current fence id 0x000000000000000e last fence id 0x0000000000000
      [drm:r600_ring_test [radeon]] *ERROR* radeon: ring 0 test failed (scratch(0x8504)=0xCAFEDEAD)
      [drm:r600_resume [radeon]] *ERROR* r600 startup failed on resume
    
    Fixes: 60db3a4d8cc9 ("PCI: Enable PCIe Extended Tags if supported")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196197
    Signed-off-by: Sinan Kaya <okaya@codeaurora.org>
    Signed-off-by: Bjorn Helgaas <helgaas@kernel.org>
    CC: stable@vger.kernel.org      # v4.11: 62ce94a7a5a5 PCI: Mark Broadcom HT2100 Root Port Extended Tags as broken
    CC: stable@vger.kernel.org      # v4.11
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b684fbbc58ed048a2da5e21e94eec8c98c3c914
Author: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
Date:   Tue Apr 3 23:57:03 2018 +0200

    mmc: tmio: Fix error handling when issuing CMD23
    
    commit fc167daff581c01ebce8695e9618231cae3561a1 upstream.
    
    If an error was detected when CMD23 was issued, command sequence should
    be terminated with errors and CMD23 should be issued after retuning.
    
    Fixes: 8b22c3c18be5 ("mmc: tmio: add CMD23 support")
    Signed-off-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Cc: <stable@vger.kernel.org> # 4.13+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5e2841e20ff7d6bc5c886a0aa46c8623a0afe63
Author: Alex Smith <alex.smith@imgtec.com>
Date:   Wed Mar 28 18:00:43 2018 -0300

    mmc: jz4740: Fix race condition in IRQ mask update
    
    commit a04f0017c22453613d5f423326b190c61e3b4f98 upstream.
    
    A spinlock is held while updating the internal copy of the IRQ mask,
    but not while writing it to the actual IMASK register. After the lock
    is released, an IRQ can occur before the IMASK register is written.
    If handling this IRQ causes the mask to be changed, when the handler
    returns back to the middle of the first mask update, a stale value
    will be written to the mask register.
    
    If this causes an IRQ to become unmasked that cannot have its status
    cleared by writing a 1 to it in the IREG register, e.g. the SDIO IRQ,
    then we can end up stuck with the same IRQ repeatedly being fired but
    not handled. Normally the MMC IRQ handler attempts to clear any
    unexpected IRQs by writing IREG, but for those that cannot be cleared
    in this way then the IRQ will just repeatedly fire.
    
    This was resulting in lockups after a while of using Wi-Fi on the
    CI20 (GitHub issue #19).
    
    Resolve by holding the spinlock until after the IMASK register has
    been updated.
    
    Cc: stable@vger.kernel.org
    Link: https://github.com/MIPS/CI20_linux/issues/19
    Fixes: 61bfbdb85687 ("MMC: Add support for the controller on JZ4740 SoCs.")
    Tested-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Alex Smith <alex.smith@imgtec.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 180d28f824ce68022a4600300e3b5bc98c3c0661
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Sat Feb 24 13:42:27 2018 +0800

    iommu/vt-d: Fix a potential memory leak
    
    commit bbe4b3af9d9e3172fb9aa1f8dcdfaedcb381fc64 upstream.
    
    A memory block was allocated in intel_svm_bind_mm() but never freed
    in a failure path. This patch fixes this by free it to avoid memory
    leakage.
    
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Fixes: 2f26e0a9c9860 ('iommu/vt-d: Add basic SVM PASID support')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a999c2bef6880909901b5c56c81b920f89ed72f
Author: Krzysztof Mazur <krzysiek@podlesie.net>
Date:   Wed Nov 15 11:12:39 2017 +0100

    um: Use POSIX ucontext_t instead of struct ucontext
    
    commit 4d1a535b8ec5e74b42dfd9dc809142653b2597f6 upstream.
    
    glibc 2.26 removed the 'struct ucontext' to "improve" POSIX compliance
    and break programs, including User Mode Linux. Fix User Mode Linux
    by using POSIX ucontext_t.
    
    This fixes:
    
    arch/um/os-Linux/signal.c: In function 'hard_handler':
    arch/um/os-Linux/signal.c:163:22: error: dereferencing pointer to incomplete type 'struct ucontext'
      mcontext_t *mc = &uc->uc_mcontext;
    arch/x86/um/stub_segv.c: In function 'stub_segv_handler':
    arch/x86/um/stub_segv.c:16:13: error: dereferencing pointer to incomplete type 'struct ucontext'
              &uc->uc_mcontext);
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Krzysztof Mazur <krzysiek@podlesie.net>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f57f3f346d0516fcfcb9bee1df2a2a9f361c4396
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Dec 14 03:23:37 2017 +0100

    um: Compile with modern headers
    
    commit 530ba6c7cb3c22435a4d26de47037bb6f86a5329 upstream.
    
    Recent libcs have gotten a bit more strict, so we actually need to
    include the right headers and use the right types. This enables UML to
    compile again.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc0f003274525862bd671bf438398bf46fc62b0f
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Apr 2 10:33:56 2018 -0400

    ring-buffer: Check if memory is available before allocation
    
    commit 2a872fa4e9c8adc79c830e4009e1cc0c013a9d8a upstream.
    
    The ring buffer is made up of a link list of pages. When making the ring
    buffer bigger, it will allocate all the pages it needs before adding to the
    ring buffer, and if it fails, it frees them and returns an error. This makes
    increasing the ring buffer size an all or nothing action. When this was
    first created, the pages were allocated with "NORETRY". This was to not
    cause any Out-Of-Memory (OOM) actions from allocating the ring buffer. But
    NORETRY was too strict, as the ring buffer would fail to expand even when
    there's memory available, but was taken up in the page cache.
    
    Commit 848618857d253 ("tracing/ring_buffer: Try harder to allocate") changed
    the allocating from NORETRY to RETRY_MAYFAIL. The RETRY_MAYFAIL would
    allocate from the page cache, but if there was no memory available, it would
    simple fail the allocation and not trigger an OOM.
    
    This worked fine, but had one problem. As the ring buffer would allocate one
    page at a time, it could take up all memory in the system before it failed
    to allocate and free that memory. If the allocation is happening and the
    ring buffer allocates all memory and then tries to take more than available,
    its allocation will not trigger an OOM, but if there's any allocation that
    happens someplace else, that could trigger an OOM, even though once the ring
    buffer's allocation fails, it would free up all the previous memory it tried
    to allocate, and allow other memory allocations to succeed.
    
    Commit d02bd27bd33dd ("mm/page_alloc.c: calculate 'available' memory in a
    separate function") separated out si_mem_availble() as a separate function
    that could be used to see how much memory is available in the system. Using
    this function to make sure that the ring buffer could be allocated before it
    tries to allocate pages we can avoid allocating all memory in the system and
    making it vulnerable to OOMs if other allocations are taking place.
    
    Link: http://lkml.kernel.org/r/1522320104-6573-1-git-send-email-zhaoyang.huang@spreadtrum.com
    
    CC: stable@vger.kernel.org
    Cc: linux-mm@kvack.org
    Fixes: 848618857d253 ("tracing/ring_buffer: Try harder to allocate")
    Requires: d02bd27bd33dd ("mm/page_alloc.c: calculate 'available' memory in a separate function")
    Reported-by: Zhaoyang Huang <huangzhaoyang@gmail.com>
    Tested-by: Joel Fernandes <joelaf@google.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4171ea2471a1c383e5df0a4cb6a193fc13436b9b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Mar 21 21:22:34 2018 -0700

    nfit: skip region registration for incomplete control regions
    
    commit 0731de476a37c33485af82d64041c9d193208df8 upstream.
    
    Per the ACPI specification the only functional purpose for a DIMM
    Control Region to be mapped into the system physical address space, from
    an OSPM perspective, is to support block-apertures. However, there are
    some BIOSen that publish DIMM Control Region SPA entries for pre-boot
    environment consumption.  Undo the kernel policy of generating disabled
    'ndblk' regions when this configuration is detected.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 1f7df6f88b92 ("libnvdimm, nfit: regions (block-data-window...)")
    Reviewed-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5520091356b09abbaa2205babc5312a78d741a75
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Apr 2 16:40:04 2018 -0700

    nfit, address-range-scrub: fix scrub in-progress reporting
    
    commit 78727137fdf49edf9f731bde79d7189067b4047a upstream.
    
    There is a small window whereby ARS scan requests can schedule work that
    userspace will miss when polling scrub_show. Hold the init_mutex lock
    over calls to report the status to close this potential escape. Also,
    make sure that requests to cancel the ARS workqueue are treated as an
    idle event.
    
    Cc: <stable@vger.kernel.org>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Fixes: 37b137ff8c83 ("nfit, libnvdimm: allow an ARS scrub...")
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b68b77c935dd1574873aac827c17fc76bb036a0f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Apr 6 16:37:21 2018 -0700

    libnvdimm, namespace: use a safe lookup for dimm device name
    
    commit 4f8672201b7e7ed4f5f6c3cf6dcd080648580582 upstream.
    
    The following NULL dereference results from incorrectly assuming that
    ndd is valid in this print:
    
      struct nvdimm_drvdata *ndd = to_ndd(&nd_region->mapping[i]);
    
      /*
       * Give up if we don't find an instance of a uuid at each
       * position (from 0 to nd_region->ndr_mappings - 1), or if we
       * find a dimm with two instances of the same uuid.
       */
      dev_err(&nd_region->dev, "%s missing label for %pUb\n",
                      dev_name(ndd->dev), nd_label->uuid);
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000000
     IP: nd_region_register_namespaces+0xd67/0x13c0 [libnvdimm]
     PGD 0 P4D 0
     Oops: 0000 [#1] SMP PTI
     CPU: 43 PID: 673 Comm: kworker/u609:10 Not tainted 4.16.0-rc4+ #1
     [..]
     RIP: 0010:nd_region_register_namespaces+0xd67/0x13c0 [libnvdimm]
     [..]
     Call Trace:
      ? devres_add+0x2f/0x40
      ? devm_kmalloc+0x52/0x60
      ? nd_region_activate+0x9c/0x320 [libnvdimm]
      nd_region_probe+0x94/0x260 [libnvdimm]
      ? kernfs_add_one+0xe4/0x130
      nvdimm_bus_probe+0x63/0x100 [libnvdimm]
    
    Switch to using the nvdimm device directly.
    
    Fixes: 0e3b0d123c8f ("libnvdimm, namespace: allow multiple pmem...")
    Cc: <stable@vger.kernel.org>
    Reported-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45980ba59916718a8d8e9a4c1a27a4ac187e515c
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Apr 6 11:25:38 2018 -0700

    libnvdimm, dimm: fix dpa reservation vs uninitialized label area
    
    commit c31898c8c711f2bbbcaebe802a55827e288d875a upstream.
    
    At initialization time the 'dimm' driver caches a copy of the memory
    device's label area and reserves address space for each of the
    namespaces defined.
    
    However, as can be seen below, the reservation occurs even when the
    index blocks are invalid:
    
     nvdimm nmem0: nvdimm_init_config_data: len: 131072 rc: 0
     nvdimm nmem0: config data size: 131072
     nvdimm nmem0: __nd_label_validate: nsindex0 labelsize 1 invalid
     nvdimm nmem0: __nd_label_validate: nsindex1 labelsize 1 invalid
     nvdimm nmem0: : pmem-6025e505: 0x1000000000 @ 0xf50000000 reserve <-- bad
    
    Gate dpa reservation on the presence of valid index blocks.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 4a826c83db4e ("libnvdimm: namespace indices: read and validate")
    Reported-by: Krzysztof Rusocki <krzysztof.rusocki@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a43d8e0ee79d748ad98129254a7969abf88f11b6
Author: Chris Chiu <chiu@endlessm.com>
Date:   Tue Mar 20 15:36:40 2018 +0800

    tpm: self test failure should not cause suspend to fail
    
    commit 0803d7befa15cab5717d667a97a66214d2a4c083 upstream.
    
    The Acer Acer Veriton X4110G has a TPM device detected as:
      tpm_tis 00:0b: 1.2 TPM (device-id 0xFE, rev-id 71)
    
    After the first S3 suspend, the following error appears during resume:
      tpm tpm0: A TPM error(38) occurred continue selftest
    
    Any following S3 suspend attempts will now fail with this error:
      tpm tpm0: Error (38) sending savestate before suspend
      PM: Device 00:0b failed to suspend: error 38
    
    Error 38 is TPM_ERR_INVALID_POSTINIT which means the TPM is
    not in the correct state. This indicates that the platform BIOS
    is not sending the usual TPM_Startup command during S3 resume.
    >From this point onwards, all TPM commands will fail.
    
    The same issue was previously reported on Foxconn 6150BK8MC and
    Sony Vaio TX3.
    
    The platform behaviour seems broken here, but we should not break
    suspend/resume because of this.
    
    When the unexpected TPM state is encountered, set a flag to skip the
    affected TPM_SaveState command on later suspends.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chris Chiu <chiu@endlessm.com>
    Signed-off-by: Daniel Drake <drake@endlessm.com>
    Link: http://lkml.kernel.org/r/CAB4CAwfSCvj1cudi+MWaB5g2Z67d9DwY1o475YOZD64ma23UiQ@mail.gmail.com
    Link: https://lkml.org/lkml/2011/3/28/192
    Link: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=591031
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1edd3b19f302c85ed6fe11e753eda674c100524
Author: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
Date:   Tue Apr 3 15:54:02 2018 +0200

    cxl: Fix possible deadlock when processing page faults from cxllib
    
    commit ad7b4e8022b9864c075fe71e1328b1d25cad82f6 upstream.
    
    cxllib_handle_fault() is called by an external driver when it needs to
    have the host resolve page faults for a buffer. The buffer can cover
    several pages and VMAs. The function iterates over all the pages used
    by the buffer, based on the page size of the VMA.
    
    To ensure some stability while processing the faults, the thread T1
    grabs the mm->mmap_sem semaphore with read access (R1). However, when
    processing a page fault for a single page, one of the underlying
    functions, copro_handle_mm_fault(), also grabs the same semaphore with
    read access (R2). So the thread T1 takes the semaphore twice.
    
    If another thread T2 tries to access the semaphore in write mode W1
    (say, because it wants to allocate memory and calls 'brk'), then that
    thread T2 will have to wait because there's a reader (R1). If the
    thread T1 is processing a new page at that time, it won't get an
    automatic grant at R2, because there's now a writer thread
    waiting (T2). And we have a deadlock.
    
    The timeline is:
    1. thread T1 owns the semaphore with read access R1
    2. thread T2 requests write access W1 and waits
    3. thread T1 requests read access R2 and waits
    
    The fix is for the thread T1 to release the semaphore R1 once it got
    the information it needs from the current VMA. The address space/VMAs
    could evolve while T1 iterates over the full buffer, but in the
    unlikely case where T1 misses a page, the external driver will raise a
    new page fault when retrying the memory access.
    
    Fixes: 3ced8d730063 ("cxl: Export library to support IBM XSL")
    Cc: stable@vger.kernel.org # 4.13+
    Signed-off-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 156b45ed22073e7b8aa753abb8ff4462e1cbe47f
Author: Maxime Jayat <maxime.jayat@mobile-devices.fr>
Date:   Thu Feb 22 12:39:55 2018 +0100

    dmaengine: at_xdmac: fix rare residue corruption
    
    commit c5637476bbf9bb86c7f0413b8f4822a73d8d2d07 upstream.
    
    Despite the efforts made to correctly read the NDA and CUBC registers,
    the order in which the registers are read could sometimes lead to an
    inconsistent state.
    
    Re-using the timeline from the comments, this following timing of
    registers reads could lead to reading NDA with value "@desc2" and
    CUBC with value "MAX desc1":
    
     INITD --------                    ------------
                  |____________________|
           _______________________  _______________
     NDA       @desc2             \/   @desc3
           _______________________/\_______________
           __________  ___________  _______________
     CUBC       0    \/ MAX desc1 \/  MAX desc2
           __________/\___________/\_______________
            |  |          |  |
    Events:(1)(2)        (3)(4)
    
    (1) check_nda = @desc2
    (2) initd = 1
    (3) cur_ubc = MAX desc1
    (4) cur_nda = @desc2
    
    This is allowed by the condition ((check_nda == cur_nda) && initd),
    despite cur_ubc and cur_nda being in the precise state we don't want.
    
    This error leads to incorrect residue computation.
    
    Fix it by inversing the order in which CUBC and INITD are read. This
    makes sure that NDA and CUBC are always read together either _before_
    INITD goes to 0 or _after_ it is back at 1.
    The case where NDA is read before INITD is at 0 and CUBC is read after
    INITD is back at 1 will be rejected by check_nda and cur_nda being
    different.
    
    Fixes: 53398f488821 ("dmaengine: at_xdmac: fix residue corruption")
    Cc: stable@vger.kernel.org
    Signed-off-by: Maxime Jayat <maxime.jayat@mobile-devices.fr>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e99ca1ee070dea0fcda75c127cab1b8b85189224
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Feb 12 09:50:25 2018 -0800

    IB/srp: Fix completion vector assignment algorithm
    
    commit 3a148896b24adf8688dc0c59af54531931677a40 upstream.
    
    Ensure that cv_end is equal to ibdev->num_comp_vectors for the
    NUMA node with the highest index. This patch improves spreading
    of RDMA channels over completion vectors and thereby improves
    performance, especially on systems with only a single NUMA node.
    This patch drops support for the comp_vector login parameter by
    ignoring the value of that parameter since I have not found a
    good way to combine support for that parameter and automatic
    spreading of RDMA channels over completion vectors.
    
    Fixes: d92c0da71a35 ("IB/srp: Add multichannel support")
    Reported-by: Alexander Schmid <alex@modula-shop-systems.de>
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Alexander Schmid <alex@modula-shop-systems.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe71b03e698325f5361d187fc7534b202f2a8404
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Feb 23 14:09:24 2018 -0800

    IB/srp: Fix srp_abort()
    
    commit e68088e78d82920632eba112b968e49d588d02a2 upstream.
    
    Before commit e494f6a72839 ("[SCSI] improved eh timeout handler") it
    did not really matter whether or not abort handlers like srp_abort()
    called .scsi_done() when returning another value than SUCCESS. Since
    that commit however this matters. Hence only call .scsi_done() when
    returning SUCCESS.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bb5579128e65d8c4334f90ca47cfe49e90187f7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 2 22:41:43 2018 +0200

    ALSA: pcm: Fix UAF at PCM release via PCM timer access
    
    commit a820ccbe21e8ce8e86c39cd1d3bc8c7d1cbb949b upstream.
    
    The PCM runtime object is created and freed dynamically at PCM stream
    open / close time.  This is tracked via substream->runtime, and it's
    cleared at snd_pcm_detach_substream().
    
    The runtime object assignment is protected by PCM open_mutex, so for
    all PCM operations, it's safely handled.  However, each PCM substream
    provides also an ALSA timer interface, and user-space can access to
    this while closing a PCM substream.  This may eventually lead to a
    UAF, as snd_pcm_timer_resolution() tries to access the runtime while
    clearing it in other side.
    
    Fortunately, it's the only concurrent access from the PCM timer, and
    it merely reads runtime->timer_resolution field.  So, we can avoid the
    race by reordering kfree() and wrapping the substream->runtime
    clearance with the corresponding timer lock.
    
    Reported-by: syzbot+8e62ff4e07aa2ce87826@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3b14a66e14bb6b248dcab04c294aceacff68c0b
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Mar 1 14:00:29 2018 -0800

    RDMA/rxe: Fix an out-of-bounds read
    
    commit a6544a624c3ff92a64e4aca3931fa064607bd3da upstream.
    
    This patch avoids that KASAN reports the following when the SRP initiator
    calls srp_post_send():
    
    ==================================================================
    BUG: KASAN: stack-out-of-bounds in rxe_post_send+0x5c4/0x980 [rdma_rxe]
    Read of size 8 at addr ffff880066606e30 by task 02-mq/1074
    
    CPU: 2 PID: 1074 Comm: 02-mq Not tainted 4.16.0-rc3-dbg+ #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    Call Trace:
    dump_stack+0x85/0xc7
    print_address_description+0x65/0x270
    kasan_report+0x231/0x350
    rxe_post_send+0x5c4/0x980 [rdma_rxe]
    srp_post_send.isra.16+0x149/0x190 [ib_srp]
    srp_queuecommand+0x94d/0x1670 [ib_srp]
    scsi_dispatch_cmd+0x1c2/0x550 [scsi_mod]
    scsi_queue_rq+0x843/0xa70 [scsi_mod]
    blk_mq_dispatch_rq_list+0x143/0xac0
    blk_mq_do_dispatch_ctx+0x1c5/0x260
    blk_mq_sched_dispatch_requests+0x2bf/0x2f0
    __blk_mq_run_hw_queue+0xdb/0x160
    __blk_mq_delay_run_hw_queue+0xba/0x100
    blk_mq_run_hw_queue+0xf2/0x190
    blk_mq_sched_insert_request+0x163/0x2f0
    blk_execute_rq+0xb0/0x130
    scsi_execute+0x14e/0x260 [scsi_mod]
    scsi_probe_and_add_lun+0x366/0x13d0 [scsi_mod]
    __scsi_scan_target+0x18a/0x810 [scsi_mod]
    scsi_scan_target+0x11e/0x130 [scsi_mod]
    srp_create_target+0x1522/0x19e0 [ib_srp]
    kernfs_fop_write+0x180/0x210
    __vfs_write+0xb1/0x2e0
    vfs_write+0xf6/0x250
    SyS_write+0x99/0x110
    do_syscall_64+0xee/0x2b0
    entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    The buggy address belongs to the page:
    page:ffffea0001998180 count:0 mapcount:0 mapping:0000000000000000 index:0x0
    flags: 0x4000000000000000()
    raw: 4000000000000000 0000000000000000 0000000000000000 00000000ffffffff
    raw: dead000000000100 dead000000000200 0000000000000000 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
    ffff880066606d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1
    ffff880066606d80: f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 f2 f2 f2 f2 f2
    >ffff880066606e00: f2 00 00 00 00 00 f2 f2 f2 f3 f3 f3 f3 00 00 00
                                        ^
    ffff880066606e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    ffff880066606f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    ==================================================================
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Moni Shoua <monis@mellanox.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28ce82e3c8b116f09ea539e15bbb9f0f09f5fa32
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Mar 13 15:29:24 2018 +0200

    RDMA/mlx5: Protect from NULL pointer derefence
    
    commit 4289861d88d6c7b5e4c8cc7fe2ad6cdf0cdfc366 upstream.
    
    The mlx5_ib_alloc_implicit_mr() can fail to acquire pages
    and the returned mr pointer won't be valid. Ensure that it
    is not error prior to access.
    
    Cc: <stable@vger.kernel.org> # 4.10
    Fixes: 81713d3788d2 ("IB/mlx5: Add implicit MR support")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b140d94688707e42b75cad3b020563a706101abe
Author: Roland Dreier <roland@purestorage.com>
Date:   Tue Apr 3 15:33:01 2018 -0700

    RDMA/ucma: Don't allow setting RDMA_OPTION_IB_PATH without an RDMA device
    
    commit 8435168d50e66fa5eae01852769d20a36f9e5e83 upstream.
    
    Check to make sure that ctx->cm_id->device is set before we use it.
    Otherwise userspace can trigger a NULL dereference by doing
    RDMA_USER_CM_CMD_SET_OPTION on an ID that is not bound to a device.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: <syzbot+a67bc93e14682d92fc2f@syzkaller.appspotmail.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79fbd052ea63e26ee739dbdd32b45bf124eb7923
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Aug 13 22:45:08 2017 -0400

    dm crypt: limit the number of allocated pages
    
    commit 5059353df86e2573ccd9d43fd9d9396dcec47ca2 upstream.
    
    dm-crypt consumes an excessive amount memory when the user attempts to
    zero a dm-crypt device with "blkdiscard -z". The command "blkdiscard -z"
    calls the BLKZEROOUT ioctl, it goes to the function __blkdev_issue_zeroout,
    __blkdev_issue_zeroout sends a large amount of write bios that contain
    the zero page as their payload.
    
    For each incoming page, dm-crypt allocates another page that holds the
    encrypted data, so when processing "blkdiscard -z", dm-crypt tries to
    allocate the amount of memory that is equal to the size of the device.
    This can trigger OOM killer or cause system crash.
    
    Fix this by limiting the amount of memory that dm-crypt allocates to 2%
    of total system memory. This limit is system-wide and is divided by the
    number of active dm-crypt devices and each device receives an equal
    share.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7793f2a2ac85f912690a69f7964907e31731ae7
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Mar 30 20:04:11 2018 -0400

    ext4: add extra checks to ext4_xattr_block_get()
    
    commit 54dd0e0a1b255f115f8647fc6fb93273251b01b9 upstream.
    
    Add explicit checks in ext4_xattr_block_get() just in case the
    e_value_offs and e_value_size fields in the the xattr block are
    corrupted in memory after the buffer_verified bit is set on the xattr
    block.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9703952178f1412b7a74e170298d58e96c53152f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Mar 30 20:00:56 2018 -0400

    ext4: add bounds checking to ext4_xattr_find_entry()
    
    commit 9496005d6ca4cf8f5ee8f828165a8956872dc59d upstream.
    
    Add some paranoia checks to make sure we don't stray beyond the end of
    the valid memory region containing ext4 xattr entries while we are
    scanning for a match.
    
    Also rename the function to xattr_find_entry() since it is static and
    thus only used in fs/ext4/xattr.c
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 598e04ae2fc402c364d3f0ee76599783149f573f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Mar 30 15:42:25 2018 -0400

    ext4: move call to ext4_error() into ext4_xattr_check_block()
    
    commit de05ca8526796c7e9f7c7282b7f89a818af19818 upstream.
    
    Refactor the call to EXT4_ERROR_INODE() into ext4_xattr_check_block().
    This simplifies the code, and fixes a problem where not all callers of
    ext4_xattr_check_block() were not resulting in ext4_error() getting
    called when the xattr block is corrupted.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2623d8166563a19bee0cc8292e4ec951a42a6da
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 29 22:10:35 2018 -0400

    ext4: don't allow r/w mounts if metadata blocks overlap the superblock
    
    commit 18db4b4e6fc31eda838dd1c1296d67dbcb3dc957 upstream.
    
    If some metadata block, such as an allocation bitmap, overlaps the
    superblock, it's very likely that if the file system is mounted
    read/write, the results will not be pretty.  So disallow r/w mounts
    for file systems corrupted in this particular way.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26dbb30c58ffb85bc015bd5e58831483d50f7d18
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 29 22:10:31 2018 -0400

    ext4: always initialize the crc32c checksum driver
    
    commit a45403b51582a87872927a3e0fc0a389c26867f1 upstream.
    
    The extended attribute code now uses the crc32c checksum for hashing
    purposes, so we should just always always initialize it.  We also want
    to prevent NULL pointer dereferences if one of the metadata checksum
    features is enabled after the file sytsem is originally mounted.
    
    This issue has been assigned CVE-2018-1094.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199183
    https://bugzilla.redhat.com/show_bug.cgi?id=1560788
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e0e94683f8449f4e83b4b563b80eb9c76b9e18f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 29 21:56:09 2018 -0400

    ext4: fail ext4_iget for root directory if unallocated
    
    commit 8e4b5eae5decd9dfe5a4ee369c22028f90ab4c44 upstream.
    
    If the root directory has an i_links_count of zero, then when the file
    system is mounted, then when ext4_fill_super() notices the problem and
    tries to call iput() the root directory in the error return path,
    ext4_evict_inode() will try to free the inode on disk, before all of
    the file system structures are set up, and this will result in an OOPS
    caused by a NULL pointer dereference.
    
    This issue has been assigned CVE-2018-1092.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199179
    https://bugzilla.redhat.com/show_bug.cgi?id=1560777
    
    Reported-by: Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a57eb14b740e6175aff8b8941bec628403992dfa
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Mar 29 14:31:42 2018 -0400

    ext4: limit xattr size to INT_MAX
    
    commit ce3fd194fcc6fbdc00ce095a852f22df97baa401 upstream.
    
    ext4 isn't validating the sizes of xattrs where the value of the xattr
    is stored in an external inode.  This is problematic because
    ->e_value_size is a u32, but ext4_xattr_get() returns an int.  A very
    large size is misinterpreted as an error code, which ext4_get_acl()
    translates into a bogus ERR_PTR() for which IS_ERR() returns false,
    causing a crash.
    
    Fix this by validating that all xattrs are <= INT_MAX bytes.
    
    This issue has been assigned CVE-2018-1095.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199185
    https://bugzilla.redhat.com/show_bug.cgi?id=1560793
    
    Reported-by: Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Fixes: e50e5129f384 ("ext4: xattr-in-inode support")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5058b70d2118ee0304a2f3124946c4089b06abde
Author: Eryu Guan <guaneryu@gmail.com>
Date:   Thu Mar 22 11:41:25 2018 -0400

    ext4: protect i_disksize update by i_data_sem in direct write path
    
    commit 73fdad00b208b139cf43f3163fbc0f67e4c6047c upstream.
    
    i_disksize update should be protected by i_data_sem, by either taking
    the lock explicitly or by using ext4_update_i_disksize() helper. But the
    i_disksize updates in ext4_direct_IO_write() are not protected at all,
    which may be racing with i_disksize updates in writeback path in
    delalloc buffer write path.
    
    This is found by code inspection, and I didn't hit any i_disksize
    corruption due to this bug. Thanks to Jan Kara for catching this bug and
    suggesting the fix!
    
    Reported-by: Jan Kara <jack@suse.cz>
    Suggested-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Eryu Guan <guaneryu@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd499f55384969d53c825fa7c3a0ae21c972c945
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Feb 19 14:16:47 2018 -0500

    ext4: don't update checksum of new initialized bitmaps
    
    commit 044e6e3d74a3d7103a0c8a9305dfd94d64000660 upstream.
    
    When reading the inode or block allocation bitmap, if the bitmap needs
    to be initialized, do not update the checksum in the block group
    descriptor.  That's because we're not set up to journal those changes.
    Instead, just set the verified bit on the bitmap block, so that it's
    not necessary to validate the checksum.
    
    When a block or inode allocation actually happens, at that point the
    checksum will be calculated, and update of the bg descriptor block
    will be properly journalled.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73297f13a003b97e37a5648bbbecd45323cc0e24
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Feb 18 23:45:18 2018 -0500

    ext4: pass -ESHUTDOWN code to jbd2 layer
    
    commit fb7c02445c497943e7296cd3deee04422b63acb8 upstream.
    
    Previously the jbd2 layer assumed that a file system check would be
    required after a journal abort.  In the case of the deliberate file
    system shutdown, this should not be necessary.  Allow the jbd2 layer
    to distinguish between these two cases by using the ESHUTDOWN errno.
    
    Also add proper locking to __journal_abort_soft().
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09439481998aefbe1bd6ae067079e738ba4a7a3f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Feb 18 23:16:28 2018 -0500

    ext4: eliminate sleep from shutdown ioctl
    
    commit a6d9946bb925293fda9f5ed6d33d8580b001f006 upstream.
    
    The msleep() when processing EXT4_GOING_FLAGS_NOLOGFLUSH was a hack to
    avoid some races (that are now fixed), but in fact it introduced its
    own race.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ebcea25968219b4ed9b27e5708e2b96c1718d86
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Feb 18 22:07:36 2018 -0500

    ext4: shutdown should not prevent get_write_access
    
    commit 576d18ed60f5465110087c5e0eb1010de13e374d upstream.
    
    The ext4 forced shutdown flag needs to prevent new handles from being
    started, but it needs to allow existing handles to complete.  So the
    forced shutdown flag should not force ext4_journal_get_write_access to
    fail.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 867175f944857448b83cad1370e532a1ffda9e47
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Feb 19 12:22:53 2018 -0500

    jbd2: if the journal is aborted then don't allow update of the log tail
    
    commit 85e0c4e89c1b864e763c4e3bb15d0b6d501ad5d9 upstream.
    
    This updates the jbd2 superblock unnecessarily, and on an abort we
    shouldn't truncate the log.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6151a5a45fc42271493c8805b533d8349954b130
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Mar 21 12:42:25 2018 -0400

    block: use 32-bit blk_status_t on Alpha
    
    commit 6e2fb22103b99c26ae30a46512abe75526d8e4c9 upstream.
    
    Early alpha processors cannot write a single byte or word; they read 8
    bytes, modify the value in registers and write back 8 bytes.
    
    The type blk_status_t is defined as one byte, it is often written
    asynchronously by I/O completion routines, this asynchronous modification
    can corrupt content of nearby bytes if these nearby bytes can be written
    simultaneously by another CPU.
    
    - one example of such corruption is the structure dm_io where
      "blk_status_t status" is written by an asynchronous completion routine
      and "atomic_t io_count" is modified synchronously
    - another example is the structure dm_buffer where "unsigned hold_count"
      is modified synchronously from process context and "blk_status_t
      write_error" is modified asynchronously from bio completion routine
    
    This patch fixes the bug by changing the type blk_status_t to 32 bits if
    we are on Alpha and if we are compiling for a processor that doesn't have
    the byte-word-extension.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org      # 4.13+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7044bf9ef6c87cb49c71a9aa1f219e6a1cce5148
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Feb 19 14:20:46 2018 +0100

    extcon: intel-cht-wc: Set direction and drv flags for V5 boost GPIO
    
    commit ad49aee401dd1997ec71360df6e51a91ad3cf516 upstream.
    
    Sometimes (firmware bug?) the V5 boost GPIO is not configured as output
    by the BIOS, leading to the 5V boost convertor being permanently on,
    
    Explicitly set the direction and drv flags rather then inheriting them
    from the firmware to fix this.
    
    Fixes: 585cb239f4de ("extcon: intel-cht-wc: Disable external 5v boost ...")
    Cc: stable@vger.kernel.org
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0afd9d1cb5aeb116edaaf967321444b588849cf
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Feb 25 18:21:33 2017 -0400

    random: use a tighter cap in credit_entropy_bits_safe()
    
    commit 9f886f4d1d292442b2f22a0a33321eae821bde40 upstream.
    
    This fixes a harmless UBSAN where root could potentially end up
    causing an overflow while bumping the entropy_total field (which is
    ignored once the entropy pool has been initialized, and this generally
    is completed during the boot sequence).
    
    This is marginal for the stable kernel series, but it's a really
    trivial patch, and it fixes UBSAN warning that might cause security
    folks to get overly excited for no reason.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reported-by: Chen Feng <puck.chen@hisilicon.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 439e8b2dcab1963d077af193ebdabb586b8e14be
Author: Aniruddha Banerjee <aniruddhab@nvidia.com>
Date:   Wed Mar 28 19:12:00 2018 +0530

    irqchip/gic: Take lock when updating irq type
    
    commit aa08192a254d362a4d5317647a81de6996961aef upstream.
    
    Most MMIO GIC register accesses use a 1-hot bit scheme that
    avoids requiring any form of locking. This isn't true for the
    GICD_ICFGRn registers, which require a RMW sequence.
    
    Unfortunately, we seem to be missing a lock for these particular
    accesses, which could result in a race condition if changing the
    trigger type on any two interrupts within the same set of 16
    interrupts (and thus controlled by the same CFGR register).
    
    Introduce a private lock in the GIC common comde for this
    particular case, making it cover both GIC implementations
    in one go.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aniruddha Banerjee <aniruddhab@nvidia.com>
    [maz: updated changelog]
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2836377857633db5a7d93106fad90a642e296eec
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Fri Mar 9 13:17:01 2018 +0300

    thunderbolt: Prevent crash when ICM firmware is not running
    
    commit ea9d7bb798900096f26c585957d6ad9c532417e6 upstream.
    
    On Lenovo ThinkPad Yoga 370 (and possibly some other Lenovo models as
    well) the Thunderbolt host controller sometimes comes up in such way
    that the ICM firmware is not running properly. This is most likely an
    issue in BIOS/firmware but as side-effect driver crashes the kernel due
    to NULL pointer dereference:
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000980
      IP: pci_write_config_dword+0x5/0x20
      Call Trace:
       pcie2cio_write+0x3b/0x70 [thunderbolt]
       icm_driver_ready+0x168/0x260 [thunderbolt]
       ? tb_ctl_start+0x50/0x70 [thunderbolt]
       tb_domain_add+0x73/0xf0 [thunderbolt]
       nhi_probe+0x182/0x300 [thunderbolt]
       local_pci_probe+0x42/0xa0
       ? pci_match_device+0xd9/0x100
       pci_device_probe+0x146/0x1b0
       driver_probe_device+0x315/0x480
       ...
    
    Instead of crashing update the driver to bail out gracefully if we
    encounter such situation.
    
    Fixes: f67cf491175a ("thunderbolt: Add support for Internal Connection Manager (ICM)")
    Reported-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Yehezkel Bernat <yehezkel.bernat@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ae695df59e1c3519b36d31671ac01697b606240
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Tue Dec 19 12:44:56 2017 +0300

    thunderbolt: Resume control channel after hibernation image is created
    
    commit f2a659f7d8d5da803836583aa16df06bdf324252 upstream.
    
    The driver misses implementation of PM hook that undoes what
    ->freeze_noirq() does after the hibernation image is created. This means
    the control channel is not resumed properly and the Thunderbolt bus
    becomes useless in later stages of hibernation (when the image is stored
    or if the operation fails).
    
    Fix this by pointing ->thaw_noirq to driver nhi_resume_noirq(). This
    makes sure the control channel is resumed properly.
    
    Fixes: 23dd5bb49d98 ("thunderbolt: Add suspend/hibernate support")
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a4a66c504fbfae4428ac7a3784ee5017ae28682
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Jan 18 20:27:47 2018 +0300

    thunderbolt: Serialize PCIe tunnel creation with PCI rescan
    
    commit a03e828915c00ed0ea5aa40647c81472cfa7a984 upstream.
    
    We need to make sure a new PCIe tunnel is not created in a middle of
    previous PCI rescan because otherwise the rescan code might find too
    much and fail to reconfigure devices properly. This is important when
    native PCIe hotplug is used. In BIOS assisted hotplug there should be no
    such issue.
    
    Fixes: f67cf491175a ("thunderbolt: Add support for Internal Connection Manager (ICM)")
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f40f6ee22b91c913b2891c26943eb37bfceb50a
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Fri Nov 24 17:51:12 2017 +0300

    thunderbolt: Wait a bit longer for ICM to authenticate the active NVM
    
    commit e4be8c9b6a512e274cb6bbac4ac869d73880a8b3 upstream.
    
    Sometimes during cold boot ICM has not yet authenticated the active NVM
    image leading to timeout and failing the driver probe. Allow ICM to take
    some more time and increase the timeout to 3 seconds before we give up.
    
    While there fix icm_firmware_init() to return the real error code
    without overwriting it with -ENODEV.
    
    Fixes: f67cf491175a ("thunderbolt: Add support for Internal Connection Manager (ICM)")
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73b969f6a92062a5c1547541a2608d1755a7954b
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Tue Mar 27 12:04:04 2018 +0100

    ASoC: topology: Fix kcontrol name string handling
    
    commit 267e2c6fd7ca3d4076d20f9d52d49dc91addfe9d upstream.
    
    Fix the topology kcontrol string handling so that string pointer
    references are strdup()ed instead of being copied. This fixes issues
    with kcontrol templates on the stack or ones that are freed. Remember
    and free the strings too when topology is unloaded.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e23ef535073ef8e1684f7b6e967b55dab055bd0
Author: James Kelly <jamespeterkelly@gmail.com>
Date:   Mon Mar 19 21:29:50 2018 +1100

    ASoC: ssm2602: Replace reg_default_raw with reg_default
    
    commit a01df75ce737951ad13a08d101306e88c3f57cb2 upstream.
    
    SSM2602 driver is broken on recent kernels (at least
    since 4.9). User space applications such as amixer or
    alsamixer get EIO when attempting to access codec
    controls via the relevant IOCTLs.
    
    Root cause of these failures is the regcache_hw_init
    function in drivers/base/regmap/regcache.c, which
    prevents regmap cache initalization from the
    reg_defaults_raw element of the regmap_config structure
    when registers are write only. It also disables the
    regmap cache entirely when all registers are write only
    or volatile as is the case for the SSM2602 driver.
    
    Using the reg_defaults element of the regmap_config
    structure rather than the reg_defaults_raw element to
    initalize the regmap cache avoids the logic in the
    regcache_hw_init function entirely. It also makes this
    driver consistent with other ASoC codec drivers, as
    this driver was the ONLY codec driver that used the
    reg_defaults_raw element to initalize the cache.
    
    Tested on Digilent Zybo Z7 development board which has
    a SSM2603 codec chip connected to a Xilinx Zynq SoC.
    
    Signed-off-by: James Kelly <jamespeterkelly@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b3d2e7a34095edb8ff104961bdc403f8d36e405
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 9 02:07:59 2018 +0800

    soc: mediatek: fix the mistaken pointer accessed when subdomains are added
    
    commit 73ce2ce129783813e1ebc37d2c757fe5e0fab1ef upstream.
    
    Fix the pointer to struct scp_subdomian not being moved forward
    when each sub-domain is expected to be iteratively added through
    pm_genpd_add_subdomain call.
    
    Cc: stable@vger.kernel.org
    Fixes: 53fddb1a66dd ("soc: mediatek: reduce code duplication of scpsys_probe across all SoCs")
    Reported-by: Weiyi Lu <weiyi.lu@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f306336cdee80f830c46a768c08daf90a31e972
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Mon Jan 8 10:41:41 2018 +0800

    HID: core: Fix size as type u32
    
    commit 6de0b13cc0b4ba10e98a9263d7a83b940720b77a upstream.
    
    When size is negative, calling memset will make segment fault.
    Declare the size as type u32 to keep memset safe.
    
    size in struct hid_report is unsigned, fix return type of
    hid_report_len to u32.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f671ac7a5317edddcc8d4593bae3ea1dde5334ed
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Sat Feb 3 23:57:15 2018 +0800

    HID: Fix hid_report_len usage
    
    commit 3064a03b94e60388f0955fcc29f3e8a978d28f75 upstream.
    
    Follow the change of return type u32 of hid_report_len,
    fix all the types of variables those get the return value of
    hid_report_len to u32, and all other code already uses u32.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25b6ee378dc43fff21e778f1a21cb7e6dffa6e1a
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Apr 10 21:49:33 2018 +1000

    powerpc/powernv: Fix OPAL NVRAM driver OPAL_BUSY loops
    
    commit 3b8070335f751aac9f1526ae2e012e6f5b8b0f21 upstream.
    
    The OPAL NVRAM driver does not sleep in case it gets OPAL_BUSY or
    OPAL_BUSY_EVENT from firmware, which causes large scheduling
    latencies, and various lockup errors to trigger (again, BMC reboot
    can cause it).
    
    Fix this by converting it to the standard form OPAL_BUSY loop that
    sleeps.
    
    Fixes: 628daa8d5abf ("powerpc/powernv: Add RTC and NVRAM support plus RTAS fallbacks")
    Depends-on: 34dd25de9fe3 ("powerpc/powernv: define a standard delay for OPAL_BUSY type retry loops")
    Cc: stable@vger.kernel.org # v3.2+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c854f2e1ff08edd35988acd733c6b1ad0e95e8b
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Apr 10 21:49:31 2018 +1000

    powerpc/powernv: define a standard delay for OPAL_BUSY type retry loops
    
    commit 34dd25de9fe3f60bfdb31b473bf04b28262d0896 upstream.
    
    This is the start of an effort to tidy up and standardise all the
    delays. Existing loops have a range of delay/sleep periods from 1ms
    to 20ms, and some have no delay. They all loop forever except rtc,
    which times out after 10 retries, and that uses 10ms delays. So use
    10ms as our standard delay. The OPAL maintainer agrees 10ms is a
    reasonable starting point.
    
    The idea is to use the same recipe everywhere, once this is proven to
    work then it will be documented as an OPAL API standard. Then both
    firmware and OS can agree, and if a particular call needs something
    else, then that can be documented with reasoning.
    
    This is not the end-all of this effort, it's just a relatively easy
    change that fixes some existing high latency delays. There should be
    provision for standardising timeouts and/or interruptible loops where
    possible, so non-fatal firmware errors don't cause hangs.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a55d2c9d42f9212740911f4c8d4c3de12154ef42
Author: Thiago Jung Bauermann <bauerman@linux.vnet.ibm.com>
Date:   Thu Mar 29 16:05:43 2018 -0300

    powerpc/kexec_file: Fix error code when trying to load kdump kernel
    
    commit bf8a1abc3ddbd6e9a8312ea7d96e5dd89c140f18 upstream.
    
    kexec_file_load() on powerpc doesn't support kdump kernels yet, so it
    returns -ENOTSUPP in that case.
    
    I've recently learned that this errno is internal to the kernel and
    isn't supposed to be exposed to userspace. Therefore, change to
    -EOPNOTSUPP which is defined in an uapi header.
    
    This does indeed make kexec-tools happier. Before the patch, on
    ppc64le:
    
      # ~bauermann/src/kexec-tools/build/sbin/kexec -s -p /boot/vmlinuz
      kexec_file_load failed: Unknown error 524
    
    After the patch:
    
      # ~bauermann/src/kexec-tools/build/sbin/kexec -s -p /boot/vmlinuz
      kexec_file_load failed: Operation not supported
    
    Fixes: a0458284f062 ("powerpc: Add support code for kexec_file_load()")
    Cc: stable@vger.kernel.org # v4.10+
    Reported-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Thiago Jung Bauermann <bauerman@linux.vnet.ibm.com>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Reviewed-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa99a3470e917a7a83b0648b53d2e1a5d71f3b29
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Wed Jan 17 17:52:24 2018 +0530

    powerpc/kprobes: Fix call trace due to incorrect preempt count
    
    commit e6e133c47e6bd4d5dac05b35d06634a8e5648615 upstream.
    
    Michael Ellerman reported the following call trace when running
    ftracetest:
    
      BUG: using __this_cpu_write() in preemptible [00000000] code: ftracetest/6178
      caller is opt_pre_handler+0xc4/0x110
      CPU: 1 PID: 6178 Comm: ftracetest Not tainted 4.15.0-rc7-gcc6x-gb2cd1df #1
      Call Trace:
      [c0000000f9ec39c0] [c000000000ac4304] dump_stack+0xb4/0x100 (unreliable)
      [c0000000f9ec3a00] [c00000000061159c] check_preemption_disabled+0x15c/0x170
      [c0000000f9ec3a90] [c000000000217e84] opt_pre_handler+0xc4/0x110
      [c0000000f9ec3af0] [c00000000004cf68] optimized_callback+0x148/0x170
      [c0000000f9ec3b40] [c00000000004d954] optinsn_slot+0xec/0x10000
      [c0000000f9ec3e30] [c00000000004bae0] kretprobe_trampoline+0x0/0x10
    
    This is showing up since OPTPROBES is now enabled with CONFIG_PREEMPT.
    
    trampoline_probe_handler() considers itself to be a special kprobe
    handler for kretprobes. In doing so, it expects to be called from
    kprobe_handler() on a trap, and re-enables preemption before returning a
    non-zero return value so as to suppress any subsequent processing of the
    trap by the kprobe_handler().
    
    However, with optprobes, we don't deal with special handlers (we ignore
    the return code) and just try to re-enable preemption causing the above
    trace.
    
    To address this, modify trampoline_probe_handler() to not be special.
    The only additional processing done in kprobe_handler() is to emulate
    the instruction (in this case, a 'nop'). We adjust the value of
    regs->nip for the purpose and delegate the job of re-enabling
    preemption and resetting current kprobe to the probe handlers
    (kprobe_handler() or optimized_callback()).
    
    Fixes: 8a2d71a3f273 ("powerpc/kprobes: Disable preemption before invoking probe handler for optprobes")
    Cc: stable@vger.kernel.org # v4.15+
    Reported-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3df05fcf89114e9011b899dcb7437a50a978bac1
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Mar 22 20:41:46 2018 +1000

    powerpc/64: Fix smp_wmb barrier definition use use lwsync consistently
    
    commit 0bfdf598900fd62869659f360d3387ed80eb71cf upstream.
    
    asm/barrier.h is not always included after asm/synch.h, which meant
    it was missing __SUBARCH_HAS_LWSYNC, so in some files smp_wmb() would
    be eieio when it should be lwsync. kernel/time/hrtimer.c is one case.
    
    __SUBARCH_HAS_LWSYNC is only used in one place, so just fold it in
    to where it's used. Previously with my small simulator config, 377
    instances of eieio in the tree. After this patch there are 55.
    
    Fixes: 46d075be585e ("powerpc: Optimise smp_wmb")
    Cc: stable@vger.kernel.org # v2.6.29+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1699bd03742d89732f2d15eb8e4a544cfe4da1fa
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu Feb 16 16:03:39 2017 +1100

    powerpc/64: Call H_REGISTER_PROC_TBL when running as a HPT guest on POWER9
    
    commit dbfcf3cb9c681aa0c5d0bb46068f98d5b1823dd3 upstream.
    
    On POWER9, since commit cc3d2940133d ("powerpc/64: Enable use of radix
    MMU under hypervisor on POWER9", 2017-01-30), we set both the radix and
    HPT bits in the client-architecture-support (CAS) vector, which tells
    the hypervisor that we can do either radix or HPT.  According to PAPR,
    if we use this combination we are promising to do a H_REGISTER_PROC_TBL
    hcall later on to let the hypervisor know whether we are doing radix
    or HPT.  We currently do this call if we are doing radix but not if
    we are doing HPT.  If the hypervisor is able to support both radix
    and HPT guests, it would be entitled to defer allocation of the HPT
    until the H_REGISTER_PROC_TBL call, and to fail any attempts to create
    HPTEs until the H_REGISTER_PROC_TBL call.  Thus we need to do a
    H_REGISTER_PROC_TBL call when we are doing HPT; otherwise we may
    crash at boot time.
    
    This adds the code to call H_REGISTER_PROC_TBL in this case, before
    we attempt to create any HPT entries using H_ENTER.
    
    Fixes: cc3d2940133d ("powerpc/64: Enable use of radix MMU under hypervisor on POWER9")
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Reviewed-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4eff13a278079ab219a182a354e8571e0bdc468
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Apr 5 15:50:49 2018 +1000

    powerpc/64s: Fix dt_cpu_ftrs to have restore_cpu clear unwanted LPCR bits
    
    commit a57ac411832384eb93df4bfed2bf644c4089720e upstream.
    
    Presently the dt_cpu_ftrs restore_cpu will only add bits to the LPCR
    for secondaries, but some bits must be removed (e.g., UPRT for HPT).
    Not clearing these bits on secondaries causes checkstops when booting
    with disable_radix.
    
    restore_cpu can not just set LPCR, because it is also called by the
    idle wakeup code which relies on opal_slw_set_reg to restore the value
    of LPCR, at least on P8 which does not save LPCR to stack in the idle
    code.
    
    Fix this by including a mask of bits to clear from LPCR as well, which
    is used by restore_cpu.
    
    This is a little messy now, but it's a minimal fix that can be
    backported.  Longer term, the idle SPR save/restore code can be
    reworked to completely avoid calls to restore_cpu, then restore_cpu
    would be able to unconditionally set LPCR to match boot processor
    environment.
    
    Fixes: 5a61ef74f269f ("powerpc/64s: Support new device tree binding for discovering CPU features")
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3baeca67d85e698201fca324368c3a704667e80
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Mar 27 01:02:33 2018 +1000

    powerpc/powernv: Handle unknown OPAL errors in opal_nvram_write()
    
    commit 741de617661794246f84a21a02fc5e327bffc9ad upstream.
    
    opal_nvram_write currently just assumes success if it encounters an
    error other than OPAL_BUSY or OPAL_BUSY_EVENT. Have it return -EIO
    on other errors instead.
    
    Fixes: 628daa8d5abf ("powerpc/powernv: Add RTC and NVRAM support plus RTAS fallbacks")
    Cc: stable@vger.kernel.org # v3.2+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Acked-by: Stewart Smith <stewart@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 693b03f9b185f14dded38a934c744a60e99363c3
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Mon Feb 19 11:11:13 2018 -0600

    CIFS: fix sha512 check in cifs_crypto_secmech_release
    
    commit 70e80655f58e17a2e38e577e1b4fa7a8c99619a0 upstream.
    
    It seems this is a copy-paste error and that the proper variable to use
    in this particular case is _sha512_ instead of _md5_.
    
    Addresses-Coverity-ID: 1465358 ("Copy-paste error")
    Fixes: 1c6614d229e7 ("CIFS: add sha512 secmech")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a55d160b730da05a7ea82c6c78b8e8d012a74cc
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Fri Feb 16 19:19:28 2018 +0100

    CIFS: add sha512 secmech
    
    commit 5fcd7f3f966f37f3f9a215af4cc1597fe338d0d5 upstream.
    
    * prepare for SMB3.11 pre-auth integrity
    * enable sha512 when SMB311 is enabled in Kconfig
    * add sha512 as a soft dependency
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0910e2804f2ecb081bd87c26cdb8f4ff502c39f2
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Fri Feb 16 19:19:27 2018 +0100

    CIFS: refactor crypto shash/sdesc allocation&free
    
    commit 82fb82be05585426405667dd5f0510aa953ba439 upstream.
    
    shash and sdesc and always allocated and freed together.
    * abstract this in new functions cifs_alloc_hash() and cifs_free_hash().
    * make smb2/3 crypto allocation independent from each other.
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd5cc02cbef93b2391d295d81f16706fdc01bcea
Author: Jean Delvare <jdelvare@suse.de>
Date:   Wed Apr 11 18:05:34 2018 +0200

    i2c: i801: Restore configuration at shutdown
    
    commit f7f6d915a10f7f2bce17e3b1b7d3376562395a28 upstream.
    
    On some systems, the BIOS expects certain SMBus register values to
    match the hardware defaults. Restore these configuration registers at
    shutdown time to avoid confusing the BIOS. This avoids hard-locking
    such systems upon reboot.
    
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Tested-by: Jason Andryuk <jandryuk@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44ff2389a840c76434c943544f24909783366d90
Author: Jean Delvare <jdelvare@suse.de>
Date:   Wed Apr 11 18:03:31 2018 +0200

    i2c: i801: Save register SMBSLVCMD value only once
    
    commit a086bb8317303dd74725dca933b9b29575159382 upstream.
    
    Saving the original value of register SMBSLVCMD in
    i801_enable_host_notify() doesn't work, because this function is
    called not only at probe time but also at resume time. Do it in
    i801_probe() instead, so that the saved value is not overwritten at
    resume time.
    
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Fixes: 22e94bd6779e ("i2c: i801: store and restore the SLVCMD register at load and unload")
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Tested-by: Jason Andryuk <jandryuk@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@vger.kernel.org      # v4.10+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6b3a5c87d45ba6af5597879c98024de1ff0f327
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Mon Jan 8 10:41:40 2018 +0800

    HID: i2c-hid: fix size check and type usage
    
    commit ac75a041048b8c1f7418e27621ca5efda8571043 upstream.
    
    When convert char array with signed int, if the inbuf[x] is negative then
    upper bits will be set to 1. Fix this by using u8 instead of char.
    
    ret_size has to be at least 3, hid_input_report use it after minus 2 bytes.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70dbed63a96d1f5ebc779c87f00340d352b3b0c5
Author: Steve French <stfrench@microsoft.com>
Date:   Sat Mar 31 18:13:38 2018 -0500

    smb3: Fix root directory when server returns inode number of zero
    
    commit 7ea884c77e5c97f1e0a1a422d961d27f78ca2745 upstream.
    
    Some servers return inode number zero for the root directory, which
    causes ls to display incorrect data (missing "." and "..").
    
    If the server returns zero for the inode number of the root directory,
    fake an inode number for it.
    
    Signed-off-by: Steve French <smfrench@gmail.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf895b2a637dc4bbe818cabf1fa2c91a2f346dfd
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Tue Feb 20 12:45:21 2018 +1100

    fix smb3-encryption breakage when CONFIG_DEBUG_SG=y
    
    commit 262916bc69faf90104aa784d55e10760a4199594 upstream.
    
    We can not use the standard sg_set_buf() fucntion since when
    CONFIG_DEBUG_SG=y this adds a check that will BUG_ON for cifs.ko
    when we pass it an object from the stack.
    
    Create a new wrapper smb2_sg_set_buf() which avoids doing that particular check
    and use it for smb3 encryption instead.
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdbd795405203c22c063690f00cf79a23389f1df
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Tue Feb 13 15:42:30 2018 +1100

    cifs: fix memory leak in SMB2_open()
    
    commit b7a73c84eb96dabd6bb8e9d7c56f796d83efee8e upstream.
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59d3a952e4f3d505f9444e86db069081323351c7
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Mon Mar 26 13:14:47 2018 +0300

    usb: dwc3: gadget: never call ->complete() from ->ep_queue()
    
    commit c91815b596245fd7da349ecc43c8def670d2269e upstream.
    
    This is a requirement which has always existed but, somehow, wasn't
    reflected in the documentation and problems weren't found until now
    when Tuba Yavuz found a possible deadlock happening between dwc3 and
    f_hid. She described the situation as follows:
    
    spin_lock_irqsave(&hidg->write_spinlock, flags); // first acquire
    /* we our function has been disabled by host */
    if (!hidg->req) {
            free_ep_req(hidg->in_ep, hidg->req);
            goto try_again;
    }
    
    [...]
    
    status = usb_ep_queue(hidg->in_ep, hidg->req, GFP_ATOMIC);
    =>
            [...]
            => usb_gadget_giveback_request
                    =>
                    f_hidg_req_complete
                            =>
                            spin_lock_irqsave(&hidg->write_spinlock, flags); // second acquire
    
    Note that this happens because dwc3 would call ->complete() on a
    failed usb_ep_queue() due to failed Start Transfer command. This is,
    anyway, a theoretical situation because dwc3 currently uses "No
    Response Update Transfer" command for Bulk and Interrupt endpoints.
    
    It's still good to make this case impossible to happen even if the "No
    Reponse Update Transfer" command is changed.
    
    Reported-by: Tuba Yavuz <tuba@ece.ufl.edu>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 093dcb929c8e8344ce148ba11e0313ad1890553d
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Mon Mar 19 13:07:35 2018 -0700

    usb: dwc3: pci: Properly cleanup resource
    
    commit cabdf83dadfb3d83eec31e0f0638a92dbd716435 upstream.
    
    Platform device is allocated before adding resources. Make sure to
    properly cleanup on error case.
    
    Cc: <stable@vger.kernel.org>
    Fixes: f1c7e7108109 ("usb: dwc3: convert to pcim_enable_device()")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30e9a1cddc4d4ef881515ff128c2c707ef81573d
Author: Roger Quadros <rogerq@ti.com>
Date:   Tue Feb 27 12:54:37 2018 +0200

    usb: dwc3: prevent setting PRTCAP to OTG from debugfs
    
    commit daaecc6541d014dca073473ec8a4120c0babbeb4 upstream.
    
    We don't support PRTCAP == OTG yet, so prevent user from
    setting it via debugfs.
    
    Fixes: 41ce1456e1db ("usb: dwc3: core: make dwc3_set_mode() work properly")
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7f9187a110e58c0b9988db972a0631d06c7633f
Author: Zhengjun Xing <zhengjun.xing@linux.intel.com>
Date:   Wed Mar 21 13:29:42 2018 +0800

    USB:fix USB3 devices behind USB3 hubs not resuming at hibernate thaw
    
    commit 64627388b50158fd24d6ad88132525b95a5ef573 upstream.
    
    USB3 hubs don't support global suspend.
    
    USB3 specification 10.10, Enhanced SuperSpeed hubs only support selective
    suspend and resume, they do not support global suspend/resume where the
    hub downstream facing ports states are not affected.
    
    When system enters hibernation it first enters freeze process where only
    the root hub enters suspend, usb_port_suspend() is not called for other
    devices, and suspend status flags are not set for them. Other devices are
    expected to suspend globally. Some external USB3 hubs will suspend the
    downstream facing port at global suspend. These devices won't be resumed
    at thaw as the suspend status flag is not set.
    
    A USB3 removable hard disk connected through a USB3 hub that won't resume
    at thaw will fail to synchronize SCSI cache, return “cmd cmplt err -71”
    error, and needs a 60 seconds timeout which causing system hang for 60s
    before the USB host reset the port for the USB3 removable hard disk to
    recover.
    
    Fix this by always calling usb_port_suspend() during freeze for USB3
    devices.
    
    Signed-off-by: Zhengjun Xing <zhengjun.xing@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96dc465173a1f790e805246206aee3d18770f614
Author: Yavuz, Tuba <tuba@ece.ufl.edu>
Date:   Fri Mar 23 17:00:38 2018 +0000

    USB: gadget: f_midi: fixing a possible double-free in f_midi
    
    commit 7fafcfdf6377b18b2a726ea554d6e593ba44349f upstream.
    
    It looks like there is a possibility of a double-free vulnerability on an
    error path of the f_midi_set_alt function in the f_midi driver. If the
    path is feasible then free_ep_req gets called twice:
    
             req->complete = f_midi_complete;
             err = usb_ep_queue(midi->out_ep, req, GFP_ATOMIC);
                => ...
                 usb_gadget_giveback_request
                   =>
                     f_midi_complete (CALLBACK)
                       (inside f_midi_complete, for various cases of status)
                       free_ep_req(ep, req); // first kfree
             if (err) {
                     ERROR(midi, "%s: couldn't enqueue request: %d\n",
                                 midi->out_ep->name, err);
                     free_ep_req(midi->out_ep, req); // second kfree
                     return err;
             }
    
    The double-free possibility was introduced with commit ad0d1a058eac
    ("usb: gadget: f_midi: fix leak on failed to enqueue out requests").
    
    Found by MOXCAFE tool.
    
    Signed-off-by: Tuba Yavuz <tuba@ece.ufl.edu>
    Fixes: ad0d1a058eac ("usb: gadget: f_midi: fix leak on failed to enqueue out requests")
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2b540651d8c1938e07493e18e781e3fc609728c
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Feb 12 13:55:23 2018 +0300

    ACPI / hotplug / PCI: Check presence of slot itself in get_slot_status()
    
    commit 13d3047c81505cc0fb9bdae7810676e70523c8bf upstream.
    
    Mike Lothian reported that plugging in a USB-C device does not work
    properly in his Dell Alienware system.  This system has an Intel Alpine
    Ridge Thunderbolt controller providing USB-C functionality.  In these
    systems the USB controller (xHCI) is hotplugged whenever a device is
    connected to the port using ACPI-based hotplug.
    
    The ACPI description of the root port in question is as follows:
    
      Device (RP01)
      {
          Name (_ADR, 0x001C0000)
    
          Device (PXSX)
          {
              Name (_ADR, 0x02)
    
              Method (_RMV, 0, NotSerialized)
              {
                  // ...
              }
          }
    
    Here _ADR 0x02 means device 0, function 2 on the bus under root port (RP01)
    but that seems to be incorrect because device 0 is the upstream port of the
    Alpine Ridge PCIe switch and it has no functions other than 0 (the bridge
    itself).  When we get ACPI Notify() to the root port resulting from
    connecting a USB-C device, Linux tries to read PCI_VENDOR_ID from device 0,
    function 2 which of course always returns 0xffffffff because there is no
    such function and we never find the device.
    
    In Windows this works fine.
    
    Now, since we get ACPI Notify() to the root port and not to the PXSX device
    we should actually start our scan from there as well and not from the
    non-existent PXSX device.  Fix this by checking presence of the slot itself
    (function 0) if we fail to do that otherwise.
    
    While there use pci_bus_read_dev_vendor_id() in get_slot_status(), which is
    the recommended way to read Device and Vendor IDs of devices on PCI buses.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=198557
    Reported-by: Mike Lothian <mike@fireburn.co.uk>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6e98387b2e994e68d3b7a6abd5c6ceef62ad5e3
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Mar 19 18:01:45 2018 +0100

    ACPI / video: Add quirk to force acpi-video backlight on Samsung 670Z5E
    
    commit bbf038618a24d72e2efc19146ef421bb1e1eda1a upstream.
    
    Just like many other Samsung models, the 670Z5E needs to use the acpi-video
    backlight interface rather then the native one for backlight control to
    work, add a quirk for this.
    
    Buglink: https://bugzilla.redhat.com/show_bug.cgi?id=1557060
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dac1fe2719d6aa894768848fecf6a2837356534
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Feb 8 10:23:44 2018 +0300

    regmap: Fix reversed bounds check in regmap_raw_write()
    
    commit f00e71091ab92eba52122332586c6ecaa9cd1a56 upstream.
    
    We're supposed to be checking that "val_len" is not too large but
    instead we check if it is smaller than the max.
    
    The only function affected would be regmap_i2c_smbus_i2c_write() in
    drivers/base/regmap/regmap-i2c.c.  Strangely that function has its own
    limit check which returns an error if (count >= I2C_SMBUS_BLOCK_MAX) so
    it doesn't look like it has ever been able to do anything except return
    an error.
    
    Fixes: c335931ed9d2 ("regmap: Add raw_write/read checks for max_raw_write/read sizes")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 666d1084c13d919c1ace5cbcd594eb355e8c4686
Author: Jason Andryuk <jandryuk@gmail.com>
Date:   Wed Feb 28 07:23:23 2018 -0500

    xen-netfront: Fix hang on device removal
    
    commit c2d2e6738a209f0f9dffa2dc8e7292fc45360d61 upstream.
    
    A toolstack may delete the vif frontend and backend xenstore entries
    while xen-netfront is in the removal code path.  In that case, the
    checks for xenbus_read_driver_state would return XenbusStateUnknown, and
    xennet_remove would hang indefinitely.  This hang prevents system
    shutdown.
    
    xennet_remove must be able to handle XenbusStateUnknown, and
    netback_changed must also wake up the wake_queue for that state as well.
    
    Fixes: 5b5971df3bc2 ("xen-netfront: remove warning when unloading module")
    
    Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
    Cc: Eduardo Otubo <otubo@redhat.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7b00dc28275a1883749d319081484e3306dc265
Author: Jason Andryuk <jandryuk@gmail.com>
Date:   Mon Mar 19 12:58:04 2018 -0400

    x86/xen: Delay get_cpu_cap until stack canary is established
    
    commit 36104cb9012a82e73c32a3b709257766b16bcd1d upstream.
    
    Commit 2cc42bac1c79 ("x86-64/Xen: eliminate W+X mappings") introduced a
    call to get_cpu_cap, which is fstack-protected.  This is works on x86-64
    as commit 4f277295e54c ("x86/xen: init %gs very early to avoid page
    faults with stack protector") ensures the stack protector is configured,
    but it it did not cover x86-32.
    
    Delay calling get_cpu_cap until after xen_setup_gdt has initialized the
    stack canary.  Without this, a 32bit PV machine crashes early
    in boot.
    (XEN) Domain 0 (vcpu#0) crashed on cpu#0:
    (XEN) ----[ Xen-4.6.6-xc  x86_64  debug=n  Tainted:    C ]----
    (XEN) CPU:    0
    (XEN) RIP:    e019:[<00000000c10362f8>]
    
    And the PV kernel IP corresponds to init_scattered_cpuid_features
       0xc10362f8 <+24>:    mov    %gs:0x14,%eax
    
    Fixes 2cc42bac1c79 ("x86-64/Xen: eliminate W+X mappings")
    
    Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcd054c733cf702f192e01fa7e78596cc07df771
Author: Kieran Bingham <kieran.bingham@ideasonboard.com>
Date:   Mon Mar 26 09:29:17 2018 -0400

    media: vsp1: Fix BRx conditional path in WPF
    
    commit 639fa43d59e5a41ca8c55592cd5c1021fea2ab83 upstream.
    
    When a BRx is provided by a pipeline, the WPF must determine the master
    layer. Currently the condition to check this identifies pipe->bru ||
    pipe->num_inputs > 1.
    
    The code then moves on to dereference pipe->bru, thus the check fails
    static analysers on the possibility that pipe->num_inputs could be
    greater than 1 without pipe->bru being set.
    
    The reality is that the pipeline must have a BRx to support more than
    one input, thus this could never cause a fault - however it also
    identifies that the num_inputs > 1 check is redundant.
    
    Remove the redundant check - and always configure the master layer
    appropriately when we have a BRx configured in our pipeline.
    
    Fixes: 6134148f6098 ("v4l: vsp1: Add support for the BRS entity")
    
    Cc: stable@vger.kernel.org
    Suggested-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fb28b075f80136b17c8aebb2c006a3502c628db
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Mon Feb 12 06:45:32 2018 -0500

    media: vivid: check if the cec_adapter is valid
    
    commit ed356f110403f6acc64dcbbbfdc38662ab9b06c2 upstream.
    
    If CEC is not enabled for the vivid driver, then the adap pointer is NULL
    and 'adap->phys_addr' will fail.
    
    Cc: <stable@vger.kernel.org>      # for v4.12 and up
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9864a1ef86791897b0f6c215001deae472c05635
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sun Feb 25 06:55:32 2018 -0500

    media: atomisp_fops.c: disable atomisp_compat_ioctl32
    
    commit 57e6b6f2303e596a6493078b53be14b789e7b79f upstream.
    
    The atomisp_compat_ioctl32() code has problems. This patch disables the
    compat_ioctl32 support until those issues have been fixed.
    
    Contact Sakari or me for more details.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.12 and up
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9629964f032ca5289a371da9f1288ad2655fb6b7
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Tue Mar 20 10:27:50 2018 +0200

    spi: Fix unregistration of controller with fixed SPI bus number
    
    commit 613bd1ea387bb48b7c9a71a0bb451ac15cfbbc01 upstream.
    
    Commit 9b61e302210e (spi: Pick spi bus number from Linux idr or spi alias)
    ceased to unregister SPI buses with fixed bus numbers. Moreover this is
    visible only if CONFIG_SPI_DEBUG=y is set or when trying to re-register
    the same SPI controller.
    
    rmmod spi_pxa2xx_platform (with CONFIG_SPI_DEBUG=y):
    [   26.788362] spi_master spi1: attempting to delete unregistered controller [spi1]
    
    modprobe spi_pxa2xx_platform:
    [   37.883137] sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:19.0/pxa2xx-spi.12/spi_master/spi1'
    [   37.894984] CPU: 1 PID: 1467 Comm: modprobe Not tainted 4.16.0-rc4+ #21
    [   37.902384] Call Trace:
    ...
    [   38.122680] kobject_add_internal failed for spi1 with -EEXIST, don't try to register things with the same name in the same directory.
    [   38.136154] WARNING: CPU: 1 PID: 1467 at lib/kobject.c:238 kobject_add_internal+0x2a5/0x2f0
    ...
    [   38.513817] pxa2xx-spi pxa2xx-spi.12: problem registering spi master
    [   38.521036] pxa2xx-spi: probe of pxa2xx-spi.12 failed with error -17
    
    Fix this by not returning immediately from spi_unregister_controller() if
    idr_find() doesn't find controller with given ID/bus number. It finds
    only those controllers that were registered with dynamic SPI bus
    numbers. Only conditional cleanup between dynamic and fixed bus numbers
    is to remove allocated IDR.
    
    Fixes: 9b61e302210e (spi: Pick spi bus number from Linux idr or spi alias)
    Cc: stable@vger.kernel.org
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4ff723039dcacff20d834f6fb710ec18074b677
Author: Maxime Chevallier <maxime.chevallier@bootlin.com>
Date:   Fri Mar 2 15:55:09 2018 +0100

    spi: Fix scatterlist elements size in spi_map_buf
    
    commit ce99319a182fe766be67f96338386f3ec73e321c upstream.
    
    When SPI transfers can be offloaded using DMA, the SPI core need to
    build a scatterlist to make sure that the buffer to be transferred is
    dma-able.
    
    This patch fixes the scatterlist entry size computation in the case
    where the maximum acceptable scatterlist entry supported by the DMA
    controller is less than PAGE_SIZE, when the buffer is vmalloced.
    
    For each entry, the actual size is given by the minimum between the
    desc_len (which is the max buffer size supported by the DMA controller)
    and the remaining buffer length until we cross a page boundary.
    
    Fixes: 65598c13fd66 ("spi: Fix per-page mapping of unaligned vmalloc-ed buffer")
    Signed-off-by: Maxime Chevallier <maxime.chevallier@bootlin.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit faddb17685f9f0507dcd28a3a4af3c63d5765407
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Tue Feb 27 12:25:07 2018 +0200

    spi: atmel: init FIFOs before spi enable
    
    commit 9581329eff9db72ab4fbb46a594fd7fdda3c51b0 upstream.
    
    The datasheet recommends initializing FIFOs before
    SPI enable. If we do not do it like this, there may be
    a strange behavior. We noticed that DMA does not work properly
    with FIFOs if we do not clear them beforehand or enable them
    before SPIEN.
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38866e866121454b5c6e2fc7eefe82fec97e810e
Author: Santiago Esteban <Santiago.Esteban@microchip.com>
Date:   Thu Jan 18 15:38:47 2018 +0100

    ARM: dts: at91: sama5d4: fix pinctrl compatible string
    
    commit 9a06757dcc8509c162ac00488c8c82fc98e04227 upstream.
    
    The compatible string is incorrect. Add atmel,sama5d3-pinctrl since
    it's the appropriate compatible string. Remove the
    atmel,at91rm9200-pinctrl compatible string, this fallback is
    useless, there are too many changes.
    
    Signed-off-by: Santiago Esteban <Santiago.Esteban@microchip.com>
    Signed-off-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Cc: stable@vger.kernel.org #v3.18
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c57b7e1a150e840004b628d2eae3c3d3385fd25a
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Mar 2 17:07:42 2018 +0100

    ARM: dts: exynos: Fix IOMMU support for GScaler devices on Exynos5250
    
    commit 6f4870753f29edf7dc39444246f9e39987b8b158 upstream.
    
    The proper name for the property, which assign given device to IOMMU is
    'iommus', not 'iommu'. Fix incorrect name and let all GScaler devices
    to be properly handled when IOMMU support is enabled.
    
    Reported-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: 6cbfdd73a94f ("ARM: dts: add sysmmu nodes for exynos5250")
    Cc: <stable@vger.kernel.org> # v4.8+
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 838ea3802e9dbe96ac1c3faa03a93a399d09f8ff
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Tue Mar 13 16:20:05 2018 +0100

    ARM: dts: at91: at91sam9g25: fix mux-mask pinctrl property
    
    commit e8fd0adf105e132fd84545997bbef3d5edc2c9c1 upstream.
    
    There are only 19 PIOB pins having primary names PB0-PB18. Not all of them
    have a 'C' function. So the pinctrl property mask ends up being the same as the
    other SoC of the at91sam9x5 series.
    
    Reported-by: Marek Sieranski <marek.sieranski@microchip.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: <stable@vger.kernel.org> # v3.8+
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 958d6e41888f8659db70418a8203c16d021833cc
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 23 18:16:26 2018 +0800

    arm: dts: mt7623: fix USB initialization fails on bananapi-r2
    
    commit 0629a01920c0f8a3f825361b24863d760610884a upstream.
    
    Fix that USB initialization fails as below runtime log is present during
    booting on bananapi-r2 board by adding missing regulators the USB device
    requires. Current regulators USB device uses are being updated with the
    correct ones to reflect real configurations which are all from fixed
    regulators rather than MT6323 one's output.
    
    xhci-mtk 1a1c0000.usb: 1a1c0000.usb supply vbus not found, using dummy regulator
    xhci-mtk 1a240000.usb: 1a240000.usb supply vbus not found, using dummy regulator
    
    Cc: stable@vger.kernel.org
    Fixes: f4ff257cd160 ("arm: dts: mt7623: add support for Bananapi R2 (BPI-R2) board")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    [mb: update kernel log in commit message]
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2106cd34635e5aa95d759e414e38d5fd216ce8ec
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Mar 21 10:45:05 2018 +0100

    ARM: EXYNOS: Fix coupled CPU idle freeze on Exynos4210
    
    commit a7480dbcf983c31d8111f864c848e8a75116a87d upstream.
    
    Since commit 04c8b0f82c7d ("irqchip/gic: Make locking a BL_SWITCHER only
    feature") coupled CPU idle freezes from time to time on Exynos4210. Later
    commit 313c8c16ee62 ("PM / CPU: replace raw_notifier with atomic_notifier")
    changed the context in which the CPU idle code is executed, what results
    in fully reproducible freeze all the time. However, almost the same coupled
    CPU idle code works fine on Exynos3250 regardless of the changes made in
    the mentioned commits.
    
    It turned out that the IPI call used on Exynos4210 is conflicting with the
    change done in the first mentioned commit in GIC. Fix this by using the
    same code path as for Exynos3250, instead of the IPI call for
    synchronization with second CPU core, call dsb_sev() directly.
    
    Tested on Exynos4210-based Trats and Origen boards.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    CC: <stable@vger.kernel.org> # v4.13+
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 326e61ce9761d71098c7001e51dafec067f50424
Author: David Lechner <david@lechnology.com>
Date:   Sun Dec 3 16:04:53 2017 -0600

    ARM: dts: da850-lego-ev3: Fix battery voltage gpio
    
    commit c5a88cd2e1c508868922bafa0a5c3365986b98e5 upstream.
    
    This fixes the battery voltage monitoring gpio-hog settings.
    
    When the gpio is low, it turns off the battery voltage to the ADC chip.
    However, this needs to be on all of the time so that we can monitor
    battery voltage.
    
    Also, there was a typo that prevented pinmuxing from working correctly.
    
    Signed-off-by: David Lechner <david@lechnology.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f1a2803e4c2163c013816f7b41c85b91c9124c9
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Mar 23 14:57:09 2018 +0000

    KVM: arm/arm64: vgic-its: Fix potential overrun in vgic_copy_lpi_list
    
    commit 7d8b44c54e0c7c8f688e3a07f17e6083f849f01f upstream.
    
    vgic_copy_lpi_list() parses the LPI list and picks LPIs targeting
    a given vcpu. We allocate the array containing the intids before taking
    the lpi_list_lock, which means we can have an array size that is not
    equal to the number of LPIs.
    
    This is particularly obvious when looking at the path coming from
    vgic_enable_lpis, which is not a command, and thus can run in parallel
    with commands:
    
    vcpu 0:                                        vcpu 1:
    vgic_enable_lpis
      its_sync_lpi_pending_table
        vgic_copy_lpi_list
          intids = kmalloc_array(irq_count)
                                                   MAPI(lpi targeting vcpu 0)
          list_for_each_entry(lpi_list_head)
            intids[i++] = irq->intid;
    
    At that stage, we will happily overrun the intids array. Boo. An easy
    fix is is to break once the array is full. The MAPI command will update
    the config anyway, and we won't miss a thing. We also make sure that
    lpi_list_count is read exactly once, so that further updates of that
    value will not affect the array bound check.
    
    Cc: stable@vger.kernel.org
    Fixes: ccb1d791ab9e ("KVM: arm64: vgic-its: Fix pending table sync")
    Reviewed-by: Andre Przywara <andre.przywara@arm.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fdbba69cb3424b8ff470da40980d4edfec19769
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Fri Mar 2 14:44:36 2018 +0100

    ARM64: dts: meson: reduce odroid-c2 eMMC maximum rate
    
    commit c04ffa71ff491220cac28f55237c9aad379a8656 upstream.
    
    Different modules maybe installed by the user on the eMMC connector
    of the odroid-c2. While the red modules are working without an issue,
    it seems some black modules (apparently Samsung based) are having
    issue at 200MHz
    
    While the tuning algorithm introduced in v4.14 enables high speed modes
    on every other tested designs, it seems a problem remains for this
    particular combination of board and eMMC module.
    
    Lowering the maximum frequency of the eMMC on this board until we can
    figure out a better solution.
    
    Fixes: d341ca88eead ("mmc: meson-gx: rework tuning function")
    Suggested-by: Ellie Reeves <ellierevves@gmail.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7732495c599c0b98ff17097637f239e1ef108e69
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Mon Mar 26 13:14:46 2018 +0300

    usb: gadget: udc: core: update usb_ep_queue() documentation
    
    commit eaa358c7790338d83bb6a31258bdc077de120414 upstream.
    
    Mention that ->complete() should never be called from within
    usb_ep_queue().
    
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aea6c0b4aee80367bd091ebd2132b6db533c1ed1
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Jan 19 17:25:41 2018 +0800

    phy: allwinner: sun4i-usb: poll vbus changes on A23/A33 when driving VBUS
    
    commit d7119224bfe6e8efbf821a52db7da9530d790f07 upstream.
    
    The AXP223 PMIC, like the AXP221, does not generate VBUS change
    interrupts when N_VBUSEN is used to drive VBUS for the OTG port
    on the board.
    
    This was not noticed until recently, as most A23/A33 boards use
    a GPIO pin that does not support interrupts for OTG ID detection.
    This forces the driver to use polling. However the A33-OlinuXino
    uses a pin that does support interrupts, so the driver uses them.
    However the VBUS interrupt never fires, and the driver never gets
    to update the VBUS status. This results in musb timing out waiting
    for VBUS to rise.
    
    This was worked around for the AXP221 by resorting to polling
    changes in commit 91d96f06a760 ("phy-sun4i-usb: Add workaround for
    missing Vbus det interrupts on A31"). This patch adds the A23 and
    A33 to the list of SoCs that need the workaround.
    
    Fixes: fc1f45ed3043 ("phy-sun4i-usb: Add support for the usb-phys on the
                          sun8i-a33 SoC")
    Fixes: 123dfdbcfaf5 ("phy-sun4i-usb: Add support for the usb-phys on the
                          sun8i-a23 SoC")
    Cc: <stable@vger.kernel.org> # 4.3.x: 68dbc2ce77bb phy-sun4i-usb:
                    Use of_match_node to get model specific config data
    Cc: <stable@vger.kernel.org> # 4.3.x: 5cf700ac9d50 phy: phy-sun4i-usb:
                    Fix optional gpios failing probe
    Cc: <stable@vger.kernel.org> # 4.3.x: 04e59a0211ff phy-sun4i-usb:
                    Fix irq free conditions to match request conditions
    Cc: <stable@vger.kernel.org> # 4.3.x: 91d96f06a760 phy-sun4i-usb:
                    Add workaround for missing Vbus det interrupts on A31
    Cc: <stable@vger.kernel.org> # 4.3.x
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>

commit 334d8f201ef5f9c32ab26fbc868952ffb86dc175
Author: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date:   Thu Mar 29 10:48:28 2018 -0500

    usb: musb: gadget: misplaced out of bounds check
    
    commit af6f8529098aeb0e56a68671b450cf74e7a64fcd upstream.
    
    musb->endpoints[] has array size MUSB_C_NUM_EPS.
    We must check array bounds before accessing the array and not afterwards.
    
    Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20eaa393fcd32fe48f2e13ce649e90a48a446fe6
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Fri Apr 13 15:35:38 2018 -0700

    mm, slab: reschedule cache_reap() on the same CPU
    
    commit a9f2a846f0503e7d729f552e3ccfe2279010fe94 upstream.
    
    cache_reap() is initially scheduled in start_cpu_timer() via
    schedule_delayed_work_on(). But then the next iterations are scheduled
    via schedule_delayed_work(), i.e. using WORK_CPU_UNBOUND.
    
    Thus since commit ef557180447f ("workqueue: schedule WORK_CPU_UNBOUND
    work on wq_unbound_cpumask CPUs") there is no guarantee the future
    iterations will run on the originally intended cpu, although it's still
    preferred.  I was able to demonstrate this with
    /sys/module/workqueue/parameters/debug_force_rr_cpu.  IIUC, it may also
    happen due to migrating timers in nohz context.  As a result, some cpu's
    would be calling cache_reap() more frequently and others never.
    
    This patch uses schedule_delayed_work_on() with the current cpu when
    scheduling the next iteration.
    
    Link: http://lkml.kernel.org/r/20180411070007.32225-1-vbabka@suse.cz
    Fixes: ef557180447f ("workqueue: schedule WORK_CPU_UNBOUND work on wq_unbound_cpumask CPUs")
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Pekka Enberg <penberg@kernel.org>
    Acked-by: Christoph Lameter <cl@linux.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 703eee654360679660c813a591176c7bf4016254
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Apr 13 15:35:30 2018 -0700

    ipc/shm: fix use-after-free of shm file via remap_file_pages()
    
    commit 3f05317d9889ab75c7190dcd39491d2a97921984 upstream.
    
    syzbot reported a use-after-free of shm_file_data(file)->file->f_op in
    shm_get_unmapped_area(), called via sys_remap_file_pages().
    
    Unfortunately it couldn't generate a reproducer, but I found a bug which
    I think caused it.  When remap_file_pages() is passed a full System V
    shared memory segment, the memory is first unmapped, then a new map is
    created using the ->vm_file.  Between these steps, the shm ID can be
    removed and reused for a new shm segment.  But, shm_mmap() only checks
    whether the ID is currently valid before calling the underlying file's
    ->mmap(); it doesn't check whether it was reused.  Thus it can use the
    wrong underlying file, one that was already freed.
    
    Fix this by making the "outer" shm file (the one that gets put in
    ->vm_file) hold a reference to the real shm file, and by making
    __shm_open() require that the file associated with the shm ID matches
    the one associated with the "outer" file.
    
    Taking the reference to the real shm file is needed to fully solve the
    problem, since otherwise sfd->file could point to a freed file, which
    then could be reallocated for the reused shm ID, causing the wrong shm
    segment to be mapped (and without the required permission checks).
    
    Commit 1ac0b6dec656 ("ipc/shm: handle removed segments gracefully in
    shm_mmap()") almost fixed this bug, but it didn't go far enough because
    it didn't consider the case where the shm ID is reused.
    
    The following program usually reproduces this bug:
    
            #include <stdlib.h>
            #include <sys/shm.h>
            #include <sys/syscall.h>
            #include <unistd.h>
    
            int main()
            {
                    int is_parent = (fork() != 0);
                    srand(getpid());
                    for (;;) {
                            int id = shmget(0xF00F, 4096, IPC_CREAT|0700);
                            if (is_parent) {
                                    void *addr = shmat(id, NULL, 0);
                                    usleep(rand() % 50);
                                    while (!syscall(__NR_remap_file_pages, addr, 4096, 0, 0, 0));
                            } else {
                                    usleep(rand() % 50);
                                    shmctl(id, IPC_RMID, NULL);
                            }
                    }
            }
    
    It causes the following NULL pointer dereference due to a 'struct file'
    being used while it's being freed.  (I couldn't actually get a KASAN
    use-after-free splat like in the syzbot report.  But I think it's
    possible with this bug; it would just take a more extraordinary race...)
    
            BUG: unable to handle kernel NULL pointer dereference at 0000000000000058
            PGD 0 P4D 0
            Oops: 0000 [#1] SMP NOPTI
            CPU: 9 PID: 258 Comm: syz_ipc Not tainted 4.16.0-05140-gf8cf2f16a7c95 #189
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
            RIP: 0010:d_inode include/linux/dcache.h:519 [inline]
            RIP: 0010:touch_atime+0x25/0xd0 fs/inode.c:1724
            [...]
            Call Trace:
             file_accessed include/linux/fs.h:2063 [inline]
             shmem_mmap+0x25/0x40 mm/shmem.c:2149
             call_mmap include/linux/fs.h:1789 [inline]
             shm_mmap+0x34/0x80 ipc/shm.c:465
             call_mmap include/linux/fs.h:1789 [inline]
             mmap_region+0x309/0x5b0 mm/mmap.c:1712
             do_mmap+0x294/0x4a0 mm/mmap.c:1483
             do_mmap_pgoff include/linux/mm.h:2235 [inline]
             SYSC_remap_file_pages mm/mmap.c:2853 [inline]
             SyS_remap_file_pages+0x232/0x310 mm/mmap.c:2769
             do_syscall_64+0x64/0x1a0 arch/x86/entry/common.c:287
             entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    [ebiggers@google.com: add comment]
      Link: http://lkml.kernel.org/r/20180410192850.235835-1-ebiggers3@gmail.com
    Link: http://lkml.kernel.org/r/20180409043039.28915-1-ebiggers3@gmail.com
    Reported-by: syzbot+d11f321e7f1923157eac80aa990b446596f46439@syzkaller.appspotmail.com
    Fixes: c8d78c1823f4 ("mm: replace remap_file_pages() syscall with emulation")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Davidlohr Bueso <dbueso@suse.de>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: "Eric W . Biederman" <ebiederm@xmission.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c25ef6220facd0ec7df7f3af0a5f5f24ab9659e8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 13 15:35:13 2018 -0700

    resource: fix integer overflow at reallocation
    
    commit 60bb83b81169820c691fbfa33a6a4aef32aa4b0b upstream.
    
    We've got a bug report indicating a kernel panic at booting on an x86-32
    system, and it turned out to be the invalid PCI resource assigned after
    reallocation.  __find_resource() first aligns the resource start address
    and resets the end address with start+size-1 accordingly, then checks
    whether it's contained.  Here the end address may overflow the integer,
    although resource_contains() still returns true because the function
    validates only start and end address.  So this ends up with returning an
    invalid resource (start > end).
    
    There was already an attempt to cover such a problem in the commit
    47ea91b4052d ("Resource: fix wrong resource window calculation"), but
    this case is an overseen one.
    
    This patch adds the validity check of the newly calculated resource for
    avoiding the integer overflow problem.
    
    Bugzilla: http://bugzilla.opensuse.org/show_bug.cgi?id=1086739
    Link: http://lkml.kernel.org/r/s5hpo37d5l8.wl-tiwai@suse.de
    Fixes: 23c570a67448 ("resource: ability to resize an allocated resource")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Reported-by: Michael Henders <hendersm@shaw.ca>
    Tested-by: Michael Henders <hendersm@shaw.ca>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Ram Pai <linuxram@us.ibm.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f659e7e79f52657b88ea0f9ed473fe0958d31996
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Tue Apr 10 16:34:41 2018 -0700

    fs/reiserfs/journal.c: add missing resierfs_warning() arg
    
    commit 9ad553abe66f8be3f4755e9fa0a6ba137ce76341 upstream.
    
    One use of the reiserfs_warning() macro in journal_init_dev() is missing
    a parameter, causing the following warning:
    
      REISERFS warning (device loop0): journal_init_dev: Cannot open '%s': %i journal_init_dev:
    
    This also causes a WARN_ONCE() warning in the vsprintf code, and then a
    panic if panic_on_warn is set.
    
      Please remove unsupported %/ in format string
      WARNING: CPU: 1 PID: 4480 at lib/vsprintf.c:2138 format_decode+0x77f/0x830 lib/vsprintf.c:2138
      Kernel panic - not syncing: panic_on_warn set ...
    
    Just add another string argument to the macro invocation.
    
    Addresses https://syzkaller.appspot.com/bug?id=0627d4551fdc39bf1ef5d82cd9eef587047f7718
    
    Link: http://lkml.kernel.org/r/d678ebe1-6f54-8090-df4c-b9affad62293@infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: <syzbot+6bd77b88c1977c03f584@syzkaller.appspotmail.com>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Jeff Mahoney <jeffm@suse.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Jan Kara <jack@suse.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6337067b2ab66c91b18b895c2399139b28f13fb7
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Apr 10 16:32:44 2018 -0700

    task_struct: only use anon struct under randstruct plugin
    
    commit 2cfe0d3009418a132b93d78642a8059a38fe5944 upstream.
    
    The original intent for always adding the anonymous struct in
    task_struct was to make sure we had compiler coverage.
    
    However, this caused pathological padding of 40 bytes at the start of
    task_struct.  Instead, move the anonymous struct to being only used when
    struct layout randomization is enabled.
    
    Link: http://lkml.kernel.org/r/20180327213609.GA2964@beast
    Fixes: 29e48ce87f1e ("task_struct: Allow randomized")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reported-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28cb085f1598956b5b29edb7f220ce9e0d827762
Author: Jérôme Glisse <jglisse@redhat.com>
Date:   Tue Apr 10 16:28:27 2018 -0700

    mm/hmm: hmm_pfns_bad() was accessing wrong struct
    
    commit c719547f032d4610c7a20900baacae26d0b1ff3e upstream.
    
    The private field of mm_walk struct point to an hmm_vma_walk struct and
    not to the hmm_range struct desired.  Fix to get proper struct pointer.
    
    Link: http://lkml.kernel.org/r/20180323005527.758-6-jglisse@redhat.com
    Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
    Cc: Evgeny Baskakov <ebaskakov@nvidia.com>
    Cc: Ralph Campbell <rcampbell@nvidia.com>
    Cc: Mark Hairgrove <mhairgrove@nvidia.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 963722d031e506600b66b91738e2007bf55ac3d0
Author: Jérôme Glisse <jglisse@redhat.com>
Date:   Tue Apr 10 16:28:15 2018 -0700

    mm/hmm: fix header file if/else/endif maze
    
    commit b28b08de436a638c82d0cf3dcdbdbad055baf1fc upstream.
    
    The #if/#else/#endif for IS_ENABLED(CONFIG_HMM) were wrong.  Because of
    this after multiple include there was multiple definition of both
    hmm_mm_init() and hmm_mm_destroy() leading to build failure if HMM was
    enabled (CONFIG_HMM set).
    
    Link: http://lkml.kernel.org/r/20180323005527.758-3-jglisse@redhat.com
    Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Ralph Campbell <rcampbell@nvidia.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Evgeny Baskakov <ebaskakov@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e84e6914ccb464ce5cbb99fd832a4673bb119adc
Author: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
Date:   Tue Apr 10 16:29:41 2018 -0700

    mm/ksm.c: fix inconsistent accounting of zero pages
    
    commit a38c015f3156895b07e71d4e4414289f8a3b2745 upstream.
    
    When using KSM with use_zero_pages, we replace anonymous pages
    containing only zeroes with actual zero pages, which are not anonymous.
    We need to do proper accounting of the mm counters, otherwise we will
    get wrong values in /proc and a BUG message in dmesg when tearing down
    the mm.
    
    Link: http://lkml.kernel.org/r/1522931274-15552-1-git-send-email-imbrenda@linux.vnet.ibm.com
    Fixes: e86c59b1b1 ("mm/ksm: improve deduplication of zero pages with colouring")
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 577b4eb23811dfc8e38924dc476dbc866be74253
Author: Richard Weinberger <richard@nod.at>
Date:   Sat Mar 3 11:45:54 2018 +0100

    ubi: Reject MLC NAND
    
    commit b5094b7f135be34630e3ea8a98fa215715d0f29d upstream.
    
    While UBI and UBIFS seem to work at first sight with MLC NAND, you will
    most likely lose all your data upon a power-cut or due to read/write
    disturb.
    In order to protect users from bad surprises, refuse to attach to MLC
    NAND.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Acked-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Acked-by: Artem Bityutskiy <dedekind1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ade852714ded6f3ede2708e036e13ed4c63335d
Author: Romain Izard <romain.izard.pro@gmail.com>
Date:   Mon Jan 29 11:18:20 2018 +0100

    ubi: Fix error for write access
    
    commit 78a8dfbabbece22bee58ac4cb26cab10e7a19c5d upstream.
    
    When opening a device with write access, ubiblock_open returns an error
    code. Currently, this error code is -EPERM, but this is not the right
    value.
    
    The open function for other block devices returns -EROFS when opening
    read-only devices with FMODE_WRITE set. When used with dm-verity, the
    veritysetup userspace tool is expecting EROFS, and refuses to use the
    ubiblock device.
    
    Use -EROFS for ubiblock as well. As a result, veritysetup accepts the
    ubiblock device as valid.
    
    Cc: stable@vger.kernel.org
    Fixes: 9d54c8a33eec (UBI: R/O block driver on top of UBI volumes)
    Signed-off-by: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf3fbf54a9aec60eac770b2e69b4762c09082bd1
Author: Richard Weinberger <richard@nod.at>
Date:   Wed Jan 17 23:15:57 2018 +0100

    ubi: fastmap: Don't flush fastmap work on detach
    
    commit 29b7a6fa1ec07e8480b0d9caf635a4498a438bf4 upstream.
    
    At this point UBI volumes have already been free()'ed and fastmap can no
    longer access these data structures.
    
    Reported-by: Martin Townsend <mtownsend1973@gmail.com>
    Fixes: 74cdaf24004a ("UBI: Fastmap: Fix memory leaks while closing the WL sub-system")
    Cc: stable@vger.kernel.org
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09844df060879db7d7fbec2c22c7f3c92f6b6b57
Author: Richard Weinberger <richard@nod.at>
Date:   Wed Jan 17 19:12:42 2018 +0100

    ubifs: Check ubifs_wbuf_sync() return code
    
    commit aac17948a7ce01fb60b9ee6cf902967a47b3ce26 upstream.
    
    If ubifs_wbuf_sync() fails we must not write a master node with the
    dirty marker cleared.
    Otherwise it is possible that in case of an IO error while syncing we
    mark the filesystem as clean and UBIFS refuses to recover upon next
    mount.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 1e51764a3c2a ("UBIFS: add new flash file system")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1e90bf95e5503fcedaf59ac52cbdc013068eeb4
Author: George Cherian <george.cherian@cavium.com>
Date:   Fri Mar 23 03:30:31 2018 -0700

    cpufreq: CPPC: Use transition_delay_us depending transition_latency
    
    commit 3d41386d556db9f720e00de3e11e45f39cb5071c upstream.
    
    With commit e948bc8fbee0 (cpufreq: Cap the default transition delay
    value to 10 ms)  the cpufreq was not honouring the delay passed via
    ACPI (PCCT). Due to which on ARM based platforms using CPPC the
    cpufreq governor tries to change the frequency of CPUs faster than
    expected.
    
    This leads to continuous error messages like the following.
    " ACPI CPPC: PCC check channel failed. Status=0 "
    
    Earlier (without above commit) the default transition delay was
    taken form the value passed from PCCT. Use the same value provided
    by PCCT to set the transition_delay_us.
    
    Fixes: e948bc8fbee0 (cpufreq: Cap the default transition delay value to 10 ms)
    Signed-off-by: George Cherian <george.cherian@cavium.com>
    Cc: 4.14+ <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9427a4aecf2330ba70dd59f194416de3e49042e2
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Feb 13 07:38:08 2018 -0800

    tty: make n_tty_read() always abort if hangup is in progress
    
    commit 28b0f8a6962a24ed21737578f3b1b07424635c9e upstream.
    
    A tty is hung up by __tty_hangup() setting file->f_op to
    hung_up_tty_fops, which is skipped on ttys whose write operation isn't
    tty_write().  This means that, for example, /dev/console whose write
    op is redirected_tty_write() is never actually marked hung up.
    
    Because n_tty_read() uses the hung up status to decide whether to
    abort the waiting readers, the lack of hung-up marking can lead to the
    following scenario.
    
     1. A session contains two processes.  The leader and its child.  The
        child ignores SIGHUP.
    
     2. The leader exits and starts disassociating from the controlling
        terminal (/dev/console).
    
     3. __tty_hangup() skips setting f_op to hung_up_tty_fops.
    
     4. SIGHUP is delivered and ignored.
    
     5. tty_ldisc_hangup() is invoked.  It wakes up the waits which should
        clear the read lockers of tty->ldisc_sem.
    
     6. The reader wakes up but because tty_hung_up_p() is false, it
        doesn't abort and goes back to sleep while read-holding
        tty->ldisc_sem.
    
     7. The leader progresses to tty_ldisc_lock() in tty_ldisc_hangup()
        and is now stuck in D sleep indefinitely waiting for
        tty->ldisc_sem.
    
    The following is Alan's explanation on why some ttys aren't hung up.
    
     http://lkml.kernel.org/r/20171101170908.6ad08580@alans-desktop
    
     1. It broke the serial consoles because they would hang up and close
        down the hardware. With tty_port that *should* be fixable properly
        for any cases remaining.
    
     2. The console layer was (and still is) completely broken and doens't
        refcount properly. So if you turn on console hangups it breaks (as
        indeed does freeing consoles and half a dozen other things).
    
    As neither can be fixed quickly, this patch works around the problem
    by introducing a new flag, TTY_HUPPING, which is used solely to tell
    n_tty_read() that hang-up is in progress for the console and the
    readers should be aborted regardless of the hung-up status of the
    device.
    
    The following is a sample hung task warning caused by this issue.
    
      INFO: task agetty:2662 blocked for more than 120 seconds.
            Not tainted 4.11.3-dbg-tty-lockup-02478-gfd6c7ee-dirty #28
      "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
          0  2662      1 0x00000086
      Call Trace:
       __schedule+0x267/0x890
       schedule+0x36/0x80
       schedule_timeout+0x23c/0x2e0
       ldsem_down_write+0xce/0x1f6
       tty_ldisc_lock+0x16/0x30
       tty_ldisc_hangup+0xb3/0x1b0
       __tty_hangup+0x300/0x410
       disassociate_ctty+0x6c/0x290
       do_exit+0x7ef/0xb00
       do_group_exit+0x3f/0xa0
       get_signal+0x1b3/0x5d0
       do_signal+0x28/0x660
       exit_to_usermode_loop+0x46/0x86
       do_syscall_64+0x9c/0xb0
       entry_SYSCALL64_slow_path+0x25/0x25
    
    The following is the repro.  Run "$PROG /dev/console".  The parent
    process hangs in D state.
    
      #include <sys/types.h>
      #include <sys/stat.h>
      #include <sys/wait.h>
      #include <sys/ioctl.h>
      #include <fcntl.h>
      #include <unistd.h>
      #include <stdio.h>
      #include <stdlib.h>
      #include <errno.h>
      #include <signal.h>
      #include <time.h>
      #include <termios.h>
    
      int main(int argc, char **argv)
      {
              struct sigaction sact = { .sa_handler = SIG_IGN };
              struct timespec ts1s = { .tv_sec = 1 };
              pid_t pid;
              int fd;
    
              if (argc < 2) {
                      fprintf(stderr, "test-hung-tty /dev/$TTY\n");
                      return 1;
              }
    
              /* fork a child to ensure that it isn't already the session leader */
              pid = fork();
              if (pid < 0) {
                      perror("fork");
                      return 1;
              }
    
              if (pid > 0) {
                      /* top parent, wait for everyone */
                      while (waitpid(-1, NULL, 0) >= 0)
                              ;
                      if (errno != ECHILD)
                              perror("waitpid");
                      return 0;
              }
    
              /* new session, start a new session and set the controlling tty */
              if (setsid() < 0) {
                      perror("setsid");
                      return 1;
              }
    
              fd = open(argv[1], O_RDWR);
              if (fd < 0) {
                      perror("open");
                      return 1;
              }
    
              if (ioctl(fd, TIOCSCTTY, 1) < 0) {
                      perror("ioctl");
                      return 1;
              }
    
              /* fork a child, sleep a bit and exit */
              pid = fork();
              if (pid < 0) {
                      perror("fork");
                      return 1;
              }
    
              if (pid > 0) {
                      nanosleep(&ts1s, NULL);
                      printf("Session leader exiting\n");
                      exit(0);
              }
    
              /*
               * The child ignores SIGHUP and keeps reading from the controlling
               * tty.  Because SIGHUP is ignored, the child doesn't get killed on
               * parent exit and the bug in n_tty makes the read(2) block the
               * parent's control terminal hangup attempt.  The parent ends up in
               * D sleep until the child is explicitly killed.
               */
              sigaction(SIGHUP, &sact, NULL);
              printf("Child reading tty\n");
              while (1) {
                      char buf[1024];
    
                      if (read(fd, buf, sizeof(buf)) < 0) {
                              perror("read");
                              return 1;
                      }
              }
    
              return 0;
      }
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Alan Cox <alan@llwyncelyn.cymru>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
