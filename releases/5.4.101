commit ef1fcccf6e5fe3aabe7c3590964efac6d5220c43
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 26 10:10:28 2021 +0100

    Linux 5.4.101
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Ross Schmidt <ross.schm.dev@gmail.com>
    Link: https://lore.kernel.org/r/20210225092515.001992375@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe257f47e2c35b1b19e1bfa6c4099fb59e355400
Author: Rong Chen <rong.a.chen@intel.com>
Date:   Fri Feb 12 20:52:41 2021 -0800

    scripts/recordmcount.pl: support big endian for ARCH sh
    
    [ Upstream commit 93ca696376dd3d44b9e5eae835ffbc84772023ec ]
    
    The kernel test robot reported the following issue:
    
        CC [M]  drivers/soc/litex/litex_soc_ctrl.o
      sh4-linux-objcopy: Unable to change endianness of input file(s)
      sh4-linux-ld: cannot find drivers/soc/litex/.tmp_gl_litex_soc_ctrl.o: No such file or directory
      sh4-linux-objcopy: 'drivers/soc/litex/.tmp_mx_litex_soc_ctrl.o': No such file
    
    The problem is that the format of input file is elf32-shbig-linux, but
    sh4-linux-objcopy wants to output a file which format is elf32-sh-linux:
    
      $ sh4-linux-objdump -d drivers/soc/litex/litex_soc_ctrl.o | grep format
      drivers/soc/litex/litex_soc_ctrl.o:     file format elf32-shbig-linux
    
    Link: https://lkml.kernel.org/r/20210210150435.2171567-1-rong.a.chen@intel.com
    Link: https://lore.kernel.org/linux-mm/202101261118.GbbYSlHu-lkp@intel.com
    Signed-off-by: Rong Chen <rong.a.chen@intel.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Yoshinori Sato <ysato@users.osdn.me>
    Cc: Rich Felker <dalias@libc.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2c5e4a083a7e24b35b3eb808b760af6de15bac2
Author: Shyam Prasad N <sprasad@microsoft.com>
Date:   Thu Feb 11 03:26:54 2021 -0800

    cifs: Set CIFS_MOUNT_USE_PREFIX_PATH flag on setting cifs_sb->prepath.
    
    [ Upstream commit a738c93fb1c17e386a09304b517b1c6b2a6a5a8b ]
    
    While debugging another issue today, Steve and I noticed that if a
    subdir for a file share is already mounted on the client, any new
    mount of any other subdir (or the file share root) of the same share
    results in sharing the cifs superblock, which e.g. can result in
    incorrect device name.
    
    While setting prefix path for the root of a cifs_sb,
    CIFS_MOUNT_USE_PREFIX_PATH flag should also be set.
    Without it, prepath is not even considered in some places,
    and output of "mount" and various /proc/<>/*mount* related
    options can be missing part of the device name.
    
    Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6f7bf29e32daebd976c55b9683cf04c3cc2049b
Author: Raju Rangoju <rajur@chelsio.com>
Date:   Tue Feb 2 23:55:11 2021 +0530

    cxgb4: Add new T6 PCI device id 0x6092
    
    [ Upstream commit 3401e4aa43a540881cc97190afead650e709c418 ]
    
    Signed-off-by: Raju Rangoju <rajur@chelsio.com>
    Link: https://lore.kernel.org/r/20210202182511.8109-1-rajur@chelsio.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aaf830ad624a5df6655b50b2a1c86efe0e5fb486
Author: Christoph Schemmel <christoph.schemmel@gmail.com>
Date:   Tue Feb 2 09:45:23 2021 +0100

    NET: usb: qmi_wwan: Adding support for Cinterion MV31
    
    [ Upstream commit a4dc7eee9106a9d2a6e08b442db19677aa9699c7 ]
    
    Adding support for Cinterion MV31 with PID 0x00B7.
    
    T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 11 Spd=5000 MxCh= 0
    D:  Ver= 3.20 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=1e2d ProdID=00b7 Rev=04.14
    S:  Manufacturer=Cinterion
    S:  Product=Cinterion USB Mobile Broadband
    S:  SerialNumber=b3246eed
    C:  #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    
    Signed-off-by: Christoph Schemmel <christoph.schemmel@gmail.com>
    Link: https://lore.kernel.org/r/20210202084523.4371-1-christoph.schemmel@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f2093be36273ad826c3ebe7251a233e75d74b4b
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Feb 8 12:19:40 2021 -0800

    KVM: Use kvm_pfn_t for local PFN variable in hva_to_pfn_remapped()
    
    commit a9545779ee9e9e103648f6f2552e73cfe808d0f4 upstream.
    
    Use kvm_pfn_t, a.k.a. u64, for the local 'pfn' variable when retrieving
    a so called "remapped" hva/pfn pair.  In theory, the hva could resolve to
    a pfn in high memory on a 32-bit kernel.
    
    This bug was inadvertantly exposed by commit bd2fae8da794 ("KVM: do not
    assume PTE is writable after follow_pfn"), which added an error PFN value
    to the mix, causing gcc to comlain about overflowing the unsigned long.
    
      arch/x86/kvm/../../../virt/kvm/kvm_main.c: In function ‘hva_to_pfn_remapped’:
      include/linux/kvm_host.h:89:30: error: conversion from ‘long long unsigned int’
                                      to ‘long unsigned int’ changes value from
                                      ‘9218868437227405314’ to ‘2’ [-Werror=overflow]
       89 | #define KVM_PFN_ERR_RO_FAULT (KVM_PFN_ERR_MASK + 2)
          |                              ^
    virt/kvm/kvm_main.c:1935:9: note: in expansion of macro ‘KVM_PFN_ERR_RO_FAULT’
    
    Cc: stable@vger.kernel.org
    Fixes: add6a0cd1c5b ("KVM: MMU: try to fix up page faults before giving up")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210208201940.1258328-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f9fbe70316407a6f7322e2bb6ac5fb272dbbe79
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Feb 5 05:07:11 2021 -0500

    mm: provide a saner PTE walking API for modules
    
    commit 9fd6dad1261a541b3f5fa7dc5b152222306e6702 upstream.
    
    Currently, the follow_pfn function is exported for modules but
    follow_pte is not.  However, follow_pfn is very easy to misuse,
    because it does not provide protections (so most of its callers
    assume the page is writable!) and because it returns after having
    already unlocked the page table lock.
    
    Provide instead a simplified version of follow_pte that does
    not have the pmdpp and range arguments.  The older version
    survives as follow_invalidate_pte() for use by fs/dax.c.
    
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32f070ad274d46e6693b49c6dd7399c8d642e831
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Feb 1 05:12:11 2021 -0500

    KVM: do not assume PTE is writable after follow_pfn
    
    commit bd2fae8da794b55bf2ac02632da3a151b10e664c upstream.
    
    In order to convert an HVA to a PFN, KVM usually tries to use
    the get_user_pages family of functinso.  This however is not
    possible for VM_IO vmas; in that case, KVM instead uses follow_pfn.
    
    In doing this however KVM loses the information on whether the
    PFN is writable.  That is usually not a problem because the main
    use of VM_IO vmas with KVM is for BARs in PCI device assignment,
    however it is a bug.  To fix it, use follow_pte and check pte_write
    while under the protection of the PTE lock.  The information can
    be used to fail hva_to_pfn_remapped or passed back to the
    caller via *writable.
    
    Usage of follow_pfn was introduced in commit add6a0cd1c5b ("KVM: MMU: try to fix
    up page faults before giving up", 2016-07-05); however, even older version
    have the same issue, all the way back to commit 2e2e3738af33 ("KVM:
    Handle vma regions with no backing page", 2008-07-20), as they also did
    not check whether the PFN was writable.
    
    Fixes: 2e2e3738af33 ("KVM: Handle vma regions with no backing page")
    Reported-by: David Stevens <stevensd@google.com>
    Cc: 3pvd@google.com
    Cc: Jann Horn <jannh@google.com>
    Cc: Jason Gunthorpe <jgg@ziepe.ca>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78c7b242573a9099cb273c9a4093fdd3cea4759d
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Dec 15 20:47:23 2020 -0800

    mm: simplify follow_pte{,pmd}
    
    commit ff5c19ed4b087073cea38ff0edc80c23d7256943 upstream.
    
    Merge __follow_pte_pmd, follow_pte_pmd and follow_pte into a single
    follow_pte function and just pass two additional NULL arguments for the
    two previous follow_pte callers.
    
    [sfr@canb.auug.org.au: merge fix for "s390/pci: remove races against pte updates"]
      Link: https://lkml.kernel.org/r/20201111221254.7f6a3658@canb.auug.org.au
    
    Link: https://lkml.kernel.org/r/20201029101432.47011-3-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8aeef9c9ac7ee48934b8b4fddb33e0aa0c1fcd75
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Dec 15 20:47:20 2020 -0800

    mm: unexport follow_pte_pmd
    
    commit 7336375734d65ecc82956b59a79cf5deccce880c upstream.
    
    Patch series "simplify follow_pte a bit".
    
    This small series drops the not needed follow_pte_pmd exports, and
    simplifies the follow_pte family of functions a bit.
    
    This patch (of 2):
    
    follow_pte_pmd() is only used by the DAX code, which can't be modular.
    
    Link: https://lkml.kernel.org/r/20201029101432.47011-2-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f869895cf9d720819910bb7589368bf903683af
Author: Rolf Eike Beer <eb@emlix.com>
Date:   Fri Feb 12 08:22:27 2021 +0100

    scripts: set proper OpenSSL include dir also for sign-file
    
    commit fe968c41ac4f4ec9ffe3c4cf16b72285f5e9674f upstream.
    
    Fixes: 2cea4a7a1885 ("scripts: use pkg-config to locate libcrypto")
    Signed-off-by: Rolf Eike Beer <eb@emlix.com>
    Cc: stable@vger.kernel.org # 5.6.x
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7ed0a50f20aa2c0698eab425d42119f792a16d1
Author: Rolf Eike Beer <eb@emlix.com>
Date:   Thu Nov 22 16:40:49 2018 +0100

    scripts: use pkg-config to locate libcrypto
    
    commit 2cea4a7a1885bd0c765089afc14f7ff0eb77864e upstream.
    
    Otherwise build fails if the headers are not in the default location. While at
    it also ask pkg-config for the libs, with fallback to the existing value.
    
    Signed-off-by: Rolf Eike Beer <eb@emlix.com>
    Cc: stable@vger.kernel.org # 5.6.x
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8e3bcc6db7c98ba242a9225543c52c9641161c8
Author: Sameer Pujar <spujar@nvidia.com>
Date:   Thu Jan 7 10:36:10 2021 +0530

    arm64: tegra: Add power-domain for Tegra210 HDA
    
    commit 1e0ca5467445bc1f41a9e403d6161a22f313dae7 upstream.
    
    HDA initialization is failing occasionally on Tegra210 and following
    print is observed in the boot log. Because of this probe() fails and
    no sound card is registered.
    
      [16.800802] tegra-hda 70030000.hda: no codecs found!
    
    Codecs request a state change and enumeration by the controller. In
    failure cases this does not seem to happen as STATETS register reads 0.
    
    The problem seems to be related to the HDA codec dependency on SOR
    power domain. If it is gated during HDA probe then the failure is
    observed. Building Tegra HDA driver into kernel image avoids this
    failure but does not completely address the dependency part. Fix this
    problem by adding 'power-domains' DT property for Tegra210 HDA. Note
    that Tegra186 and Tegra194 HDA do this already.
    
    Fixes: 742af7e7a0a1 ("arm64: tegra: Add Tegra210 support")
    Depends-on: 96d1f078ff0 ("arm64: tegra: Add SOR power-domain for Tegra210")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sameer Pujar <spujar@nvidia.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74c8a6af692a552e67462f98da5bcee1a0f0a925
Author: Rustam Kovhaev <rkovhaev@gmail.com>
Date:   Wed Feb 24 12:00:30 2021 -0800

    ntfs: check for valid standard information attribute
    
    commit 4dfe6bd94959222e18d512bdf15f6bf9edb9c27c upstream.
    
    Mounting a corrupted filesystem with NTFS resulted in a kernel crash.
    
    We should check for valid STANDARD_INFORMATION attribute offset and length
    before trying to access it
    
    Link: https://lkml.kernel.org/r/20210217155930.1506815-1-rkovhaev@gmail.com
    Link: https://syzkaller.appspot.com/bug?extid=c584225dabdea2f71969
    Signed-off-by: Rustam Kovhaev <rkovhaev@gmail.com>
    Reported-by: syzbot+c584225dabdea2f71969@syzkaller.appspotmail.com
    Tested-by: syzbot+c584225dabdea2f71969@syzkaller.appspotmail.com
    Acked-by: Anton Altaparmakov <anton@tuxera.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54a3c25368d9c08e8ffe25b4b92e80a594f24673
Author: Stefan Ursella <stefan.ursella@wolfvision.net>
Date:   Wed Feb 10 15:07:11 2021 +0100

    usb: quirks: add quirk to start video capture on ELMO L-12F document camera reliable
    
    commit 1ebe718bb48278105816ba03a0408ecc2d6cf47f upstream.
    
    Without this quirk starting a video capture from the device often fails with
    
    kernel: uvcvideo: Failed to set UVC probe control : -110 (exp. 34).
    
    Signed-off-by: Stefan Ursella <stefan.ursella@wolfvision.net>
    Link: https://lore.kernel.org/r/20210210140713.18711-1-stefan.ursella@wolfvision.net
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96ef50ec7266408fd1e41d0de48d5ebf97fc7ca3
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Feb 10 12:17:46 2021 +0100

    USB: quirks: sort quirk entries
    
    commit 43861d29c0810a70792bf69d37482efb7bb6677d upstream.
    
    Move the last entry to its proper place to maintain the VID/PID sort
    order.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210210111746.13360-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fce3654c648d8f92882d0dae117c20231b8b224f
Author: Will McVicker <willmcvicker@google.com>
Date:   Sat Dec 5 00:48:48 2020 +0000

    HID: make arrays usage and value to be the same
    
    commit ed9be64eefe26d7d8b0b5b9fa3ffdf425d87a01f upstream.
    
    The HID subsystem allows an "HID report field" to have a different
    number of "values" and "usages" when it is allocated. When a field
    struct is created, the size of the usage array is guaranteed to be at
    least as large as the values array, but it may be larger. This leads to
    a potential out-of-bounds write in
    __hidinput_change_resolution_multipliers() and an out-of-bounds read in
    hidinput_count_leds().
    
    To fix this, let's make sure that both the usage and value arrays are
    the same size.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Will McVicker <willmcvicker@google.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 185c2266c1df80bec001c987d64cae2d9cd13816
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Feb 10 14:14:42 2021 +0100

    bpf: Fix truncation handling for mod32 dst reg wrt zero
    
    commit 9b00f1b78809309163dda2d044d9e94a3c0248a3 upstream.
    
    Recently noticed that when mod32 with a known src reg of 0 is performed,
    then the dst register is 32-bit truncated in verifier:
    
      0: R1=ctx(id=0,off=0,imm=0) R10=fp0
      0: (b7) r0 = 0
      1: R0_w=inv0 R1=ctx(id=0,off=0,imm=0) R10=fp0
      1: (b7) r1 = -1
      2: R0_w=inv0 R1_w=inv-1 R10=fp0
      2: (b4) w2 = -1
      3: R0_w=inv0 R1_w=inv-1 R2_w=inv4294967295 R10=fp0
      3: (9c) w1 %= w0
      4: R0_w=inv0 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      4: (b7) r0 = 1
      5: R0_w=inv1 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      5: (1d) if r1 == r2 goto pc+1
       R0_w=inv1 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      6: R0_w=inv1 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      6: (b7) r0 = 2
      7: R0_w=inv2 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      7: (95) exit
      7: R0=inv1 R1=inv(id=0,umin_value=4294967295,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2=inv4294967295 R10=fp0
      7: (95) exit
    
    However, as a runtime result, we get 2 instead of 1, meaning the dst
    register does not contain (u32)-1 in this case. The reason is fairly
    straight forward given the 0 test leaves the dst register as-is:
    
      # ./bpftool p d x i 23
       0: (b7) r0 = 0
       1: (b7) r1 = -1
       2: (b4) w2 = -1
       3: (16) if w0 == 0x0 goto pc+1
       4: (9c) w1 %= w0
       5: (b7) r0 = 1
       6: (1d) if r1 == r2 goto pc+1
       7: (b7) r0 = 2
       8: (95) exit
    
    This was originally not an issue given the dst register was marked as
    completely unknown (aka 64 bit unknown). However, after 468f6eafa6c4
    ("bpf: fix 32-bit ALU op verification") the verifier casts the register
    output to 32 bit, and hence it becomes 32 bit unknown. Note that for
    the case where the src register is unknown, the dst register is marked
    64 bit unknown. After the fix, the register is truncated by the runtime
    and the test passes:
    
      # ./bpftool p d x i 23
       0: (b7) r0 = 0
       1: (b7) r1 = -1
       2: (b4) w2 = -1
       3: (16) if w0 == 0x0 goto pc+2
       4: (9c) w1 %= w0
       5: (05) goto pc+1
       6: (bc) w1 = w1
       7: (b7) r0 = 1
       8: (1d) if r1 == r2 goto pc+1
       9: (b7) r0 = 2
      10: (95) exit
    
    Semantics also match with {R,W}x mod{64,32} 0 -> {R,W}x. Invalid div
    has always been {R,W}x div{64,32} 0 -> 0. Rewrites are as follows:
    
      mod32:                            mod64:
    
      (16) if w0 == 0x0 goto pc+2       (15) if r0 == 0x0 goto pc+1
      (9c) w1 %= w0                     (9f) r1 %= r0
      (05) goto pc+1
      (bc) w1 = w1
    
    Fixes: 468f6eafa6c4 ("bpf: fix 32-bit ALU op verification")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
