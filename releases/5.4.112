commit 8f55ad4daf001b6ee8ddf672e14475a35403b258
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 14 08:24:19 2021 +0200

    Linux 5.4.112
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Link: https://lore.kernel.org/r/20210412084004.200986670@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea42fd91d3041b81d704624b87f35b56f3a00841
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Apr 12 09:56:57 2021 +0200

    Revert "cifs: Set CIFS_MOUNT_USE_PREFIX_PATH flag on setting cifs_sb->prepath."
    
    This reverts commit a2c5e4a083a7e24b35b3eb808b760af6de15bac2 which is
    commit a738c93fb1c17e386a09304b517b1c6b2a6a5a8b upstream.
    
    It is reported to cause problems in older kernels, so revert it for now
    until we can figure it out...
    
    Reported-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/YG7r0UaivWZL762N@eldamar.lan
    Cc: Shyam Prasad N <sprasad@microsoft.com>
    Cc: Aurelien Aptel <aaptel@suse.com>
    Cc: Steve French <stfrench@microsoft.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ee5bde3164c90807d68cccb5229d5d726bf1b04
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:54 2021 -0400

    net: ieee802154: stop dump llsec params for monitors
    
    commit 1534efc7bbc1121e92c86c2dabebaf2c9dcece19 upstream.
    
    This patch stops dumping llsec params for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Reported-by: syzbot+cde43a581a8e5f317bc2@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-16-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4042ecc12cbdbc5170c8b3ed2f355d255b666e2
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:53 2021 -0400

    net: ieee802154: forbid monitor for del llsec seclevel
    
    commit 9dde130937e95b72adfae64ab21d6e7e707e2dac upstream.
    
    This patch forbids to del llsec seclevel for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Reported-by: syzbot+fbf4fc11a819824e027b@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-15-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e82f8b7713ab6017db3aac0d59676de697e1f181
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:41 2021 -0400

    net: ieee802154: forbid monitor for set llsec params
    
    commit 88c17855ac4291fb462e13a86b7516773b6c932e upstream.
    
    This patch forbids to set llsec params for monitor interfaces which we
    don't support yet.
    
    Reported-by: syzbot+8b6719da8a04beeafcc3@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 948a2817f71de0e711426d8aa8542cf00d4005d6
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:21 2021 -0500

    net: ieee802154: fix nl802154 del llsec devkey
    
    commit 27c746869e1a135dffc2f2a80715bb7aa00445b4 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVKEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+368672e0da240db53b5f@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3a105e15cd63d992737a59768e236af89c3149d
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:20 2021 -0500

    net: ieee802154: fix nl802154 add llsec key
    
    commit 20d5fe2d7103f5c43ad11a3d6d259e9d61165c35 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ce4e062c2d51977ddc50@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4097afd93df7707fc98bbb9dd968bfe631c06228
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:19 2021 -0500

    net: ieee802154: fix nl802154 del llsec dev
    
    commit 3d1eac2f45585690d942cf47fd7fbd04093ebd1b upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVICE is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+d946223c2e751d136c94@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-2-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d32fc7964d6be3a2e3467a79c5d261b0a93eed9
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:18 2021 -0500

    net: ieee802154: fix nl802154 del llsec key
    
    commit 37feaaf5ceb2245e474369312bb7b922ce7bce69 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ac5c11d2959a8b3c4806@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-1-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f4c815c74f45eae60563c88d1fa95c2c852d266
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 28 10:18:03 2021 -0500

    net: ieee802154: nl-mac: fix check on panid
    
    commit 6f7f657f24405f426212c09260bf7fe8a52cef33 upstream.
    
    This patch fixes a null pointer derefence for panid handle by move the
    check for the netlink variable directly before accessing them.
    
    Reported-by: syzbot+d4c07de0144f6f63be3a@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210228151817.95700-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38ea2b3ed00fb4632a706f2c796d6aa4a884f573
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Mar 4 18:21:25 2021 +0300

    net: mac802154: Fix general protection fault
    
    commit 1165affd484889d4986cf3b724318935a0b120d8 upstream.
    
    syzbot found general protection fault in crypto_destroy_tfm()[1].
    It was caused by wrong clean up loop in llsec_key_alloc().
    If one of the tfm array members is in IS_ERR() range it will
    cause general protection fault in clean up function [1].
    
    Call Trace:
     crypto_free_aead include/crypto/aead.h:191 [inline] [1]
     llsec_key_alloc net/mac802154/llsec.c:156 [inline]
     mac802154_llsec_key_add+0x9e0/0xcc0 net/mac802154/llsec.c:249
     ieee802154_add_llsec_key+0x56/0x80 net/mac802154/cfg.c:338
     rdev_add_llsec_key net/ieee802154/rdev-ops.h:260 [inline]
     nl802154_add_llsec_key+0x3d3/0x560 net/ieee802154/nl802154.c:1584
     genl_family_rcv_msg_doit+0x228/0x320 net/netlink/genetlink.c:739
     genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]
     genl_rcv_msg+0x328/0x580 net/netlink/genetlink.c:800
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     genl_rcv+0x24/0x40 net/netlink/genetlink.c:811
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reported-by: syzbot+9ec037722d2603a9f52e@syzkaller.appspotmail.com
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210304152125.1052825-1-paskripkin@gmail.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e7098f56c83cb7427f807b9382244f25f033eee
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 16:27:52 2021 +0300

    drivers: net: fix memory leak in peak_usb_create_dev
    
    commit a0b96b4a62745397aee662670cfc2157bac03f55 upstream.
    
    syzbot reported memory leak in peak_usb.
    The problem was in case of failure after calling
    ->dev_init()[2] in peak_usb_create_dev()[1]. The data
    allocated int dev_init() wasn't freed, so simple
    ->dev_free() call fix this problem.
    
    backtrace:
        [<0000000079d6542a>] kmalloc include/linux/slab.h:552 [inline]
        [<0000000079d6542a>] kzalloc include/linux/slab.h:682 [inline]
        [<0000000079d6542a>] pcan_usb_fd_init+0x156/0x210 drivers/net/can/usb/peak_usb/pcan_usb_fd.c:868   [2]
        [<00000000c09f9057>] peak_usb_create_dev drivers/net/can/usb/peak_usb/pcan_usb_core.c:851 [inline] [1]
        [<00000000c09f9057>] peak_usb_probe+0x389/0x490 drivers/net/can/usb/peak_usb/pcan_usb_core.c:949
    
    Reported-by: syzbot+91adee8d9ebb9193d22d@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32e2f9a708e1c01c95302b005550223098089638
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 07:46:24 2021 +0300

    drivers: net: fix memory leak in atusb_probe
    
    commit 6b9fbe16955152626557ec6f439f3407b7769941 upstream.
    
    syzbot reported memory leak in atusb_probe()[1].
    The problem was in atusb_alloc_urbs().
    Since urb is anchored, we need to release the reference
    to correctly free the urb
    
    backtrace:
        [<ffffffff82ba0466>] kmalloc include/linux/slab.h:559 [inline]
        [<ffffffff82ba0466>] usb_alloc_urb+0x66/0xe0 drivers/usb/core/urb.c:74
        [<ffffffff82ad3888>] atusb_alloc_urbs drivers/net/ieee802154/atusb.c:362 [inline][2]
        [<ffffffff82ad3888>] atusb_probe+0x158/0x820 drivers/net/ieee802154/atusb.c:1038 [1]
    
    Reported-by: syzbot+28a246747e0a465127f3@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a790ad1358b5fffece1ae05d45a9d5f2d3446e7
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Tue Apr 6 18:45:54 2021 +0100

    net: tun: set tun->dev->addr_len during TUNSETLINK processing
    
    commit cca8ea3b05c972ffb5295367e6c544369b45fbdd upstream.
    
    When changing type with TUNSETLINK ioctl command, set tun->dev->addr_len
    to match the appropriate type, using new tun_get_addr_len utility function
    which returns appropriate address length for given type. Fixes a
    KMSAN-found uninit-value bug reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=0766d38c656abeace60621896d705743aeefed51
    
    Reported-by: syzbot+001516d86dbe88862cec@syzkaller.appspotmail.com
    Diagnosed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed13df88c6d5cb7c5463f1955b622ab246be1364
Author: Du Cheng <ducheng2@gmail.com>
Date:   Thu Apr 8 00:27:56 2021 +0800

    cfg80211: remove WARN_ON() in cfg80211_sme_connect
    
    commit 1b5ab825d9acc0f27d2f25c6252f3526832a9626 upstream.
    
    A WARN_ON(wdev->conn) would trigger in cfg80211_sme_connect(), if multiple
    send_msg(NL80211_CMD_CONNECT) system calls are made from the userland, which
    should be anticipated and handled by the wireless driver. Remove this WARN_ON()
    to prevent kernel panic if kernel is configured to "panic_on_warn".
    
    Bug reported by syzbot.
    
    Reported-by: syzbot+5f9392825de654244975@syzkaller.appspotmail.com
    Signed-off-by: Du Cheng <ducheng2@gmail.com>
    Link: https://lore.kernel.org/r/20210407162756.6101-1-ducheng2@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 628ac886dfbab95b9636866b1cc2542929999f32
Author: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Date:   Tue Mar 30 04:23:23 2021 +0530

    net: sched: bump refcount for new action in ACT replace mode
    
    commit 6855e8213e06efcaf7c02a15e12b1ae64b9a7149 upstream.
    
    Currently, action creation using ACT API in replace mode is buggy.
    When invoking for non-existent action index 42,
    
            tc action replace action bpf obj foo.o sec <xyz> index 42
    
    kernel creates the action, fills up the netlink response, and then just
    deletes the action after notifying userspace.
    
            tc action show action bpf
    
    doesn't list the action.
    
    This happens due to the following sequence when ovr = 1 (replace mode)
    is enabled:
    
    tcf_idr_check_alloc is used to atomically check and either obtain
    reference for existing action at index, or reserve the index slot using
    a dummy entry (ERR_PTR(-EBUSY)).
    
    This is necessary as pointers to these actions will be held after
    dropping the idrinfo lock, so bumping the reference count is necessary
    as we need to insert the actions, and notify userspace by dumping their
    attributes. Finally, we drop the reference we took using the
    tcf_action_put_many call in tcf_action_add. However, for the case where
    a new action is created due to free index, its refcount remains one.
    This when paired with the put_many call leads to the kernel setting up
    the action, notifying userspace of its creation, and then tearing it
    down. For existing actions, the refcount is still held so they remain
    unaffected.
    
    Fortunately due to rtnl_lock serialization requirement, such an action
    with refcount == 1 will not be concurrently deleted by anything else, at
    best CLS API can move its refcount up and down by binding to it after it
    has been published from tcf_idr_insert_many. Since refcount is atleast
    one until put_many call, CLS API cannot delete it. Also __tcf_action_put
    release path already ensures deterministic outcome (either new action
    will be created or existing action will be reused in case CLS API tries
    to bind to action concurrently) due to idr lock serialization.
    
    We fix this by making refcount of newly created actions as 2 in ACT API
    replace mode. A relaxed store will suffice as visibility is ensured only
    after the tcf_idr_insert_many call.
    
    Note that in case of creation or overwriting using CLS API only (i.e.
    bind = 1), overwriting existing action object is not allowed, and any
    such request is silently ignored (without error).
    
    The refcount bump that occurs in tcf_idr_check_alloc call there for
    existing action will pair with tcf_exts_destroy call made from the
    owner module for the same action. In case of action creation, there
    is no existing action, so no tcf_exts_destroy callback happens.
    
    This means no code changes for CLS API.
    
    Fixes: cae422f379f3 ("net: sched: use reference counting action init")
    Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dbafee8426fad831cdf8c41d28606da185c0613
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Mon Mar 29 16:03:17 2021 +0200

    dt-bindings: net: ethernet-controller: fix typo in NVMEM
    
    commit af9d316f3dd6d1385fbd1631b5103e620fc4298a upstream.
    
    The correct property name is "nvmem-cell-names". This is what:
    1. Was originally documented in the ethernet.txt
    2. Is used in DTS files
    3. Matches standard syntax for phandles
    4. Linux net subsystem checks for
    
    Fixes: 9d3de3c58347 ("dt-bindings: net: Add YAML schemas for the generic Ethernet options")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4c5968da7734ebbe112c1fa7d1318f990d42708
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Sun Mar 14 12:07:09 2021 +0100

    clk: socfpga: fix iomem pointer cast on 64-bit
    
    commit 2867b9746cef78745c594894aece6f8ef826e0b4 upstream.
    
    Pointers should be cast with uintptr_t instead of integer.  This fixes
    warning when compile testing on ARM64:
    
      drivers/clk/socfpga/clk-gate.c: In function ‘socfpga_clk_recalc_rate’:
      drivers/clk/socfpga/clk-gate.c:102:7: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    
    Fixes: b7cec13f082f ("clk: socfpga: Look for the GPIO_DB_CLK by its offset")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Link: https://lore.kernel.org/r/20210314110709.32599-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35ba6d9240ee9219459e25ba9b99984405e05204
Author: William Roche <william.roche@oracle.com>
Date:   Tue Apr 6 11:28:59 2021 -0400

    RAS/CEC: Correct ce_add_elem()'s returned values
    
    commit 3a62583c2853b0ab37a57dde79decea210b5fb89 upstream.
    
    ce_add_elem() uses different return values to signal a result from
    adding an element to the collector. Commit in Fixes: broke the case
    where the element being added is not found in the array. Correct that.
    
     [ bp: Rewrite commit message, add kernel-doc comments. ]
    
    Fixes: de0e0624d86f ("RAS/CEC: Check count_threshold unconditionally")
    Signed-off-by: William Roche <william.roche@oracle.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/1617722939-29670-1-git-send-email-william.roche@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f666ad4f8d87e3a9189c2c9c4b995aaa6dbf3e3f
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Apr 5 10:44:34 2021 +0300

    RDMA/addr: Be strict with gid size
    
    [ Upstream commit d1c803a9ccd7bd3aff5e989ccfb39ed3b799b975 ]
    
    The nla_len() is less than or equal to 16.  If it's less than 16 then end
    of the "gid" buffer is uninitialized.
    
    Fixes: ae43f8286730 ("IB/core: Add IP to GID netlink offload")
    Link: https://lore.kernel.org/r/20210405074434.264221-1-leon@kernel.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Bloch <mbloch@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44d03319fe77a323eafe7a51d302277e72d43798
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Wed Mar 31 19:27:15 2021 +0530

    RDMA/cxgb4: check for ipv6 address properly while destroying listener
    
    [ Upstream commit 603c4690b01aaffe3a6c3605a429f6dac39852ae ]
    
    ipv6 bit is wrongly set by the below which causes fatal adapter lookup
    engine errors for ipv4 connections while destroying a listener.  Fix it to
    properly check the local address for ipv6.
    
    Fixes: 3408be145a5d ("RDMA/cxgb4: Fix adapter LE hash errors while destroying ipv6 listening server")
    Link: https://lore.kernel.org/r/20210331135715.30072-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ca5345db92cf361494d7f3944f9a2f5fb90513c
Author: Aya Levin <ayal@nvidia.com>
Date:   Sun Apr 4 12:55:00 2021 +0300

    net/mlx5: Fix PBMC register mapping
    
    [ Upstream commit 534b1204ca4694db1093b15cf3e79a99fcb6a6da ]
    
    Add reserved mapping to cover all the register in order to avoid setting
    arbitrary values to newer FW which implements the reserved fields.
    
    Fixes: 50b4a3c23646 ("net/mlx5: PPTB and PBMC register firmware command support")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 798d94a274fbada4a3878e04b533f12e16e836a9
Author: Raed Salem <raeds@nvidia.com>
Date:   Thu Jan 21 16:01:37 2021 +0200

    net/mlx5: Fix placement of log_max_flow_counter
    
    [ Upstream commit a14587dfc5ad2312dabdd42a610d80ecd0dc8bea ]
    
    The cited commit wrongly placed log_max_flow_counter field of
    mlx5_ifc_flow_table_prop_layout_bits, align it to the HW spec intended
    placement.
    
    Fixes: 16f1c5bb3ed7 ("net/mlx5: Check device capability for maximum flow counters")
    Signed-off-by: Raed Salem <raeds@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9716aac1741970f299c0b1680c29baf90d2630ce
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Tue Apr 6 21:10:43 2021 +0800

    net: hns3: clear VF down state bit before request link status
    
    [ Upstream commit ed7bedd2c3ca040f1e8ea02c6590a93116b1ec78 ]
    
    Currently, the VF down state bit is cleared after VF sending
    link status request command. There is problem that when VF gets
    link status replied from PF, the down state bit may still set
    as 1. In this case, the link status replied from PF will be
    ignored and always set VF link status to down.
    
    To fix this problem, clear VF down state bit before VF requests
    link status.
    
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dd7092d1a9621545a60f080fc629883848764c4
Author: Ilya Maximets <i.maximets@ovn.org>
Date:   Sun Apr 4 19:50:31 2021 +0200

    openvswitch: fix send of uninitialized stack memory in ct limit reply
    
    [ Upstream commit 4d51419d49930be2701c2633ae271b350397c3ca ]
    
    'struct ovs_zone_limit' has more members than initialized in
    ovs_ct_limit_get_default_limit().  The rest of the memory is a random
    kernel stack content that ends up being sent to userspace.
    
    Fix that by using designated initializer that will clear all
    non-specified fields.
    
    Fixes: 11efd5cb04a1 ("openvswitch: Support conntrack zone limit")
    Signed-off-by: Ilya Maximets <i.maximets@ovn.org>
    Acked-by: Tonghao Zhang <xiangxia.m.yue@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 731abf396e37bba3c135f437bced0067672f9148
Author: Zheng Yongjun <zhengyongjun3@huawei.com>
Date:   Tue Dec 8 20:13:53 2020 +0800

    net: openvswitch: conntrack: simplify the return expression of ovs_ct_limit_get_default_limit()
    
    [ Upstream commit 5e359044c107ecbdc2e9b3fd5ce296006e6de4bc ]
    
    Simplify the return expression.
    
    Signed-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>
    Reviewed-by: Eelco Chaudron <echaudro@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0aab59f099338cf2b3ae573dd38db76fe8e7a49
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Thu Apr 1 13:36:05 2021 +0300

    perf inject: Fix repipe usage
    
    [ Upstream commit 026334a3bb6a3919b42aba9fc11843db2b77fd41 ]
    
    Since commit 14d3d54052539a1e ("perf session: Try to read pipe data from
    file") 'perf inject' has started printing "PERFILE2h" when not processing
    pipes.
    
    The commit exposed perf to the possiblity that the input is not a pipe
    but the 'repipe' parameter gets used. That causes the printing because
    perf inject sets 'repipe' to true always.
    
    The 'repipe' parameter of perf_session__new() is used by 2 functions:
    
            - perf_file_header__read_pipe()
            - trace_report()
    
    In both cases, the functions copy data to STDOUT_FILENO when 'repipe' is
    true.
    
    Fix by setting 'repipe' to true only if the output is a pipe.
    
    Fixes: e558a5bd8b74aff4 ("perf inject: Work with files")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Andrew Vagin <avagin@openvz.org>
    Link: http://lore.kernel.org/lkml/20210401103605.9000-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3343a35d108ae702e48b437e89571d2e497f43b
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Mon Mar 29 18:35:07 2021 +0200

    s390/cpcmd: fix inline assembly register clobbering
    
    [ Upstream commit 7a2f91441b2c1d81b77c1cd816a4659f4abc9cbe ]
    
    Register variables initialized using arithmetic. That leads to
    kasan instrumentaton code corrupting the registers contents.
    Follow GCC guidlines and use temporary variables for assigning
    init values to register variables.
    
    Fixes: 94c12cc7d196 ("[S390] Inline assembly cleanup.")
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Acked-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Link: https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/Local-Register-Variables.html
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c88fa8d4f99419da2e0167ac15bffc56569d7ef9
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Thu Feb 18 11:16:49 2021 +0800

    workqueue: Move the position of debug_work_activate() in __queue_work()
    
    [ Upstream commit 0687c66b5f666b5ad433f4e94251590d9bc9d10e ]
    
    The debug_work_activate() is called on the premise that
    the work can be inserted, because if wq be in WQ_DRAINING
    status, insert work may be failed.
    
    Fixes: e41e704bc4f4 ("workqueue: improve destroy_workqueue() debuggability")
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14060454cdb9c8b85a35e71bc4103340970cca58
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:49 2021 +0200

    clk: fix invalid usage of list cursor in unregister
    
    [ Upstream commit 7045465500e465b09f09d6e5bdc260a9f1aab97b ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_unregister(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used. The patch fixes a logical
    bug that hasn't been seen in pratice however it is analogus
    to the bug fixed in clk_notifier_register().
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
     ...
     Memory state around the buggy address:
      ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
     >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                              ^
      ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
      ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-2-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bedda47d5dce4de2f149ed3e9f19aca0723dd3d1
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:48 2021 +0200

    clk: fix invalid usage of list cursor in register
    
    [ Upstream commit 8d3c0c01cb2e36b2bf3c06a82b18b228d0c8f5d0 ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_register(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used.
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
    ...
    Memory state around the buggy address:
     ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
     ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
    >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                          ^
     ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
     ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
     ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-1-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3717885865c6d07d5b541a62958b46120e7646d
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Apr 2 15:42:53 2021 +0300

    net: macb: restore cmp registers on resume path
    
    [ Upstream commit a14d273ba15968495896a38b7b3399dba66d0270 ]
    
    Restore CMP screener registers on resume path.
    
    Fixes: c1e85c6ce57ef ("net: macb: save/restore the remaining registers and features")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c61fe6b7e21fde98675ad11b8f06e011617421de
Author: Can Guo <cang@codeaurora.org>
Date:   Thu Apr 1 00:39:09 2021 -0700

    scsi: ufs: core: Fix wrong Task Tag used in task management request UPIUs
    
    [ Upstream commit 4b42d557a8add52b9a9924fb31e40a218aab7801 ]
    
    In __ufshcd_issue_tm_cmd(), it is not correct to use hba->nutrs + req->tag
    as the Task Tag in a TMR UPIU. Directly use req->tag as the Task Tag.
    
    Fixes: e293313262d3 ("scsi: ufs: Fix broken task management command implementation")
    Link: https://lore.kernel.org/r/1617262750-4864-3-git-send-email-cang@codeaurora.org
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81fddc7be6499a921473d0755859d354b3a63a3d
Author: Can Guo <cang@codeaurora.org>
Date:   Thu Apr 1 00:39:08 2021 -0700

    scsi: ufs: core: Fix task management request completion timeout
    
    [ Upstream commit 1235fc569e0bf541ddda0a1224d4c6fa6d914890 ]
    
    ufshcd_tmc_handler() calls blk_mq_tagset_busy_iter(fn = ufshcd_compl_tm()),
    but since blk_mq_tagset_busy_iter() only iterates over all reserved tags
    and requests which are not in IDLE state, ufshcd_compl_tm() never gets a
    chance to run. Thus, TMR always ends up with completion timeout. Fix it by
    calling blk_mq_start_request() in __ufshcd_issue_tm_cmd().
    
    Link: https://lore.kernel.org/r/1617262750-4864-2-git-send-email-cang@codeaurora.org
    Fixes: 69a6c269c097 ("scsi: ufs: Use blk_{get,put}_request() to allocate and free TMFs")
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6abec1a317268d2dda6261063dc57f9797abe9c
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Dec 9 10:13:09 2019 -0800

    scsi: ufs: Use blk_{get,put}_request() to allocate and free TMFs
    
    [ Upstream commit 69a6c269c097d780a2db320ecd47f7a62fafd92e ]
    
    Manage TMF tags with blk_{get,put}_request() instead of
    ufshcd_get_tm_free_slot() / ufshcd_put_tm_slot(). Store a per-request
    completion pointer in request.end_io_data instead of using a waitqueue to
    report TMF completion.
    
    Cc: Can Guo <cang@codeaurora.org>
    Cc: Stanley Chu <stanley.chu@mediatek.com>
    Cc: Avri Altman <avri.altman@wdc.com>
    Cc: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191209181309.196233-3-bvanassche@acm.org
    Tested-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8d2d45c70c7391386baf7863674f156da56a3d5
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Dec 9 10:13:08 2019 -0800

    scsi: ufs: Avoid busy-waiting by eliminating tag conflicts
    
    [ Upstream commit 7252a3603015f1fd04363956f4b72a537c9f9c42 ]
    
    Instead of tracking which tags are in use in the ufs_hba.lrb_in_use
    bitmask, rely on the block layer tag allocation mechanism. This patch
    removes the following busy-waiting loop if ufshcd_issue_devman_upiu_cmd()
    and the block layer accidentally allocate the same tag for a SCSI request:
    
     * ufshcd_queuecommand() returns SCSI_MLQUEUE_HOST_BUSY.
    
     * The SCSI core requeues the SCSI command.
    
    Cc: Can Guo <cang@codeaurora.org>
    Cc: Stanley Chu <stanley.chu@mediatek.com>
    Cc: Avri Altman <avri.altman@wdc.com>
    Cc: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191209181309.196233-2-bvanassche@acm.org
    Tested-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5efc9d26c848a968802bfec67b30ae1bc85366c
Author: Venkat Gopalakrishnan <venkatg@codeaurora.org>
Date:   Thu Nov 14 22:09:28 2019 -0800

    scsi: ufs: Fix irq return code
    
    [ Upstream commit 9333d77573485c827b4c0fc960c840df3e5ce719 ]
    
    Return IRQ_HANDLED only if the irq is really handled, this will help in
    catching spurious interrupts that go unhandled.
    
    Link: https://lore.kernel.org/r/1573798172-20534-6-git-send-email-cang@codeaurora.org
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 537a2449cc6f71c7e0eb17a36203fca3c115660b
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Thu Apr 1 08:59:17 2021 +0200

    net: udp: Add support for getsockopt(..., ..., UDP_GRO, ..., ...);
    
    [ Upstream commit 98184612aca0a9ee42b8eb0262a49900ee9eef0d ]
    
    Support for UDP_GRO was added in the past but the implementation for
    getsockopt was missed which did lead to an error when we tried to
    retrieve the setting for UDP_GRO. This patch adds the missing switch
    case for UDP_GRO
    
    Fixes: e20cf8d3f1f7 ("udp: implement GRO for plain UDP sockets.")
    Signed-off-by: Norman Maurer <norman_maurer@apple.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de8c5962bdae6436d576b4c630ffe78370a16e7c
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Thu Mar 25 14:28:22 2021 -0700

    drm/msm: Set drvdata to NULL when msm_drm_init() fails
    
    [ Upstream commit 5620b135aea49a8f41c86aaecfcb1598a7774121 ]
    
    We should set the platform device's driver data to NULL here so that
    code doesn't assume the struct drm_device pointer is valid when it could
    have been destroyed. The lifetime of this pointer is managed by a kref
    but when msm_drm_init() fails we call drm_dev_put() on the pointer which
    will free the pointer's memory. This driver uses the component model, so
    there's sort of two "probes" in this file, one for the platform device
    i.e. msm_pdev_probe() and one for the component i.e. msm_drm_bind(). The
    msm_drm_bind() code is using the platform device's driver data to store
    struct drm_device so the two functions are intertwined.
    
    This relationship becomes a problem for msm_pdev_shutdown() when it
    tests the NULL-ness of the pointer to see if it should call
    drm_atomic_helper_shutdown(). The NULL test is a proxy check for if the
    pointer has been freed by kref_put(). If the drm_device has been
    destroyed, then we shouldn't call the shutdown helper, and we know that
    is the case if msm_drm_init() failed, therefore set the driver data to
    NULL so that this pointer liveness is tracked properly.
    
    Fixes: 9d5cbf5fe46e ("drm/msm: add shutdown support for display platform_driver")
    Cc: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: Krishna Manikandan <mkrishn@codeaurora.org>
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Message-Id: <20210325212822.3663144-1-swboyd@chromium.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e22ce1d21b42a9232c1faf38c03be30a6d7984b8
Author: Eryk Rybak <eryk.roch.rybak@intel.com>
Date:   Tue Mar 2 08:46:27 2021 +0100

    i40e: Fix display statistics for veb_tc
    
    [ Upstream commit c3214de929dbf1b7374add8bbed30ce82b197bbb ]
    
    If veb-stats was enabled, the ethtool stats triggered a warning
    due to invalid size: 'unexpected stat size for veb.tc_%u_tx_packets'.
    This was due to an incorrect structure definition for the statistics.
    Structures and functions have been improved in line with requirements
    for the presentation of statistics, in particular for the functions:
    'i40e_add_ethtool_stats' and 'i40e_add_stat_strings'.
    
    Fixes: 1510ae0be2a4 ("i40e: convert VEB TC stats to use an i40e_stats array")
    Signed-off-by: Eryk Rybak <eryk.roch.rybak@intel.com>
    Signed-off-by: Grzegorz Szczurek <grzegorzx.szczurek@intel.com>
    Reviewed-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c0d2372298f0e212f14e82020c9336b4989f757
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 14:15:23 2021 +0100

    soc/fsl: qbman: fix conflicting alignment attributes
    
    [ Upstream commit 040f31196e8b2609613f399793b9225271b79471 ]
    
    When building with W=1, gcc points out that the __packed attribute
    on struct qm_eqcr_entry conflicts with the 8-byte alignment
    attribute on struct qm_fd inside it:
    
    drivers/soc/fsl/qbman/qman.c:189:1: error: alignment 1 of 'struct qm_eqcr_entry' is less than 8 [-Werror=packed-not-aligned]
    
    I assume that the alignment attribute is the correct one, and
    that qm_eqcr_entry cannot actually be unaligned in memory,
    so add the same alignment on the outer struct.
    
    Fixes: c535e923bb97 ("soc/fsl: Introduce DPAA 1.x QMan device driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210323131530.2619900-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c178e8a1993741fc401ee507a5a544f3192256c8
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Tue Mar 30 18:59:59 2021 -0700

    net/rds: Fix a use after free in rds_message_map_pages
    
    [ Upstream commit bdc2ab5c61a5c07388f4820ff21e787b4dfd1ced ]
    
    In rds_message_map_pages, the rm is freed by rds_message_put(rm).
    But rm is still used by rm->data.op_sg in return value.
    
    My patch assigns ERR_CAST(rm->data.op_sg) to err before the rm is
    freed to avoid the uaf.
    
    Fixes: 7dba92037baf3 ("net/rds: Use ERR_PTR for rds_message_alloc_sgs()")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Reviewed-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73f88cc2bf5c1385bfe20169572fdb4c8a8f12df
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Thu Dec 5 16:58:10 2019 -0600

    net/mlx5: Don't request more than supported EQs
    
    [ Upstream commit a7b76002ae78cd230ee652ccdfedf21aa94fcecc ]
    
    Calculating the number of compeltion EQs based on the number of
    available IRQ vectors doesn't work now that all async EQs share one IRQ.
    Thus the max number of EQs can be exceeded on systems with more than
    approximately 256 CPUs. Take this into account when calculating the
    number of available completion EQs.
    
    Fixes: 81bfa206032a ("net/mlx5: Use a single IRQ for all async EQs")
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 029416e14be2276cca6d1d46b09129f044646308
Author: Aya Levin <ayal@nvidia.com>
Date:   Wed Mar 24 12:25:06 2021 +0200

    net/mlx5e: Fix ethtool indication of connector type
    
    [ Upstream commit 3211434dfe7a66fcf55e43961ea524b78336c04c ]
    
    Use connector_type read from PTYS register when it's valid, based on
    corresponding capability bit.
    
    Fixes: 5b4793f81745 ("net/mlx5e: Add support for reading connector type from PTYS")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Eran Ben Elisha <eranbe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f3010fc3fe6d6e6d18f05960ca8b8361a2f73e6
Author: Bastian Germann <bage@linutronix.de>
Date:   Wed Mar 31 17:18:43 2021 +0200

    ASoC: sunxi: sun4i-codec: fill ASoC card owner
    
    [ Upstream commit 7c0d6e482062eb5c06ecccfab340abc523bdca00 ]
    
    card->owner is a required property and since commit 81033c6b584b ("ALSA:
    core: Warn on empty module") a warning is issued if it is empty. Add it.
    This fixes following warning observed on Lamobo R1:
    
    WARNING: CPU: 1 PID: 190 at sound/core/init.c:207 snd_card_new+0x430/0x480 [snd]
    Modules linked in: sun4i_codec(E+) sun4i_backend(E+) snd_soc_core(E) ...
    CPU: 1 PID: 190 Comm: systemd-udevd Tainted: G         C  E     5.10.0-1-armmp #1 Debian 5.10.4-1
    Hardware name: Allwinner sun7i (A20) Family
    Call trace:
     (snd_card_new [snd])
     (snd_soc_bind_card [snd_soc_core])
     (snd_soc_register_card [snd_soc_core])
     (sun4i_codec_probe [sun4i_codec])
    
    Fixes: 45fb6b6f2aa3 ("ASoC: sunxi: add support for the on-chip codec on early Allwinner SoCs")
    Related: commit 3c27ea23ffb4 ("ASoC: qcom: Set card->owner to avoid warnings")
    Related: commit ec653df2a0cb ("drm/vc4/vc4_hdmi: fill ASoC card owner")
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Bastian Germann <bage@linutronix.de>
    Link: https://lore.kernel.org/r/20210331151843.30583-1-bage@linutronix.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db4600aa938c471f17baa211618ec9f9ab673676
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Mar 30 15:00:24 2021 -0700

    net: phy: broadcom: Only advertise EEE for supported modes
    
    [ Upstream commit c056d480b40a68f2520ccc156c7fae672d69d57d ]
    
    We should not be advertising EEE for modes that we do not support,
    correct that oversight by looking at the PHY device supported linkmodes.
    
    Fixes: 99cec8a4dda2 ("net: phy: broadcom: Allow enabling or disabling of EEE")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aa7d2621b19da344ebcc56b2e00601c27272202
Author: Yinjun Zhang <yinjun.zhang@corigine.com>
Date:   Tue Mar 30 10:30:23 2021 +0200

    nfp: flower: ignore duplicate merge hints from FW
    
    [ Upstream commit 2ea538dbee1c79f6f6c24a6f2f82986e4b7ccb78 ]
    
    A merge hint message needs some time to process before the merged
    flow actually reaches the firmware, during which we may get duplicate
    merge hints if there're more than one packet that hit the pre-merged
    flow. And processing duplicate merge hints will cost extra host_ctx's
    which are a limited resource.
    
    Avoid the duplicate merge by using hash table to store the sub_flows
    to be merged.
    
    Fixes: 8af56f40e53b ("nfp: flower: offload merge flows")
    Signed-off-by: Yinjun Zhang <yinjun.zhang@corigine.com>
    Signed-off-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbbee59f4f32fe3f4c2f2fdf5e8bd97d15b60c4f
Author: Milton Miller <miltonm@us.ibm.com>
Date:   Mon Mar 29 10:20:39 2021 -0500

    net/ncsi: Avoid channel_monitor hrtimer deadlock
    
    [ Upstream commit 03cb4d05b4ea9a3491674ca40952adb708d549fa ]
    
    Calling ncsi_stop_channel_monitor from channel_monitor is a guaranteed
    deadlock on SMP because stop calls del_timer_sync on the timer that
    invoked channel_monitor as its timer function.
    
    Recognise the inherent race of marking the monitor disabled before
    deleting the timer by just returning if enable was cleared.  After
    a timeout (the default case -- reset to START when response received)
    just mark the monitor.enabled false.
    
    If the channel has an entry on the channel_queue list, or if the
    state is not ACTIVE or INACTIVE, then warn and mark the timer stopped
    and don't restart, as the locking is broken somehow.
    
    Fixes: 0795fb2021f0 ("net/ncsi: Stop monitor if channel times out or is inactive")
    Signed-off-by: Milton Miller <miltonm@us.ibm.com>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c66b672a231ca830d6a7647f944960d66dce7c04
Author: Stefan Riedmueller <s.riedmueller@phytec.de>
Date:   Mon Mar 29 15:01:03 2021 +0200

    ARM: dts: imx6: pbab01: Set vmmc supply for both SD interfaces
    
    [ Upstream commit f57011e72f5fe0421ec7a812beb1b57bdf4bb47f ]
    
    Setting the vmmc supplies is crucial since otherwise the supplying
    regulators get disabled and the SD interfaces are no longer powered
    which leads to system failures if the system is booted from that SD
    interface.
    
    Fixes: 1e44d3f880d5 ("ARM i.MX6Q: dts: Enable I2C1 with EEPROM and PMIC on Phytec phyFLEX-i.MX6 Ouad module")
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c991ca6a2c79cdb078c27616f13a1f688c7212ab
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Sun Mar 28 00:30:29 2021 -0700

    net:tipc: Fix a double free in tipc_sk_mcast_rcv
    
    [ Upstream commit 6bf24dc0cc0cc43b29ba344b66d78590e687e046 ]
    
    In the if(skb_peek(arrvq) == skb) branch, it calls __skb_dequeue(arrvq) to get
    the skb by skb = skb_peek(arrvq). Then __skb_dequeue() unlinks the skb from arrvq
    and returns the skb which equals to skb_peek(arrvq). After __skb_dequeue(arrvq)
    finished, the skb is freed by kfree_skb(__skb_dequeue(arrvq)) in the first time.
    
    Unfortunately, the same skb is freed in the second time by kfree_skb(skb) after
    the branch completed.
    
    My patch removes kfree_skb() in the if(skb_peek(arrvq) == skb) branch, because
    this skb will be freed by kfree_skb(skb) finally.
    
    Fixes: cb1b728096f54 ("tipc: eliminate race condition at multicast reception")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 200c8453287f660d129222bff718e3d8da503fc4
Author: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
Date:   Sat Mar 27 23:49:08 2021 +0530

    cxgb4: avoid collecting SGE_QBASE regs during traffic
    
    [ Upstream commit 1bfb3dea965ff9f6226fd1709338f227363b6061 ]
    
    Accessing SGE_QBASE_MAP[0-3] and SGE_QBASE_INDEX registers can lead
    to SGE missing doorbells under heavy traffic. So, only collect them
    when adapter is idle. Also update the regdump range to skip collecting
    these registers.
    
    Fixes: 80a95a80d358 ("cxgb4: collect SGE PF/VF queue map")
    Signed-off-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9bdd3e45f0ecac310ba25bd977c2dbbfd63363d
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Mon Mar 29 17:08:47 2021 +0300

    gianfar: Handle error code at MAC address change
    
    [ Upstream commit bff5b62585123823842833ab20b1c0a7fa437f8c ]
    
    Handle return error code of eth_mac_addr();
    
    Fixes: 3d23a05c75c7 ("gianfar: Enable changing mac addr when if up")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 516c436ff5d63cefe4470f624d216500bcd0a209
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Thu Mar 25 13:58:48 2021 +0100

    can: bcm/raw: fix msg_namelen values depending on CAN_REQUIRED_SIZE
    
    [ Upstream commit 9e9714742fb70467464359693a73b911a630226f ]
    
    Since commit f5223e9eee65 ("can: extend sockaddr_can to include j1939
    members") the sockaddr_can has been extended in size and a new
    CAN_REQUIRED_SIZE macro has been introduced to calculate the protocol
    specific needed size.
    
    The ABI for the msg_name and msg_namelen has not been adapted to the
    new CAN_REQUIRED_SIZE macro for the other CAN protocols which leads to
    a problem when an existing binary reads the (increased) struct
    sockaddr_can in msg_name.
    
    Fixes: f5223e9eee65 ("can: extend sockaddr_can to include j1939 members")
    Reported-by: Richard Weinberger <richard@nod.at>
    Tested-by: Richard Weinberger <richard@nod.at>
    Acked-by: Kurt Van Dijck <dev.kurt@vandijck-laurijssen.be>
    Link: https://lore.kernel.org/linux-can/1135648123.112255.1616613706554.JavaMail.zimbra@nod.at/T/#t
    Link: https://lore.kernel.org/r/20210325125850.1620-1-socketcan@hartkopp.net
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca443546f8d431b64387848fc28dcd2730df388a
Author: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
Date:   Wed Mar 24 14:28:41 2021 +0100

    arm64: dts: imx8mm/q: Fix pad control of SD1_DATA0
    
    [ Upstream commit 5cfad4f45806f6f898b63b8c77cea7452c704cb3 ]
    
    Fix address of the pad control register
    (IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0) for SD1_DATA0_GPIO2_IO2.  This seems
    to be a typo but it leads to an exception when pinctrl is applied due to
    wrong memory address access.
    
    Signed-off-by: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Fixes: c1c9d41319c3 ("dt-bindings: imx: Add pinctrl binding doc for imx8mm")
    Fixes: 748f908cc882 ("arm64: add basic DTS for i.MX8MQ")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 840a181729ac06da74fbb34ff043c2f4015d4ea5
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:14:53 2021 -0700

    sch_red: fix off-by-one checks in red_check_params()
    
    [ Upstream commit 3a87571f0ffc51ba3bf3ecdb6032861d0154b164 ]
    
    This fixes following syzbot report:
    
    UBSAN: shift-out-of-bounds in ./include/net/red.h:237:23
    shift exponent 32 is too large for 32-bit type 'unsigned int'
    CPU: 1 PID: 8418 Comm: syz-executor170 Not tainted 5.12.0-rc4-next-20210324-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     red_set_parms include/net/red.h:237 [inline]
     choke_change.cold+0x3c/0xc8 net/sched/sch_choke.c:414
     qdisc_create+0x475/0x12f0 net/sched/sch_api.c:1247
     tc_modify_qdisc+0x4c8/0x1a50 net/sched/sch_api.c:1663
     rtnetlink_rcv_msg+0x44e/0xad0 net/core/rtnetlink.c:5553
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x43f039
    Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007ffdfa725168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000400488 RCX: 000000000043f039
    RDX: 0000000000000000 RSI: 0000000020000040 RDI: 0000000000000004
    RBP: 0000000000403020 R08: 0000000000400488 R09: 0000000000400488
    R10: 0000000000400488 R11: 0000000000000246 R12: 00000000004030b0
    R13: 0000000000000000 R14: 00000000004ac018 R15: 0000000000400488
    
    Fixes: 8afa10cbe281 ("net_sched: red: Avoid illegal values")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit accb27006595cf4ce432f04b87f666f4284470e4
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Thu Mar 25 08:39:12 2021 +0530

    amd-xgbe: Update DMA coherency values
    
    [ Upstream commit d75135082698140a26a56defe1bbc1b06f26a41f ]
    
    Based on the IOMMU configuration, the current cache control settings can
    result in possible coherency issues. The hardware team has recommended
    new settings for the PCI device path to eliminate the issue.
    
    Fixes: 6f595959c095 ("amd-xgbe: Adjust register settings to improve performance")
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e472f6814ceb10330d4626ddd7b833a385a51717
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Mar 25 14:12:34 2021 -0400

    hostfs: fix memory handling in follow_link()
    
    [ Upstream commit 7f6c411c9b50cfab41cc798e003eff27608c7016 ]
    
    1) argument should not be freed in any case - the caller already has
    it as ->s_fs_info (and uses it a lot afterwards)
    2) allocate readlink buffer with kmalloc() - the caller has no way
    to tell if it's got that (on absolute symlink) or a result of
    kasprintf().  Sure, for SLAB and SLUB kfree() works on results of
    kmem_cache_alloc(), but that's not documented anywhere, might change
    in the future *and* is already not true for SLOB.
    
    Fixes: 52b209f7b848 ("get rid of hostfs_read_inode()")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 613f35568a5d70296352632eb09c8c2fed32fca2
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Mar 20 15:07:35 2020 +0200

    hostfs: Use kasprintf() instead of fixed buffer formatting
    
    [ Upstream commit b58c4e96192ee7c47d5c67853b1557306cfa0e7f ]
    
    Improve readability and maintainability by replacing a hardcoded string
    allocation and formatting by the use of the kasprintf() helper.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fec47d458add0fa14f37da023ea9aa35019a0998
Author: Eryk Rybak <eryk.roch.rybak@intel.com>
Date:   Thu Feb 18 11:15:26 2021 +0000

    i40e: Fix kernel oops when i40e driver removes VF's
    
    [ Upstream commit 347b5650cd158d1d953487cc2bec567af5c5bf96 ]
    
    Fix the reason of kernel oops when i40e driver removed VFs.
    Added new __I40E_VFS_RELEASING state to signalize releasing
    process by PF, that it makes possible to exit of reset VF procedure.
    Without this patch, it is possible to suspend the VFs reset by
    releasing VFs resources procedure. Retrying the reset after the
    timeout works on the freed VF memory causing a kernel oops.
    
    Fixes: d43d60e5eb95 ("i40e: ensure reset occurs when disabling VF")
    Signed-off-by: Eryk Rybak <eryk.roch.rybak@intel.com>
    Signed-off-by: Grzegorz Szczurek <grzegorzx.szczurek@intel.com>
    Reviewed-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0aacaa0a8f292549aa3dfe1c248d95030537f23
Author: Mateusz Palczewski <mateusz.palczewski@intel.com>
Date:   Mon Jan 4 15:00:02 2021 +0000

    i40e: Added Asym_Pause to supported link modes
    
    [ Upstream commit 90449e98c265296329446c7abcd2aae3b20c0bc9 ]
    
    Add Asym_Pause to supported link modes (it is supported by HW).
    Lack of Asym_Pause in supported modes can cause several problems,
    i.e. it won't be possible to turn the autonegotiation on
    with asymmetric pause settings (i.e. Tx on, Rx off).
    
    Fixes: 4e91bcd5d47a ("i40e: Finish implementation of ethtool get settings")
    Signed-off-by: Dawid Lukwinski <dawid.lukwinski@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Reviewed-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Reviewed-by: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f819977ad42caf824b236fc919786c672d040ee8
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Tue Mar 23 09:26:44 2021 +0100

    xfrm: Fix NULL pointer dereference on policy lookup
    
    [ Upstream commit b1e3a5607034aa0a481c6f69a6893049406665fb ]
    
    When xfrm interfaces are used in combination with namespaces
    and ESP offload, we get a dst_entry NULL pointer dereference.
    This is because we don't have a dst_entry attached in the ESP
    offloading case and we need to do a policy lookup before the
    namespace transition.
    
    Fix this by expicit checking of skb_dst(skb) before accessing it.
    
    Fixes: f203b76d78092 ("xfrm: Add virtual xfrm interfaces")
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bac7e764e5d53bdd17376e31489de0e364d8a38a
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Mar 19 18:48:46 2021 +0800

    ASoC: wm8960: Fix wrong bclk and lrclk with pll enabled for some chips
    
    [ Upstream commit 16b82e75c15a7dbd564ea3654f3feb61df9e1e6f ]
    
    The input MCLK is 12.288MHz, the desired output sysclk is 11.2896MHz
    and sample rate is 44100Hz, with the configuration pllprescale=2,
    postscale=sysclkdiv=1, some chip may have wrong bclk
    and lrclk output with pll enabled in master mode, but with the
    configuration pllprescale=1, postscale=2, the output clock is correct.
    
    >From Datasheet, the PLL performs best when f2 is between
    90MHz and 100MHz when the desired sysclk output is 11.2896MHz
    or 12.288MHz, so sysclkdiv = 2 (f2/8) is the best choice.
    
    So search available sysclk_divs from 2 to 1 other than from 1 to 2.
    
    Fixes: 84fdc00d519f ("ASoC: codec: wm9860: Refactor PLL out freq search")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1616150926-22892-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b32969aaed1ceb49f23ee4a6cc9ebaae2cfe0049
Author: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
Date:   Mon Mar 22 11:37:21 2021 -0500

    ASoC: SOF: Intel: HDA: fix core status verification
    
    [ Upstream commit 927280909fa7d8e61596800d82f18047c6cfbbe4 ]
    
    When checking for enabled cores it isn't enough to check that
    some of the requested cores are running, we have to check that
    all of them are.
    
    Fixes: 747503b1813a ("ASoC: SOF: Intel: Add Intel specific HDA DSP HW operations")
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210322163728.16616-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99b4e9af8f00785993f8a6bf59952eeea63e94f0
Author: Payal Kshirsagar <payalskshirsagar1234@gmail.com>
Date:   Thu Apr 9 13:48:53 2020 -0500

    ASoC: SOF: Intel: hda: remove unnecessary parentheses
    
    [ Upstream commit 805a23de2657c10c2ca96588a309a42df947bb36 ]
    
    Remove unnecessary parentheses around the right hand side of an assignment
    and align the code.
    
    Signed-off-by: Payal Kshirsagar <payalskshirsagar1234@gmail.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200409184853.15896-3-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 540ddeed5c513f0a40159bd370dd97927529ec6f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Mar 19 15:35:07 2021 +0800

    esp: delete NETIF_F_SCTP_CRC bit from features for esp offload
    
    [ Upstream commit 154deab6a3ba47792936edf77f2f13a1cbc4351d ]
    
    Now in esp4/6_gso_segment(), before calling inner proto .gso_segment,
    NETIF_F_CSUM_MASK bits are deleted, as HW won't be able to do the
    csum for inner proto due to the packet encrypted already.
    
    So the UDP/TCP packet has to do the checksum on its own .gso_segment.
    But SCTP is using CRC checksum, and for that NETIF_F_SCTP_CRC should
    be deleted to make SCTP do the csum in own .gso_segment as well.
    
    In Xiumei's testing with SCTP over IPsec/veth, the packets are kept
    dropping due to the wrong CRC checksum.
    
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Fixes: 7862b4058b9f ("esp: Add gso handlers for esp4 and esp6")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a128e07b472ba254dc98e85b6c718802343e7e19
Author: Ahmed S. Darwish <a.darwish@linutronix.de>
Date:   Tue Mar 16 11:56:29 2021 +0100

    net: xfrm: Localize sequence counter per network namespace
    
    [ Upstream commit e88add19f68191448427a6e4eb059664650a837f ]
    
    A sequence counter write section must be serialized or its internal
    state can get corrupted. The "xfrm_state_hash_generation" seqcount is
    global, but its write serialization lock (net->xfrm.xfrm_state_lock) is
    instantiated per network namespace. The write protection is thus
    insufficient.
    
    To provide full protection, localize the sequence counter per network
    namespace instead. This should be safe as both the seqcount read and
    write sections access data exclusively within the network namespace. It
    also lays the foundation for transforming "xfrm_state_hash_generation"
    data type from seqcount_t to seqcount_LOCKNAME_t in further commits.
    
    Fixes: b65e3d7be06f ("xfrm: state: add sequence count to detect hash resizes")
    Signed-off-by: Ahmed S. Darwish <a.darwish@linutronix.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34659399e713cbd5c640c8f16d78846c075047f3
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Mar 12 14:02:40 2021 +0100

    regulator: bd9571mwv: Fix AVS and DVFS voltage range
    
    [ Upstream commit 3b6e7088afc919f5b52e4d2de8501ad34d35b09b ]
    
    According to Table 30 ("DVFS_MoniVDAC [6:0] Setting Table") in the
    BD9571MWV-M Datasheet Rev. 002, the valid voltage range is 600..1100 mV
    (settings 0x3c..0x6e).  While the lower limit is taken into account (by
    setting regulator_desc.linear_min_sel to 0x3c), the upper limit is not.
    
    Fix this by reducing regulator_desc.n_voltages from 0x80 to 0x6f.
    
    Fixes: e85c5a153fe237f2 ("regulator: Add ROHM BD9571MWV-M PMIC regulator driver")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20210312130242.3390038-2-geert+renesas@glider.be
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d78e99dd4960aa0856ec0a42bdd68744c2aa3552
Author: Eyal Birger <eyal.birger@gmail.com>
Date:   Sat Feb 20 15:01:15 2021 +0200

    xfrm: interface: fix ipv4 pmtu check to honor ip header df
    
    [ Upstream commit 8fc0e3b6a8666d656923d214e4dc791e9a17164a ]
    
    Frag needed should only be sent if the header enables DF.
    
    This fix allows packets larger than MTU to pass the xfrm interface
    and be fragmented after encapsulation, aligning behavior with
    non-interface xfrm.
    
    Fixes: f203b76d7809 ("xfrm: Add virtual xfrm interfaces")
    Signed-off-by: Eyal Birger <eyal.birger@gmail.com>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7977d5fe3d5b1d7ec2254ecf269e856bc6941fc9
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Apr 11 12:23:44 2021 +0200

    net: dsa: lantiq_gswip: Configure all remaining GSWIP_MII_CFG bits
    
    commit 4b5923249b8fa427943b50b8f35265176472be38 upstream.
    
    There are a few more bits in the GSWIP_MII_CFG register for which we
    did rely on the boot-loader (or the hardware defaults) to set them up
    properly.
    
    For some external RMII PHYs we need to select the GSWIP_MII_CFG_RMII_CLK
    bit and also we should un-set it for non-RMII PHYs. The
    GSWIP_MII_CFG_RMII_CLK bit is ignored for other PHY connection modes.
    
    The GSWIP IP also supports in-band auto-negotiation for RGMII PHYs when
    the GSWIP_MII_CFG_RGMII_IBS bit is set. Clear this bit always as there's
    no known hardware which uses this (so it is not tested yet).
    
    Clear the xMII isolation bit when set at initialization time if it was
    previously set by the bootloader. Not doing so could lead to no traffic
    (neither RX nor TX) on a port with this bit set.
    
    While here, also add the GSWIP_MII_CFG_RESET bit. We don't need to
    manage it because this bit is self-clearning when set. We still add it
    here to get a better overview of the GSWIP_MII_CFG register.
    
    Fixes: 14fceff4771e51 ("net: dsa: Add Lantiq / Intel DSA driver for vrx200")
    Cc: stable@vger.kernel.org
    Suggested-by: Hauke Mehrtens <hauke@hauke-m.de>
    Acked-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [ Updated after the upstream commit 3e9005be87777 required some changes
      for Linux 5.4 ]
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 249908ed36a8d929b0c6b9aa62ccfb8f16978fdb
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Apr 11 12:23:43 2021 +0200

    net: dsa: lantiq_gswip: Don't use PHY auto polling
    
    commit 3e9005be87777afc902b9f5497495898202d335d upstream.
    
    PHY auto polling on the GSWIP hardware can be used so link changes
    (speed, link up/down, etc.) can be detected automatically. Internally
    GSWIP reads the PHY's registers for this functionality. Based on this
    automatic detection GSWIP can also automatically re-configure it's port
    settings. Unfortunately this auto polling (and configuration) mechanism
    seems to cause various issues observed by different people on different
    devices:
    - FritzBox 7360v2: the two Gbit/s ports (connected to the two internal
      PHY11G instances) are working fine but the two Fast Ethernet ports
      (using an AR8030 RMII PHY) are completely dead (neither RX nor TX are
      received). It turns out that the AR8030 PHY sets the BMSR_ESTATEN bit
      as well as the ESTATUS_1000_TFULL and ESTATUS_1000_XFULL bits. This
      makes the PHY auto polling state machine (rightfully?) think that the
      established link speed (when the other side is Gbit/s capable) is
      1Gbit/s.
    - None of the Ethernet ports on the Zyxel P-2812HNU-F1 (two are
      connected to the internal PHY11G GPHYs while the other three are
      external RGMII PHYs) are working. Neither RX nor TX traffic was
      observed. It is not clear which part of the PHY auto polling state-
      machine caused this.
    - FritzBox 7412 (only one LAN port which is connected to one of the
      internal GPHYs running in PHY22F / Fast Ethernet mode) was seeing
      random disconnects (link down events could be seen). Sometimes all
      traffic would stop after such disconnect. It is not clear which part
      of the PHY auto polling state-machine cauased this.
    - TP-Link TD-W9980 (two ports are connected to the internal GPHYs
      running in PHY11G / Gbit/s mode, the other two are external RGMII
      PHYs) was affected by similar issues as the FritzBox 7412 just without
      the "link down" events
    
    Switch to software based configuration instead of PHY auto polling (and
    letting the GSWIP hardware configure the ports automatically) for the
    following link parameters:
    - link up/down
    - link speed
    - full/half duplex
    - flow control (RX / TX pause)
    
    After a big round of manual testing by various people (who helped test
    this on OpenWrt) it turns out that this fixes all reported issues.
    
    Additionally it can be considered more future proof because any
    "quirk" which is implemented for a PHY on the driver side can now be
    used with the GSWIP hardware as well because Linux is in control of the
    link parameters.
    
    As a nice side-effect this also solves a problem where fixed-links were
    not supported previously because we were relying on the PHY auto polling
    mechanism, which cannot work for fixed-links as there's no PHY from
    where it can read the registers. Configuring the link settings on the
    GSWIP ports means that we now use the settings from device-tree also for
    ports with fixed-links.
    
    Fixes: 14fceff4771e51 ("net: dsa: Add Lantiq / Intel DSA driver for vrx200")
    Fixes: 3e6fdeb28f4c33 ("net: dsa: lantiq_gswip: Let GSWIP automatically set the xMII clock")
    Cc: stable@vger.kernel.org
    Acked-by: Hauke Mehrtens <hauke@hauke-m.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [ Move gswip_port_set_{speed, duplex, pause} calls from
      gswip_phylink_mac_link_up to gswip_phylink_mac_config because the
      data required for these functions is not available inside
      gswip_phylink_mac_link_up yet in Linux 5.4 (it was only added with
      Linux 5.7). ]
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 910e785ba8de8b94ca262062df0d1607217e9b5d
Author: Yuya Kusakabe <yuya.kusakabe@gmail.com>
Date:   Tue Feb 25 12:32:12 2020 +0900

    virtio_net: Add XDP meta data support
    
    [ Upstream commit 503d539a6e417b018616bf3060e0b5814fafce47 ]
    
    Implement support for transferring XDP meta data into skb for
    virtio_net driver; before calling into the program, xdp.data_meta points
    to xdp.data, where on program return with pass verdict, we call
    into skb_metadata_set().
    
    Tested with the script at
    https://github.com/higebu/virtio_net-xdp-metadata-test.
    
    Signed-off-by: Yuya Kusakabe <yuya.kusakabe@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/bpf/20200225033212.437563-2-yuya.kusakabe@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0534f1f1bc76208917d8694b84e0690cf24d59fc
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon Mar 15 12:50:08 2021 +0100

    i2c: turn recovery error on init to debug
    
    commit e409a6a3e0690efdef9b8a96197bc61ff117cfaf upstream.
    
    In some configurations, recovery is optional. So, don't throw an error
    when it is not used because e.g. pinctrl settings for recovery are not
    provided. Reword the message and make it debug output.
    
    Reported-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Tested-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cafced0419152f60723c144923e6f270b856f5de
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:51 2021 -0600

    usbip: synchronize event handler with sysfs code paths
    
    commit 363eaa3a450abb4e63bd6e3ad79d1f7a0f717814 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to synchronize event handler with sysfs paths
    in usbip drivers.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/c5c8723d3f29dfe3d759cfaafa7dd16b0dfe2918.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37168011d4271e43f257170fbd9a44c444297486
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:50 2021 -0600

    usbip: vudc synchronize sysfs code paths
    
    commit bd8b82042269a95db48074b8bb400678dbac1815 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to protect sysfs paths in vudc.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/caabcf3fc87bdae970509b5ff32d05bb7ce2fb15.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06fedcc6870ea1f1bb8bcd50ea3f3bfeae590380
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:49 2021 -0600

    usbip: stub-dev synchronize sysfs code paths
    
    commit 9dbf34a834563dada91366c2ac266f32ff34641a upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to protect sysfs paths in stub-dev.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/2b182f3561b4a065bf3bf6dce3b0e9944ba17b3f.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a435364b608f05ca6e4dae6d2066402c793f279
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:48 2021 -0600

    usbip: add sysfs_lock to synchronize sysfs code paths
    
    commit 4e9c93af7279b059faf5bb1897ee90512b258a12 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    This problem is common to all drivers while it can be reproduced easily
    in vhci_hcd. Add a sysfs_lock to usbip_device struct to protect the paths.
    
    Use this in vhci_hcd to protect sysfs paths. For a complete fix, usip_host
    and usip-vudc drivers and the event handler will have to use this lock to
    protect the paths. These changes will be done in subsequent patches.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/b6568f7beae702bbc236a545d3c020106ca75eac.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b02bded94b91ca27888d9663e690e1c968d06c45
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Mar 30 18:43:54 2021 +0200

    net: let skb_orphan_partial wake-up waiters.
    
    commit 9adc89af724f12a03b47099cd943ed54e877cd59 upstream.
    
    Currently the mentioned helper can end-up freeing the socket wmem
    without waking-up any processes waiting for more write memory.
    
    If the partially orphaned skb is attached to an UDP (or raw) socket,
    the lack of wake-up can hang the user-space.
    
    Even for TCP sockets not calling the sk destructor could have bad
    effects on TSQ.
    
    Address the issue using skb_orphan to release the sk wmem before
    setting the new sock_efree destructor. Additionally bundle the
    whole ownership update in a new helper, so that later other
    potential users could avoid duplicate code.
    
    v1 -> v2:
     - use skb_orphan() instead of sort of open coding it (Eric)
     - provide an helper for the ownership change (Eric)
    
    Fixes: f6ba8d33cfbb ("netem: fix skb_orphan_partial()")
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd8a95d56050696c99720ac8295f8066ab8d2537
Author: Maciej Żenczykowski <maze@google.com>
Date:   Mon Apr 5 00:06:52 2021 -0700

    net-ipv6: bugfix - raw & sctp - switch to ipv6_can_nonlocal_bind()
    
    commit 630e4576f83accf90366686f39808d665d8dbecc upstream.
    
    Found by virtue of ipv6 raw sockets not honouring the per-socket
    IP{,V6}_FREEBIND setting.
    
    Based on hits found via:
      git grep '[.]ip_nonlocal_bind'
    We fix both raw ipv6 sockets to honour IP{,V6}_FREEBIND and IP{,V6}_TRANSPARENT,
    and we fix sctp sockets to honour IP{,V6}_TRANSPARENT (they already honoured
    FREEBIND), and not just the ipv6 'ip_nonlocal_bind' sysctl.
    
    The helper is defined as:
      static inline bool ipv6_can_nonlocal_bind(struct net *net, struct inet_sock *inet) {
        return net->ipv6.sysctl.ip_nonlocal_bind || inet->freebind || inet->transparent;
      }
    so this change only widens the accepted opt-outs and is thus a clean bugfix.
    
    I'm not entirely sure what 'fixes' tag to add, since this is AFAICT an ancient bug,
    but IMHO this should be applied to stable kernels as far back as possible.
    As such I'm adding a 'fixes' tag with the commit that originally added the helper,
    which happened in 4.19.  Backporting to older LTS kernels (at least 4.9 and 4.14)
    would presumably require open-coding it or backporting the helper as well.
    
    Other possibly relevant commits:
      v4.18-rc6-1502-g83ba4645152d net: add helpers checking if socket can be bound to nonlocal address
      v4.18-rc6-1431-gd0c1f01138c4 net/ipv6: allow any source address for sendmsg pktinfo with ip_nonlocal_bind
      v4.14-rc5-271-gb71d21c274ef sctp: full support for ipv6 ip_nonlocal_bind & IP_FREEBIND
      v4.7-rc7-1883-g9b9742022888 sctp: support ipv6 nonlocal bind
      v4.1-12247-g35a256fee52c ipv6: Nonlocal bind
    
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Fixes: 83ba4645152d ("net: add helpers checking if socket can be bound to nonlocal address")
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Reviewed-By: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5e7653ffdd1c69ba6fc7f5b9ca5f9c364cde72b
Author: Kurt Kanzenbach <kurt@linutronix.de>
Date:   Tue Apr 6 09:35:09 2021 +0200

    net: hsr: Reset MAC header for Tx path
    
    commit 9d6803921a16f4d768dc41a75375629828f4d91e upstream.
    
    Reset MAC header in HSR Tx path. This is needed, because direct packet
    transmission, e.g. by specifying PACKET_QDISC_BYPASS does not reset the MAC
    header.
    
    This has been observed using the following setup:
    
    |$ ip link add name hsr0 type hsr slave1 lan0 slave2 lan1 supervision 45 version 1
    |$ ifconfig hsr0 up
    |$ ./test hsr0
    
    The test binary is using mmap'ed sockets and is specifying the
    PACKET_QDISC_BYPASS socket option.
    
    This patch resolves the following warning on a non-patched kernel:
    
    |[  112.725394] ------------[ cut here ]------------
    |[  112.731418] WARNING: CPU: 1 PID: 257 at net/hsr/hsr_forward.c:560 hsr_forward_skb+0x484/0x568
    |[  112.739962] net/hsr/hsr_forward.c:560: Malformed frame (port_src hsr0)
    
    The warning can be safely removed, because the other call sites of
    hsr_forward_skb() make sure that the skb is prepared correctly.
    
    Fixes: d346a3fae3ff ("packet: introduce PACKET_QDISC_BYPASS socket option")
    Signed-off-by: Kurt Kanzenbach <kurt@linutronix.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9311be5f61742bc8545a2b1ae75117147bd9d85
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Mar 23 21:05:01 2021 +0100

    mac80211: fix TXQ AC confusion
    
    commit 1153a74768a9212daadbb50767aa400bc6a0c9b0 upstream.
    
    Normally, TXQs have
    
      txq->tid = tid;
      txq->ac = ieee80211_ac_from_tid(tid);
    
    However, the special management TXQ actually has
    
      txq->tid = IEEE80211_NUM_TIDS; // 16
      txq->ac = IEEE80211_AC_VO;
    
    This makes sense, but ieee80211_ac_from_tid(16) is the same
    as ieee80211_ac_from_tid(0) which is just IEEE80211_AC_BE.
    
    Now, normally this is fine. However, if the netdev queues
    were stopped, then the code in ieee80211_tx_dequeue() will
    propagate the stop from the interface (vif->txqs_stopped[])
    if the AC 2 (ieee80211_ac_from_tid(txq->tid)) is marked as
    stopped. On wake, however, __ieee80211_wake_txqs() will wake
    the TXQ if AC 0 (txq->ac) is woken up.
    
    If a driver stops all queues with ieee80211_stop_tx_queues()
    and then wakes them again with ieee80211_wake_tx_queues(),
    the ieee80211_wake_txqs() tasklet will run to resync queue
    and TXQ state. If all queues were woken, then what'll happen
    is that _ieee80211_wake_txqs() will run in order of HW queues
    0-3, typically (and certainly for iwlwifi) corresponding to
    ACs 0-3, so it'll call __ieee80211_wake_txqs() for each AC in
    order 0-3.
    
    When __ieee80211_wake_txqs() is called for AC 0 (VO) that'll
    wake up the management TXQ (remember its tid is 16), and the
    driver's wake_tx_queue() will be called. That tries to get a
    frame, which will immediately *stop* the TXQ again, because
    now we check against AC 2, and AC 2 hasn't yet been marked as
    woken up again in sdata->vif.txqs_stopped[] since we're only
    in the __ieee80211_wake_txqs() call for AC 0.
    
    Thus, the management TXQ will never be started again.
    
    Fix this by checking txq->ac directly instead of calculating
    the AC as ieee80211_ac_from_tid(txq->tid).
    
    Fixes: adf8ed01e4fd ("mac80211: add an optional TXQ for other PS-buffered frames")
    Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Link: https://lore.kernel.org/r/20210323210500.bf4d50afea4a.I136ffde910486301f8818f5442e3c9bf8670a9c4@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a4f39f19e6f473a01a0a84fc2be5abf5ad37eb4
Author: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
Date:   Thu Apr 8 18:14:31 2021 +0300

    net: sched: sch_teql: fix null-pointer dereference
    
    commit 1ffbc7ea91606e4abd10eb60de5367f1c86daf5e upstream.
    
    Reproduce:
    
      modprobe sch_teql
      tc qdisc add dev teql0 root teql0
    
    This leads to (for instance in Centos 7 VM) OOPS:
    
    [  532.366633] BUG: unable to handle kernel NULL pointer dereference at 00000000000000a8
    [  532.366733] IP: [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.366825] PGD 80000001376d5067 PUD 137e37067 PMD 0
    [  532.366906] Oops: 0000 [#1] SMP
    [  532.366987] Modules linked in: sch_teql ...
    [  532.367945] CPU: 1 PID: 3026 Comm: tc Kdump: loaded Tainted: G               ------------ T 3.10.0-1062.7.1.el7.x86_64 #1
    [  532.368041] Hardware name: Virtuozzo KVM, BIOS 1.11.0-2.vz7.2 04/01/2014
    [  532.368125] task: ffff8b7d37d31070 ti: ffff8b7c9fdbc000 task.ti: ffff8b7c9fdbc000
    [  532.368224] RIP: 0010:[<ffffffffc06124a8>]  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.368320] RSP: 0018:ffff8b7c9fdbf8e0  EFLAGS: 00010286
    [  532.368394] RAX: ffffffffc0612490 RBX: ffff8b7cb1565e00 RCX: ffff8b7d35ba2000
    [  532.368476] RDX: ffff8b7d35ba2000 RSI: 0000000000000000 RDI: ffff8b7cb1565e00
    [  532.368557] RBP: ffff8b7c9fdbf8f8 R08: ffff8b7d3fd1f140 R09: ffff8b7d3b001600
    [  532.368638] R10: ffff8b7d3b001600 R11: ffffffff84c7d65b R12: 00000000ffffffd8
    [  532.368719] R13: 0000000000008000 R14: ffff8b7d35ba2000 R15: ffff8b7c9fdbf9a8
    [  532.368800] FS:  00007f6a4e872740(0000) GS:ffff8b7d3fd00000(0000) knlGS:0000000000000000
    [  532.368885] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  532.368961] CR2: 00000000000000a8 CR3: 00000001396ee000 CR4: 00000000000206e0
    [  532.369046] Call Trace:
    [  532.369159]  [<ffffffff84c8192e>] qdisc_create+0x36e/0x450
    [  532.369268]  [<ffffffff846a9b49>] ? ns_capable+0x29/0x50
    [  532.369366]  [<ffffffff849afde2>] ? nla_parse+0x32/0x120
    [  532.369442]  [<ffffffff84c81b4c>] tc_modify_qdisc+0x13c/0x610
    [  532.371508]  [<ffffffff84c693e7>] rtnetlink_rcv_msg+0xa7/0x260
    [  532.372668]  [<ffffffff84907b65>] ? sock_has_perm+0x75/0x90
    [  532.373790]  [<ffffffff84c69340>] ? rtnl_newlink+0x890/0x890
    [  532.374914]  [<ffffffff84c8da7b>] netlink_rcv_skb+0xab/0xc0
    [  532.376055]  [<ffffffff84c63708>] rtnetlink_rcv+0x28/0x30
    [  532.377204]  [<ffffffff84c8d400>] netlink_unicast+0x170/0x210
    [  532.378333]  [<ffffffff84c8d7a8>] netlink_sendmsg+0x308/0x420
    [  532.379465]  [<ffffffff84c2f3a6>] sock_sendmsg+0xb6/0xf0
    [  532.380710]  [<ffffffffc034a56e>] ? __xfs_filemap_fault+0x8e/0x1d0 [xfs]
    [  532.381868]  [<ffffffffc034a75c>] ? xfs_filemap_fault+0x2c/0x30 [xfs]
    [  532.383037]  [<ffffffff847ec23a>] ? __do_fault.isra.61+0x8a/0x100
    [  532.384144]  [<ffffffff84c30269>] ___sys_sendmsg+0x3e9/0x400
    [  532.385268]  [<ffffffff847f3fad>] ? handle_mm_fault+0x39d/0x9b0
    [  532.386387]  [<ffffffff84d88678>] ? __do_page_fault+0x238/0x500
    [  532.387472]  [<ffffffff84c31921>] __sys_sendmsg+0x51/0x90
    [  532.388560]  [<ffffffff84c31972>] SyS_sendmsg+0x12/0x20
    [  532.389636]  [<ffffffff84d8dede>] system_call_fastpath+0x25/0x2a
    [  532.390704]  [<ffffffff84d8de21>] ? system_call_after_swapgs+0xae/0x146
    [  532.391753] Code: 00 00 00 00 00 00 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 41 55 41 54 53 48 8b b7 48 01 00 00 48 89 fb <48> 8b 8e a8 00 00 00 48 85 c9 74 43 48 89 ca eb 0f 0f 1f 80 00
    [  532.394036] RIP  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.395127]  RSP <ffff8b7c9fdbf8e0>
    [  532.396179] CR2: 00000000000000a8
    
    Null pointer dereference happens on master->slaves dereference in
    teql_destroy() as master is null-pointer.
    
    When qdisc_create() calls teql_qdisc_init() it imediately fails after
    check "if (m->dev == dev)" because both devices are teql0, and it does
    not set qdisc_priv(sch)->m leaving it zero on error path, then
    qdisc_create() imediately calls teql_destroy() which does not expect
    zero master pointer and we get OOPS.
    
    Fixes: 87b60cfacf9f ("net_sched: fix error recovery at qdisc creation")
    Signed-off-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f5edf14f62a9a721564375d8c3b9e1330731dfc
Author: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
Date:   Fri Mar 26 19:43:42 2021 +0100

    i40e: Fix sparse error: 'vsi->netdev' could be null
    
    commit 6b5674fe6b9bf05394886ebcec62b2d7dae88c42 upstream.
    
    Remove vsi->netdev->name from the trace.
    This is redundant information. With the devinfo trace, the adapter
    is already identifiable.
    
    Previously following error was produced when compiling against sparse.
    i40e_main.c:2571 i40e_sync_vsi_filters() error:
            we previously assumed 'vsi->netdev' could be null (see line 2323)
    
    Fixes: b603f9dc20af ("i40e: Log info when PF is entering and leaving Allmulti mode.")
    Signed-off-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Signed-off-by: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b31d91e9e8c88a11b8f4e83d4876da608116c7f5
Author: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
Date:   Fri Mar 26 19:43:43 2021 +0100

    i40e: Fix sparse warning: missing error code 'err'
    
    commit 8a1e918d833ca5c391c4ded5dc006e2d1ce6d37c upstream.
    
    Set proper return values inside error checking if-statements.
    
    Previously following warning was produced when compiling against sparse.
    i40e_main.c:15162 i40e_init_recovery_mode() warn: missing error code 'err'
    
    Fixes: 4ff0ee1af0169 ("i40e: Introduce recovery mode support")
    Signed-off-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Signed-off-by: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 599200ad44e713634d94873415db64751c36c72a
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Mar 30 16:43:43 2021 -0700

    net: ensure mac header is set in virtio_net_hdr_to_skb()
    
    commit 61431a5907fc36d0738e9a547c7e1556349a03e9 upstream.
    
    Commit 924a9bc362a5 ("net: check if protocol extracted by virtio_net_hdr_set_proto is correct")
    added a call to dev_parse_header_protocol() but mac_header is not yet set.
    
    This means that eth_hdr() reads complete garbage, and syzbot complained about it [1]
    
    This patch resets mac_header earlier, to get more coverage about this change.
    
    Audit of virtio_net_hdr_to_skb() callers shows that this change should be safe.
    
    [1]
    
    BUG: KASAN: use-after-free in eth_header_parse_protocol+0xdc/0xe0 net/ethernet/eth.c:282
    Read of size 2 at addr ffff888017a6200b by task syz-executor313/8409
    
    CPU: 1 PID: 8409 Comm: syz-executor313 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:232
     __kasan_report mm/kasan/report.c:399 [inline]
     kasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416
     eth_header_parse_protocol+0xdc/0xe0 net/ethernet/eth.c:282
     dev_parse_header_protocol include/linux/netdevice.h:3177 [inline]
     virtio_net_hdr_to_skb.constprop.0+0x99d/0xcd0 include/linux/virtio_net.h:83
     packet_snd net/packet/af_packet.c:2994 [inline]
     packet_sendmsg+0x2325/0x52b0 net/packet/af_packet.c:3031
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     sock_no_sendpage+0xf3/0x130 net/core/sock.c:2860
     kernel_sendpage.part.0+0x1ab/0x350 net/socket.c:3631
     kernel_sendpage net/socket.c:3628 [inline]
     sock_sendpage+0xe5/0x140 net/socket.c:947
     pipe_to_sendpage+0x2ad/0x380 fs/splice.c:364
     splice_from_pipe_feed fs/splice.c:418 [inline]
     __splice_from_pipe+0x43e/0x8a0 fs/splice.c:562
     splice_from_pipe fs/splice.c:597 [inline]
     generic_splice_sendpage+0xd4/0x140 fs/splice.c:746
     do_splice_from fs/splice.c:767 [inline]
     do_splice+0xb7e/0x1940 fs/splice.c:1079
     __do_splice+0x134/0x250 fs/splice.c:1144
     __do_sys_splice fs/splice.c:1350 [inline]
     __se_sys_splice fs/splice.c:1332 [inline]
     __x64_sys_splice+0x198/0x250 fs/splice.c:1332
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
    
    Fixes: 924a9bc362a5 ("net: check if protocol extracted by virtio_net_hdr_set_proto is correct")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Balazs Nemeth <bnemeth@redhat.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 158a9b815c54ccb7900b81e7fc09db46bab298c6
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Thu Apr 1 15:00:19 2021 -0700

    bpf, sockmap: Fix sk->prot unhash op reset
    
    commit 1c84b33101c82683dee8b06761ca1f69e78c8ee7 upstream.
    
    In '4da6a196f93b1' we fixed a potential unhash loop caused when
    a TLS socket in a sockmap was removed from the sockmap. This
    happened because the unhash operation on the TLS ctx continued
    to point at the sockmap implementation of unhash even though the
    psock has already been removed. The sockmap unhash handler when a
    psock is removed does the following,
    
     void sock_map_unhash(struct sock *sk)
     {
            void (*saved_unhash)(struct sock *sk);
            struct sk_psock *psock;
    
            rcu_read_lock();
            psock = sk_psock(sk);
            if (unlikely(!psock)) {
                    rcu_read_unlock();
                    if (sk->sk_prot->unhash)
                            sk->sk_prot->unhash(sk);
                    return;
            }
            [...]
     }
    
    The unlikely() case is there to handle the case where psock is detached
    but the proto ops have not been updated yet. But, in the above case
    with TLS and removed psock we never fixed sk_prot->unhash() and unhash()
    points back to sock_map_unhash resulting in a loop. To fix this we added
    this bit of code,
    
     static inline void sk_psock_restore_proto(struct sock *sk,
                                              struct sk_psock *psock)
     {
           sk->sk_prot->unhash = psock->saved_unhash;
    
    This will set the sk_prot->unhash back to its saved value. This is the
    correct callback for a TLS socket that has been removed from the sock_map.
    Unfortunately, this also overwrites the unhash pointer for all psocks.
    We effectively break sockmap unhash handling for any future socks.
    Omitting the unhash operation will leave stale entries in the map if
    a socket transition through unhash, but does not do close() op.
    
    To fix set unhash correctly before calling into tls_update. This way the
    TLS enabled socket will point to the saved unhash() handler.
    
    Fixes: 4da6a196f93b1 ("bpf: Sockmap/tls, during free we may call tcp_bpf_unhash() in loop")
    Reported-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reported-by: Lorenz Bauer <lmb@cloudflare.com>
    Suggested-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/161731441904.68884.15593917809745631972.stgit@john-XPS-13-9370
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0242251d6a975a18bd9f46e01332d3ca4eb850ac
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Mar 29 04:50:02 2021 -0700

    ethernet/netronome/nfp: Fix a use after free in nfp_bpf_ctrl_msg_rx
    
    commit 6e5a03bcba44e080a6bf300194a68ce9bb1e5184 upstream.
    
    In nfp_bpf_ctrl_msg_rx, if
    nfp_ccm_get_type(skb) == NFP_CCM_TYPE_BPF_BPF_EVENT is true, the skb
    will be freed. But the skb is still used by nfp_ccm_rx(&bpf->ccm, skb).
    
    My patch adds a return when the skb was freed.
    
    Fixes: bcf0cafab44fd ("nfp: split out common control message handling code")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a2933c88399c0ebc738db39bbce3ae89786d723
Author: Anirudh Rayabharam <mail@anirudhrb.com>
Date:   Wed Apr 7 22:57:22 2021 +0530

    net: hso: fix null-ptr-deref during tty device unregistration
    
    commit 8a12f8836145ffe37e9c8733dce18c22fb668b66 upstream.
    
    Multiple ttys try to claim the same the minor number causing a double
    unregistration of the same device. The first unregistration succeeds
    but the next one results in a null-ptr-deref.
    
    The get_free_serial_index() function returns an available minor number
    but doesn't assign it immediately. The assignment is done by the caller
    later. But before this assignment, calls to get_free_serial_index()
    would return the same minor number.
    
    Fix this by modifying get_free_serial_index to assign the minor number
    immediately after one is found to be and rename it to obtain_minor()
    to better reflect what it does. Similary, rename set_serial_by_index()
    to release_minor() and modify it to free up the minor number of the
    given hso_serial. Every obtain_minor() should have corresponding
    release_minor() call.
    
    Fixes: 72dc1c096c705 ("HSO: add option hso driver")
    Reported-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Tested-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef2ccf84071fd4c0098cf1cef59a776b441d78a5
Author: Robert Malz <robertx.malz@intel.com>
Date:   Fri Feb 26 13:19:32 2021 -0800

    ice: Cleanup fltr list in case of allocation issues
    
    commit b7eeb52721fe417730fc5adc5cbeeb5fe349ab26 upstream.
    
    When ice_remove_vsi_lkup_fltr is called, by calling
    ice_add_to_vsi_fltr_list local copy of vsi filter list
    is created. If any issues during creation of vsi filter
    list occurs it up for the caller to free already
    allocated memory. This patch ensures proper memory
    deallocation in these cases.
    
    Fixes: 80d144c9ac82 ("ice: Refactor switch rule management structures and functions")
    Signed-off-by: Robert Malz <robertx.malz@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0df579b3de8c17879ae24f1424dbf080637a288f
Author: Jacek Bułatek <jacekx.bulatek@intel.com>
Date:   Fri Feb 26 13:19:29 2021 -0800

    ice: Fix for dereference of NULL pointer
    
    commit 7a91d3f02b04b2fb18c2dfa8b6c4e5a40a2753f5 upstream.
    
    Add handling of allocation fault for ice_vsi_list_map_info.
    
    Also *fi should not be NULL pointer, it is a reference to raw
    data field, so remove this variable and use the reference
    directly.
    
    Fixes: 9daf8208dd4d ("ice: Add support for switch filter programming")
    Signed-off-by: Jacek Bułatek <jacekx.bulatek@intel.com>
    Co-developed-by: Haiyue Wang <haiyue.wang@intel.com>
    Signed-off-by: Haiyue Wang <haiyue.wang@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1aecc578110197edc681a13905b5463238276ddb
Author: Fabio Pricoco <fabio.pricoco@intel.com>
Date:   Fri Feb 26 13:19:24 2021 -0800

    ice: Increase control queue timeout
    
    commit f88c529ac77b3c21819d2cf1dfcfae1937849743 upstream.
    
    250 msec timeout is insufficient for some AQ commands. Advice from FW
    team was to increase the timeout. Increase to 1 second.
    
    Fixes: 7ec59eeac804 ("ice: Add support for control queues")
    Signed-off-by: Fabio Pricoco <fabio.pricoco@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9de1caa1103f4f6cdad780068c270e30a8a1a71e
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Apr 5 19:16:50 2021 +0900

    batman-adv: initialize "struct batadv_tvlv_tt_vlan_data"->reserved field
    
    commit 08c27f3322fec11950b8f1384aa0f3b11d028528 upstream.
    
    KMSAN found uninitialized value at batadv_tt_prepare_tvlv_local_data()
    [1], for commit ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16
    in TT code") inserted 'reserved' field into "struct batadv_tvlv_tt_data"
    and commit 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN
    specific") moved that field to "struct batadv_tvlv_tt_vlan_data" but left
    that field uninitialized.
    
    [1] https://syzkaller.appspot.com/bug?id=07f3e6dba96f0eb3cabab986adcd8a58b9bdbe9d
    
    Reported-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Tested-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16 in TT code")
    Fixes: 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN specific")
    Acked-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79407ae3475e3b196c81e34b2afa15abe9c055fd
Author: Marek Behún <kabel@kernel.org>
Date:   Sun Feb 21 00:11:44 2021 +0100

    ARM: dts: turris-omnia: configure LED[2]/INTn pin as interrupt pin
    
    commit a26c56ae67fa9fbb45a8a232dcd7ebaa7af16086 upstream.
    
    Use the `marvell,reg-init` DT property to configure the LED[2]/INTn pin
    of the Marvell 88E1514 ethernet PHY on Turris Omnia into interrupt mode.
    
    Without this the pin is by default in LED[2] mode, and the Marvell PHY
    driver configures LED[2] into "On - Link, Blink - Activity" mode.
    
    This fixes the issue where the pca9538 GPIO/interrupt controller (which
    can't mask interrupts in HW) received too many interrupts and after a
    time started ignoring the interrupt with error message:
      IRQ 71: nobody cared
    
    There is a work in progress to have the Marvell PHY driver support
    parsing PHY LED nodes from OF and registering the LEDs as Linux LED
    class devices. Once this is done the PHY driver can also automatically
    set the pin into INTn mode if it does not find LED[2] in OF.
    
    Until then, though, we fix this via `marvell,reg-init` DT property.
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Reported-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Fixes: 26ca8b52d6e1 ("ARM: dts: add support for Turris Omnia")
    Cc: Uwe Kleine-König <uwe@kleine-koenig.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Gregory CLEMENT <gregory.clement@bootlin.com>
    Cc: <stable@vger.kernel.org>
    Tested-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dfd74a8c0152f5cf770446e1397dfcf1d0e89da
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Tue Apr 6 12:59:29 2021 +0800

    parisc: avoid a warning on u8 cast for cmpxchg on u8 pointers
    
    commit 4d752e5af63753ab5140fc282929b98eaa4bd12e upstream.
    
    commit b344d6a83d01 ("parisc: add support for cmpxchg on u8 pointers")
    can generate a sparse warning ("cast truncates bits from constant
    value"), which has been reported several times [1] [2] [3].
    
    The original code worked as expected, but anyway, let silence such
    sparse warning as what others did [4].
    
    [1] https://lore.kernel.org/r/202104061220.nRMBwCXw-lkp@intel.com
    [2] https://lore.kernel.org/r/202012291914.T5Agcn99-lkp@intel.com
    [3] https://lore.kernel.org/r/202008210829.KVwn7Xeh%25lkp@intel.com
    [4] https://lore.kernel.org/r/20210315131512.133720-2-jacopo+renesas@jmondi.org
    Cc: Liam Beguin <liambeguin@gmail.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.8+
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 957d0308aa36e10b4a1b51cbc1024d10228826ab
Author: Helge Deller <deller@gmx.de>
Date:   Tue Apr 6 11:32:52 2021 +0200

    parisc: parisc-agp requires SBA IOMMU driver
    
    commit 9054284e8846b0105aad43a4e7174ca29fffbc44 upstream.
    
    Add a dependency to the SBA IOMMU driver to avoid:
    ERROR: modpost: "sba_list" [drivers/char/agp/parisc-agp.ko] undefined!
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 507c2009dc4c869b8757283ba601b50de277d640
Author: Jack Qiu <jack.qiu@huawei.com>
Date:   Fri Apr 9 13:27:35 2021 -0700

    fs: direct-io: fix missing sdio->boundary
    
    commit df41872b68601059dd4a84858952dcae58acd331 upstream.
    
    I encountered a hung task issue, but not a performance one.  I run DIO
    on a device (need lba continuous, for example open channel ssd), maybe
    hungtask in below case:
    
      DIO:                                          Checkpoint:
      get addr A(at boundary), merge into BIO,
      no submit because boundary missing
                                                    flush dirty data(get addr A+1), wait IO(A+1)
                                                    writeback timeout, because DIO(A) didn't submit
      get addr A+2 fail, because checkpoint is doing
    
    dio_send_cur_page() may clear sdio->boundary, so prevent it from missing
    a boundary.
    
    Link: https://lkml.kernel.org/r/20210322042253.38312-1-jack.qiu@huawei.com
    Fixes: b1058b981272 ("direct-io: submit bio after boundary buffer is added to it")
    Signed-off-by: Jack Qiu <jack.qiu@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f495bedb001be895447e07d3dc97bd3ef78b980b
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Apr 9 13:27:29 2021 -0700

    ocfs2: fix deadlock between setattr and dio_end_io_write
    
    commit 90bd070aae6c4fb5d302f9c4b9c88be60c8197ec upstream.
    
    The following deadlock is detected:
    
      truncate -> setattr path is waiting for pending direct IO to be done (inode->i_dio_count become zero) with inode->i_rwsem held (down_write).
    
      PID: 14827  TASK: ffff881686a9af80  CPU: 20  COMMAND: "ora_p005_hrltd9"
       #0  __schedule at ffffffff818667cc
       #1  schedule at ffffffff81866de6
       #2  inode_dio_wait at ffffffff812a2d04
       #3  ocfs2_setattr at ffffffffc05f322e [ocfs2]
       #4  notify_change at ffffffff812a5a09
       #5  do_truncate at ffffffff812808f5
       #6  do_sys_ftruncate.constprop.18 at ffffffff81280cf2
       #7  sys_ftruncate at ffffffff81280d8e
       #8  do_syscall_64 at ffffffff81003949
       #9  entry_SYSCALL_64_after_hwframe at ffffffff81a001ad
    
    dio completion path is going to complete one direct IO (decrement
    inode->i_dio_count), but before that it hung at locking inode->i_rwsem:
    
       #0  __schedule+700 at ffffffff818667cc
       #1  schedule+54 at ffffffff81866de6
       #2  rwsem_down_write_failed+536 at ffffffff8186aa28
       #3  call_rwsem_down_write_failed+23 at ffffffff8185a1b7
       #4  down_write+45 at ffffffff81869c9d
       #5  ocfs2_dio_end_io_write+180 at ffffffffc05d5444 [ocfs2]
       #6  ocfs2_dio_end_io+85 at ffffffffc05d5a85 [ocfs2]
       #7  dio_complete+140 at ffffffff812c873c
       #8  dio_aio_complete_work+25 at ffffffff812c89f9
       #9  process_one_work+361 at ffffffff810b1889
      #10  worker_thread+77 at ffffffff810b233d
      #11  kthread+261 at ffffffff810b7fd5
      #12  ret_from_fork+62 at ffffffff81a0035e
    
    Thus above forms ABBA deadlock.  The same deadlock was mentioned in
    upstream commit 28f5a8a7c033 ("ocfs2: should wait dio before inode lock
    in ocfs2_setattr()").  It seems that that commit only removed the
    cluster lock (the victim of above dead lock) from the ABBA deadlock
    party.
    
    End-user visible effects: Process hang in truncate -> ocfs2_setattr path
    and other processes hang at ocfs2_dio_end_io_write path.
    
    This is to fix the deadlock itself.  It removes inode_lock() call from
    dio completion path to remove the deadlock and add ip_alloc_sem lock in
    setattr path to synchronize the inode modifications.
    
    [wen.gang.wang@oracle.com: remove the "had_alloc_lock" as suggested]
      Link: https://lkml.kernel.org/r/20210402171344.1605-1-wen.gang.wang@oracle.com
    
    Link: https://lkml.kernel.org/r/20210331203654.3911-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52999a66c0b303cc5a1889d51870ceedecc5298b
Author: Mike Rapoport <rppt@kernel.org>
Date:   Fri Apr 9 13:27:23 2021 -0700

    nds32: flush_dcache_page: use page_mapping_file to avoid races with swapoff
    
    commit a3a8833dffb7e7329c2586b8bfc531adb503f123 upstream.
    
    Commit cb9f753a3731 ("mm: fix races between swapoff and flush dcache")
    updated flush_dcache_page implementations on several architectures to
    use page_mapping_file() in order to avoid races between page_mapping()
    and swapoff().
    
    This update missed arch/nds32 and there is a possibility of a race
    there.
    
    Replace page_mapping() with page_mapping_file() in nds32 implementation
    of flush_dcache_page().
    
    Link: https://lkml.kernel.org/r/20210330175126.26500-1-rppt@kernel.org
    Fixes: cb9f753a3731 ("mm: fix races between swapoff and flush dcache")
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Acked-by: Greentime Hu <green.hu@gmail.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Nick Hu <nickhu@andestech.com>
    Cc: Vincent Chen <deanbo422@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75fd54ea1b6088b67e5ba65cf94bf6d774c5eab2
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Apr 9 13:27:32 2021 -0700

    ia64: fix user_stack_pointer() for ptrace()
    
    commit 7ad1e366167837daeb93d0bacb57dee820b0b898 upstream.
    
    ia64 has two stacks:
    
     - memory stack (or stack), pointed at by by r12
    
     - register backing store (register stack), pointed at by
       ar.bsp/ar.bspstore with complications around dirty
       register frame on CPU.
    
    In [1] Dmitry noticed that PTRACE_GET_SYSCALL_INFO returns the register
    stack instead memory stack.
    
    The bug comes from the fact that user_stack_pointer() and
    current_user_stack_pointer() don't return the same register:
    
      ulong user_stack_pointer(struct pt_regs *regs) { return regs->ar_bspstore; }
      #define current_user_stack_pointer() (current_pt_regs()->r12)
    
    The change gets both back in sync.
    
    I think ptrace(PTRACE_GET_SYSCALL_INFO) is the only affected user by
    this bug on ia64.
    
    The change fixes 'rt_sigreturn.gen.test' strace test where it was
    observed initially.
    
    Link: https://bugs.gentoo.org/769614 [1]
    Link: https://lkml.kernel.org/r/20210331084447.2561532-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a92396bf8dda73800e3f2a141df8c78ae1d504f
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Fri Apr 9 13:27:26 2021 -0700

    gcov: re-fix clang-11+ support
    
    commit 9562fd132985ea9185388a112e50f2a51557827d upstream.
    
    LLVM changed the expected function signature for llvm_gcda_emit_function()
    in the clang-11 release.  Users of clang-11 or newer may have noticed
    their kernels producing invalid coverage information:
    
      $ llvm-cov gcov -a -c -u -f -b <input>.gcda -- gcno=<input>.gcno
      1 <func>: checksum mismatch, \
        (<lineno chksum A>, <cfg chksum B>) != (<lineno chksum A>, <cfg chksum C>)
      2 Invalid .gcda File!
      ...
    
    Fix up the function signatures so calling this function interprets its
    parameters correctly and computes the correct cfg checksum.  In
    particular, in clang-11, the additional checksum is no longer optional.
    
    Link: https://reviews.llvm.org/rG25544ce2df0daa4304c07e64b9c8b0f7df60c11d
    Link: https://lkml.kernel.org/r/20210408184631.1156669-1-ndesaulniers@google.com
    Reported-by: Prasad Sodagudi <psodagud@quicinc.com>
    Tested-by: Prasad Sodagudi <psodagud@quicinc.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Cc: <stable@vger.kernel.org>    [5.4+]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit c2b3cf2c70d6ae4668f96386f6c444c4c391fde9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 2 10:23:17 2021 +0200

    drm/i915: Fix invalid access to ACPI _DSM objects
    
    commit b6a37a93c9ac3900987c79b726d0bb3699d8db4e upstream.
    
    intel_dsm_platform_mux_info() tries to parse the ACPI package data
    from _DSM for the debug information, but it assumes the fixed format
    without checking what values are stored in the elements actually.
    When an unexpected value is returned from BIOS, it may lead to GPF or
    NULL dereference, as reported recently.
    
    Add the checks of the contents in the returned values and skip the
    values for invalid cases.
    
    v1->v2: Check the info contents before dereferencing, too
    
    BugLink: http://bugzilla.opensuse.org/show_bug.cgi?id=1184074
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210402082317.871-1-tiwai@suse.de
    (cherry picked from commit 337d7a1621c7f02af867229990ac67c97da1b53a)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e8f850e26b28a98f44e790df901f6c7aa209008
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Wed Mar 24 20:36:04 2021 +0100

    net: dsa: lantiq_gswip: Let GSWIP automatically set the xMII clock
    
    commit 3e6fdeb28f4c331acbd27bdb0effc4befd4ef8e8 upstream.
    
    The xMII interface clock depends on the PHY interface (MII, RMII, RGMII)
    as well as the current link speed. Explicitly configure the GSWIP to
    automatically select the appropriate xMII interface clock.
    
    This fixes an issue seen by some users where ports using an external
    RMII or RGMII PHY were deaf (no RX or TX traffic could be seen). Most
    likely this is due to an "invalid" xMII clock being selected either by
    the bootloader or hardware-defaults.
    
    Fixes: 14fceff4771e51 ("net: dsa: Add Lantiq / Intel DSA driver for vrx200")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6649b5eda13142b1d7b416bb4b1c66c50657433a
Author: Muhammad Usama Anjum <musamaanjum@gmail.com>
Date:   Fri Apr 9 03:01:29 2021 +0500

    net: ipv6: check for validity before dereferencing cfg->fc_nlinfo.nlh
    
    commit 864db232dc7036aa2de19749c3d5be0143b24f8f upstream.
    
    nlh is being checked for validtity two times when it is dereferenced in
    this function. Check for validity again when updating the flags through
    nlh pointer to make the dereferencing safe.
    
    CC: <stable@vger.kernel.org>
    Addresses-Coverity: ("NULL pointer dereference")
    Signed-off-by: Muhammad Usama Anjum <musamaanjum@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a09acbb53934fab5ebfcf97e4f967327abd0c121
Author: Luca Fancellu <luca.fancellu@arm.com>
Date:   Tue Apr 6 11:51:04 2021 +0100

    xen/evtchn: Change irq_info lock to raw_spinlock_t
    
    commit d120198bd5ff1d41808b6914e1eb89aff937415c upstream.
    
    Unmask operation must be called with interrupt disabled,
    on preempt_rt spin_lock_irqsave/spin_unlock_irqrestore
    don't disable/enable interrupts, so use raw_* implementation
    and change lock variable in struct irq_info from spinlock_t
    to raw_spinlock_t
    
    Cc: stable@vger.kernel.org
    Fixes: 25da4618af24 ("xen/events: don't unmask an event channel when an eoi is pending")
    Signed-off-by: Luca Fancellu <luca.fancellu@arm.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Wei Liu <wei.liu@kernel.org>
    Link: https://lore.kernel.org/r/20210406105105.10141-1-luca.fancellu@arm.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa0cff2e075152d474b0b01233ac0adfcfc0c0db
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:13 2021 +0800

    nfc: Avoid endless loops caused by repeated llcp_sock_connect()
    
    commit 4b5db93e7f2afbdfe3b78e37879a85290187e6f1 upstream.
    
    When sock_wait_state() returns -EINPROGRESS, "sk->sk_state" is
     LLCP_CONNECTING. In this case, llcp_sock_connect() is repeatedly invoked,
     nfc_llcp_sock_link() will add sk to local->connecting_sockets twice.
     sk->sk_node->next will point to itself, that will make an endless loop
     and hang-up the system.
    To fix it, check whether sk->sk_state is LLCP_CONNECTING in
     llcp_sock_connect() to avoid repeated invoking.
    
    Fixes: b4011239a08e ("NFC: llcp: Fix non blocking sockets connections")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.11
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 404daa4d62a364623b48349eb73a18579edf51ac
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:12 2021 +0800

    nfc: fix memory leak in llcp_sock_connect()
    
    commit 7574fcdbdcb335763b6b322f6928dc0fd5730451 upstream.
    
    In llcp_sock_connect(), use kmemdup to allocate memory for
     "llcp_sock->service_name". The memory is not released in the sock_unlink
    label of the subsequent failure branch.
    As a result, memory leakage occurs.
    
    fix CVE-2020-25672
    
    Fixes: d646960f7986 ("NFC: Initial LLCP support")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.3
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41bc58ba0945d69578f60c6f06729d8e2dc327dc
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:11 2021 +0800

    nfc: fix refcount leak in llcp_sock_connect()
    
    commit 8a4cd82d62b5ec7e5482333a72b58a4eea4979f0 upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_connect(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25671
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c89903c9eff219a4695e63715cf922748d743f65
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:10 2021 +0800

    nfc: fix refcount leak in llcp_sock_bind()
    
    commit c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_bind(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25670
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12289d9840d65e361a3dfaa375e6a3a6a7f8171f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Mar 24 14:27:10 2021 +0100

    ASoC: intel: atom: Stop advertising non working S24LE support
    
    commit aa65bacdb70e549a81de03ec72338e1047842883 upstream.
    
    The SST firmware's media and deep-buffer inputs are hardcoded to
    S16LE, the corresponding DAIs don't have a hw_params callback and
    their prepare callback also does not take the format into account.
    
    So far the advertising of non working S24LE support has not caused
    issues because pulseaudio defaults to S16LE, but changing pulse-audio's
    config to use S24LE will result in broken sound.
    
    Pipewire is replacing pulse now and pipewire prefers S24LE over S16LE
    when available, causing the problem of the broken S24LE support to
    come to the surface now.
    
    Cc: stable@vger.kernel.org
    BugLink: https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/866
    Fixes: 098c2cd281409 ("ASoC: Intel: Atom: add 24-bit support for media playback and capture")
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210324132711.216152-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c99780f782aa7a370ad995f8609be54f35a083b9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 7 11:57:30 2021 +0200

    ALSA: hda/realtek: Fix speaker amp setup on Acer Aspire E1
    
    commit c8426b2700b57d2760ff335840a02f66a64b6044 upstream.
    
    We've got a report about Acer Aspire E1 (PCI SSID 1025:0840) that
    loses the speaker output after resume.  With the comparison of COEF
    dumps, it was identified that the COEF 0x0d bits 0x6000 corresponds to
    the speaker amp.
    
    This patch adds the specific quirk for the device to restore the COEF
    bits at the codec (re-)initialization.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1183869
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210407095730.12560-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da8f3cc5771e94eea9ae1d08295c3ee0d337c972
Author: Jonas Holmberg <jonashg@axis.com>
Date:   Wed Apr 7 09:54:28 2021 +0200

    ALSA: aloop: Fix initialization of controls
    
    commit 168632a495f49f33a18c2d502fc249d7610375e9 upstream.
    
    Add a control to the card before copying the id so that the numid field
    is initialized in the copy. Otherwise the numid field of active_id,
    format_id, rate_id and channels_id will be the same (0) and
    snd_ctl_notify() will not queue the events properly.
    
    Signed-off-by: Jonas Holmberg <jonashg@axis.com>
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210407075428.2666787-1-jonashg@axis.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8732c2df9d15f59b08db28503ca16fec01969b05
Author: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date:   Wed Mar 3 18:49:49 2021 +0100

    counter: stm32-timer-cnt: fix ceiling miss-alignment with reload register
    
    commit b14d72ac731753708a7c1a6b3657b9312b6f0042 upstream
    
    Ceiling value may be miss-aligned with what's actually configured into the
    ARR register. This is seen after probe as currently the ARR value is zero,
    whereas ceiling value is set to the maximum. So:
    - reading ceiling reports zero
    - in case the counter gets enabled without any prior configuration,
      it won't count.
    - in case the function gets set by the user 1st, (priv->ceiling) is used.
    
    Fix it by getting rid of the cached "priv->ceiling" variable. Rather use
    the ARR register value directly by using regmap read or write when needed.
    There should be no drawback on performance as priv->ceiling isn't used in
    performance critical path.
    There's also no point in writing ARR while setting function (sms), so
    it can be safely removed.
    
    Fixes: ad29937e206f ("counter: Add STM32 Timer quadrature encoder")
    Suggested-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Acked-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1614793789-10346-1-git-send-email-fabrice.gasnier@foss.st.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    [sudip: adjuct context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
