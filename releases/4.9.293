commit 98d396d082d499d85ea373e3f8d6e7906c232cda
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Dec 14 10:04:50 2021 +0100

    Linux 4.9.293
    
    Link: https://lore.kernel.org/r/20211213092926.578829548@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 006318629e55e9d130989597d54351ee779ecd41
Author: Vladimir Murzin <vladimir.murzin@arm.com>
Date:   Wed Dec 1 11:02:58 2021 +0000

    irqchip: nvic: Fix offset for Interrupt Priority Offsets
    
    commit c5e0cbe2858d278a27d5b3fe31890aea5be064c4 upstream.
    
    According to ARM(v7M) ARM Interrupt Priority Offsets located at
    0xE000E400-0xE000E5EC, while 0xE000E300-0xE000E33C covers read-only
    Interrupt Active Bit Registers
    
    Fixes: 292ec080491d ("irqchip: Add support for ARMv7-M NVIC")
    Signed-off-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20211201110259.84857-1-vladimir.murzin@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9335a839d1c79b4086b8363ab14cd59e6a724693
Author: Wudi Wang <wangwudi@hisilicon.com>
Date:   Wed Dec 8 09:54:29 2021 +0800

    irqchip/irq-gic-v3-its.c: Force synchronisation when issuing INVALL
    
    commit b383a42ca523ce54bcbd63f7c8f3cf974abc9b9a upstream.
    
    INVALL CMD specifies that the ITS must ensure any caching associated with
    the interrupt collection defined by ICID is consistent with the LPI
    configuration tables held in memory for all Redistributors. SYNC is
    required to ensure that INVALL is executed.
    
    Currently, LPI configuration data may be inconsistent with that in the
    memory within a short period of time after the INVALL command is executed.
    
    Signed-off-by: Wudi Wang <wangwudi@hisilicon.com>
    Signed-off-by: Shaokun Zhang <zhangshaokun@hisilicon.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Fixes: cc2d3216f53c ("irqchip: GICv3: ITS command queue")
    Link: https://lore.kernel.org/r/20211208015429.5007-1-zhangshaokun@hisilicon.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f34bcbbc525ef150fb002a1c84b6e0a4d5ac6dd7
Author: Pali Roh치r <pali@kernel.org>
Date:   Thu Nov 25 14:00:57 2021 +0100

    irqchip/armada-370-xp: Fix support for Multi-MSI interrupts
    
    commit d0a553502efd545c1ce3fd08fc4d423f8e4ac3d6 upstream.
    
    irq-armada-370-xp driver already sets MSI_FLAG_MULTI_PCI_MSI flag into
    msi_domain_info structure. But allocated interrupt numbers for Multi-MSI
    needs to be properly aligned otherwise devices send MSI interrupt with
    wrong number.
    
    Fix this issue by using function bitmap_find_free_region() instead of
    bitmap_find_next_zero_area() to allocate aligned interrupt numbers.
    
    Signed-off-by: Pali Roh치r <pali@kernel.org>
    Fixes: a71b9412c90c ("irqchip/armada-370-xp: Allow allocation of multiple MSIs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20211125130057.26705-2-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8940242aa81ba121f6f0df0f5be36ce61ff9b4a
Author: Pali Roh치r <pali@kernel.org>
Date:   Thu Nov 25 14:00:56 2021 +0100

    irqchip/armada-370-xp: Fix return value of armada_370_xp_msi_alloc()
    
    commit ce20eff57361e72878a772ef08b5239d3ae102b6 upstream.
    
    IRQ domain alloc function should return zero on success. Non-zero value
    indicates failure.
    
    Signed-off-by: Pali Roh치r <pali@kernel.org>
    Fixes: fcc392d501bd ("irqchip/armada-370-xp: Use the generic MSI infrastructure")
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20211125130057.26705-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60a55b9d91ba99eb8cf015bc46dc2de05e168a15
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Oct 25 20:41:59 2021 +0800

    iio: accel: kxcjk-1013: Fix possible memory leak in probe and remove
    
    commit 70c9774e180d151abaab358108e3510a8e615215 upstream.
    
    When ACPI type is ACPI_SMO8500, the data->dready_trig will not be set, the
    memory allocated by iio_triggered_buffer_setup() will not be freed, and cause
    memory leak as follows:
    
    unreferenced object 0xffff888009551400 (size 512):
      comm "i2c-SMO8500-125", pid 911, jiffies 4294911787 (age 83.852s)
      hex dump (first 32 bytes):
        02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 20 e2 e5 c0 ff ff ff ff  ........ .......
      backtrace:
        [<0000000041ce75ee>] kmem_cache_alloc_trace+0x16d/0x360
        [<000000000aeb17b0>] iio_kfifo_allocate+0x41/0x130 [kfifo_buf]
        [<000000004b40c1f5>] iio_triggered_buffer_setup_ext+0x2c/0x210 [industrialio_triggered_buffer]
        [<000000004375b15f>] kxcjk1013_probe+0x10c3/0x1d81 [kxcjk_1013]
    
    Fix it by remove data->dready_trig condition in probe and remove.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: a25691c1f967 ("iio: accel: kxcjk1013: allow using an external trigger")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Cc: <Stable@vger.kernel.org>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20211025124159.2700301-1-yangyingliang@huawei.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f700e7121efb7b110863709daec545849634a3c8
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 1 15:40:54 2021 +0100

    iio: itg3200: Call iio_trigger_notify_done() on error
    
    commit 67fe29583e72b2103abb661bb58036e3c1f00277 upstream.
    
    IIO trigger handlers must call iio_trigger_notify_done() when done. This
    must be done even when an error occurred. Otherwise the trigger will be
    seen as busy indefinitely and the trigger handler will never be called
    again.
    
    The itg3200 driver neglects to call iio_trigger_notify_done() when there is
    an error reading the gyro data. Fix this by making sure that
    iio_trigger_notify_done() is included in the error exit path.
    
    Fixes: 9dbf091da080 ("iio: gyro: Add itg3200")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Link: https://lore.kernel.org/r/20211101144055.13858-1-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16c23e094076842f4e69f7cad5e9bad71494b29b
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Oct 24 19:12:50 2021 +0200

    iio: kxsd9: Don't return error code in trigger handler
    
    commit 45febe0d63917ee908198c5be08511c64ee1790a upstream.
    
    IIO trigger handlers need to return one of the irqreturn_t values.
    Returning an error code is not supported.
    
    The kxsd9 interrupt handler returns an error code if reading the data
    registers fails. In addition when exiting due to an error the trigger
    handler does not call `iio_trigger_notify_done()`. Which when not done
    keeps the triggered disabled forever.
    
    Modify the code so that the function returns a valid irqreturn_t value as
    well as calling `iio_trigger_notify_done()` on all exit paths.
    
    Since we can't return the error code make sure to at least log it as part
    of the error message.
    
    Fixes: 0427a106a98a ("iio: accel: kxsd9: Add triggered buffer handling")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20211024171251.22896-2-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feb122dda331eb33917dfbb8fd5e36830d822b46
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Oct 24 19:12:49 2021 +0200

    iio: ltr501: Don't return error code in trigger handler
    
    commit ef9d67fa72c1b149a420587e435a3e888bdbf74f upstream.
    
    IIO trigger handlers need to return one of the irqreturn_t values.
    Returning an error code is not supported.
    
    The ltr501 interrupt handler gets this right for most error paths, but
    there is one case where it returns the error code.
    
    In addition for this particular case the trigger handler does not call
    `iio_trigger_notify_done()`. Which when not done keeps the triggered
    disabled forever.
    
    Modify the code so that the function returns a valid irqreturn_t value as
    well as calling `iio_trigger_notify_done()` on all exit paths.
    
    Fixes: 2690be905123 ("iio: Add Lite-On ltr501 ambient light / proximity sensor driver")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Link: https://lore.kernel.org/r/20211024171251.22896-1-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb75cc4740d81264cd5bcb0e17d961d018a8be96
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Oct 24 11:26:59 2021 +0200

    iio: mma8452: Fix trigger reference couting
    
    commit cd0082235783f814241a1c9483fb89e405f4f892 upstream.
    
    The mma8452 driver directly assigns a trigger to the struct iio_dev. The
    IIO core when done using this trigger will call `iio_trigger_put()` to drop
    the reference count by 1.
    
    Without the matching `iio_trigger_get()` in the driver the reference count
    can reach 0 too early, the trigger gets freed while still in use and a
    use-after-free occurs.
    
    Fix this by getting a reference to the trigger before assigning it to the
    IIO device.
    
    Fixes: ae6d9ce05691 ("iio: mma8452: Add support for interrupt driven triggers.")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Link: https://lore.kernel.org/r/20211024092700.6844-1-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bcb9b058f1dbfcd9e4678ffdcb88c60e2e82f3c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Oct 24 19:12:51 2021 +0200

    iio: stk3310: Don't return error code in interrupt handler
    
    commit 8e1eeca5afa7ba84d885987165dbdc5decf15413 upstream.
    
    Interrupt handlers must return one of the irqreturn_t values. Returning a
    error code is not supported.
    
    The stk3310 event interrupt handler returns an error code when reading the
    flags register fails.
    
    Fix the implementation to always return an irqreturn_t value.
    
    Fixes: 3dd477acbdd1 ("iio: light: Add threshold interrupt support for STK3310")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Link: https://lore.kernel.org/r/20211024171251.22896-3-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 994d611bfe38762a30ed60db49af8cdeaf7586dc
Author: Pavel Hofman <pavel.hofman@ivitera.com>
Date:   Fri Dec 10 09:52:19 2021 +0100

    usb: core: config: using bit mask instead of individual bits
    
    commit ca5737396927afd4d57b133fd2874bbcf3421cdb upstream.
    
    Using standard USB_EP_MAXP_MULT_MASK instead of individual bits for
    extracting multiple-transactions bits from wMaxPacketSize value.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Link: https://lore.kernel.org/r/20211210085219.16796-2-pavel.hofman@ivitera.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35531ec82046dc072bb841c452b7cea193af42f3
Author: Pavel Hofman <pavel.hofman@ivitera.com>
Date:   Fri Dec 10 09:52:18 2021 +0100

    usb: core: config: fix validation of wMaxPacketValue entries
    
    commit 1a3910c80966e4a76b25ce812f6bea0ef1b1d530 upstream.
    
    The checks performed by commit aed9d65ac327 ("USB: validate
    wMaxPacketValue entries in endpoint descriptors") require that initial
    value of the maxp variable contains both maximum packet size bits
    (10..0) and multiple-transactions bits (12..11). However, the existing
    code assings only the maximum packet size bits. This patch assigns all
    bits of wMaxPacketSize to the variable.
    
    Fixes: aed9d65ac327 ("USB: validate wMaxPacketValue entries in endpoint descriptors")
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Link: https://lore.kernel.org/r/20211210085219.16796-1-pavel.hofman@ivitera.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc3897592775f232e877c27a573c9585161b7188
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 9 19:02:15 2021 +0100

    USB: gadget: zero allocate endpoint 0 buffers
    
    commit 86ebbc11bb3f60908a51f3e41a17e3f477c2eaa3 upstream.
    
    Under some conditions, USB gadget devices can show allocated buffer
    contents to a host.  Fix this up by zero-allocating them so that any
    extra data will all just be zeros.
    
    Reported-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Tested-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2ca6859ea96c6d4c6ad3d6873a308a004882419
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 9 18:59:27 2021 +0100

    USB: gadget: detect too-big endpoint 0 requests
    
    commit 153a2d7e3350cc89d406ba2d35be8793a64c2038 upstream.
    
    Sometimes USB hosts can ask for buffers that are too large from endpoint
    0, which should not be allowed.  If this happens for OUT requests, stall
    the endpoint, but for IN requests, trim the request size to the endpoint
    buffer size.
    
    Co-developed-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17b6d8a40f3af8e6006a6fb3a9bd8be479935d83
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Dec 7 11:24:16 2021 +0300

    net/qla3xxx: fix an error code in ql_adapter_up()
    
    commit d17b9737c2bc09b4ac6caf469826e5a7ce3ffab7 upstream.
    
    The ql_wait_for_drvr_lock() fails and returns false, then this
    function should return an error code instead of returning success.
    
    The other problem is that the success path prints an error message
    netdev_err(ndev, "Releasing driver lock\n");  Delete that and
    re-order the code a little to make it more clear.
    
    Fixes: 5a4faa873782 ("[PATCH] qla3xxx NIC driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211207082416.GA16110@kili
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f01e02acc52eabd7185c8fc7e934ab2eb527e1bc
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Dec 6 08:53:29 2021 -0800

    net, neigh: clear whole pneigh_entry at alloc time
    
    commit e195e9b5dee6459d8c8e6a314cc71a644a0537fd upstream.
    
    Commit 2c611ad97a82 ("net, neigh: Extend neigh->flags to 32 bit
    to allow for extensions") enables a new KMSAM warning [1]
    
    I think the bug is actually older, because the following intruction
    only occurred if ndm->ndm_flags had NTF_PROXY set.
    
            pn->flags = ndm->ndm_flags;
    
    Let's clear all pneigh_entry fields at alloc time.
    
    [1]
    BUG: KMSAN: uninit-value in pneigh_fill_info+0x986/0xb30 net/core/neighbour.c:2593
     pneigh_fill_info+0x986/0xb30 net/core/neighbour.c:2593
     pneigh_dump_table net/core/neighbour.c:2715 [inline]
     neigh_dump_info+0x1e3f/0x2c60 net/core/neighbour.c:2832
     netlink_dump+0xaca/0x16a0 net/netlink/af_netlink.c:2265
     __netlink_dump_start+0xd1c/0xee0 net/netlink/af_netlink.c:2370
     netlink_dump_start include/linux/netlink.h:254 [inline]
     rtnetlink_rcv_msg+0x181b/0x18c0 net/core/rtnetlink.c:5534
     netlink_rcv_skb+0x447/0x800 net/netlink/af_netlink.c:2491
     rtnetlink_rcv+0x50/0x60 net/core/rtnetlink.c:5589
     netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
     netlink_unicast+0x1095/0x1360 net/netlink/af_netlink.c:1345
     netlink_sendmsg+0x16f3/0x1870 net/netlink/af_netlink.c:1916
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg net/socket.c:724 [inline]
     sock_write_iter+0x594/0x690 net/socket.c:1057
     call_write_iter include/linux/fs.h:2162 [inline]
     new_sync_write fs/read_write.c:503 [inline]
     vfs_write+0x1318/0x2030 fs/read_write.c:590
     ksys_write+0x28c/0x520 fs/read_write.c:643
     __do_sys_write fs/read_write.c:655 [inline]
     __se_sys_write fs/read_write.c:652 [inline]
     __x64_sys_write+0xdb/0x120 fs/read_write.c:652
     do_syscall_x64 arch/x86/entry/common.c:51 [inline]
     do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:524 [inline]
     slab_alloc_node mm/slub.c:3251 [inline]
     slab_alloc mm/slub.c:3259 [inline]
     __kmalloc+0xc3c/0x12d0 mm/slub.c:4437
     kmalloc include/linux/slab.h:595 [inline]
     pneigh_lookup+0x60f/0xd70 net/core/neighbour.c:766
     arp_req_set_public net/ipv4/arp.c:1016 [inline]
     arp_req_set+0x430/0x10a0 net/ipv4/arp.c:1032
     arp_ioctl+0x8d4/0xb60 net/ipv4/arp.c:1232
     inet_ioctl+0x4ef/0x820 net/ipv4/af_inet.c:947
     sock_do_ioctl net/socket.c:1118 [inline]
     sock_ioctl+0xa3f/0x13e0 net/socket.c:1235
     vfs_ioctl fs/ioctl.c:51 [inline]
     __do_sys_ioctl fs/ioctl.c:874 [inline]
     __se_sys_ioctl+0x2df/0x4a0 fs/ioctl.c:860
     __x64_sys_ioctl+0xd8/0x110 fs/ioctl.c:860
     do_syscall_x64 arch/x86/entry/common.c:51 [inline]
     do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    CPU: 1 PID: 20001 Comm: syz-executor.0 Not tainted 5.16.0-rc3-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 62dd93181aaa ("[IPV6] NDISC: Set per-entry is_router flag in Proxy NA.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Roopa Prabhu <roopa@nvidia.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20211206165329.1049835-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99967d7969091f69070f65a22f70908837234771
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Mon Dec 6 21:54:57 2021 +0800

    net: fec: only clear interrupt of handling queue in fec_enet_rx_queue()
    
    commit b5bd95d17102b6719e3531d627875b9690371383 upstream.
    
    Background:
    We have a customer is running a Profinet stack on the 8MM which receives and
    responds PNIO packets every 4ms and PNIO-CM packets every 40ms. However, from
    time to time the received PNIO-CM package is "stock" and is only handled when
    receiving a new PNIO-CM or DCERPC-Ping packet (tcpdump shows the PNIO-CM and
    the DCERPC-Ping packet at the same time but the PNIO-CM HW timestamp is from
    the expected 40 ms and not the 2s delay of the DCERPC-Ping).
    
    After debugging, we noticed PNIO, PNIO-CM and DCERPC-Ping packets would
    be handled by different RX queues.
    
    The root cause should be driver ack all queues' interrupt when handle a
    specific queue in fec_enet_rx_queue(). The blamed patch is introduced to
    receive as much packets as possible once to avoid interrupt flooding.
    But it's unreasonable to clear other queues'interrupt when handling one
    queue, this patch tries to fix it.
    
    Fixes: ed63f1dcd578 (net: fec: clear receive interrupts before processing a packet)
    Cc: Russell King <rmk+kernel@arm.linux.org.uk>
    Reported-by: Nicolas Diaz <nicolas.diaz@nxp.com>
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Link: https://lore.kernel.org/r/20211206135457.15946-1-qiangqing.zhang@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 150d7662a23464d8704a890cca17855ec28267d4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 3 13:11:28 2021 +0300

    net: altera: set a couple error code in probe()
    
    commit badd7857f5c933a3dc34942a2c11d67fdbdc24de upstream.
    
    There are two error paths which accidentally return success instead of
    a negative error code.
    
    Fixes: bbd2190ce96d ("Altera TSE: Add main and header file for Altera Ethernet Driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7168382e163f73bc4512312d5cf5283f4c773ce6
Author: Lee Jones <lee.jones@linaro.org>
Date:   Thu Dec 2 14:34:37 2021 +0000

    net: cdc_ncm: Allow for dwNtbOutMaxSize to be unset or zero
    
    commit 2be6d4d16a0849455a5c22490e3c5983495fed00 upstream.
    
    Currently, due to the sequential use of min_t() and clamp_t() macros,
    in cdc_ncm_check_tx_max(), if dwNtbOutMaxSize is not set, the logic
    sets tx_max to 0.  This is then used to allocate the data area of the
    SKB requested later in cdc_ncm_fill_tx_frame().
    
    This does not cause an issue presently because when memory is
    allocated during initialisation phase of SKB creation, more memory
    (512b) is allocated than is required for the SKB headers alone (320b),
    leaving some space (512b - 320b = 192b) for CDC data (172b).
    
    However, if more elements (for example 3 x u64 = [24b]) were added to
    one of the SKB header structs, say 'struct skb_shared_info',
    increasing its original size (320b [320b aligned]) to something larger
    (344b [384b aligned]), then suddenly the CDC data (172b) no longer
    fits in the spare SKB data area (512b - 384b = 128b).
    
    Consequently the SKB bounds checking semantics fails and panics:
    
      skbuff: skb_over_panic: text:ffffffff830a5b5f len:184 put:172   \
         head:ffff888119227c00 data:ffff888119227c00 tail:0xb8 end:0x80 dev:<NULL>
    
      ------------[ cut here ]------------
      kernel BUG at net/core/skbuff.c:110!
      RIP: 0010:skb_panic+0x14f/0x160 net/core/skbuff.c:106
      <snip>
      Call Trace:
       <IRQ>
       skb_over_panic+0x2c/0x30 net/core/skbuff.c:115
       skb_put+0x205/0x210 net/core/skbuff.c:1877
       skb_put_zero include/linux/skbuff.h:2270 [inline]
       cdc_ncm_ndp16 drivers/net/usb/cdc_ncm.c:1116 [inline]
       cdc_ncm_fill_tx_frame+0x127f/0x3d50 drivers/net/usb/cdc_ncm.c:1293
       cdc_ncm_tx_fixup+0x98/0xf0 drivers/net/usb/cdc_ncm.c:1514
    
    By overriding the max value with the default CDC_NCM_NTB_MAX_SIZE_TX
    when not offered through the system provided params, we ensure enough
    data space is allocated to handle the CDC data, meaning no crash will
    occur.
    
    Cc: Oliver Neukum <oliver@neukum.org>
    Fixes: 289507d3364f9 ("net: cdc_ncm: use sysfs for rx/tx aggregation tuning")
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Reviewed-by: Bj칮rn Mork <bjorn@mork.no>
    Link: https://lore.kernel.org/r/20211202143437.1411410-1-lee.jones@linaro.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cfcd119c13f28c733e620dd57f8ccf62f96126f
Author: Davidlohr Bueso <dave@stgolabs.net>
Date:   Fri Dec 10 10:20:58 2021 -0800

    block: fix ioprio_get(IOPRIO_WHO_PGRP) vs setuid(2)
    
    commit e6a59aac8a8713f335a37d762db0dbe80e7f6d38 upstream.
    
    do_each_pid_thread(PIDTYPE_PGID) can race with a concurrent
    change_pid(PIDTYPE_PGID) that can move the task from one hlist
    to another while iterating. Serialize ioprio_get to take
    the tasklist_lock in this case, just like it's set counterpart.
    
    Fixes: d69b78ba1de (ioprio: grab rcu_read_lock in sys_ioprio_{set,get}())
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Link: https://lore.kernel.org/r/20211210182058.43417-1-dave@stgolabs.net
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc5e1b95f76b4adf8811396badbe6f0abfa39662
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Dec 7 17:17:29 2021 -0500

    tracefs: Set all files to the same group ownership as the mount option
    
    commit 48b27b6b5191e2e1f2798cd80877b6e4ef47c351 upstream.
    
    As people have been asking to allow non-root processes to have access to
    the tracefs directory, it was considered best to only allow groups to have
    access to the directory, where it is easier to just set the tracefs file
    system to a specific group (as other would be too dangerous), and that way
    the admins could pick which processes would have access to tracefs.
    
    Unfortunately, this broke tooling on Android that expected the other bit
    to be set. For some special cases, for non-root tools to trace the system,
    tracefs would be mounted and change the permissions of the top level
    directory which gave access to all running tasks permission to the
    tracing directory. Even though this would be dangerous to do in a
    production environment, for testing environments this can be useful.
    
    Now with the new changes to not allow other (which is still the proper
    thing to do), it breaks the testing tooling. Now more code needs to be
    loaded on the system to change ownership of the tracing directory.
    
    The real solution is to have tracefs honor the gid=xxx option when
    mounting. That is,
    
    (tracing group tracing has value 1003)
    
     mount -t tracefs -o gid=1003 tracefs /sys/kernel/tracing
    
    should have it that all files in the tracing directory should be of the
    given group.
    
    Copy the logic from d_walk() from dcache.c and simplify it for the mount
    case of tracefs if gid is set. All the files in tracefs will be walked and
    their group will be set to the value passed in.
    
    Link: https://lkml.kernel.org/r/20211207171729.2a54e1b3@gandalf.local.home
    
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: linux-fsdevel@vger.kernel.org
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reported-by: Kalesh Singh <kaleshsingh@google.com>
    Reported-by: Yabin Cui <yabinc@google.com>
    Fixes: 49d67e445742 ("tracefs: Have tracefs directories not set OTH permission bits by default")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ecb4e93d70a21f3b7094029986ef0c3e321f56c
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 10 16:28:32 2021 -0800

    signalfd: use wake_up_pollfree()
    
    commit 9537bae0da1f8d1e2361ab6d0479e8af7824e160 upstream.
    
    wake_up_poll() uses nr_exclusive=1, so it's not guaranteed to wake up
    all exclusive waiters.  Yet, POLLFREE *must* wake up all waiters.  epoll
    and aio poll are fortunately not affected by this, but it's very
    fragile.  Thus, the new function wake_up_pollfree() has been introduced.
    
    Convert signalfd to use wake_up_pollfree().
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Fixes: d80e731ecab4 ("epoll: introduce POLLFREE to flush ->signalfd_wqh before kfree()")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20211209010455.42744-4-ebiggers@kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0487ea896e62b5a90a81ac6e73c35e595d77f499
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 10 16:28:31 2021 -0800

    binder: use wake_up_pollfree()
    
    commit a880b28a71e39013e357fd3adccd1d8a31bc69a8 upstream.
    
    wake_up_poll() uses nr_exclusive=1, so it's not guaranteed to wake up
    all exclusive waiters.  Yet, POLLFREE *must* wake up all waiters.  epoll
    and aio poll are fortunately not affected by this, but it's very
    fragile.  Thus, the new function wake_up_pollfree() has been introduced.
    
    Convert binder to use wake_up_pollfree().
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Fixes: f5cb779ba163 ("ANDROID: binder: remove waitqueue when thread exits.")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20211209010455.42744-3-ebiggers@kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e92a7e47a0411d5208990c83a3d200515e314e8
Author: Eric Biggers <ebiggers@kernel.org>
Date:   Fri Dec 10 16:28:30 2021 -0800

    wait: add wake_up_pollfree()
    
    commit 42288cb44c4b5fff7653bc392b583a2b8bd6a8c0 upstream.
    
    Several ->poll() implementations are special in that they use a
    waitqueue whose lifetime is the current task, rather than the struct
    file as is normally the case.  This is okay for blocking polls, since a
    blocking poll occurs within one task; however, non-blocking polls
    require another solution.  This solution is for the queue to be cleared
    before it is freed, using 'wake_up_poll(wq, EPOLLHUP | POLLFREE);'.
    
    However, that has a bug: wake_up_poll() calls __wake_up() with
    nr_exclusive=1.  Therefore, if there are multiple "exclusive" waiters,
    and the wakeup function for the first one returns a positive value, only
    that one will be called.  That's *not* what's needed for POLLFREE;
    POLLFREE is special in that it really needs to wake up everyone.
    
    Considering the three non-blocking poll systems:
    
    - io_uring poll doesn't handle POLLFREE at all, so it is broken anyway.
    
    - aio poll is unaffected, since it doesn't support exclusive waits.
      However, that's fragile, as someone could add this feature later.
    
    - epoll doesn't appear to be broken by this, since its wakeup function
      returns 0 when it sees POLLFREE.  But this is fragile.
    
    Although there is a workaround (see epoll), it's better to define a
    function which always sends POLLFREE to all waiters.  Add such a
    function.  Also make it verify that the queue really becomes empty after
    all waiters have been woken up.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20211209010455.42744-2-ebiggers@kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2d261362067f589b12e9d00451e09c98d489726
Author: Hannes Reinecke <hare@suse.de>
Date:   Wed Dec 8 07:58:53 2021 +0100

    libata: add horkage for ASMedia 1092
    
    commit a66307d473077b7aeba74e9b09c841ab3d399c2d upstream.
    
    The ASMedia 1092 has a configuration mode which will present a
    dummy device; sadly the implementation falsely claims to provide
    a device with 100M which doesn't actually exist.
    So disable this device to avoid errors during boot.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a3c46e2eff0577454860a203be1a8295f4acb76
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Nov 23 20:16:54 2021 +0900

    can: pch_can: pch_can_rx_normal: fix use after free
    
    commit 94cddf1e9227a171b27292509d59691819c458db upstream.
    
    After calling netif_receive_skb(skb), dereferencing skb is unsafe.
    Especially, the can_frame cf which aliases skb memory is dereferenced
    just after the call netif_receive_skb(skb).
    
    Reordering the lines solves the issue.
    
    Fixes: b21d18b51b31 ("can: Topcliff: Add PCH_CAN driver.")
    Link: https://lore.kernel.org/all/20211123111654.621610-1-mailhol.vincent@wanadoo.fr
    Cc: stable@vger.kernel.org
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dd4e048155070a454f21c7aa08ff3b84addd3fc
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Dec 8 07:57:20 2021 -0500

    tracefs: Have new files inherit the ownership of their parent
    
    commit ee7f3666995d8537dec17b1d35425f28877671a9 upstream.
    
    If directories in tracefs have their ownership changed, then any new files
    and directories that are created under those directories should inherit
    the ownership of the director they are created in.
    
    Link: https://lkml.kernel.org/r/20211208075720.4855d180@gandalf.local.home
    
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Yabin Cui <yabinc@google.com>
    Cc: Christian Brauner <christian.brauner@ubuntu.com>
    Cc: stable@vger.kernel.org
    Fixes: 4282d60689d4f ("tracefs: Add new tracefs file system")
    Reported-by: Kalesh Singh <kaleshsingh@google.com>
    Reported: https://lore.kernel.org/all/CAC_TJve8MMAv+H_NdLSJXZUSoxOEq2zB_pVaJ9p=7H6Bu3X76g@mail.gmail.com/
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d9b92b3b14690e8991b506961fdbe60bd3e49f5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 1 08:36:06 2021 +0100

    ALSA: pcm: oss: Handle missing errors in snd_pcm_oss_change_params*()
    
    commit 6665bb30a6b1a4a853d52557c05482ee50e71391 upstream.
    
    A couple of calls in snd_pcm_oss_change_params_locked() ignore the
    possible errors.  Catch those errors and abort the operation for
    avoiding further problems.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211201073606.11660-4-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b02a41eebcc36d4f07196780f2e165ca2c499257
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 1 08:36:05 2021 +0100

    ALSA: pcm: oss: Limit the period size to 16MB
    
    commit 8839c8c0f77ab8fc0463f4ab8b37fca3f70677c2 upstream.
    
    Set the practical limit to the period size (the fragment shift in OSS)
    instead of a full 31bit; a too large value could lead to the exhaust
    of memory as we allocate temporary buffers of the period size, too.
    
    As of this patch, we set to 16MB limit, which should cover all use
    cases.
    
    Reported-by: syzbot+bb348e9f9a954d42746f@syzkaller.appspotmail.com
    Reported-by: Bixuan Cui <cuibixuan@linux.alibaba.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1638270978-42412-1-git-send-email-cuibixuan@linux.alibaba.com
    Link: https://lore.kernel.org/r/20211201073606.11660-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 502e1146873d870f87da3b8f93d6bf2de5f38d0c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 1 08:36:04 2021 +0100

    ALSA: pcm: oss: Fix negative period/buffer sizes
    
    commit 9d2479c960875ca1239bcb899f386970c13d9cfe upstream.
    
    The period size calculation in OSS layer may receive a negative value
    as an error, but the code there assumes only the positive values and
    handle them with size_t.  Due to that, a too big value may be passed
    to the lower layers.
    
    This patch changes the code to handle with ssize_t and adds the proper
    error checks appropriately.
    
    Reported-by: syzbot+bb348e9f9a954d42746f@syzkaller.appspotmail.com
    Reported-by: Bixuan Cui <cuibixuan@linux.alibaba.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1638270978-42412-1-git-send-email-cuibixuan@linux.alibaba.com
    Link: https://lore.kernel.org/r/20211201073606.11660-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c64ae0b6e6126fda9c291ae18c21ee98e12f523
Author: Alan Young <consult.awy@gmail.com>
Date:   Thu Dec 2 15:06:07 2021 +0000

    ALSA: ctl: Fix copy of updated id with element read/write
    
    commit b6409dd6bdc03aa178bbff0d80db2a30d29b63ac upstream.
    
    When control_compat.c:copy_ctl_value_to_user() is used, by
    ctl_elem_read_user() & ctl_elem_write_user(), it must also copy back the
    snd_ctl_elem_id value that may have been updated (filled in) by the call
    to snd_ctl_elem_read/snd_ctl_elem_write().
    
    This matches the functionality provided by snd_ctl_elem_read_user() and
    snd_ctl_elem_write_user(), via snd_ctl_build_ioff().
    
    Without this, and without making additional calls to snd_ctl_info()
    which are unnecessary when using the non-compat calls, a userspace
    application will not know the numid value for the element and
    consequently will not be able to use the poll/read interface on the
    control file to determine which elements have updates.
    
    Signed-off-by: Alan Young <consult.awy@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211202150607.543389-1-consult.awy@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b718a6d68d140f0e2af7567618fd9b483921d012
Author: Manjong Lee <mj0123.lee@samsung.com>
Date:   Fri Dec 10 14:47:11 2021 -0800

    mm: bdi: initialize bdi_min_ratio when bdi is unregistered
    
    commit 3c376dfafbf7a8ea0dea212d095ddd83e93280bb upstream.
    
    Initialize min_ratio if it is set during bdi unregistration.  This can
    prevent problems that may occur a when bdi is removed without resetting
    min_ratio.
    
    For example.
    1) insert external sdcard
    2) set external sdcard's min_ratio 70
    3) remove external sdcard without setting min_ratio 0
    4) insert external sdcard
    5) set external sdcard's min_ratio 70 << error occur(can't set)
    
    Because when an sdcard is removed, the present bdi_min_ratio value will
    remain.  Currently, the only way to reset bdi_min_ratio is to reboot.
    
    [akpm@linux-foundation.org: tweak comment and coding style]
    
    Link: https://lkml.kernel.org/r/20211021161942.5983-1-mj0123.lee@samsung.com
    Signed-off-by: Manjong Lee <mj0123.lee@samsung.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Changheun Lee <nanich.lee@samsung.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: <seunghwan.hyun@samsung.com>
    Cc: <sookwan7.kim@samsung.com>
    Cc: <yt0928.kim@samsung.com>
    Cc: <junho89.kim@samsung.com>
    Cc: <jisoo2146.oh@samsung.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce33ba0bfded5a8b102f5b0d123d9a4a6e446ece
Author: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
Date:   Mon Nov 29 14:19:52 2021 -0500

    IB/hfi1: Correct guard on eager buffer deallocation
    
    commit 9292f8f9a2ac42eb320bced7153aa2e63d8cc13a upstream.
    
    The code tests the dma address which legitimately can be 0.
    
    The code should test the kernel logical address to avoid leaking eager
    buffer allocations that happen to map to a dma address of 0.
    
    Fixes: 60368186fd85 ("IB/hfi1: Fix user-space buffers mapping with IOMMU enabled")
    Link: https://lore.kernel.org/r/20211129191952.101968.17137.stgit@awfm-01.cornelisnetworks.com
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69bb79a8f5bb9f436b6f1434ca9742591b7bbe18
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Thu Dec 9 09:13:07 2021 +0100

    nfc: fix potential NULL pointer deref in nfc_genl_dump_ses_done
    
    commit 4cd8371a234d051f9c9557fcbb1f8c523b1c0d10 upstream.
    
    The done() netlink callback nfc_genl_dump_ses_done() should check if
    received argument is non-NULL, because its allocation could fail earlier
    in dumpit() (nfc_genl_dump_ses()).
    
    Fixes: ac22ac466a65 ("NFC: Add a GET_SE netlink API")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20211209081307.57337-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd5b819f7e406dc15bbc7670596ff25261aaa2a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Nov 24 17:50:41 2021 +0300

    can: sja1000: fix use after free in ems_pcmcia_add_card()
    
    commit 3ec6ca6b1a8e64389f0212b5a1b0f6fed1909e45 upstream.
    
    If the last channel is not available then "dev" is freed.  Fortunately,
    we can just use "pdev->irq" instead.
    
    Also we should check if at least one channel was set up.
    
    Fixes: fd734c6f25ae ("can/sja1000: add driver for EMS PCMCIA card")
    Link: https://lore.kernel.org/all/20211124145041.GB13656@kili
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Tested-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10d0f0aaa5cde52bd5685ee8d0adc02f1efb1983
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 1 19:35:03 2021 +0100

    HID: check for valid USB device for many HID drivers
    
    commit 93020953d0fa7035fd036ad87a47ae2b7aa4ae33 upstream.
    
    Many HID drivers assume that the HID device assigned to them is a USB
    device as that was the only way HID devices used to be able to be
    created in Linux.  However, with the additional ways that HID devices
    can be created for many different bus types, that is no longer true, so
    properly check that we have a USB device associated with the HID device
    before allowing a driver that makes this assumption to claim it.
    
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: Michael Zaidman <michael.zaidman@gmail.com>
    Cc: Stefan Achatz <erazor_de@users.sourceforge.net>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Cc: linux-input@vger.kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    [bentiss: amended for thrustmater.c hunk to apply]
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211201183503.2373082-3-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1309eb2ef1001c4cc7e07b867ad9576d2cfeab47
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 1 19:35:02 2021 +0100

    HID: wacom: fix problems when device is not a valid USB device
    
    commit 720ac467204a70308bd687927ed475afb904e11b upstream.
    
    The wacom driver accepts devices of more than just USB types, but some
    code paths can cause problems if the device being controlled is not a
    USB device due to a lack of checking.  Add the needed checks to ensure
    that the USB device accesses are only happening on a "real" USB device,
    and not one on some other bus.
    
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: linux-input@vger.kernel.org
    Cc: stable@vger.kernel.org
    Tested-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211201183503.2373082-2-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c57e3b8082a4860f31f71d113b3e66bb64b4eb0a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 2 12:48:19 2021 +0100

    HID: add USB_HID dependancy on some USB HID drivers
    
    commit f237d9028f844a86955fc9da59d7ac4a5c55d7d5 upstream.
    
    Some HID drivers are only for USB drivers, yet did not depend on
    CONFIG_USB_HID.  This was hidden by the fact that the USB functions were
    stubbed out in the past, but now that drivers are checking for USB
    devices properly, build errors can occur with some random
    configurations.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211202114819.2511954-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4435bc144fb6295db371e9753305a96f0c19b2ef
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 3 08:59:27 2021 +0100

    HID: add USB_HID dependancy to hid-chicony
    
    commit d080811f27936f712f619f847389f403ac873b8f upstream.
    
    The chicony HID driver only controls USB devices, yet did not have a
    dependancy on USB_HID.  This causes build errors on some configurations
    like sparc when building due to new changes to the chicony driver.
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: stable@vger.kernel.org
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211203075927.2829218-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b8d74ff145de1b5adb133895fd63cd533d68422
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 3 09:12:31 2021 +0100

    HID: add USB_HID dependancy to hid-prodikeys
    
    commit 30cb3c2ad24b66fb7639a6d1f4390c74d6e68f94 upstream.
    
    The prodikeys HID driver only controls USB devices, yet did not have a
    dependancy on USB_HID.  This causes build errors on some configurations
    like nios2 when building due to new changes to the prodikeys driver.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211203081231.2856936-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28d8244f3ec961a11bfb4ad83cdc48ff9b8c47a7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 1 19:35:01 2021 +0100

    HID: add hid_is_usb() function to make it simpler for USB detection
    
    commit f83baa0cb6cfc92ebaf7f9d3a99d7e34f2e77a8a upstream.
    
    A number of HID drivers already call hid_is_using_ll_driver() but only
    for the detection of if this is a USB device or not.  Make this more
    obvious by creating hid_is_usb() and calling the function that way.
    
    Also converts the existing hid_is_using_ll_driver() functions to use the
    new call.
    
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: linux-input@vger.kernel.org
    Cc: stable@vger.kernel.org
    Tested-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211201183503.2373082-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1e84bd83f1d2eb4d37ad1b62aa67c29665e1184
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Mon Jul 24 09:46:18 2017 -0700

    HID: introduce hid_is_using_ll_driver
    
    commit fc2237a724a9e448599076d7d23497f51e2f7441 upstream.
    
    Although HID itself is transport-agnostic, occasionally a driver may
    want to interact with the low-level transport that a device is connected
    through. To do this, we need to know what kind of bus is in use. The
    first guess may be to look at the 'bus' field of the 'struct hid_device',
    but this field may be emulated in some cases (e.g. uhid).
    
    More ideally, we can check which ll_driver a device is using. This
    function introduces a 'hid_is_using_ll_driver' function and makes the
    'struct hid_ll_driver' of the four most common transports accessible
    through hid.h.
    
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Acked-By: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
