commit 77434fe5a077f05f0851931d6a71d1098b6004f8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Oct 17 10:43:34 2021 +0200

    Linux 5.10.74
    
    Link: https://lore.kernel.org/r/20211014145207.979449962@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42b49f012b6a8c5b012a666971dab6ce38725dff
Author: Brandon Wyman <bjwyman@gmail.com>
Date:   Tue Sep 28 20:50:51 2021 +0000

    hwmon: (pmbus/ibm-cffps) max_power_out swap changes
    
    [ Upstream commit f067d5585cda2de1e47dde914a8a4f151659e0ad ]
    
    The bytes for max_power_out from the ibm-cffps devices differ in byte
    order for some power supplies.
    
    The Witherspoon power supply returns the bytes in MSB/LSB order.
    
    The Rainier power supply returns the bytes in LSB/MSB order.
    
    The Witherspoon power supply uses version cffps1. The Rainier power
    supply should use version cffps2. If version is cffps1, swap the bytes
    before output to max_power_out.
    
    Tested:
        Witherspoon before: 3148. Witherspoon after: 3148.
        Rainier before: 53255. Rainier after: 2000.
    
    Signed-off-by: Brandon Wyman <bjwyman@gmail.com>
    Reviewed-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210928205051.1222815-1-bjwyman@gmail.com
    [groeck: Replaced yoda programming]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb893f075431e97dd72cde0721957a73d26578a8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Sep 20 15:31:11 2021 +0200

    sched: Always inline is_percpu_thread()
    
    [ Upstream commit 83d40a61046f73103b4e5d8f1310261487ff63b0 ]
    
      vmlinux.o: warning: objtool: check_preemption_disabled()+0x81: call to is_percpu_thread() leaves .noinstr.text section
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210928084218.063371959@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdae2a08343613782be6c5be97b6c3a1ebccbfff
Author: Song Liu <songliubraving@fb.com>
Date:   Wed Sep 29 12:43:13 2021 -0700

    perf/core: fix userpage->time_enabled of inactive events
    
    [ Upstream commit f792565326825ed806626da50c6f9a928f1079c1 ]
    
    Users of rdpmc rely on the mmapped user page to calculate accurate
    time_enabled. Currently, userpage->time_enabled is only updated when the
    event is added to the pmu. As a result, inactive event (due to counter
    multiplexing) does not have accurate userpage->time_enabled. This can
    be reproduced with something like:
    
       /* open 20 task perf_event "cycles", to create multiplexing */
    
       fd = perf_event_open();  /* open task perf_event "cycles" */
       userpage = mmap(fd);     /* use mmap and rdmpc */
    
       while (true) {
         time_enabled_mmap = xxx; /* use logic in perf_event_mmap_page */
         time_enabled_read = read(fd).time_enabled;
         if (time_enabled_mmap > time_enabled_read)
             BUG();
       }
    
    Fix this by updating userpage for inactive events in merge_sched_in.
    
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reported-and-tested-by: Lucian Grijincu <lucian@fb.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210929194313.2398474-1-songliubraving@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57c7ca3d5592d153dd5459894ffb63f2a40ac17c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Sep 25 00:03:30 2021 +0100

    scsi: virtio_scsi: Fix spelling mistake "Unsupport" -> "Unsupported"
    
    [ Upstream commit cced4c0ec7c06f5230a2958907a409c849762293 ]
    
    There are a couple of spelling mistakes in pr_info and pr_err messages.
    Fix them.
    
    Link: https://lore.kernel.org/r/20210924230330.143785-1-colin.king@canonical.com
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d993d1e1c4113cebe32cf56f3b4c5b9fb405274c
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Fri Sep 24 17:51:53 2021 +0800

    scsi: ses: Fix unsigned comparison with less than zero
    
    [ Upstream commit dd689ed5aa905daf4ba4c99319a52aad6ea0a796 ]
    
    Fix the following coccicheck warning:
    
    ./drivers/scsi/ses.c:137:10-16: WARNING: Unsigned expression compared
    with zero: result > 0.
    
    Link: https://lore.kernel.org/r/1632477113-90378-1-git-send-email-jiapeng.chong@linux.alibaba.com
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 621ddffb70db824eabd63d18ac635180fe9500f9
Author: Leslie Shi <Yuliang.Shi@amd.com>
Date:   Thu Sep 23 16:05:31 2021 +0800

    drm/amdgpu: fix gart.bo pin_count leak
    
    [ Upstream commit 66805763a97f8f7bdf742fc0851d85c02ed9411f ]
    
    gmc_v{9,10}_0_gart_disable() isn't called matched with
    correspoding gart_enbale function in SRIOV case. This will
    lead to gart.bo pin_count leak on driver unload.
    
    Cc: Hawking Zhang <Hawking.Zhang@amd.com>
    Signed-off-by: Leslie Shi <Yuliang.Shi@amd.com>
    Signed-off-by: Guchun Chen <guchun.chen@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5ba615fbeb30e9c9df62e25997c5d2011c1a400
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Sep 27 14:48:23 2021 -0700

    net: sun: SUNVNET_COMMON should depend on INET
    
    [ Upstream commit 103bde372f084206c6972be543ecc247ebbff9f3 ]
    
    When CONFIG_INET is not set, there are failing references to IPv4
    functions, so make this driver depend on INET.
    
    Fixes these build errors:
    
    sparc64-linux-ld: drivers/net/ethernet/sun/sunvnet_common.o: in function `sunvnet_start_xmit_common':
    sunvnet_common.c:(.text+0x1a68): undefined reference to `__icmp_send'
    sparc64-linux-ld: drivers/net/ethernet/sun/sunvnet_common.o: in function `sunvnet_poll_common':
    sunvnet_common.c:(.text+0x358c): undefined reference to `ip_send_check'
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Aaron Young <aaron.young@oracle.com>
    Cc: Rashmi Narasimhan <rashmi.narasimhan@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db868b45324d0473db165f43a9d3730413993080
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 27 11:26:21 2021 -0700

    vboxfs: fix broken legacy mount signature checking
    
    [ Upstream commit 9b3b353ef330e20bc2d99bf3165cc044cff26a09 ]
    
    Commit 9d682ea6bcc7 ("vboxsf: Fix the check for the old binary
    mount-arguments struct") was meant to fix a build error due to sign
    mismatch in 'char' and the use of character constants, but it just moved
    the error elsewhere, in that on some architectures characters and signed
    and on others they are unsigned, and that's just how the C standard
    works.
    
    The proper fix is a simple "don't do that then".  The code was just
    being silly and odd, and it should never have cared about signed vs
    unsigned characters in the first place, since what it is testing is not
    four "characters", but four bytes.
    
    And the way to compare four bytes is by using "memcmp()".
    
    Which compilers will know to just turn into a single 32-bit compare with
    a constant, as long as you don't have crazy debug options enabled.
    
    Link: https://lore.kernel.org/lkml/20210927094123.576521-1-arnd@kernel.org/
    Cc: Arnd Bergmann <arnd@kernel.org>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42c871d38e3d3c2272ead31a846ad58eef66d690
Author: MichelleJin <shjy180909@gmail.com>
Date:   Mon Sep 27 03:34:57 2021 +0000

    mac80211: check return value of rhashtable_init
    
    [ Upstream commit 111461d573741c17eafad029ac93474fa9adcce0 ]
    
    When rhashtable_init() fails, it returns -EINVAL.
    However, since error return value of rhashtable_init is not checked,
    it can cause use of uninitialized pointers.
    So, fix unhandled errors of rhashtable_init.
    
    Signed-off-by: MichelleJin <shjy180909@gmail.com>
    Link: https://lore.kernel.org/r/20210927033457.1020967-4-shjy180909@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bda06aff03a1fe0530a8245ef0988e5ba01ea915
Author: 王贇 <yun.wang@linux.alibaba.com>
Date:   Fri Sep 24 10:35:58 2021 +0800

    net: prevent user from passing illegal stab size
    
    [ Upstream commit b193e15ac69d56f35e1d8e2b5d16cbd47764d053 ]
    
    We observed below report when playing with netlink sock:
    
      UBSAN: shift-out-of-bounds in net/sched/sch_api.c:580:10
      shift exponent 249 is too large for 32-bit type
      CPU: 0 PID: 685 Comm: a.out Not tainted
      Call Trace:
       dump_stack_lvl+0x8d/0xcf
       ubsan_epilogue+0xa/0x4e
       __ubsan_handle_shift_out_of_bounds+0x161/0x182
       __qdisc_calculate_pkt_len+0xf0/0x190
       __dev_queue_xmit+0x2ed/0x15b0
    
    it seems like kernel won't check the stab log value passing from
    user, and will use the insane value later to calculate pkt_len.
    
    This patch just add a check on the size/cell_log to avoid insane
    calculation.
    
    Reported-by: Abaci <abaci@linux.alibaba.com>
    Signed-off-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d68c7b0ab5b5b9fd7a2a8b13114ac0336e23a30
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Sep 23 22:11:13 2021 +0200

    hwmon: (ltc2947) Properly handle errors when looking for the external clock
    
    [ Upstream commit 6f7d70467121f790b36af2d84bc02b5c236bf5e6 ]
    
    The return value of devm_clk_get should in general be propagated to
    upper layer. In this case the clk is optional, use the appropriate
    wrapper instead of interpreting all errors as "The optional clk is not
    available".
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20210923201113.398932-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 194e8a4f0acd8a9d2915fd5fb8249e2797393078
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Jul 25 17:19:00 2021 +0000

    m68k: Handle arrivals of multiple signals correctly
    
    [ Upstream commit 4bb0bd81ce5e97092dfda6a106d414b703ec0ee8 ]
    
    When we have several pending signals, have entered with the kernel
    with large exception frame *and* have already built at least one
    sigframe, regs->stkadj is going to be non-zero and regs->format/sr/pc
    are going to be junk - the real values are in shifted exception stack
    frame we'd built when putting together the first sigframe.
    
    If that happens, subsequent sigframes are going to be garbage.
    Not hard to fix - just need to find the "adjusted" frame first
    and look for format/vector/sr/pc in it.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Reviewed-by: Michael Schmitz <schmitzmic@gmail.com>
    Tested-by: Finn Thain <fthain@linux-m68k.org>
    Link: https://lore.kernel.org/r/YP2dBIAPTaVvHiZ6@zeniv-ca.linux.org.uk
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 977aee58142a19ccf9ef8fe56f1430e2ef99931f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Aug 27 22:42:30 2021 +0800

    mac80211: Drop frames from invalid MAC address in ad-hoc mode
    
    [ Upstream commit a6555f844549cd190eb060daef595f94d3de1582 ]
    
    WARNING: CPU: 1 PID: 9 at net/mac80211/sta_info.c:554
    sta_info_insert_rcu+0x121/0x12a0
    Modules linked in:
    CPU: 1 PID: 9 Comm: kworker/u8:1 Not tainted 5.14.0-rc7+ #253
    Workqueue: phy3 ieee80211_iface_work
    RIP: 0010:sta_info_insert_rcu+0x121/0x12a0
    ...
    Call Trace:
     ieee80211_ibss_finish_sta+0xbc/0x170
     ieee80211_ibss_work+0x13f/0x7d0
     ieee80211_iface_work+0x37a/0x500
     process_one_work+0x357/0x850
     worker_thread+0x41/0x4d0
    
    If an Ad-Hoc node receives packets with invalid source MAC address,
    it hits a WARN_ON in sta_info_insert_check(), this can spam the log.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20210827144230.39944-1-yuehaibing@huawei.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ec9a975ea374f8290265ad1e4447df73ffb0ecc
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Sep 15 16:46:39 2021 +0200

    netfilter: nf_nat_masquerade: defer conntrack walk to work queue
    
    [ Upstream commit 7970a19b71044bf4dc2c1becc200275bdf1884d4 ]
    
    The ipv4 and device notifiers are called with RTNL mutex held.
    The table walk can take some time, better not block other RTNL users.
    
    'ip a' has been reported to block for up to 20 seconds when conntrack table
    has many entries and device down events are frequent (e.g., PPP).
    
    Reported-and-tested-by: Martin Zaharinov <micron10@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5182d6db80bb2f08a7d700c5c4b8c3d0db58411c
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Sep 15 16:46:38 2021 +0200

    netfilter: nf_nat_masquerade: make async masq_inet6_event handling generic
    
    [ Upstream commit 30db406923b9285a9bac06a6af5e74bd6d0f1d06 ]
    
    masq_inet6_event is called asynchronously from system work queue,
    because the inet6 notifier is atomic and nf_iterate_cleanup can sleep.
    
    The ipv4 and device notifiers call nf_iterate_cleanup directly.
    
    This is legal, but these notifiers are called with RTNL mutex held.
    A large conntrack table with many devices coming and going will have severe
    impact on the system usability, with 'ip a' blocking for several seconds.
    
    This change places the defer code into a helper and makes it more
    generic so ipv4 and ifdown notifiers can be converted to defer the
    cleanup walk as well in a follow patch.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcb647c1e15d3ddd8ab94d556aa38d77448b40d9
Author: Marc Herbert <marc.herbert@intel.com>
Date:   Thu Sep 16 11:50:08 2021 +0300

    ASoC: SOF: loader: release_firmware() on load failure to avoid batching
    
    [ Upstream commit 8a8e1813ffc35111fc0b6db49968ceb0e1615ced ]
    
    Invoke release_firmware() when the firmware fails to boot in
    sof_probe_continue().
    
    The request_firmware() framework must be informed of failures in
    sof_probe_continue() otherwise its internal "batching"
    feature (different from caching) cached the firmware image
    forever. Attempts to correct the file in /lib/firmware/ were then
    silently and confusingly ignored until the next reboot. Unloading the
    drivers did not help because from their disconnected perspective the
    firmware had failed so there was nothing to release.
    
    Also leverage the new snd_sof_fw_unload() function to simplify the
    snd_sof_device_remove() function.
    
    Signed-off-by: Marc Herbert <marc.herbert@intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Link: https://lore.kernel.org/r/20210916085008.28929-1-peter.ujfalusi@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6952b1e22c2de8f23d59f944b0f17cb2733a846
Author: Joshua-Dickens <Joshua@Joshua-Dickens.com>
Date:   Tue Sep 14 13:28:25 2021 -0400

    HID: wacom: Add new Intuos BT (CTL-4100WL/CTL-6100WL) device IDs
    
    [ Upstream commit 0c8fbaa553077630e8eae45bd9676cfc01836aeb ]
    
    Add the new PIDs to wacom_wac.c to support the new models in the Intuos series.
    
    [jkosina@suse.cz: fix changelog]
    Signed-off-by: Joshua Dickens <joshua.dickens@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddc4ba737bcb31c227192af4e194ec0f01516700
Author: Jeremy Sowden <jeremy@azazel.net>
Date:   Sun Sep 12 22:24:33 2021 +0100

    netfilter: ip6_tables: zero-initialize fragment offset
    
    [ Upstream commit 310e2d43c3ad429c1fba4b175806cf1f55ed73a6 ]
    
    ip6tables only sets the `IP6T_F_PROTO` flag on a rule if a protocol is
    specified (`-p tcp`, for example).  However, if the flag is not set,
    `ip6_packet_match` doesn't call `ipv6_find_hdr` for the skb, in which
    case the fragment offset is left uninitialized and a garbage value is
    passed to each matcher.
    
    Signed-off-by: Jeremy Sowden <jeremy@azazel.net>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddf026d6ae9aa6ba188800c9e3f2e79ec1597a67
Author: Mizuho Mori <morimolymoly@gmail.com>
Date:   Thu Jul 29 20:03:25 2021 +0900

    HID: apple: Fix logical maximum and usage maximum of Magic Keyboard JIS
    
    [ Upstream commit 67fd71ba16a37c663d139f5ba5296f344d80d072 ]
    
    Apple Magic Keyboard(JIS)'s Logical Maximum and Usage Maximum are wrong.
    
    Below is a report descriptor.
    
    0x05, 0x01,         /*  Usage Page (Desktop),                           */
    0x09, 0x06,         /*  Usage (Keyboard),                               */
    0xA1, 0x01,         /*  Collection (Application),                       */
    0x85, 0x01,         /*      Report ID (1),                              */
    0x05, 0x07,         /*      Usage Page (Keyboard),                      */
    0x15, 0x00,         /*      Logical Minimum (0),                        */
    0x25, 0x01,         /*      Logical Maximum (1),                        */
    0x19, 0xE0,         /*      Usage Minimum (KB Leftcontrol),             */
    0x29, 0xE7,         /*      Usage Maximum (KB Right GUI),               */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x95, 0x08,         /*      Report Count (8),                           */
    0x81, 0x02,         /*      Input (Variable),                           */
    0x95, 0x05,         /*      Report Count (5),                           */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x05, 0x08,         /*      Usage Page (LED),                           */
    0x19, 0x01,         /*      Usage Minimum (01h),                        */
    0x29, 0x05,         /*      Usage Maximum (05h),                        */
    0x91, 0x02,         /*      Output (Variable),                          */
    0x95, 0x01,         /*      Report Count (1),                           */
    0x75, 0x03,         /*      Report Size (3),                            */
    0x91, 0x03,         /*      Output (Constant, Variable),                */
    0x95, 0x08,         /*      Report Count (8),                           */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x15, 0x00,         /*      Logical Minimum (0),                        */
    0x25, 0x01,         /*      Logical Maximum (1),                        */
    
    here is a report descriptor which is parsed one in kernel.
    see sys/kernel/debug/hid/<dev>/rdesc
    
    05 01 09 06 a1 01 85 01 05 07
    15 00 25 01 19 e0 29 e7 75 01
    95 08 81 02 95 05 75 01 05 08
    19 01 29 05 91 02 95 01 75 03
    91 03 95 08 75 01 15 00 25 01
    06 00 ff 09 03 81 03 95 06 75
    08 15 00 25 [65] 05 07 19 00 29
    [65] 81 00 95 01 75 01 15 00 25
    01 05 0c 09 b8 81 02 95 01 75
    01 06 01 ff 09 03 81 02 95 01
    75 06 81 03 06 02 ff 09 55 85
    55 15 00 26 ff 00 75 08 95 40
    b1 a2 c0 06 00 ff 09 14 a1 01
    85 90 05 84 75 01 95 03 15 00
    25 01 09 61 05 85 09 44 09 46
    81 02 95 05 81 01 75 08 95 01
    15 00 26 ff 00 09 65 81 02 c0
    00
    
    Position 64(Logical Maximum) and 70(Usage Maximum) are 101.
    Both should be 0xE7 to support JIS specific keys(ろ, Eisu, Kana, |) support.
    position 117 is also 101 but not related(it is Usage 65h).
    
    There are no difference of product id between JIS and ANSI.
    They are same 0x0267.
    
    Signed-off-by: Mizuho Mori <morimolymoly@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bcfa99e8faeef75567e6d3a5ac9680d28240b21
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Tue Sep 7 13:44:36 2021 -0500

    ASoC: Intel: sof_sdw: tag SoundWire BEs as non-atomic
    
    [ Upstream commit 58eafe1ff52ee1ce255759fc15729519af180cbb ]
    
    The SoundWire BEs make use of 'stream' functions for .prepare and
    .trigger. These functions will in turn force a Bank Switch, which
    implies a wait operation.
    
    Mark SoundWire BEs as nonatomic for consistency, but keep all other
    types of BEs as is. The initialization of .nonatomic is done outside
    of the create_sdw_dailink helper to avoid adding more parameters to
    deal with a single exception to the rule that BEs are atomic.
    
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Bard Liao <bard.liao@intel.com>
    Link: https://lore.kernel.org/r/20210907184436.33152-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14cbfeeee41b83167bc308f01983618cc5851b53
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Jul 16 20:20:22 2021 +0800

    ext4: correct the error path of ext4_write_inline_data_end()
    
    [ Upstream commit 55ce2f649b9e88111270333a8127e23f4f8f42d7 ]
    
    Current error path of ext4_write_inline_data_end() is not correct.
    
    Firstly, it should pass out the error value if ext4_get_inode_loc()
    return fail, or else it could trigger infinite loop if we inject error
    here. And then it's better to add inode to orphan list if it return fail
    in ext4_journal_stop(), otherwise we could not restore inline xattr
    entry after power failure. Finally, we need to reset the 'ret' value if
    ext4_write_inline_data_end() return success in ext4_write_end() and
    ext4_journalled_write_end(), otherwise we could not get the error return
    value of ext4_journal_stop().
    
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20210716122024.1105856-3-yi.zhang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7a15e1e4fd7db751739d04141390fa6699fd870
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Jul 16 20:20:21 2021 +0800

    ext4: check and update i_disksize properly
    
    [ Upstream commit 4df031ff5876d94b48dd9ee486ba5522382a06b2 ]
    
    After commit 3da40c7b0898 ("ext4: only call ext4_truncate when size <=
    isize"), i_disksize could always be updated to i_size in ext4_setattr(),
    and we could sure that i_disksize <= i_size since holding inode lock and
    if i_disksize < i_size there are delalloc writes pending in the range
    upto i_size. If the end of the current write is <= i_size, there's no
    need to touch i_disksize since writeback will push i_disksize upto
    i_size eventually. So we can switch to check i_size instead of
    i_disksize in ext4_da_write_end() when write to the end of the file.
    we also could remove ext4_mark_inode_dirty() together because we defer
    inode dirtying to generic_write_end() or ext4_da_write_inline_data_end().
    
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20210716122024.1105856-2-yi.zhang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
