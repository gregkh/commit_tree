commit d09b80172c22df7a5e2ec58aa1a0fbe8914752e7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 23 12:11:02 2020 +0200

    Linux 4.19.147
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/lkml/20200921162034.660953761@linuxfoundation.org/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3bba4b2239a4565a72742aa0ed4752674599c95
Author: Adam Borowski <kilobyte@angband.pl>
Date:   Tue Oct 9 08:28:03 2018 +0200

    x86/defconfig: Enable CONFIG_USB_XHCI_HCD=y
    
    commit 72a9c673636b779e370983fea08e40f97039b981 upstream.
    
    A spanking new machine I just got has all but one USB ports wired as 3.0.
    Booting defconfig resulted in no keyboard or mouse, which was pretty
    uncool.  Let's enable that -- USB3 is ubiquitous rather than an oddity.
    As 'y' not 'm' -- recovering from initrd problems needs a keyboard.
    
    Also add it to the 32-bit defconfig.
    
    Signed-off-by: Adam Borowski <kilobyte@angband.pl>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-usb@vger.kernel.org
    Link: http://lkml.kernel.org/r/20181009062803.4332-1-kilobyte@angband.pl
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 349c5add6d85b10caa99c5e28790bf5d5f0d90e8
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Tue Sep 8 11:51:06 2020 +1000

    powerpc/dma: Fix dma_map_ops::get_required_mask
    
    commit 437ef802e0adc9f162a95213a3488e8646e5fc03 upstream.
    
    There are 2 problems with it:
      1. "<" vs expected "<<"
      2. the shift number is an IOMMU page number mask, not an address
      mask as the IOMMU page shift is missing.
    
    This did not hit us before f1565c24b596 ("powerpc: use the generic
    dma_ops_bypass mode") because we had additional code to handle bypass
    mask so this chunk (almost?) never executed.However there were
    reports that aacraid does not work with "iommu=nobypass".
    
    After f1565c24b596, aacraid (and probably others which call
    dma_get_required_mask() before setting the mask) was unable to enable
    64bit DMA and fall back to using IOMMU which was known not to work,
    one of the problems is double free of an IOMMU page.
    
    This fixes DMA for aacraid, both with and without "iommu=nobypass" in
    the kernel command line. Verified with "stress-ng -d 4".
    
    Fixes: 6a5c7be5e484 ("powerpc: Override dma_get_required_mask by platform hook and ops")
    Cc: stable@vger.kernel.org # v3.2+
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200908015106.79661-1-aik@ozlabs.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad81a334b22ad05198c211e689115ad90747e5d8
Author: Quentin Perret <qperret@google.com>
Date:   Wed Sep 16 18:18:25 2020 +0100

    ehci-hcd: Move include to keep CRC stable
    
    commit 29231826f3bd65500118c473fccf31c0cf14dbc0 upstream.
    
    The CRC calculation done by genksyms is triggered when the parser hits
    EXPORT_SYMBOL*() macros. At this point, genksyms recursively expands the
    types of the function parameters, and uses that as the input for the CRC
    calculation. In the case of forward-declared structs, the type expands
    to 'UNKNOWN'. Following this, it appears that the result of the
    expansion of each type is cached somewhere, and seems to be re-used
    when/if the same type is seen again for another exported symbol in the
    same C file.
    
    Unfortunately, this can cause CRC 'stability' issues when a struct
    definition becomes visible in the middle of a C file. For example, let's
    assume code with the following pattern:
    
        struct foo;
    
        int bar(struct foo *arg)
        {
            /* Do work ... */
        }
        EXPORT_SYMBOL_GPL(bar);
    
        /* This contains struct foo's definition */
        #include "foo.h"
    
        int baz(struct foo *arg)
        {
            /* Do more work ... */
        }
        EXPORT_SYMBOL_GPL(baz);
    
    Here, baz's CRC will be computed using the expansion of struct foo that
    was cached after bar's CRC calculation ('UNKOWN' here). But if
    EXPORT_SYMBOL_GPL(bar) is removed from the file (because of e.g. symbol
    trimming using CONFIG_TRIM_UNUSED_KSYMS), struct foo will be expanded
    late, during baz's CRC calculation, which now has visibility over the
    full struct definition, hence resulting in a different CRC for baz.
    
    The proper fix for this certainly is in genksyms, but that will take me
    some time to get right. In the meantime, we have seen one occurrence of
    this in the ehci-hcd code which hits this problem because of the way it
    includes C files halfway through the code together with an unlucky mix
    of symbol trimming.
    
    In order to workaround this, move the include done in ehci-hub.c early
    in ehci-hcd.c, hence making sure the struct definitions are visible to
    the entire file. This improves CRC stability of the ehci-hcd exports
    even when symbol trimming is enabled.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Quentin Perret <qperret@google.com>
    Link: https://lore.kernel.org/r/20200916171825.3228122-1-qperret@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8a0dc8183be1fd9b55abf4e85dfb98160eb790b
Author: Arvind Sankar <nivedita@alum.mit.edu>
Date:   Tue Aug 11 20:43:08 2020 -0400

    x86/boot/compressed: Disable relocation relaxation
    
    commit 09e43968db40c33a73e9ddbfd937f46d5c334924 upstream.
    
    The x86-64 psABI [0] specifies special relocation types
    (R_X86_64_[REX_]GOTPCRELX) for indirection through the Global Offset
    Table, semantically equivalent to R_X86_64_GOTPCREL, which the linker
    can take advantage of for optimization (relaxation) at link time. This
    is supported by LLD and binutils versions 2.26 onwards.
    
    The compressed kernel is position-independent code, however, when using
    LLD or binutils versions before 2.27, it must be linked without the -pie
    option. In this case, the linker may optimize certain instructions into
    a non-position-independent form, by converting foo@GOTPCREL(%rip) to $foo.
    
    This potential issue has been present with LLD and binutils-2.26 for a
    long time, but it has never manifested itself before now:
    
    - LLD and binutils-2.26 only relax
            movq    foo@GOTPCREL(%rip), %reg
      to
            leaq    foo(%rip), %reg
      which is still position-independent, rather than
            mov     $foo, %reg
      which is permitted by the psABI when -pie is not enabled.
    
    - GCC happens to only generate GOTPCREL relocations on mov instructions.
    
    - CLang does generate GOTPCREL relocations on non-mov instructions, but
      when building the compressed kernel, it uses its integrated assembler
      (due to the redefinition of KBUILD_CFLAGS dropping -no-integrated-as),
      which has so far defaulted to not generating the GOTPCRELX
      relocations.
    
    Nick Desaulniers reports [1,2]:
    
      "A recent change [3] to a default value of configuration variable
       (ENABLE_X86_RELAX_RELOCATIONS OFF -> ON) in LLVM now causes Clang's
       integrated assembler to emit R_X86_64_GOTPCRELX/R_X86_64_REX_GOTPCRELX
       relocations. LLD will relax instructions with these relocations based
       on whether the image is being linked as position independent or not.
       When not, then LLD will relax these instructions to use absolute
       addressing mode (R_RELAX_GOT_PC_NOPIC). This causes kernels built with
       Clang and linked with LLD to fail to boot."
    
    Patch series [4] is a solution to allow the compressed kernel to be
    linked with -pie unconditionally, but even if merged is unlikely to be
    backported. As a simple solution that can be applied to stable as well,
    prevent the assembler from generating the relaxed relocation types using
    the -mrelax-relocations=no option. For ease of backporting, do this
    unconditionally.
    
    [0] https://gitlab.com/x86-psABIs/x86-64-ABI/-/blob/master/x86-64-ABI/linker-optimization.tex#L65
    [1] https://lore.kernel.org/lkml/20200807194100.3570838-1-ndesaulniers@google.com/
    [2] https://github.com/ClangBuiltLinux/linux/issues/1121
    [3] https://reviews.llvm.org/rGc41a18cf61790fc898dcda1055c3efbf442c14c0
    [4] https://lore.kernel.org/lkml/20200731202738.2577854-1-nivedita@alum.mit.edu/
    
    Reported-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Arvind Sankar <nivedita@alum.mit.edu>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200812004308.1448603-1-nivedita@alum.mit.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bafdc39d1c95f7572eba887e6c3707992c430931
Author: Tobias Diedrich <tobiasdiedrich@gmail.com>
Date:   Mon Sep 14 19:36:28 2020 +0200

    serial: 8250_pci: Add Realtek 816a and 816b
    
    commit 3c5a87be170aba8ac40982182f812dcff6ed1ad1 upstream.
    
    These serial ports are exposed by the OOB-management-engine on
    RealManage-enabled network cards (e.g. AMD DASH enabled systems using
    Realtek cards).
    
    Because these have 3 BARs, they fail the "num_iomem <= 1" check in
    serial_pci_guess_board.
    
    I've manually checked the two IOMEM regions and BAR 2 doesn't seem to
    respond to reads, but BAR 4 seems to be an MMIO version of the IO ports
    (untested).
    
    With this change, the ports are detected:
    0000:02:00.1: ttyS0 at I/O 0x2200 (irq = 82, base_baud = 115200) is a 16550A
    0000:02:00.2: ttyS1 at I/O 0x2100 (irq = 55, base_baud = 115200) is a 16550A
    
    lspci output:
    02:00.1 0700: 10ec:816a (rev 0e) (prog-if 02 [16550])
            Subsystem: 17aa:5082
            Control: I/O+ Mem+ BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
            Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort+ <TAbort- <MAbort- >SERR- <PERR- INTx-
            Interrupt: pin B routed to IRQ 82
            IOMMU group: 11
            Region 0: I/O ports at 2200 [size=256]
            Region 2: Memory at fd715000 (64-bit, non-prefetchable) [size=4K]
            Region 4: Memory at fd704000 (64-bit, non-prefetchable) [size=16K]
            Capabilities: [40] Power Management version 3
                    Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
                    Status: D0 NoSoftRst+ PME-Enable- DSel=0 DScale=0 PME-
            Capabilities: [50] MSI: Enable- Count=1/1 Maskable- 64bit+
                    Address: 0000000000000000  Data: 0000
            Capabilities: [70] Express (v2) Endpoint, MSI 01
                    DevCap: MaxPayload 128 bytes, PhantFunc 0, Latency L0s unlimited, L1 <64us
                            ExtTag- AttnBtn- AttnInd- PwrInd- RBE+ FLReset- SlotPowerLimit 0.000W
                    DevCtl: CorrErr- NonFatalErr- FatalErr- UnsupReq-
                            RlxdOrd+ ExtTag- PhantFunc- AuxPwr- NoSnoop-
                            MaxPayload 128 bytes, MaxReadReq 512 bytes
                    DevSta: CorrErr+ NonFatalErr- FatalErr- UnsupReq+ AuxPwr+ TransPend-
                    LnkCap: Port #0, Speed 2.5GT/s, Width x1, ASPM L0s L1, Exit Latency L0s unlimited, L1 <64us
                            ClockPM+ Surprise- LLActRep- BwNot- ASPMOptComp+
                    LnkCtl: ASPM L1 Enabled; RCB 64 bytes, Disabled- CommClk+
                            ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
                    LnkSta: Speed 2.5GT/s (ok), Width x1 (ok)
                            TrErr- Train- SlotClk+ DLActive- BWMgmt- ABWMgmt-
                    DevCap2: Completion Timeout: Range ABCD, TimeoutDis+ NROPrPrP- LTR+
                             10BitTagComp- 10BitTagReq- OBFF Via message/WAKE#, ExtFmt- EETLPPrefix-
                             EmergencyPowerReduction Not Supported, EmergencyPowerReductionInit-
                             FRS- TPHComp- ExtTPHComp-
                             AtomicOpsCap: 32bit- 64bit- 128bitCAS-
                    DevCtl2: Completion Timeout: 50us to 50ms, TimeoutDis- LTR- OBFF Disabled,
                             AtomicOpsCtl: ReqEn-
                    LnkSta2: Current De-emphasis Level: -6dB, EqualizationComplete- EqualizationPhase1-
                             EqualizationPhase2- EqualizationPhase3- LinkEqualizationRequest-
                             Retimer- 2Retimers- CrosslinkRes: unsupported
            Capabilities: [b0] MSI-X: Enable- Count=4 Masked-
                    Vector table: BAR=4 offset=00000000
                    PBA: BAR=4 offset=00000800
            Capabilities: [d0] Vital Product Data
                    Not readable
            Capabilities: [100 v2] Advanced Error Reporting
                    UESta:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                    UEMsk:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                    UESvrt: DLP+ SDES+ TLP- FCP+ CmpltTO- CmpltAbrt- UnxCmplt- RxOF+ MalfTLP+ ECRC- UnsupReq- ACSViol-
                    CESta:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- AdvNonFatalErr+
                    CEMsk:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- AdvNonFatalErr+
                    AERCap: First Error Pointer: 00, ECRCGenCap+ ECRCGenEn- ECRCChkCap+ ECRCChkEn-
                            MultHdrRecCap- MultHdrRecEn- TLPPfxPres- HdrLogCap-
                    HeaderLog: 00000000 00000000 00000000 00000000
            Capabilities: [160 v1] Device Serial Number 00-00-00-00-00-00-00-00
            Capabilities: [170 v1] Latency Tolerance Reporting
                    Max snoop latency: 0ns
                    Max no snoop latency: 0ns
            Capabilities: [178 v1] L1 PM Substates
                    L1SubCap: PCI-PM_L1.2+ PCI-PM_L1.1+ ASPM_L1.2+ ASPM_L1.1+ L1_PM_Substates+
                              PortCommonModeRestoreTime=150us PortTPowerOnTime=150us
                    L1SubCtl1: PCI-PM_L1.2- PCI-PM_L1.1- ASPM_L1.2- ASPM_L1.1-
                               T_CommonMode=0us LTR1.2_Threshold=0ns
                    L1SubCtl2: T_PwrOn=10us
    02:00.2 0700: 10ec:816b (rev 0e)
    [...same...]
    
    Signed-off-by: Tobias Diedrich <tobiasdiedrich@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200914173628.GA22508@yamamaya.is-a-geek.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9046e7c4718a29afb986213217954885af05e9d6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Sep 8 16:27:29 2020 -0700

    Input: i8042 - add Entroware Proteus EL07R4 to nomux and reset lists
    
    commit c4440b8a457779adeec42c5e181cb4016f19ce0f upstream.
    
    The keyboard drops keypresses early during boot unless both the nomux
    and reset quirks are set. Add DMI table entries for this.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1806085
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20200907095656.13155-1-hdegoede@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de3c235838e0cda09506f9bc3a9ee6107fb87102
Author: Vincent Huang <vincent.huang@tw.synaptics.com>
Date:   Mon Sep 14 12:19:08 2020 -0700

    Input: trackpoint - add new trackpoint variant IDs
    
    commit 6c77545af100a72bf5e28142b510ba042a17648d upstream.
    
    Add trackpoint variant IDs to allow supported control on Synaptics
    trackpoints.
    
    Signed-off-by: Vincent Huang <vincent.huang@tw.synaptics.com>
    Link: https://lore.kernel.org/r/20200914120327.2592-1-vincent.huang@tw.synaptics.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5afd52f302cac2700c59b86d19c329c0ba918977
Author: Sunghyun Jin <mcsmonk@gmail.com>
Date:   Thu Sep 3 21:41:16 2020 +0900

    percpu: fix first chunk size calculation for populated bitmap
    
    commit b3b33d3c43bbe0177d70653f4e889c78cc37f097 upstream.
    
    Variable populated, which is a member of struct pcpu_chunk, is used as a
    unit of size of unsigned long.
    However, size of populated is miscounted. So, I fix this minor part.
    
    Fixes: 8ab16c43ea79 ("percpu: change the number of pages marked in the first_chunk pop bitmap")
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Sunghyun Jin <mcsmonk@gmail.com>
    Signed-off-by: Dennis Zhou <dennis@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb0978891ba6c7be05b4d0d71004a50f57cc1530
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Sep 21 13:55:28 2020 +0200

    Revert "ALSA: hda - Fix silent audio output and corrupted input on MSI X570-A PRO"
    
    This reverts commit c0a7b7fe0e0f7baa7c1779e401d293d176307c51 which is
    commit 15cbff3fbbc631952c346744f862fb294504b5e2 upstream.
    
    It causes know regressions and will be reverted in Linus's tree soon.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Cc: Dan Crawford <dnlcrwfrd@gmail.com>
    Cc: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/7efd2fe5-bf38-7f85-891a-eee3845d1493@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6efcaea77668162e28ad4b18c978a3601384a07b
Author: Volker Rümelin <vr_qemu@t-online.de>
Date:   Tue Sep 1 15:22:21 2020 +0200

    i2c: i801: Fix resume bug
    
    commit 66d402e2e9455cf0213c42b97f22a0493372d7cc upstream.
    
    On suspend the original host configuration gets restored. The
    resume routine has to undo this, otherwise the SMBus master
    may be left in disabled state or in i2c mode.
    
    [JD: Rebased on v5.8, moved the write into i801_setup_hstcfg.]
    
    Signed-off-by: Volker Rümelin <vr_qemu@t-online.de>
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51e7ea12ccedbed2f9e31b593d02432986e491fb
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Sep 17 12:34:27 2020 +0200

    usblp: fix race between disconnect() and read()
    
    commit 9cdabcb3ef8c24ca3a456e4db7b012befb688e73 upstream.
    
    read() needs to check whether the device has been
    disconnected before it tries to talk to the device.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: syzbot+be5b5f86a162a6c281e6@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20200917103427.15740-1-oneukum@suse.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f4b55978ea2ce37d0730515ef9f12b01c2c557b
Author: Oliver Neukum <oneukum@suse.com>
Date:   Wed Sep 16 11:40:25 2020 +0200

    USB: UAS: fix disconnect by unplugging a hub
    
    commit 325b008723b2dd31de020e85ab9d2e9aa4637d35 upstream.
    
    The SCSI layer can go into an ugly loop if you ignore that a device is
    gone. You need to report an error in the command rather than in the
    return value of the queue method.
    
    We need to specifically check for ENODEV. The issue goes back to the
    introduction of the driver.
    
    Fixes: 115bb1ffa54c3 ("USB: Add UAS driver")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200916094026.30085-2-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb0f66eb67d75b93a66063c12414b969ee137b51
Author: Penghao <penghao@uniontech.com>
Date:   Mon Sep 7 10:30:26 2020 +0800

    USB: quirks: Add USB_QUIRK_IGNORE_REMOTE_WAKEUP quirk for BYD zhaoxin notebook
    
    commit bcea6dafeeef7d1a6a8320a249aabf981d63b881 upstream.
    
    Add a USB_QUIRK_IGNORE_REMOTE_WAKEUP quirk for the BYD zhaoxin notebook.
    This notebook come with usb touchpad. And we would like to disable
    touchpad wakeup on this notebook by default.
    
    Signed-off-by: Penghao <penghao@uniontech.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200907023026.28189-1-penghao@uniontech.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f47ba6941d10479838086234d4bb73d7aea0d61b
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Fri Sep 11 19:21:51 2020 +0800

    drm/mediatek: Add missing put_device() call in mtk_hdmi_dt_parse_pdata()
    
    [ Upstream commit 0680a622318b8d657323b94082f4b9a44038dfee ]
    
    if of_find_device_by_node() succeed, mtk_drm_kms_init() doesn't have
    a corresponding put_device(). Thus add jump target to fix the exception
    handling for this function implementation.
    
    Fixes: 8f83f26891e1 ("drm/mediatek: Add HDMI support")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d191f84b65cd2daa8d2fa7294a509d2d1ec0fc1
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Wed Sep 9 16:49:42 2020 +0800

    drm/mediatek: Add exception handing in mtk_drm_probe() if component init fail
    
    [ Upstream commit 64c194c00789889b0f9454f583712f079ba414ee ]
    
    mtk_ddp_comp_init() is called in a loop in mtk_drm_probe(), if it
    fail, previous successive init component is not proccessed.
    
    Thus uninitialize valid component and put their device if component
    init failed.
    
    Fixes: 119f5173628a ("drm/mediatek: Add DRM Driver for Mediatek SoC MT8173.")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ee2eceb0750ebedace1bd04c1efa6a325038f2a
Author: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
Date:   Wed Sep 16 15:54:37 2020 +0200

    MIPS: SNI: Fix spurious interrupts
    
    [ Upstream commit b959b97860d0fee8c8f6a3e641d3c2ad76eab6be ]
    
    On A20R machines the interrupt pending bits in cause register need to be
    updated by requesting the chipset to do it. This needs to be done to
    find the interrupt cause and after interrupt service. In
    commit 0b888c7f3a03 ("MIPS: SNI: Convert to new irq_chip functions") the
    function to do after service update got lost, which caused spurious
    interrupts.
    
    Fixes: 0b888c7f3a03 ("MIPS: SNI: Convert to new irq_chip functions")
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76fe92986c5c2fff36d8fb83e86332113b6c1725
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Sep 11 07:57:06 2020 +0900

    fbcon: Fix user font detection test at fbcon_resize().
    
    [ Upstream commit ec0972adecb391a8d8650832263a4790f3bfb4df ]
    
    syzbot is reporting OOB read at fbcon_resize() [1], for
    commit 39b3cffb8cf31117 ("fbcon: prevent user font height or width change
     from causing potential out-of-bounds access") is by error using
    registered_fb[con2fb_map[vc->vc_num]]->fbcon_par->p->userfont (which was
    set to non-zero) instead of fb_display[vc->vc_num].userfont (which remains
    zero for that display).
    
    We could remove tricky userfont flag [2], for we can determine it by
    comparing address of the font data and addresses of built-in font data.
    But since that commit is failing to fix the original OOB read [3], this
    patch keeps the change minimal in case we decide to revert altogether.
    
    [1] https://syzkaller.appspot.com/bug?id=ebcbbb6576958a496500fee9cf7aa83ea00b5920
    [2] https://syzkaller.appspot.com/text?tag=Patch&x=14030853900000
    [3] https://syzkaller.appspot.com/bug?id=6fba8c186d97cf1011ab17660e633b1cc4e080c9
    
    Reported-by: syzbot <syzbot+b38b1ef6edf0c74a8d97@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 39b3cffb8cf31117 ("fbcon: prevent user font height or width change from causing potential out-of-bounds access")
    Cc: George Kennedy <george.kennedy@oracle.com>
    Link: https://lore.kernel.org/r/f6e3e611-8704-1263-d163-f52c906a4f06@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e96d27099ef4b9ee2c3ad09025083779657e175
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Tue Sep 15 12:18:19 2020 +0900

    perf test: Free formats for perf pmu parse test
    
    [ Upstream commit d26383dcb2b4b8629fde05270b4e3633be9e3d4b ]
    
    The following leaks were detected by ASAN:
    
      Indirect leak of 360 byte(s) in 9 object(s) allocated from:
        #0 0x7fecc305180e in calloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10780e)
        #1 0x560578f6dce5 in perf_pmu__new_format util/pmu.c:1333
        #2 0x560578f752fc in perf_pmu_parse util/pmu.y:59
        #3 0x560578f6a8b7 in perf_pmu__format_parse util/pmu.c:73
        #4 0x560578e07045 in test__pmu tests/pmu.c:155
        #5 0x560578de109b in run_test tests/builtin-test.c:410
        #6 0x560578de109b in test_and_print tests/builtin-test.c:440
        #7 0x560578de401a in __cmd_test tests/builtin-test.c:661
        #8 0x560578de401a in cmd_test tests/builtin-test.c:807
        #9 0x560578e49354 in run_builtin /home/namhyung/project/linux/tools/perf/perf.c:312
        #10 0x560578ce71a8 in handle_internal_command /home/namhyung/project/linux/tools/perf/perf.c:364
        #11 0x560578ce71a8 in run_argv /home/namhyung/project/linux/tools/perf/perf.c:408
        #12 0x560578ce71a8 in main /home/namhyung/project/linux/tools/perf/perf.c:538
        #13 0x7fecc2b7acc9 in __libc_start_main ../csu/libc-start.c:308
    
    Fixes: cff7f956ec4a1 ("perf tests: Move pmu tests into separate object")
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/20200915031819.386559-12-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cf1b96a36d5b26dadca1e2ab0f85180259bab75
Author: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
Date:   Mon Sep 14 18:05:00 2020 +0200

    MIPS: SNI: Fix MIPS_L1_CACHE_SHIFT
    
    [ Upstream commit 564c836fd945a94b5dd46597d6b7adb464092650 ]
    
    Commit 930beb5ac09a ("MIPS: introduce MIPS_L1_CACHE_SHIFT_<N>") forgot
    to select the correct MIPS_L1_CACHE_SHIFT for SNI RM. This breaks non
    coherent DMA because of a wrong allocation alignment.
    
    Fixes: 930beb5ac09a ("MIPS: introduce MIPS_L1_CACHE_SHIFT_<N>")
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5dbe21652cd7a0ab49274d79077a8655255611a
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Fri Sep 11 15:00:05 2020 +0200

    perf test: Fix the "signal" test inline assembly
    
    [ Upstream commit 8a39e8c4d9baf65d88f66d49ac684df381e30055 ]
    
    When compiling with DEBUG=1 on Fedora 32 I'm getting crash for 'perf
    test signal':
    
      Program received signal SIGSEGV, Segmentation fault.
      0x0000000000c68548 in __test_function ()
      (gdb) bt
      #0  0x0000000000c68548 in __test_function ()
      #1  0x00000000004d62e9 in test_function () at tests/bp_signal.c:61
      #2  0x00000000004d689a in test__bp_signal (test=0xa8e280 <generic_ ...
      #3  0x00000000004b7d49 in run_test (test=0xa8e280 <generic_tests+1 ...
      #4  0x00000000004b7e7f in test_and_print (t=0xa8e280 <generic_test ...
      #5  0x00000000004b8927 in __cmd_test (argc=1, argv=0x7fffffffdce0, ...
      ...
    
    It's caused by the symbol __test_function being in the ".bss" section:
    
      $ readelf -a ./perf | less
        [Nr] Name              Type             Address           Offset
             Size              EntSize          Flags  Link  Info  Align
        ...
        [28] .bss              NOBITS           0000000000c356a0  008346a0
             00000000000511f8  0000000000000000  WA       0     0     32
    
      $ nm perf | grep __test_function
      0000000000c68548 B __test_function
    
    I guess most of the time we're just lucky the inline asm ended up in the
    ".text" section, so making it specific explicit with push and pop
    section clauses.
    
      $ readelf -a ./perf | less
        [Nr] Name              Type             Address           Offset
             Size              EntSize          Flags  Link  Info  Align
        ...
        [13] .text             PROGBITS         0000000000431240  00031240
             0000000000306faa  0000000000000000  AX       0     0     16
    
      $ nm perf | grep __test_function
      00000000004d62c8 T __test_function
    
    Committer testing:
    
      $ readelf -wi ~/bin/perf | grep producer -m1
        <c>   DW_AT_producer    : (indirect string, offset: 0x254a): GNU C99 10.2.1 20200723 (Red Hat 10.2.1-1) -mtune=generic -march=x86-64 -ggdb3 -std=gnu99 -fno-omit-frame-pointer -funwind-tables -fstack-protector-all
                                                                                                                                             ^^^^^
                                                                                                                                             ^^^^^
                                                                                                                                             ^^^^^
      $
    
    Before:
    
      $ perf test signal
      20: Breakpoint overflow signal handler                    : FAILED!
      $
    
    After:
    
      $ perf test signal
      20: Breakpoint overflow signal handler                    : Ok
      $
    
    Fixes: 8fd34e1cce18 ("perf test: Improve bp_signal")
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lore.kernel.org/lkml/20200911130005.1842138-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1dcf055a46ba41c971b0d4f7a19c584db4d01bac
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Sun Sep 13 12:47:29 2020 -0700

    Drivers: hv: vmbus: Add timeout to vmbus_wait_for_unload
    
    [ Upstream commit 911e1987efc8f3e6445955fbae7f54b428b92bd3 ]
    
    vmbus_wait_for_unload() looks for a CHANNELMSG_UNLOAD_RESPONSE message
    coming from Hyper-V.  But if the message isn't found for some reason,
    the panic path gets hung forever.  Add a timeout of 10 seconds to prevent
    this.
    
    Fixes: 415719160de3 ("Drivers: hv: vmbus: avoid scheduling in interrupt context in vmbus_initiate_unload()")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Reviewed-by: Dexuan Cui <decui@microsoft.com>
    Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Link: https://lore.kernel.org/r/1600026449-23651-1-git-send-email-mikelley@microsoft.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ae0d92f866e2df7b9e3a5bf8fb295058762942e
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Thu Aug 20 17:45:11 2020 +0200

    ASoC: qcom: Set card->owner to avoid warnings
    
    [ Upstream commit 3c27ea23ffb43262da6c64964163895951aaed4e ]
    
    On Linux 5.9-rc1 I get the following warning with apq8016-sbc:
    
    WARNING: CPU: 2 PID: 69 at sound/core/init.c:207 snd_card_new+0x36c/0x3b0 [snd]
    CPU: 2 PID: 69 Comm: kworker/2:1 Not tainted 5.9.0-rc1 #1
    Workqueue: events deferred_probe_work_func
    pc : snd_card_new+0x36c/0x3b0 [snd]
    lr : snd_card_new+0xf4/0x3b0 [snd]
    Call trace:
     snd_card_new+0x36c/0x3b0 [snd]
     snd_soc_bind_card+0x340/0x9a0 [snd_soc_core]
     snd_soc_register_card+0xf4/0x110 [snd_soc_core]
     devm_snd_soc_register_card+0x44/0xa0 [snd_soc_core]
     apq8016_sbc_platform_probe+0x11c/0x140 [snd_soc_apq8016_sbc]
    
    This warning was introduced in
    commit 81033c6b584b ("ALSA: core: Warn on empty module").
    It looks like we are supposed to set card->owner to THIS_MODULE.
    
    Fix this for all the qcom ASoC drivers.
    
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Fixes: 79119c798649 ("ASoC: qcom: Add Storm machine driver")
    Fixes: bdb052e81f62 ("ASoC: qcom: add apq8016 sound card support")
    Fixes: a6f933f63f2f ("ASoC: qcom: apq8096: Add db820c machine driver")
    Fixes: 6b1687bf76ef ("ASoC: qcom: add sdm845 sound card support")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200820154511.203072-1-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4b96020c38ca58d8c8bd6947f7aeacce80fe084
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Sun Aug 9 21:40:20 2020 -0700

    clk: rockchip: Fix initialization of mux_pll_src_4plls_p
    
    [ Upstream commit e9c006bc782c488f485ffe50de20b44e1e3daa18 ]
    
    A new warning in Clang points out that the initialization of
    mux_pll_src_4plls_p appears incorrect:
    
    ../drivers/clk/rockchip/clk-rk3228.c:140:58: warning: suspicious
    concatenation of string literals in an array initialization; did you
    mean to separate the elements with a comma? [-Wstring-concatenation]
    PNAME(mux_pll_src_4plls_p)      = { "cpll", "gpll", "hdmiphy" "usb480m" };
                                                                  ^
                                                                 ,
    ../drivers/clk/rockchip/clk-rk3228.c:140:48: note: place parentheses
    around the string literal to silence warning
    PNAME(mux_pll_src_4plls_p)      = { "cpll", "gpll", "hdmiphy" "usb480m" };
                                                        ^
    1 warning generated.
    
    Given the name of the variable and the same variable name in rv1108, it
    seems that this should have been four distinct elements. Fix it up by
    adding the comma as suggested.
    
    Fixes: 307a2e9ac524 ("clk: rockchip: add clock controller for rk3228")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1123
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Link: https://lore.kernel.org/r/20200810044020.2063350-1-natechancellor@gmail.com
    Reviewed-by: Heiko Stübner <heiko@sntech.de>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2cbd001d34d12358eb4e1600e4720be224b4900
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 9 16:49:59 2020 +0200

    clk: davinci: Use the correct size when allocating memory
    
    [ Upstream commit 3dabfa2bda48dab717986609762ce2a49335eb99 ]
    
    'sizeof(*pllen)' should be used in place of 'sizeof(*pllout)' to avoid a
    small over-allocation.
    
    Fixes: 2d1726915159 ("clk: davinci: New driver for davinci PLL clocks")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20200809144959.747986-1-christophe.jaillet@wanadoo.fr
    Reviewed-by: David Lechner <david@lechnology.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6da40b74efca9aa9d709ae36a825d14439af9b40
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Sep 10 18:33:51 2020 +0800

    KVM: MIPS: Change the definition of kvm type
    
    [ Upstream commit 15e9e35cd1dec2bc138464de6bf8ef828df19235 ]
    
    MIPS defines two kvm types:
    
     #define KVM_VM_MIPS_TE          0
     #define KVM_VM_MIPS_VZ          1
    
    In Documentation/virt/kvm/api.rst it is said that "You probably want to
    use 0 as machine type", which implies that type 0 be the "automatic" or
    "default" type. And, in user-space libvirt use the null-machine (with
    type 0) to detect the kvm capability, which returns "KVM not supported"
    on a VZ platform.
    
    I try to fix it in QEMU but it is ugly:
    https://lists.nongnu.org/archive/html/qemu-devel/2020-08/msg05629.html
    
    And Thomas Huth suggests me to change the definition of kvm type:
    https://lists.nongnu.org/archive/html/qemu-devel/2020-09/msg03281.html
    
    So I define like this:
    
     #define KVM_VM_MIPS_AUTO        0
     #define KVM_VM_MIPS_VZ          1
     #define KVM_VM_MIPS_TE          2
    
    Since VZ and TE cannot co-exists, using type 0 on a TE platform will
    still return success (so old user-space tools have no problems on new
    kernels); the advantage is that using type 0 on a VZ platform will not
    return failure. So, the only problem is "new user-space tools use type
    2 on old kernels", but if we treat this as a kernel bug, we can backport
    this patch to old stable kernels.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Message-Id: <1599734031-28746-1-git-send-email-chenhc@lemote.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80c468d9abc9d4129809c1ffc90b3c835a1202c2
Author: Gustav Wiklander <gustavwi@axis.com>
Date:   Tue Sep 8 17:11:29 2020 +0200

    spi: Fix memory leak on splited transfers
    
    [ Upstream commit b59a7ca15464c78ea1ba3b280cfc5ac5ece11ade ]
    
    In the prepare_message callback the bus driver has the
    opportunity to split a transfer into smaller chunks.
    spi_map_msg is done after prepare_message.
    
    Function spi_res_release releases the splited transfers
    in the message. Therefore spi_res_release should be called
    after spi_map_msg.
    
    The previous try at this was commit c9ba7a16d0f1
    which released the splited transfers after
    spi_finalize_current_message had been called.
    This introduced a race since the message struct could be
    out of scope because the spi_sync call got completed.
    
    Fixes this leak on spi bus driver spi-bcm2835.c when transfer
    size is greater than 65532:
    
    Kmemleak:
    sg_alloc_table+0x28/0xc8
    spi_map_buf+0xa4/0x300
    __spi_pump_messages+0x370/0x748
    __spi_sync+0x1d4/0x270
    spi_sync+0x34/0x58
    spi_test_execute_msg+0x60/0x340 [spi_loopback_test]
    spi_test_run_iter+0x548/0x578 [spi_loopback_test]
    spi_test_run_test+0x94/0x140 [spi_loopback_test]
    spi_test_run_tests+0x150/0x180 [spi_loopback_test]
    spi_loopback_test_probe+0x50/0xd0 [spi_loopback_test]
    spi_drv_probe+0x84/0xe0
    
    Signed-off-by: Gustav Wiklander <gustavwi@axis.com>
    Link: https://lore.kernel.org/r/20200908151129.15915-1-gustav.wiklander@axis.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c265a94462cb00ed28671540da2b74a32c63a68
Author: Evan Nimmo <evan.nimmo@alliedtelesis.co.nz>
Date:   Wed Sep 9 08:32:47 2020 +1200

    i2c: algo: pca: Reapply i2c bus settings after reset
    
    [ Upstream commit 0a355aeb24081e4538d4d424cd189f16c0bbd983 ]
    
    If something goes wrong (such as the SCL being stuck low) then we need
    to reset the PCA chip. The issue with this is that on reset we lose all
    config settings and the chip ends up in a disabled state which results
    in a lock up/high CPU usage. We need to re-apply any configuration that
    had previously been set and re-enable the chip.
    
    Signed-off-by: Evan Nimmo <evan.nimmo@alliedtelesis.co.nz>
    Reviewed-by: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cababeac915a218b3902aac772b1786068e8e2f3
Author: Gabriel Krisman Bertazi <krisman@collabora.com>
Date:   Wed Aug 19 16:07:31 2020 -0400

    f2fs: Return EOF on unaligned end of file DIO read
    
    [ Upstream commit 20d0a107fb35f37578b919f62bd474d6d358d579 ]
    
    Reading past end of file returns EOF for aligned reads but -EINVAL for
    unaligned reads on f2fs.  While documentation is not strict about this
    corner case, most filesystem returns EOF on this case, like iomap
    filesystems.  This patch consolidates the behavior for f2fs, by making
    it return EOF(0).
    
    it can be verified by a read loop on a file that does a partial read
    before EOF (A file that doesn't end at an aligned address).  The
    following code fails on an unaligned file on f2fs, but not on
    btrfs, ext4, and xfs.
    
      while (done < total) {
        ssize_t delta = pread(fd, buf + done, total - done, off + done);
        if (!delta)
          break;
        ...
      }
    
    It is arguable whether filesystems should actually return EOF or
    -EINVAL, but since iomap filesystems support it, and so does the
    original DIO code, it seems reasonable to consolidate on that.
    
    Signed-off-by: Gabriel Krisman Bertazi <krisman@collabora.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cba1f79e383db89ce397ce6abedf521aef27b90
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Tue Aug 18 15:40:14 2020 +0530

    f2fs: fix indefinite loop scanning for free nid
    
    [ Upstream commit e2cab031ba7b5003cd12185b3ef38f1a75e3dae8 ]
    
    If the sbi->ckpt->next_free_nid is not NAT block aligned and if there
    are free nids in that NAT block between the start of the block and
    next_free_nid, then those free nids will not be scanned in scan_nat_page().
    This results into mismatch between nm_i->available_nids and the sum of
    nm_i->free_nid_count of all NAT blocks scanned. And nm_i->available_nids
    will always be greater than the sum of free nids in all the blocks.
    Under this condition, if we use all the currently scanned free nids,
    then it will loop forever in f2fs_alloc_nid() as nm_i->available_nids
    is still not zero but nm_i->free_nid_count of that partially scanned
    NAT block is zero.
    
    Fix this to align the nm_i->next_scan_nid to the first nid of the
    corresponding NAT block.
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f10c9c9dce4d3ee542987680e2a8576871c05734
Author: David Milburn <dmilburn@redhat.com>
Date:   Wed Sep 2 17:42:52 2020 -0500

    nvme-rdma: cancel async events before freeing event struct
    
    [ Upstream commit 925dd04c1f9825194b9e444c12478084813b2b5d ]
    
    Cancel async event work in case async event has been queued up, and
    nvme_rdma_submit_async_event() runs after event has been freed.
    
    Signed-off-by: David Milburn <dmilburn@redhat.com>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 514171c50909736af8b6cdf6365c0d15bdb869a2
Author: David Milburn <dmilburn@redhat.com>
Date:   Wed Sep 2 17:42:54 2020 -0500

    nvme-fc: cancel async events before freeing event struct
    
    [ Upstream commit e126e8210e950bb83414c4f57b3120ddb8450742 ]
    
    Cancel async event work in case async event has been queued up, and
    nvme_fc_submit_async_event() runs after event has been freed.
    
    Signed-off-by: David Milburn <dmilburn@redhat.com>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c01af4f3b75f6280964653eb17bd6709ec31dc6
Author: Stafford Horne <shorne@gmail.com>
Date:   Thu Sep 3 05:48:58 2020 +0900

    openrisc: Fix cache API compile issue when not inlining
    
    [ Upstream commit 3ae90d764093dfcd6ab8ab6875377302892c87d4 ]
    
    I found this when compiling a kbuild random config with GCC 11.  The
    config enables CONFIG_DEBUG_SECTION_MISMATCH, which sets CFLAGS
    -fno-inline-functions-called-once. This causes the call to cache_loop in
    cache.c to not be inlined causing the below compile error.
    
        In file included from arch/openrisc/mm/cache.c:13:
        arch/openrisc/mm/cache.c: In function 'cache_loop':
        ./arch/openrisc/include/asm/spr.h:16:27: warning: 'asm' operand 0 probably does not match constraints
           16 | #define mtspr(_spr, _val) __asm__ __volatile__ (  \
              |                           ^~~~~~~
        arch/openrisc/mm/cache.c:25:3: note: in expansion of macro 'mtspr'
           25 |   mtspr(reg, line);
              |   ^~~~~
        ./arch/openrisc/include/asm/spr.h:16:27: error: impossible constraint in 'asm'
           16 | #define mtspr(_spr, _val) __asm__ __volatile__ (  \
              |                           ^~~~~~~
        arch/openrisc/mm/cache.c:25:3: note: in expansion of macro 'mtspr'
           25 |   mtspr(reg, line);
              |   ^~~~~
        make[1]: *** [scripts/Makefile.build:283: arch/openrisc/mm/cache.o] Error 1
    
    The asm constraint "K" requires a immediate constant argument to mtspr,
    however because of no inlining a register argument is passed causing a
    failure.  Fix this by using __always_inline.
    
    Link: https://lore.kernel.org/lkml/202008200453.ohnhqkjQ%25lkp@intel.com/
    Signed-off-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30857be3992300481d31b87d7d1d126163c858eb
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Wed Jul 29 01:19:40 2020 +0300

    rapidio: Replace 'select' DMAENGINES 'with depends on'
    
    [ Upstream commit d2b86100245080cfdf1e95e9e07477474c1be2bd ]
    
    Enabling a whole subsystem from a single driver 'select' is frowned
    upon and won't be accepted in new drivers, that need to use 'depends on'
    instead. Existing selection of DMAENGINES will then cause circular
    dependencies. Replace them with a dependency.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61279a7b3e337b8c8605987591964db4a2b3eb91
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Sat Sep 5 10:03:26 2020 -0400

    SUNRPC: stop printk reading past end of string
    
    [ Upstream commit 8c6b6c793ed32b8f9770ebcdf1ba99af423c303b ]
    
    Since p points at raw xdr data, there's no guarantee that it's NULL
    terminated, so we should give a length.  And probably escape any special
    characters too.
    
    Reported-by: Zhi Li <yieli@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6a2cf4d918f3c62b652a87d4e9b667049de4cb1
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Sep 4 17:39:12 2020 -0400

    NFS: Zero-stateid SETATTR should first return delegation
    
    [ Upstream commit 644c9f40cf71969f29add32f32349e71d4995c0b ]
    
    If a write delegation isn't available, the Linux NFS client uses
    a zero-stateid when performing a SETATTR.
    
    NFSv4.0 provides no mechanism for an NFS server to match such a
    request to a particular client. It recalls all delegations for that
    file, even delegations held by the client issuing the request. If
    that client happens to hold a read delegation, the server will
    recall it immediately, resulting in an NFS4ERR_DELAY/CB_RECALL/
    DELEGRETURN sequence.
    
    Optimize out this pipeline bubble by having the client return any
    delegations it may hold on a file before it issues a
    SETATTR(zero-stateid) on that file.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09ca2d2681e95c7603ce1c3601ebbeaaf8415750
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Wed Sep 2 15:23:41 2020 +0200

    spi: spi-loopback-test: Fix out-of-bounds read
    
    [ Upstream commit 837ba18dfcd4db21ad58107c65bfe89753aa56d7 ]
    
    The "tx/rx-transfer - crossing PAGE_SIZE" test always fails when
    len=131071 and rx_offset >= 5:
    
     spi-loopback-test spi0.0: Running test tx/rx-transfer - crossing PAGE_SIZE
     ...
       with iteration values: len = 131071, tx_off = 0, rx_off = 3
       with iteration values: len = 131071, tx_off = 0, rx_off = 4
       with iteration values: len = 131071, tx_off = 0, rx_off = 5
     loopback strangeness - rx changed outside of allowed range at: ...a4321000
       spi_msg@ffffffd5a4157690
         frame_length:  131071
         actual_length: 131071
         spi_transfer@ffffffd5a41576f8
           len:    131071
           tx_buf: ffffffd5a4340ffc
    
    Note that rx_offset > 3 can only occur if the SPI controller driver sets
    ->dma_alignment to a higher value than 4, so most SPI controller drivers
    are not affect.
    
    The allocated Rx buffer is of size SPI_TEST_MAX_SIZE_PLUS, which is 132
    KiB (assuming 4 KiB pages).  This test uses an initial offset into the
    rx_buf of PAGE_SIZE - 4, and a len of 131071, so the range expected to
    be written in this transfer ends at (4096 - 4) + 5 + 131071 == 132 KiB,
    which is also the end of the allocated buffer.  But the code which
    verifies the content of the buffer reads a byte beyond the allocated
    buffer and spuriously fails because this out-of-bounds read doesn't
    return the expected value.
    
    Fix this by using ITERATE_LEN instead of ITERATE_MAX_LEN to avoid
    testing sizes which cause out-of-bounds reads.
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Link: https://lore.kernel.org/r/20200902132341.7079-1-vincent.whitchurch@axis.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad20a37cb784c42d0331a23e97244b98098d271a
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Wed Sep 2 15:09:52 2020 +0200

    regulator: pwm: Fix machine constraints application
    
    [ Upstream commit 59ae97a7a9e1499c2070e29841d1c4be4ae2994a ]
    
    If the zero duty cycle doesn't correspond to any voltage in the voltage
    table, the PWM regulator returns an -EINVAL from get_voltage_sel() which
    results in the core erroring out with a "failed to get the current
    voltage" and ending up not applying the machine constraints.
    
    Instead, return -ENOTRECOVERABLE which makes the core set the voltage
    since it's at an unknown value.
    
    For example, with this device tree:
    
            fooregulator {
                    compatible = "pwm-regulator";
                    pwms = <&foopwm 0 100000>;
                    regulator-min-microvolt = <2250000>;
                    regulator-max-microvolt = <2250000>;
                    regulator-name = "fooregulator";
                    regulator-always-on;
                    regulator-boot-on;
                    voltage-table = <2250000 30>;
            };
    
    Before this patch:
    
      fooregulator: failed to get the current voltage(-22)
    
    After this patch:
    
      fooregulator: Setting 2250000-2250000uV
      fooregulator: 2250 mV
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Link: https://lore.kernel.org/r/20200902130952.24880-1-vincent.whitchurch@axis.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67ee55a92c8a50fc99971cf9303e4a5099b99a3b
Author: James Smart <james.smart@broadcom.com>
Date:   Fri Aug 28 10:53:30 2020 -0700

    scsi: lpfc: Fix FLOGI/PLOGI receive race condition in pt2pt discovery
    
    [ Upstream commit 7b08e89f98cee9907895fabb64cf437bc505ce9a ]
    
    The driver is unable to successfully login with remote device. During pt2pt
    login, the driver completes its FLOGI request with the remote device having
    WWN precedence.  The remote device issues its own (delayed) FLOGI after
    accepting the driver's and, upon transmitting the FLOGI, immediately
    recognizes it has already processed the driver's FLOGI thus it transitions
    to sending a PLOGI before waiting for an ACC to its FLOGI.
    
    In the driver, the FLOGI is received and an ACC sent, followed by the PLOGI
    being received and an ACC sent. The issue is that the PLOGI reception
    occurs before the response from the adapter from the FLOGI ACC is
    received. Processing of the PLOGI sets state flags to perform the REG_RPI
    mailbox command and proceed with the rest of discovery on the port. The
    same completion routine used by both FLOGI and PLOGI is generic in
    nature. One of the things it does is clear flags, and those flags happen to
    drive the rest of discovery.  So what happened was the PLOGI processing set
    the flags, the FLOGI ACC completion cleared them, thus when the PLOGI ACC
    completes it doesn't see the flags and stops.
    
    Fix by modifying the generic completion routine to not clear the rest of
    discovery flag (NLP_ACC_REGLOGIN) unless the completion is also associated
    with performing a mailbox command as part of its handling.  For things such
    as FLOGI ACC, there isn't a subsequent action to perform with the adapter,
    thus there is no mailbox cmd ptr. PLOGI ACC though will perform REG_RPI
    upon completion, thus there is a mailbox cmd ptr.
    
    Link: https://lore.kernel.org/r/20200828175332.130300-3-james.smart@broadcom.com
    Co-developed-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7c720df355273db19093c487c460fb2067068dd
Author: Javed Hasan <jhasan@marvell.com>
Date:   Tue Aug 25 02:39:40 2020 -0700

    scsi: libfc: Fix for double free()
    
    [ Upstream commit 5a5b80f98534416b3b253859897e2ba1dc241e70 ]
    
    Fix for '&fp->skb' double free.
    
    Link:
    https://lore.kernel.org/r/20200825093940.19612-1-jhasan@marvell.com
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Javed Hasan <jhasan@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70f1396b14549ef191df79bd29f9760467cbc54d
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Aug 23 17:14:53 2020 +0800

    scsi: pm8001: Fix memleak in pm8001_exec_internal_task_abort
    
    [ Upstream commit ea403fde7552bd61bad6ea45e3feb99db77cb31e ]
    
    When pm8001_tag_alloc() fails, task should be freed just like it is done in
    the subsequent error paths.
    
    Link: https://lore.kernel.org/r/20200823091453.4782-1-dinghao.liu@zju.edu.cn
    Acked-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c642341b09f367b5d85c97e30e45afc00241f1f9
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Aug 20 18:52:43 2020 -0400

    NFSv4.1 handle ERR_DELAY error reclaiming locking state on delegation recall
    
    [ Upstream commit 3d7a9520f0c3e6a68b6de8c5812fc8b6d7a52626 ]
    
    A client should be able to handle getting an ERR_DELAY error
    while doing a LOCK call to reclaim state due to delegation being
    recalled. This is a transient error that can happen due to server
    moving its volumes and invalidating its file location cache and
    upon reference to it during the LOCK call needing to do an
    expensive lookup (leading to an ERR_DELAY error on a PUTFH).
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 931f10b04b3040c602466f90989f798aa1cf5ddc
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Thu Aug 20 14:53:14 2020 -0700

    hv_netvsc: Remove "unlikely" from netvsc_select_queue
    
    commit 4d820543c54c47a2bd3c95ddbf52f83c89a219a0 upstream.
    
    When using vf_ops->ndo_select_queue, the number of queues of VF is
    usually bigger than the synthetic NIC. This condition may happen
    often.
    Remove "unlikely" from the comparison of ndev->real_num_tx_queues.
    
    Fixes: b3bf5666a510 ("hv_netvsc: defer queue selection to VF")
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf1a59e1ac54d8f7e211b845100dbd778624aeda
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Sat Aug 15 04:46:41 2020 -0400

    net: handle the return value of pskb_carve_frag_list() correctly
    
    commit eabe861881a733fc84f286f4d5a1ffaddd4f526f upstream.
    
    pskb_carve_frag_list() may return -ENOMEM in pskb_carve_inside_nonlinear().
    we should handle this correctly or we would get wrong sk_buff.
    
    Fixes: 6fa01ccd8830 ("skbuff: Add pskb_extract() helper function")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64463253511adad375549a79cf2094de6effe817
Author: Naresh Kumar PBS <nareshkumar.pbs@broadcom.com>
Date:   Mon Aug 24 11:14:35 2020 -0700

    RDMA/bnxt_re: Restrict the max_gids to 256
    
    commit 847b97887ed4569968d5b9a740f2334abca9f99a upstream.
    
    Some adapters report more than 256 gid entries. Restrict it to 256 for
    now.
    
    Fixes: 1ac5a4047975("RDMA/bnxt_re: Add bnxt_re RoCE driver")
    Link: https://lore.kernel.org/r/1598292876-26529-6-git-send-email-selvin.xavier@broadcom.com
    Signed-off-by: Naresh Kumar PBS <nareshkumar.pbs@broadcom.com>
    Signed-off-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad2dd3f4e5ac85664cbdca5be2d533e9e9207e8c
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Fri Jun 5 14:12:34 2020 -0500

    gfs2: initialize transaction tr_ailX_lists earlier
    
    commit cbcc89b630447ec7836aa2b9242d9bb1725f5a61 upstream.
    
    Since transactions may be freed shortly after they're created, before
    a log_flush occurs, we need to initialize their ail1 and ail2 lists
    earlier. Before this patch, the ail1 list was initialized in gfs2_log_flush().
    This moves the initialization to the point when the transaction is first
    created.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Cc: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6486bc4bc514c91d26f1c00add2aec55b009e359
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Tue Sep 4 14:19:16 2018 -0700

    scsi: qla2xxx: Reduce holding sess_lock to prevent CPU lock-up
    
    commit 0aca77843e2803bf4fab1598b7891c56c16be979 upstream.
    
    - Reduce sess_lock holding to prevent CPU Lock up. sess_lock was held across
      fc_port registration and deletion.  These calls can be blocked by upper
      layer. Sess_lock is also being accessed by interrupt thread.
    
    - Reduce number of loops in processing work_list to prevent kernel complaint
      of CPU lockup or holding sess_lock.
    
    Reported-by: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
    Tested-by: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
    Fixes: 9ba1cb25c151 ("scsi: qla2xxx: Remove all rports if fabric scan retry fails")
    Link: https://lore.kernel.org/linux-scsi/D01377DD-2E86-427B-BA0C-8D7649E37870@oracle.com/T/#t
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8084042b063f8479a7163654254dd838a697240d
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Fri Aug 31 11:24:31 2018 -0700

    scsi: qla2xxx: Move rport registration out of internal work_list
    
    commit cd4ed6b470f1569692b5d0d295b207f870570829 upstream.
    
    Currently, the rport registration is being called from a single work element
    that is used to process QLA internal "work_list".  This work_list is meant for
    quick and simple task (ie no sleep).  The Rport registration process sometime
    can be delayed by upper layer.  This causes back pressure with the internal
    queue where other jobs are unable to move forward.
    
    This patch will schedule the registration process with a new work element
    (fc_port.reg_work).  While the RPort is being registered, the current state of
    the fcport will not move forward until the registration is done.  If the state
    of the fabric has changed, a new field/next_disc_state will record the next
    action on whether to 'DELETE' or 'Reverify the session/ADISC'.
    
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d559fcb3cf68b0ff7aa044b503e15f6c7a8d08c
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Fri Aug 31 11:24:29 2018 -0700

    scsi: qla2xxx: Update rscn_rcvd field to more meaningful scan_needed
    
    commit cb873ba4002095d1e2fc60521bc4d860c7b72b92 upstream.
    
    Rename rscn_rcvd field to scan_needed to be more meaningful.
    
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65e389d8656e04252b0080416fe544a7ea8a6d76
Author: Daniel Mack <daniel@zonque.org>
Date:   Sat Jun 20 21:39:25 2020 +0200

    dsa: Allow forwarding of redirected IGMP traffic
    
    commit 1ed9ec9b08addbd8d3e36d5f4a652d8590a6ddb7 upstream.
    
    The driver for Marvell switches puts all ports in IGMP snooping mode
    which results in all IGMP/MLD frames that ingress on the ports to be
    forwarded to the CPU only.
    
    The bridge code in the kernel can then interpret these frames and act
    upon them, for instance by updating the mdb in the switch to reflect
    multicast memberships of stations connected to the ports. However,
    the IGMP/MLD frames must then also be forwarded to other ports of the
    bridge so external IGMP queriers can track membership reports, and
    external multicast clients can receive query reports from foreign IGMP
    queriers.
    
    Currently, this is impossible as the EDSA tagger sets offload_fwd_mark
    on the skb when it unwraps the tagged frames, and that will make the
    switchdev layer prevent the skb from egressing on any other port of
    the same switch.
    
    To fix that, look at the To_CPU code in the DSA header and make
    forwarding of the frame possible for trapped IGMP packets.
    
    Introduce some #defines for the frame types to make the code a bit more
    comprehensive.
    
    This was tested on a Marvell 88E6352 variant.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: DENG Qingfang <dqfext@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
