commit 5ee93551c703f8fa1a6c414a7d08f956de311df3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 6 13:06:31 2019 +0100

    Linux 4.19.82

commit 914a7d429da52b9547064c3b1a2fd4dcf1023b69
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 28 09:10:56 2019 +0100

    Revert "ALSA: hda: Flush interrupts on disabling"
    
    [ Upstream commit 1a7f60b9df614bb36d14dc0c0bc898a31b2b506f ]
    
    This reverts commit caa8422d01e983782548648e125fd617cadcec3f.
    
    It turned out that this commit caused a regression at shutdown /
    reboot, as the synchronize_irq() calls seems blocking the whole
    shutdown.  Also another part of the change about shuffling the call
    order looks suspicious; the azx_stop_chip() call disables the CORB /
    RIRB while the others may still need the CORB/RIRB update.
    
    Since the original commit itself was a cargo-fix, let's revert the
    whole patch.
    
    Fixes: caa8422d01e9 ("ALSA: hda: Flush interrupts on disabling")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205333
    BugLinK: https://bugs.freedesktop.org/show_bug.cgi?id=111174
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://lore.kernel.org/r/20191028081056.22010-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f5603029223a169ab2e73334a3bcaa7b2c3a60b
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Oct 22 21:58:14 2019 +1000

    powerpc/powernv: Fix CPU idle to be called with IRQs disabled
    
    [ Upstream commit 7d6475051fb3d9339c5c760ed9883bc0a9048b21 ]
    
    Commit e78a7614f3876 ("idle: Prevent late-arriving interrupts from
    disrupting offline") changes arch_cpu_idle_dead to be called with
    interrupts disabled, which triggers the WARN in pnv_smp_cpu_kill_self.
    
    Fix this by fixing up irq_happened after hard disabling, rather than
    requiring there are no pending interrupts, similarly to what was done
    done until commit 2525db04d1cc5 ("powerpc/powernv: Simplify lazy IRQ
    handling in CPU offline").
    
    Fixes: e78a7614f3876 ("idle: Prevent late-arriving interrupts from disrupting offline")
    Reported-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    [mpe: Add unexpected_mask rather than checking for known bad values,
          change the WARN_ON() to a WARN_ON_ONCE()]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191022115814.22456-1-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92930e9223994a4e26e9743e4131ad78d3f27ef0
Author: Justin Song <flyingecar@gmail.com>
Date:   Thu Oct 24 12:27:14 2019 +0200

    ALSA: usb-audio: Add DSD support for Gustard U16/X26 USB Interface
    
    [ Upstream commit e2995b95a914bbc6b5352be27d5d5f33ec802d2c ]
    
    This patch adds native DSD support for Gustard U16/X26 USB Interface.
    Tested using VID and fp->dsd_raw method.
    
    Signed-off-by: Justin Song <flyingecar@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/CA+9XP1ipsFn+r3bCBKRinQv-JrJ+EHOGBdZWZoMwxFv0R8Y1MQ@mail.gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c08182dbf057106e7cf146f2ed2f526f7818657b
Author: Jussi Laako <jussi@sonarnerd.net>
Date:   Wed Aug 28 00:08:47 2019 +0300

    ALSA: usb-audio: Update DSD support quirks for Oppo and Rotel
    
    [ Upstream commit 0067e154b11e236d62a7a8205f321b097c21a35b ]
    
    Oppo has issued firmware updates that change alt setting used for DSD
    support. However, these devices seem to support auto-detection, so
    support is moved from explicit whitelisting to auto-detection.
    
    Also Rotel devices have USB interfaces that support DSD with
    auto-detection.
    
    Signed-off-by: Jussi Laako <jussi@sonarnerd.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8808d2e79b57d9ca5fd07bcb21a8bfef05d3010
Author: Jussi Laako <jussi@sonarnerd.net>
Date:   Wed Aug 28 00:08:46 2019 +0300

    ALSA: usb-audio: DSD auto-detection for Playback Designs
    
    [ Upstream commit eb7505d52a2f8b0cfc3fd7146d8cb2dab5a73f0d ]
    
    Add DSD support auto-detection for newer Playback Designs devices. Older
    device generations have a different USB interface implementation.
    
    Keep the auto-detection VID whitelist sorted.
    
    Signed-off-by: Jussi Laako <jussi@sonarnerd.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83131743069386182be6b2c5c44071df519144aa
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 30 22:42:57 2019 +0100

    ALSA: timer: Fix mutex deadlock at releasing card
    
    [ Upstream commit a39331867335d4a94b6165e306265c9e24aca073 ]
    
    When a card is disconnected while in use, the system waits until all
    opened files are closed then releases the card.  This is done via
    put_device() of the card device in each device release code.
    
    The recently reported mutex deadlock bug happens in this code path;
    snd_timer_close() for the timer device deals with the global
    register_mutex and it calls put_device() there.  When this timer
    device is the last one, the card gets freed and it eventually calls
    snd_timer_free(), which has again the protection with the global
    register_mutex -- boom.
    
    Basically put_device() call itself is race-free, so a relative simple
    workaround is to move this put_device() call out of the mutex.  For
    achieving that, in this patch, snd_timer_close_locked() got a new
    argument to store the card device pointer in return, and each caller
    invokes put_device() with the returned object after the mutex unlock.
    
    Reported-and-tested-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 145fadf6d99a91ad41fd0a6e9357afec827a046f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 28 17:11:10 2019 +0100

    ALSA: timer: Simplify error path in snd_timer_open()
    
    [ Upstream commit 41672c0c24a62699d20aab53b98d843b16483053 ]
    
    Just a minor refactoring to use the standard goto for error paths in
    snd_timer_open() instead of open code.  The first mutex_lock() is
    moved to the beginning of the function to make the code clearer.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6c91087f5d5bafdbd073ad8e9fcc0100635f36d
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Sep 24 13:11:26 2019 -0700

    sch_netem: fix rcu splat in netem_enqueue()
    
    commit 159d2c7d8106177bd9a986fd005a311fe0d11285 upstream.
    
    qdisc_root() use from netem_enqueue() triggers a lockdep warning.
    
    __dev_queue_xmit() uses rcu_read_lock_bh() which is
    not equivalent to rcu_read_lock() + local_bh_disable_bh as far
    as lockdep is concerned.
    
    WARNING: suspicious RCU usage
    5.3.0-rc7+ #0 Not tainted
    -----------------------------
    include/net/sch_generic.h:492 suspicious rcu_dereference_check() usage!
    
    other info that might help us debug this:
    
    rcu_scheduler_active = 2, debug_locks = 1
    3 locks held by syz-executor427/8855:
     #0: 00000000b5525c01 (rcu_read_lock_bh){....}, at: lwtunnel_xmit_redirect include/net/lwtunnel.h:92 [inline]
     #0: 00000000b5525c01 (rcu_read_lock_bh){....}, at: ip_finish_output2+0x2dc/0x2570 net/ipv4/ip_output.c:214
     #1: 00000000b5525c01 (rcu_read_lock_bh){....}, at: __dev_queue_xmit+0x20a/0x3650 net/core/dev.c:3804
     #2: 00000000364bae92 (&(&sch->q.lock)->rlock){+.-.}, at: spin_lock include/linux/spinlock.h:338 [inline]
     #2: 00000000364bae92 (&(&sch->q.lock)->rlock){+.-.}, at: __dev_xmit_skb net/core/dev.c:3502 [inline]
     #2: 00000000364bae92 (&(&sch->q.lock)->rlock){+.-.}, at: __dev_queue_xmit+0x14b8/0x3650 net/core/dev.c:3838
    
    stack backtrace:
    CPU: 0 PID: 8855 Comm: syz-executor427 Not tainted 5.3.0-rc7+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x172/0x1f0 lib/dump_stack.c:113
     lockdep_rcu_suspicious+0x153/0x15d kernel/locking/lockdep.c:5357
     qdisc_root include/net/sch_generic.h:492 [inline]
     netem_enqueue+0x1cfb/0x2d80 net/sched/sch_netem.c:479
     __dev_xmit_skb net/core/dev.c:3527 [inline]
     __dev_queue_xmit+0x15d2/0x3650 net/core/dev.c:3838
     dev_queue_xmit+0x18/0x20 net/core/dev.c:3902
     neigh_hh_output include/net/neighbour.h:500 [inline]
     neigh_output include/net/neighbour.h:509 [inline]
     ip_finish_output2+0x1726/0x2570 net/ipv4/ip_output.c:228
     __ip_finish_output net/ipv4/ip_output.c:308 [inline]
     __ip_finish_output+0x5fc/0xb90 net/ipv4/ip_output.c:290
     ip_finish_output+0x38/0x1f0 net/ipv4/ip_output.c:318
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip_mc_output+0x292/0xf40 net/ipv4/ip_output.c:417
     dst_output include/net/dst.h:436 [inline]
     ip_local_out+0xbb/0x190 net/ipv4/ip_output.c:125
     ip_send_skb+0x42/0xf0 net/ipv4/ip_output.c:1555
     udp_send_skb.isra.0+0x6b2/0x1160 net/ipv4/udp.c:887
     udp_sendmsg+0x1e96/0x2820 net/ipv4/udp.c:1174
     inet_sendmsg+0x9e/0xe0 net/ipv4/af_inet.c:807
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0xd7/0x130 net/socket.c:657
     ___sys_sendmsg+0x3e2/0x920 net/socket.c:2311
     __sys_sendmmsg+0x1bf/0x4d0 net/socket.c:2413
     __do_sys_sendmmsg net/socket.c:2442 [inline]
     __se_sys_sendmmsg net/socket.c:2439 [inline]
     __x64_sys_sendmmsg+0x9d/0x100 net/socket.c:2439
     do_syscall_64+0xfd/0x6a0 arch/x86/entry/common.c:296
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ecf8529d52ac62b1224e7c96f52bb059efde057
Author: Valentin Vidic <vvidic@valentin-vidic.from.hr>
Date:   Tue Oct 15 22:20:20 2019 +0200

    net: usb: sr9800: fix uninitialized local variable
    
    commit 77b6d09f4ae66d42cd63b121af67780ae3d1a5e9 upstream.
    
    Make sure res does not contain random value if the call to
    sr_read_cmd fails for some reason.
    
    Reported-by: syzbot+f1842130bbcfb335bac1@syzkaller.appspotmail.com
    Signed-off-by: Valentin Vidic <vvidic@valentin-vidic.from.hr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14a703ef2dc4671ff8a13a166c98ac6bb7381f72
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 7 15:43:01 2019 -0700

    bonding: fix potential NULL deref in bond_update_slave_arr
    
    commit a7137534b597b7c303203e6bc3ed87e87a273bb8 upstream.
    
    syzbot got a NULL dereference in bond_update_slave_arr() [1],
    happening after a failure to allocate bond->slave_arr
    
    A workqueue (bond_slave_arr_handler) is supposed to retry
    the allocation later, but if the slave is removed before
    the workqueue had a chance to complete, bond->slave_arr
    can still be NULL.
    
    [1]
    
    Failed to build slave-array.
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN PTI
    Modules linked in:
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:bond_update_slave_arr.cold+0xc6/0x198 drivers/net/bonding/bond_main.c:4039
    RSP: 0018:ffff88018fe33678 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffc9000290b000
    RDX: 0000000000000000 RSI: ffffffff82b63037 RDI: ffff88019745ea20
    RBP: ffff88018fe33760 R08: ffff880170754280 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: ffff88019745ea00 R14: 0000000000000000 R15: ffff88018fe338b0
    FS:  00007febd837d700(0000) GS:ffff8801dad00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000004540a0 CR3: 00000001c242e005 CR4: 00000000001626f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     [<ffffffff82b5b45e>] __bond_release_one+0x43e/0x500 drivers/net/bonding/bond_main.c:1923
     [<ffffffff82b5b966>] bond_release drivers/net/bonding/bond_main.c:2039 [inline]
     [<ffffffff82b5b966>] bond_do_ioctl+0x416/0x870 drivers/net/bonding/bond_main.c:3562
     [<ffffffff83ae25f4>] dev_ifsioc+0x6f4/0x940 net/core/dev_ioctl.c:328
     [<ffffffff83ae2e58>] dev_ioctl+0x1b8/0xc70 net/core/dev_ioctl.c:495
     [<ffffffff83995ffd>] sock_do_ioctl+0x1bd/0x300 net/socket.c:1088
     [<ffffffff83996a80>] sock_ioctl+0x300/0x5d0 net/socket.c:1196
     [<ffffffff81b124db>] vfs_ioctl fs/ioctl.c:47 [inline]
     [<ffffffff81b124db>] file_ioctl fs/ioctl.c:501 [inline]
     [<ffffffff81b124db>] do_vfs_ioctl+0xacb/0x1300 fs/ioctl.c:688
     [<ffffffff81b12dc6>] SYSC_ioctl fs/ioctl.c:705 [inline]
     [<ffffffff81b12dc6>] SyS_ioctl+0xb6/0xe0 fs/ioctl.c:696
     [<ffffffff8101ccc8>] do_syscall_64+0x528/0x770 arch/x86/entry/common.c:305
     [<ffffffff84400091>] entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: ee6377147409 ("bonding: Simplify the xmit function for modes that use xmit_hash")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24aaf7f4528f0df0f29667d3921f4a63aa7b806c
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 7 18:40:59 2019 +0200

    NFC: pn533: fix use-after-free and memleaks
    
    commit 6af3aa57a0984e061f61308fe181a9a12359fecc upstream.
    
    The driver would fail to deregister and its class device and free
    related resources on late probe errors.
    
    Reported-by: syzbot+cb035c75c03dbe34b796@syzkaller.appspotmail.com
    Fixes: 32ecc75ded72 ("NFC: pn533: change order operations in dev registation")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d9c4a9b867771efbddd6a7d5df6c284babbbd04
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 7 10:58:29 2019 +0100

    rxrpc: Fix trace-after-put looking at the put peer record
    
    commit 55f6c98e3674ce16038a1949c3f9ca5a9a99f289 upstream.
    
    rxrpc_put_peer() calls trace_rxrpc_peer() after it has done the decrement
    of the refcount - which looks at the debug_id in the peer record.  But
    unless the refcount was reduced to zero, we no longer have the right to
    look in the record and, indeed, it may be deleted by some other thread.
    
    Fix this by getting the debug_id out before decrementing the refcount and
    then passing that into the tracepoint.
    
    This can cause the following symptoms:
    
        BUG: KASAN: use-after-free in __rxrpc_put_peer net/rxrpc/peer_object.c:411
        [inline]
        BUG: KASAN: use-after-free in rxrpc_put_peer+0x685/0x6a0
        net/rxrpc/peer_object.c:435
        Read of size 8 at addr ffff888097ec0058 by task syz-executor823/24216
    
    Fixes: 1159d4b496f5 ("rxrpc: Add a tracepoint to track rxrpc_peer refcounting")
    Reported-by: syzbot+b9be979c55f2bea8ed30@syzkaller.appspotmail.com
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8e51ce79c157188e209e5ea0afaf6b42dd76104
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 7 10:58:29 2019 +0100

    rxrpc: rxrpc_peer needs to hold a ref on the rxrpc_local record
    
    commit 9ebeddef58c41bd700419cdcece24cf64ce32276 upstream.
    
    The rxrpc_peer record needs to hold a reference on the rxrpc_local record
    it points as the peer is used as a base to access information in the
    rxrpc_local record.
    
    This can cause problems in __rxrpc_put_peer(), where we need the network
    namespace pointer, and in rxrpc_send_keepalive(), where we need to access
    the UDP socket, leading to symptoms like:
    
        BUG: KASAN: use-after-free in __rxrpc_put_peer net/rxrpc/peer_object.c:411
        [inline]
        BUG: KASAN: use-after-free in rxrpc_put_peer+0x685/0x6a0
        net/rxrpc/peer_object.c:435
        Read of size 8 at addr ffff888097ec0058 by task syz-executor823/24216
    
    Fix this by taking a ref on the local record for the peer record.
    
    Fixes: ace45bec6d77 ("rxrpc: Fix firewall route keepalive")
    Fixes: 2baec2c3f854 ("rxrpc: Support network namespacing")
    Reported-by: syzbot+b9be979c55f2bea8ed30@syzkaller.appspotmail.com
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 570ab0dd35f95a2260d509c4108debd224fdfdf5
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 7 10:58:28 2019 +0100

    rxrpc: Fix call ref leak
    
    commit c48fc11b69e95007109206311b0187a3090591f3 upstream.
    
    When sendmsg() finds a call to continue on with, if the call is in an
    inappropriate state, it doesn't release the ref it just got on that call
    before returning an error.
    
    This causes the following symptom to show up with kasan:
    
            BUG: KASAN: use-after-free in rxrpc_send_keepalive+0x8a2/0x940
            net/rxrpc/output.c:635
            Read of size 8 at addr ffff888064219698 by task kworker/0:3/11077
    
    where line 635 is:
    
            whdr.epoch      = htonl(peer->local->rxnet->epoch);
    
    The local endpoint (which cannot be pinned by the call) has been released,
    but not the peer (which is pinned by the call).
    
    Fix this by releasing the call in the error path.
    
    Fixes: 37411cad633f ("rxrpc: Fix potential NULL-pointer exception")
    Reported-by: syzbot+d850c266e3df14da1d31@syzkaller.appspotmail.com
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d634bd01b3a02c855a281e8635ae0a6ef71cc7da
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Oct 6 14:24:25 2019 -0700

    llc: fix sk_buff leak in llc_conn_service()
    
    commit b74555de21acd791f12c4a1aeaf653dd7ac21133 upstream.
    
    syzbot reported:
    
        BUG: memory leak
        unreferenced object 0xffff88811eb3de00 (size 224):
           comm "syz-executor559", pid 7315, jiffies 4294943019 (age 10.300s)
           hex dump (first 32 bytes):
             00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
             00 a0 38 24 81 88 ff ff 00 c0 f2 15 81 88 ff ff  ..8$............
           backtrace:
             [<000000008d1c66a1>] kmemleak_alloc_recursive  include/linux/kmemleak.h:55 [inline]
             [<000000008d1c66a1>] slab_post_alloc_hook mm/slab.h:439 [inline]
             [<000000008d1c66a1>] slab_alloc_node mm/slab.c:3269 [inline]
             [<000000008d1c66a1>] kmem_cache_alloc_node+0x153/0x2a0 mm/slab.c:3579
             [<00000000447d9496>] __alloc_skb+0x6e/0x210 net/core/skbuff.c:198
             [<000000000cdbf82f>] alloc_skb include/linux/skbuff.h:1058 [inline]
             [<000000000cdbf82f>] llc_alloc_frame+0x66/0x110 net/llc/llc_sap.c:54
             [<000000002418b52e>] llc_conn_ac_send_sabme_cmd_p_set_x+0x2f/0x140  net/llc/llc_c_ac.c:777
             [<000000001372ae17>] llc_exec_conn_trans_actions net/llc/llc_conn.c:475  [inline]
             [<000000001372ae17>] llc_conn_service net/llc/llc_conn.c:400 [inline]
             [<000000001372ae17>] llc_conn_state_process+0x1ac/0x640  net/llc/llc_conn.c:75
             [<00000000f27e53c1>] llc_establish_connection+0x110/0x170  net/llc/llc_if.c:109
             [<00000000291b2ca0>] llc_ui_connect+0x10e/0x370 net/llc/af_llc.c:477
             [<000000000f9c740b>] __sys_connect+0x11d/0x170 net/socket.c:1840
             [...]
    
    The bug is that most callers of llc_conn_send_pdu() assume it consumes a
    reference to the skb, when actually due to commit b85ab56c3f81 ("llc:
    properly handle dev_queue_xmit() return value") it doesn't.
    
    Revert most of that commit, and instead make the few places that need
    llc_conn_send_pdu() to *not* consume a reference call skb_get() before.
    
    Fixes: b85ab56c3f81 ("llc: properly handle dev_queue_xmit() return value")
    Reported-by: syzbot+6b825a6494a04cc0e3f7@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f3f7409f028283c118bee4446e86bff70ee271c
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Oct 6 14:24:24 2019 -0700

    llc: fix sk_buff leak in llc_sap_state_process()
    
    commit c6ee11c39fcc1fb55130748990a8f199e76263b4 upstream.
    
    syzbot reported:
    
        BUG: memory leak
        unreferenced object 0xffff888116270800 (size 224):
           comm "syz-executor641", pid 7047, jiffies 4294947360 (age 13.860s)
           hex dump (first 32 bytes):
             00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
             00 20 e1 2a 81 88 ff ff 00 40 3d 2a 81 88 ff ff  . .*.....@=*....
           backtrace:
             [<000000004d41b4cc>] kmemleak_alloc_recursive  include/linux/kmemleak.h:55 [inline]
             [<000000004d41b4cc>] slab_post_alloc_hook mm/slab.h:439 [inline]
             [<000000004d41b4cc>] slab_alloc_node mm/slab.c:3269 [inline]
             [<000000004d41b4cc>] kmem_cache_alloc_node+0x153/0x2a0 mm/slab.c:3579
             [<00000000506a5965>] __alloc_skb+0x6e/0x210 net/core/skbuff.c:198
             [<000000001ba5a161>] alloc_skb include/linux/skbuff.h:1058 [inline]
             [<000000001ba5a161>] alloc_skb_with_frags+0x5f/0x250  net/core/skbuff.c:5327
             [<0000000047d9c78b>] sock_alloc_send_pskb+0x269/0x2a0  net/core/sock.c:2225
             [<000000003828fe54>] sock_alloc_send_skb+0x32/0x40 net/core/sock.c:2242
             [<00000000e34d94f9>] llc_ui_sendmsg+0x10a/0x540 net/llc/af_llc.c:933
             [<00000000de2de3fb>] sock_sendmsg_nosec net/socket.c:652 [inline]
             [<00000000de2de3fb>] sock_sendmsg+0x54/0x70 net/socket.c:671
             [<000000008fe16e7a>] __sys_sendto+0x148/0x1f0 net/socket.c:1964
             [...]
    
    The bug is that llc_sap_state_process() always takes an extra reference
    to the skb, but sometimes neither llc_sap_next_state() nor
    llc_sap_state_process() itself drops this reference.
    
    Fix it by changing llc_sap_next_state() to never consume a reference to
    the skb, rather than sometimes do so and sometimes not.  Then remove the
    extra skb_get() and kfree_skb() from llc_sap_state_process().
    
    Reported-by: syzbot+6bf095f9becf5efef645@syzkaller.appspotmail.com
    Reported-by: syzbot+31c16aa4202dace3812e@syzkaller.appspotmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 948e8eba656fe7a08f72d20e69985444390ccdfc
Author: Sven Eckelmann <sven@narfation.org>
Date:   Thu Oct 3 17:02:01 2019 +0200

    batman-adv: Avoid free/alloc race when handling OGM buffer
    
    commit 40e220b4218bb3d278e5e8cc04ccdfd1c7ff8307 upstream.
    
    Each slave interface of an B.A.T.M.A.N. IV virtual interface has an OGM
    packet buffer which is initialized using data from netdevice notifier and
    other rtnetlink related hooks. It is sent regularly via various slave
    interfaces of the batadv virtual interface and in this process also
    modified (realloced) to integrate additional state information via TVLV
    containers.
    
    It must be avoided that the worker item is executed without a common lock
    with the netdevice notifier/rtnetlink helpers. Otherwise it can either
    happen that half modified/freed data is sent out or functions modifying the
    OGM buffer try to access already freed memory regions.
    
    Reported-by: syzbot+0cc629f19ccb8534935b@syzkaller.appspotmail.com
    Fixes: c6c8fea29769 ("net: Add batman-adv meshing protocol")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74001646d47c900e2f817f684d92e4ce0f96e9eb
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Thu Oct 31 18:40:33 2019 -0400

    NFS: Fix an RCU lock leak in nfs4_refresh_delegation_stateid()
    
    commit 79cc55422ce99be5964bde208ba8557174720893 upstream.
    
    A typo in nfs4_refresh_delegation_stateid() means we're leaking an
    RCU lock, and always returning a value of 'false'. As the function
    description states, we were always supposed to return 'true' if a
    matching delegation was found.
    
    Fixes: 12f275cdd163 ("NFSv4: Retry CLOSE and DELEGRETURN on NFS4ERR_OLD_STATEID.")
    Cc: stable@vger.kernel.org # v4.15+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd9a708c7bde2175357acf87ff3a4416b9807f59
Author: Pelle van Gils <pelle@vangils.xyz>
Date:   Thu Oct 24 16:04:31 2019 +0200

    drm/amdgpu/powerplay/vega10: allow undervolting in p7
    
    commit e6f4e274c1e52d1f0bfe293fb44ddf59de6c0374 upstream.
    
    The vega10_odn_update_soc_table() function does not allow the SCLK
    dependent voltage to be set for power-state 7 to a value below the default
    in pptable. Change the for-loop condition to allow undervolting in the
    highest state.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=205277
    Signed-off-by: Pelle van Gils <pelle@vangils.xyz>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e285a5c1401191f2ccc58ebf4a8a19293fcf069
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Oct 23 08:31:38 2019 -0700

    dmaengine: cppi41: Fix cppi41_dma_prep_slave_sg() when idle
    
    commit bacdcb6675e170bb2e8d3824da220e10274f42a7 upstream.
    
    Yegor Yefremov <yegorslists@googlemail.com> reported that musb and ftdi
    uart can fail for the first open of the uart unless connected using
    a hub.
    
    This is because the first dma call done by musb_ep_program() must wait
    if cppi41 is PM runtime suspended. Otherwise musb_ep_program() continues
    with other non-dma packets before the DMA transfer is started causing at
    least ftdi uarts to fail to receive data.
    
    Let's fix the issue by waking up cppi41 with PM runtime calls added to
    cppi41_dma_prep_slave_sg() and return NULL if still idled. This way we
    have musb_ep_program() continue with PIO until cppi41 is awake.
    
    Fixes: fdea2d09b997 ("dmaengine: cppi41: Add basic PM runtime support")
    Reported-by: Yegor Yefremov <yegorslists@googlemail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Cc: stable@vger.kernel.org # v4.9+
    Link: https://lore.kernel.org/r/20191023153138.23442-1-tony@atomide.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0e406be17e59845ae43111267658dcf827cc711
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Thu Oct 17 08:26:06 2019 -0700

    dmaengine: qcom: bam_dma: Fix resource leak
    
    commit 7667819385457b4aeb5fac94f67f52ab52cc10d5 upstream.
    
    bam_dma_terminate_all() will leak resources if any of the transactions are
    committed to the hardware (present in the desc fifo), and not complete.
    Since bam_dma_terminate_all() does not cause the hardware to be updated,
    the hardware will still operate on any previously committed transactions.
    This can cause memory corruption if the memory for the transaction has been
    reassigned, and will cause a sync issue between the BAM and its client(s).
    
    Fix this by properly updating the hardware in bam_dma_terminate_all().
    
    Fixes: e7c0fe2a5c84 ("dmaengine: add Qualcomm BAM dma driver")
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20191017152606.34120-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64efcbc7a5a3c7a14e42ccf7b8a7e7667d672a33
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Oct 18 07:43:21 2019 -0400

    rtlwifi: Fix potential overflow on P2P code
    
    commit 8c55dedb795be8ec0cf488f98c03a1c2176f7fb1 upstream.
    
    Nicolas Waisman noticed that even though noa_len is checked for
    a compatible length it's still possible to overrun the buffers
    of p2pinfo since there's no check on the upper bound of noa_num.
    Bound noa_num against P2P_MAX_NOA_NUM.
    
    Reported-by: Nicolas Waisman <nico@semmle.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8166916152825d84bff2d94d6c7bce2d703b9df
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Tue Oct 29 15:30:51 2019 +0000

    arm64: Ensure VM_WRITE|VM_SHARED ptes are clean by default
    
    commit aa57157be69fb599bd4c38a4b75c5aad74a60ec0 upstream.
    
    Shared and writable mappings (__S.1.) should be clean (!dirty) initially
    and made dirty on a subsequent write either through the hardware DBM
    (dirty bit management) mechanism or through a write page fault. A clean
    pte for the arm64 kernel is one that has PTE_RDONLY set and PTE_DIRTY
    clear.
    
    The PAGE_SHARED{,_EXEC} attributes have PTE_WRITE set (PTE_DBM) and
    PTE_DIRTY clear. Prior to commit 73e86cb03cf2 ("arm64: Move PTE_RDONLY
    bit handling out of set_pte_at()"), it was the responsibility of
    set_pte_at() to set the PTE_RDONLY bit and mark the pte clean if the
    software PTE_DIRTY bit was not set. However, the above commit removed
    the pte_sw_dirty() check and the subsequent setting of PTE_RDONLY in
    set_pte_at() while leaving the PAGE_SHARED{,_EXEC} definitions
    unchanged. The result is that shared+writable mappings are now dirty by
    default
    
    Fix the above by explicitly setting PTE_RDONLY in PAGE_SHARED{,_EXEC}.
    In addition, remove the superfluous PTE_DIRTY bit from the kernel PROT_*
    attributes.
    
    Fixes: 73e86cb03cf2 ("arm64: Move PTE_RDONLY bit handling out of set_pte_at()")
    Cc: <stable@vger.kernel.org> # 4.14.x-
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dd6066066a2038d23247877f90ea7c655ac2c91
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Oct 28 11:03:27 2019 +0100

    s390/idle: fix cpu idle time calculation
    
    commit 3d7efa4edd07be5c5c3ffa95ba63e97e070e1f3f upstream.
    
    The idle time reported in /proc/stat sometimes incorrectly contains
    huge values on s390. This is caused by a bug in arch_cpu_idle_time().
    
    The kernel tries to figure out when a different cpu entered idle by
    accessing its per-cpu data structure. There is an ordering problem: if
    the remote cpu has an idle_enter value which is not zero, and an
    idle_exit value which is zero, it is assumed it is idle since
    "now". The "now" timestamp however is taken before the idle_enter
    value is read.
    
    Which in turn means that "now" can be smaller than idle_enter of the
    remote cpu. Unconditionally subtracting idle_enter from "now" can thus
    lead to a negative value (aka large unsigned value).
    
    Fix this by moving the get_tod_clock() invocation out of the
    loop. While at it also make the code a bit more readable.
    
    A similar bug also exists for show_idle_time(). Fix this is as well.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ced8cb0230d070274cd26bec818dd7c67514d586
Author: Yihui ZENG <yzeng56@asu.edu>
Date:   Fri Oct 25 12:31:48 2019 +0300

    s390/cmm: fix information leak in cmm_timeout_handler()
    
    commit b8e51a6a9db94bc1fb18ae831b3dab106b5a4b5f upstream.
    
    The problem is that we were putting the NUL terminator too far:
    
            buf[sizeof(buf) - 1] = '\0';
    
    If the user input isn't NUL terminated and they haven't initialized the
    whole buffer then it leads to an info leak.  The NUL terminator should
    be:
    
            buf[len - 1] = '\0';
    
    Signed-off-by: Yihui Zeng <yzeng56@asu.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    [heiko.carstens@de.ibm.com: keep semantics of how *lenp and *ppos are handled]
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be87ee6891065d4d2f676df42ed261c8f07ec713
Author: Markus Theil <markus.theil@tu-ilmenau.de>
Date:   Tue Oct 29 10:30:03 2019 +0100

    nl80211: fix validation of mesh path nexthop
    
    commit 1fab1b89e2e8f01204a9c05a39fd0b6411a48593 upstream.
    
    Mesh path nexthop should be a ethernet address, but current validation
    checks against 4 byte integers.
    
    Cc: stable@vger.kernel.org
    Fixes: 2ec600d672e74 ("nl80211/cfg80211: support for mesh, sta dumping")
    Signed-off-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Link: https://lore.kernel.org/r/20191029093003.10355-1-markus.theil@tu-ilmenau.de
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14e0dd84db603d61a67b07f6e459bded2d3ff0ba
Author: Michał Mirosław <mirq-linux@rere.qmqm.pl>
Date:   Fri Aug 23 21:15:27 2019 +0200

    HID: fix error message in hid_open_report()
    
    commit b3a81c777dcb093020680490ab970d85e2f6f04f upstream.
    
    On HID report descriptor parsing error the code displays bogus
    pointer instead of error offset (subtracts start=NULL from end).
    Make the message more useful by displaying correct error offset
    and include total buffer size for reference.
    
    This was carried over from ancient times - "Fixed" commit just
    promoted the message from DEBUG to ERROR.
    
    Cc: stable@vger.kernel.org
    Fixes: 8c3d52fc393b ("HID: make parser more verbose about parsing errors by default")
    Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a01c4b908cf0a5367d3309c1c0d4e9be655ce00
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Oct 3 14:53:59 2019 -0400

    HID: Fix assumption that devices have inputs
    
    commit d9d4b1e46d9543a82c23f6df03f4ad697dab361b upstream.
    
    The syzbot fuzzer found a slab-out-of-bounds write bug in the hid-gaff
    driver.  The problem is caused by the driver's assumption that the
    device must have an input report.  While this will be true for all
    normal HID input devices, a suitably malicious device can violate the
    assumption.
    
    The same assumption is present in over a dozen other HID drivers.
    This patch fixes them by checking that the list of hid_inputs for the
    hid_device is nonempty before allowing it to be used.
    
    Reported-and-tested-by: syzbot+403741a091bf41d4ae79@syzkaller.appspotmail.com
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf143d65c556f12629fc6242e7c23d7a7a771e2b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 7 20:56:26 2019 +0200

    HID: i2c-hid: add Trekstor Primebook C11B to descriptor override
    
    commit 09f3dbe474735df13dd8a66d3d1231048d9b373f upstream.
    
    The Primebook C11B uses the SIPODEV SP1064 touchpad. There are 2 versions
    of this 2-in-1 and the touchpad in the older version does not supply
    descriptors, so it has to be added to the override list.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6608702bec7083f619bdf1d16d99db82da35ab1f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Oct 23 13:21:50 2019 -0700

    scsi: target: cxgbit: Fix cxgbit_fw4_ack()
    
    commit fc5b220b2dcf8b512d9bd46fd17f82257e49bf89 upstream.
    
    Use the pointer 'p' after having tested that pointer instead of before.
    
    Fixes: 5cadafb236df ("target/cxgbit: Fix endianness annotations")
    Cc: Varun Prakash <varun@chelsio.com>
    Cc: Nicholas Bellinger <nab@linux-iscsi.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191023202150.22173-1-bvanassche@acm.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45e7acdff38e9075ff0072b0900f639cad7ae9fc
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 29 11:23:54 2019 +0100

    USB: serial: whiteheat: fix line-speed endianness
    
    commit 84968291d7924261c6a0624b9a72f952398e258b upstream.
    
    Add missing endianness conversion when setting the line speed so that
    this driver might work also on big-endian machines.
    
    Also use an unsigned format specifier in the corresponding debug
    message.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191029102354.2733-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7ad5aa67058ffd96fa83e859ebe12dce340dcc9
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 29 11:23:53 2019 +0100

    USB: serial: whiteheat: fix potential slab corruption
    
    commit 1251dab9e0a2c4d0d2d48370ba5baa095a5e8774 upstream.
    
    Fix a user-controlled slab buffer overflow due to a missing sanity check
    on the bulk-out transfer buffer used for control requests.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191029102354.2733-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36e02e1fba89dd5049aa46587ae2f287cc8eb507
Author: Ben Dooks (Codethink) <ben.dooks@codethink.co.uk>
Date:   Fri Oct 25 17:30:29 2019 +0300

    usb: xhci: fix __le32/__le64 accessors in debugfs code
    
    commit d5501d5c29a2e684640507cfee428178d6fd82ca upstream.
    
    It looks like some of the xhci debug code is passing u32 to functions
    directly from __le32/__le64 fields.
    Fix this by using le{32,64}_to_cpu() on these to fix the following
    sparse warnings;
    
    xhci-debugfs.c:205:62: warning: incorrect type in argument 1 (different base types)
    xhci-debugfs.c:205:62:    expected unsigned int [usertype] field0
    xhci-debugfs.c:205:62:    got restricted __le32
    xhci-debugfs.c:206:62: warning: incorrect type in argument 2 (different base types)
    xhci-debugfs.c:206:62:    expected unsigned int [usertype] field1
    xhci-debugfs.c:206:62:    got restricted __le32
    ...
    
    [Trim down commit message, sparse warnings were similar -Mathias]
    Cc: <stable@vger.kernel.org> # 4.15+
    Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/1572013829-14044-4-git-send-email-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e2cccd6c5d1f24f25e6af713252e1c5f0beacfc
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 22 17:31:27 2019 +0200

    USB: ldusb: fix control-message timeout
    
    commit 52403cfbc635d28195167618690595013776ebde upstream.
    
    USB control-message timeouts are specified in milliseconds, not jiffies.
    Waiting 83 minutes for a transfer to complete is a bit excessive.
    
    Fixes: 2824bd250f0b ("[PATCH] USB: add ldusb driver")
    Cc: stable <stable@vger.kernel.org>     # 2.6.13
    Reported-by: syzbot+a4fbb3bb76cda0ea4e58@syzkaller.appspotmail.com
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191022153127.22295-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f1a7d903b8d33afb512c457448fa57c90551132
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 22 16:32:02 2019 +0200

    USB: ldusb: fix ring-buffer locking
    
    commit d98ee2a19c3334e9343df3ce254b496f1fc428eb upstream.
    
    The custom ring-buffer implementation was merged without any locking or
    explicit memory barriers, but a spinlock was later added by commit
    9d33efd9a791 ("USB: ldusb bugfix").
    
    The lock did not cover the update of the tail index once the entry had
    been processed, something which could lead to memory corruption on
    weakly ordered architectures or due to compiler optimisations.
    
    Specifically, a completion handler running on another CPU might observe
    the incremented tail index and update the entry before ld_usb_read() is
    done with it.
    
    Fixes: 2824bd250f0b ("[PATCH] USB: add ldusb driver")
    Fixes: 9d33efd9a791 ("USB: ldusb bugfix")
    Cc: stable <stable@vger.kernel.org>     # 2.6.13
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191022143203.5260-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b94b60bb1c8aa0ca6db50a8fa44aca65c0f897
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Oct 21 11:48:06 2019 -0400

    usb-storage: Revert commit 747668dbc061 ("usb-storage: Set virt_boundary_mask to avoid SG overflows")
    
    commit 9a976949613132977098fc49510b46fa8678d864 upstream.
    
    Commit 747668dbc061 ("usb-storage: Set virt_boundary_mask to avoid SG
    overflows") attempted to solve a problem involving scatter-gather I/O
    and USB/IP by setting the virt_boundary_mask for mass-storage devices.
    
    However, it now turns out that this interacts badly with commit
    09324d32d2a0 ("block: force an unlimited segment size on queues with a
    virt boundary"), which was added later.  A typical error message is:
    
            ehci-pci 0000:00:13.2: swiotlb buffer is full (sz: 327680 bytes),
            total 32768 (slots), used 97 (slots)
    
    There is no longer any reason to keep the virt_boundary_mask setting
    for usb-storage.  It was needed in the first place only for handling
    devices with a block size smaller than the maxpacket size and where
    the host controller was not capable of fully general scatter-gather
    operation (that is, able to merge two SG segments into a single USB
    packet).  But:
    
            High-speed or slower connections never use a bulk maxpacket
            value larger than 512;
    
            The SCSI layer does not handle block devices with a block size
            smaller than 512 bytes;
    
            All the host controllers capable of SuperSpeed operation can
            handle fully general SG;
    
            Since commit ea44d190764b ("usbip: Implement SG support to
            vhci-hcd and stub driver") was merged, the USB/IP driver can
            also handle SG.
    
    Therefore all supported device/controller combinations should be okay
    with no need for any special virt_boundary_mask.  So in order to fix
    the swiotlb problem, this patch reverts commit 747668dbc061.
    
    Reported-and-tested-by: Piergiorgio Sartor <piergiorgio.sartor@nexgo.de>
    Link: https://marc.info/?l=linux-usb&m=157134199501202&w=2
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: Seth Bollinger <Seth.Bollinger@digi.com>
    CC: <stable@vger.kernel.org>
    Fixes: 747668dbc061 ("usb-storage: Set virt_boundary_mask to avoid SG overflows")
    Acked-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/Pine.LNX.4.44L0.1910211145520.1673-100000@iolanthe.rowland.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1c188d330ca33cc35d1590441ba276f31144299
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Oct 28 10:54:26 2019 -0400

    USB: gadget: Reject endpoints with 0 maxpacket value
    
    commit 54f83b8c8ea9b22082a496deadf90447a326954e upstream.
    
    Endpoints with a maxpacket length of 0 are probably useless.  They
    can't transfer any data, and it's not at all unlikely that a UDC will
    crash or hang when trying to handle a non-zero-length usb_request for
    such an endpoint.  Indeed, dummy-hcd gets a divide error when trying
    to calculate the remainder of a transfer length by the maxpacket
    value, as discovered by the syzbot fuzzer.
    
    Currently the gadget core does not check for endpoints having a
    maxpacket value of 0.  This patch adds a check to usb_ep_enable(),
    preventing such endpoints from being used.
    
    As far as I know, none of the gadget drivers in the kernel tries to
    create an endpoint with maxpacket = 0, but until now there has been
    nothing to prevent userspace programs under gadgetfs or configfs from
    doing it.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: syzbot+8ab8bf161038a8768553@syzkaller.appspotmail.com
    CC: <stable@vger.kernel.org>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Link: https://lore.kernel.org/r/Pine.LNX.4.44L0.1910281052370.1485-100000@iolanthe.rowland.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ceb6b658f0bd76a5860b077d2477a20c8b8914e6
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Oct 23 11:34:33 2019 -0400

    UAS: Revert commit 3ae62a42090f ("UAS: fix alignment of scatter/gather segments")
    
    commit 1186f86a71130a7635a20843e355bb880c7349b2 upstream.
    
    Commit 3ae62a42090f ("UAS: fix alignment of scatter/gather segments"),
    copying a similar commit for usb-storage, attempted to solve a problem
    involving scatter-gather I/O and USB/IP by setting the
    virt_boundary_mask for mass-storage devices.
    
    However, it now turns out that the analogous change in usb-storage
    interacted badly with commit 09324d32d2a0 ("block: force an unlimited
    segment size on queues with a virt boundary"), which was added later.
    A typical error message is:
    
            ehci-pci 0000:00:13.2: swiotlb buffer is full (sz: 327680 bytes),
            total 32768 (slots), used 97 (slots)
    
    There is no longer any reason to keep the virt_boundary_mask setting
    in the uas driver.  It was needed in the first place only for
    handling devices with a block size smaller than the maxpacket size and
    where the host controller was not capable of fully general
    scatter-gather operation (that is, able to merge two SG segments into
    a single USB packet).  But:
    
            High-speed or slower connections never use a bulk maxpacket
            value larger than 512;
    
            The SCSI layer does not handle block devices with a block size
            smaller than 512 bytes;
    
            All the host controllers capable of SuperSpeed operation can
            handle fully general SG;
    
            Since commit ea44d190764b ("usbip: Implement SG support to
            vhci-hcd and stub driver") was merged, the USB/IP driver can
            also handle SG.
    
    Therefore all supported device/controller combinations should be okay
    with no need for any special virt_boundary_mask.  So in order to head
    off potential problems similar to those affecting usb-storage, this
    patch reverts commit 3ae62a42090f.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: Oliver Neukum <oneukum@suse.com>
    CC: <stable@vger.kernel.org>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Fixes: 3ae62a42090f ("UAS: fix alignment of scatter/gather segments")
    Link: https://lore.kernel.org/r/Pine.LNX.4.44L0.1910231132470.1878-100000@iolanthe.rowland.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a58cdc35d3a0953dfe61599481e969f16ad9ef14
Author: Kailang Yang <kailang@realtek.com>
Date:   Thu Oct 24 15:13:32 2019 +0800

    ALSA: hda/realtek - Add support for ALC623
    
    commit f0778871a13889b86a65d4ad34bef8340af9d082 upstream.
    
    Support new codec ALC623.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/ed97b6a8bd9445ecb48bc763d9aaba7a@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 101bb262ba438fea619982e12f53e37ba9482bd7
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Thu Oct 24 19:44:39 2019 +0800

    ALSA: hda/realtek - Fix 2 front mics of codec 0x623
    
    commit 8a6c55d0f883e9a7e7c91841434f3b6bbf932bb2 upstream.
    
    These 2 ThinkCentres installed a new realtek codec ID 0x623,
    it has 2 front mics with the same location on pin 0x18 and 0x19.
    
    Apply fixup ALC283_FIXUP_HEADSET_MIC to change 1 front mic
    location to right, then pulseaudio can handle them.
    One "Front Mic" and one "Mic" will be shown, and audio output works
    fine.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191024114439.31522-1-aaron.ma@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ae205d7a0a27285d14d76e8d7920c0a20de16ea
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sat Oct 26 12:06:20 2019 +0900

    ALSA: bebob: Fix prototype of helper function to return negative value
    
    commit f2bbdbcb075f3977a53da3bdcb7cd460bc8ae5f2 upstream.
    
    A helper function of ALSA bebob driver returns negative value in a
    function which has a prototype to return unsigned value.
    
    This commit fixes it by changing the prototype.
    
    Fixes: eb7b3a056cd8 ("ALSA: bebob: Add commands and connections/streams management")
    Cc: <stable@vger.kernel.org> # v3.16+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191026030620.12077-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62e42369de376c3eabc2acc92d5cbf8c18870263
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Oct 23 14:26:37 2019 +0200

    fuse: truncate pending writes on O_TRUNC
    
    commit e4648309b85a78f8c787457832269a8712a8673e upstream.
    
    Make sure cached writes are not reordered around open(..., O_TRUNC), with
    the obvious wrong results.
    
    Fixes: 4d99ff8f12eb ("fuse: Turn writeback cache on")
    Cc: <stable@vger.kernel.org> # v3.15+
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72c913fdde9da6bbad5254b7317efd2000ee6ddb
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Oct 23 14:26:37 2019 +0200

    fuse: flush dirty data/metadata before non-truncate setattr
    
    commit b24e7598db62386a95a3c8b9c75630c5d56fe077 upstream.
    
    If writeback cache is enabled, then writes might get reordered with
    chmod/chown/utimes.  The problem with this is that performing the write in
    the fuse daemon might itself change some of these attributes.  In such case
    the following sequence of operations will result in file ending up with the
    wrong mode, for example:
    
      int fd = open ("suid", O_WRONLY|O_CREAT|O_EXCL);
      write (fd, "1", 1);
      fchown (fd, 0, 0);
      fchmod (fd, 04755);
      close (fd);
    
    This patch fixes this by flushing pending writes before performing
    chown/chmod/utimes.
    
    Reported-by: Giuseppe Scrivano <gscrivan@redhat.com>
    Tested-by: Giuseppe Scrivano <gscrivan@redhat.com>
    Fixes: 4d99ff8f12eb ("fuse: Turn writeback cache on")
    Cc: <stable@vger.kernel.org> # v3.15+
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 696da02259463ea634821e117088f82afe7bf851
Author: Hui Peng <benquike@gmail.com>
Date:   Sat Aug 3 20:29:04 2019 -0400

    ath6kl: fix a NULL-ptr-deref bug in ath6kl_usb_alloc_urb_from_pipe()
    
    [ Upstream commit 39d170b3cb62ba98567f5c4f40c27b5864b304e5 ]
    
    The `ar_usb` field of `ath6kl_usb_pipe_usb_pipe` objects
    are initialized to point to the containing `ath6kl_usb` object
    according to endpoint descriptors read from the device side, as shown
    below in `ath6kl_usb_setup_pipe_resources`:
    
    for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {
            endpoint = &iface_desc->endpoint[i].desc;
    
            // get the address from endpoint descriptor
            pipe_num = ath6kl_usb_get_logical_pipe_num(ar_usb,
                                                    endpoint->bEndpointAddress,
                                                    &urbcount);
            ......
            // select the pipe object
            pipe = &ar_usb->pipes[pipe_num];
    
            // initialize the ar_usb field
            pipe->ar_usb = ar_usb;
    }
    
    The driver assumes that the addresses reported in endpoint
    descriptors from device side  to be complete. If a device is
    malicious and does not report complete addresses, it may trigger
    NULL-ptr-deref `ath6kl_usb_alloc_urb_from_pipe` and
    `ath6kl_usb_free_urb_to_pipe`.
    
    This patch fixes the bug by preventing potential NULL-ptr-deref
    (CVE-2019-15098).
    
    Signed-off-by: Hui Peng <benquike@gmail.com>
    Reported-by: Hui Peng <benquike@gmail.com>
    Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a124f16b594344783f32dd50b44f1272e96559b
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Jul 4 08:46:07 2018 +0300

    thunderbolt: Use 32-bit writes when writing ring producer/consumer
    
    [ Upstream commit 943795219d3cb9f8ce6ce51cad3ffe1f61e95c6b ]
    
    The register access should be using 32-bit reads/writes according to the
    datasheet. With the previous generation hardware 16-bit writes have been
    working but starting with ICL this is not the case anymore so fix
    producer/consumer register update to use correct width register address.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Yehezkel Bernat <YehezkelShB@gmail.com>
    Tested-by: Mario Limonciello <mario.limonciello@dell.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2cc221b6515106e485aa846c50a43cee3aebe93
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 11 17:11:15 2019 +0300

    USB: legousbtower: fix a signedness bug in tower_probe()
    
    [ Upstream commit fd47a417e75e2506eb3672ae569b1c87e3774155 ]
    
    The problem is that sizeof() is unsigned long so negative error codes
    are type promoted to high positive values and the condition becomes
    false.
    
    Fixes: 1d427be4a39d ("USB: legousbtower: fix slab info leak at probe")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191011141115.GA4521@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 083322455c67d278c56a66b73f1221f004ee600a
Author: Mike Christie <mchristi@redhat.com>
Date:   Thu Oct 17 16:27:34 2019 -0500

    nbd: verify socket is supported during setup
    
    [ Upstream commit cf1b2326b734896734c6e167e41766f9cee7686a ]
    
    nbd requires socket families to support the shutdown method so the nbd
    recv workqueue can be woken up from its sock_recvmsg call. If the socket
    does not support the callout we will leave recv works running or get hangs
    later when the device or module is removed.
    
    This adds a check during socket connection/reconnection to make sure the
    socket being passed in supports the needed callout.
    
    Reported-by: syzbot+24c12fa8d218ed26011a@syzkaller.appspotmail.com
    Fixes: e9e006f5fcf2 ("nbd: fix max number of supported devs")
    Tested-by: Richard W.M. Jones <rjones@redhat.com>
    Signed-off-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0064f8de3f511dcf3b45cb51c4456e8914a1ecb
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Tue Oct 8 13:10:53 2019 +0300

    iwlwifi: exclude GEO SAR support for 3168
    
    [ Upstream commit 12e36d98d3e5acf5fc57774e0a15906d55f30cb9 ]
    
    We currently support two NICs in FW version 29, namely 7265D and 3168.
    Out of these, only 7265D supports GEO SAR, so adjust the function that
    checks for it accordingly.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Fixes: f5a47fae6aa3 ("iwlwifi: mvm: fix version check for GEO_TX_POWER_LIMIT support")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a445f805afc8cc56eecc9caed7b0d240d748341
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Oct 3 12:39:19 2019 +0800

    ALSA: hda/realtek: Reduce the Headphone static noise on XPS 9350/9360
    
    [ Upstream commit 1099f48457d06b816359fb43ac32a4a07e33219b ]
    
    Headphone on XPS 9350/9360 produces a background white noise. The The
    noise level somehow correlates with "Headphone Mic Boost", when it sets
    to 1 the noise disappears. However, doing this has a side effect, which
    also decreases the overall headphone volume so I didn't send the patch
    upstream.
    
    The noise was bearable back then, but after commit 717f43d81afc ("ALSA:
    hda/realtek - Update headset mode for ALC256") the noise exacerbates to
    a point it starts hurting ears.
    
    So let's use the workaround to set "Headphone Mic Boost" to 1 and lock
    it so it's not touchable by userspace.
    
    Fixes: 717f43d81afc ("ALSA: hda/realtek - Update headset mode for ALC256")
    BugLink: https://bugs.launchpad.net/bugs/1654448
    BugLink: https://bugs.launchpad.net/bugs/1845810
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20191003043919.10960-1-kai.heng.feng@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce005e5d6e9fbcd50e3e9662845d17aa3deb855a
Author: Vladimir Murzin <vladimir.murzin@arm.com>
Date:   Thu Oct 10 10:12:20 2019 +0100

    ARM: 8914/1: NOMMU: Fix exc_ret for XIP
    
    [ Upstream commit 4c0742f65b4ee466546fd24b71b56516cacd4613 ]
    
    It was reported that 72cd4064fcca "NOMMU: Toggle only bits in
    EXC_RETURN we are really care of" breaks NOMMU+XIP combination.
    It happens because saved EXC_RETURN gets overwritten when data
    section is relocated.
    
    The fix is to propagate EXC_RETURN via register and let relocation
    code to commit that value into memory.
    
    Fixes: 72cd4064fcca ("ARM: 8830/1: NOMMU: Toggle only bits in EXC_RETURN we are really care of")
    Reported-by: afzal mohammed <afzal.mohd.ma@gmail.com>
    Tested-by: afzal mohammed <afzal.mohd.ma@gmail.com>
    Signed-off-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 394c90d9ce136394cc346694296433ec94110d80
Author: Petr Mladek <pmladek@suse.com>
Date:   Fri Oct 11 16:21:34 2019 +0200

    tracing: Initialize iter->seq after zeroing in tracing_read_pipe()
    
    [ Upstream commit d303de1fcf344ff7c15ed64c3f48a991c9958775 ]
    
    A customer reported the following softlockup:
    
    [899688.160002] NMI watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [test.sh:16464]
    [899688.160002] CPU: 0 PID: 16464 Comm: test.sh Not tainted 4.12.14-6.23-azure #1 SLE12-SP4
    [899688.160002] RIP: 0010:up_write+0x1a/0x30
    [899688.160002] Kernel panic - not syncing: softlockup: hung tasks
    [899688.160002] RIP: 0010:up_write+0x1a/0x30
    [899688.160002] RSP: 0018:ffffa86784d4fde8 EFLAGS: 00000257 ORIG_RAX: ffffffffffffff12
    [899688.160002] RAX: ffffffff970fea00 RBX: 0000000000000001 RCX: 0000000000000000
    [899688.160002] RDX: ffffffff00000001 RSI: 0000000000000080 RDI: ffffffff970fea00
    [899688.160002] RBP: ffffffffffffffff R08: ffffffffffffffff R09: 0000000000000000
    [899688.160002] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8b59014720d8
    [899688.160002] R13: ffff8b59014720c0 R14: ffff8b5901471090 R15: ffff8b5901470000
    [899688.160002]  tracing_read_pipe+0x336/0x3c0
    [899688.160002]  __vfs_read+0x26/0x140
    [899688.160002]  vfs_read+0x87/0x130
    [899688.160002]  SyS_read+0x42/0x90
    [899688.160002]  do_syscall_64+0x74/0x160
    
    It caught the process in the middle of trace_access_unlock(). There is
    no loop. So, it must be looping in the caller tracing_read_pipe()
    via the "waitagain" label.
    
    Crashdump analyze uncovered that iter->seq was completely zeroed
    at this point, including iter->seq.seq.size. It means that
    print_trace_line() was never able to print anything and
    there was no forward progress.
    
    The culprit seems to be in the code:
    
            /* reset all but tr, trace, and overruns */
            memset(&iter->seq, 0,
                   sizeof(struct trace_iterator) -
                   offsetof(struct trace_iterator, seq));
    
    It was added by the commit 53d0aa773053ab182877 ("ftrace:
    add logic to record overruns"). It was v2.6.27-rc1.
    It was the time when iter->seq looked like:
    
         struct trace_seq {
            unsigned char           buffer[PAGE_SIZE];
            unsigned int            len;
         };
    
    There was no "size" variable and zeroing was perfectly fine.
    
    The solution is to reinitialize the structure after or without
    zeroing.
    
    Link: http://lkml.kernel.org/r/20191011142134.11997-1-pmladek@suse.com
    
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12e132664f92b75f2021adc1f3a239f0cc1fcf7b
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Tue Oct 8 17:02:32 2019 +0200

    s390/uaccess: avoid (false positive) compiler warnings
    
    [ Upstream commit 062795fcdcb2d22822fb42644b1d76a8ad8439b3 ]
    
    Depending on inlining decisions by the compiler, __get/put_user_fn
    might become out of line. Then the compiler is no longer able to tell
    that size can only be 1,2,4 or 8 due to the check in __get/put_user
    resulting in false positives like
    
    ./arch/s390/include/asm/uaccess.h: In function ‘__put_user_fn’:
    ./arch/s390/include/asm/uaccess.h:113:9: warning: ‘rc’ may be used uninitialized in this function [-Wmaybe-uninitialized]
      113 |  return rc;
          |         ^~
    ./arch/s390/include/asm/uaccess.h: In function ‘__get_user_fn’:
    ./arch/s390/include/asm/uaccess.h:143:9: warning: ‘rc’ may be used uninitialized in this function [-Wmaybe-uninitialized]
      143 |  return rc;
          |         ^~
    
    These functions are supposed to be always inlined. Mark it as such.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da24be886ff649e21ec87c569c11e30984ec30d2
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Oct 4 09:58:54 2019 -0400

    NFSv4: Fix leak of clp->cl_acceptor string
    
    [ Upstream commit 1047ec868332034d1fbcb2fae19fe6d4cb869ff2 ]
    
    Our client can issue multiple SETCLIENTID operations to the same
    server in some circumstances. Ensure that calls to
    nfs4_proc_setclientid() after the first one do not overwrite the
    previously allocated cl_acceptor string.
    
    unreferenced object 0xffff888461031800 (size 32):
      comm "mount.nfs", pid 2227, jiffies 4294822467 (age 1407.749s)
      hex dump (first 32 bytes):
        6e 66 73 40 6b 6c 69 6d 74 2e 69 62 2e 31 30 31  nfs@klimt.ib.101
        35 67 72 61 6e 67 65 72 2e 6e 65 74 00 00 00 00  5granger.net....
      backtrace:
        [<00000000ab820188>] __kmalloc+0x128/0x176
        [<00000000eeaf4ec8>] gss_stringify_acceptor+0xbd/0x1a7 [auth_rpcgss]
        [<00000000e85e3382>] nfs4_proc_setclientid+0x34e/0x46c [nfsv4]
        [<000000003d9cf1fa>] nfs40_discover_server_trunking+0x7a/0xed [nfsv4]
        [<00000000b81c3787>] nfs4_discover_server_trunking+0x81/0x244 [nfsv4]
        [<000000000801b55f>] nfs4_init_client+0x1b0/0x238 [nfsv4]
        [<00000000977daf7f>] nfs4_set_client+0xfe/0x14d [nfsv4]
        [<0000000053a68a2a>] nfs4_create_server+0x107/0x1db [nfsv4]
        [<0000000088262019>] nfs4_remote_mount+0x2c/0x59 [nfsv4]
        [<00000000e84a2fd0>] legacy_get_tree+0x2d/0x4c
        [<00000000797e947c>] vfs_get_tree+0x20/0xc7
        [<00000000ecabaaa8>] fc_mount+0xe/0x36
        [<00000000f15fafc2>] vfs_kern_mount+0x74/0x8d
        [<00000000a3ff4e26>] nfs_do_root_mount+0x8a/0xa3 [nfsv4]
        [<00000000d1c2b337>] nfs4_try_mount+0x58/0xad [nfsv4]
        [<000000004c9bddee>] nfs_fs_mount+0x820/0x869 [nfs]
    
    Fixes: f11b2a1cfbf5 ("nfs4: copy acceptor name from context ... ")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cad4448dfc9cefe6eb4c73714b4e99220b22e13d
Author: Xiubo Li <xiubli@redhat.com>
Date:   Thu Sep 19 11:44:27 2019 +0530

    nbd: fix possible sysfs duplicate warning
    
    [ Upstream commit 862488105b84ca744b3d8ff131e0fcfe10644be1 ]
    
    1. nbd_put takes the mutex and drops nbd->ref to 0. It then does
    idr_remove and drops the mutex.
    
    2. nbd_genl_connect takes the mutex. idr_find/idr_for_each fails
    to find an existing device, so it does nbd_dev_add.
    
    3. just before the nbd_put could call nbd_dev_remove or not finished
    totally, but if nbd_dev_add try to add_disk, we can hit:
    
    debugfs: Directory 'nbd1' with parent 'block' already present!
    
    This patch will make sure all the disk add/remove stuff are done
    by holding the nbd_index_mutex lock.
    
    Reported-by: Mike Christie <mchristi@redhat.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2ea451f22f180e9e46225f54b5ec50c50bb639f
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Mon Sep 30 15:42:22 2019 -0500

    virt: vbox: fix memory leak in hgcm_call_preprocess_linaddr
    
    [ Upstream commit e0b0cb9388642c104838fac100a4af32745621e2 ]
    
    In hgcm_call_preprocess_linaddr memory is allocated for bounce_buf but
    is not released if copy_form_user fails. In order to prevent memory leak
    in case of failure, the assignment to bounce_buf_ret is moved before the
    error check. This way the allocated bounce_buf will be released by the
    caller.
    
    Fixes: 579db9d45cb4 ("virt: Add vboxguest VMMDEV communication code")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20190930204223.3660-1-navid.emamdoost@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5865397db6c3a9eb5c790e5c01ace9b29f3955d1
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Oct 9 17:10:56 2019 +0200

    MIPS: fw: sni: Fix out of bounds init of o32 stack
    
    [ Upstream commit efcb529694c3b707dc0471b312944337ba16e4dd ]
    
    Use ARRAY_SIZE to caluculate the top of the o32 stack.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 317b6f68abb1f7cfe41b3419b13ad6f8a4cd8492
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Oct 9 12:06:00 2019 +0200

    MIPS: include: Mark __xchg as __always_inline
    
    [ Upstream commit 46f1619500d022501a4f0389f9f4c349ab46bb86 ]
    
    Commit ac7c3e4ff401 ("compiler: enable CONFIG_OPTIMIZE_INLINING
    forcibly") allows compiler to uninline functions marked as 'inline'.
    In cace of __xchg this would cause to reference function
    __xchg_called_with_bad_pointer, which is an error case
    for catching bugs and will not happen for correct code, if
    __xchg is inlined.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a4206a83fc69782d4ef36d8f5eb28836d8b6814
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Thu Sep 19 10:50:02 2019 -0500

    iio: imu: adis16400: release allocated memory on failure
    
    [ Upstream commit ab612b1daf415b62c58e130cb3d0f30b255a14d0 ]
    
    In adis_update_scan_mode, if allocation for adis->buffer fails,
    previously allocated adis->xfer needs to be released.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Reviewed-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2824a020746ec60fbb780756e42ac13efb221d0
Author: Nirmoy Das <nirmoy.das@amd.com>
Date:   Fri Oct 4 11:53:37 2019 +0200

    drm/amdgpu: fix memory leak
    
    [ Upstream commit 083164dbdb17c5ea4ad92c1782b59c9d75567790 ]
    
    cleanup error handling code and make sure temporary info array
    with the handles are freed by amdgpu_bo_list_put() on
    idr_replace()'s failure.
    
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1112c465593c44de73aa073f00b53b3e0bec533
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Aug 1 18:57:41 2019 +0000

    perf/x86/amd: Change/fix NMI latency mitigation to use a timestamp
    
    [ Upstream commit df4d29732fdad43a51284f826bec3e6ded177540 ]
    
    It turns out that the NMI latency workaround from commit:
    
      6d3edaae16c6 ("x86/perf/amd: Resolve NMI latency issues for active PMCs")
    
    ends up being too conservative and results in the perf NMI handler claiming
    NMIs too easily on AMD hardware when the NMI watchdog is active.
    
    This has an impact, for example, on the hpwdt (HPE watchdog timer) module.
    This module can produce an NMI that is used to reset the system. It
    registers an NMI handler for the NMI_UNKNOWN type and relies on the fact
    that nothing has claimed an NMI so that its handler will be invoked when
    the watchdog device produces an NMI. After the referenced commit, the
    hpwdt module is unable to process its generated NMI if the NMI watchdog is
    active, because the current NMI latency mitigation results in the NMI
    being claimed by the perf NMI handler.
    
    Update the AMD perf NMI latency mitigation workaround to, instead, use a
    window of time. Whenever a PMC is handled in the perf NMI handler, set a
    timestamp which will act as a perf NMI window. Any NMIs arriving within
    that window will be claimed by perf. Anything outside that window will
    not be claimed by perf. The value for the NMI window is set to 100 msecs.
    This is a conservative value that easily covers any NMI latency in the
    hardware. While this still results in a window in which the hpwdt module
    will not receive its NMI, the window is now much, much smaller.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Jerry Hoemann <jerry.hoemann@hpe.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 6d3edaae16c6 ("x86/perf/amd: Resolve NMI latency issues for active PMCs")
    Link: https://lkml.kernel.org/r/Message-ID:
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cd003a820fea172506618160e1584a196601ebc
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Wed Sep 25 23:42:42 2019 +0200

    sched/vtime: Fix guest/system mis-accounting on task switch
    
    [ Upstream commit 68e7a4d66b0ce04bf18ff2ffded5596ab3618585 ]
    
    vtime_account_system() assumes that the target task to account cputime
    to is always the current task. This is most often true indeed except on
    task switch where we call:
    
            vtime_common_task_switch(prev)
                    vtime_account_system(prev)
    
    Here prev is the scheduling-out task where we account the cputime to. It
    doesn't match current that is already the scheduling-in task at this
    stage of the context switch.
    
    So we end up checking the wrong task flags to determine if we are
    accounting guest or system time to the previous task.
    
    As a result the wrong task is used to check if the target is running in
    guest mode. We may then spuriously account or leak either system or
    guest time on task switch.
    
    Fix this assumption and also turn vtime_guest_enter/exit() to use the
    task passed in parameter as well to avoid future similar issues.
    
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Wanpeng Li <wanpengli@tencent.com>
    Fixes: 2a42eb9594a1 ("sched/cputime: Accumulate vtime on top of nsec clocksource")
    Link: https://lkml.kernel.org/r/20190925214242.21873-1-frederic@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58d33d4a4a1dad8579fe0d8fc1cfaad48f168579
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Tue Oct 8 08:50:02 2019 -0700

    x86/cpu: Add Comet Lake to the Intel CPU models header
    
    [ Upstream commit 8d7c6ac3b2371eb1cbc9925a88f4d10efff374de ]
    
    Comet Lake is the new 10th Gen Intel processor. Add two new CPU model
    numbers to the Intel family list.
    
    The CPU model numbers are not published in the SDM yet but they come
    from an authoritative internal source.
    
     [ bp: Touch up commit message. ]
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Cc: ak@linux.intel.com
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/1570549810-25049-2-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6258745b311b774944de7c6ab3ed58b1df18756d
Author: Yunfeng Ye <yeyunfeng@huawei.com>
Date:   Sun Sep 29 12:44:17 2019 +0800

    arm64: armv8_deprecated: Checking return value for memory allocation
    
    [ Upstream commit 3e7c93bd04edfb0cae7dad1215544c9350254b8f ]
    
    There are no return value checking when using kzalloc() and kcalloc() for
    memory allocation. so add it.
    
    Signed-off-by: Yunfeng Ye <yeyunfeng@huawei.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3689876f5b9ad42eef96a0f84f1c646ba28bd23
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Oct 6 17:57:57 2019 -0700

    fs: ocfs2: fix a possible null-pointer dereference in ocfs2_info_scan_inode_alloc()
    
    [ Upstream commit 2abb7d3b12d007c30193f48bebed781009bebdd2 ]
    
    In ocfs2_info_scan_inode_alloc(), there is an if statement on line 283
    to check whether inode_alloc is NULL:
    
        if (inode_alloc)
    
    When inode_alloc is NULL, it is used on line 287:
    
        ocfs2_inode_lock(inode_alloc, &bh, 0);
            ocfs2_inode_lock_full_nested(inode, ...)
                struct ocfs2_super *osb = OCFS2_SB(inode->i_sb);
    
    Thus, a possible null-pointer dereference may occur.
    
    To fix this bug, inode_alloc is checked on line 286.
    
    This bug is found by a static analysis tool STCheck written by us.
    
    Link: http://lkml.kernel.org/r/20190726033717.32359-1-baijiaju1990@gmail.com
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4de544b42c7af385561f6b49f0167ca78bae9fa0
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Oct 6 17:57:54 2019 -0700

    fs: ocfs2: fix a possible null-pointer dereference in ocfs2_write_end_nolock()
    
    [ Upstream commit 583fee3e12df0e6f1f66f063b989d8e7fed0e65a ]
    
    In ocfs2_write_end_nolock(), there are an if statement on lines 1976,
    2047 and 2058, to check whether handle is NULL:
    
        if (handle)
    
    When handle is NULL, it is used on line 2045:
    
            ocfs2_update_inode_fsync_trans(handle, inode, 1);
            oi->i_sync_tid = handle->h_transaction->t_tid;
    
    Thus, a possible null-pointer dereference may occur.
    
    To fix this bug, handle is checked before calling
    ocfs2_update_inode_fsync_trans().
    
    This bug is found by a static analysis tool STCheck written by us.
    
    Link: http://lkml.kernel.org/r/20190726033705.32307-1-baijiaju1990@gmail.com
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c18d8604762233f37beb6f294bc9156ae0b69770
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Oct 6 17:57:50 2019 -0700

    fs: ocfs2: fix possible null-pointer dereferences in ocfs2_xa_prepare_entry()
    
    [ Upstream commit 56e94ea132bb5c2c1d0b60a6aeb34dcb7d71a53d ]
    
    In ocfs2_xa_prepare_entry(), there is an if statement on line 2136 to
    check whether loc->xl_entry is NULL:
    
        if (loc->xl_entry)
    
    When loc->xl_entry is NULL, it is used on line 2158:
    
        ocfs2_xa_add_entry(loc, name_hash);
            loc->xl_entry->xe_name_hash = cpu_to_le32(name_hash);
            loc->xl_entry->xe_name_offset = cpu_to_le16(loc->xl_size);
    
    and line 2164:
    
        ocfs2_xa_add_namevalue(loc, xi);
            loc->xl_entry->xe_value_size = cpu_to_le64(xi->xi_value_len);
            loc->xl_entry->xe_name_len = xi->xi_name_len;
    
    Thus, possible null-pointer dereferences may occur.
    
    To fix these bugs, if loc-xl_entry is NULL, ocfs2_xa_prepare_entry()
    abnormally returns with -EINVAL.
    
    These bugs are found by a static analysis tool STCheck written by us.
    
    [akpm@linux-foundation.org: remove now-unused ocfs2_xa_add_entry()]
    Link: http://lkml.kernel.org/r/20190726101447.9153-1-baijiaju1990@gmail.com
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2141f777e6e14f5f12300876a09a9e05914a7958
Author: Jia Guo <guojia12@huawei.com>
Date:   Sun Oct 6 17:57:47 2019 -0700

    ocfs2: clear zero in unaligned direct IO
    
    [ Upstream commit 7a243c82ea527cd1da47381ad9cd646844f3b693 ]
    
    Unused portion of a part-written fs-block-sized block is not set to zero
    in unaligned append direct write.This can lead to serious data
    inconsistencies.
    
    Ocfs2 manage disk with cluster size(for example, 1M), part-written in
    one cluster will change the cluster state from UN-WRITTEN to WRITTEN,
    VFS(function dio_zero_block) doesn't do the cleaning because bh's state
    is not set to NEW in function ocfs2_dio_wr_get_block when we write a
    WRITTEN cluster.  For example, the cluster size is 1M, file size is 8k
    and we direct write from 14k to 15k, then 12k~14k and 15k~16k will
    contain dirty data.
    
    We have to deal with two cases:
     1.The starting position of direct write is outside the file.
     2.The starting position of direct write is located in the file.
    
    We need set bh's state to NEW in the first case.  In the second case, we
    need mapped twice because bh's state of area out file should be set to
    NEW while area in file not.
    
    [akpm@linux-foundation.org: coding style fixes]
    Link: http://lkml.kernel.org/r/5292e287-8f1a-fd4a-1a14-661e555e0bed@huawei.com
    Signed-off-by: Jia Guo <guojia12@huawei.com>
    Reviewed-by: Yiwen Jiang <jiangyiwen@huawei.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <joseph.qi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af140367ae66fedc80111cf7db1be0890e193b19
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Mon Sep 30 16:44:41 2019 -0400

    x86/xen: Return from panic notifier
    
    [ Upstream commit c6875f3aacf2a5a913205accddabf0bfb75cac76 ]
    
    Currently execution of panic() continues until Xen's panic notifier
    (xen_panic_event()) is called at which point we make a hypercall that
    never returns.
    
    This means that any notifier that is supposed to be called later as
    well as significant part of panic() code (such as pstore writes from
    kmsg_dump()) is never executed.
    
    There is no reason for xen_panic_event() to be this last point in
    execution since panic()'s emergency_restart() will call into
    xen_emergency_restart() from where we can perform our hypercall.
    
    Nevertheless, we will provide xen_legacy_crash boot option that will
    preserve original behavior during crash. This option could be used,
    for example, if running kernel dumper (which happens after panic
    notifiers) is undesirable.
    
    Reported-by: James Dingwall <james@dingwall.me.uk>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0169198631e71c60e96096e17bc9f6c881fcb963
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Sun Oct 6 15:12:32 2019 +0200

    MIPS: include: Mark __cmpxchg as __always_inline
    
    [ Upstream commit 88356d09904bc606182c625575237269aeece22e ]
    
    Commit ac7c3e4ff401 ("compiler: enable CONFIG_OPTIMIZE_INLINING
    forcibly") allows compiler to uninline functions marked as 'inline'.
    In cace of cmpxchg this would cause to reference function
    __cmpxchg_called_with_bad_pointer, which is a error case
    for catching bugs and will not happen for correct code, if
    __cmpxchg is inlined.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    [paul.burton@mips.com: s/__cmpxchd/__cmpxchg in subject]
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b7591cf6cf6be9ae4933b780d15cccdbad54867
Author: Dave Young <dyoung@redhat.com>
Date:   Wed Oct 2 18:59:04 2019 +0200

    efi/x86: Do not clean dummy variable in kexec path
    
    [ Upstream commit 2ecb7402cfc7f22764e7bbc80790e66eadb20560 ]
    
    kexec reboot fails randomly in UEFI based KVM guest.  The firmware
    just resets while calling efi_delete_dummy_variable();  Unfortunately
    I don't know how to debug the firmware, it is also possible a potential
    problem on real hardware as well although nobody reproduced it.
    
    The intention of the efi_delete_dummy_variable is to trigger garbage collection
    when entering virtual mode.  But SetVirtualAddressMap can only run once
    for each physical reboot, thus kexec_enter_virtual_mode() is not necessarily
    a good place to clean a dummy object.
    
    Drop the efi_delete_dummy_variable so that kexec reboot can work.
    
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: Matthew Garrett <mjg59@google.com>
    Cc: Ben Dooks <ben.dooks@codethink.co.uk>
    Cc: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Cc: Jerry Snitselaar <jsnitsel@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Octavian Purdila <octavian.purdila@intel.com>
    Cc: Peter Jones <pjones@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott Talbert <swt@techie.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: linux-integrity@vger.kernel.org
    Link: https://lkml.kernel.org/r/20191002165904.8819-8-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 318885aa154d930bd744dc6f7ed1367d462d1571
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Oct 2 18:58:58 2019 +0200

    efi/cper: Fix endianness of PCIe class code
    
    [ Upstream commit 6fb9367a15d1a126d222d738b2702c7958594a5f ]
    
    The CPER parser assumes that the class code is big endian, but at least
    on this edk2-derived Intel Purley platform it's little endian:
    
        efi: EFI v2.50 by EDK II BIOS ID:PLYDCRB1.86B.0119.R05.1701181843
        DMI: Intel Corporation PURLEY/PURLEY, BIOS PLYDCRB1.86B.0119.R05.1701181843 01/18/2017
    
        {1}[Hardware Error]:   device_id: 0000:5d:00.0
        {1}[Hardware Error]:   slot: 0
        {1}[Hardware Error]:   secondary_bus: 0x5e
        {1}[Hardware Error]:   vendor_id: 0x8086, device_id: 0x2030
        {1}[Hardware Error]:   class_code: 000406
                                           ^^^^^^ (should be 060400)
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Ben Dooks <ben.dooks@codethink.co.uk>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Cc: Jerry Snitselaar <jsnitsel@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Matthew Garrett <mjg59@google.com>
    Cc: Octavian Purdila <octavian.purdila@intel.com>
    Cc: Peter Jones <pjones@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott Talbert <swt@techie.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: linux-integrity@vger.kernel.org
    Link: https://lkml.kernel.org/r/20191002165904.8819-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02c1fb11b6a0418cb2443df674cb0fffe2fb4cd6
Author: Adam Ford <aford173@gmail.com>
Date:   Sun Oct 6 11:33:11 2019 -0500

    serial: mctrl_gpio: Check for NULL pointer
    
    [ Upstream commit 37e3ab00e4734acc15d96b2926aab55c894f4d9c ]
    
    When using mctrl_gpio_to_gpiod, it dereferences gpios into a single
    requested GPIO.  This dereferencing can break if gpios is NULL,
    so this patch adds a NULL check before dereferencing it.  If
    gpios is NULL, this function will also return NULL.
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Reviewed-by: Yegor Yefremov <yegorslists@googlemail.com>
    Link: https://lore.kernel.org/r/20191006163314.23191-1-aford173@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 497fd98a50b2c1595afecaca841c97a0b0603449
Author: Austin Kim <austindh.kim@gmail.com>
Date:   Tue Oct 1 16:34:13 2019 +0900

    fs: cifs: mute -Wunused-const-variable message
    
    [ Upstream commit dd19c106a36690b47bb1acc68372f2b472b495b8 ]
    
    After 'Initial git repository build' commit,
    'mapping_table_ERRHRD' variable has not been used.
    
    So 'mapping_table_ERRHRD' const variable could be removed
    to mute below warning message:
    
       fs/cifs/netmisc.c:120:40: warning: unused variable 'mapping_table_ERRHRD' [-Wunused-const-variable]
       static const struct smb_to_posix_error mapping_table_ERRHRD[] = {
                                               ^
    Signed-off-by: Austin Kim <austindh.kim@gmail.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 579249a08348442c09ddffdf459ac2290e077b4e
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Oct 2 14:28:23 2019 +0200

    gpio: max77620: Use correct unit for debounce times
    
    [ Upstream commit fffa6af94894126994a7600c6f6f09b892e89fa9 ]
    
    The gpiod_set_debounce() function takes the debounce time in
    microseconds. Adjust the switch/case values in the MAX77620 GPIO to use
    the correct unit.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://lore.kernel.org/r/20191002122825.3948322-1-thierry.reding@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f3306a3b2dff69c391ba32321933b8996cb008a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Sep 30 19:15:12 2019 -0700

    tty: n_hdlc: fix build on SPARC
    
    [ Upstream commit 47a7e5e97d4edd7b14974d34f0e5a5560fad2915 ]
    
    Fix tty driver build on SPARC by not using __exitdata.
    It appears that SPARC does not support section .exit.data.
    
    Fixes these build errors:
    
    `.exit.data' referenced in section `.exit.text' of drivers/tty/n_hdlc.o: defined in discarded section `.exit.data' of drivers/tty/n_hdlc.o
    `.exit.data' referenced in section `.exit.text' of drivers/tty/n_hdlc.o: defined in discarded section `.exit.data' of drivers/tty/n_hdlc.o
    `.exit.data' referenced in section `.exit.text' of drivers/tty/n_hdlc.o: defined in discarded section `.exit.data' of drivers/tty/n_hdlc.o
    `.exit.data' referenced in section `.exit.text' of drivers/tty/n_hdlc.o: defined in discarded section `.exit.data' of drivers/tty/n_hdlc.o
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Fixes: 063246641d4a ("format-security: move static strings to const")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: https://lore.kernel.org/r/675e7bd9-955b-3ff3-1101-a973b58b5b75@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14a4689f88478fde184be62735c11418e9a3c64c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Sep 10 06:11:29 2019 +0200

    tty: serial: owl: Fix the link time qualifier of 'owl_uart_exit()'
    
    [ Upstream commit 6264dab6efd6069f0387efb078a9960b5642377b ]
    
    'exit' functions should be marked as __exit, not __init.
    
    Fixes: fc60a8b675bd ("tty: serial: owl: Implement console driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20190910041129.6978-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d21a5d4a7339e2d48d03507f88ee98096f40f556
Author: James Morse <james.morse@arm.com>
Date:   Wed Oct 2 10:49:35 2019 +0100

    arm64: ftrace: Ensure synchronisation in PLT setup for Neoverse-N1 #1542419
    
    [ Upstream commit dd8a1f13488438c6c220b7cafa500baaf21a6e53 ]
    
    CPUs affected by Neoverse-N1 #1542419 may execute a stale instruction if
    it was recently modified. The affected sequence requires freshly written
    instructions to be executable before a branch to them is updated.
    
    There are very few places in the kernel that modify executable text,
    all but one come with sufficient synchronisation:
     * The module loader's flush_module_icache() calls flush_icache_range(),
       which does a kick_all_cpus_sync()
     * bpf_int_jit_compile() calls flush_icache_range().
     * Kprobes calls aarch64_insn_patch_text(), which does its work in
       stop_machine().
     * static keys and ftrace both patch between nops and branches to
       existing kernel code (not generated code).
    
    The affected sequence is the interaction between ftrace and modules.
    The module PLT is cleaned using __flush_icache_range() as the trampoline
    shouldn't be executable until we update the branch to it.
    
    Drop the double-underscore so that this path runs kick_all_cpus_sync()
    too.
    
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca2cc4b47d01993d9829873dcff3d72a359aaa1b
Author: ZhangXiaoxu <zhangxiaoxu5@huawei.com>
Date:   Thu Sep 26 14:29:38 2019 +0800

    nfs: Fix nfsi->nrequests count error on nfs_inode_remove_request
    
    [ Upstream commit 33ea5aaa87cdae0f9af4d6b7ee4f650a1a36fd1d ]
    
    When xfstests testing, there are some WARNING as below:
    
    WARNING: CPU: 0 PID: 6235 at fs/nfs/inode.c:122 nfs_clear_inode+0x9c/0xd8
    Modules linked in:
    CPU: 0 PID: 6235 Comm: umount.nfs
    Hardware name: linux,dummy-virt (DT)
    pstate: 60000005 (nZCv daif -PAN -UAO)
    pc : nfs_clear_inode+0x9c/0xd8
    lr : nfs_evict_inode+0x60/0x78
    sp : fffffc000f68fc00
    x29: fffffc000f68fc00 x28: fffffe00c53155c0
    x27: fffffe00c5315000 x26: fffffc0009a63748
    x25: fffffc000f68fd18 x24: fffffc000bfaaf40
    x23: fffffc000936d3c0 x22: fffffe00c4ff5e20
    x21: fffffc000bfaaf40 x20: fffffe00c4ff5d10
    x19: fffffc000c056000 x18: 000000000000003c
    x17: 0000000000000000 x16: 0000000000000000
    x15: 0000000000000040 x14: 0000000000000228
    x13: fffffc000c3a2000 x12: 0000000000000045
    x11: 0000000000000000 x10: 0000000000000000
    x9 : 0000000000000000 x8 : 0000000000000000
    x7 : 0000000000000000 x6 : fffffc00084b027c
    x5 : fffffc0009a64000 x4 : fffffe00c0e77400
    x3 : fffffc000c0563a8 x2 : fffffffffffffffb
    x1 : 000000000000764e x0 : 0000000000000001
    Call trace:
     nfs_clear_inode+0x9c/0xd8
     nfs_evict_inode+0x60/0x78
     evict+0x108/0x380
     dispose_list+0x70/0xa0
     evict_inodes+0x194/0x210
     generic_shutdown_super+0xb0/0x220
     nfs_kill_super+0x40/0x88
     deactivate_locked_super+0xb4/0x120
     deactivate_super+0x144/0x160
     cleanup_mnt+0x98/0x148
     __cleanup_mnt+0x38/0x50
     task_work_run+0x114/0x160
     do_notify_resume+0x2f8/0x308
     work_pending+0x8/0x14
    
    The nrequest should be increased/decreased only if PG_INODE_REF flag
    was setted.
    
    But in the nfs_inode_remove_request function, it maybe decrease when
    no PG_INODE_REF flag, this maybe lead nrequests count error.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aeb242943505e178bd55b31d8dc106eb4b4b077b
Author: Dexuan Cui <decui@microsoft.com>
Date:   Tue Aug 20 02:56:34 2019 +0000

    HID: hyperv: Use in-place iterator API in the channel callback
    
    [ Upstream commit 6a297c90efa68b2864483193b8bfb0d19478600c ]
    
    Simplify the ring buffer handling with the in-place API.
    
    Also avoid the dynamic allocation and the memory leak in the channel
    callback function.
    
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Acked-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c75c230ded214accfb53b912d21352381ca8f72
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Sep 30 16:16:54 2019 -0700

    RDMA/iwcm: Fix a lock inversion issue
    
    [ Upstream commit b66f31efbdad95ec274345721d99d1d835e6de01 ]
    
    This patch fixes the lock inversion complaint:
    
    ============================================
    WARNING: possible recursive locking detected
    5.3.0-rc7-dbg+ #1 Not tainted
    --------------------------------------------
    kworker/u16:6/171 is trying to acquire lock:
    00000000035c6e6c (&id_priv->handler_mutex){+.+.}, at: rdma_destroy_id+0x78/0x4a0 [rdma_cm]
    
    but task is already holding lock:
    00000000bc7c307d (&id_priv->handler_mutex){+.+.}, at: iw_conn_req_handler+0x151/0x680 [rdma_cm]
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(&id_priv->handler_mutex);
      lock(&id_priv->handler_mutex);
    
     *** DEADLOCK ***
    
     May be due to missing lock nesting notation
    
    3 locks held by kworker/u16:6/171:
     #0: 00000000e2eaa773 ((wq_completion)iw_cm_wq){+.+.}, at: process_one_work+0x472/0xac0
     #1: 000000001efd357b ((work_completion)(&work->work)#3){+.+.}, at: process_one_work+0x476/0xac0
     #2: 00000000bc7c307d (&id_priv->handler_mutex){+.+.}, at: iw_conn_req_handler+0x151/0x680 [rdma_cm]
    
    stack backtrace:
    CPU: 3 PID: 171 Comm: kworker/u16:6 Not tainted 5.3.0-rc7-dbg+ #1
    Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
    Workqueue: iw_cm_wq cm_work_handler [iw_cm]
    Call Trace:
     dump_stack+0x8a/0xd6
     __lock_acquire.cold+0xe1/0x24d
     lock_acquire+0x106/0x240
     __mutex_lock+0x12e/0xcb0
     mutex_lock_nested+0x1f/0x30
     rdma_destroy_id+0x78/0x4a0 [rdma_cm]
     iw_conn_req_handler+0x5c9/0x680 [rdma_cm]
     cm_work_handler+0xe62/0x1100 [iw_cm]
     process_one_work+0x56d/0xac0
     worker_thread+0x7a/0x5d0
     kthread+0x1bc/0x210
     ret_from_fork+0x24/0x30
    
    This is not a bug as there are actually two lock classes here.
    
    Link: https://lore.kernel.org/r/20190930231707.48259-3-bvanassche@acm.org
    Fixes: de910bd92137 ("RDMA/cma: Simplify locking needed for serialization of callbacks")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 962cff4f3f89acf54b6fb418e7ff386b720b0fd6
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Wed Sep 25 09:45:42 2019 -0500

    RDMA/hfi1: Prevent memory leak in sdma_init
    
    [ Upstream commit 34b3be18a04ecdc610aae4c48e5d1b799d8689f6 ]
    
    In sdma_init if rhashtable_init fails the allocated memory for
    tmp_sdma_rht should be released.
    
    Fixes: 5a52a7acf7e2 ("IB/hfi1: NULL pointer dereference when freeing rhashtable")
    Link: https://lore.kernel.org/r/20190925144543.10141-1-navid.emamdoost@gmail.com
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Acked-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfc1daba843b4dece22a0bcf6cfa173b88f0b731
Author: Connor Kuehl <connor.kuehl@canonical.com>
Date:   Fri Sep 27 14:44:15 2019 -0700

    staging: rtl8188eu: fix null dereference when kzalloc fails
    
    [ Upstream commit 955c1532a34305f2f780b47f0c40cc7c65500810 ]
    
    If kzalloc() returns NULL, the error path doesn't stop the flow of
    control from entering rtw_hal_read_chip_version() which dereferences the
    null pointer. Fix this by adding a 'goto' to the error path to more
    gracefully handle the issue and avoid proceeding with initialization
    steps that we're no longer prepared to handle.
    
    Also update the debug message to be more consistent with the other debug
    messages in this function.
    
    Addresses-Coverity: ("Dereference after null check")
    
    Signed-off-by: Connor Kuehl <connor.kuehl@canonical.com>
    Link: https://lore.kernel.org/r/20190927214415.899-1-connor.kuehl@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3545c018d0c3ff91a3b1bbf29c11a520a38d44f1
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Sep 30 15:53:33 2019 -0300

    perf annotate: Return appropriate error code for allocation failures
    
    [ Upstream commit 16ed3c1e91159e28b02f11f71ff4ce4cbc6f99e4 ]
    
    We should return errno or the annotation extra range understood by
    symbol__strerror_disassemble() instead of -1, fix it, returning ENOMEM
    instead.
    
    Reported-by: Russell King - ARM Linux admin <linux@armlinux.org.uk>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>,
    Cc: Will Deacon <will@kernel.org>
    Link: https://lkml.kernel.org/n/tip-8of1cmj3rz0mppfcshc9bbqq@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8304a9310c3369b6003dcc78c06a5c82845eba7
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Sep 30 15:44:13 2019 -0300

    perf annotate: Propagate the symbol__annotate() error return
    
    [ Upstream commit 211f493b611eef012841f795166c38ec7528738d ]
    
    We were just returning -1 in symbol__annotate() when symbol__annotate()
    failed, propagate its error as it is used later to pass to
    symbol__strerror_disassemble() to present a error message to the user,
    that in some cases were getting:
    
      "Invalid -1 error code"
    
    Fix it to propagate the error.
    
    Reported-by: Russell King - ARM Linux admin <linux@armlinux.org.uk>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>,
    Cc: Will Deacon <will@kernel.org>
    Link: https://lkml.kernel.org/n/tip-0tj89rs9g7nbcyd5skadlvuu@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e2ca0c9143c4011f3f997f5f5a066e6ccc6beef
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Sep 30 15:11:47 2019 -0300

    perf annotate: Fix the signedness of failure returns
    
    [ Upstream commit 28f4417c3333940b242af03d90214f713bbef232 ]
    
    Callers of symbol__annotate() expect a errno value or some other
    extended error value range in symbol__strerror_disassemble() to
    convert to a proper error string, fix it when propagating a failure to
    find the arch specific annotation routines via arch__find(arch_name).
    
    Reported-by: Russell King - ARM Linux admin <linux@armlinux.org.uk>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>,
    Cc: Will Deacon <will@kernel.org>
    Link: https://lkml.kernel.org/n/tip-o0k6dw7cas0vvmjjvgsyvu1i@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec783e28e72ddd09a139a54e66a6d32f9c231b9d
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Sep 30 15:06:01 2019 -0300

    perf annotate: Propagate perf_env__arch() error
    
    [ Upstream commit a66fa0619a0ae3585ef09e9c33ecfb5c7c6cb72b ]
    
    The callers of symbol__annotate2() use symbol__strerror_disassemble() to
    convert its failure returns into a human readable string, so
    propagate error values from functions it calls, starting with
    perf_env__arch() that when fails the right thing to do is to look at
    'errno' to see why its possible call to uname() failed.
    
    Reported-by: Russell King - ARM Linux admin <linux@armlinux.org.uk>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>,
    Cc: Will Deacon <will@kernel.org>
    Link: https://lkml.kernel.org/n/tip-it5d83kyusfhb1q1b0l4pxzs@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0ba7ab26bfc3b7c651a264ab283895a575b1cf7
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Sep 30 10:55:34 2019 -0300

    perf tools: Propagate get_cpuid() error
    
    [ Upstream commit f67001a4a08eb124197ed4376941e1da9cf94b42 ]
    
    For consistency, propagate the exact cause for get_cpuid() to have
    failed.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-9ig269f7ktnhh99g4l15vpu2@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c022c7f6171ef8fa47e9d9a5ad2180d1e24843a0
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Sep 27 16:35:45 2019 -0700

    perf jevents: Fix period for Intel fixed counters
    
    [ Upstream commit 6bdfd9f118bd59cf0f85d3bf4b72b586adea17c1 ]
    
    The Intel fixed counters use a special table to override the JSON
    information.
    
    During this override the period information from the JSON file got
    dropped, which results in inst_retired.any and similar running with
    frequency mode instead of a period.
    
    Just specify the expected period in the table.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Link: http://lore.kernel.org/lkml/20190927233546.11533-2-andi@firstfloor.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ecf35ed5d1779797f9af8ff5bf32ce1ffe25651
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Sep 27 16:35:44 2019 -0700

    perf script brstackinsn: Fix recovery from LBR/binary mismatch
    
    [ Upstream commit e98df280bc2a499fd41d7f9e2d6733884de69902 ]
    
    When the LBR data and the instructions in a binary do not match the loop
    printing instructions could get confused and print a long stream of
    bogus <bad> instructions.
    
    The problem was that if the instruction decoder cannot decode an
    instruction it ilen wasn't initialized, so the loop going through the
    basic block would continue with the previous value.
    
    Harden the code to avoid such problems:
    
    - Make sure ilen is always freshly initialized and is 0 for bad
      instructions.
    
    - Do not overrun the code buffer while printing instructions
    
    - Print a warning message if the final jump is not on an instruction
      boundary.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Link: http://lore.kernel.org/lkml/20190927233546.11533-1-andi@firstfloor.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 262ed71096ba363156386250cccc987abd5ecbd5
Author: Steve MacLean <Steve.MacLean@microsoft.com>
Date:   Sat Sep 28 01:39:00 2019 +0000

    perf map: Fix overlapped map handling
    
    [ Upstream commit ee212d6ea20887c0ef352be8563ca13dbf965906 ]
    
    Whenever an mmap/mmap2 event occurs, the map tree must be updated to add a new
    entry. If a new map overlaps a previous map, the overlapped section of the
    previous map is effectively unmapped, but the non-overlapping sections are
    still valid.
    
    maps__fixup_overlappings() is responsible for creating any new map entries from
    the previously overlapped map. It optionally creates a before and an after map.
    
    When creating the after map the existing code failed to adjust the map.pgoff.
    This meant the new after map would incorrectly calculate the file offset
    for the ip. This results in incorrect symbol name resolution for any ip in the
    after region.
    
    Make maps__fixup_overlappings() correctly populate map.pgoff.
    
    Add an assert that new mapping matches old mapping at the beginning of
    the after map.
    
    Committer-testing:
    
    Validated correct parsing of libcoreclr.so symbols from .NET Core 3.0 preview9
    (which didn't strip symbols).
    
    Preparation:
    
      ~/dotnet3.0-preview9/dotnet new webapi -o perfSymbol
      cd perfSymbol
      ~/dotnet3.0-preview9/dotnet publish
      perf record ~/dotnet3.0-preview9/dotnet \
          bin/Debug/netcoreapp3.0/publish/perfSymbol.dll
      ^C
    
    Before:
    
      perf script --show-mmap-events 2>&1 | grep -e MMAP -e unknown |\
         grep libcoreclr.so | head -n 4
            dotnet  1907 373352.698780: PERF_RECORD_MMAP2 1907/1907: \
                [0x7fe615726000(0x768000) @ 0 08:02 5510620 765057155]: \
                r-xp .../3.0.0-preview9-19423-09/libcoreclr.so
            dotnet  1907 373352.701091: PERF_RECORD_MMAP2 1907/1907: \
                [0x7fe615974000(0x1000) @ 0x24e000 08:02 5510620 765057155]: \
                rwxp .../3.0.0-preview9-19423-09/libcoreclr.so
            dotnet  1907 373352.701241: PERF_RECORD_MMAP2 1907/1907: \
                [0x7fe615c42000(0x1000) @ 0x51c000 08:02 5510620 765057155]: \
                rwxp .../3.0.0-preview9-19423-09/libcoreclr.so
            dotnet  1907 373352.705249:     250000 cpu-clock: \
                 7fe6159a1f99 [unknown] \
                 (.../3.0.0-preview9-19423-09/libcoreclr.so)
    
    After:
    
      perf script --show-mmap-events 2>&1 | grep -e MMAP -e unknown |\
         grep libcoreclr.so | head -n 4
            dotnet  1907 373352.698780: PERF_RECORD_MMAP2 1907/1907: \
                [0x7fe615726000(0x768000) @ 0 08:02 5510620 765057155]: \
                r-xp .../3.0.0-preview9-19423-09/libcoreclr.so
            dotnet  1907 373352.701091: PERF_RECORD_MMAP2 1907/1907: \
                [0x7fe615974000(0x1000) @ 0x24e000 08:02 5510620 765057155]: \
                rwxp .../3.0.0-preview9-19423-09/libcoreclr.so
            dotnet  1907 373352.701241: PERF_RECORD_MMAP2 1907/1907: \
                [0x7fe615c42000(0x1000) @ 0x51c000 08:02 5510620 765057155]: \
                rwxp .../3.0.0-preview9-19423-09/libcoreclr.so
    
    All the [unknown] symbols were resolved.
    
    Signed-off-by: Steve MacLean <Steve.MacLean@Microsoft.com>
    Tested-by: Brian Robbins <brianrob@microsoft.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
    Cc: John Keeping <john@metanate.com>
    Cc: John Salem <josalem@microsoft.com>
    Cc: Leo Yan <leo.yan@linaro.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Tom McDonald <thomas.mcdonald@microsoft.com>
    Link: http://lore.kernel.org/lkml/BN8PR21MB136270949F22A6A02335C238F7800@BN8PR21MB1362.namprd21.prod.outlook.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d975e5970965fd5fe33a34eef3a1dda9e8867c75
Author: Ian Rogers <irogers@google.com>
Date:   Wed Sep 25 12:59:24 2019 -0700

    perf tests: Avoid raising SEGV using an obvious NULL dereference
    
    [ Upstream commit e3e2cf3d5b1fe800b032e14c0fdcd9a6fb20cf3b ]
    
    An optimized build such as:
    
      make -C tools/perf CLANG=1 CC=clang EXTRA_CFLAGS="-O3
    
    will turn the dereference operation into a ud2 instruction, raising a
    SIGILL rather than a SIGSEGV. Use raise(..) for correctness and clarity.
    
    Similar issues were addressed in Numfor Mbiziwo-Tiapo's patch:
    
      https://lkml.org/lkml/2019/7/8/1234
    
    Committer testing:
    
    Before:
    
      [root@quaco ~]# perf test hooks
      55: perf hooks                                            : Ok
      [root@quaco ~]# perf test -v hooks
      55: perf hooks                                            :
      --- start ---
      test child forked, pid 17092
      SIGSEGV is observed as expected, try to recover.
      Fatal error (SEGFAULT) in perf hook 'test'
      test child finished with 0
      ---- end ----
      perf hooks: Ok
      [root@quaco ~]#
    
    After:
    
      [root@quaco ~]# perf test hooks
      55: perf hooks                                            : Ok
      [root@quaco ~]# perf test -v hooks
      55: perf hooks                                            :
      --- start ---
      test child forked, pid 17909
      SIGSEGV is observed as expected, try to recover.
      Fatal error (SEGFAULT) in perf hook 'test'
      test child finished with 0
      ---- end ----
      perf hooks: Ok
      [root@quaco ~]#
    
    Fixes: a074865e60ed ("perf tools: Introduce perf hooks")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lore.kernel.org/lkml/20190925195924.152834-2-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3dc77d662cae1dda2b2961add7f70265bc1570d
Author: Ian Rogers <irogers@google.com>
Date:   Wed Sep 25 12:59:23 2019 -0700

    libsubcmd: Make _FORTIFY_SOURCE defines dependent on the feature
    
    [ Upstream commit 4b0b2b096da9d296e0e5668cdfba8613bd6f5bc8 ]
    
    Unconditionally defining _FORTIFY_SOURCE can break tools that don't work
    with it, such as memory sanitizers:
    
      https://github.com/google/sanitizers/wiki/AddressSanitizer#faq
    
    Fixes: 4b6ab94eabe4 ("perf subcmd: Create subcmd library")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/20190925195924.152834-1-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 915eb63dac7bf86e208431114536cd1f62a8febc
Author: Pascal Bouwmann <bouwmann@tau-tec.de>
Date:   Thu Aug 29 07:29:41 2019 +0200

    iio: fix center temperature of bmc150-accel-core
    
    [ Upstream commit 6c59a962e081df6d8fe43325bbfabec57e0d4751 ]
    
    The center temperature of the supported devices stored in the constant
    BMC150_ACCEL_TEMP_CENTER_VAL is not 24 degrees but 23 degrees.
    
    It seems that some datasheets were inconsistent on this value leading
    to the error.  For most usecases will only make minor difference so
    not queued for stable.
    
    Signed-off-by: Pascal Bouwmann <bouwmann@tau-tec.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78e6415d4f9ae963b93a45f97d890a28bcd6afa4
Author: Remi Pommarel <repk@triplefau.lt>
Date:   Sun Sep 1 12:54:10 2019 +0200

    iio: adc: meson_saradc: Fix memory allocation order
    
    [ Upstream commit de10ac47597e7a3596b27631d0d5ce5f48d2c099 ]
    
    meson_saradc's irq handler uses priv->regmap so make sure that it is
    allocated before the irq get enabled.
    
    This also fixes crash when CONFIG_DEBUG_SHIRQ is enabled, as device
    managed resources are freed in the inverted order they had been
    allocated, priv->regmap was freed before the spurious fake irq that
    CONFIG_DEBUG_SHIRQ adds called the handler.
    
    Fixes: 3af109131b7eb8 ("iio: adc: meson-saradc: switch from polling to interrupt mode")
    Reported-by: Elie Roudninski <xademax@gmail.com>
    Signed-off-by: Remi Pommarel <repk@triplefau.lt>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Tested-by: Elie ROUDNINSKI <xademax@gmail.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b6901f3c6008d2e05f0b47848b2a64bffe55942
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Fri Feb 15 16:43:03 2019 -0500

    power: supply: max14656: fix potential use-after-free
    
    [ Upstream commit 252fbeb86ceffa549af9842cefca2412d53a7653 ]
    
    Explicitly cancel/sync the irq_work delayed work, otherwise
    there's a chance that it will run after the device is removed,
    which would result in a use-after-free.
    
    Note that cancel/sync should happen:
    - after irq's have been disabled, as the isr re-schedules the work
    - before the power supply is unregistered, because the work func
        uses the power supply handle.
    
    Cc: Alexander Kurz <akurz@blala.de>
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0d8a590d983d55fc48293ff573ae31a23b3c7d0
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Fri Mar 8 16:44:53 2019 -0500

    drm/amd/display: fix odm combine pipe reset
    
    [ Upstream commit f25f06b67ba237b76092a6fc522b1a94e84bfa85 ]
    
    We fail to reset the second odm combine pipe. This change fixes
    odm pointer management.
    
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Reviewed-by: Tony Cheng <Tony.Cheng@amd.com>
    Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a897f54e921c223a8a936a96b96b9ae2a7206386
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Fri Mar 1 11:54:19 2019 -0500

    PCI/PME: Fix possible use-after-free on remove
    
    [ Upstream commit 7cf58b79b3072029af127ae865ffc6f00f34b1f8 ]
    
    In remove(), ensure that the PME work cannot run after kfree() is called.
    Otherwise, this could result in a use-after-free.
    
    This issue was detected with the help of Coccinelle.
    
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Sinan Kaya <okaya@kernel.org>
    Cc: Frederick Lawler <fred@fredlawl.com>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e23eeb0fc58f03e06ca026f17c70949d43b15fb
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Sat Feb 23 17:43:57 2019 +0100

    net: dsa: mv88e6xxx: Release lock while requesting IRQ
    
    [ Upstream commit 342a0ee70acbee97fdeb91349420f8744eb291fb ]
    
    There is no need to hold the register lock while requesting the GPIO
    interrupt. By not holding it we can also avoid a false positive
    lockdep splat.
    
    Reported-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 646e5c77b418aa1f9e79c53ea5a8e4ebcd5f9f5d
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Feb 18 16:36:48 2019 -0800

    exec: load_script: Do not exec truncated interpreter path
    
    [ Upstream commit b5372fe5dc84235dbe04998efdede3c4daa866a9 ]
    
    Commit 8099b047ecc4 ("exec: load_script: don't blindly truncate
    shebang string") was trying to protect against a confused exec of a
    truncated interpreter path. However, it was overeager and also refused
    to truncate arguments as well, which broke userspace, and it was
    reverted. This attempts the protection again, but allows arguments to
    remain truncated. In an effort to improve readability, helper functions
    and comments have been added.
    
    Co-developed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Samuel Dionne-Riel <samuel@dionne-riel.com>
    Cc: Richard Weinberger <richard.weinberger@gmail.com>
    Cc: Graham Christensen <graham@grahamc.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f251c83d6c08bc555809e275b47abbf35c532a30
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Feb 11 01:07:10 2019 -0500

    ext4: disallow files with EXT4_JOURNAL_DATA_FL from EXT4_IOC_SWAP_BOOT
    
    [ Upstream commit 6e589291f4b1b700ca12baec5930592a0d51e63c ]
    
    A malicious/clueless root user can use EXT4_IOC_SWAP_BOOT to force a
    corner casew which can lead to the file system getting corrupted.
    There's no usefulness to allowing this, so just prohibit this case.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc4d8283f6e9c5084fe61321a37c2fcf4256b0fd
Author: Lucas A. M. Magalhães <lucmaga@gmail.com>
Date:   Thu Feb 7 18:59:41 2019 -0500

    media: vimc: Remove unused but set variables
    
    [ Upstream commit 5515e414f42bf2769caae15b634004d456658284 ]
    
    Remove unused but set variables to clean up the code and avoid
    warning.
    
    Signed-off-by: Lucas A. M. Magalhães <lucmaga@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c629fed0347e72409d314c6f6b9641eaec10fd58
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jan 29 14:14:51 2019 +0100

    ALSA: hda/realtek - Apply ALC294 hp init also for S4 resume
    
    [ Upstream commit f6ef4e0e284251ff795c541db1129c84515ed044 ]
    
    The init sequence for ALC294 headphone stuff is needed not only for
    the boot up time but also for the resume from hibernation, where the
    device is switched from the boot kernel without sound driver to the
    suspended image.  Since we record the PM event in the device
    power_state field, we can now recognize the call pattern and apply the
    sequence conditionally.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b73132b74d25e4427404342c6328f429c23b2d4e
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Tue Feb 5 12:56:44 2019 +1000

    cifs: add credits from unmatched responses/messages
    
    [ Upstream commit eca004523811f816bcfca3046ab54e1278e0973b ]
    
    We should add any credits granted to us from unmatched server responses.
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee4d28a716e8872fb92baa79ce4f5b2fe2e77710
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Thu Jan 17 16:18:38 2019 -0800

    CIFS: Respect SMB2 hdr preamble size in read responses
    
    [ Upstream commit bb1bccb60c2ebd9a6f895507d1d48d5ed773814e ]
    
    There are a couple places where we still account for 4 bytes
    in the beginning of SMB2 packet which is not true in the current
    code. Fix this to use a header preamble size where possible.
    
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a2022688a91e2f25984c1f77579e642cc7bb64c
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Mar 12 16:30:16 2019 -0700

    scsi: lpfc: Correct localport timeout duration error
    
    [ Upstream commit 2a0fb340fcc816975b8b0f2fef913d11999c39cf ]
    
    Current code incorrectly specifies a completion wait timeout duration in 5
    jiffies, when it should have been 5 seconds.
    
    Fix the adjust for units for the completion timeout call.
    
    [mkp: manual merge]
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1df87fc5e4689d36118daf7c0a0c163bf15b5d5d
Author: Nir Dotan <nird@mellanox.com>
Date:   Tue Feb 12 16:29:51 2019 +0000

    mlxsw: spectrum: Set LAG port collector only when active
    
    [ Upstream commit 48ebab31d424fbdb8ede8914923bec671a933246 ]
    
    The LAG port collecting (receive) function was mistakenly set when the
    port was registered as a LAG member, while it should be set only when
    the port collection state is set to true. Set LAG port to collecting
    when it is set to distributing, as described in the IEEE link
    aggregation standard coupled control mux machine state diagram.
    
    Signed-off-by: Nir Dotan <nird@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e32271519bb9321d557d44071a2df589113e17b4
Author: Hanjun Guo <guohanjun@huawei.com>
Date:   Tue Mar 5 21:40:58 2019 +0800

    arm64: kpti: Whitelist HiSilicon Taishan v110 CPUs
    
    [ Upstream commit 0ecc471a2cb7d4d386089445a727f47b59dc9b6e ]
    
    HiSilicon Taishan v110 CPUs didn't implement CSV3 field of the
    ID_AA64PFR0_EL1 and are not susceptible to Meltdown, so whitelist
    the MIDR in kpti_safe_list[] table.
    
    Signed-off-by: Hanjun Guo <hanjun.guo@linaro.org>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Zhangshaokun <zhangshaokun@hisilicon.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6021dd86ca3825dc11399fe8bb17078848765367
Author: Hanjun Guo <guohanjun@huawei.com>
Date:   Tue Mar 5 21:40:57 2019 +0800

    arm64: Add MIDR encoding for HiSilicon Taishan CPUs
    
    commit efd00c722ca855745fcc35a7e6675b5a782a3fc8 upstream.
    
    Adding the MIDR encodings for HiSilicon Taishan v110 CPUs,
    which is used in Kunpeng ARM64 server SoCs. TSV110 is the
    abbreviation of Taishan v110.
    
    Signed-off-by: Hanjun Guo <hanjun.guo@linaro.org>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Zhangshaokun <zhangshaokun@hisilicon.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9190141529fb1ecd5f88a0ba5179101d47069e5d
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Jan 19 10:00:30 2019 +0100

    rtc: pcf8523: set xtal load capacitance from DT
    
    [ Upstream commit 189927e719e36ceefbb8037f23d3849e47833aef ]
    
    Add support for specifying the xtal load capacitance in the DT node.
    The pcf8523 supports xtal load capacitance of 7pF or 12.5pF.
    If the rtc has the wrong configuration the time will
    drift several hours/week.
    
    The driver use the default value 12.5pF.
    
    The DT may specify either 7000fF or 12500fF.
    (The DT uses femto Farad to avoid decimal numbers).
    Other values are warned and the driver uses the default value.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 961ba81d08d864077fc0b4f2f4224453751d587c
Author: Jan-Marek Glogowski <glogow@fbihome.de>
Date:   Fri Feb 1 13:52:31 2019 +0100

    usb: handle warm-reset port requests on hub resume
    
    [ Upstream commit 4fdc1790e6a9ef22399c6bc6e63b80f4609f3b7e ]
    
    On plug-in of my USB-C device, its USB_SS_PORT_LS_SS_INACTIVE
    link state bit is set. Greping all the kernel for this bit shows
    that the port status requests a warm-reset this way.
    
    This just happens, if its the only device on the root hub, the hub
    therefore resumes and the HCDs status_urb isn't yet available.
    If a warm-reset request is detected, this sets the hubs event_bits,
    which will prevent any auto-suspend and allows the hubs workqueue
    to warm-reset the port later in port_event.
    
    Signed-off-by: Jan-Marek Glogowski <glogow@fbihome.de>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a77562e18bf1ca760f0511aee21e6d0909802dc
Author: Jussi Laako <jussi@sonarnerd.net>
Date:   Tue Jan 29 00:47:01 2019 +0200

    ALSA: usb-audio: Cleanup DSD whitelist
    
    [ Upstream commit 202e69e645545e8dcec5e239658125276a7a315a ]
    
    XMOS/Thesycon family of USB Audio Class firmware flags DSD altsetting
    separate from the PCM ones. Thus the DSD altsetting can be auto-detected
    based on the flag and doesn't need maintaining specific altsetting
    whitelist.
    
    In addition, static VID:PID-to-altsetting whitelisting causes problems
    when firmware update changes the altsetting, or same VID:PID is reused
    for another device that has different kind of firmware.
    
    This patch removes existing explicit whitelist mappings for XMOS VID
    (0x20b1) and Thesycon VID (0x152a).
    
    Also corrects placement of Hegel HD12 and NuPrime DAC-10 to keep list
    sorted based on VID.
    
    Signed-off-by: Jussi Laako <jussi@sonarnerd.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0608eec296d012637dd2879a961564e3d849b8d
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Mon Jan 21 12:58:27 2019 +0200

    usb: dwc3: gadget: clear DWC3_EP_TRANSFER_STARTED on cmd complete
    
    [ Upstream commit acbfa6c26f21a18830ee064b588c92334305b6af ]
    
    We must wait until End Transfer completes in order to clear
    DWC3_EP_TRANSFER_STARTED, otherwise we may confuse the driver.
    
    This patch is in preparation to fix a rare race condition that happens
    upon Disconnect Interrupt.
    
    Tested-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0e8b35e915e4d5bcd0368b846c9b84090fea2f6
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Mon Jan 21 13:01:16 2019 +0200

    usb: dwc3: gadget: early giveback if End Transfer already completed
    
    [ Upstream commit 9f45581f5eec6786c6eded2b3c85345d82a910c9 ]
    
    There is a rare race condition that may happen during a Disconnect
    Interrupt if we have a started request that happens to be
    dequeued *after* completion of End Transfer command. If that happens,
    that request will be left waiting for completion of an End Transfer
    command that will never happen.
    
    If End Transfer command has already completed before, we are safe to
    giveback the request straight away.
    
    Tested-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 335d4f8182461f650ae5b931084d4134579674c9
Author: Daniel T. Lee <danieltimlee@gmail.com>
Date:   Mon Dec 3 19:39:30 2018 +0900

    samples: bpf: fix: seg fault with NULL pointer arg
    
    [ Upstream commit d59dd69d5576d699d7d3f5da0b4738c3a36d0133 ]
    
    When NULL pointer accidentally passed to write_kprobe_events,
    due to strlen(NULL), segmentation fault happens.
    Changed code returns -1 to deal with this situation.
    
    Bug issued with Smatch, static analysis.
    
    Signed-off-by: Daniel T. Lee <danieltimlee@gmail.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c41f30e8d2338dd89a2310742e4671ff31c57ea3
Author: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
Date:   Fri Mar 15 20:09:10 2019 +0100

    HID: steam: fix deadlock with input devices.
    
    [ Upstream commit 6b538cc21334b83f09b25dec4aa2d2726bf07ed0 ]
    
    When using this driver with the wireless dongle and some usermode
    program that monitors every input device (acpid, for example), while
    another usermode client opens and closes the low-level device
    repeadedly, the system eventually deadlocks.
    
    The reason is that steam_input_register_device() must not be called with
    the mutex held, because the input subsystem has its own synchronization
    that clashes with this one: it is possible that steam_input_open() is
    called before input_register_device() returns, and since
    steam_input_open() needs to lock the mutex, it deadlocks.
    
    However we must hold the mutex when calling any function that sends
    commands to the controller. If not, random commands end up falling fail.
    
    Reported-by: Simon Gene Gottlieb <simon@gottliebtfreitag.de>
    Signed-off-by: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
    Tested-by: Simon Gene Gottlieb <simon@gottliebtfreitag.de>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c8ae7221bcca250380e826ee182ed31344b579f
Author: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
Date:   Wed Feb 6 22:27:54 2019 +0100

    HID: steam: fix boot loop with bluetooth firmware
    
    [ Upstream commit cf28aee292e102740e49f74385b4b89c00050763 ]
    
    There is a new firmware for the Steam Controller with support for BLE
    connections. When using such a device with a wired connection, it
    reboots itself every 10 seconds unless an application has opened it.
    
    Doing hid_hw_open() unconditionally on probe fixes the issue, and the
    code becomes simpler.
    
    Signed-off-by: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce05beb3b402f737f6007911e5a3d4bbedaa3039
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Nov 5 12:17:01 2018 -0500

    NFSv4: Ensure that the state manager exits the loop on SIGKILL
    
    [ Upstream commit a1aa09be21fa344d1f5585aab8164bfae55f57e3 ]
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 952b0285826e08f92184eb0d349702884b75f4cd
Author: NOGUCHI Hiroshi <drvlabo@gmail.com>
Date:   Tue Jan 29 13:31:05 2019 +0900

    HID: Add ASUS T100CHI keyboard dock battery quirks
    
    [ Upstream commit a767ffea05d2737f6542cd78458a84a157fa216d ]
    
    Add ASUS Transbook T100CHI/T90CHI keyboard dock into battery quirk list, in
    order to add specific implementation in hid-asus.
    
    Signed-off-by: NOGUCHI Hiroshi <drvlabo@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24ec7c1b9b17994a28d8feb7a5a113e55eb89095
Author: Sergio Paracuellos <sergio.paracuellos@gmail.com>
Date:   Fri Jan 4 12:34:08 2019 +0100

    staging: mt7621-pinctrl: use pinconf-generic for 'dt_node_to_map' and 'dt_free_map'
    
    [ Upstream commit 0ca1f90861b6d64386261096b42bfc81ce11948a ]
    
    Instead of reimplement afunction to do 'dt_node_to_map' task like
    'rt2880_pinctrl_dt_node_to_map' make use of 'pinconf_generic_dt_node_to_map_all'
    generic function for this task. Also use its equivalent function for free which
    is 'pinconf_generic_dt_free_map'. Remove 'rt2880_pinctrl_dt_node_to_map' function
    which is not needed anymore. This decrease a bit driver LOC and make it more
    generic. To properly compile this changes 'GENERIC_PINCONF' option is selected
    with the driver in its Kconfig file.
    
    This also fix a problem with function 'rt2880_pinctrl_dt_node_to_map' which was
    calling internally 'pinctrl_utils_reserve_map' which expects 'num_maps' to be initialized.
    It does a memory allocation based on the value, and triggers the following
    warning if is not properly set:
    
    if (unlikely(order >= MAX_ORDER)) {
            WARN_ON_ONCE(!(gfp_mask & __GFP_NOWARN));
            return NULL;
    }
    
    Generic function 'pinconf_generic_dt_node_to_map_all' initializes properly
    'num_maps' to zero fixing the problem.
    
    Fixes: e12a1a6e087b ("staging: mt7621-pinctrl: refactor rt2880_pinctrl_dt_node_to_map function")
    Reported-by: NeilBrown <neil@brown.name>
    Tested-by: NeilBrown <neil@brown.name>
    Signed-off-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b064e272023c2e23c41c62b60c93940d2c1f4ef8
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Nov 14 18:11:18 2018 -0800

    scripts/setlocalversion: Improve -dirty check with git-status --no-optional-locks
    
    [ Upstream commit ff64dd4857303dd5550faed9fd598ac90f0f2238 ]
    
    git-diff-index does not refresh the index for you, so using it for a
    "-dirty" check can give misleading results. Commit 6147b1cf19651
    ("scripts/setlocalversion: git: Make -dirty check more robust") tried to
    fix this by switching to git-status, but it overlooked the fact that
    git-status also writes to the .git directory of the source tree, which
    is definitely not kosher for an out-of-tree (O=) build. That is getting
    reverted.
    
    Fortunately, git-status now supports avoiding writing to the index via
    the --no-optional-locks flag, as of git 2.14. It still calculates an
    up-to-date index, but it avoids writing it out to the .git directory.
    
    So, let's retry the solution from commit 6147b1cf19651 using this new
    flag first, and if it fails, we assume this is an older version of git
    and just use the old git-diff-index method.
    
    It's hairy to get the 'grep -vq' (inverted matching) correct by stashing
    the output of git-status (you have to be careful about the difference
    betwen "empty stdin" and "blank line on stdin"), so just pipe the output
    directly to grep and use a regex that's good enough for both the
    git-status and git-diff-index version.
    
    Cc: Christian Kujau <lists@nerdbynature.de>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Suggested-by: Alexander Kapshuk <alexander.kapshuk@gmail.com>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Tested-by: Genki Sky <sky@genki.is>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9aafa29969214bb40f6624fdf9a7203a838a27b1
Author: Yi Wang <wang.yi59@zte.com.cn>
Date:   Wed Oct 31 15:41:42 2018 +0800

    clk: boston: unregister clks on failure in clk_boston_setup()
    
    [ Upstream commit 8b627f616ed63dcaf922369fc14a5daf8ad03038 ]
    
    The registered clks should unregister when something wrong happens
    before going out in function clk_boston_setup().
    
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba6488775f1d4866811b944ed25d5c043319a05
Author: Abhishek Ambure <aambure@codeaurora.org>
Date:   Fri Feb 8 14:55:23 2019 +0200

    ath10k: assign 'n_cipher_suites = 11' for WCN3990 to enable WPA3
    
    [ Upstream commit 7ba31e6e0cdc0cc2e60e1fcbf467f3c95aea948e ]
    
    Hostapd uses CCMP, GCMP & GCMP-256 as 'wpa_pairwise' option to run WPA3.
    In WCN3990 firmware cipher suite numbers 9 to 11 are for CCMP,
    GCMP & GCMP-256.
    
    To enable CCMP, GCMP & GCMP-256 cipher suites in WCN3990 firmware,
    host sets 'n_cipher_suites = 11' while initializing hardware parameters.
    
    Tested HW: WCN3990
    Tested FW: WLAN.HL.2.0-01188-QCAHLSWMTPLZ-1
    
    Signed-off-by: Abhishek Ambure <aambure@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6af54d4ad0da1b40e85312c802cd6c17a564925
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Nov 29 19:44:45 2018 +0200

    platform/x86: Fix config space access for intel_atomisp2_pm
    
    [ Upstream commit 6a31061833a52a79c99221b6251db08cf377470e ]
    
    We lose even config space access when we power gate the ISP
    via the PUNIT. That makes lspci & co. produce gibberish.
    
    To fix that let's try to implement actual runtime pm hooks
    and inform the pci core that the device always goes to
    D3cold. That will cause the pci core to resume the device
    before attempting config space access.
    
    This introduces another annoyance though. We get the
    following error every time we try to resume the device:
    intel_atomisp2_pm 0000:00:03.0: Refused to change power state, currently in D3
    
    The reason being that the pci core tries to put the device
    back into D0 via the standard PCI PM mechanism before
    calling the driver resume hook. To fix this properly
    we'd need to infiltrate the platform pm hooks (could
    turn ugly real fast), or use pm domains (which don't
    seem to exist on x86), or some extra early resume
    hook for the driver (which doesn't exist either).
    So maybe we just choose to live with the error?
    
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Alan Cox <alan@linux.intel.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8694ceba93380a66a7d44a6f4c6037cfbac8ab89
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Nov 29 19:44:44 2018 +0200

    platform/x86: Add the VLV ISP PCI ID to atomisp2_pm
    
    [ Upstream commit 8a7d7141528ad67e465bc6afacc6a3144d1fe320 ]
    
    If the ISP is exposed as a PCI device VLV machines need the
    same treatment as CHV machines to power gate the ISP. Otherwise
    s0ix will not work.
    
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Alan Cox <alan@linux.intel.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c1b1d3c75939b1740a5883baf3d0e2804b22959
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 26 15:31:56 2018 +0100

    HID: i2c-hid: Add Odys Winbook 13 to descriptor override
    
    [ Upstream commit f8f807441eefddc3c6d8a378421f0ede6361d565 ]
    
    The Odys Winbook 13 uses a SIPODEV SP1064 touchpad, which does not
    supply descriptors, add this to the DMI descriptor override list, fixing
    the touchpad not working.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1526312
    Reported-by: Rene Wagner <redhatbugzilla@callerid.de>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3db3961160f6bfb3f80b77573737ed9a284207bc
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Mon Jan 7 15:24:29 2019 +0800

    HID: i2c-hid: Ignore input report if there's no data present on Elan touchpanels
    
    [ Upstream commit 1475af255e18f35dc46f8a7acc18354c73d45149 ]
    
    While using Elan touchpads, the message floods:
    [  136.138487] i2c_hid i2c-DELL08D6:00: i2c_hid_get_input: incomplete report (14/65535)
    
    Though the message flood is annoying, the device it self works without
    any issue. I suspect that the device in question takes too much time to
    pull the IRQ back to high after I2C host has done reading its data.
    
    Since the host receives all useful data, let's ignore the input report
    when there's no data.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0bcac994ad8f83c9a0992ec2b62fc2d7deabf4e
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Nov 14 07:24:57 2018 +0000

    HID: i2c-hid: Disable runtime PM for LG touchscreen
    
    [ Upstream commit 86c31524b27c7e686841dd4a79eda95cfd989f16 ]
    
    LG touchscreen (1fd2:8001) stops working after reboot:
    [ 4.859153] i2c_hid i2c-SAPS2101:00: i2c_hid_get_input: incomplete report (64/66)
    [ 4.936070] i2c_hid i2c-SAPS2101:00: i2c_hid_get_input: incomplete report (64/66)
    [ 9.948224] i2c_hid i2c-SAPS2101:00: failed to reset device.
    
    The device in question stops working after receives SLEEP, ON, SLEEP
    commands in a short period. The scenario is like this:
    - Once the desktop session closes, it also closed the hid device, so the
    device gets runtime suspended and receives a SLEEP command.
    - Before calling shutdown callback, it gets runtime resumed and received
    an ON command.
    - In the shutdown callback, it receives another SLEEP command.
    
    I failed to find a reliable interval between ON/SLEEP commands that can
    make it work, so let's simply disable runtime PM for the device.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8187ff32b23e4f83bc07976900d99f174540b0f
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Fri Aug 17 21:09:48 2018 +0200

    netfilter: ipset: Make invalid MAC address checks consistent
    
    [ Upstream commit 29edbc3ebdb0faa934114f14bf12fc0b784d4f1b ]
    
    Set types bitmap:ipmac and hash:ipmac check that MAC addresses
    are not all zeroes.
    
    Introduce one missing check, and make the remaining ones
    consistent, using is_zero_ether_addr() instead of comparing
    against an array containing zeroes.
    
    This was already done for hash:mac sets in commit 26c97c5d8dac
    ("netfilter: ipset: Use is_zero_ether_addr instead of static and
    memcmp").
    
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb38a17cc8806fecb081cb93c085fcb67a1d4e55
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Oct 24 10:13:03 2018 +0100

    Btrfs: fix deadlock on tree root leaf when finding free extent
    
    [ Upstream commit 4222ea7100c0e37adace2790c8822758bbeee179 ]
    
    When we are writing out a free space cache, during the transaction commit
    phase, we can end up in a deadlock which results in a stack trace like the
    following:
    
     schedule+0x28/0x80
     btrfs_tree_read_lock+0x8e/0x120 [btrfs]
     ? finish_wait+0x80/0x80
     btrfs_read_lock_root_node+0x2f/0x40 [btrfs]
     btrfs_search_slot+0xf6/0x9f0 [btrfs]
     ? evict_refill_and_join+0xd0/0xd0 [btrfs]
     ? inode_insert5+0x119/0x190
     btrfs_lookup_inode+0x3a/0xc0 [btrfs]
     ? kmem_cache_alloc+0x166/0x1d0
     btrfs_iget+0x113/0x690 [btrfs]
     __lookup_free_space_inode+0xd8/0x150 [btrfs]
     lookup_free_space_inode+0x5b/0xb0 [btrfs]
     load_free_space_cache+0x7c/0x170 [btrfs]
     ? cache_block_group+0x72/0x3b0 [btrfs]
     cache_block_group+0x1b3/0x3b0 [btrfs]
     ? finish_wait+0x80/0x80
     find_free_extent+0x799/0x1010 [btrfs]
     btrfs_reserve_extent+0x9b/0x180 [btrfs]
     btrfs_alloc_tree_block+0x1b3/0x4f0 [btrfs]
     __btrfs_cow_block+0x11d/0x500 [btrfs]
     btrfs_cow_block+0xdc/0x180 [btrfs]
     btrfs_search_slot+0x3bd/0x9f0 [btrfs]
     btrfs_lookup_inode+0x3a/0xc0 [btrfs]
     ? kmem_cache_alloc+0x166/0x1d0
     btrfs_update_inode_item+0x46/0x100 [btrfs]
     cache_save_setup+0xe4/0x3a0 [btrfs]
     btrfs_start_dirty_block_groups+0x1be/0x480 [btrfs]
     btrfs_commit_transaction+0xcb/0x8b0 [btrfs]
    
    At cache_save_setup() we need to update the inode item of a block group's
    cache which is located in the tree root (fs_info->tree_root), which means
    that it may result in COWing a leaf from that tree. If that happens we
    need to find a free metadata extent and while looking for one, if we find
    a block group which was not cached yet we attempt to load its cache by
    calling cache_block_group(). However this function will try to load the
    inode of the free space cache, which requires finding the matching inode
    item in the tree root - if that inode item is located in the same leaf as
    the inode item of the space cache we are updating at cache_save_setup(),
    we end up in a deadlock, since we try to obtain a read lock on the same
    extent buffer that we previously write locked.
    
    So fix this by using the tree root's commit root when searching for a
    block group's free space cache inode item when we are attempting to load
    a free space cache. This is safe since block groups once loaded stay in
    memory forever, as well as their caches, so after they are first loaded
    we will never need to read their inode items again. For new block groups,
    once they are created they get their ->cached field set to
    BTRFS_CACHE_FINISHED meaning we will not need to read their inode item.
    
    Reported-by: Andrew Nelson <andrew.s.nelson@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CAPTELenq9x5KOWuQ+fa7h1r3nsJG8vyiTH8+ifjURc_duHh2Wg@mail.gmail.com/
    Fixes: 9d66e233c704 ("Btrfs: load free space cache if it exists")
    Tested-by: Andrew Nelson <andrew.s.nelson@gmail.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33970cf511c8f98989dfd706f41124928c4fefff
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Fri Oct 5 09:49:40 2018 -0600

    PCI: Fix Switchtec DMA aliasing quirk dmesg noise
    
    [ Upstream commit 742bbe1ee35b5699c092541f97c7cec326556bb1 ]
    
    Currently the Switchtec quirk runs on all endpoints in the switch,
    including all the upstream and downstream ports.  These other functions do
    not contain BARs, so the quirk fails when trying to map the BAR and prints
    the error "Cannot iomap Switchtec device".  The user will see a few of
    these useless and scary errors, one for each port in the switch.
    
    At most, the quirk should only run on either a management endpoint
    (PCI_CLASS_MEMORY_OTHER) or an NTB endpoint (PCI_CLASS_BRIDGE_OTHER).
    However, the quirk is useless except in NTB applications, so we will
    only run it when the class is PCI_CLASS_BRIDGE_OTHER.
    
    Switch to using DECLARE_PCI_FIXUP_CLASS_FINAL and only match
    PCI_CLASS_BRIDGE_OTHER.
    
    Reported-by: Stephen Bates <sbates@raithlin.com>
    Fixes: ad281ecf1c7d ("PCI: Add DMA alias quirk for Microsemi Switchtec NTB")
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    [bhelgaas: split SWITCHTEC_QUIRK() introduction to separate patch]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Doug Meyer <dmeyer@gigaio.com>
    Cc: Kurt Schwemmer <kurt.schwemmer@microsemi.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 437de04184bcbf4f90fe7d8502a8f2d22dfafb24
Author: Coly Li <colyli@suse.de>
Date:   Sat Feb 9 12:53:07 2019 +0800

    bcache: fix input overflow to writeback_rate_minimum
    
    [ Upstream commit dab71b2db98dcdd4657d151b01a7be88ce10f9d1 ]
    
    dc->writeback_rate_minimum is type unsigned integer variable, it is set
    via sysfs interface, and converte from input string to unsigned integer
    by d_strtoul_nonzero(). When the converted input value is larger than
    UINT_MAX, overflow to unsigned integer happens.
    
    This patch fixes the overflow by using sysfs_strotoul_clamp() to
    convert input string and limit the value in range [1, UINT_MAX], then
    the overflow can be avoided.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be488566ef2f3cf375e01b665890efdb633d6fad
Author: Jeykumar Sankaran <jsanka@codeaurora.org>
Date:   Mon Dec 17 14:35:04 2018 -0800

    drm/msm/dpu: handle failures while initializing displays
    
    [ Upstream commit a802ee99c448ca0496fa307f3e46b834ae2a46a3 ]
    
    Bail out KMS hw init on display initialization failures with
    proper error logging.
    
    changes in v3:
        - introduced in the series
    changes in v4:
        - avoid duplicate return on errors (Sean Paul)
        - avoid spamming errors on failures (Jordon Crouse)
    
    Signed-off-by: Jeykumar Sankaran <jsanka@codeaurora.org>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5b3bb03c372fd9745f30f4852bf92ef4db71af4
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Jan 25 11:59:01 2019 -0800

    x86/cpu: Add Atom Tremont (Jacobsville)
    
    [ Upstream commit 00ae831dfe4474ef6029558f5eb3ef0332d80043 ]
    
    Add the Atom Tremont model number to the Intel family list.
    
    [ Tony: Also update comment at head of file to say "_X" suffix is
      also used for microserver parts. ]
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Aristeu Rozanski <aris@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Megha Dey <megha.dey@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: Rajneesh Bhardwaj <rajneesh.bhardwaj@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20190125195902.17109-4-tony.luck@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab0888699734c36e8cf28d73367c133bd38a140b
Author: Len Brown <len.brown@intel.com>
Date:   Fri Dec 14 20:02:27 2018 -0500

    tools/power turbostat: fix goldmont C-state limit decoding
    
    [ Upstream commit 445640a563493f28d15f47e151e671281101e7dc ]
    
    When the C-state limit is 8 on Goldmont, PC10 is enabled.
    Previously turbostat saw this as "undefined", and thus assumed
    it should not show some counters, such as pc3, pc6, pc7.
    
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4da8b5f8a71dea3acaf054bcf3a6e1f6d8f6ba6e
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Wed Sep 5 13:40:05 2018 +0200

    usb: dwc2: fix unbalanced use of external vbus-supply
    
    [ Upstream commit cd7cd0e6cedfda8da6668a4af6748f96bbb6fed4 ]
    
    When using external vbus supply regulator, it should be enabled
    synchronously with PWR bit in HPRT register. This also fixes
    unbalanced use of this optional regulator (This can be reproduced
    easily when unbinding the driver).
    
    Fixes: 531ef5ebea96 ("usb: dwc2: add support for host mode external
    vbus supply")
    
    Tested-by: Artur Petrosyan <arturp@synopsys.com>
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@st.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 649ee6f0c6772c6466134254a6abfee33ad25a15
Author: Julian Sax <jsbc@gmx.de>
Date:   Wed Oct 24 22:40:26 2018 +0200

    HID: i2c-hid: add Direkt-Tek DTLAPY133-1 to descriptor override
    
    [ Upstream commit 399474e4c1100bca264ed14fa3ad0d68fab484d8 ]
    
    This device uses the SIPODEV SP1064 touchpad, which does not
    supply descriptors, so it has to be added to the override list.
    
    Reported-by: Tim Aldridge <taldridge@mac.com>
    Signed-off-by: Julian Sax <jsbc@gmx.de>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce43554395a3cfdb17421a39d9c59f364a85ee47
Author: Chao Yu <chao@kernel.org>
Date:   Sun Oct 7 03:03:38 2018 +0800

    f2fs: fix to recover inode->i_flags of inode block during POR
    
    [ Upstream commit 0c093b590efb5c1ccdc835868dc2ae94bd2e14dc ]
    
    Testcase to reproduce this bug:
    1. mkfs.f2fs /dev/sdd
    2. mount -t f2fs /dev/sdd /mnt/f2fs
    3. touch /mnt/f2fs/file
    4. sync
    5. chattr +a /mnt/f2fs/file
    6. xfs_io -a /mnt/f2fs/file -c "fsync"
    7. godown /mnt/f2fs
    8. umount /mnt/f2fs
    9. mount -t f2fs /dev/sdd /mnt/f2fs
    10. xfs_io /mnt/f2fs/file
    
    There is no error when opening this file w/o O_APPEND, but actually,
    we expect the correct result should be:
    
    /mnt/f2fs/file: Operation not permitted
    
    The root cause is, in recover_inode(), we recover inode->i_flags more
    than F2FS_I(inode)->i_flags, so fix it.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b619de076f9c9a17cb454f5e54b9c13740125c07
Author: Chao Yu <chao@kernel.org>
Date:   Tue Sep 25 15:36:00 2018 +0800

    f2fs: fix to recover inode's i_gc_failures during POR
    
    [ Upstream commit 7de36cf3e4087207f42a88992f8cb615a1bd902e ]
    
    inode.i_gc_failures is used to indicate that skip count of migrating
    on blocks of inode, we should guarantee it can be recovered in sudden
    power-off case.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23848022460fa4dc88b0b69b819c9fb15c75ff56
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Oct 30 15:10:39 2018 -0700

    powerpc/powernv: hold device_hotplug_lock when calling memtrace_offline_pages()
    
    [ Upstream commit 5666848774ef43d3db5151ec518f1deb63515c20 ]
    
    Let's perform all checking + offlining + removing under
    device_hotplug_lock, so nobody can mess with these devices via sysfs
    concurrently.
    
    [david@redhat.com: take device_hotplug_lock outside of loop]
      Link: http://lkml.kernel.org/r/20180927092554.13567-6-david@redhat.com
    Link: http://lkml.kernel.org/r/20180925091457.28651-6-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Pavel Tatashin <pavel.tatashin@microsoft.com>
    Reviewed-by: Rashmica Gupta <rashmica.g@gmail.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Rashmica Gupta <rashmica.g@gmail.com>
    Cc: Michael Neuling <mikey@neuling.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: John Allen <jallen@linux.vnet.ibm.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Mathieu Malaterre <malat@debian.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: YASUAKI ISHIMATSU <yasu.isimatu@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bff91a961a052f8942db27f00a4418caa63f7bfd
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Wed Sep 12 15:31:56 2018 +0100

    sc16is7xx: Fix for "Unexpected interrupt: 8"
    
    [ Upstream commit 30ec514d440cf2c472c8e4b0079af2c731f71a3e ]
    
    The SC16IS752 has an Enhanced Feature Register which is aliased at the
    same address as the Interrupt Identification Register; accessing it
    requires that a magic value is written to the Line Configuration
    Register. If an interrupt is raised while the EFR is mapped in then
    the ISR won't be able to access the IIR, leading to the "Unexpected
    interrupt" error messages.
    
    Avoid the problem by claiming a mutex around accesses to the EFR
    register, also claiming the mutex in the interrupt handler work
    item (this is equivalent to disabling interrupts to interlock against
    a non-threaded interrupt handler).
    
    See: https://github.com/raspberrypi/linux/issues/2529
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 157c391babd7110a5b275fff26826690c4ad5438
Author: James Smart <jsmart2021@gmail.com>
Date:   Thu Nov 29 16:09:31 2018 -0800

    scsi: lpfc: Fix a duplicate 0711 log message number.
    
    [ Upstream commit 2c4c91415a05677acc5c8131a5eb472d4aa96ae1 ]
    
    Renumber one of the 0711 log messages so there isn't a duplication.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b2fbfacd74baa522abb5b61852bcada904c1cc6
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Sun Jan 27 17:59:53 2019 -0800

    f2fs: flush quota blocks after turnning it off
    
    [ Upstream commit 0e0667b625cf64243df83171bff61f9d350b9ca5 ]
    
    After quota_off, we'll get some dirty blocks. If put_super don't have a chance
    to flush them by checkpoint, it causes NULL pointer exception in end_io after
    iput(node_inode). (e.g., by checkpoint=disable)
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5641f02dc9e28e6710cf53d218bfa209a7718de
Author: Ahmad Masri <amasri@codeaurora.org>
Date:   Wed Oct 31 10:52:23 2018 +0200

    wil6210: fix freeing of rx buffers in EDMA mode
    
    [ Upstream commit 6470f31927b46846d957628b719dcfda05446664 ]
    
    After being associated with some EDMA rx traffic, upon "down" driver
    doesn't free all skbs in the rx ring.
    Modify wil_move_all_rx_buff_to_free_list to loop on active list of rx
    buffers, unmap the physical memory and free the skb.
    
    Signed-off-by: Ahmad Masri <amasri@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8ab4185ea5547efe53a0a0c99357aa84a15344b
Author: Qu Wenruo <wqu@suse.com>
Date:   Thu Oct 17 10:38:36 2019 +0800

    btrfs: tracepoints: Fix wrong parameter order for qgroup events
    
    [ Upstream commit fd2b007eaec898564e269d1f478a2da0380ecf51 ]
    
    [BUG]
    For btrfs:qgroup_meta_reserve event, the trace event can output garbage:
    
      qgroup_meta_reserve: 9c7f6acc-b342-4037-bc47-7f6e4d2232d7: refroot=5(FS_TREE) type=DATA diff=2
    
    The diff should always be alinged to sector size (4k), so there is
    definitely something wrong.
    
    [CAUSE]
    For the wrong @diff, it's caused by wrong parameter order.
    The correct parameters are:
    
      struct btrfs_root, s64 diff, int type.
    
    However the parameters used are:
    
      struct btrfs_root, int type, s64 diff.
    
    Fixes: 4ee0d8832c2e ("btrfs: qgroup: Update trace events for metadata reservation")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bcbe35027e22b38a4628e25e6f42b5bf8dbf86e
Author: Qu Wenruo <wqu@suse.com>
Date:   Mon Oct 14 14:34:51 2019 +0800

    btrfs: qgroup: Always free PREALLOC META reserve in btrfs_delalloc_release_extents()
    
    [ Upstream commit 8702ba9396bf7bbae2ab93c94acd4bd37cfa4f09 ]
    
    [Background]
    Btrfs qgroup uses two types of reserved space for METADATA space,
    PERTRANS and PREALLOC.
    
    PERTRANS is metadata space reserved for each transaction started by
    btrfs_start_transaction().
    While PREALLOC is for delalloc, where we reserve space before joining a
    transaction, and finally it will be converted to PERTRANS after the
    writeback is done.
    
    [Inconsistency]
    However there is inconsistency in how we handle PREALLOC metadata space.
    
    The most obvious one is:
    In btrfs_buffered_write():
            btrfs_delalloc_release_extents(BTRFS_I(inode), reserve_bytes, true);
    
    We always free qgroup PREALLOC meta space.
    
    While in btrfs_truncate_block():
            btrfs_delalloc_release_extents(BTRFS_I(inode), blocksize, (ret != 0));
    
    We only free qgroup PREALLOC meta space when something went wrong.
    
    [The Correct Behavior]
    The correct behavior should be the one in btrfs_buffered_write(), we
    should always free PREALLOC metadata space.
    
    The reason is, the btrfs_delalloc_* mechanism works by:
    - Reserve metadata first, even it's not necessary
      In btrfs_delalloc_reserve_metadata()
    
    - Free the unused metadata space
      Normally in:
      btrfs_delalloc_release_extents()
      |- btrfs_inode_rsv_release()
         Here we do calculation on whether we should release or not.
    
    E.g. for 64K buffered write, the metadata rsv works like:
    
    /* The first page */
    reserve_meta:   num_bytes=calc_inode_reservations()
    free_meta:      num_bytes=0
    total:          num_bytes=calc_inode_reservations()
    /* The first page caused one outstanding extent, thus needs metadata
       rsv */
    
    /* The 2nd page */
    reserve_meta:   num_bytes=calc_inode_reservations()
    free_meta:      num_bytes=calc_inode_reservations()
    total:          not changed
    /* The 2nd page doesn't cause new outstanding extent, needs no new meta
       rsv, so we free what we have reserved */
    
    /* The 3rd~16th pages */
    reserve_meta:   num_bytes=calc_inode_reservations()
    free_meta:      num_bytes=calc_inode_reservations()
    total:          not changed (still space for one outstanding extent)
    
    This means, if btrfs_delalloc_release_extents() determines to free some
    space, then those space should be freed NOW.
    So for qgroup, we should call btrfs_qgroup_free_meta_prealloc() other
    than btrfs_qgroup_convert_reserved_meta().
    
    The good news is:
    - The callers are not that hot
      The hottest caller is in btrfs_buffered_write(), which is already
      fixed by commit 336a8bb8e36a ("btrfs: Fix wrong
      btrfs_delalloc_release_extents parameter"). Thus it's not that
      easy to cause false EDQUOT.
    
    - The trans commit in advance for qgroup would hide the bug
      Since commit f5fef4593653 ("btrfs: qgroup: Make qgroup async transaction
      commit more aggressive"), when btrfs qgroup metadata free space is slow,
      it will try to commit transaction and free the wrongly converted
      PERTRANS space, so it's not that easy to hit such bug.
    
    [FIX]
    So to fix the problem, remove the @qgroup_free parameter for
    btrfs_delalloc_release_extents(), and always pass true to
    btrfs_inode_rsv_release().
    
    Reported-by: Filipe Manana <fdmanana@suse.com>
    Fixes: 43b18595d660 ("btrfs: qgroup: Use separate meta reservation type for delalloc")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96b9b94647b083f7569153bab3691214f2dd8d7d
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Sep 30 10:20:25 2019 +0100

    Btrfs: fix memory leak due to concurrent append writes with fiemap
    
    [ Upstream commit c67d970f0ea8dcc423e112137d34334fa0abb8ec ]
    
    When we have a buffered write that starts at an offset greater than or
    equals to the file's size happening concurrently with a full ranged
    fiemap, we can end up leaking an extent state structure.
    
    Suppose we have a file with a size of 1Mb, and before the buffered write
    and fiemap are performed, it has a single extent state in its io tree
    representing the range from 0 to 1Mb, with the EXTENT_DELALLOC bit set.
    
    The following sequence diagram shows how the memory leak happens if a
    fiemap a buffered write, starting at offset 1Mb and with a length of
    4Kb, are performed concurrently.
    
              CPU 1                                                  CPU 2
    
      extent_fiemap()
        --> it's a full ranged fiemap
            range from 0 to LLONG_MAX - 1
            (9223372036854775807)
    
        --> locks range in the inode's
            io tree
          --> after this we have 2 extent
              states in the io tree:
              --> 1 for range [0, 1Mb[ with
                  the bits EXTENT_LOCKED and
                  EXTENT_DELALLOC_BITS set
              --> 1 for the range
                  [1Mb, LLONG_MAX[ with
                  the EXTENT_LOCKED bit set
    
                                                      --> start buffered write at offset
                                                          1Mb with a length of 4Kb
    
                                                      btrfs_file_write_iter()
    
                                                        btrfs_buffered_write()
                                                          --> cached_state is NULL
    
                                                          lock_and_cleanup_extent_if_need()
                                                            --> returns 0 and does not lock
                                                                range because it starts
                                                                at current i_size / eof
    
                                                          --> cached_state remains NULL
    
                                                          btrfs_dirty_pages()
                                                            btrfs_set_extent_delalloc()
                                                              (...)
                                                              __set_extent_bit()
    
                                                                --> splits extent state for range
                                                                    [1Mb, LLONG_MAX[ and now we
                                                                    have 2 extent states:
    
                                                                    --> one for the range
                                                                        [1Mb, 1Mb + 4Kb[ with
                                                                        EXTENT_LOCKED set
                                                                    --> another one for the range
                                                                        [1Mb + 4Kb, LLONG_MAX[ with
                                                                        EXTENT_LOCKED set as well
    
                                                                --> sets EXTENT_DELALLOC on the
                                                                    extent state for the range
                                                                    [1Mb, 1Mb + 4Kb[
                                                                --> caches extent state
                                                                    [1Mb, 1Mb + 4Kb[ into
                                                                    @cached_state because it has
                                                                    the bit EXTENT_LOCKED set
    
                                                        --> btrfs_buffered_write() ends up
                                                            with a non-NULL cached_state and
                                                            never calls anything to release its
                                                            reference on it, resulting in a
                                                            memory leak
    
    Fix this by calling free_extent_state() on cached_state if the range was
    not locked by lock_and_cleanup_extent_if_need().
    
    The same issue can happen if anything else other than fiemap locks a range
    that covers eof and beyond.
    
    This could be triggered, sporadically, by test case generic/561 from the
    fstests suite, which makes duperemove run concurrently with fsstress, and
    duperemove does plenty of calls to fiemap. When CONFIG_BTRFS_DEBUG is set
    the leak is reported in dmesg/syslog when removing the btrfs module with
    a message like the following:
    
      [77100.039461] BTRFS: state leak: start 6574080 end 6582271 state 16402 in tree 0 refs 1
    
    Otherwise (CONFIG_BTRFS_DEBUG not set) detectable with kmemleak.
    
    CC: stable@vger.kernel.org # 4.16+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 692aa7d55ff8dfccffc919541eee7e5986e82f95
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Jul 4 16:24:19 2019 +0100

    Btrfs: fix inode cache block reserve leak on failure to allocate data space
    
    [ Upstream commit 29d47d00e0ae61668ee0c5d90bef2893c8abbafa ]
    
    If we failed to allocate the data extent(s) for the inode space cache, we
    were bailing out without releasing the previously reserved metadata. This
    was triggering the following warnings when unmounting a filesystem:
    
      $ cat -n fs/btrfs/inode.c
      (...)
      9268  void btrfs_destroy_inode(struct inode *inode)
      9269  {
      (...)
      9276          WARN_ON(BTRFS_I(inode)->block_rsv.reserved);
      9277          WARN_ON(BTRFS_I(inode)->block_rsv.size);
      (...)
      9281          WARN_ON(BTRFS_I(inode)->csum_bytes);
      9282          WARN_ON(BTRFS_I(inode)->defrag_bytes);
      (...)
    
    Several fstests test cases triggered this often, such as generic/083,
    generic/102, generic/172, generic/269 and generic/300 at least, producing
    stack traces like the following in dmesg/syslog:
    
      [82039.079546] WARNING: CPU: 2 PID: 13167 at fs/btrfs/inode.c:9276 btrfs_destroy_inode+0x203/0x270 [btrfs]
      (...)
      [82039.081543] CPU: 2 PID: 13167 Comm: umount Tainted: G        W         5.2.0-rc4-btrfs-next-50 #1
      [82039.081912] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.2-0-gf9626ccb91-prebuilt.qemu-project.org 04/01/2014
      [82039.082673] RIP: 0010:btrfs_destroy_inode+0x203/0x270 [btrfs]
      (...)
      [82039.083913] RSP: 0018:ffffac0b426a7d30 EFLAGS: 00010206
      [82039.084320] RAX: ffff8ddf77691158 RBX: ffff8dde29b34660 RCX: 0000000000000002
      [82039.084736] RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8dde29b34660
      [82039.085156] RBP: ffff8ddf5fbec000 R08: 0000000000000000 R09: 0000000000000000
      [82039.085578] R10: ffffac0b426a7c90 R11: ffffffffb9aad768 R12: ffffac0b426a7db0
      [82039.086000] R13: ffff8ddf5fbec0a0 R14: dead000000000100 R15: 0000000000000000
      [82039.086416] FS:  00007f8db96d12c0(0000) GS:ffff8de036b00000(0000) knlGS:0000000000000000
      [82039.086837] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [82039.087253] CR2: 0000000001416108 CR3: 00000002315cc001 CR4: 00000000003606e0
      [82039.087672] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      [82039.088089] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      [82039.088504] Call Trace:
      [82039.088918]  destroy_inode+0x3b/0x70
      [82039.089340]  btrfs_free_fs_root+0x16/0xa0 [btrfs]
      [82039.089768]  btrfs_free_fs_roots+0xd8/0x160 [btrfs]
      [82039.090183]  ? wait_for_completion+0x65/0x1a0
      [82039.090607]  close_ctree+0x172/0x370 [btrfs]
      [82039.091021]  generic_shutdown_super+0x6c/0x110
      [82039.091427]  kill_anon_super+0xe/0x30
      [82039.091832]  btrfs_kill_super+0x12/0xa0 [btrfs]
      [82039.092233]  deactivate_locked_super+0x3a/0x70
      [82039.092636]  cleanup_mnt+0x3b/0x80
      [82039.093039]  task_work_run+0x93/0xc0
      [82039.093457]  exit_to_usermode_loop+0xfa/0x100
      [82039.093856]  do_syscall_64+0x162/0x1d0
      [82039.094244]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [82039.094634] RIP: 0033:0x7f8db8fbab37
      (...)
      [82039.095876] RSP: 002b:00007ffdce35b468 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      [82039.096290] RAX: 0000000000000000 RBX: 0000560d20b00060 RCX: 00007f8db8fbab37
      [82039.096700] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000560d20b00240
      [82039.097110] RBP: 0000560d20b00240 R08: 0000560d20b00270 R09: 0000000000000015
      [82039.097522] R10: 00000000000006b4 R11: 0000000000000246 R12: 00007f8db94bce64
      [82039.097937] R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffdce35b6f0
      [82039.098350] irq event stamp: 0
      [82039.098750] hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      [82039.099150] hardirqs last disabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.099545] softirqs last  enabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.099925] softirqs last disabled at (0): [<0000000000000000>] 0x0
      [82039.100292] ---[ end trace f2521afa616ddccc ]---
      [82039.100707] WARNING: CPU: 2 PID: 13167 at fs/btrfs/inode.c:9277 btrfs_destroy_inode+0x1ac/0x270 [btrfs]
      (...)
      [82039.103050] CPU: 2 PID: 13167 Comm: umount Tainted: G        W         5.2.0-rc4-btrfs-next-50 #1
      [82039.103428] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.2-0-gf9626ccb91-prebuilt.qemu-project.org 04/01/2014
      [82039.104203] RIP: 0010:btrfs_destroy_inode+0x1ac/0x270 [btrfs]
      (...)
      [82039.105461] RSP: 0018:ffffac0b426a7d30 EFLAGS: 00010206
      [82039.105866] RAX: ffff8ddf77691158 RBX: ffff8dde29b34660 RCX: 0000000000000002
      [82039.106270] RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8dde29b34660
      [82039.106673] RBP: ffff8ddf5fbec000 R08: 0000000000000000 R09: 0000000000000000
      [82039.107078] R10: ffffac0b426a7c90 R11: ffffffffb9aad768 R12: ffffac0b426a7db0
      [82039.107487] R13: ffff8ddf5fbec0a0 R14: dead000000000100 R15: 0000000000000000
      [82039.107894] FS:  00007f8db96d12c0(0000) GS:ffff8de036b00000(0000) knlGS:0000000000000000
      [82039.108309] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [82039.108723] CR2: 0000000001416108 CR3: 00000002315cc001 CR4: 00000000003606e0
      [82039.109146] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      [82039.109567] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      [82039.109989] Call Trace:
      [82039.110405]  destroy_inode+0x3b/0x70
      [82039.110830]  btrfs_free_fs_root+0x16/0xa0 [btrfs]
      [82039.111257]  btrfs_free_fs_roots+0xd8/0x160 [btrfs]
      [82039.111675]  ? wait_for_completion+0x65/0x1a0
      [82039.112101]  close_ctree+0x172/0x370 [btrfs]
      [82039.112519]  generic_shutdown_super+0x6c/0x110
      [82039.112988]  kill_anon_super+0xe/0x30
      [82039.113439]  btrfs_kill_super+0x12/0xa0 [btrfs]
      [82039.113861]  deactivate_locked_super+0x3a/0x70
      [82039.114278]  cleanup_mnt+0x3b/0x80
      [82039.114685]  task_work_run+0x93/0xc0
      [82039.115083]  exit_to_usermode_loop+0xfa/0x100
      [82039.115476]  do_syscall_64+0x162/0x1d0
      [82039.115863]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [82039.116254] RIP: 0033:0x7f8db8fbab37
      (...)
      [82039.117463] RSP: 002b:00007ffdce35b468 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      [82039.117882] RAX: 0000000000000000 RBX: 0000560d20b00060 RCX: 00007f8db8fbab37
      [82039.118330] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000560d20b00240
      [82039.118743] RBP: 0000560d20b00240 R08: 0000560d20b00270 R09: 0000000000000015
      [82039.119159] R10: 00000000000006b4 R11: 0000000000000246 R12: 00007f8db94bce64
      [82039.119574] R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffdce35b6f0
      [82039.119987] irq event stamp: 0
      [82039.120387] hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      [82039.120787] hardirqs last disabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.121182] softirqs last  enabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.121563] softirqs last disabled at (0): [<0000000000000000>] 0x0
      [82039.121933] ---[ end trace f2521afa616ddccd ]---
      [82039.122353] WARNING: CPU: 2 PID: 13167 at fs/btrfs/inode.c:9278 btrfs_destroy_inode+0x1bc/0x270 [btrfs]
      (...)
      [82039.124606] CPU: 2 PID: 13167 Comm: umount Tainted: G        W         5.2.0-rc4-btrfs-next-50 #1
      [82039.125008] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.2-0-gf9626ccb91-prebuilt.qemu-project.org 04/01/2014
      [82039.125801] RIP: 0010:btrfs_destroy_inode+0x1bc/0x270 [btrfs]
      (...)
      [82039.126998] RSP: 0018:ffffac0b426a7d30 EFLAGS: 00010202
      [82039.127399] RAX: ffff8ddf77691158 RBX: ffff8dde29b34660 RCX: 0000000000000002
      [82039.127803] RDX: 0000000000000001 RSI: 0000000000000001 RDI: ffff8dde29b34660
      [82039.128206] RBP: ffff8ddf5fbec000 R08: 0000000000000000 R09: 0000000000000000
      [82039.128611] R10: ffffac0b426a7c90 R11: ffffffffb9aad768 R12: ffffac0b426a7db0
      [82039.129020] R13: ffff8ddf5fbec0a0 R14: dead000000000100 R15: 0000000000000000
      [82039.129428] FS:  00007f8db96d12c0(0000) GS:ffff8de036b00000(0000) knlGS:0000000000000000
      [82039.129846] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [82039.130261] CR2: 0000000001416108 CR3: 00000002315cc001 CR4: 00000000003606e0
      [82039.130684] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      [82039.131142] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      [82039.131561] Call Trace:
      [82039.131990]  destroy_inode+0x3b/0x70
      [82039.132417]  btrfs_free_fs_root+0x16/0xa0 [btrfs]
      [82039.132844]  btrfs_free_fs_roots+0xd8/0x160 [btrfs]
      [82039.133262]  ? wait_for_completion+0x65/0x1a0
      [82039.133688]  close_ctree+0x172/0x370 [btrfs]
      [82039.134157]  generic_shutdown_super+0x6c/0x110
      [82039.134575]  kill_anon_super+0xe/0x30
      [82039.134997]  btrfs_kill_super+0x12/0xa0 [btrfs]
      [82039.135415]  deactivate_locked_super+0x3a/0x70
      [82039.135832]  cleanup_mnt+0x3b/0x80
      [82039.136239]  task_work_run+0x93/0xc0
      [82039.136637]  exit_to_usermode_loop+0xfa/0x100
      [82039.137029]  do_syscall_64+0x162/0x1d0
      [82039.137418]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [82039.137812] RIP: 0033:0x7f8db8fbab37
      (...)
      [82039.139059] RSP: 002b:00007ffdce35b468 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      [82039.139475] RAX: 0000000000000000 RBX: 0000560d20b00060 RCX: 00007f8db8fbab37
      [82039.139890] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000560d20b00240
      [82039.140302] RBP: 0000560d20b00240 R08: 0000560d20b00270 R09: 0000000000000015
      [82039.140719] R10: 00000000000006b4 R11: 0000000000000246 R12: 00007f8db94bce64
      [82039.141138] R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffdce35b6f0
      [82039.141597] irq event stamp: 0
      [82039.142043] hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      [82039.142443] hardirqs last disabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.142839] softirqs last  enabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.143220] softirqs last disabled at (0): [<0000000000000000>] 0x0
      [82039.143588] ---[ end trace f2521afa616ddcce ]---
      [82039.167472] WARNING: CPU: 3 PID: 13167 at fs/btrfs/extent-tree.c:10120 btrfs_free_block_groups+0x30d/0x460 [btrfs]
      (...)
      [82039.173800] CPU: 3 PID: 13167 Comm: umount Tainted: G        W         5.2.0-rc4-btrfs-next-50 #1
      [82039.174847] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.2-0-gf9626ccb91-prebuilt.qemu-project.org 04/01/2014
      [82039.177031] RIP: 0010:btrfs_free_block_groups+0x30d/0x460 [btrfs]
      (...)
      [82039.180397] RSP: 0018:ffffac0b426a7dd8 EFLAGS: 00010206
      [82039.181574] RAX: ffff8de010a1db40 RBX: ffff8de010a1db40 RCX: 0000000000170014
      [82039.182711] RDX: ffff8ddff4380040 RSI: ffff8de010a1da58 RDI: 0000000000000246
      [82039.183817] RBP: ffff8ddf5fbec000 R08: 0000000000000000 R09: 0000000000000000
      [82039.184925] R10: ffff8de036404380 R11: ffffffffb8a5ea00 R12: ffff8de010a1b2b8
      [82039.186090] R13: ffff8de010a1b2b8 R14: 0000000000000000 R15: dead000000000100
      [82039.187208] FS:  00007f8db96d12c0(0000) GS:ffff8de036b80000(0000) knlGS:0000000000000000
      [82039.188345] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [82039.189481] CR2: 00007fb044005170 CR3: 00000002315cc006 CR4: 00000000003606e0
      [82039.190674] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      [82039.191829] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      [82039.192978] Call Trace:
      [82039.194160]  close_ctree+0x19a/0x370 [btrfs]
      [82039.195315]  generic_shutdown_super+0x6c/0x110
      [82039.196486]  kill_anon_super+0xe/0x30
      [82039.197645]  btrfs_kill_super+0x12/0xa0 [btrfs]
      [82039.198696]  deactivate_locked_super+0x3a/0x70
      [82039.199619]  cleanup_mnt+0x3b/0x80
      [82039.200559]  task_work_run+0x93/0xc0
      [82039.201505]  exit_to_usermode_loop+0xfa/0x100
      [82039.202436]  do_syscall_64+0x162/0x1d0
      [82039.203339]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [82039.204091] RIP: 0033:0x7f8db8fbab37
      (...)
      [82039.206360] RSP: 002b:00007ffdce35b468 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      [82039.207132] RAX: 0000000000000000 RBX: 0000560d20b00060 RCX: 00007f8db8fbab37
      [82039.207906] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000560d20b00240
      [82039.208621] RBP: 0000560d20b00240 R08: 0000560d20b00270 R09: 0000000000000015
      [82039.209285] R10: 00000000000006b4 R11: 0000000000000246 R12: 00007f8db94bce64
      [82039.209984] R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffdce35b6f0
      [82039.210642] irq event stamp: 0
      [82039.211306] hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      [82039.211971] hardirqs last disabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.212643] softirqs last  enabled at (0): [<ffffffffb7884ff2>] copy_process.part.33+0x7f2/0x1f00
      [82039.213304] softirqs last disabled at (0): [<0000000000000000>] 0x0
      [82039.213875] ---[ end trace f2521afa616ddccf ]---
    
    Fix this by releasing the reserved metadata on failure to allocate data
    extent(s) for the inode cache.
    
    Fixes: 69fe2d75dd91d0 ("btrfs: make the delalloc block rsv per inode")
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8afda7774a365c1297009a3c3146acb71912829
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Oct 2 06:15:53 2019 -0400

    dm snapshot: rework COW throttling to fix deadlock
    
    [ Upstream commit b21555786f18cd77f2311ad89074533109ae3ffa ]
    
    Commit 721b1d98fb517a ("dm snapshot: Fix excessive memory usage and
    workqueue stalls") introduced a semaphore to limit the maximum number of
    in-flight kcopyd (COW) jobs.
    
    The implementation of this throttling mechanism is prone to a deadlock:
    
    1. One or more threads write to the origin device causing COW, which is
       performed by kcopyd.
    
    2. At some point some of these threads might reach the s->cow_count
       semaphore limit and block in down(&s->cow_count), holding a read lock
       on _origins_lock.
    
    3. Someone tries to acquire a write lock on _origins_lock, e.g.,
       snapshot_ctr(), which blocks because the threads at step (2) already
       hold a read lock on it.
    
    4. A COW operation completes and kcopyd runs dm-snapshot's completion
       callback, which ends up calling pending_complete().
       pending_complete() tries to resubmit any deferred origin bios. This
       requires acquiring a read lock on _origins_lock, which blocks.
    
       This happens because the read-write semaphore implementation gives
       priority to writers, meaning that as soon as a writer tries to enter
       the critical section, no readers will be allowed in, until all
       writers have completed their work.
    
       So, pending_complete() waits for the writer at step (3) to acquire
       and release the lock. This writer waits for the readers at step (2)
       to release the read lock and those readers wait for
       pending_complete() (the kcopyd thread) to signal the s->cow_count
       semaphore: DEADLOCK.
    
    The above was thoroughly analyzed and documented by Nikos Tsironis as
    part of his initial proposal for fixing this deadlock, see:
    https://www.redhat.com/archives/dm-devel/2019-October/msg00001.html
    
    Fix this deadlock by reworking COW throttling so that it waits without
    holding any locks. Add a variable 'in_progress' that counts how many
    kcopyd jobs are running. A function wait_for_in_progress() will sleep if
    'in_progress' is over the limit. It drops _origins_lock in order to
    avoid the deadlock.
    
    Reported-by: Guruswamy Basavaiah <guru2018@gmail.com>
    Reported-by: Nikos Tsironis <ntsironis@arrikto.com>
    Reviewed-by: Nikos Tsironis <ntsironis@arrikto.com>
    Tested-by: Nikos Tsironis <ntsironis@arrikto.com>
    Fixes: 721b1d98fb51 ("dm snapshot: Fix excessive memory usage and workqueue stalls")
    Cc: stable@vger.kernel.org # v5.0+
    Depends-on: 4a3f111a73a8c ("dm snapshot: introduce account_start_copy() and account_end_copy()")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 223f1af69da8a0f76d368df288761d74050fe6ba
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Oct 2 06:14:17 2019 -0400

    dm snapshot: introduce account_start_copy() and account_end_copy()
    
    [ Upstream commit a2f83e8b0c82c9500421a26c49eb198b25fcdea3 ]
    
    This simple refactoring moves code for modifying the semaphore cow_count
    into separate functions to prepare for changes that will extend these
    methods to provide for a more sophisticated mechanism for COW
    throttling.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Nikos Tsironis <ntsironis@arrikto.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ca37291020ef45454d9b106bee53eb8c7e8d967
Author: Sasha Levin <sashal@kernel.org>
Date:   Mon Oct 28 04:59:17 2019 -0400

    zram: fix race between backing_dev_show and backing_dev_store
    
    [ Upstream commit f7daefe4231e57381d92c2e2ad905a899c28e402 ]
    
    CPU0:                                  CPU1:
    backing_dev_show                       backing_dev_store
        ......                                 ......
        file = zram->backing_dev;
        down_read(&zram->init_lock);           down_read(&zram->init_init_lock)
        file_path(file, ...);                  zram->backing_dev = backing_dev;
        up_read(&zram->init_lock);             up_read(&zram->init_lock);
    
    gets the value of zram->backing_dev too early in backing_dev_show, which
    resultin the value being NULL at the beginning, and not NULL later.
    
    backtrace:
      d_path+0xcc/0x174
      file_path+0x10/0x18
      backing_dev_show+0x40/0xb4
      dev_attr_show+0x20/0x54
      sysfs_kf_seq_show+0x9c/0x10c
      kernfs_seq_show+0x28/0x30
      seq_read+0x184/0x488
      kernfs_fop_read+0x5c/0x1a4
      __vfs_read+0x44/0x128
      vfs_read+0xa0/0x138
      SyS_read+0x54/0xb4
    
    Link: http://lkml.kernel.org/r/1571046839-16814-1-git-send-email-chenwandun@huawei.com
    Signed-off-by: Chenwandun <chenwandun@huawei.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: <stable@vger.kernel.org>    [4.14+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
