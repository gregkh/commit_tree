commit 1990855918045c6bd2c8b7ad62917d141eed4332
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Jul 4 05:44:35 2012 +0100

    Linux 3.2.22

commit 63b03b04cb66b8780f4455898d32eb2d531f4e60
Author: Marek Lindner <lindner_marek@yahoo.de>
Date:   Wed Jun 20 17:16:05 2012 +0200

    batman-adv: only drop packets of known wifi clients
    
    commit 5870adc68fc39d81089f1e80efdf64b97e5c37a1 upstream.
    
    bug introduced with 59b699cdee039d75915c354da06937102d1f9a84
    
    If the source or destination mac address of an ethernet packet
    could not be found in the translation table the packet was
    dropped if AP isolation was turned on. This behavior would
    make it impossible to send broadcast packets over the mesh as
    the broadcast address will never enter the translation table.
    
    Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
    Acked-by: Antonio Quartulli <ordex@autistici.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9a0fcfb4bd9264ed3a442cb86097cea6aaa9772b
Author: Stuart Hayes <Stuart_Hayes@Dell.com>
Date:   Wed Jun 13 16:10:45 2012 -0500

    acpi_pad: fix power_saving thread deadlock
    
    commit 5f1601261050251a5ca293378b492a69d590dacb upstream.
    
    The acpi_pad driver can get stuck in destroy_power_saving_task()
    waiting for kthread_stop() to stop a power_saving thread.  The problem
    is that the isolated_cpus_lock mutex is owned when
    destroy_power_saving_task() calls kthread_stop(), which waits for a
    power_saving thread to end, and the power_saving thread tries to
    acquire the isolated_cpus_lock when it calls round_robin_cpu().  This
    patch fixes the issue by making round_robin_cpu() use its own mutex.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=42981
    
    Signed-off-by: Stuart Hayes <Stuart_Hayes@Dell.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a7a3681651e007451b164e93699b349ba64496d3
Author: Hui Wang <jason77.wang@gmail.com>
Date:   Wed Jun 27 16:19:18 2012 +0800

    can: flexcan: use be32_to_cpup to handle the value of dt entry
    
    commit 85f2f834e85517307f13e30e630a5fc86f757cb5 upstream.
    
    The freescale arm i.MX series platform can support this driver, and
    usually the arm cpu works in the little endian mode by default, while
    device tree entry value is stored in big endian format, we should use
    be32_to_cpup() to handle them, after modification, it can work well
    both on the le cpu and be cpu.
    
    Cc: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Hui Wang <jason77.wang@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 91bdefe9f3accde9507907a42fd8200712639a7f
Author: Ian Campbell <Ian.Campbell@citrix.com>
Date:   Mon Jun 25 22:48:41 2012 +0000

    xen/netfront: teardown the device before unregistering it.
    
    commit 6bc96d047fe32d76ef79f3195c52a542edf7c705 upstream.
    
    Fixes:
    [   15.470311] WARNING: at /local/scratch/ianc/devel/kernels/linux/fs/sysfs/file.c:498 sysfs_attr_ns+0x95/0xa0()
    [   15.470326] sysfs: kobject eth0 without dirent
    [   15.470333] Modules linked in:
    [   15.470342] Pid: 12, comm: xenwatch Not tainted 3.4.0-x86_32p-xenU #93
    and
    [    9.150554] BUG: unable to handle kernel paging request at 2b359000
    [    9.150577] IP: [<c1279561>] linkwatch_do_dev+0x81/0xc0
    [    9.150592] *pdpt = 000000002c3c9027 *pde = 0000000000000000
    [    9.150604] Oops: 0002 [#1] SMP
    [    9.150613] Modules linked in:
    
    This is http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=675190
    
    Reported-by: George Shuklin <george.shuklin@gmail.com>
    Signed-off-by: Ian Campbell <ian.campbell@citrix.com>
    Tested-by: William Dauchy <wdauchy@gmail.com>
    Cc: 675190@bugs.debian.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dd97160af2b4999b01284ea916e27e4eb1f0be22
Author: Craig Shelley <craig@microtron.org.uk>
Date:   Tue Jun 26 23:20:04 2012 +0100

    USB: CP210x Add 10 Device IDs
    
    commit 3fcc8f96829776cf181918461923d1e3bbb831a2 upstream.
    
    This patch adds 10 device IDs for CP210x based devices from the following manufacturers:
    Timewave
    Clipsal
    Festo
    Link Instruments
    
    Signed-off-by: Craig Shelley <craig@microtron.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5599861db4401a9497cf1821e3b0b88109756087
Author: Forest Bond <forest.bond@rapidrollout.com>
Date:   Fri Jun 22 10:30:38 2012 -0400

    USB: option: Add USB ID for Novatel Ovation MC551
    
    commit 065b07e7a14676f4138ce4619d229c0be5a74230 upstream.
    
    This device is also known as the Verizon USB551L.
    
    Signed-off-by: Forest Bond <forest.bond@rapidrollout.com>
    Acked-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd9b2140f5133b9637728295f64bcaf3a2d4a4c6
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Mon Jun 25 19:49:28 2012 +0200

    ALSA: hda - Add Realtek ALC280 codec support
    
    commit befae82e2906cb7155020876a531b0b8c6c8d8c8 upstream.
    
    This chip looks very similar to ALC269 and ALC27* variants. The bug reporter
    has verified that sound was working after this patch had been applied.
    
    BugLink: https://bugs.launchpad.net/bugs/1017017
    Tested-by: Richard Crossley <richardcrossley@o2.co.uk>
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5377775ec200160aa22c4a07e7b08c81559b3357
Author: Mel Gorman <mgorman@suse.de>
Date:   Thu Jun 21 11:36:50 2012 +0100

    stable: Allow merging of backports for serious user-visible performance issues
    
    commit eb3979f64d25120d60b9e761a4c58f70b1a02f86 upstream.
    
    Distribution kernel maintainers routinely backport fixes for users that
    were deemed important but not "something critical" as defined by the
    rules. To users of these kernels they are very serious and failing to fix
    them reduces the value of -stable.
    
    The problem is that the patches fixing these issues are often subtle and
    prone to regressions in other ways and need greater care and attention.
    To combat this, these "serious" backports should have a higher barrier
    to entry.
    
    This patch relaxes the rules to allow a distribution maintainer to merge
    to -stable a backported patch or small series that fixes a "serious"
    user-visible performance issue. They should include additional information on
    the user-visible bug affected and a link to the bugzilla entry if available.
    The same rules about the patch being already in mainline still apply.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 08c34214eb254df16580770bb100bf4c52c159af
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Fri Jun 22 10:58:06 2012 -0700

    x86, cpufeature: Rename X86_FEATURE_DTS to X86_FEATURE_DTHERM
    
    commit 4ad33411308596f2f918603509729922a1ec4411 upstream.
    
    It makes sense to label "Digital Thermal Sensor" as "DTS", but
    unfortunately the string "dts" was already used for "Debug Store", and
    /proc/cpuinfo is a user space ABI.
    
    Therefore, rename this to "dtherm".
    
    This conflict went into mainline via the hwmon tree without any x86
    maintainer ack, and without any kind of hint in the subject.
    
        a4659053 x86/hwmon: fix initialization of coretemp
    
    Reported-by: Jean Delvare <khali@linux-fr.org>
    Link: http://lkml.kernel.org/r/4FE34BCB.5050305@linux.intel.com
    Cc: Jan Beulich <JBeulich@suse.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    [bwh: Backported to 3.2: drop the coretemp device table change]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2a095a707c3ce005151ef2d31786508286c6d549
Author: Mandeep Singh Baines <msb@chromium.org>
Date:   Sun Jun 24 23:31:09 2012 +0200

    PM / Sleep: Prevent waiting forever on asynchronous suspend after abort
    
    commit 1f758b23177d588a71b96ad02990e715949bb82f upstream.
    
    __device_suspend() must always send a completion. Otherwise, parent
    devices will wait forever.
    
    Commit 1e2ef05b, "PM: Limit race conditions between runtime PM and
    system sleep (v2)", introduced a regression by short-circuiting the
    complete_all() for certain error cases.
    
    This patch fixes the bug by always signalling a completion.
    
    Addresses http://crosbug.com/31972
    
    Tested by injecting an abort.
    
    Signed-off-by: Mandeep Singh Baines <msb@chromium.org>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69d1e4c856fd460c37c3eb58996f69dc9add8111
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jun 21 15:30:41 2012 +0200

    drm/i915: Fix eDP blank screen after S3 resume on HP desktops
    
    commit 6db65cbb941f9d433659bdad02b307f6d94465df upstream.
    
    This patch fixes the problem on some HP desktop machines with eDP
    which give blank screens after S3 resume.
    
    It turned out that BLC_PWM_CPU_CTL must be written after
    BLC_PWM_CPU_CTL2.  Otherwise it doesn't take effect on these
    SNB machines.
    
    Tested with 3.5-rc3 kernel.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=49233
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8bd2f25de46602be06dbce1c5daca376cfd6ed8b
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Jun 21 14:55:22 2012 +0200

    drm/i915: rip out the PM_IIR WARN
    
    commit 58bf8062d0b293b8e1028e5b0342082002886bd4 upstream.
    
    After banging my head against this for the past few months, I still
    don't see how this could possible race under the premise that once an
    irq bit is masked in PM_IMR and reset in PM_IIR it won't show up again
    until we unmask it in PM_IMR.
    
    Still, we have reports of this being seen in the wild. Now Bspec has
    this little bit of lovely language in the PMIIR register:
    
    Public SNB Docs, Vol3Part2, 2.5.14 "PMIIR":
    
    "For each bit, the IIR can store a second pending interrupt if two or
    more of the same interrupt conditions occur before the first condition
    is cleared. Upon clearing the interrupt, the IIR bit will momentarily
    go low, then return high to indicate there is another interrupt
    pending."
    
    Now if we presume that PMIMR only prevent new interrupts from being
    queued, we could easily end up masking an interrupt and clearing it,
    but the 2nd pending interrupt setting the bit in PMIIR right away
    again. Which leads, the next time the irq handler runs, to hitting the
    WARN.
    
    Also, no bad side effects of this have ever been reported. And we've
    tracked down our issues with the gpu turbo getting stuck to bogus
    interrupt generation limits in th RPLIMIT register.
    
    So let's just rip out this WARN as bogus and call it a day. The only
    shallow thing here is that this 2-deep irq queue in the hw makes you
    wonder how racy the windows irq handler is ...
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=42907
    Acked-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2db9d57eedac7a46b62c73eec6a34bc7fa46e14e
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Sun Apr 15 11:56:03 2012 +0100

    drm/i915: Refactor the deferred PM_IIR handling into a single function
    
    commit fc6826d1dcd65f3d1e9a5377678882e4e08f02be upstream.
    
    This function, along with the registers and deferred work hander, are
    all shared with SandyBridge, IvyBridge and their variants. So remove the
    duplicate code into a single function.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Ben Widawsky <ben@bwidawsk.net>
    Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    [bwh: Backported to 3.2: adjust context; drop changes for Valley View]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3b8a121217806b5fcc2127298c52c0b499cc687b
Author: Will Deacon <will@kernel.org>
Date:   Fri Jun 8 16:16:04 2012 +0100

    oprofile: perf: use NR_CPUS instead or nr_cpumask_bits for static array
    
    commit e734568b675c985db2026848fefaac01c22977a5 upstream.
    
    The OProfile perf backend uses a static array to keep track of the
    perf events on the system. When compiling with CONFIG_CPUMASK_OFFSTACK=y
    && SMP, nr_cpumask_bits is not a compile-time constant and the build
    will fail with:
    
    oprofile_perf.c:28: error: variably modified 'perf_events' at file scope
    
    This patch uses NR_CPUs instead of nr_cpumask_bits for the array
    initialisation. If this causes space problems in the future, we can
    always move to dynamic allocation for the events array.
    
    Cc: Matt Fleming <matt@console-pimps.org>
    Reported-by: Russell King - ARM Linux <linux@arm.linux.org.uk>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Robert Richter <robert.richter@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 150005159b95061c2029f5ae63ead47f4e8607c3
Author: Dmitry Shmygov <shmygov@rambler.ru>
Date:   Wed Jun 20 15:51:40 2012 +0400

    USB: option: add id for Cellient MEN-200
    
    commit 1e2c4e59d2b8797973471b4a287a43eac12a0f40 upstream.
    
    Add vendor and product ID to option.c driver
    for Cellient MEN-200 EVDO Rev.B 450MHz data module.
    http://cellient.com
    
    Signed-off-by: Dmitry Shmygov <shmygov@rambler.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 53cee5b9ae7d411f5e2ebba2230937b598bf23e7
Author: Jose Miguel Goncalves <jose.goncalves@inov.pt>
Date:   Sat May 12 06:11:49 2012 +0900

    ARM: SAMSUNG: Fix for S3C2412 EBI memory mapping
    
    commit 3dca938656c7b0ff6b0717a5dde0f5f45e592be5 upstream.
    
    While upgrading the kernel on a S3C2412 based board I've noted
    that it was impossible to boot the board with a 2.6.32 or upper
    kernel. I've tracked down the problem to the EBI virtual memory
    mapping that is in conflict with the IO mapping definition in
    arch/arm/mach-s3c24xx/s3c2412.c.
    
    Signed-off-by: Jose Miguel Goncalves <jose.goncalves@inov.pt>
    Signed-off-by: Kukjin Kim <kgene.kim@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 468267529e13b35307410c8e7bd09bc41d063c79
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Jun 20 08:46:25 2012 +0200

    iwlwifi: remove log_event debugfs file debugging is disabled
    
    commit 882b7b7d11d65e8eccce738f1ce97cdfdb998f9f upstream.
    
    When debugging is disabled, the event log functions aren't
    functional in the way that the debugfs file expects. This
    leads to the debugfs access crashing. Since the event log
    functions aren't functional then, remove the debugfs file
    when CONFIG_IWLWIFI_DEBUG is not set.
    
    Reported-by: Lekensteyn <lekensteyn@gmail.com>
    Reviewed-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8ec8fdb5e62e6a7ff9956217b32dae6bc46328ec
Author: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
Date:   Mon Jun 18 13:13:30 2012 +0530

    ath9k_hw: avoid possible infinite loop in ar9003_get_pll_sqsum_dvc
    
    commit f18e3c6b67f448ec47b3a5b242789bd3d5644879 upstream.
    
    "ath9k: Fix softlockup in AR9485" with commit id
    64bc1239c790e051ff677e023435d770d2ffa174 fixed the reported
    issue, yet its better to avoid the possible infinite loop
    in ar9003_get_pll_sqsum_dvc by having a timeout as suggested
    by ath9k maintainers.
    http://www.spinics.net/lists/linux-wireless/msg92126.html.
    Based on my testing PLL's locking measurement is done in
    ~200us (2 iterations).
    
    Cc: Rolf Offermanns <rolf.offermanns@gmx.net>
    Cc: Sujith Manoharan <c_manoha@qca.qualcomm.com>
    Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com>
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 52c8c02cd596d6bd0a0a9313a6bc445b427f07d7
Author: Jonghwan Choi <jhbird.choi@samsung.com>
Date:   Wed Jun 20 17:05:37 2012 +0900

    ARM: SAMSUNG: Should check for IS_ERR(clk) instead of NULL
    
    commit a5d8f4765f0e92ef027492a8cb979c5b8d45f2c3 upstream.
    
    On the error condition clk_get() returns ERR_PTR().
    
    Signed-off-by: Jonghwan Choi <jhbird.choi@samsung.com>
    Signed-off-by: Kukjin Kim <kgene.kim@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6f4d747dfba5228b6041a9637fa0d944922ce72c
Author: Antonio Quartulli <ordex@autistici.org>
Date:   Fri Jun 29 22:58:03 2012 +0200

    batman-adv: fix skb->data assignment
    
    commit 2c995ff892313009e336ecc8ec3411022f5b1c39 upstream.
    
    skb_linearize(skb) possibly rearranges the skb internal data and then changes
    the skb->data pointer value. For this reason any other pointer in the code that
    was assigned skb->data before invoking skb_linearise(skb) must be re-assigned.
    
    In the current tt_query message handling code this is not done and therefore, in
    case of skb linearization, the pointer used to handle the packet header ends up
    in pointing to free'd memory.
    
    This bug was introduced by a73105b8d4c765d9ebfb664d0a66802127d8e4c7
    (batman-adv: improved client announcement mechanism)
    
    Signed-off-by: Antonio Quartulli <ordex@autistici.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [This patch is a backport for kernel versions 3.1 and 3.2 - Antonio]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4c42ad8fcf33fee7b949a6355b71a773843131b9
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Fri Jun 15 03:04:52 2012 +0200

    ath9k: fix a tx rate duration calculation bug
    
    commit 76591bea9714a58d8924154068c78d702eb2cb17 upstream.
    
    The rate pointer variable for a rate series is used in a loop before it is
    initialized. This went unnoticed because it was used earlier for the RTS/CTS
    rate. This bug can lead to the wrong PHY type being passed to the
    duration calculation function.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86f65876182c72dfae0f7d1ecd619f6fc39b1ff0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jun 15 00:20:44 2012 +0000

    can: c_can: precedence error in c_can_chip_config()
    
    commit d9cb9bd63eb27ac19f26a8547128c053f43a5da8 upstream.
    
    (CAN_CTRLMODE_LISTENONLY & CAN_CTRLMODE_LOOPBACK) is (0x02 & 0x01) which
    is zero so the condition is never true.  The intent here was to test
    that both flags were set.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc623ac31d51f12113e40085f08fbccf585220bd
Author: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
Date:   Wed Jun 13 21:28:09 2012 +0530

    ath9k: Fix softlockup in AR9485
    
    commit bcb7ad7bcbef030e6ba71ede1f9866368aca7c99 upstream.
    
    steps to recreate:
    load latest ath9k driver with AR9485
    stop the network-manager and wpa_supplicant
    bring the interface up
    
            Call Trace:
            [<ffffffffa0517490>] ? ath_hw_check+0xe0/0xe0 [ath9k]
            [<ffffffff812cd1e8>] __const_udelay+0x28/0x30
            [<ffffffffa03bae7a>] ar9003_get_pll_sqsum_dvc+0x4a/0x80 [ath9k_hw]
            [<ffffffffa05174eb>] ath_hw_pll_work+0x5b/0xe0 [ath9k]
            [<ffffffff810744fe>] process_one_work+0x11e/0x470
            [<ffffffff8107530f>] worker_thread+0x15f/0x360
            [<ffffffff810751b0>] ? manage_workers+0x230/0x230
            [<ffffffff81079af3>] kthread+0x93/0xa0
            [<ffffffff815fd3a4>] kernel_thread_helper+0x4/0x10
            [<ffffffff81079a60>] ? kthread_freezable_should_stop+0x70/0x70
            [<ffffffff815fd3a0>] ? gs_change+0x13/0x13
    
    ensure that the PLL-WAR for AR9485/AR9340 is executed only if the STA is
    associated (or) IBSS/AP mode had started beaconing. Ideally this WAR
    is needed to recover from some rare beacon stuck during stress testing.
    Before the STA is associated/IBSS had started beaconing, PLL4(0x1618c)
    always seem to have zero even though we had configured PLL3(0x16188) to
    query about PLL's locking status. When we keep on polling infinitely PLL4's
    8th bit(ie check for PLL locking measurements is done), machine hangs
    due to softlockup.
    
    fixes https://bugzilla.redhat.com/show_bug.cgi?id=811142
    
    Reported-by: Rolf Offermanns <rolf.offermanns@gmx.net>
    Tested-by: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d12076896619a6f628b59e5d411c2cbbfede5a27
Author: Eliad Peller <eliad@wizery.com>
Date:   Tue Jun 12 12:53:13 2012 +0300

    cfg80211: fix potential deadlock in regulatory
    
    commit fe20b39ec32e975f1054c0b7866c873a954adf05 upstream.
    
    reg_timeout_work() calls restore_regulatory_settings() which
    takes cfg80211_mutex.
    
    reg_set_request_processed() already holds cfg80211_mutex
    before calling cancel_delayed_work_sync(reg_timeout),
    so it might deadlock.
    
    Call the async cancel_delayed_work instead, in order
    to avoid the potential deadlock.
    
    This is the relevant lockdep warning:
    
    cfg80211: Calling CRDA for country: XX
    
    ======================================================
    [ INFO: possible circular locking dependency detected ]
    3.4.0-rc5-wl+ #26 Not tainted
    -------------------------------------------------------
    kworker/0:2/1391 is trying to acquire lock:
     (cfg80211_mutex){+.+.+.}, at: [<bf28ae00>] restore_regulatory_settings+0x34/0x418 [cfg80211]
    
    but task is already holding lock:
     ((reg_timeout).work){+.+...}, at: [<c0059e94>] process_one_work+0x1f0/0x480
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #2 ((reg_timeout).work){+.+...}:
           [<c008fd44>] validate_chain+0xb94/0x10f0
           [<c0090b68>] __lock_acquire+0x8c8/0x9b0
           [<c0090d40>] lock_acquire+0xf0/0x114
           [<c005b600>] wait_on_work+0x4c/0x154
           [<c005c000>] __cancel_work_timer+0xd4/0x11c
           [<c005c064>] cancel_delayed_work_sync+0x1c/0x20
           [<bf28b274>] reg_set_request_processed+0x50/0x78 [cfg80211]
           [<bf28bd84>] set_regdom+0x550/0x600 [cfg80211]
           [<bf294cd8>] nl80211_set_reg+0x218/0x258 [cfg80211]
           [<c03c7738>] genl_rcv_msg+0x1a8/0x1e8
           [<c03c6a00>] netlink_rcv_skb+0x5c/0xc0
           [<c03c7584>] genl_rcv+0x28/0x34
           [<c03c6720>] netlink_unicast+0x15c/0x228
           [<c03c6c7c>] netlink_sendmsg+0x218/0x298
           [<c03933c8>] sock_sendmsg+0xa4/0xc0
           [<c039406c>] __sys_sendmsg+0x1e4/0x268
           [<c0394228>] sys_sendmsg+0x4c/0x70
           [<c0013840>] ret_fast_syscall+0x0/0x3c
    
    -> #1 (reg_mutex){+.+.+.}:
           [<c008fd44>] validate_chain+0xb94/0x10f0
           [<c0090b68>] __lock_acquire+0x8c8/0x9b0
           [<c0090d40>] lock_acquire+0xf0/0x114
           [<c04734dc>] mutex_lock_nested+0x48/0x320
           [<bf28b2cc>] reg_todo+0x30/0x538 [cfg80211]
           [<c0059f44>] process_one_work+0x2a0/0x480
           [<c005a4b4>] worker_thread+0x1bc/0x2bc
           [<c0061148>] kthread+0x98/0xa4
           [<c0014af4>] kernel_thread_exit+0x0/0x8
    
    -> #0 (cfg80211_mutex){+.+.+.}:
           [<c008ed58>] print_circular_bug+0x68/0x2cc
           [<c008fb28>] validate_chain+0x978/0x10f0
           [<c0090b68>] __lock_acquire+0x8c8/0x9b0
           [<c0090d40>] lock_acquire+0xf0/0x114
           [<c04734dc>] mutex_lock_nested+0x48/0x320
           [<bf28ae00>] restore_regulatory_settings+0x34/0x418 [cfg80211]
           [<bf28b200>] reg_timeout_work+0x1c/0x20 [cfg80211]
           [<c0059f44>] process_one_work+0x2a0/0x480
           [<c005a4b4>] worker_thread+0x1bc/0x2bc
           [<c0061148>] kthread+0x98/0xa4
           [<c0014af4>] kernel_thread_exit+0x0/0x8
    
    other info that might help us debug this:
    
    Chain exists of:
      cfg80211_mutex --> reg_mutex --> (reg_timeout).work
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock((reg_timeout).work);
                                   lock(reg_mutex);
                                   lock((reg_timeout).work);
      lock(cfg80211_mutex);
    
     *** DEADLOCK ***
    
    2 locks held by kworker/0:2/1391:
     #0:  (events){.+.+.+}, at: [<c0059e94>] process_one_work+0x1f0/0x480
     #1:  ((reg_timeout).work){+.+...}, at: [<c0059e94>] process_one_work+0x1f0/0x480
    
    stack backtrace:
    [<c001b928>] (unwind_backtrace+0x0/0x12c) from [<c0471d3c>] (dump_stack+0x20/0x24)
    [<c0471d3c>] (dump_stack+0x20/0x24) from [<c008ef70>] (print_circular_bug+0x280/0x2cc)
    [<c008ef70>] (print_circular_bug+0x280/0x2cc) from [<c008fb28>] (validate_chain+0x978/0x10f0)
    [<c008fb28>] (validate_chain+0x978/0x10f0) from [<c0090b68>] (__lock_acquire+0x8c8/0x9b0)
    [<c0090b68>] (__lock_acquire+0x8c8/0x9b0) from [<c0090d40>] (lock_acquire+0xf0/0x114)
    [<c0090d40>] (lock_acquire+0xf0/0x114) from [<c04734dc>] (mutex_lock_nested+0x48/0x320)
    [<c04734dc>] (mutex_lock_nested+0x48/0x320) from [<bf28ae00>] (restore_regulatory_settings+0x34/0x418 [cfg80211])
    [<bf28ae00>] (restore_regulatory_settings+0x34/0x418 [cfg80211]) from [<bf28b200>] (reg_timeout_work+0x1c/0x20 [cfg80211])
    [<bf28b200>] (reg_timeout_work+0x1c/0x20 [cfg80211]) from [<c0059f44>] (process_one_work+0x2a0/0x480)
    [<c0059f44>] (process_one_work+0x2a0/0x480) from [<c005a4b4>] (worker_thread+0x1bc/0x2bc)
    [<c005a4b4>] (worker_thread+0x1bc/0x2bc) from [<c0061148>] (kthread+0x98/0xa4)
    [<c0061148>] (kthread+0x98/0xa4) from [<c0014af4>] (kernel_thread_exit+0x0/0x8)
    cfg80211: Calling CRDA to update world regulatory domain
    cfg80211: World regulatory domain updated:
    cfg80211:   (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp)
    cfg80211:   (2402000 KHz - 2472000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
    cfg80211:   (2457000 KHz - 2482000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
    cfg80211:   (2474000 KHz - 2494000 KHz @ 20000 KHz), (300 mBi, 2000 mBm)
    cfg80211:   (5170000 KHz - 5250000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
    cfg80211:   (5735000 KHz - 5835000 KHz @ 40000 KHz), (300 mBi, 2000 mBm)
    
    Signed-off-by: Eliad Peller <eliad@wizery.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 14dd08df3f117f3e9b70552fb68b2d3660f5c2e7
Author: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
Date:   Wed Jun 6 10:33:10 2012 +0530

    ath9k: Fix a WARNING on suspend/resume with IBSS
    
    commit 2031b4c2b4904f7448ab9e4bc6b9bf16e32709f5 upstream.
    
    this patch is dependent on the patch "cfg80211: fix interface
    combinations"
    
    In ath9k currently we have ADHOC interface as a single incompatible
    interface. when drv_add_interface is called during resume we got to
    consider number of vifs already present in addition to checking the
    drivers 'opmode' information about ADHOC.  we incorrectly assume
    an ADHOC interface is already present. Then we may miss some driver
    specific data for the ADHOC interface after resume.
    
    The above mentioned checks can be removed from the driver,
    as the patch 'cfg80211: fix interface combinations' ensures that
    if an interface type is not advertised by the driver in any of the
    interface combinations(via ieee80211_iface_combination) then it shall
    be treated as a single incompatible interface. Fixes the following
    warning on suspend/resume with ibss interface.
    
            ath: phy0: Cannot create ADHOC interface when other
            interfaces already exist.
            WARNING: at net/mac80211/driver-ops.h:12
            ieee80211_reconfig+0x1882/0x1ca0 [mac80211]()
            Hardware name: 2842RK1
            wlan2:  Failed check-sdata-in-driver check, flags: 0x0
    
            Call Trace:
            [<c01361b2>] warn_slowpath_common+0x72/0xa0
            [<f8aaa7c2>] ? ieee80211_reconfig+0x1882/0x1ca0
            [mac80211]
            [<f8aaa7c2>] ? ieee80211_reconfig+0x1882/0x1ca0
            [mac80211]
            [<c0136283>] warn_slowpath_fmt+0x33/0x40
            [<f8aaa7c2>] ieee80211_reconfig+0x1882/0x1ca0 [mac80211]
            [<c06c1d1a>] ? mutex_lock_nested+0x23a/0x2f0
            [<f8a95097>] ieee80211_resume+0x27/0x70 [mac80211]
            [<fd177edf>] wiphy_resume+0x8f/0xa0 [cfg80211]
    
    Cc: Rajkumar Manoharan <rmanohar@qca.qualcomm.com>
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c2ddd0a4c322e21255b630573b4eec0d9dd2297b
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Sat May 12 01:43:12 2012 +0100

    dm thin: reinstate missing mempool_free in cell_release_singleton
    
    commit 03aaae7cdc71bc306888440b1f569d463e917b6d upstream.
    
    Fix a significant memory leak inadvertently introduced during
    simplification of cell_release_singleton() in commit
    6f94a4c45a6f744383f9f695dde019998db3df55 ("dm thin: fix stacked bi_next
    usage").
    
    A cell's hlist_del() must be accompanied by a mempool_free().
    Use __cell_release() to do this, like before.
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6fd8c58dd9675aa0f984c9a1c604a4a8d9ca4c3b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Jun 26 12:12:30 2012 +1000

    drm/nouveau/fbcon: using nv_two_heads is not a good idea
    
    commit 9bd0c15fcfb42f6245447c53347d65ad9e72080b upstream.
    
    nv_two_heads() was never meant to be used outside of pre-nv50 code.  The
    code checks for >= NV_10 for 2 CRTCs, then downgrades a few specific
    chipsets to 1 CRTC based on (pci_device & 0x0ff0).
    
    The breakage example seen is on GTX 560Ti, with a pciid of 0x1200, which
    gets detected as an NV20 (0x020x) with 1 CRTC by nv_two_heads(), causing
    memory corruption because there's actually 2 CRTCs..
    
    This switches fbcon to use the CRTC count directly from the mode_config
    structure, which will also fix the same issue on Kepler boards which have
    4 CRTCs.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 707799fd0d6ccc157f40d9a6685e97a65bea7b71
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Tue Jun 19 11:33:06 2012 +0200

    drm/edid: don't return stack garbage from supports_rb
    
    commit b196a4980ff7bb54db478e2a408dc8b12be15304 upstream.
    
    We need to initialize this to false, because the is_rb callback only
    ever sets it to true.
    
    Noticed while reading through the code.
    
    Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Adam Jackson <ajax@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 64ae8cf31b7f37c289a08ca679770739a13d18a9
Author: Michael Krufky <mkrufky@linuxtv.org>
Date:   Fri May 25 09:29:12 2012 -0300

    smsusb: add autodetection support for USB ID 2040:f5a0
    
    commit 3e1141e2ce5667301a74ca2ef396d9bd5e995f7f upstream.
    
    Signed-off-by: Michael Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2b1e0f0a1618b62738eb86eb67eecbdebd491a0c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue May 22 11:24:05 2012 -0300

    gspca-core: Fix buffers staying in queued state after a stream_off
    
    commit af05ef01e9cde84620c6855a8d8ab9c8a1db9009 upstream.
    
    This fixes a regression introduced by commit f7059ea and should be
    backported to all supported stable kernels which have this commit.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Tested-by: Antonio Ospite <ospite@studenti.unina.it>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c4a08668a15a03370b3ba7cae49d1017f2c8434d
Author: wwang <wei_wang@realsil.com.cn>
Date:   Tue Mar 27 16:43:11 2012 +0800

    staging:rts_pstor:Fix possible panic by NULL pointer dereference
    
    commit 0d05568ac79bfc595f1eadc3e0fd7a20a45f7b69 upstream.
    
    rtsx_transport.c (rtsx_transfer_sglist_adma_partial):
    pointer struct scatterlist *sg, which is mapped in dma_map_sg,
    is used as an iterator in later transfer operation. It is corrupted and
    passed to dma_unmap_sg, thus causing fatal unmap of some erroneous address.
    Fix it by duplicating *sg_ptr for iterating.
    
    Signed-off-by: wwang <wei_wang@realsil.com.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86d94bc5ca0b9283cae6dfa34b259d22200b4e3a
Author: Eric Anholt <eric@anholt.net>
Date:   Thu Dec 22 14:54:59 2011 -0800

    drm/i915: Do the fallback non-IRQ wait in ring throttle, too.
    
    commit 7ea29b13e5e3e1e61e612349eb0366efdb6457f3 upstream.
    
    As a workaround for IRQ synchronization issues in the gen7 BLT ring,
    we want to turn the two wait functions into polling loops.
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Tested-by: Eugeni Dodonov <eugeni.dodonov@intel.com>
    Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com>
    Acked-by: Kenneth Graunke <kenneth@whitecape.org>
    Signed-off-by: Keith Packard <keithp@keithp.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4cf6a9718fc616a246b88d78ec08d646f173af86
Author: Chris Boot <bootc@bootc.net>
Date:   Tue Apr 24 07:24:58 2012 +0000

    e1000e: Remove special case for 82573/82574 ASPM L1 disablement
    
    commit 59aed95263bdd0e2b48eb9be5a94346d2d4abf90 upstream.
    
    For the 82573, ASPM L1 gets disabled wholesale so this special-case code
    is not required. For the 82574 the previous patch does the same as for
    the 82573, disabling L1 on the adapter. Thus, this code is no longer
    required and can be removed.
    
    Signed-off-by: Chris Boot <bootc@bootc.net>
    Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7b4e7391a0430be7e1a5c4acaf3e16ed268ebb35
Author: Chris Boot <bootc@bootc.net>
Date:   Tue Apr 24 07:24:52 2012 +0000

    e1000e: Disable ASPM L1 on 82574
    
    commit id d4a4206ebbaf48b55803a7eb34e330530d83a889
    
    ASPM on the 82574 causes trouble. Currently the driver disables L0s for
    this NIC but only disables L1 if the MTU is >1500. This patch simply
    causes L1 to be disabled regardless of the MTU setting.
    
    Signed-off-by: Chris Boot <bootc@bootc.net>
    Cc: "Wyborny, Carolyn" <carolyn.wyborny@intel.com>
    Cc: Nix <nix@esperi.org.uk>
    Link: https://lkml.org/lkml/2012/3/19/362
    Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com>
    [Jeff Kirsher: Backport to 3.2-3.4 kernels]
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dbc50a3f8f5575a8559621524f40a0e7f1d64907
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Feb 8 13:34:13 2012 +0000

    drm/i915: Remove use of the autoreported ringbuffer HEAD position
    
    This is a revert of 6aa56062eaba67adfb247cded244fd877329588d.
    
    This was originally introduced to workaround reads of the ringbuffer
    registers returning 0 on SandyBridge causing hangs due to ringbuffer
    overflow. The root cause here was reads through the GT powerwell require
    the forcewake dance, something we only learnt of later. Now it appears
    that reading the reported head position from the HWS is returning
    garbage, leading once again to hangs.
    
    For example, on q35 the autoreported head reports:
      [  217.975608] head now 00010000, actual 00010000
      [  436.725613] head now 00200000, actual 00200000
      [  462.956033] head now 00210000, actual 00210010
      [  485.501409] head now 00400000, actual 00400020
      [  508.064280] head now 00410000, actual 00410000
      [  530.576078] head now 00600000, actual 00600020
      [  553.273489] head now 00610000, actual 00610018
    which appears reasonably sane. In contrast, if we look at snb:
      [  141.970680] head now 00e10000, actual 00008238
      [  141.974062] head now 02734000, actual 000083c8
      [  141.974425] head now 00e10000, actual 00008488
      [  141.980374] head now 032b5000, actual 000088b8
      [  141.980885] head now 03271000, actual 00008950
      [  142.040628] head now 02101000, actual 00008b40
      [  142.180173] head now 02734000, actual 00009050
      [  142.181090] head now 00000000, actual 00000ae0
      [  142.183737] head now 02734000, actual 00009050
    
    In addition, the automatic reporting of the head position is scheduled
    to be defeatured in the future. It has no more utility, remove it.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=45492
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Tested-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
    (cherry picked from commit 5d031e5b633d910f35e6e0abce94d9d842390006)
    Signed-off-by: Timo Aaltonen <timo.aaltonen@canonical.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac6dd8cadaba2e0eba9015edf6b18cc4c88d4eca
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Apr 3 17:58:35 2012 +0100

    drm/i915: Finish any pending operations on the framebuffer before disabling
    
    Similar to the case where we are changing from one framebuffer to
    another, we need to be sure that there are no pending WAIT_FOR_EVENTs on
    the pipe for the current framebuffer before switching. If we disable the
    pipe, and then try to execute a WAIT_FOR_EVENT it will block
    indefinitely and cause a GPU hang.
    
    We attempted to fix this in commit 85345517fe6d4de27b0d6ca19fef9d28ac947c4a
    (drm/i915: Retire any pending operations on the old scanout when switching)
    for the case of mode switching, but this leaves the condition where we
    are switching off the pipe vulnerable.
    
    There still remains the race condition were a display may be unplugged,
    switched off by the core, a uevent sent to notify the DDX and the DDX
    may issue a WAIT_FOR_EVENT before it processes the uevent. This window
    does not exist if the pipe is only switched off in response to the
    uevent. Time to make sure that is so...
    
    Reported-by: Francis Leblanc <Francis.Leblanc-Lebeau@verint.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=36515
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=45413
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com>
    [danvet: fixup spelling in comment, noticed by Eugeni.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    (cherry picked from commit 14667a4bde4361b7ac420d68a2e9e9b9b2df5231)
    Signed-off-by: Timo Aaltonen <timo.aaltonen@canonical.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a49f6b0bcf088e45cd2ea691ff575132cb3dbb3a
Author: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
Date:   Wed Jun 20 12:52:57 2012 -0700

    nilfs2: ensure proper cache clearing for gc-inodes
    
    commit fbb24a3a915f105016f1c828476be11aceac8504 upstream.
    
    A gc-inode is a pseudo inode used to buffer the blocks to be moved by
    garbage collection.
    
    Block caches of gc-inodes must be cleared every time a garbage collection
    function (nilfs_clean_segments) completes.  Otherwise, stale blocks
    buffered in the caches may be wrongly reused in successive calls of the GC
    function.
    
    For user files, this is not a problem because their gc-inodes are
    distinguished by a checkpoint number as well as an inode number.  They
    never buffer different blocks if either an inode number, a checkpoint
    number, or a block offset differs.
    
    However, gc-inodes of sufile, cpfile and DAT file can store different data
    for the same block offset.  Thus, the nilfs_clean_segments function can
    move incorrect block for these meta-data files if an old block is cached.
    I found this is really causing meta-data corruption in nilfs.
    
    This fixes the issue by ensuring cache clear of gc-inodes and resolves
    reported GC problems including checkpoint file corruption, b-tree
    corruption, and the following warning during GC.
    
      nilfs_palloc_freev: entry number 307234 already freed.
      ...
    
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dcad89e6e4107f5639141ef4e9b25263438ed8b3
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Wed Jun 20 12:52:57 2012 -0700

    thp: avoid atomic64_read in pmd_read_atomic for 32bit PAE
    
    commit e4eed03fd06578571c01d4f1478c874bb432c815 upstream.
    
    In the x86 32bit PAE CONFIG_TRANSPARENT_HUGEPAGE=y case while holding the
    mmap_sem for reading, cmpxchg8b cannot be used to read pmd contents under
    Xen.
    
    So instead of dealing only with "consistent" pmdvals in
    pmd_none_or_trans_huge_or_clear_bad() (which would be conceptually
    simpler) we let pmd_none_or_trans_huge_or_clear_bad() deal with pmdvals
    where the low 32bit and high 32bit could be inconsistent (to avoid having
    to use cmpxchg8b).
    
    The only guarantee we get from pmd_read_atomic is that if the low part of
    the pmd was found null, the high part will be null too (so the pmd will be
    considered unstable).  And if the low part of the pmd is found "stable"
    later, then it means the whole pmd was read atomically (because after a
    pmd is stable, neither MADV_DONTNEED nor page faults can alter it anymore,
    and we read the high part after the low part).
    
    In the 32bit PAE x86 case, it is enough to read the low part of the pmdval
    atomically to declare the pmd as "stable" and that's true for THP and no
    THP, furthermore in the THP case we also have a barrier() that will
    prevent any inconsistent pmdvals to be cached by a later re-read of the
    *pmd.
    
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Jonathan Nieder <jrnieder@gmail.com>
    Cc: Ulrich Obergfell <uobergfe@redhat.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Larry Woodman <lwoodman@redhat.com>
    Cc: Petr Matousek <pmatouse@redhat.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Jan Beulich <jbeulich@suse.com>
    Cc: KOSAKI Motohiro <kosaki.motohiro@gmail.com>
    Tested-by: Andrew Jones <drjones@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 02d1854e95c573df7b4463acbabff03b56dcc828
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Tue May 29 15:06:49 2012 -0700

    mm: pmd_read_atomic: fix 32bit PAE pmd walk vs pmd_populate SMP race condition
    
    commit 26c191788f18129af0eb32a358cdaea0c7479626 upstream.
    
    When holding the mmap_sem for reading, pmd_offset_map_lock should only
    run on a pmd_t that has been read atomically from the pmdp pointer,
    otherwise we may read only half of it leading to this crash.
    
    PID: 11679  TASK: f06e8000  CPU: 3   COMMAND: "do_race_2_panic"
     #0 [f06a9dd8] crash_kexec at c049b5ec
     #1 [f06a9e2c] oops_end at c083d1c2
     #2 [f06a9e40] no_context at c0433ded
     #3 [f06a9e64] bad_area_nosemaphore at c043401a
     #4 [f06a9e6c] __do_page_fault at c0434493
     #5 [f06a9eec] do_page_fault at c083eb45
     #6 [f06a9f04] error_code (via page_fault) at c083c5d5
        EAX: 01fb470c EBX: fff35000 ECX: 00000003 EDX: 00000100 EBP:
        00000000
        DS:  007b     ESI: 9e201000 ES:  007b     EDI: 01fb4700 GS:  00e0
        CS:  0060     EIP: c083bc14 ERR: ffffffff EFLAGS: 00010246
     #7 [f06a9f38] _spin_lock at c083bc14
     #8 [f06a9f44] sys_mincore at c0507b7d
     #9 [f06a9fb0] system_call at c083becd
                             start           len
        EAX: ffffffda  EBX: 9e200000  ECX: 00001000  EDX: 6228537f
        DS:  007b      ESI: 00000000  ES:  007b      EDI: 003d0f00
        SS:  007b      ESP: 62285354  EBP: 62285388  GS:  0033
        CS:  0073      EIP: 00291416  ERR: 000000da  EFLAGS: 00000286
    
    This should be a longstanding bug affecting x86 32bit PAE without THP.
    Only archs with 64bit large pmd_t and 32bit unsigned long should be
    affected.
    
    With THP enabled the barrier() in pmd_none_or_trans_huge_or_clear_bad()
    would partly hide the bug when the pmd transition from none to stable,
    by forcing a re-read of the *pmd in pmd_offset_map_lock, but when THP is
    enabled a new set of problem arises by the fact could then transition
    freely in any of the none, pmd_trans_huge or pmd_trans_stable states.
    So making the barrier in pmd_none_or_trans_huge_or_clear_bad()
    unconditional isn't good idea and it would be a flakey solution.
    
    This should be fully fixed by introducing a pmd_read_atomic that reads
    the pmd in order with THP disabled, or by reading the pmd atomically
    with cmpxchg8b with THP enabled.
    
    Luckily this new race condition only triggers in the places that must
    already be covered by pmd_none_or_trans_huge_or_clear_bad() so the fix
    is localized there but this bug is not related to THP.
    
    NOTE: this can trigger on x86 32bit systems with PAE enabled with more
    than 4G of ram, otherwise the high part of the pmd will never risk to be
    truncated because it would be zero at all times, in turn so hiding the
    SMP race.
    
    This bug was discovered and fully debugged by Ulrich, quote:
    
    ----
    [..]
    pmd_none_or_trans_huge_or_clear_bad() loads the content of edx and
    eax.
    
        496 static inline int pmd_none_or_trans_huge_or_clear_bad(pmd_t
        *pmd)
        497 {
        498         /* depend on compiler for an atomic pmd read */
        499         pmd_t pmdval = *pmd;
    
                                    // edi = pmd pointer
    0xc0507a74 <sys_mincore+548>:   mov    0x8(%esp),%edi
    ...
                                    // edx = PTE page table high address
    0xc0507a84 <sys_mincore+564>:   mov    0x4(%edi),%edx
    ...
                                    // eax = PTE page table low address
    0xc0507a8e <sys_mincore+574>:   mov    (%edi),%eax
    
    [..]
    
    Please note that the PMD is not read atomically. These are two "mov"
    instructions where the high order bits of the PMD entry are fetched
    first. Hence, the above machine code is prone to the following race.
    
    -  The PMD entry {high|low} is 0x0000000000000000.
       The "mov" at 0xc0507a84 loads 0x00000000 into edx.
    
    -  A page fault (on another CPU) sneaks in between the two "mov"
       instructions and instantiates the PMD.
    
    -  The PMD entry {high|low} is now 0x00000003fda38067.
       The "mov" at 0xc0507a8e loads 0xfda38067 into eax.
    ----
    
    Reported-by: Ulrich Obergfell <uobergfe@redhat.com>
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Larry Woodman <lwoodman@redhat.com>
    Cc: Petr Matousek <pmatouse@redhat.com>
    Cc: Rik van Riel <riel@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 51b9f4cbf489c79d02e835f8b0819bb5f86f3660
Author: Henrik Rydberg <rydberg@euromail.se>
Date:   Thu Jun 7 04:54:29 2012 -0400

    hwmon: (applesmc) Limit key length in warning messages
    
    commit ac852edb47b15900886ba2564eeeb13b3b526e3e upstream.
    
    Key lookups may call read_smc() with a fixed-length key string,
    and if the lookup fails, trailing stack content may appear in the
    kernel log. Fixed with this patch.
    
    Signed-off-by: Henrik Rydberg <rydberg@euromail.se>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d01f95936e0c3902197307e6e62c2673fa629bf4
Author: Lubomir Schmidt <gentoo.lubomir@googlemail.com>
Date:   Fri Jun 15 15:12:17 2012 -0500

    staging: r8712u: Add new USB IDs
    
    commit 3026b0e942c65c65c8fc80d391d004228b52b916 upstream.
    
    There are two new devices for this driver.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 07cea1585dd90161b1f7fd7e96e0d5ea6e58dac0
Author: Peter Korsgaard <jacmet@sunsite.dk>
Date:   Tue Jun 12 08:27:04 2012 +0800

    hwrng: atmel-rng - fix data valid check
    
    commit c475c06f4bb689d6ad87d7512e036d6dface3160 upstream.
    
    Brown paper bag: Data valid is LSB of the ISR (status register), and NOT
    of ODATA (current random data word)!
    
    With this, rngtest is a lot happier. Before:
    
    rngtest 3
    Copyright (c) 2004 by Henrique de Moraes Holschuh
    This is free software; see the source for copying conditions.  There is NO warr.
    
    rngtest: starting FIPS tests...
    rngtest: bits received from input: 20000032
    rngtest: FIPS 140-2 successes: 3
    rngtest: FIPS 140-2 failures: 997
    rngtest: FIPS 140-2(2001-10-10) Monobit: 604
    rngtest: FIPS 140-2(2001-10-10) Poker: 996
    rngtest: FIPS 140-2(2001-10-10) Runs: 36
    rngtest: FIPS 140-2(2001-10-10) Long run: 0
    rngtest: FIPS 140-2(2001-10-10) Continuous run: 117
    rngtest: input channel speed: (min=622.371; avg=23682.481; max=28224.350)Kibitss
    rngtest: FIPS tests speed: (min=12.361; avg=12.718; max=12.861)Mibits/s
    rngtest: Program run time: 2331696 microsecondsx
    
    After:
    rngtest 3
    Copyright (c) 2004 by Henrique de Moraes Holschuh
    This is free software; see the source for copying conditions.  There is NO warr.
    
    rngtest: starting FIPS tests...
    rngtest: bits received from input: 20000032
    rngtest: FIPS 140-2 successes: 999
    rngtest: FIPS 140-2 failures: 1
    rngtest: FIPS 140-2(2001-10-10) Monobit: 0
    rngtest: FIPS 140-2(2001-10-10) Poker: 0
    rngtest: FIPS 140-2(2001-10-10) Runs: 1
    rngtest: FIPS 140-2(2001-10-10) Long run: 0
    rngtest: FIPS 140-2(2001-10-10) Continuous run: 0
    rngtest: input channel speed: (min=777.363; avg=43588.270; max=47870.711)Kibitss
    rngtest: FIPS tests speed: (min=11.943; avg=12.716; max=12.844)Mibits/s
    rngtest: Program run time: 1955282 microseconds
    
    Signed-off-by: Peter Korsgaard <jacmet@sunsite.dk>
    Reported-by: George Pontis <GPontis@z9.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4ce3278c947daff9a39b99255b278626eef1d8ee
Author: Chen Gong <gong.chen@linux.intel.com>
Date:   Tue May 8 20:40:12 2012 -0300

    edac: avoid mce decoding crash after edac driver unloaded
    
    commit e35fca4791fcdd43dc1fd769797df40c562ab491 upstream.
    
    Some edac drivers register themselves as mce decoders via
    notifier_chain. But in current notifier_chain implementation logic,
    it doesn't accept same notifier registered twice. If so, it will be
    wrong when adding/removing the element from the list. For example,
    on one SandyBridge platform, remove module sb_edac and then trigger
    one error, it will hit oops because it has no mce decoder registered
    but related notifier_chain still points to an invalid callback
    function. Here is an example:
    
    Call Trace:
     [<ffffffff8150ef6a>] atomic_notifier_call_chain+0x1a/0x20
     [<ffffffff8102b936>] mce_log+0x46/0x180
     [<ffffffff8102eaea>] apei_mce_report_mem_error+0x4a/0x60
     [<ffffffff812e19d2>] ghes_do_proc+0x192/0x210
     [<ffffffff812e2066>] ghes_proc+0x46/0x70
     [<ffffffff812e20d8>] ghes_notify_sci+0x48/0x80
     [<ffffffff8150ef05>] notifier_call_chain+0x55/0x80
     [<ffffffff81076f1a>] __blocking_notifier_call_chain+0x5a/0x80
     [<ffffffff812aea11>] ? acpi_os_wait_events_complete+0x23/0x23
     [<ffffffff81076f56>] blocking_notifier_call_chain+0x16/0x20
     [<ffffffff812ddc4d>] acpi_hed_notify+0x19/0x1b
     [<ffffffff812b16bd>] acpi_device_notify+0x19/0x1b
     [<ffffffff812beb38>] acpi_ev_notify_dispatch+0x67/0x7f
     [<ffffffff812aea3a>] acpi_os_execute_deferred+0x29/0x36
     [<ffffffff81069dc2>] process_one_work+0x132/0x450
     [<ffffffff8106bbcb>] worker_thread+0x17b/0x3c0
     [<ffffffff8106ba50>] ? manage_workers+0x120/0x120
     [<ffffffff81070aee>] kthread+0x9e/0xb0
     [<ffffffff81514724>] kernel_thread_helper+0x4/0x10
     [<ffffffff81070a50>] ? kthread_freezable_should_stop+0x70/0x70
     [<ffffffff81514720>] ? gs_change+0x13/0x13
    Code: f3 49 89 d4 45 85 ed 4d 89 c6 48 8b 0f 74 48 48 85 c9 75 17 eb 41
    0f 1f 80 00 00 00 00 41 83 ed 01 4c 89 f9 74 22 4d 85 ff 74 1d <4c> 8b
    79 08 4c 89 e2 48 89 de 48 89 cf ff 11 4d 85 f6 74 04 41
    RIP  [<ffffffff8150eef6>] notifier_call_chain+0x46/0x80
     RSP <ffff88042868fb20>
    CR2: ffffffffa01af838
    ---[ end trace 0100930068e73e6f ]---
    BUG: unable to handle kernel paging request at fffffffffffffff8
    IP: [<ffffffff810705b0>] kthread_data+0x10/0x20
    PGD 1a0d067 PUD 1a0e067 PMD 0
    Oops: 0000 [#2] SMP
    
    Only i7core_edac and sb_edac have such issues because they have more
    than one memory controller which means they have to register mce
    decoder many times.
    
    Signed-off-by: Chen Gong <gong.chen@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    [bwh: Backported to 3.2: drivers call atomic_notifier_chain_{,un}register()
     directly]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 10682d24d003b44cc4dac217047d26f9b210a514
Author: Olaf Hering <olaf@aepfle.de>
Date:   Thu May 31 16:40:06 2012 +0200

    Tools: hv: verify origin of netlink connector message
    
    commit bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c upstream.
    
    The SuSE security team suggested to use recvfrom instead of recv to be
    certain that the connector message is originated from kernel.
    
    CVE-2012-2669
    
    Signed-off-by: Olaf Hering <olaf@aepfle.de>
    Signed-off-by: Marcus Meissner <meissner@suse.de>
    Signed-off-by: Sebastian Krahmer <krahmer@suse.de>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f3853ace1a3eeb934ab739704285a20598ef0644
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Jun 5 18:16:31 2012 +0200

    staging:iio:ad7606: Re-add missing scale attribute
    
    commit 279bf2e57c30c9a4482b2b6ede11b31c41e35e78 upstream.
    
    Commit 50ac23be ("staging:iio:adc:ad7606 add local define for chan_spec
    structures.") accidentally removed the scale info_mask flag. This patch
    adds it back again.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2:
     - info_mask was completely gone rather than set to another flag
     - IIO_CHAN_INFO_SCALE_SHARED_BIT was not defined; write it out as a shift]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
